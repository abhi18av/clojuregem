s(:begin,
  s(:send, nil, :require,
    s(:str, "active_support/xml_mini")),
  s(:send, nil, :require,
    s(:str, "active_support/core_ext/hash/keys")),
  s(:send, nil, :require,
    s(:str, "active_support/core_ext/string/inflections")),
  s(:send, nil, :require,
    s(:str, "active_support/core_ext/object/to_param")),
  s(:send, nil, :require,
    s(:str, "active_support/core_ext/object/to_query")),
  s(:class,
    s(:const, nil, :Array), nil,
    s(:begin,
      s(:def, :to_sentence,
        s(:args,
          s(:optarg, :options,
            s(:hash))),
        s(:begin,
          s(:send,
            s(:lvar, :options), :assert_valid_keys,
            s(:sym, :words_connector),
            s(:sym, :two_words_connector),
            s(:sym, :last_word_connector),
            s(:sym, :locale)),
          s(:lvasgn, :default_connectors,
            s(:hash,
              s(:pair,
                s(:sym, :words_connector),
                s(:str, ", ")),
              s(:pair,
                s(:sym, :two_words_connector),
                s(:str, " and ")),
              s(:pair,
                s(:sym, :last_word_connector),
                s(:str, ", and ")))),
          s(:if,
            s(:defined?,
              s(:const, nil, :I18n)),
            s(:begin,
              s(:lvasgn, :i18n_connectors,
                s(:send,
                  s(:const, nil, :I18n), :translate,
                  s(:sym, :"support.array"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :locale),
                      s(:send,
                        s(:lvar, :options), :[],
                        s(:sym, :locale))),
                    s(:pair,
                      s(:sym, :default),
                      s(:hash))))),
              s(:send,
                s(:lvar, :default_connectors), :merge!,
                s(:lvar, :i18n_connectors))), nil),
          s(:lvasgn, :options,
            s(:send,
              s(:lvar, :default_connectors), :merge!,
              s(:lvar, :options))),
          s(:case,
            s(:send, nil, :length),
            s(:when,
              s(:int, 0),
              s(:str, "")),
            s(:when,
              s(:int, 1),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:self), :[],
                    s(:int, 0))))),
            s(:when,
              s(:int, 2),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:self), :[],
                    s(:int, 0))),
                s(:begin,
                  s(:send,
                    s(:lvar, :options), :[],
                    s(:sym, :two_words_connector))),
                s(:begin,
                  s(:send,
                    s(:self), :[],
                    s(:int, 1))))),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:self), :[],
                    s(:erange,
                      s(:int, 0),
                      s(:int, -1))), :join,
                  s(:send,
                    s(:lvar, :options), :[],
                    s(:sym, :words_connector)))),
              s(:begin,
                s(:send,
                  s(:lvar, :options), :[],
                  s(:sym, :last_word_connector))),
              s(:begin,
                s(:send,
                  s(:self), :[],
                  s(:int, -1))))))),
      s(:def, :to_formatted_s,
        s(:args,
          s(:optarg, :format,
            s(:sym, :default))),
        s(:case,
          s(:lvar, :format),
          s(:when,
            s(:sym, :db),
            s(:if,
              s(:send, nil, :empty?),
              s(:str, "null"),
              s(:send,
                s(:send, nil, :collect,
                  s(:block_pass,
                    s(:sym, :id))), :join,
                s(:str, ",")))),
          s(:send, nil, :to_default_s))),
      s(:send, nil, :alias_method,
        s(:sym, :to_default_s),
        s(:sym, :to_s)),
      s(:send, nil, :alias_method,
        s(:sym, :to_s),
        s(:sym, :to_formatted_s)),
      s(:def, :to_xml,
        s(:args,
          s(:optarg, :options,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Builder)), nil,
            s(:send, nil, :require,
              s(:str, "active_support/builder"))),
          s(:lvasgn, :options,
            s(:send,
              s(:lvar, :options), :dup)),
          s(:or_asgn,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :indent)),
            s(:int, 2)),
          s(:or_asgn,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :builder)),
            s(:send,
              s(:const,
                s(:const, nil, :Builder), :XmlMarkup), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :indent),
                  s(:send,
                    s(:lvar, :options), :[],
                    s(:sym, :indent)))))),
          s(:or_asgn,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :root)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:send, nil, :first), :class), :!=,
                  s(:const, nil, :Hash)),
                s(:block,
                  s(:send, nil, :all?),
                  s(:args,
                    s(:arg, :e)),
                  s(:send,
                    s(:lvar, :e), :is_a?,
                    s(:send,
                      s(:send, nil, :first), :class)))),
              s(:begin,
                s(:lvasgn, :underscored,
                  s(:send,
                    s(:const,
                      s(:const, nil, :ActiveSupport), :Inflector), :underscore,
                    s(:send,
                      s(:send,
                        s(:send, nil, :first), :class), :name))),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :ActiveSupport), :Inflector), :pluralize,
                    s(:lvar, :underscored)), :tr,
                  s(:str, "/"),
                  s(:str, "_"))),
              s(:str, "objects"))),
          s(:lvasgn, :builder,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :builder))),
          s(:if,
            s(:send,
              s(:lvar, :options), :delete,
              s(:sym, :skip_instruct)), nil,
            s(:send,
              s(:lvar, :builder), :instruct!)),
          s(:lvasgn, :root,
            s(:send,
              s(:const,
                s(:const, nil, :ActiveSupport), :XmlMini), :rename_key,
              s(:send,
                s(:send,
                  s(:lvar, :options), :[],
                  s(:sym, :root)), :to_s),
              s(:lvar, :options))),
          s(:lvasgn, :children,
            s(:or,
              s(:send,
                s(:lvar, :options), :delete,
                s(:sym, :children)),
              s(:send,
                s(:lvar, :root), :singularize))),
          s(:lvasgn, :attributes,
            s(:if,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :skip_types)),
              s(:hash),
              s(:hash,
                s(:pair,
                  s(:sym, :type),
                  s(:str, "array"))))),
          s(:if,
            s(:send, nil, :empty?),
            s(:send,
              s(:lvar, :builder), :tag!,
              s(:lvar, :root),
              s(:lvar, :attributes)),
            s(:block,
              s(:send,
                s(:lvar, :builder), :tag!,
                s(:lvar, :root),
                s(:lvar, :attributes)),
              s(:args),
              s(:begin,
                s(:block,
                  s(:send, nil, :each),
                  s(:args,
                    s(:arg, :value)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :ActiveSupport), :XmlMini), :to_tag,
                    s(:lvar, :children),
                    s(:lvar, :value),
                    s(:lvar, :options))),
                s(:if,
                  s(:send, nil, :block_given?),
                  s(:yield,
                    s(:lvar, :builder)), nil)))))))))
