s(:class,
  s(:const, nil, :Array), nil,
  s(:begin,
    s(:def, :in_groups_of,
      s(:args,
        s(:arg, :number),
        s(:optarg, :fill_with,
          s(:nil))),
      s(:begin,
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :number), :to_i), :<=,
            s(:int, 0)),
          s(:send, nil, :raise,
            s(:const, nil, :ArgumentError),
            s(:dstr,
              s(:str, "Group size must be a positive integer, was "),
              s(:begin,
                s(:send,
                  s(:lvar, :number), :inspect)))), nil),
        s(:if,
          s(:send,
            s(:lvar, :fill_with), :==,
            s(:false)),
          s(:lvasgn, :collection,
            s(:self)),
          s(:begin,
            s(:lvasgn, :padding,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :number), :-,
                    s(:send,
                      s(:send, nil, :size), :%,
                      s(:lvar, :number)))), :%,
                s(:lvar, :number))),
            s(:lvasgn, :collection,
              s(:send,
                s(:send, nil, :dup), :concat,
                s(:send,
                  s(:const, nil, :Array), :new,
                  s(:lvar, :padding),
                  s(:lvar, :fill_with)))))),
        s(:if,
          s(:send, nil, :block_given?),
          s(:block,
            s(:send,
              s(:lvar, :collection), :each_slice,
              s(:lvar, :number)),
            s(:args,
              s(:arg, :slice)),
            s(:yield,
              s(:lvar, :slice))),
          s(:send,
            s(:send,
              s(:lvar, :collection), :each_slice,
              s(:lvar, :number)), :to_a)))),
    s(:def, :in_groups,
      s(:args,
        s(:arg, :number),
        s(:optarg, :fill_with,
          s(:nil))),
      s(:begin,
        s(:lvasgn, :division,
          s(:send,
            s(:send, nil, :size), :div,
            s(:lvar, :number))),
        s(:lvasgn, :modulo,
          s(:send,
            s(:send, nil, :size), :%,
            s(:lvar, :number))),
        s(:lvasgn, :groups,
          s(:array)),
        s(:lvasgn, :start,
          s(:int, 0)),
        s(:block,
          s(:send,
            s(:lvar, :number), :times),
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:lvasgn, :length,
              s(:send,
                s(:lvar, :division), :+,
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:lvar, :modulo), :>,
                        s(:int, 0)),
                      s(:send,
                        s(:lvar, :modulo), :>,
                        s(:lvar, :index))),
                    s(:int, 1),
                    s(:int, 0))))),
            s(:send,
              s(:lvar, :groups), :<<,
              s(:lvasgn, :last_group,
                s(:send, nil, :slice,
                  s(:lvar, :start),
                  s(:lvar, :length)))),
            s(:if,
              s(:and,
                s(:and,
                  s(:send,
                    s(:lvar, :fill_with), :!=,
                    s(:false)),
                  s(:send,
                    s(:lvar, :modulo), :>,
                    s(:int, 0))),
                s(:send,
                  s(:lvar, :length), :==,
                  s(:lvar, :division))),
              s(:send,
                s(:lvar, :last_group), :<<,
                s(:lvar, :fill_with)), nil),
            s(:op_asgn,
              s(:lvasgn, :start), :+,
              s(:lvar, :length)))),
        s(:if,
          s(:send, nil, :block_given?),
          s(:block,
            s(:send,
              s(:lvar, :groups), :each),
            s(:args,
              s(:arg, :g)),
            s(:yield,
              s(:lvar, :g))),
          s(:lvar, :groups)))),
    s(:def, :split,
      s(:args,
        s(:optarg, :value,
          s(:nil))),
      s(:begin,
        s(:lvasgn, :arr,
          s(:send, nil, :dup)),
        s(:lvasgn, :result,
          s(:array)),
        s(:if,
          s(:send, nil, :block_given?),
          s(:while,
            s(:begin,
              s(:lvasgn, :idx,
                s(:block,
                  s(:send,
                    s(:lvar, :arr), :index),
                  s(:args,
                    s(:arg, :i)),
                  s(:yield,
                    s(:lvar, :i))))),
            s(:begin,
              s(:send,
                s(:lvar, :result), :<<,
                s(:send,
                  s(:lvar, :arr), :shift,
                  s(:lvar, :idx))),
              s(:send,
                s(:lvar, :arr), :shift))),
          s(:while,
            s(:begin,
              s(:lvasgn, :idx,
                s(:send,
                  s(:lvar, :arr), :index,
                  s(:lvar, :value)))),
            s(:begin,
              s(:send,
                s(:lvar, :result), :<<,
                s(:send,
                  s(:lvar, :arr), :shift,
                  s(:lvar, :idx))),
              s(:send,
                s(:lvar, :arr), :shift)))),
        s(:send,
          s(:lvar, :result), :<<,
          s(:lvar, :arr))))))
