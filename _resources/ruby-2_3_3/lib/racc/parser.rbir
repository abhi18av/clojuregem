s(:begin,
  s(:module,
    s(:const, nil, :Racc),
    s(:class,
      s(:const, nil, :ParseError),
      s(:const, nil, :StandardError), nil)),
  s(:if,
    s(:defined?,
      s(:const,
        s(:cbase), :ParseError)), nil,
    s(:casgn, nil, :ParseError,
      s(:const,
        s(:const, nil, :Racc), :ParseError))),
  s(:module,
    s(:const, nil, :Racc),
    s(:begin,
      s(:if,
        s(:defined?,
          s(:const, nil, :Racc_No_Extensions)), nil,
        s(:casgn, nil, :Racc_No_Extensions,
          s(:false))),
      s(:class,
        s(:const, nil, :Parser), nil,
        s(:begin,
          s(:casgn, nil, :Racc_Runtime_Version,
            s(:str, "1.4.6")),
          s(:casgn, nil, :Racc_Runtime_Revision,
            s(:send,
              s(:array,
                s(:str, "originalRevision:"),
                s(:str, "1.8")), :[],
              s(:int, 1))),
          s(:casgn, nil, :Racc_Runtime_Core_Version_R,
            s(:str, "1.4.6")),
          s(:casgn, nil, :Racc_Runtime_Core_Revision_R,
            s(:send,
              s(:array,
                s(:str, "originalRevision:"),
                s(:str, "1.8")), :[],
              s(:int, 1))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send, nil, :require,
                  s(:str, "racc/cparse")),
                s(:casgn, nil, :Racc_Runtime_Core_Revision_C,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Racc_Runtime_Core_Id_C), :split), :[],
                    s(:int, 2))),
                s(:if,
                  s(:send,
                    s(:send, nil, :new), :respond_to?,
                    s(:sym, :_racc_do_parse_c),
                    s(:true)), nil,
                  s(:send, nil, :raise,
                    s(:const, nil, :LoadError),
                    s(:str, "old cparse.so"))),
                s(:if,
                  s(:const, nil, :Racc_No_Extensions),
                  s(:send, nil, :raise,
                    s(:const, nil, :LoadError),
                    s(:str, "selecting ruby version of racc runtime core")), nil),
                s(:casgn, nil, :Racc_Main_Parsing_Routine,
                  s(:sym, :_racc_do_parse_c)),
                s(:casgn, nil, :Racc_YY_Parse_Method,
                  s(:sym, :_racc_yyparse_c)),
                s(:casgn, nil, :Racc_Runtime_Core_Version,
                  s(:const, nil, :Racc_Runtime_Core_Version_C)),
                s(:casgn, nil, :Racc_Runtime_Core_Revision,
                  s(:const, nil, :Racc_Runtime_Core_Revision_C)),
                s(:casgn, nil, :Racc_Runtime_Type,
                  s(:str, "c"))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :LoadError)), nil,
                s(:begin,
                  s(:casgn, nil, :Racc_Main_Parsing_Routine,
                    s(:sym, :_racc_do_parse_rb)),
                  s(:casgn, nil, :Racc_YY_Parse_Method,
                    s(:sym, :_racc_yyparse_rb)),
                  s(:casgn, nil, :Racc_Runtime_Core_Version,
                    s(:const, nil, :Racc_Runtime_Core_Version_R)),
                  s(:casgn, nil, :Racc_Runtime_Core_Revision,
                    s(:const, nil, :Racc_Runtime_Core_Revision_R)),
                  s(:casgn, nil, :Racc_Runtime_Type,
                    s(:str, "ruby")))), nil)),
          s(:defs,
            s(:const, nil, :Parser), :racc_runtime_type,
            s(:args),
            s(:const, nil, :Racc_Runtime_Type)),
          s(:def, :_racc_setup,
            s(:args),
            s(:begin,
              s(:if,
                s(:const,
                  s(:send,
                    s(:self), :class), :Racc_debug_parser), nil,
                s(:ivasgn, :@yydebug,
                  s(:false))),
              s(:if,
                s(:defined?,
                  s(:ivar, :@yydebug)), nil,
                s(:ivasgn, :@yydebug,
                  s(:false))),
              s(:if,
                s(:ivar, :@yydebug),
                s(:begin,
                  s(:if,
                    s(:defined?,
                      s(:ivar, :@racc_debug_out)), nil,
                    s(:ivasgn, :@racc_debug_out,
                      s(:gvar, :$stderr))),
                  s(:or_asgn,
                    s(:ivasgn, :@racc_debug_out),
                    s(:gvar, :$stderr))), nil),
              s(:lvasgn, :arg,
                s(:const,
                  s(:send,
                    s(:self), :class), :Racc_arg)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :arg), :size), :<,
                  s(:int, 14)),
                s(:send,
                  s(:lvar, :arg), :[]=,
                  s(:int, 13),
                  s(:true)), nil),
              s(:lvar, :arg))),
          s(:def, :_racc_init_sysvars,
            s(:args),
            s(:begin,
              s(:ivasgn, :@racc_state,
                s(:array,
                  s(:int, 0))),
              s(:ivasgn, :@racc_tstack,
                s(:array)),
              s(:ivasgn, :@racc_vstack,
                s(:array)),
              s(:ivasgn, :@racc_t,
                s(:nil)),
              s(:ivasgn, :@racc_val,
                s(:nil)),
              s(:ivasgn, :@racc_read_next,
                s(:true)),
              s(:ivasgn, :@racc_user_yyerror,
                s(:false)),
              s(:ivasgn, :@racc_error_status,
                s(:int, 0)))),
          s(:def, :do_parse,
            s(:args),
            s(:send, nil, :__send__,
              s(:const, nil, :Racc_Main_Parsing_Routine),
              s(:send, nil, :_racc_setup),
              s(:false))),
          s(:def, :next_token,
            s(:args),
            s(:send, nil, :raise,
              s(:const, nil, :NotImplementedError),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:self), :class)),
                s(:str, "#next_token is not defined")))),
          s(:def, :_racc_do_parse_rb,
            s(:args,
              s(:arg, :arg),
              s(:arg, :in_debug)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :action_table),
                  s(:lvasgn, :action_check),
                  s(:lvasgn, :action_default),
                  s(:lvasgn, :action_pointer),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :token_table),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:splat)),
                s(:lvar, :arg)),
              s(:send, nil, :_racc_init_sysvars),
              s(:lvasgn, :tok,
                s(:lvasgn, :act,
                  s(:lvasgn, :i,
                    s(:nil)))),
              s(:block,
                s(:send, nil, :catch,
                  s(:sym, :racc_end_parse)),
                s(:args),
                s(:while,
                  s(:true),
                  s(:begin,
                    s(:if,
                      s(:lvasgn, :i,
                        s(:send,
                          s(:lvar, :action_pointer), :[],
                          s(:send,
                            s(:ivar, :@racc_state), :[],
                            s(:int, -1)))),
                      s(:begin,
                        s(:if,
                          s(:ivar, :@racc_read_next),
                          s(:if,
                            s(:send,
                              s(:ivar, :@racc_t), :!=,
                              s(:int, 0)),
                            s(:begin,
                              s(:masgn,
                                s(:mlhs,
                                  s(:lvasgn, :tok),
                                  s(:ivasgn, :@racc_val)),
                                s(:send, nil, :next_token)),
                              s(:if,
                                s(:lvar, :tok),
                                s(:ivasgn, :@racc_t,
                                  s(:begin,
                                    s(:or,
                                      s(:send,
                                        s(:lvar, :token_table), :[],
                                        s(:lvar, :tok)),
                                      s(:int, 1)))),
                                s(:ivasgn, :@racc_t,
                                  s(:int, 0))),
                              s(:if,
                                s(:ivar, :@yydebug),
                                s(:send, nil, :racc_read_token,
                                  s(:ivar, :@racc_t),
                                  s(:lvar, :tok),
                                  s(:ivar, :@racc_val)), nil),
                              s(:ivasgn, :@racc_read_next,
                                s(:false))), nil), nil),
                        s(:op_asgn,
                          s(:lvasgn, :i), :+,
                          s(:ivar, :@racc_t)),
                        s(:if,
                          s(:and,
                            s(:and,
                              s(:send,
                                s(:lvar, :i), :>=,
                                s(:int, 0)),
                              s(:lvasgn, :act,
                                s(:send,
                                  s(:lvar, :action_table), :[],
                                  s(:lvar, :i)))),
                            s(:send,
                              s(:send,
                                s(:lvar, :action_check), :[],
                                s(:lvar, :i)), :==,
                              s(:send,
                                s(:ivar, :@racc_state), :[],
                                s(:int, -1)))), nil,
                          s(:lvasgn, :act,
                            s(:send,
                              s(:lvar, :action_default), :[],
                              s(:send,
                                s(:ivar, :@racc_state), :[],
                                s(:int, -1)))))),
                      s(:lvasgn, :act,
                        s(:send,
                          s(:lvar, :action_default), :[],
                          s(:send,
                            s(:ivar, :@racc_state), :[],
                            s(:int, -1))))),
                    s(:while,
                      s(:lvasgn, :act,
                        s(:send, nil, :_racc_evalact,
                          s(:lvar, :act),
                          s(:lvar, :arg))), nil)))))),
          s(:def, :yyparse,
            s(:args,
              s(:arg, :recv),
              s(:arg, :mid)),
            s(:send, nil, :__send__,
              s(:const, nil, :Racc_YY_Parse_Method),
              s(:lvar, :recv),
              s(:lvar, :mid),
              s(:send, nil, :_racc_setup),
              s(:true))),
          s(:def, :_racc_yyparse_rb,
            s(:args,
              s(:arg, :recv),
              s(:arg, :mid),
              s(:arg, :arg),
              s(:arg, :c_debug)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :action_table),
                  s(:lvasgn, :action_check),
                  s(:lvasgn, :action_default),
                  s(:lvasgn, :action_pointer),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :token_table),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:splat)),
                s(:lvar, :arg)),
              s(:send, nil, :_racc_init_sysvars),
              s(:lvasgn, :act,
                s(:nil)),
              s(:lvasgn, :i,
                s(:nil)),
              s(:block,
                s(:send, nil, :catch,
                  s(:sym, :racc_end_parse)),
                s(:args),
                s(:begin,
                  s(:until,
                    s(:lvasgn, :i,
                      s(:send,
                        s(:lvar, :action_pointer), :[],
                        s(:send,
                          s(:ivar, :@racc_state), :[],
                          s(:int, -1)))),
                    s(:while,
                      s(:lvasgn, :act,
                        s(:send, nil, :_racc_evalact,
                          s(:send,
                            s(:lvar, :action_default), :[],
                            s(:send,
                              s(:ivar, :@racc_state), :[],
                              s(:int, -1))),
                          s(:lvar, :arg))), nil)),
                  s(:block,
                    s(:send,
                      s(:lvar, :recv), :__send__,
                      s(:lvar, :mid)),
                    s(:args,
                      s(:arg, :tok),
                      s(:arg, :val)),
                    s(:begin,
                      s(:if,
                        s(:lvar, :tok),
                        s(:ivasgn, :@racc_t,
                          s(:begin,
                            s(:or,
                              s(:send,
                                s(:lvar, :token_table), :[],
                                s(:lvar, :tok)),
                              s(:int, 1)))),
                        s(:ivasgn, :@racc_t,
                          s(:int, 0))),
                      s(:ivasgn, :@racc_val,
                        s(:lvar, :val)),
                      s(:ivasgn, :@racc_read_next,
                        s(:false)),
                      s(:op_asgn,
                        s(:lvasgn, :i), :+,
                        s(:ivar, :@racc_t)),
                      s(:if,
                        s(:and,
                          s(:and,
                            s(:send,
                              s(:lvar, :i), :>=,
                              s(:int, 0)),
                            s(:lvasgn, :act,
                              s(:send,
                                s(:lvar, :action_table), :[],
                                s(:lvar, :i)))),
                          s(:send,
                            s(:send,
                              s(:lvar, :action_check), :[],
                              s(:lvar, :i)), :==,
                            s(:send,
                              s(:ivar, :@racc_state), :[],
                              s(:int, -1)))), nil,
                        s(:lvasgn, :act,
                          s(:send,
                            s(:lvar, :action_default), :[],
                            s(:send,
                              s(:ivar, :@racc_state), :[],
                              s(:int, -1))))),
                      s(:while,
                        s(:lvasgn, :act,
                          s(:send, nil, :_racc_evalact,
                            s(:lvar, :act),
                            s(:lvar, :arg))), nil),
                      s(:while,
                        s(:or,
                          s(:or,
                            s(:send,
                              s(:lvasgn, :i,
                                s(:send,
                                  s(:lvar, :action_pointer), :[],
                                  s(:send,
                                    s(:ivar, :@racc_state), :[],
                                    s(:int, -1)))), :!),
                            s(:send,
                              s(:ivar, :@racc_read_next), :!)),
                          s(:send,
                            s(:ivar, :@racc_t), :==,
                            s(:int, 0))),
                        s(:begin,
                          s(:if,
                            s(:and,
                              s(:and,
                                s(:and,
                                  s(:and,
                                    s(:lvar, :i),
                                    s(:op_asgn,
                                      s(:lvasgn, :i), :+,
                                      s(:ivar, :@racc_t))),
                                  s(:send,
                                    s(:lvar, :i), :>=,
                                    s(:int, 0))),
                                s(:lvasgn, :act,
                                  s(:send,
                                    s(:lvar, :action_table), :[],
                                    s(:lvar, :i)))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :action_check), :[],
                                  s(:lvar, :i)), :==,
                                s(:send,
                                  s(:ivar, :@racc_state), :[],
                                  s(:int, -1)))), nil,
                            s(:lvasgn, :act,
                              s(:send,
                                s(:lvar, :action_default), :[],
                                s(:send,
                                  s(:ivar, :@racc_state), :[],
                                  s(:int, -1))))),
                          s(:while,
                            s(:lvasgn, :act,
                              s(:send, nil, :_racc_evalact,
                                s(:lvar, :act),
                                s(:lvar, :arg))), nil))))))))),
          s(:def, :_racc_evalact,
            s(:args,
              s(:arg, :act),
              s(:arg, :arg)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :action_table),
                  s(:lvasgn, :action_check),
                  s(:lvasgn, :_),
                  s(:lvasgn, :action_pointer),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :shift_n),
                  s(:lvasgn, :reduce_n),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:splat)),
                s(:lvar, :arg)),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :act), :>,
                    s(:int, 0)),
                  s(:send,
                    s(:lvar, :act), :<,
                    s(:lvar, :shift_n))),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:ivar, :@racc_error_status), :>,
                      s(:int, 0)),
                    s(:if,
                      s(:send,
                        s(:ivar, :@racc_t), :==,
                        s(:int, 1)), nil,
                      s(:op_asgn,
                        s(:ivasgn, :@racc_error_status), :-,
                        s(:int, 1))), nil),
                  s(:send,
                    s(:ivar, :@racc_vstack), :push,
                    s(:ivar, :@racc_val)),
                  s(:send,
                    s(:ivar, :@racc_state), :push,
                    s(:lvar, :act)),
                  s(:ivasgn, :@racc_read_next,
                    s(:true)),
                  s(:if,
                    s(:ivar, :@yydebug),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@racc_tstack), :push,
                        s(:ivar, :@racc_t)),
                      s(:send, nil, :racc_shift,
                        s(:ivar, :@racc_t),
                        s(:ivar, :@racc_tstack),
                        s(:ivar, :@racc_vstack))), nil)),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:lvar, :act), :<,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :act), :>,
                      s(:send,
                        s(:lvar, :reduce_n), :-@))),
                  s(:begin,
                    s(:lvasgn, :code,
                      s(:block,
                        s(:send, nil, :catch,
                          s(:sym, :racc_jump)),
                        s(:args),
                        s(:begin,
                          s(:send,
                            s(:ivar, :@racc_state), :push,
                            s(:send, nil, :_racc_do_reduce,
                              s(:lvar, :arg),
                              s(:lvar, :act))),
                          s(:false)))),
                    s(:if,
                      s(:lvar, :code),
                      s(:case,
                        s(:lvar, :code),
                        s(:when,
                          s(:int, 1),
                          s(:begin,
                            s(:ivasgn, :@racc_user_yyerror,
                              s(:true)),
                            s(:return,
                              s(:send,
                                s(:lvar, :reduce_n), :-@)))),
                        s(:when,
                          s(:int, 2),
                          s(:return,
                            s(:lvar, :shift_n))),
                        s(:send, nil, :raise,
                          s(:str, "[Racc Bug] unknown jump code"))), nil)),
                  s(:if,
                    s(:send,
                      s(:lvar, :act), :==,
                      s(:lvar, :shift_n)),
                    s(:begin,
                      s(:if,
                        s(:ivar, :@yydebug),
                        s(:send, nil, :racc_accept), nil),
                      s(:send, nil, :throw,
                        s(:sym, :racc_end_parse),
                        s(:send,
                          s(:ivar, :@racc_vstack), :[],
                          s(:int, 0)))),
                    s(:if,
                      s(:send,
                        s(:lvar, :act), :==,
                        s(:send,
                          s(:lvar, :reduce_n), :-@)),
                      s(:begin,
                        s(:case,
                          s(:ivar, :@racc_error_status),
                          s(:when,
                            s(:int, 0),
                            s(:if,
                              s(:send,
                                s(:lvar, :arg), :[],
                                s(:int, 21)), nil,
                              s(:send, nil, :on_error,
                                s(:ivar, :@racc_t),
                                s(:ivar, :@racc_val),
                                s(:ivar, :@racc_vstack)))),
                          s(:when,
                            s(:int, 3),
                            s(:begin,
                              s(:if,
                                s(:send,
                                  s(:ivar, :@racc_t), :==,
                                  s(:int, 0)),
                                s(:send, nil, :throw,
                                  s(:sym, :racc_end_parse),
                                  s(:nil)), nil),
                              s(:ivasgn, :@racc_read_next,
                                s(:true)))), nil),
                        s(:ivasgn, :@racc_user_yyerror,
                          s(:false)),
                        s(:ivasgn, :@racc_error_status,
                          s(:int, 3)),
                        s(:while,
                          s(:true),
                          s(:begin,
                            s(:if,
                              s(:lvasgn, :i,
                                s(:send,
                                  s(:lvar, :action_pointer), :[],
                                  s(:send,
                                    s(:ivar, :@racc_state), :[],
                                    s(:int, -1)))),
                              s(:begin,
                                s(:op_asgn,
                                  s(:lvasgn, :i), :+,
                                  s(:int, 1)),
                                s(:if,
                                  s(:and,
                                    s(:and,
                                      s(:send,
                                        s(:lvar, :i), :>=,
                                        s(:int, 0)),
                                      s(:begin,
                                        s(:lvasgn, :act,
                                          s(:send,
                                            s(:lvar, :action_table), :[],
                                            s(:lvar, :i))))),
                                    s(:send,
                                      s(:send,
                                        s(:lvar, :action_check), :[],
                                        s(:lvar, :i)), :==,
                                      s(:send,
                                        s(:ivar, :@racc_state), :[],
                                        s(:int, -1)))),
                                  s(:break), nil)), nil),
                            s(:if,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@racc_state), :size), :<=,
                                s(:int, 1)),
                              s(:send, nil, :throw,
                                s(:sym, :racc_end_parse),
                                s(:nil)), nil),
                            s(:send,
                              s(:ivar, :@racc_state), :pop),
                            s(:send,
                              s(:ivar, :@racc_vstack), :pop),
                            s(:if,
                              s(:ivar, :@yydebug),
                              s(:begin,
                                s(:send,
                                  s(:ivar, :@racc_tstack), :pop),
                                s(:send, nil, :racc_e_pop,
                                  s(:ivar, :@racc_state),
                                  s(:ivar, :@racc_tstack),
                                  s(:ivar, :@racc_vstack))), nil))),
                        s(:return,
                          s(:lvar, :act))),
                      s(:send, nil, :raise,
                        s(:dstr,
                          s(:str, "[Racc Bug] unknown action "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :act), :inspect)))))))),
              s(:if,
                s(:ivar, :@yydebug),
                s(:send, nil, :racc_next_state,
                  s(:send,
                    s(:ivar, :@racc_state), :[],
                    s(:int, -1)),
                  s(:ivar, :@racc_state)), nil),
              s(:nil))),
          s(:def, :_racc_do_reduce,
            s(:args,
              s(:arg, :arg),
              s(:arg, :act)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :goto_table),
                  s(:lvasgn, :goto_check),
                  s(:lvasgn, :goto_default),
                  s(:lvasgn, :goto_pointer),
                  s(:lvasgn, :nt_base),
                  s(:lvasgn, :reduce_table),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :_),
                  s(:lvasgn, :use_result),
                  s(:splat)),
                s(:lvar, :arg)),
              s(:lvasgn, :state,
                s(:ivar, :@racc_state)),
              s(:lvasgn, :vstack,
                s(:ivar, :@racc_vstack)),
              s(:lvasgn, :tstack,
                s(:ivar, :@racc_tstack)),
              s(:lvasgn, :i,
                s(:send,
                  s(:lvar, :act), :*,
                  s(:int, -3))),
              s(:lvasgn, :len,
                s(:send,
                  s(:lvar, :reduce_table), :[],
                  s(:lvar, :i))),
              s(:lvasgn, :reduce_to,
                s(:send,
                  s(:lvar, :reduce_table), :[],
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 1)))),
              s(:lvasgn, :method_id,
                s(:send,
                  s(:lvar, :reduce_table), :[],
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 2)))),
              s(:lvasgn, :void_array,
                s(:array)),
              s(:if,
                s(:ivar, :@yydebug),
                s(:lvasgn, :tmp_t,
                  s(:send,
                    s(:lvar, :tstack), :[],
                    s(:send,
                      s(:lvar, :len), :-@),
                    s(:lvar, :len))), nil),
              s(:lvasgn, :tmp_v,
                s(:send,
                  s(:lvar, :vstack), :[],
                  s(:send,
                    s(:lvar, :len), :-@),
                  s(:lvar, :len))),
              s(:if,
                s(:ivar, :@yydebug),
                s(:send,
                  s(:lvar, :tstack), :[]=,
                  s(:send,
                    s(:lvar, :len), :-@),
                  s(:lvar, :len),
                  s(:lvar, :void_array)), nil),
              s(:send,
                s(:lvar, :vstack), :[]=,
                s(:send,
                  s(:lvar, :len), :-@),
                s(:lvar, :len),
                s(:lvar, :void_array)),
              s(:send,
                s(:lvar, :state), :[]=,
                s(:send,
                  s(:lvar, :len), :-@),
                s(:lvar, :len),
                s(:lvar, :void_array)),
              s(:if,
                s(:lvar, :use_result),
                s(:send,
                  s(:lvar, :vstack), :push,
                  s(:send, nil, :__send__,
                    s(:lvar, :method_id),
                    s(:lvar, :tmp_v),
                    s(:lvar, :vstack),
                    s(:send,
                      s(:lvar, :tmp_v), :[],
                      s(:int, 0)))),
                s(:send,
                  s(:lvar, :vstack), :push,
                  s(:send, nil, :__send__,
                    s(:lvar, :method_id),
                    s(:lvar, :tmp_v),
                    s(:lvar, :vstack)))),
              s(:send,
                s(:lvar, :tstack), :push,
                s(:lvar, :reduce_to)),
              s(:if,
                s(:ivar, :@yydebug),
                s(:send, nil, :racc_reduce,
                  s(:lvar, :tmp_t),
                  s(:lvar, :reduce_to),
                  s(:lvar, :tstack),
                  s(:lvar, :vstack)), nil),
              s(:lvasgn, :k1,
                s(:send,
                  s(:lvar, :reduce_to), :-,
                  s(:lvar, :nt_base))),
              s(:if,
                s(:lvasgn, :i,
                  s(:send,
                    s(:lvar, :goto_pointer), :[],
                    s(:lvar, :k1))),
                s(:begin,
                  s(:op_asgn,
                    s(:lvasgn, :i), :+,
                    s(:send,
                      s(:lvar, :state), :[],
                      s(:int, -1))),
                  s(:if,
                    s(:and,
                      s(:and,
                        s(:send,
                          s(:lvar, :i), :>=,
                          s(:int, 0)),
                        s(:begin,
                          s(:lvasgn, :curstate,
                            s(:send,
                              s(:lvar, :goto_table), :[],
                              s(:lvar, :i))))),
                      s(:send,
                        s(:send,
                          s(:lvar, :goto_check), :[],
                          s(:lvar, :i)), :==,
                        s(:lvar, :k1))),
                    s(:return,
                      s(:lvar, :curstate)), nil)), nil),
              s(:send,
                s(:lvar, :goto_default), :[],
                s(:lvar, :k1)))),
          s(:def, :on_error,
            s(:args,
              s(:arg, :t),
              s(:arg, :val),
              s(:arg, :vstack)),
            s(:send, nil, :raise,
              s(:const, nil, :ParseError),
              s(:send, nil, :sprintf,
                s(:str, "\nparse error on value %s (%s)"),
                s(:send,
                  s(:lvar, :val), :inspect),
                s(:or,
                  s(:send, nil, :token_to_str,
                    s(:lvar, :t)),
                  s(:str, "?"))))),
          s(:def, :yyerror,
            s(:args),
            s(:send, nil, :throw,
              s(:sym, :racc_jump),
              s(:int, 1))),
          s(:def, :yyaccept,
            s(:args),
            s(:send, nil, :throw,
              s(:sym, :racc_jump),
              s(:int, 2))),
          s(:def, :yyerrok,
            s(:args),
            s(:ivasgn, :@racc_error_status,
              s(:int, 0))),
          s(:def, :racc_read_token,
            s(:args,
              s(:arg, :t),
              s(:arg, :tok),
              s(:arg, :val)),
            s(:begin,
              s(:send,
                s(:ivar, :@racc_debug_out), :print,
                s(:str, "read    ")),
              s(:send,
                s(:ivar, :@racc_debug_out), :print,
                s(:send,
                  s(:lvar, :tok), :inspect),
                s(:str, "("),
                s(:send, nil, :racc_token2str,
                  s(:lvar, :t)),
                s(:str, ") ")),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts,
                s(:send,
                  s(:lvar, :val), :inspect)),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts))),
          s(:def, :racc_shift,
            s(:args,
              s(:arg, :tok),
              s(:arg, :tstack),
              s(:arg, :vstack)),
            s(:begin,
              s(:send,
                s(:ivar, :@racc_debug_out), :puts,
                s(:dstr,
                  s(:str, "shift   "),
                  s(:begin,
                    s(:send, nil, :racc_token2str,
                      s(:lvar, :tok))))),
              s(:send, nil, :racc_print_stacks,
                s(:lvar, :tstack),
                s(:lvar, :vstack)),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts))),
          s(:def, :racc_reduce,
            s(:args,
              s(:arg, :toks),
              s(:arg, :sim),
              s(:arg, :tstack),
              s(:arg, :vstack)),
            s(:begin,
              s(:lvasgn, :out,
                s(:ivar, :@racc_debug_out)),
              s(:send,
                s(:lvar, :out), :print,
                s(:str, "reduce ")),
              s(:if,
                s(:send,
                  s(:lvar, :toks), :empty?),
                s(:send,
                  s(:lvar, :out), :print,
                  s(:str, " <none>")),
                s(:block,
                  s(:send,
                    s(:lvar, :toks), :each),
                  s(:args,
                    s(:arg, :t)),
                  s(:send,
                    s(:lvar, :out), :print,
                    s(:str, " "),
                    s(:send, nil, :racc_token2str,
                      s(:lvar, :t))))),
              s(:send,
                s(:lvar, :out), :puts,
                s(:dstr,
                  s(:str, " --> "),
                  s(:begin,
                    s(:send, nil, :racc_token2str,
                      s(:lvar, :sim))))),
              s(:send, nil, :racc_print_stacks,
                s(:lvar, :tstack),
                s(:lvar, :vstack)),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts))),
          s(:def, :racc_accept,
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@racc_debug_out), :puts,
                s(:str, "accept")),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts))),
          s(:def, :racc_e_pop,
            s(:args,
              s(:arg, :state),
              s(:arg, :tstack),
              s(:arg, :vstack)),
            s(:begin,
              s(:send,
                s(:ivar, :@racc_debug_out), :puts,
                s(:str, "error recovering mode: pop token")),
              s(:send, nil, :racc_print_states,
                s(:lvar, :state)),
              s(:send, nil, :racc_print_stacks,
                s(:lvar, :tstack),
                s(:lvar, :vstack)),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts))),
          s(:def, :racc_next_state,
            s(:args,
              s(:arg, :curstate),
              s(:arg, :state)),
            s(:begin,
              s(:send,
                s(:ivar, :@racc_debug_out), :puts,
                s(:dstr,
                  s(:str, "goto    "),
                  s(:begin,
                    s(:lvar, :curstate)))),
              s(:send, nil, :racc_print_states,
                s(:lvar, :state)),
              s(:send,
                s(:ivar, :@racc_debug_out), :puts))),
          s(:def, :racc_print_stacks,
            s(:args,
              s(:arg, :t),
              s(:arg, :v)),
            s(:begin,
              s(:lvasgn, :out,
                s(:ivar, :@racc_debug_out)),
              s(:send,
                s(:lvar, :out), :print,
                s(:str, "        [")),
              s(:block,
                s(:send,
                  s(:lvar, :t), :each_index),
                s(:args,
                  s(:arg, :i)),
                s(:send,
                  s(:lvar, :out), :print,
                  s(:str, " ("),
                  s(:send, nil, :racc_token2str,
                    s(:send,
                      s(:lvar, :t), :[],
                      s(:lvar, :i))),
                  s(:str, " "),
                  s(:send,
                    s(:send,
                      s(:lvar, :v), :[],
                      s(:lvar, :i)), :inspect),
                  s(:str, ")"))),
              s(:send,
                s(:lvar, :out), :puts,
                s(:str, " ]")))),
          s(:def, :racc_print_states,
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:lvasgn, :out,
                s(:ivar, :@racc_debug_out)),
              s(:send,
                s(:lvar, :out), :print,
                s(:str, "        [")),
              s(:block,
                s(:send,
                  s(:lvar, :s), :each),
                s(:args,
                  s(:arg, :st)),
                s(:send,
                  s(:lvar, :out), :print,
                  s(:str, " "),
                  s(:lvar, :st))),
              s(:send,
                s(:lvar, :out), :puts,
                s(:str, " ]")))),
          s(:def, :racc_token2str,
            s(:args,
              s(:arg, :tok)),
            s(:or,
              s(:send,
                s(:const,
                  s(:send,
                    s(:self), :class), :Racc_token_to_s_table), :[],
                s(:lvar, :tok)),
              s(:send, nil, :raise,
                s(:dstr,
                  s(:str, "[Racc Bug] can't convert token "),
                  s(:begin,
                    s(:lvar, :tok)),
                  s(:str, " to string"))))),
          s(:def, :token_to_str,
            s(:args,
              s(:arg, :t)),
            s(:send,
              s(:const,
                s(:send,
                  s(:self), :class), :Racc_token_to_s_table), :[],
              s(:lvar, :t))))))))
