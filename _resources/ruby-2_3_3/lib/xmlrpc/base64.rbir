s(:module,
  s(:const, nil, :XMLRPC),
  s(:class,
    s(:const, nil, :Base64), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :str),
          s(:optarg, :state,
            s(:sym, :dec))),
        s(:case,
          s(:lvar, :state),
          s(:when,
            s(:sym, :enc),
            s(:ivasgn, :@str,
              s(:send,
                s(:const, nil, :Base64), :decode,
                s(:lvar, :str)))),
          s(:when,
            s(:sym, :dec),
            s(:ivasgn, :@str,
              s(:lvar, :str))),
          s(:send, nil, :raise,
            s(:const, nil, :ArgumentError),
            s(:str, "wrong argument; either :enc or :dec")))),
      s(:def, :decoded,
        s(:args),
        s(:ivar, :@str)),
      s(:def, :encoded,
        s(:args),
        s(:send,
          s(:const, nil, :Base64), :encode,
          s(:ivar, :@str))),
      s(:defs,
        s(:const, nil, :Base64), :decode,
        s(:args,
          s(:arg, :str)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :str), :gsub,
              s(:regexp,
                s(:str, "\\s+"),
                s(:regopt)),
              s(:str, "")), :unpack,
            s(:str, "m")), :[],
          s(:int, 0))),
      s(:defs,
        s(:const, nil, :Base64), :encode,
        s(:args,
          s(:arg, :str)),
        s(:send,
          s(:array,
            s(:lvar, :str)), :pack,
          s(:str, "m"))))))
