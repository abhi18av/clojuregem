s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/validation/validationexception")),
  s(:module,
    s(:const, nil, :REXML),
    s(:module,
      s(:const, nil, :Validation),
      s(:begin,
        s(:module,
          s(:const, nil, :Validator),
          s(:begin,
            s(:casgn, nil, :NILEVENT,
              s(:array,
                s(:nil))),
            s(:def, :reset,
              s(:args),
              s(:begin,
                s(:ivasgn, :@current,
                  s(:ivar, :@root)),
                s(:send,
                  s(:ivar, :@root), :reset),
                s(:send,
                  s(:ivar, :@root), :previous=,
                  s(:true)),
                s(:ivasgn, :@attr_stack,
                  s(:array)),
                s(:self))),
            s(:def, :dump,
              s(:args),
              s(:send, nil, :puts,
                s(:send,
                  s(:ivar, :@root), :inspect))),
            s(:def, :validate,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:defined?,
                    s(:ivar, :@attr_stack)), nil,
                  s(:ivasgn, :@attr_stack,
                    s(:array))),
                s(:lvasgn, :match,
                  s(:send,
                    s(:ivar, :@current), :next,
                    s(:lvar, :event))),
                s(:if,
                  s(:lvar, :match), nil,
                  s(:send, nil, :raise,
                    s(:send,
                      s(:const, nil, :ValidationException), :new,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:str, "Validation error.  Expected: "), :+,
                            s(:send,
                              s(:send,
                                s(:ivar, :@current), :expected), :join,
                              s(:str, " or "))), :+,
                          s(:dstr,
                            s(:str, " from "),
                            s(:begin,
                              s(:send,
                                s(:ivar, :@current), :inspect)),
                            s(:str, " "))), :+,
                        s(:dstr,
                          s(:str, " but got "),
                          s(:begin,
                            s(:send,
                              s(:send,
                                s(:const, nil, :Event), :new,
                                s(:send,
                                  s(:lvar, :event), :[],
                                  s(:int, 0)),
                                s(:send,
                                  s(:lvar, :event), :[],
                                  s(:int, 1))), :inspect))))))),
                s(:ivasgn, :@current,
                  s(:lvar, :match)),
                s(:case,
                  s(:send,
                    s(:lvar, :event), :[],
                    s(:int, 0)),
                  s(:when,
                    s(:sym, :start_element),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@attr_stack), :<<,
                        s(:send,
                          s(:lvar, :event), :[],
                          s(:int, 2))),
                      s(:while_post,
                        s(:lvar, :k),
                        s(:kwbegin,
                          s(:lvasgn, :sattr,
                            s(:array,
                              s(:sym, :start_attribute),
                              s(:nil))),
                          s(:lvasgn, :eattr,
                            s(:array,
                              s(:sym, :end_attribute))),
                          s(:lvasgn, :text,
                            s(:array,
                              s(:sym, :text),
                              s(:nil))),
                          s(:masgn,
                            s(:mlhs,
                              s(:lvasgn, :k)),
                            s(:block,
                              s(:send,
                                s(:send,
                                  s(:lvar, :event), :[],
                                  s(:int, 2)), :find),
                              s(:args,
                                s(:arg, :key),
                                s(:arg, :value)),
                              s(:begin,
                                s(:send,
                                  s(:lvar, :sattr), :[]=,
                                  s(:int, 1),
                                  s(:lvar, :key)),
                                s(:lvasgn, :m,
                                  s(:send,
                                    s(:ivar, :@current), :next,
                                    s(:lvar, :sattr))),
                                s(:if,
                                  s(:lvar, :m),
                                  s(:begin,
                                    s(:if,
                                      s(:send,
                                        s(:lvar, :m), :matches?,
                                        s(:lvar, :eattr)),
                                      s(:ivasgn, :@current,
                                        s(:lvar, :m)),
                                      s(:begin,
                                        s(:send,
                                          s(:lvar, :text), :[]=,
                                          s(:int, 1),
                                          s(:lvar, :value)),
                                        s(:lvasgn, :m,
                                          s(:send,
                                            s(:lvar, :m), :next,
                                            s(:lvar, :text))),
                                        s(:send,
                                          s(:lvar, :text), :[]=,
                                          s(:int, 1),
                                          s(:nil)),
                                        s(:if,
                                          s(:lvar, :m), nil,
                                          s(:return,
                                            s(:false))),
                                        s(:if,
                                          s(:lvar, :m),
                                          s(:ivasgn, :@current,
                                            s(:lvar, :m)), nil))),
                                    s(:lvasgn, :m,
                                      s(:send,
                                        s(:ivar, :@current), :next,
                                        s(:lvar, :eattr))),
                                    s(:if,
                                      s(:lvar, :m),
                                      s(:begin,
                                        s(:ivasgn, :@current,
                                          s(:lvar, :m)),
                                        s(:true)),
                                      s(:false))),
                                  s(:false))))),
                          s(:if,
                            s(:lvar, :k),
                            s(:send,
                              s(:send,
                                s(:lvar, :event), :[],
                                s(:int, 2)), :delete,
                              s(:lvar, :k)), nil))))),
                  s(:when,
                    s(:sym, :end_element),
                    s(:begin,
                      s(:lvasgn, :attrs,
                        s(:send,
                          s(:ivar, :@attr_stack), :pop)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :attrs), :length), :>,
                          s(:int, 0)),
                        s(:send, nil, :raise,
                          s(:send,
                            s(:const, nil, :ValidationException), :new,
                            s(:send,
                              s(:str, "Validation error.  Illegal "), :+,
                              s(:dstr,
                                s(:str, " attributes: "),
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :attrs), :inspect)))))), nil))), nil))))),
        s(:class,
          s(:const, nil, :Event), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :event_type),
                s(:optarg, :event_arg,
                  s(:nil))),
              s(:begin,
                s(:ivasgn, :@event_type,
                  s(:lvar, :event_type)),
                s(:ivasgn, :@event_arg,
                  s(:lvar, :event_arg)))),
            s(:send, nil, :attr_reader,
              s(:sym, :event_type)),
            s(:send, nil, :attr_accessor,
              s(:sym, :event_arg)),
            s(:def, :done?,
              s(:args),
              s(:ivar, :@done)),
            s(:def, :single?,
              s(:args),
              s(:return,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:ivar, :@event_type), :!=,
                      s(:sym, :start_element)),
                    s(:send,
                      s(:ivar, :@event_type), :!=,
                      s(:sym, :start_attribute)))))),
            s(:def, :matches?,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :event), :[],
                      s(:int, 0)), :==,
                    s(:ivar, :@event_type)), nil,
                  s(:return,
                    s(:false))),
                s(:case,
                  s(:send,
                    s(:lvar, :event), :[],
                    s(:int, 0)),
                  s(:when,
                    s(:nil),
                    s(:return,
                      s(:true))),
                  s(:when,
                    s(:sym, :start_element),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :event), :[],
                          s(:int, 1)), :==,
                        s(:ivar, :@event_arg)),
                      s(:return,
                        s(:true)), nil)),
                  s(:when,
                    s(:sym, :end_element),
                    s(:return,
                      s(:true))),
                  s(:when,
                    s(:sym, :start_attribute),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :event), :[],
                          s(:int, 1)), :==,
                        s(:ivar, :@event_arg)),
                      s(:return,
                        s(:true)), nil)),
                  s(:when,
                    s(:sym, :end_attribute),
                    s(:return,
                      s(:true))),
                  s(:when,
                    s(:sym, :end_document),
                    s(:return,
                      s(:true))),
                  s(:when,
                    s(:sym, :text),
                    s(:return,
                      s(:begin,
                        s(:or,
                          s(:send,
                            s(:ivar, :@event_arg), :nil?),
                          s(:send,
                            s(:ivar, :@event_arg), :==,
                            s(:send,
                              s(:lvar, :event), :[],
                              s(:int, 1))))))),
                  s(:false)))),
            s(:def, :==,
              s(:args,
                s(:arg, :other)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :other), :kind_of?,
                    s(:const, nil, :Event)), nil,
                  s(:return,
                    s(:false))),
                s(:and,
                  s(:send,
                    s(:ivar, :@event_type), :==,
                    s(:send,
                      s(:lvar, :other), :event_type)),
                  s(:send,
                    s(:ivar, :@event_arg), :==,
                    s(:send,
                      s(:lvar, :other), :event_arg))))),
            s(:def, :to_s,
              s(:args),
              s(:send, nil, :inspect)),
            s(:def, :inspect,
              s(:args),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:ivar, :@event_type), :inspect)),
                s(:str, "( "),
                s(:ivar, :@event_arg),
                s(:str, " )")))))))))
