s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/validation/validation")),
  s(:send, nil, :require,
    s(:str, "rexml/parsers/baseparser")),
  s(:module,
    s(:const, nil, :REXML),
    s(:module,
      s(:const, nil, :Validation),
      s(:begin,
        s(:class,
          s(:const, nil, :RelaxNG), nil,
          s(:begin,
            s(:send, nil, :include,
              s(:const, nil, :Validator)),
            s(:casgn, nil, :INFINITY,
              s(:send,
                s(:float, 1.0), :/,
                s(:float, 0.0))),
            s(:casgn, nil, :EMPTY,
              s(:send,
                s(:const, nil, :Event), :new,
                s(:nil))),
            s(:casgn, nil, :TEXT,
              s(:array,
                s(:sym, :start_element),
                s(:str, "text"))),
            s(:send, nil, :attr_accessor,
              s(:sym, :current)),
            s(:send, nil, :attr_accessor,
              s(:sym, :count)),
            s(:send, nil, :attr_reader,
              s(:sym, :references)),
            s(:def, :initialize,
              s(:args,
                s(:arg, :source)),
              s(:begin,
                s(:lvasgn, :parser,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :REXML), :Parsers), :BaseParser), :new,
                    s(:lvar, :source))),
                s(:ivasgn, :@count,
                  s(:int, 0)),
                s(:ivasgn, :@references,
                  s(:hash)),
                s(:ivasgn, :@root,
                  s(:ivasgn, :@current,
                    s(:send,
                      s(:const, nil, :Sequence), :new,
                      s(:self)))),
                s(:send,
                  s(:ivar, :@root), :previous=,
                  s(:true)),
                s(:lvasgn, :states,
                  s(:array,
                    s(:ivar, :@current))),
                s(:while_post,
                  s(:send,
                    s(:send,
                      s(:lvar, :event), :[],
                      s(:int, 0)), :!=,
                    s(:sym, :end_document)),
                  s(:kwbegin,
                    s(:lvasgn, :event,
                      s(:send,
                        s(:lvar, :parser), :pull)),
                    s(:case,
                      s(:send,
                        s(:lvar, :event), :[],
                        s(:int, 0)),
                      s(:when,
                        s(:sym, :start_element),
                        s(:case,
                          s(:send,
                            s(:lvar, :event), :[],
                            s(:int, 1)),
                          s(:when,
                            s(:str, "empty"), nil),
                          s(:when,
                            s(:str, "element"),
                            s(:str, "attribute"),
                            s(:str, "text"),
                            s(:str, "value"),
                            s(:send,
                              s(:send,
                                s(:lvar, :states), :[],
                                s(:int, -1)), :<<,
                              s(:lvar, :event))),
                          s(:when,
                            s(:str, "optional"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :Optional), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "choice"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :Choice), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "oneOrMore"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :OneOrMore), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "zeroOrMore"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :ZeroOrMore), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "group"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :Sequence), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "interleave"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :Interleave), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "mixed"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :Interleave), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1)), :<<,
                                s(:const, nil, :TEXT)))),
                          s(:when,
                            s(:str, "define"),
                            s(:send,
                              s(:lvar, :states), :<<,
                              s(:array,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :event), :[],
                                    s(:int, 2)), :[],
                                  s(:str, "name"))))),
                          s(:when,
                            s(:str, "ref"),
                            s(:send,
                              s(:send,
                                s(:lvar, :states), :[],
                                s(:int, -1)), :<<,
                              s(:send,
                                s(:const, nil, :Ref), :new,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :event), :[],
                                    s(:int, 2)), :[],
                                  s(:str, "name"))))),
                          s(:when,
                            s(:str, "anyName"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :states), :<<,
                                s(:send,
                                  s(:const, nil, :AnyName), :new,
                                  s(:self))),
                              s(:send,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -2)), :<<,
                                s(:send,
                                  s(:lvar, :states), :[],
                                  s(:int, -1))))),
                          s(:when,
                            s(:str, "nsName"), nil),
                          s(:when,
                            s(:str, "except"), nil),
                          s(:when,
                            s(:str, "name"), nil),
                          s(:when,
                            s(:str, "data"), nil),
                          s(:when,
                            s(:str, "param"), nil),
                          s(:when,
                            s(:str, "include"), nil),
                          s(:when,
                            s(:str, "grammar"), nil),
                          s(:when,
                            s(:str, "start"), nil),
                          s(:when,
                            s(:str, "externalRef"), nil),
                          s(:when,
                            s(:str, "notAllowed"), nil), nil)),
                      s(:when,
                        s(:sym, :end_element),
                        s(:case,
                          s(:send,
                            s(:lvar, :event), :[],
                            s(:int, 1)),
                          s(:when,
                            s(:str, "element"),
                            s(:str, "attribute"),
                            s(:send,
                              s(:send,
                                s(:lvar, :states), :[],
                                s(:int, -1)), :<<,
                              s(:lvar, :event))),
                          s(:when,
                            s(:str, "zeroOrMore"),
                            s(:str, "oneOrMore"),
                            s(:str, "choice"),
                            s(:str, "optional"),
                            s(:str, "interleave"),
                            s(:str, "group"),
                            s(:str, "mixed"),
                            s(:send,
                              s(:lvar, :states), :pop)),
                          s(:when,
                            s(:str, "define"),
                            s(:begin,
                              s(:lvasgn, :ref,
                                s(:send,
                                  s(:lvar, :states), :pop)),
                              s(:send,
                                s(:ivar, :@references), :[]=,
                                s(:send,
                                  s(:lvar, :ref), :shift),
                                s(:lvar, :ref)))), nil)),
                      s(:when,
                        s(:sym, :end_document),
                        s(:send,
                          s(:send,
                            s(:lvar, :states), :[],
                            s(:int, -1)), :<<,
                          s(:lvar, :event))),
                      s(:when,
                        s(:sym, :text),
                        s(:send,
                          s(:send,
                            s(:lvar, :states), :[],
                            s(:int, -1)), :<<,
                          s(:lvar, :event))), nil))))),
            s(:def, :receive,
              s(:args,
                s(:arg, :event)),
              s(:send, nil, :validate,
                s(:lvar, :event))))),
        s(:class,
          s(:const, nil, :State), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :context)),
              s(:begin,
                s(:ivasgn, :@previous,
                  s(:array)),
                s(:ivasgn, :@events,
                  s(:array)),
                s(:ivasgn, :@current,
                  s(:int, 0)),
                s(:ivasgn, :@count,
                  s(:op_asgn,
                    s(:send,
                      s(:lvar, :context), :count), :+,
                    s(:int, 1))),
                s(:ivasgn, :@references,
                  s(:send,
                    s(:lvar, :context), :references)),
                s(:ivasgn, :@value,
                  s(:false)))),
            s(:def, :reset,
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@current), :==,
                    s(:int, 0)),
                  s(:return), nil),
                s(:ivasgn, :@current,
                  s(:int, 0)),
                s(:block,
                  s(:send,
                    s(:ivar, :@events), :each),
                  s(:args,
                    s(:arg, :s)),
                  s(:if,
                    s(:send,
                      s(:lvar, :s), :kind_of?,
                      s(:const, nil, :State)),
                    s(:send,
                      s(:lvar, :s), :reset), nil)))),
            s(:def, :previous=,
              s(:args,
                s(:arg, :previous)),
              s(:send,
                s(:ivar, :@previous), :<<,
                s(:lvar, :previous))),
            s(:def, :next,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@events), :[],
                      s(:ivar, :@current)), :nil?),
                  s(:return,
                    s(:send,
                      s(:send,
                        s(:ivar, :@previous), :pop), :next,
                      s(:lvar, :event))), nil),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :class), :==,
                    s(:const, nil, :Ref)),
                  s(:send, nil, :expand_ref_in,
                    s(:ivar, :@events),
                    s(:ivar, :@current)), nil),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :kind_of?,
                      s(:const, nil, :State))),
                  s(:begin,
                    s(:op_asgn,
                      s(:ivasgn, :@current), :+,
                      s(:int, 1)),
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:send,
                          s(:ivar, :@current), :-,
                          s(:int, 1))), :previous=,
                      s(:self)),
                    s(:return,
                      s(:send,
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:send,
                            s(:ivar, :@current), :-,
                            s(:int, 1))), :next,
                        s(:lvar, :event)))), nil),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :matches?,
                      s(:lvar, :event))),
                  s(:begin,
                    s(:op_asgn,
                      s(:ivasgn, :@current), :+,
                      s(:int, 1)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:ivar, :@current)), :nil?),
                      s(:return,
                        s(:send,
                          s(:ivar, :@previous), :pop)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:ivar, :@events), :[],
                            s(:ivar, :@current)), :kind_of?,
                          s(:const, nil, :State)),
                        s(:begin,
                          s(:op_asgn,
                            s(:ivasgn, :@current), :+,
                            s(:int, 1)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))), :previous=,
                            s(:self)),
                          s(:return,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))))),
                        s(:return,
                          s(:self))))),
                  s(:return,
                    s(:nil))))),
            s(:def, :to_s,
              s(:args),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:self), :class), :name), :=~,
                  s(:regexp,
                    s(:str, "(?:::)(\\w)\\w+$"),
                    s(:regopt))),
                s(:dstr,
                  s(:nth_ref, 1),
                  s(:str, "."),
                  s(:ivar, :@count)))),
            s(:def, :inspect,
              s(:args),
              s(:dstr,
                s(:str, "< "),
                s(:begin,
                  s(:send, nil, :to_s)),
                s(:str, " "),
                s(:begin,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:ivar, :@events), :collect),
                      s(:args,
                        s(:arg, :e)),
                      s(:begin,
                        s(:lvasgn, :pre,
                          s(:if,
                            s(:send,
                              s(:lvar, :e), :==,
                              s(:send,
                                s(:ivar, :@events), :[],
                                s(:ivar, :@current))),
                            s(:str, "#"),
                            s(:str, ""))),
                        s(:if,
                          s(:send,
                            s(:self), :==,
                            s(:lvar, :e)), nil,
                          s(:send,
                            s(:lvar, :pre), :+,
                            s(:send,
                              s(:lvar, :e), :inspect))))), :join,
                    s(:str, ", "))),
                s(:str, " >"))),
            s(:def, :expected,
              s(:args),
              s(:return,
                s(:array,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current))))),
            s(:def, :<<,
              s(:args,
                s(:arg, :event)),
              s(:send, nil, :add_event_to_arry,
                s(:ivar, :@events),
                s(:lvar, :event))),
            s(:send, nil, :protected),
            s(:def, :expand_ref_in,
              s(:args,
                s(:arg, :arry),
                s(:arg, :ind)),
              s(:begin,
                s(:lvasgn, :new_events,
                  s(:array)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@references), :[],
                      s(:send,
                        s(:send,
                          s(:lvar, :arry), :[],
                          s(:lvar, :ind)), :to_s)), :each),
                  s(:args,
                    s(:arg, :evt)),
                  s(:send, nil, :add_event_to_arry,
                    s(:lvar, :new_events),
                    s(:lvar, :evt))),
                s(:send,
                  s(:lvar, :arry), :[]=,
                  s(:lvar, :ind),
                  s(:int, 1),
                  s(:lvar, :new_events)))),
            s(:def, :add_event_to_arry,
              s(:args,
                s(:arg, :arry),
                s(:arg, :evt)),
              s(:begin,
                s(:lvasgn, :evt,
                  s(:send, nil, :generate_event,
                    s(:lvar, :evt))),
                s(:if,
                  s(:send,
                    s(:lvar, :evt), :kind_of?,
                    s(:const, nil, :String)),
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:send,
                            s(:lvar, :arry), :[],
                            s(:int, -1)), :kind_of?,
                          s(:const, nil, :Event)),
                        s(:ivar, :@value)),
                      s(:send,
                        s(:send,
                          s(:lvar, :arry), :[],
                          s(:int, -1)), :event_arg=,
                        s(:lvar, :evt)), nil),
                    s(:ivasgn, :@value,
                      s(:false))),
                  s(:send,
                    s(:lvar, :arry), :<<,
                    s(:lvar, :evt))))),
            s(:def, :generate_event,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :event), :kind_of?,
                      s(:const, nil, :State)),
                    s(:send,
                      s(:send,
                        s(:lvar, :event), :class), :==,
                      s(:const, nil, :Ref))),
                  s(:return,
                    s(:lvar, :event)), nil),
                s(:lvasgn, :evt,
                  s(:nil)),
                s(:lvasgn, :arg,
                  s(:nil)),
                s(:case,
                  s(:send,
                    s(:lvar, :event), :[],
                    s(:int, 0)),
                  s(:when,
                    s(:sym, :start_element),
                    s(:case,
                      s(:send,
                        s(:lvar, :event), :[],
                        s(:int, 1)),
                      s(:when,
                        s(:str, "element"),
                        s(:begin,
                          s(:lvasgn, :evt,
                            s(:sym, :start_element)),
                          s(:lvasgn, :arg,
                            s(:send,
                              s(:send,
                                s(:lvar, :event), :[],
                                s(:int, 2)), :[],
                              s(:str, "name"))))),
                      s(:when,
                        s(:str, "attribute"),
                        s(:begin,
                          s(:lvasgn, :evt,
                            s(:sym, :start_attribute)),
                          s(:lvasgn, :arg,
                            s(:send,
                              s(:send,
                                s(:lvar, :event), :[],
                                s(:int, 2)), :[],
                              s(:str, "name"))))),
                      s(:when,
                        s(:str, "text"),
                        s(:lvasgn, :evt,
                          s(:sym, :text))),
                      s(:when,
                        s(:str, "value"),
                        s(:begin,
                          s(:lvasgn, :evt,
                            s(:sym, :text)),
                          s(:ivasgn, :@value,
                            s(:true)))), nil)),
                  s(:when,
                    s(:sym, :text),
                    s(:return,
                      s(:send,
                        s(:lvar, :event), :[],
                        s(:int, 1)))),
                  s(:when,
                    s(:sym, :end_document),
                    s(:return,
                      s(:send,
                        s(:const, nil, :Event), :new,
                        s(:send,
                          s(:lvar, :event), :[],
                          s(:int, 0))))),
                  s(:case,
                    s(:send,
                      s(:lvar, :event), :[],
                      s(:int, 1)),
                    s(:when,
                      s(:str, "element"),
                      s(:lvasgn, :evt,
                        s(:sym, :end_element))),
                    s(:when,
                      s(:str, "attribute"),
                      s(:lvasgn, :evt,
                        s(:sym, :end_attribute))), nil)),
                s(:return,
                  s(:send,
                    s(:const, nil, :Event), :new,
                    s(:lvar, :evt),
                    s(:lvar, :arg))))))),
        s(:class,
          s(:const, nil, :Sequence),
          s(:const, nil, :State),
          s(:def, :matches?,
            s(:args,
              s(:arg, :event)),
            s(:send,
              s(:send,
                s(:ivar, :@events), :[],
                s(:ivar, :@current)), :matches?,
              s(:lvar, :event)))),
        s(:class,
          s(:const, nil, :Optional),
          s(:const, nil, :State),
          s(:begin,
            s(:def, :next,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@current), :==,
                    s(:int, 0)),
                  s(:begin,
                    s(:lvasgn, :rv,
                      s(:zsuper)),
                    s(:if,
                      s(:lvar, :rv),
                      s(:return,
                        s(:lvar, :rv)), nil),
                    s(:ivasgn, :@prior,
                      s(:send,
                        s(:ivar, :@previous), :pop)),
                    s(:return,
                      s(:send,
                        s(:ivar, :@prior), :next,
                        s(:lvar, :event)))), nil),
                s(:zsuper))),
            s(:def, :matches?,
              s(:args,
                s(:arg, :event)),
              s(:or,
                s(:send,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current)), :matches?,
                  s(:lvar, :event)),
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:ivar, :@current), :==,
                      s(:int, 0)),
                    s(:send,
                      s(:send,
                        s(:ivar, :@previous), :[],
                        s(:int, -1)), :matches?,
                      s(:lvar, :event)))))),
            s(:def, :expected,
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@current), :==,
                    s(:int, 0)),
                  s(:return,
                    s(:send,
                      s(:array,
                        s(:send,
                          s(:ivar, :@prior), :expected),
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:int, 0))), :flatten)), nil),
                s(:return,
                  s(:array,
                    s(:send,
                      s(:ivar, :@events), :[],
                      s(:ivar, :@current)))))))),
        s(:class,
          s(:const, nil, :ZeroOrMore),
          s(:const, nil, :Optional),
          s(:begin,
            s(:def, :next,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :class), :==,
                    s(:const, nil, :Ref)),
                  s(:send, nil, :expand_ref_in,
                    s(:ivar, :@events),
                    s(:ivar, :@current)), nil),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :matches?,
                      s(:lvar, :event))),
                  s(:begin,
                    s(:op_asgn,
                      s(:ivasgn, :@current), :+,
                      s(:int, 1)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:ivar, :@current)), :nil?),
                      s(:begin,
                        s(:ivasgn, :@current,
                          s(:int, 0)),
                        s(:return,
                          s(:self))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:ivar, :@events), :[],
                            s(:ivar, :@current)), :kind_of?,
                          s(:const, nil, :State)),
                        s(:begin,
                          s(:op_asgn,
                            s(:ivasgn, :@current), :+,
                            s(:int, 1)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))), :previous=,
                            s(:self)),
                          s(:return,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))))),
                        s(:return,
                          s(:self))))),
                  s(:begin,
                    s(:ivasgn, :@prior,
                      s(:send,
                        s(:ivar, :@previous), :pop)),
                    s(:if,
                      s(:send,
                        s(:ivar, :@current), :==,
                        s(:int, 0)),
                      s(:return,
                        s(:send,
                          s(:ivar, :@prior), :next,
                          s(:lvar, :event))), nil),
                    s(:return,
                      s(:nil)))))),
            s(:def, :expected,
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@current), :==,
                    s(:int, 0)),
                  s(:return,
                    s(:send,
                      s(:array,
                        s(:send,
                          s(:ivar, :@prior), :expected),
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:int, 0))), :flatten)), nil),
                s(:return,
                  s(:array,
                    s(:send,
                      s(:ivar, :@events), :[],
                      s(:ivar, :@current)))))))),
        s(:class,
          s(:const, nil, :OneOrMore),
          s(:const, nil, :State),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :context)),
              s(:begin,
                s(:zsuper),
                s(:ivasgn, :@ord,
                  s(:int, 0)))),
            s(:def, :reset,
              s(:args),
              s(:begin,
                s(:zsuper),
                s(:ivasgn, :@ord,
                  s(:int, 0)))),
            s(:def, :next,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :class), :==,
                    s(:const, nil, :Ref)),
                  s(:send, nil, :expand_ref_in,
                    s(:ivar, :@events),
                    s(:ivar, :@current)), nil),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :matches?,
                      s(:lvar, :event))),
                  s(:begin,
                    s(:op_asgn,
                      s(:ivasgn, :@current), :+,
                      s(:int, 1)),
                    s(:op_asgn,
                      s(:ivasgn, :@ord), :+,
                      s(:int, 1)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:ivar, :@current)), :nil?),
                      s(:begin,
                        s(:ivasgn, :@current,
                          s(:int, 0)),
                        s(:return,
                          s(:self))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:ivar, :@events), :[],
                            s(:ivar, :@current)), :kind_of?,
                          s(:const, nil, :State)),
                        s(:begin,
                          s(:op_asgn,
                            s(:ivasgn, :@current), :+,
                            s(:int, 1)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))), :previous=,
                            s(:self)),
                          s(:return,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))))),
                        s(:return,
                          s(:self))))),
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:ivar, :@current), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:ivar, :@ord), :>,
                          s(:int, 0))),
                      s(:return,
                        s(:send,
                          s(:send,
                            s(:ivar, :@previous), :pop), :next,
                          s(:lvar, :event))), nil),
                    s(:return,
                      s(:nil)))))),
            s(:def, :matches?,
              s(:args,
                s(:arg, :event)),
              s(:or,
                s(:send,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current)), :matches?,
                  s(:lvar, :event)),
                s(:begin,
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:ivar, :@current), :==,
                        s(:int, 0)),
                      s(:send,
                        s(:ivar, :@ord), :>,
                        s(:int, 0))),
                    s(:send,
                      s(:send,
                        s(:ivar, :@previous), :[],
                        s(:int, -1)), :matches?,
                      s(:lvar, :event)))))),
            s(:def, :expected,
              s(:args),
              s(:if,
                s(:and,
                  s(:send,
                    s(:ivar, :@current), :==,
                    s(:int, 0)),
                  s(:send,
                    s(:ivar, :@ord), :>,
                    s(:int, 0))),
                s(:return,
                  s(:send,
                    s(:array,
                      s(:send,
                        s(:send,
                          s(:ivar, :@previous), :[],
                          s(:int, -1)), :expected),
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:int, 0))), :flatten)),
                s(:return,
                  s(:array,
                    s(:send,
                      s(:ivar, :@events), :[],
                      s(:ivar, :@current)))))))),
        s(:class,
          s(:const, nil, :Choice),
          s(:const, nil, :State),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :context)),
              s(:begin,
                s(:zsuper),
                s(:ivasgn, :@choices,
                  s(:array)))),
            s(:def, :reset,
              s(:args),
              s(:begin,
                s(:zsuper),
                s(:ivasgn, :@events,
                  s(:array)),
                s(:block,
                  s(:send,
                    s(:ivar, :@choices), :each),
                  s(:args,
                    s(:arg, :c)),
                  s(:block,
                    s(:send,
                      s(:lvar, :c), :each),
                    s(:args,
                      s(:arg, :s)),
                    s(:if,
                      s(:send,
                        s(:lvar, :s), :kind_of?,
                        s(:const, nil, :State)),
                      s(:send,
                        s(:lvar, :s), :reset), nil))))),
            s(:def, :<<,
              s(:args,
                s(:arg, :event)),
              s(:send, nil, :add_event_to_arry,
                s(:ivar, :@choices),
                s(:lvar, :event))),
            s(:def, :next,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@events), :size), :==,
                    s(:int, 0)),
                  s(:begin,
                    s(:lvasgn, :c,
                      s(:int, 0)),
                    s(:lvasgn, :max,
                      s(:send,
                        s(:ivar, :@choices), :size)),
                    s(:while,
                      s(:send,
                        s(:lvar, :c), :<,
                        s(:lvar, :max)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:ivar, :@choices), :[],
                                s(:lvar, :c)), :[],
                              s(:int, 0)), :class), :==,
                          s(:const, nil, :Ref)),
                        s(:begin,
                          s(:send, nil, :expand_ref_in,
                            s(:send,
                              s(:ivar, :@choices), :[],
                              s(:lvar, :c)),
                            s(:int, 0)),
                          s(:op_asgn,
                            s(:ivasgn, :@choices), :+,
                            s(:send,
                              s(:ivar, :@choices), :[],
                              s(:lvar, :c))),
                          s(:send,
                            s(:ivar, :@choices), :delete,
                            s(:send,
                              s(:ivar, :@choices), :[],
                              s(:lvar, :c))),
                          s(:op_asgn,
                            s(:lvasgn, :max), :-,
                            s(:int, 1))),
                        s(:op_asgn,
                          s(:lvasgn, :c), :+,
                          s(:int, 1)))),
                    s(:ivasgn, :@events,
                      s(:block,
                        s(:send,
                          s(:ivar, :@choices), :find),
                        s(:args,
                          s(:arg, :evt)),
                        s(:send,
                          s(:send,
                            s(:lvar, :evt), :[],
                            s(:int, 0)), :matches?,
                          s(:lvar, :event))))), nil),
                s(:if,
                  s(:ivar, :@events), nil,
                  s(:begin,
                    s(:ivasgn, :@events,
                      s(:array)),
                    s(:return,
                      s(:nil)))),
                s(:zsuper))),
            s(:def, :matches?,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@events), :size), :>,
                    s(:int, 0)),
                  s(:return,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :matches?,
                      s(:lvar, :event))), nil),
                s(:send,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:ivar, :@choices), :find),
                      s(:args,
                        s(:arg, :evt)),
                      s(:send,
                        s(:send,
                          s(:lvar, :evt), :[],
                          s(:int, 0)), :matches?,
                        s(:lvar, :event))), :nil?), :!))),
            s(:def, :expected,
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@events), :size), :>,
                    s(:int, 0)),
                  s(:return,
                    s(:array,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)))), nil),
                s(:return,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:ivar, :@choices), :collect),
                      s(:args,
                        s(:arg, :x)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :x), :[],
                            s(:int, 0)), :kind_of?,
                          s(:const, nil, :State)),
                        s(:send,
                          s(:send,
                            s(:lvar, :x), :[],
                            s(:int, 0)), :expected),
                        s(:send,
                          s(:lvar, :x), :[],
                          s(:int, 0)))), :flatten)))),
            s(:def, :inspect,
              s(:args),
              s(:dstr,
                s(:str, "< "),
                s(:begin,
                  s(:send, nil, :to_s)),
                s(:str, " "),
                s(:begin,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:ivar, :@choices), :collect),
                      s(:args,
                        s(:arg, :e)),
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:lvar, :e), :collect),
                          s(:args,
                            s(:arg, :f)),
                          s(:send,
                            s(:lvar, :f), :to_s)), :join,
                        s(:str, ", "))), :join,
                    s(:str, " or "))),
                s(:str, " >"))),
            s(:send, nil, :protected),
            s(:def, :add_event_to_arry,
              s(:args,
                s(:arg, :arry),
                s(:arg, :evt)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :evt), :kind_of?,
                    s(:const, nil, :State)),
                  s(:send,
                    s(:send,
                      s(:lvar, :evt), :class), :==,
                    s(:const, nil, :Ref))),
                s(:send,
                  s(:lvar, :arry), :<<,
                  s(:array,
                    s(:lvar, :evt))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :evt), :[],
                      s(:int, 0)), :==,
                    s(:sym, :text)),
                  s(:if,
                    s(:and,
                      s(:and,
                        s(:and,
                          s(:send,
                            s(:lvar, :arry), :[],
                            s(:int, -1)),
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :arry), :[],
                                s(:int, -1)), :[],
                              s(:int, -1)), :kind_of?,
                            s(:const, nil, :Event))),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :arry), :[],
                                s(:int, -1)), :[],
                              s(:int, -1)), :event_type), :==,
                          s(:sym, :text))),
                      s(:ivar, :@value)),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :arry), :[],
                            s(:int, -1)), :[],
                          s(:int, -1)), :event_arg=,
                        s(:send,
                          s(:lvar, :evt), :[],
                          s(:int, 1))),
                      s(:ivasgn, :@value,
                        s(:false))), nil),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :evt), :[],
                          s(:int, 0)), :==,
                        s(:sym, :start_element)),
                      s(:send,
                        s(:lvar, :arry), :<<,
                        s(:array)), nil),
                    s(:send,
                      s(:send,
                        s(:lvar, :arry), :[],
                        s(:int, -1)), :<<,
                      s(:send, nil, :generate_event,
                        s(:lvar, :evt))))))))),
        s(:class,
          s(:const, nil, :Interleave),
          s(:const, nil, :Choice),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :context)),
              s(:begin,
                s(:zsuper),
                s(:ivasgn, :@choice,
                  s(:int, 0)))),
            s(:def, :reset,
              s(:args),
              s(:ivasgn, :@choice,
                s(:int, 0))),
            s(:def, :next_current,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:lvasgn, :c,
                  s(:int, 0)),
                s(:lvasgn, :max,
                  s(:send,
                    s(:ivar, :@choices), :size)),
                s(:while,
                  s(:send,
                    s(:lvar, :c), :<,
                    s(:lvar, :max)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@choices), :[],
                            s(:lvar, :c)), :[],
                          s(:int, 0)), :class), :==,
                      s(:const, nil, :Ref)),
                    s(:begin,
                      s(:send, nil, :expand_ref_in,
                        s(:send,
                          s(:ivar, :@choices), :[],
                          s(:lvar, :c)),
                        s(:int, 0)),
                      s(:op_asgn,
                        s(:ivasgn, :@choices), :+,
                        s(:send,
                          s(:ivar, :@choices), :[],
                          s(:lvar, :c))),
                      s(:send,
                        s(:ivar, :@choices), :delete,
                        s(:send,
                          s(:ivar, :@choices), :[],
                          s(:lvar, :c))),
                      s(:op_asgn,
                        s(:lvasgn, :max), :-,
                        s(:int, 1))),
                    s(:op_asgn,
                      s(:lvasgn, :c), :+,
                      s(:int, 1)))),
                s(:ivasgn, :@events,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:ivar, :@choices), :[],
                        s(:irange,
                          s(:ivar, :@choice),
                          s(:int, -1))), :find),
                    s(:args,
                      s(:arg, :evt)),
                    s(:send,
                      s(:send,
                        s(:lvar, :evt), :[],
                        s(:int, 0)), :matches?,
                      s(:lvar, :event)))),
                s(:ivasgn, :@current,
                  s(:int, 0)),
                s(:if,
                  s(:ivar, :@events),
                  s(:begin,
                    s(:lvasgn, :old,
                      s(:send,
                        s(:ivar, :@choices), :[],
                        s(:ivar, :@choice))),
                    s(:lvasgn, :idx,
                      s(:send,
                        s(:ivar, :@choices), :index,
                        s(:ivar, :@events))),
                    s(:send,
                      s(:ivar, :@choices), :[]=,
                      s(:ivar, :@choice),
                      s(:ivar, :@events)),
                    s(:send,
                      s(:ivar, :@choices), :[]=,
                      s(:lvar, :idx),
                      s(:lvar, :old)),
                    s(:op_asgn,
                      s(:ivasgn, :@choice), :+,
                      s(:int, 1))), nil),
                s(:if,
                  s(:ivar, :@events), nil,
                  s(:ivasgn, :@events,
                    s(:array))))),
            s(:def, :next,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current)), nil,
                  s(:send, nil, :next_current,
                    s(:lvar, :event))),
                s(:if,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current)), nil,
                  s(:return,
                    s(:nil))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :class), :==,
                    s(:const, nil, :Ref)),
                  s(:send, nil, :expand_ref_in,
                    s(:ivar, :@events),
                    s(:ivar, :@current)), nil),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :kind_of?,
                      s(:const, nil, :State))),
                  s(:begin,
                    s(:op_asgn,
                      s(:ivasgn, :@current), :+,
                      s(:int, 1)),
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:send,
                          s(:ivar, :@current), :-,
                          s(:int, 1))), :previous=,
                      s(:self)),
                    s(:return,
                      s(:send,
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:send,
                            s(:ivar, :@current), :-,
                            s(:int, 1))), :next,
                        s(:lvar, :event)))), nil),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@events), :[],
                      s(:ivar, :@current)), :nil?),
                  s(:return,
                    s(:send,
                      s(:send,
                        s(:ivar, :@previous), :pop), :next,
                      s(:lvar, :event))), nil),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :matches?,
                      s(:lvar, :event))),
                  s(:begin,
                    s(:op_asgn,
                      s(:ivasgn, :@current), :+,
                      s(:int, 1)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:ivar, :@events), :[],
                          s(:ivar, :@current)), :nil?),
                      s(:begin,
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:ivar, :@choices), :[],
                              s(:ivar, :@choice)), :nil?), nil,
                          s(:return,
                            s(:self))),
                        s(:return,
                          s(:send,
                            s(:ivar, :@previous), :pop))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:ivar, :@events), :[],
                            s(:ivar, :@current)), :kind_of?,
                          s(:const, nil, :State)),
                        s(:begin,
                          s(:op_asgn,
                            s(:ivasgn, :@current), :+,
                            s(:int, 1)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))), :previous=,
                            s(:self)),
                          s(:return,
                            s(:send,
                              s(:ivar, :@events), :[],
                              s(:send,
                                s(:ivar, :@current), :-,
                                s(:int, 1))))),
                        s(:return,
                          s(:self))))),
                  s(:return,
                    s(:nil))))),
            s(:def, :matches?,
              s(:args,
                s(:arg, :event)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current)),
                  s(:return,
                    s(:send,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)), :matches?,
                      s(:lvar, :event))), nil),
                s(:send,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:ivar, :@choices), :[],
                          s(:irange,
                            s(:ivar, :@choice),
                            s(:int, -1))), :find),
                      s(:args,
                        s(:arg, :evt)),
                      s(:send,
                        s(:send,
                          s(:lvar, :evt), :[],
                          s(:int, 0)), :matches?,
                        s(:lvar, :event))), :nil?), :!))),
            s(:def, :expected,
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@events), :[],
                    s(:ivar, :@current)),
                  s(:return,
                    s(:array,
                      s(:send,
                        s(:ivar, :@events), :[],
                        s(:ivar, :@current)))), nil),
                s(:return,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:ivar, :@choices), :[],
                          s(:irange,
                            s(:ivar, :@choice),
                            s(:int, -1))), :collect),
                      s(:args,
                        s(:arg, :x)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :x), :[],
                            s(:int, 0)), :kind_of?,
                          s(:const, nil, :State)),
                        s(:send,
                          s(:send,
                            s(:lvar, :x), :[],
                            s(:int, 0)), :expected),
                        s(:send,
                          s(:lvar, :x), :[],
                          s(:int, 0)))), :flatten)))),
            s(:def, :inspect,
              s(:args),
              s(:dstr,
                s(:str, "< "),
                s(:begin,
                  s(:send, nil, :to_s)),
                s(:str, " "),
                s(:begin,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:ivar, :@choices), :collect),
                      s(:args,
                        s(:arg, :e)),
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:lvar, :e), :collect),
                          s(:args,
                            s(:arg, :f)),
                          s(:send,
                            s(:lvar, :f), :to_s)), :join,
                        s(:str, ", "))), :join,
                    s(:str, " and "))),
                s(:str, " >"))))),
        s(:class,
          s(:const, nil, :Ref), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :value)),
              s(:ivasgn, :@value,
                s(:lvar, :value))),
            s(:def, :to_s,
              s(:args),
              s(:ivar, :@value)),
            s(:def, :inspect,
              s(:args),
              s(:dstr,
                s(:str, "{"),
                s(:begin,
                  s(:send, nil, :to_s)),
                s(:str, "}")))))))))
