s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/child")),
  s(:module,
    s(:const, nil, :REXML),
    s(:class,
      s(:const, nil, :Parent),
      s(:const, nil, :Child),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Enumerable)),
        s(:def, :initialize,
          s(:args,
            s(:optarg, :parent,
              s(:nil))),
          s(:begin,
            s(:super,
              s(:lvar, :parent)),
            s(:ivasgn, :@children,
              s(:array)))),
        s(:def, :add,
          s(:args,
            s(:arg, :object)),
          s(:begin,
            s(:send,
              s(:lvar, :object), :parent=,
              s(:self)),
            s(:send,
              s(:ivar, :@children), :<<,
              s(:lvar, :object)),
            s(:lvar, :object))),
        s(:alias,
          s(:sym, :push),
          s(:sym, :add)),
        s(:alias,
          s(:sym, :<<),
          s(:sym, :push)),
        s(:def, :unshift,
          s(:args,
            s(:arg, :object)),
          s(:begin,
            s(:send,
              s(:lvar, :object), :parent=,
              s(:self)),
            s(:send,
              s(:ivar, :@children), :unshift,
              s(:lvar, :object)))),
        s(:def, :delete,
          s(:args,
            s(:arg, :object)),
          s(:begin,
            s(:lvasgn, :found,
              s(:false)),
            s(:block,
              s(:send,
                s(:ivar, :@children), :delete_if),
              s(:args,
                s(:arg, :c)),
              s(:and,
                s(:send,
                  s(:lvar, :c), :equal?,
                  s(:lvar, :object)),
                s(:lvasgn, :found,
                  s(:true)))),
            s(:if,
              s(:lvar, :found),
              s(:send,
                s(:lvar, :object), :parent=,
                s(:nil)), nil),
            s(:if,
              s(:lvar, :found),
              s(:lvar, :object),
              s(:nil)))),
        s(:def, :each,
          s(:args,
            s(:blockarg, :block)),
          s(:send,
            s(:ivar, :@children), :each,
            s(:block_pass,
              s(:lvar, :block)))),
        s(:def, :delete_if,
          s(:args,
            s(:blockarg, :block)),
          s(:send,
            s(:ivar, :@children), :delete_if,
            s(:block_pass,
              s(:lvar, :block)))),
        s(:def, :delete_at,
          s(:args,
            s(:arg, :index)),
          s(:send,
            s(:ivar, :@children), :delete_at,
            s(:lvar, :index))),
        s(:def, :each_index,
          s(:args,
            s(:blockarg, :block)),
          s(:send,
            s(:ivar, :@children), :each_index,
            s(:block_pass,
              s(:lvar, :block)))),
        s(:def, :[],
          s(:args,
            s(:arg, :index)),
          s(:send,
            s(:ivar, :@children), :[],
            s(:lvar, :index))),
        s(:alias,
          s(:sym, :each_child),
          s(:sym, :each)),
        s(:def, :[]=,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :parent=,
              s(:self)),
            s(:send,
              s(:ivar, :@children), :[]=,
              s(:splat,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:irange,
                    s(:int, 0),
                    s(:int, -2)))),
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1))))),
        s(:def, :insert_before,
          s(:args,
            s(:arg, :child1),
            s(:arg, :child2)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :child1), :kind_of?,
                s(:const, nil, :String)),
              s(:begin,
                s(:lvasgn, :child1,
                  s(:send,
                    s(:const, nil, :XPath), :first,
                    s(:self),
                    s(:lvar, :child1))),
                s(:send,
                  s(:send,
                    s(:lvar, :child1), :parent), :insert_before,
                  s(:lvar, :child1),
                  s(:lvar, :child2))),
              s(:begin,
                s(:lvasgn, :ind,
                  s(:send, nil, :index,
                    s(:lvar, :child1))),
                s(:if,
                  s(:send,
                    s(:lvar, :child2), :parent),
                  s(:send,
                    s(:send,
                      s(:lvar, :child2), :parent), :delete,
                    s(:lvar, :child2)), nil),
                s(:send,
                  s(:ivar, :@children), :[]=,
                  s(:lvar, :ind),
                  s(:int, 0),
                  s(:lvar, :child2)),
                s(:send,
                  s(:lvar, :child2), :parent=,
                  s(:self)))),
            s(:self))),
        s(:def, :insert_after,
          s(:args,
            s(:arg, :child1),
            s(:arg, :child2)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :child1), :kind_of?,
                s(:const, nil, :String)),
              s(:begin,
                s(:lvasgn, :child1,
                  s(:send,
                    s(:const, nil, :XPath), :first,
                    s(:self),
                    s(:lvar, :child1))),
                s(:send,
                  s(:send,
                    s(:lvar, :child1), :parent), :insert_after,
                  s(:lvar, :child1),
                  s(:lvar, :child2))),
              s(:begin,
                s(:lvasgn, :ind,
                  s(:send,
                    s(:send, nil, :index,
                      s(:lvar, :child1)), :+,
                    s(:int, 1))),
                s(:if,
                  s(:send,
                    s(:lvar, :child2), :parent),
                  s(:send,
                    s(:send,
                      s(:lvar, :child2), :parent), :delete,
                    s(:lvar, :child2)), nil),
                s(:send,
                  s(:ivar, :@children), :[]=,
                  s(:lvar, :ind),
                  s(:int, 0),
                  s(:lvar, :child2)),
                s(:send,
                  s(:lvar, :child2), :parent=,
                  s(:self)))),
            s(:self))),
        s(:def, :to_a,
          s(:args),
          s(:send,
            s(:ivar, :@children), :dup)),
        s(:def, :index,
          s(:args,
            s(:arg, :child)),
          s(:begin,
            s(:lvasgn, :count,
              s(:int, -1)),
            s(:block,
              s(:send,
                s(:ivar, :@children), :find),
              s(:args,
                s(:arg, :i)),
              s(:begin,
                s(:op_asgn,
                  s(:lvasgn, :count), :+,
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:lvar, :i), :hash), :==,
                  s(:send,
                    s(:lvar, :child), :hash)))),
            s(:lvar, :count))),
        s(:def, :size,
          s(:args),
          s(:send,
            s(:ivar, :@children), :size)),
        s(:alias,
          s(:sym, :length),
          s(:sym, :size)),
        s(:def, :replace_child,
          s(:args,
            s(:arg, :to_replace),
            s(:arg, :replacement)),
          s(:begin,
            s(:block,
              s(:send,
                s(:ivar, :@children), :map!),
              s(:args,
                s(:arg, :c)),
              s(:if,
                s(:send,
                  s(:lvar, :c), :equal?,
                  s(:lvar, :to_replace)),
                s(:lvar, :replacement),
                s(:lvar, :c))),
            s(:send,
              s(:lvar, :to_replace), :parent=,
              s(:nil)),
            s(:send,
              s(:lvar, :replacement), :parent=,
              s(:self)))),
        s(:def, :deep_clone,
          s(:args),
          s(:begin,
            s(:lvasgn, :cl,
              s(:send, nil, :clone)),
            s(:block,
              s(:send, nil, :each),
              s(:args,
                s(:arg, :child)),
              s(:if,
                s(:send,
                  s(:lvar, :child), :kind_of?,
                  s(:const, nil, :Parent)),
                s(:send,
                  s(:lvar, :cl), :<<,
                  s(:send,
                    s(:lvar, :child), :deep_clone)),
                s(:send,
                  s(:lvar, :cl), :<<,
                  s(:send,
                    s(:lvar, :child), :clone)))),
            s(:lvar, :cl))),
        s(:alias,
          s(:sym, :children),
          s(:sym, :to_a)),
        s(:def, :parent?,
          s(:args),
          s(:true))))))
