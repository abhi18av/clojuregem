s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/namespace")),
  s(:send, nil, :require,
    s(:str, "rexml/text")),
  s(:module,
    s(:const, nil, :REXML),
    s(:class,
      s(:const, nil, :Attribute), nil,
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Node)),
        s(:send, nil, :include,
          s(:const, nil, :Namespace)),
        s(:send, nil, :attr_reader,
          s(:sym, :element)),
        s(:send, nil, :attr_writer,
          s(:sym, :normalized)),
        s(:casgn, nil, :PATTERN,
          s(:regexp,
            s(:str, "\\s*("),
            s(:begin,
              s(:const, nil, :NAME_STR)),
            s(:str, ")\\s*=\\s*([\"'])(.*?)\\2"),
            s(:regopt, :m, :u))),
        s(:casgn, nil, :NEEDS_A_SECOND_CHECK,
          s(:regexp,
            s(:str, "(<|&(("),
            s(:begin,
              s(:const,
                s(:const, nil, :Entity), :NAME)),
            s(:str, ");|(#0*((?:\\d+)|(?:x[a-fA-F0-9]+)));)?)"),
            s(:regopt, :m, :u))),
        s(:def, :initialize,
          s(:args,
            s(:arg, :first),
            s(:optarg, :second,
              s(:nil)),
            s(:optarg, :parent,
              s(:nil))),
          s(:begin,
            s(:ivasgn, :@normalized,
              s(:ivasgn, :@unnormalized,
                s(:ivasgn, :@element,
                  s(:nil)))),
            s(:if,
              s(:send,
                s(:lvar, :first), :kind_of?,
                s(:const, nil, :Attribute)),
              s(:begin,
                s(:send,
                  s(:self), :name=,
                  s(:send,
                    s(:lvar, :first), :expanded_name)),
                s(:ivasgn, :@unnormalized,
                  s(:send,
                    s(:lvar, :first), :value)),
                s(:if,
                  s(:send,
                    s(:lvar, :second), :kind_of?,
                    s(:const, nil, :Element)),
                  s(:ivasgn, :@element,
                    s(:lvar, :second)),
                  s(:ivasgn, :@element,
                    s(:send,
                      s(:lvar, :first), :element)))),
              s(:if,
                s(:send,
                  s(:lvar, :first), :kind_of?,
                  s(:const, nil, :String)),
                s(:begin,
                  s(:ivasgn, :@element,
                    s(:lvar, :parent)),
                  s(:send,
                    s(:self), :name=,
                    s(:lvar, :first)),
                  s(:ivasgn, :@normalized,
                    s(:send,
                      s(:lvar, :second), :to_s))),
                s(:send, nil, :raise,
                  s(:dstr,
                    s(:str, "illegal argument "),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :first), :class), :name)),
                    s(:str, " to Attribute constructor"))))))),
        s(:def, :prefix,
          s(:args),
          s(:begin,
            s(:lvasgn, :pf,
              s(:zsuper)),
            s(:if,
              s(:send,
                s(:lvar, :pf), :==,
                s(:str, "")),
              s(:if,
                s(:ivar, :@element),
                s(:lvasgn, :pf,
                  s(:send,
                    s(:ivar, :@element), :prefix)), nil), nil),
            s(:lvar, :pf))),
        s(:def, :namespace,
          s(:args,
            s(:optarg, :arg,
              s(:nil))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :arg), :nil?),
              s(:lvasgn, :arg,
                s(:send, nil, :prefix)), nil),
            s(:send,
              s(:ivar, :@element), :namespace,
              s(:lvar, :arg)))),
        s(:def, :==,
          s(:args,
            s(:arg, :other)),
          s(:and,
            s(:and,
              s(:send,
                s(:lvar, :other), :kind_of?,
                s(:const, nil, :Attribute)),
              s(:send,
                s(:send,
                  s(:lvar, :other), :name), :==,
                s(:send, nil, :name))),
            s(:send,
              s(:send,
                s(:lvar, :other), :value), :==,
              s(:send, nil, :value)))),
        s(:def, :hash,
          s(:args),
          s(:send,
            s(:send,
              s(:send, nil, :name), :hash), :+,
            s(:send,
              s(:send, nil, :value), :hash))),
        s(:def, :to_string,
          s(:args),
          s(:if,
            s(:and,
              s(:and,
                s(:ivar, :@element),
                s(:send,
                  s(:ivar, :@element), :context)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@element), :context), :[],
                  s(:sym, :attribute_quote)), :==,
                s(:sym, :quote))),
            s(:dstr,
              s(:ivar, :@expanded_name),
              s(:str, "=\""),
              s(:begin,
                s(:send,
                  s(:send, nil, :to_s), :gsub,
                  s(:regexp,
                    s(:str, "\""),
                    s(:regopt)),
                  s(:str, "&quot;"))),
              s(:str, "\"")),
            s(:dstr,
              s(:ivar, :@expanded_name),
              s(:str, "='"),
              s(:begin,
                s(:send,
                  s(:send, nil, :to_s), :gsub,
                  s(:regexp,
                    s(:str, "'"),
                    s(:regopt)),
                  s(:str, "&apos;"))),
              s(:str, "'")))),
        s(:def, :doctype,
          s(:args),
          s(:if,
            s(:ivar, :@element),
            s(:begin,
              s(:lvasgn, :doc,
                s(:send,
                  s(:ivar, :@element), :document)),
              s(:if,
                s(:lvar, :doc),
                s(:send,
                  s(:lvar, :doc), :doctype), nil)), nil)),
        s(:def, :to_s,
          s(:args),
          s(:begin,
            s(:if,
              s(:ivar, :@normalized),
              s(:return,
                s(:ivar, :@normalized)), nil),
            s(:ivasgn, :@normalized,
              s(:send,
                s(:const, nil, :Text), :normalize,
                s(:ivar, :@unnormalized),
                s(:send, nil, :doctype))),
            s(:ivasgn, :@unnormalized,
              s(:nil)),
            s(:ivar, :@normalized))),
        s(:def, :value,
          s(:args),
          s(:begin,
            s(:if,
              s(:ivar, :@unnormalized),
              s(:return,
                s(:ivar, :@unnormalized)), nil),
            s(:ivasgn, :@unnormalized,
              s(:send,
                s(:const, nil, :Text), :unnormalize,
                s(:ivar, :@normalized),
                s(:send, nil, :doctype))),
            s(:ivasgn, :@normalized,
              s(:nil)),
            s(:ivar, :@unnormalized))),
        s(:def, :clone,
          s(:args),
          s(:send,
            s(:const, nil, :Attribute), :new,
            s(:self))),
        s(:def, :element=,
          s(:args,
            s(:arg, :element)),
          s(:begin,
            s(:ivasgn, :@element,
              s(:lvar, :element)),
            s(:if,
              s(:ivar, :@normalized),
              s(:send,
                s(:const, nil, :Text), :check,
                s(:ivar, :@normalized),
                s(:const, nil, :NEEDS_A_SECOND_CHECK),
                s(:send, nil, :doctype)), nil),
            s(:self))),
        s(:def, :remove,
          s(:args),
          s(:if,
            s(:send,
              s(:ivar, :@element), :nil?), nil,
            s(:send,
              s(:send,
                s(:ivar, :@element), :attributes), :delete,
              s(:send,
                s(:self), :name)))),
        s(:def, :write,
          s(:args,
            s(:arg, :output),
            s(:optarg, :indent,
              s(:int, -1))),
          s(:send,
            s(:lvar, :output), :<<,
            s(:send, nil, :to_string))),
        s(:def, :node_type,
          s(:args),
          s(:sym, :attribute)),
        s(:def, :inspect,
          s(:args),
          s(:begin,
            s(:lvasgn, :rv,
              s(:str, "")),
            s(:send, nil, :write,
              s(:lvar, :rv)),
            s(:lvar, :rv))),
        s(:def, :xpath,
          s(:args),
          s(:begin,
            s(:lvasgn, :path,
              s(:send,
                s(:ivar, :@element), :xpath)),
            s(:op_asgn,
              s(:lvasgn, :path), :+,
              s(:dstr,
                s(:str, "/@"),
                s(:begin,
                  s(:send,
                    s(:self), :expanded_name)))),
            s(:return,
              s(:lvar, :path))))))))
