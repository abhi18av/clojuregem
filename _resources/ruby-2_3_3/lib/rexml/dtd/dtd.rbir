s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/dtd/elementdecl")),
  s(:send, nil, :require,
    s(:str, "rexml/dtd/entitydecl")),
  s(:send, nil, :require,
    s(:str, "rexml/comment")),
  s(:send, nil, :require,
    s(:str, "rexml/dtd/notationdecl")),
  s(:send, nil, :require,
    s(:str, "rexml/dtd/attlistdecl")),
  s(:send, nil, :require,
    s(:str, "rexml/parent")),
  s(:module,
    s(:const, nil, :REXML),
    s(:module,
      s(:const, nil, :DTD),
      s(:class,
        s(:const, nil, :Parser), nil,
        s(:begin,
          s(:defs,
            s(:const, nil, :Parser), :parse,
            s(:args,
              s(:arg, :input)),
            s(:case,
              s(:lvar, :input),
              s(:when,
                s(:const, nil, :String),
                s(:send, nil, :parse_helper,
                  s(:lvar, :input))),
              s(:when,
                s(:const, nil, :File),
                s(:send, nil, :parse_helper,
                  s(:send,
                    s(:lvar, :input), :read))), nil)),
          s(:defs,
            s(:const, nil, :Parser), :parse_helper,
            s(:args,
              s(:arg, :input)),
            s(:begin,
              s(:lvasgn, :contents,
                s(:send,
                  s(:const, nil, :Parent), :new)),
              s(:while,
                s(:send,
                  s(:send,
                    s(:lvar, :input), :size), :>,
                  s(:int, 0)),
                s(:case,
                  s(:lvar, :input),
                  s(:when,
                    s(:send,
                      s(:const, nil, :ElementDecl), :PATTERN_RE),
                    s(:begin,
                      s(:lvasgn, :match,
                        s(:back_ref, :$&)),
                      s(:send,
                        s(:lvar, :contents), :<<,
                        s(:send,
                          s(:const, nil, :ElementDecl), :new,
                          s(:lvar, :match))))),
                  s(:when,
                    s(:send,
                      s(:const, nil, :AttlistDecl), :PATTERN_RE),
                    s(:begin,
                      s(:lvasgn, :matchdata,
                        s(:gvar, :$~)),
                      s(:send,
                        s(:lvar, :contents), :<<,
                        s(:send,
                          s(:const, nil, :AttlistDecl), :new,
                          s(:lvar, :matchdata))))),
                  s(:when,
                    s(:send,
                      s(:const, nil, :EntityDecl), :PATTERN_RE),
                    s(:begin,
                      s(:lvasgn, :matchdata,
                        s(:gvar, :$~)),
                      s(:send,
                        s(:lvar, :contents), :<<,
                        s(:send,
                          s(:const, nil, :EntityDecl), :new,
                          s(:lvar, :matchdata))))),
                  s(:when,
                    s(:send,
                      s(:const, nil, :Comment), :PATTERN_RE),
                    s(:begin,
                      s(:lvasgn, :matchdata,
                        s(:gvar, :$~)),
                      s(:send,
                        s(:lvar, :contents), :<<,
                        s(:send,
                          s(:const, nil, :Comment), :new,
                          s(:lvar, :matchdata))))),
                  s(:when,
                    s(:send,
                      s(:const, nil, :NotationDecl), :PATTERN_RE),
                    s(:begin,
                      s(:lvasgn, :matchdata,
                        s(:gvar, :$~)),
                      s(:send,
                        s(:lvar, :contents), :<<,
                        s(:send,
                          s(:const, nil, :NotationDecl), :new,
                          s(:lvar, :matchdata))))), nil)),
              s(:lvar, :contents))))))))
