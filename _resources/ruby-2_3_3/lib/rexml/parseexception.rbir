s(:module,
  s(:const, nil, :REXML),
  s(:class,
    s(:const, nil, :ParseException),
    s(:const, nil, :RuntimeError),
    s(:begin,
      s(:send, nil, :attr_accessor,
        s(:sym, :source),
        s(:sym, :parser),
        s(:sym, :continued_exception)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :message),
          s(:optarg, :source,
            s(:nil)),
          s(:optarg, :parser,
            s(:nil)),
          s(:optarg, :exception,
            s(:nil))),
        s(:begin,
          s(:super,
            s(:lvar, :message)),
          s(:ivasgn, :@source,
            s(:lvar, :source)),
          s(:ivasgn, :@parser,
            s(:lvar, :parser)),
          s(:ivasgn, :@continued_exception,
            s(:lvar, :exception)))),
      s(:def, :to_s,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@continued_exception),
            s(:begin,
              s(:lvasgn, :err,
                s(:send,
                  s(:ivar, :@continued_exception), :inspect)),
              s(:send,
                s(:lvar, :err), :<<,
                s(:str, "\n")),
              s(:send,
                s(:lvar, :err), :<<,
                s(:send,
                  s(:send,
                    s(:ivar, :@continued_exception), :backtrace), :join,
                  s(:str, "\n"))),
              s(:send,
                s(:lvar, :err), :<<,
                s(:str, "\n...\n"))),
            s(:lvasgn, :err,
              s(:str, ""))),
          s(:send,
            s(:lvar, :err), :<<,
            s(:zsuper)),
          s(:if,
            s(:ivar, :@source),
            s(:begin,
              s(:send,
                s(:lvar, :err), :<<,
                s(:dstr,
                  s(:str, "\nLine: "),
                  s(:begin,
                    s(:send, nil, :line)),
                  s(:str, "\n"))),
              s(:send,
                s(:lvar, :err), :<<,
                s(:dstr,
                  s(:str, "Position: "),
                  s(:begin,
                    s(:send, nil, :position)),
                  s(:str, "\n"))),
              s(:send,
                s(:lvar, :err), :<<,
                s(:str, "Last 80 unconsumed characters:\n")),
              s(:send,
                s(:lvar, :err), :<<,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@source), :buffer), :[],
                      s(:irange,
                        s(:int, 0),
                        s(:int, 80))), :force_encoding,
                    s(:str, "ASCII-8BIT")), :gsub,
                  s(:regexp,
                    s(:str, "\\n"),
                    s(:regopt)),
                  s(:str, " ")))), nil),
          s(:lvar, :err))),
      s(:def, :position,
        s(:args),
        s(:if,
          s(:and,
            s(:and,
              s(:ivar, :@source),
              s(:defined?,
                s(:send,
                  s(:ivar, :@source), :current_line))),
            s(:send,
              s(:ivar, :@source), :current_line)),
          s(:send,
            s(:send,
              s(:ivar, :@source), :current_line), :[],
            s(:int, 0)), nil)),
      s(:def, :line,
        s(:args),
        s(:if,
          s(:and,
            s(:and,
              s(:ivar, :@source),
              s(:defined?,
                s(:send,
                  s(:ivar, :@source), :current_line))),
            s(:send,
              s(:ivar, :@source), :current_line)),
          s(:send,
            s(:send,
              s(:ivar, :@source), :current_line), :[],
            s(:int, 2)), nil)),
      s(:def, :context,
        s(:args),
        s(:send,
          s(:ivar, :@source), :current_line)))))
