s(:module,
  s(:const, nil, :REXML),
  s(:module,
    s(:const, nil, :Encoding),
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :encoding)),
      s(:def, :encoding=,
        s(:args,
          s(:arg, :encoding)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :encoding), :is_a?,
              s(:const, nil, :Encoding)),
            s(:lvasgn, :encoding,
              s(:send,
                s(:lvar, :encoding), :name)), nil),
          s(:if,
            s(:send,
              s(:lvar, :encoding), :is_a?,
              s(:const, nil, :String)),
            s(:begin,
              s(:lvasgn, :original_encoding,
                s(:lvar, :encoding)),
              s(:lvasgn, :encoding,
                s(:send, nil, :find_encoding,
                  s(:lvar, :encoding))),
              s(:if,
                s(:lvar, :encoding), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "Bad encoding name "),
                    s(:begin,
                      s(:lvar, :original_encoding)))))), nil),
          s(:if,
            s(:and,
              s(:defined?,
                s(:ivar, :@encoding)),
              s(:send,
                s(:lvar, :encoding), :==,
                s(:ivar, :@encoding))),
            s(:return,
              s(:false)), nil),
          s(:if,
            s(:lvar, :encoding),
            s(:ivasgn, :@encoding,
              s(:send,
                s(:lvar, :encoding), :upcase)),
            s(:ivasgn, :@encoding,
              s(:str, "UTF-8"))),
          s(:true))),
      s(:def, :encode,
        s(:args,
          s(:arg, :string)),
        s(:send,
          s(:lvar, :string), :encode,
          s(:ivar, :@encoding))),
      s(:def, :decode,
        s(:args,
          s(:arg, :string)),
        s(:send,
          s(:lvar, :string), :encode,
          s(:const,
            s(:const,
              s(:cbase), :Encoding), :UTF_8),
          s(:ivar, :@encoding))),
      s(:send, nil, :private),
      s(:def, :find_encoding,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:case,
            s(:lvar, :name),
            s(:when,
              s(:regexp,
                s(:str, "\\Ashift-jis\\z"),
                s(:regopt, :i)),
              s(:return,
                s(:str, "SHIFT_JIS"))),
            s(:when,
              s(:regexp,
                s(:str, "\\ACP-(\\d+)\\z"),
                s(:regopt)),
              s(:lvasgn, :name,
                s(:dstr,
                  s(:str, "CP"),
                  s(:begin,
                    s(:nth_ref, 1))))),
            s(:when,
              s(:regexp,
                s(:str, "\\AUTF-8\\z"),
                s(:regopt, :i)),
              s(:return,
                s(:lvar, :name))), nil),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const,
                  s(:const,
                    s(:cbase), :Encoding), :Converter), :search_convpath,
                s(:lvar, :name),
                s(:str, "UTF-8")),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const,
                      s(:cbase), :Encoding), :ConverterNotFoundError)), nil,
                s(:return,
                  s(:nil))), nil)),
          s(:lvar, :name))))))
