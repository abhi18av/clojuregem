s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/node")),
  s(:module,
    s(:const, nil, :REXML),
    s(:class,
      s(:const, nil, :Child), nil,
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Node)),
        s(:send, nil, :attr_reader,
          s(:sym, :parent)),
        s(:def, :initialize,
          s(:args,
            s(:optarg, :parent,
              s(:nil))),
          s(:begin,
            s(:ivasgn, :@parent,
              s(:nil)),
            s(:if,
              s(:lvar, :parent),
              s(:send,
                s(:lvar, :parent), :add,
                s(:self)), nil))),
        s(:def, :replace_with,
          s(:args,
            s(:arg, :child)),
          s(:begin,
            s(:send,
              s(:ivar, :@parent), :replace_child,
              s(:self),
              s(:lvar, :child)),
            s(:self))),
        s(:def, :remove,
          s(:args),
          s(:begin,
            s(:if,
              s(:send,
                s(:ivar, :@parent), :nil?), nil,
              s(:send,
                s(:ivar, :@parent), :delete,
                s(:self))),
            s(:self))),
        s(:def, :parent=,
          s(:args,
            s(:arg, :other)),
          s(:begin,
            s(:if,
              s(:send,
                s(:ivar, :@parent), :==,
                s(:lvar, :other)),
              s(:return,
                s(:ivar, :@parent)), nil),
            s(:if,
              s(:and,
                s(:defined?,
                  s(:ivar, :@parent)),
                s(:ivar, :@parent)),
              s(:send,
                s(:ivar, :@parent), :delete,
                s(:self)), nil),
            s(:ivasgn, :@parent,
              s(:lvar, :other)))),
        s(:alias,
          s(:sym, :next_sibling),
          s(:sym, :next_sibling_node)),
        s(:alias,
          s(:sym, :previous_sibling),
          s(:sym, :previous_sibling_node)),
        s(:def, :next_sibling=,
          s(:args,
            s(:arg, :other)),
          s(:send,
            s(:send, nil, :parent), :insert_after,
            s(:self),
            s(:lvar, :other))),
        s(:def, :previous_sibling=,
          s(:args,
            s(:arg, :other)),
          s(:send,
            s(:send, nil, :parent), :insert_before,
            s(:self),
            s(:lvar, :other))),
        s(:def, :document,
          s(:args),
          s(:begin,
            s(:if,
              s(:send,
                s(:send, nil, :parent), :nil?), nil,
              s(:return,
                s(:send,
                  s(:send, nil, :parent), :document))),
            s(:nil))),
        s(:def, :bytes,
          s(:args),
          s(:begin,
            s(:send,
              s(:send, nil, :document), :encoding),
            s(:send, nil, :to_s)))))))
