s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/encoding")),
  s(:module,
    s(:const, nil, :REXML),
    s(:class,
      s(:const, nil, :Output), nil,
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Encoding)),
        s(:send, nil, :attr_reader,
          s(:sym, :encoding)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :real_IO),
            s(:optarg, :encd,
              s(:str, "iso-8859-1"))),
          s(:begin,
            s(:ivasgn, :@output,
              s(:lvar, :real_IO)),
            s(:send,
              s(:self), :encoding=,
              s(:lvar, :encd)),
            s(:ivasgn, :@to_utf,
              s(:send,
                s(:send, nil, :encoding), :!=,
                s(:str, "UTF-8"))),
            s(:if,
              s(:send,
                s(:send, nil, :encoding), :==,
                s(:str, "UTF-16")),
              s(:begin,
                s(:send,
                  s(:ivar, :@output), :<<,
                  s(:send,
                    s(:str, "ï»¿"), :encode,
                    s(:str, "UTF-16BE"))),
                s(:send,
                  s(:self), :encoding=,
                  s(:str, "UTF-16BE"))), nil))),
        s(:def, :<<,
          s(:args,
            s(:arg, :content)),
          s(:send,
            s(:ivar, :@output), :<<,
            s(:begin,
              s(:if,
                s(:ivar, :@to_utf),
                s(:send,
                  s(:self), :encode,
                  s(:lvar, :content)),
                s(:lvar, :content))))),
        s(:def, :to_s,
          s(:args),
          s(:dstr,
            s(:str, "Output["),
            s(:begin,
              s(:send, nil, :encoding)),
            s(:str, "]")))))))
