s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/child")),
  s(:send, nil, :require,
    s(:str, "rexml/source")),
  s(:module,
    s(:const, nil, :REXML),
    s(:class,
      s(:const, nil, :AttlistDecl),
      s(:const, nil, :Child),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Enumerable)),
        s(:send, nil, :attr_reader,
          s(:sym, :element_name)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :source)),
          s(:begin,
            s(:super),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :source), :kind_of?,
                  s(:const, nil, :Array))),
              s(:masgn,
                s(:mlhs,
                  s(:ivasgn, :@element_name),
                  s(:ivasgn, :@pairs),
                  s(:ivasgn, :@contents)),
                s(:array,
                  s(:splat,
                    s(:lvar, :source)))), nil))),
        s(:def, :[],
          s(:args,
            s(:arg, :key)),
          s(:send,
            s(:ivar, :@pairs), :[],
            s(:lvar, :key))),
        s(:def, :include?,
          s(:args,
            s(:arg, :key)),
          s(:send,
            s(:send,
              s(:ivar, :@pairs), :keys), :include?,
            s(:lvar, :key))),
        s(:def, :each,
          s(:args,
            s(:blockarg, :block)),
          s(:send,
            s(:ivar, :@pairs), :each,
            s(:block_pass,
              s(:lvar, :block)))),
        s(:def, :write,
          s(:args,
            s(:arg, :out),
            s(:optarg, :indent,
              s(:int, -1))),
          s(:send,
            s(:lvar, :out), :<<,
            s(:ivar, :@contents))),
        s(:def, :node_type,
          s(:args),
          s(:sym, :attlistdecl))))))
