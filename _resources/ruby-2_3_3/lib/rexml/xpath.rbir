s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/functions")),
  s(:send, nil, :require,
    s(:str, "rexml/xpath_parser")),
  s(:module,
    s(:const, nil, :REXML),
    s(:class,
      s(:const, nil, :XPath), nil,
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Functions)),
        s(:casgn, nil, :EMPTY_HASH,
          s(:hash)),
        s(:defs,
          s(:const, nil, :XPath), :first,
          s(:args,
            s(:arg, :element),
            s(:optarg, :path,
              s(:nil)),
            s(:optarg, :namespaces,
              s(:nil)),
            s(:optarg, :variables,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :namespaces), :nil?),
                s(:send,
                  s(:lvar, :namespaces), :kind_of?,
                  s(:const, nil, :Hash))), nil,
              s(:send, nil, :raise,
                s(:str, "The namespaces argument, if supplied, must be a hash object."))),
            s(:if,
              s(:send,
                s(:lvar, :variables), :kind_of?,
                s(:const, nil, :Hash)), nil,
              s(:send, nil, :raise,
                s(:str, "The variables argument, if supplied, must be a hash object."))),
            s(:lvasgn, :parser,
              s(:send,
                s(:const, nil, :XPathParser), :new)),
            s(:send,
              s(:lvar, :parser), :namespaces=,
              s(:lvar, :namespaces)),
            s(:send,
              s(:lvar, :parser), :variables=,
              s(:lvar, :variables)),
            s(:if,
              s(:lvar, :path), nil,
              s(:lvasgn, :path,
                s(:str, "*"))),
            s(:if,
              s(:send,
                s(:lvar, :element), :kind_of?,
                s(:const, nil, :Array)), nil,
              s(:lvasgn, :element,
                s(:array,
                  s(:lvar, :element)))),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :parser), :parse,
                  s(:lvar, :path),
                  s(:lvar, :element)), :flatten), :[],
              s(:int, 0)))),
        s(:defs,
          s(:const, nil, :XPath), :each,
          s(:args,
            s(:arg, :element),
            s(:optarg, :path,
              s(:nil)),
            s(:optarg, :namespaces,
              s(:nil)),
            s(:optarg, :variables,
              s(:hash)),
            s(:blockarg, :block)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :namespaces), :nil?),
                s(:send,
                  s(:lvar, :namespaces), :kind_of?,
                  s(:const, nil, :Hash))), nil,
              s(:send, nil, :raise,
                s(:str, "The namespaces argument, if supplied, must be a hash object."))),
            s(:if,
              s(:send,
                s(:lvar, :variables), :kind_of?,
                s(:const, nil, :Hash)), nil,
              s(:send, nil, :raise,
                s(:str, "The variables argument, if supplied, must be a hash object."))),
            s(:lvasgn, :parser,
              s(:send,
                s(:const, nil, :XPathParser), :new)),
            s(:send,
              s(:lvar, :parser), :namespaces=,
              s(:lvar, :namespaces)),
            s(:send,
              s(:lvar, :parser), :variables=,
              s(:lvar, :variables)),
            s(:if,
              s(:lvar, :path), nil,
              s(:lvasgn, :path,
                s(:str, "*"))),
            s(:if,
              s(:send,
                s(:lvar, :element), :kind_of?,
                s(:const, nil, :Array)), nil,
              s(:lvasgn, :element,
                s(:array,
                  s(:lvar, :element)))),
            s(:send,
              s(:send,
                s(:lvar, :parser), :parse,
                s(:lvar, :path),
                s(:lvar, :element)), :each,
              s(:block_pass,
                s(:lvar, :block))))),
        s(:defs,
          s(:const, nil, :XPath), :match,
          s(:args,
            s(:arg, :element),
            s(:optarg, :path,
              s(:nil)),
            s(:optarg, :namespaces,
              s(:nil)),
            s(:optarg, :variables,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :parser,
              s(:send,
                s(:const, nil, :XPathParser), :new)),
            s(:send,
              s(:lvar, :parser), :namespaces=,
              s(:lvar, :namespaces)),
            s(:send,
              s(:lvar, :parser), :variables=,
              s(:lvar, :variables)),
            s(:if,
              s(:lvar, :path), nil,
              s(:lvasgn, :path,
                s(:str, "*"))),
            s(:if,
              s(:send,
                s(:lvar, :element), :kind_of?,
                s(:const, nil, :Array)), nil,
              s(:lvasgn, :element,
                s(:array,
                  s(:lvar, :element)))),
            s(:send,
              s(:lvar, :parser), :parse,
              s(:lvar, :path),
              s(:lvar, :element))))))))
