s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/parent")),
  s(:send, nil, :require,
    s(:str, "rexml/namespace")),
  s(:send, nil, :require,
    s(:str, "rexml/attribute")),
  s(:send, nil, :require,
    s(:str, "rexml/cdata")),
  s(:send, nil, :require,
    s(:str, "rexml/xpath")),
  s(:send, nil, :require,
    s(:str, "rexml/parseexception")),
  s(:module,
    s(:const, nil, :REXML),
    s(:begin,
      s(:cvasgn, :@@namespaces,
        s(:hash)),
      s(:class,
        s(:const, nil, :Element),
        s(:const, nil, :Parent),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :Namespace)),
          s(:casgn, nil, :UNDEFINED,
            s(:str, "UNDEFINED")),
          s(:send, nil, :attr_reader,
            s(:sym, :attributes),
            s(:sym, :elements)),
          s(:send, nil, :attr_accessor,
            s(:sym, :context)),
          s(:def, :initialize,
            s(:args,
              s(:optarg, :arg,
                s(:const, nil, :UNDEFINED)),
              s(:optarg, :parent,
                s(:nil)),
              s(:optarg, :context,
                s(:nil))),
            s(:begin,
              s(:super,
                s(:lvar, :parent)),
              s(:ivasgn, :@elements,
                s(:send,
                  s(:const, nil, :Elements), :new,
                  s(:self))),
              s(:ivasgn, :@attributes,
                s(:send,
                  s(:const, nil, :Attributes), :new,
                  s(:self))),
              s(:ivasgn, :@context,
                s(:lvar, :context)),
              s(:if,
                s(:send,
                  s(:lvar, :arg), :kind_of?,
                  s(:const, nil, :String)),
                s(:send,
                  s(:self), :name=,
                  s(:lvar, :arg)),
                s(:if,
                  s(:send,
                    s(:lvar, :arg), :kind_of?,
                    s(:const, nil, :Element)),
                  s(:begin,
                    s(:send,
                      s(:self), :name=,
                      s(:send,
                        s(:lvar, :arg), :expanded_name)),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :arg), :attributes), :each_attribute),
                      s(:args,
                        s(:arg, :attribute)),
                      s(:send,
                        s(:ivar, :@attributes), :<<,
                        s(:send,
                          s(:const, nil, :Attribute), :new,
                          s(:lvar, :attribute)))),
                    s(:ivasgn, :@context,
                      s(:send,
                        s(:lvar, :arg), :context))), nil)))),
          s(:def, :inspect,
            s(:args),
            s(:begin,
              s(:lvasgn, :rv,
                s(:dstr,
                  s(:str, "<"),
                  s(:ivar, :@expanded_name))),
              s(:block,
                s(:send,
                  s(:ivar, :@attributes), :each_attribute),
                s(:args,
                  s(:arg, :attr)),
                s(:begin,
                  s(:send,
                    s(:lvar, :rv), :<<,
                    s(:str, " ")),
                  s(:send,
                    s(:lvar, :attr), :write,
                    s(:lvar, :rv),
                    s(:int, 0)))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:send, nil, :children), :size), :>,
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :rv), :<<,
                  s(:str, "> ... </>")),
                s(:send,
                  s(:lvar, :rv), :<<,
                  s(:str, "/>"))))),
          s(:def, :clone,
            s(:args),
            s(:send,
              s(:send,
                s(:self), :class), :new,
              s(:self))),
          s(:def, :root_node,
            s(:args),
            s(:if,
              s(:send,
                s(:send, nil, :parent), :nil?),
              s(:self),
              s(:send,
                s(:send, nil, :parent), :root_node))),
          s(:def, :root,
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:self), :kind_of?,
                  s(:const, nil, :Document)),
                s(:return,
                  s(:send,
                    s(:send, nil, :elements), :[],
                    s(:int, 1))), nil),
              s(:if,
                s(:or,
                  s(:send,
                    s(:send, nil, :parent), :kind_of?,
                    s(:const, nil, :Document)),
                  s(:send,
                    s(:send, nil, :parent), :nil?)),
                s(:return,
                  s(:self)), nil),
              s(:return,
                s(:send,
                  s(:send, nil, :parent), :root)))),
          s(:def, :document,
            s(:args),
            s(:begin,
              s(:lvasgn, :rt,
                s(:send, nil, :root)),
              s(:if,
                s(:lvar, :rt),
                s(:send,
                  s(:lvar, :rt), :parent), nil))),
          s(:def, :whitespace,
            s(:args),
            s(:begin,
              s(:ivasgn, :@whitespace,
                s(:nil)),
              s(:if,
                s(:ivar, :@context),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:ivar, :@context), :[],
                      s(:sym, :respect_whitespace)),
                    s(:ivasgn, :@whitespace,
                      s(:begin,
                        s(:or,
                          s(:send,
                            s(:send,
                              s(:ivar, :@context), :[],
                              s(:sym, :respect_whitespace)), :==,
                            s(:sym, :all)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@context), :[],
                              s(:sym, :respect_whitespace)), :include?,
                            s(:send, nil, :expanded_name))))), nil),
                  s(:if,
                    s(:begin,
                      s(:and,
                        s(:send,
                          s(:ivar, :@context), :[],
                          s(:sym, :compress_whitespace)),
                        s(:begin,
                          s(:or,
                            s(:send,
                              s(:send,
                                s(:ivar, :@context), :[],
                                s(:sym, :compress_whitespace)), :==,
                              s(:sym, :all)),
                            s(:send,
                              s(:send,
                                s(:ivar, :@context), :[],
                                s(:sym, :compress_whitespace)), :include?,
                              s(:send, nil, :expanded_name)))))),
                    s(:ivasgn, :@whitespace,
                      s(:false)), nil)), nil),
              s(:if,
                s(:send,
                  s(:ivar, :@whitespace), :==,
                  s(:false)), nil,
                s(:ivasgn, :@whitespace,
                  s(:true))),
              s(:ivar, :@whitespace))),
          s(:def, :ignore_whitespace_nodes,
            s(:args),
            s(:begin,
              s(:ivasgn, :@ignore_whitespace_nodes,
                s(:false)),
              s(:if,
                s(:ivar, :@context),
                s(:if,
                  s(:send,
                    s(:ivar, :@context), :[],
                    s(:sym, :ignore_whitespace_nodes)),
                  s(:ivasgn, :@ignore_whitespace_nodes,
                    s(:begin,
                      s(:or,
                        s(:send,
                          s(:send,
                            s(:ivar, :@context), :[],
                            s(:sym, :ignore_whitespace_nodes)), :==,
                          s(:sym, :all)),
                        s(:send,
                          s(:send,
                            s(:ivar, :@context), :[],
                            s(:sym, :ignore_whitespace_nodes)), :include?,
                          s(:send, nil, :expanded_name))))), nil), nil))),
          s(:def, :raw,
            s(:args),
            s(:begin,
              s(:ivasgn, :@raw,
                s(:begin,
                  s(:and,
                    s(:and,
                      s(:ivar, :@context),
                      s(:send,
                        s(:ivar, :@context), :[],
                        s(:sym, :raw))),
                    s(:begin,
                      s(:or,
                        s(:send,
                          s(:send,
                            s(:ivar, :@context), :[],
                            s(:sym, :raw)), :==,
                          s(:sym, :all)),
                        s(:send,
                          s(:send,
                            s(:ivar, :@context), :[],
                            s(:sym, :raw)), :include?,
                          s(:send, nil, :expanded_name))))))),
              s(:ivar, :@raw))),
          s(:def, :prefixes,
            s(:args),
            s(:begin,
              s(:lvasgn, :prefixes,
                s(:array)),
              s(:if,
                s(:send, nil, :parent),
                s(:lvasgn, :prefixes,
                  s(:send,
                    s(:send, nil, :parent), :prefixes)), nil),
              s(:op_asgn,
                s(:lvasgn, :prefixes), :|,
                s(:send,
                  s(:send, nil, :attributes), :prefixes)),
              s(:return,
                s(:lvar, :prefixes)))),
          s(:def, :namespaces,
            s(:args),
            s(:begin,
              s(:lvasgn, :namespaces,
                s(:hash)),
              s(:if,
                s(:send, nil, :parent),
                s(:lvasgn, :namespaces,
                  s(:send,
                    s(:send, nil, :parent), :namespaces)), nil),
              s(:lvasgn, :namespaces,
                s(:send,
                  s(:lvar, :namespaces), :merge,
                  s(:send,
                    s(:send, nil, :attributes), :namespaces))),
              s(:return,
                s(:lvar, :namespaces)))),
          s(:def, :namespace,
            s(:args,
              s(:optarg, :prefix,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :prefix), :nil?),
                s(:lvasgn, :prefix,
                  s(:send, nil, :prefix)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :prefix), :==,
                  s(:str, "")),
                s(:lvasgn, :prefix,
                  s(:str, "xmlns")),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :prefix), :[],
                      s(:int, 0),
                      s(:int, 5)), :==,
                    s(:str, "xmlns")), nil,
                  s(:lvasgn, :prefix,
                    s(:dstr,
                      s(:str, "xmlns:"),
                      s(:begin,
                        s(:lvar, :prefix)))))),
              s(:lvasgn, :ns,
                s(:send,
                  s(:send, nil, :attributes), :[],
                  s(:lvar, :prefix))),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :ns), :nil?),
                  s(:send, nil, :parent)),
                s(:lvasgn, :ns,
                  s(:send,
                    s(:send, nil, :parent), :namespace,
                    s(:lvar, :prefix))), nil),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :ns), :nil?),
                  s(:send,
                    s(:lvar, :prefix), :==,
                    s(:str, "xmlns"))),
                s(:lvasgn, :ns,
                  s(:str, "")), nil),
              s(:return,
                s(:lvar, :ns)))),
          s(:def, :add_namespace,
            s(:args,
              s(:arg, :prefix),
              s(:optarg, :uri,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:lvar, :uri),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :prefix), :=~,
                      s(:regexp,
                        s(:str, "^xmlns:"),
                        s(:regopt))), nil,
                    s(:lvasgn, :prefix,
                      s(:dstr,
                        s(:str, "xmlns:"),
                        s(:begin,
                          s(:lvar, :prefix))))),
                  s(:send,
                    s(:ivar, :@attributes), :[]=,
                    s(:lvar, :prefix),
                    s(:lvar, :uri))),
                s(:send,
                  s(:ivar, :@attributes), :[]=,
                  s(:str, "xmlns"),
                  s(:lvar, :prefix))),
              s(:self))),
          s(:def, :delete_namespace,
            s(:args,
              s(:optarg, :namespace,
                s(:str, "xmlns"))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :namespace), :==,
                  s(:str, "xmlns")), nil,
                s(:lvasgn, :namespace,
                  s(:dstr,
                    s(:str, "xmlns:"),
                    s(:begin,
                      s(:lvar, :namespace))))),
              s(:lvasgn, :attribute,
                s(:send,
                  s(:send, nil, :attributes), :get_attribute,
                  s(:lvar, :namespace))),
              s(:if,
                s(:send,
                  s(:lvar, :attribute), :nil?), nil,
                s(:send,
                  s(:lvar, :attribute), :remove)),
              s(:self))),
          s(:def, :add_element,
            s(:args,
              s(:arg, :element),
              s(:optarg, :attrs,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :element), :nil?),
                s(:send, nil, :raise,
                  s(:str, "First argument must be either an element name, or an Element object")), nil),
              s(:lvasgn, :el,
                s(:send,
                  s(:ivar, :@elements), :add,
                  s(:lvar, :element))),
              s(:if,
                s(:send,
                  s(:lvar, :attrs), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:block,
                  s(:send,
                    s(:lvar, :attrs), :each),
                  s(:args,
                    s(:arg, :key),
                    s(:arg, :value)),
                  s(:send,
                    s(:send,
                      s(:lvar, :el), :attributes), :[]=,
                    s(:lvar, :key),
                    s(:lvar, :value))), nil),
              s(:lvar, :el))),
          s(:def, :delete_element,
            s(:args,
              s(:arg, :element)),
            s(:send,
              s(:ivar, :@elements), :delete,
              s(:lvar, :element))),
          s(:def, :has_elements?,
            s(:args),
            s(:send,
              s(:send,
                s(:ivar, :@elements), :empty?), :!)),
          s(:def, :each_element_with_attribute,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:nil)),
              s(:optarg, :max,
                s(:int, 0)),
              s(:optarg, :name,
                s(:nil)),
              s(:blockarg, :block)),
            s(:send, nil, :each_with_something,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :child)),
                s(:if,
                  s(:send,
                    s(:lvar, :value), :nil?),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :child), :attributes), :[],
                      s(:lvar, :key)), :!=,
                    s(:nil)),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :child), :attributes), :[],
                      s(:lvar, :key)), :==,
                    s(:lvar, :value)))),
              s(:lvar, :max),
              s(:lvar, :name),
              s(:block_pass,
                s(:lvar, :block)))),
          s(:def, :each_element_with_text,
            s(:args,
              s(:optarg, :text,
                s(:nil)),
              s(:optarg, :max,
                s(:int, 0)),
              s(:optarg, :name,
                s(:nil)),
              s(:blockarg, :block)),
            s(:send, nil, :each_with_something,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :child)),
                s(:if,
                  s(:send,
                    s(:lvar, :text), :nil?),
                  s(:send,
                    s(:lvar, :child), :has_text?),
                  s(:send,
                    s(:send,
                      s(:lvar, :child), :text), :==,
                    s(:lvar, :text)))),
              s(:lvar, :max),
              s(:lvar, :name),
              s(:block_pass,
                s(:lvar, :block)))),
          s(:def, :each_element,
            s(:args,
              s(:optarg, :xpath,
                s(:nil)),
              s(:blockarg, :block)),
            s(:send,
              s(:ivar, :@elements), :each,
              s(:lvar, :xpath),
              s(:block_pass,
                s(:lvar, :block)))),
          s(:def, :get_elements,
            s(:args,
              s(:arg, :xpath)),
            s(:send,
              s(:ivar, :@elements), :to_a,
              s(:lvar, :xpath))),
          s(:def, :next_element,
            s(:args),
            s(:begin,
              s(:lvasgn, :element,
                s(:send, nil, :next_sibling)),
              s(:until,
                s(:or,
                  s(:send,
                    s(:lvar, :element), :nil?),
                  s(:send,
                    s(:lvar, :element), :kind_of?,
                    s(:const, nil, :Element))),
                s(:lvasgn, :element,
                  s(:send,
                    s(:lvar, :element), :next_sibling))),
              s(:return,
                s(:lvar, :element)))),
          s(:def, :previous_element,
            s(:args),
            s(:begin,
              s(:lvasgn, :element,
                s(:send, nil, :previous_sibling)),
              s(:until,
                s(:or,
                  s(:send,
                    s(:lvar, :element), :nil?),
                  s(:send,
                    s(:lvar, :element), :kind_of?,
                    s(:const, nil, :Element))),
                s(:lvasgn, :element,
                  s(:send,
                    s(:lvar, :element), :previous_sibling))),
              s(:return,
                s(:lvar, :element)))),
          s(:def, :has_text?,
            s(:args),
            s(:send,
              s(:send,
                s(:send, nil, :text), :nil?), :!)),
          s(:def, :text,
            s(:args,
              s(:optarg, :path,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :rv,
                s(:send, nil, :get_text,
                  s(:lvar, :path))),
              s(:if,
                s(:send,
                  s(:lvar, :rv), :nil?), nil,
                s(:return,
                  s(:send,
                    s(:lvar, :rv), :value))),
              s(:nil))),
          s(:def, :get_text,
            s(:args,
              s(:optarg, :path,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :rv,
                s(:nil)),
              s(:if,
                s(:lvar, :path),
                s(:begin,
                  s(:lvasgn, :element,
                    s(:send,
                      s(:ivar, :@elements), :[],
                      s(:lvar, :path))),
                  s(:if,
                    s(:send,
                      s(:lvar, :element), :nil?), nil,
                    s(:lvasgn, :rv,
                      s(:send,
                        s(:lvar, :element), :get_text)))),
                s(:lvasgn, :rv,
                  s(:block,
                    s(:send,
                      s(:ivar, :@children), :find),
                    s(:args,
                      s(:arg, :node)),
                    s(:send,
                      s(:lvar, :node), :kind_of?,
                      s(:const, nil, :Text))))),
              s(:return,
                s(:lvar, :rv)))),
          s(:def, :text=,
            s(:args,
              s(:arg, :text)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :text), :kind_of?,
                  s(:const, nil, :String)),
                s(:lvasgn, :text,
                  s(:send,
                    s(:const, nil, :Text), :new,
                    s(:lvar, :text),
                    s(:send, nil, :whitespace),
                    s(:nil),
                    s(:send, nil, :raw))),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:send,
                        s(:lvar, :text), :nil?), :!),
                    s(:send,
                      s(:send,
                        s(:lvar, :text), :kind_of?,
                        s(:const, nil, :Text)), :!)),
                  s(:lvasgn, :text,
                    s(:send,
                      s(:const, nil, :Text), :new,
                      s(:send,
                        s(:lvar, :text), :to_s),
                      s(:send, nil, :whitespace),
                      s(:nil),
                      s(:send, nil, :raw))), nil)),
              s(:lvasgn, :old_text,
                s(:send, nil, :get_text)),
              s(:if,
                s(:send,
                  s(:lvar, :text), :nil?),
                s(:if,
                  s(:send,
                    s(:lvar, :old_text), :nil?), nil,
                  s(:send,
                    s(:lvar, :old_text), :remove)),
                s(:if,
                  s(:send,
                    s(:lvar, :old_text), :nil?),
                  s(:send,
                    s(:self), :<<,
                    s(:lvar, :text)),
                  s(:send,
                    s(:lvar, :old_text), :replace_with,
                    s(:lvar, :text)))),
              s(:return,
                s(:self)))),
          s(:def, :add_text,
            s(:args,
              s(:arg, :text)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :text), :kind_of?,
                  s(:const, nil, :String)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:ivar, :@children), :[],
                        s(:int, -1)), :kind_of?,
                      s(:const, nil, :Text)),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:ivar, :@children), :[],
                          s(:int, -1)), :<<,
                        s(:lvar, :text)),
                      s(:return)), nil),
                  s(:lvasgn, :text,
                    s(:send,
                      s(:const, nil, :Text), :new,
                      s(:lvar, :text),
                      s(:send, nil, :whitespace),
                      s(:nil),
                      s(:send, nil, :raw)))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :text), :nil?), nil,
                s(:send,
                  s(:self), :<<,
                  s(:lvar, :text))),
              s(:return,
                s(:self)))),
          s(:def, :node_type,
            s(:args),
            s(:sym, :element)),
          s(:def, :xpath,
            s(:args),
            s(:begin,
              s(:lvasgn, :path_elements,
                s(:array)),
              s(:lvasgn, :cur,
                s(:self)),
              s(:send,
                s(:lvar, :path_elements), :<<,
                s(:send, nil, :__to_xpath_helper,
                  s(:self))),
              s(:while,
                s(:send,
                  s(:lvar, :cur), :parent),
                s(:begin,
                  s(:lvasgn, :cur,
                    s(:send,
                      s(:lvar, :cur), :parent)),
                  s(:send,
                    s(:lvar, :path_elements), :<<,
                    s(:send, nil, :__to_xpath_helper,
                      s(:lvar, :cur))))),
              s(:return,
                s(:send,
                  s(:send,
                    s(:lvar, :path_elements), :reverse), :join,
                  s(:str, "/"))))),
          s(:def, :attribute,
            s(:args,
              s(:arg, :name),
              s(:optarg, :namespace,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :prefix,
                s(:nil)),
              s(:if,
                s(:send,
                  s(:send, nil, :namespaces), :respond_to?,
                  s(:sym, :key)),
                s(:if,
                  s(:lvar, :namespace),
                  s(:lvasgn, :prefix,
                    s(:send,
                      s(:send, nil, :namespaces), :key,
                      s(:lvar, :namespace))), nil),
                s(:if,
                  s(:lvar, :namespace),
                  s(:lvasgn, :prefix,
                    s(:send,
                      s(:send, nil, :namespaces), :index,
                      s(:lvar, :namespace))), nil)),
              s(:if,
                s(:send,
                  s(:lvar, :prefix), :==,
                  s(:str, "xmlns")),
                s(:lvasgn, :prefix,
                  s(:nil)), nil),
              s(:lvasgn, :ret_val,
                s(:send,
                  s(:send, nil, :attributes), :get_attribute,
                  s(:dstr,
                    s(:begin,
                      s(:if,
                        s(:lvar, :prefix),
                        s(:send,
                          s(:lvar, :prefix), :+,
                          s(:str, ":")),
                        s(:str, ""))),
                    s(:begin,
                      s(:lvar, :name))))),
              s(:if,
                s(:send,
                  s(:lvar, :ret_val), :nil?), nil,
                s(:return,
                  s(:lvar, :ret_val))),
              s(:if,
                s(:send,
                  s(:lvar, :prefix), :nil?),
                s(:return,
                  s(:nil)), nil),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send, nil, :namespaces), :[],
                      s(:lvar, :prefix)), :==,
                    s(:send,
                      s(:send, nil, :namespaces), :[],
                      s(:str, "xmlns")))), nil,
                s(:return,
                  s(:nil))),
              s(:send,
                s(:send, nil, :attributes), :get_attribute,
                s(:lvar, :name)))),
          s(:def, :has_attributes?,
            s(:args),
            s(:return,
              s(:send,
                s(:send,
                  s(:ivar, :@attributes), :empty?), :!))),
          s(:def, :add_attribute,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:nil))),
            s(:if,
              s(:send,
                s(:lvar, :key), :kind_of?,
                s(:const, nil, :Attribute)),
              s(:send,
                s(:ivar, :@attributes), :<<,
                s(:lvar, :key)),
              s(:send,
                s(:ivar, :@attributes), :[]=,
                s(:lvar, :key),
                s(:lvar, :value)))),
          s(:def, :add_attributes,
            s(:args,
              s(:arg, :hash)),
            s(:if,
              s(:send,
                s(:lvar, :hash), :kind_of?,
                s(:const, nil, :Hash)),
              s(:block,
                s(:send,
                  s(:lvar, :hash), :each_pair),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :value)),
                s(:send,
                  s(:ivar, :@attributes), :[]=,
                  s(:lvar, :key),
                  s(:lvar, :value))),
              s(:if,
                s(:send,
                  s(:lvar, :hash), :kind_of?,
                  s(:const, nil, :Array)),
                s(:block,
                  s(:send,
                    s(:lvar, :hash), :each),
                  s(:args,
                    s(:arg, :value)),
                  s(:send,
                    s(:ivar, :@attributes), :[]=,
                    s(:send,
                      s(:lvar, :value), :[],
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :value), :[],
                      s(:int, 1)))), nil))),
          s(:def, :delete_attribute,
            s(:args,
              s(:arg, :key)),
            s(:begin,
              s(:lvasgn, :attr,
                s(:send,
                  s(:ivar, :@attributes), :get_attribute,
                  s(:lvar, :key))),
              s(:if,
                s(:send,
                  s(:lvar, :attr), :nil?), nil,
                s(:send,
                  s(:lvar, :attr), :remove)))),
          s(:def, :cdatas,
            s(:args),
            s(:send,
              s(:block,
                s(:send, nil, :find_all),
                s(:args,
                  s(:arg, :child)),
                s(:send,
                  s(:lvar, :child), :kind_of?,
                  s(:const, nil, :CData))), :freeze)),
          s(:def, :comments,
            s(:args),
            s(:send,
              s(:block,
                s(:send, nil, :find_all),
                s(:args,
                  s(:arg, :child)),
                s(:send,
                  s(:lvar, :child), :kind_of?,
                  s(:const, nil, :Comment))), :freeze)),
          s(:def, :instructions,
            s(:args),
            s(:send,
              s(:block,
                s(:send, nil, :find_all),
                s(:args,
                  s(:arg, :child)),
                s(:send,
                  s(:lvar, :child), :kind_of?,
                  s(:const, nil, :Instruction))), :freeze)),
          s(:def, :texts,
            s(:args),
            s(:send,
              s(:block,
                s(:send, nil, :find_all),
                s(:args,
                  s(:arg, :child)),
                s(:send,
                  s(:lvar, :child), :kind_of?,
                  s(:const, nil, :Text))), :freeze)),
          s(:def, :write,
            s(:args,
              s(:optarg, :output,
                s(:gvar, :$stdout)),
              s(:optarg, :indent,
                s(:int, -1)),
              s(:optarg, :transitive,
                s(:false)),
              s(:optarg, :ie_hack,
                s(:false))),
            s(:begin,
              s(:send,
                s(:const, nil, :Kernel), :warn,
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:self), :class), :name)),
                  s(:str, ".write is deprecated.  See REXML::Formatters"))),
              s(:lvasgn, :formatter,
                s(:if,
                  s(:send,
                    s(:lvar, :indent), :>,
                    s(:int, -1)),
                  s(:if,
                    s(:lvar, :transitive),
                    s(:begin,
                      s(:send, nil, :require,
                        s(:str, "rexml/formatters/transitive")),
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :REXML), :Formatters), :Transitive), :new,
                        s(:lvar, :indent),
                        s(:lvar, :ie_hack))),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :REXML), :Formatters), :Pretty), :new,
                      s(:lvar, :indent),
                      s(:lvar, :ie_hack))),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :REXML), :Formatters), :Default), :new,
                    s(:lvar, :ie_hack)))),
              s(:send,
                s(:lvar, :formatter), :write,
                s(:self),
                s(:lvar, :output)))),
          s(:send, nil, :private),
          s(:def, :__to_xpath_helper,
            s(:args,
              s(:arg, :node)),
            s(:begin,
              s(:lvasgn, :rv,
                s(:send,
                  s(:send,
                    s(:lvar, :node), :expanded_name), :clone)),
              s(:if,
                s(:send,
                  s(:lvar, :node), :parent),
                s(:begin,
                  s(:lvasgn, :results,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :node), :parent), :find_all),
                      s(:args,
                        s(:arg, :n)),
                      s(:and,
                        s(:send,
                          s(:lvar, :n), :kind_of?,
                          s(:const,
                            s(:const, nil, :REXML), :Element)),
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :expanded_name), :==,
                          s(:send,
                            s(:lvar, :node), :expanded_name))))),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :results), :length), :>,
                      s(:int, 1)),
                    s(:begin,
                      s(:lvasgn, :idx,
                        s(:send,
                          s(:lvar, :results), :index,
                          s(:lvar, :node))),
                      s(:send,
                        s(:lvar, :rv), :<<,
                        s(:dstr,
                          s(:str, "["),
                          s(:begin,
                            s(:send,
                              s(:lvar, :idx), :+,
                              s(:int, 1))),
                          s(:str, "]")))), nil)), nil),
              s(:lvar, :rv))),
          s(:def, :each_with_something,
            s(:args,
              s(:arg, :test),
              s(:optarg, :max,
                s(:int, 0)),
              s(:optarg, :name,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :num,
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:ivar, :@elements), :each,
                  s(:lvar, :name)),
                s(:args,
                  s(:arg, :child)),
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:lvar, :test), :call,
                        s(:lvar, :child)),
                      s(:op_asgn,
                        s(:lvasgn, :num), :+,
                        s(:int, 1))),
                    s(:yield,
                      s(:lvar, :child)), nil),
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:lvar, :max), :>,
                        s(:int, 0)),
                      s(:send,
                        s(:lvar, :num), :==,
                        s(:lvar, :max))),
                    s(:return), nil))))))),
      s(:class,
        s(:const, nil, :Elements), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :Enumerable)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :parent)),
            s(:ivasgn, :@element,
              s(:lvar, :parent))),
          s(:def, :[],
            s(:args,
              s(:arg, :index),
              s(:optarg, :name,
                s(:nil))),
            s(:if,
              s(:send,
                s(:lvar, :index), :kind_of?,
                s(:const, nil, :Integer)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :index), :<,
                    s(:int, 1)),
                  s(:send, nil, :raise,
                    s(:dstr,
                      s(:str, "index ("),
                      s(:begin,
                        s(:lvar, :index)),
                      s(:str, ") must be >= 1"))), nil),
                s(:if,
                  s(:lvar, :name),
                  s(:lvasgn, :name,
                    s(:send, nil, :literalize,
                      s(:lvar, :name))), nil),
                s(:lvasgn, :num,
                  s(:int, 0)),
                s(:block,
                  s(:send,
                    s(:ivar, :@element), :find),
                  s(:args,
                    s(:arg, :child)),
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:lvar, :child), :kind_of?,
                        s(:const, nil, :Element)),
                      s(:begin,
                        s(:if,
                          s(:send,
                            s(:lvar, :name), :nil?),
                          s(:true),
                          s(:send,
                            s(:lvar, :child), :has_name?,
                            s(:lvar, :name))))),
                    s(:send,
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :num), :+,
                          s(:int, 1))), :==,
                      s(:lvar, :index))))),
              s(:return,
                s(:send,
                  s(:const, nil, :XPath), :first,
                  s(:ivar, :@element),
                  s(:lvar, :index))))),
          s(:def, :[]=,
            s(:args,
              s(:arg, :index),
              s(:arg, :element)),
            s(:begin,
              s(:lvasgn, :previous,
                s(:send,
                  s(:self), :[],
                  s(:lvar, :index))),
              s(:if,
                s(:send,
                  s(:lvar, :previous), :nil?),
                s(:send,
                  s(:ivar, :@element), :add,
                  s(:lvar, :element)),
                s(:send,
                  s(:lvar, :previous), :replace_with,
                  s(:lvar, :element))),
              s(:return,
                s(:lvar, :previous)))),
          s(:def, :empty?,
            s(:args),
            s(:send,
              s(:block,
                s(:send,
                  s(:ivar, :@element), :find),
                s(:args,
                  s(:arg, :child)),
                s(:send,
                  s(:lvar, :child), :kind_of?,
                  s(:const, nil, :Element))), :nil?)),
          s(:def, :index,
            s(:args,
              s(:arg, :element)),
            s(:begin,
              s(:lvasgn, :rv,
                s(:int, 0)),
              s(:lvasgn, :found,
                s(:block,
                  s(:send,
                    s(:ivar, :@element), :find),
                  s(:args,
                    s(:arg, :child)),
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:lvar, :child), :kind_of?,
                        s(:const, nil, :Element)),
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :rv), :+,
                          s(:int, 1)))),
                    s(:send,
                      s(:lvar, :child), :==,
                      s(:lvar, :element))))),
              s(:if,
                s(:send,
                  s(:lvar, :found), :==,
                  s(:lvar, :element)),
                s(:return,
                  s(:lvar, :rv)), nil),
              s(:return,
                s(:int, -1)))),
          s(:def, :delete,
            s(:args,
              s(:arg, :element)),
            s(:if,
              s(:send,
                s(:lvar, :element), :kind_of?,
                s(:const, nil, :Element)),
              s(:send,
                s(:ivar, :@element), :delete,
                s(:lvar, :element)),
              s(:begin,
                s(:lvasgn, :el,
                  s(:send,
                    s(:self), :[],
                    s(:lvar, :element))),
                s(:if,
                  s(:lvar, :el),
                  s(:send,
                    s(:lvar, :el), :remove), nil)))),
          s(:def, :delete_all,
            s(:args,
              s(:arg, :xpath)),
            s(:begin,
              s(:lvasgn, :rv,
                s(:array)),
              s(:block,
                s(:send,
                  s(:const, nil, :XPath), :each,
                  s(:ivar, :@element),
                  s(:lvar, :xpath)),
                s(:args,
                  s(:arg, :element)),
                s(:if,
                  s(:send,
                    s(:lvar, :element), :kind_of?,
                    s(:const, nil, :Element)),
                  s(:send,
                    s(:lvar, :rv), :<<,
                    s(:lvar, :element)), nil)),
              s(:block,
                s(:send,
                  s(:lvar, :rv), :each),
                s(:args,
                  s(:arg, :element)),
                s(:begin,
                  s(:send,
                    s(:ivar, :@element), :delete,
                    s(:lvar, :element)),
                  s(:send,
                    s(:lvar, :element), :remove))),
              s(:return,
                s(:lvar, :rv)))),
          s(:def, :add,
            s(:args,
              s(:optarg, :element,
                s(:nil))),
            s(:if,
              s(:send,
                s(:lvar, :element), :nil?),
              s(:send,
                s(:const, nil, :Element), :new,
                s(:str, ""),
                s(:self),
                s(:send,
                  s(:ivar, :@element), :context)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :element), :kind_of?,
                    s(:const, nil, :Element)), :!),
                s(:send,
                  s(:const, nil, :Element), :new,
                  s(:lvar, :element),
                  s(:self),
                  s(:send,
                    s(:ivar, :@element), :context)),
                s(:begin,
                  s(:send,
                    s(:ivar, :@element), :<<,
                    s(:lvar, :element)),
                  s(:send,
                    s(:lvar, :element), :context=,
                    s(:send,
                      s(:ivar, :@element), :context)),
                  s(:lvar, :element))))),
          s(:alias,
            s(:sym, :<<),
            s(:sym, :add)),
          s(:def, :each,
            s(:args,
              s(:optarg, :xpath,
                s(:nil))),
            s(:block,
              s(:send,
                s(:const, nil, :XPath), :each,
                s(:ivar, :@element),
                s(:lvar, :xpath)),
              s(:args,
                s(:arg, :e)),
              s(:if,
                s(:send,
                  s(:lvar, :e), :kind_of?,
                  s(:const, nil, :Element)),
                s(:yield,
                  s(:lvar, :e)), nil))),
          s(:def, :collect,
            s(:args,
              s(:optarg, :xpath,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :collection,
                s(:array)),
              s(:block,
                s(:send,
                  s(:const, nil, :XPath), :each,
                  s(:ivar, :@element),
                  s(:lvar, :xpath)),
                s(:args,
                  s(:arg, :e)),
                s(:if,
                  s(:send,
                    s(:lvar, :e), :kind_of?,
                    s(:const, nil, :Element)),
                  s(:send,
                    s(:lvar, :collection), :<<,
                    s(:yield,
                      s(:lvar, :e))), nil)),
              s(:lvar, :collection))),
          s(:def, :inject,
            s(:args,
              s(:optarg, :xpath,
                s(:nil)),
              s(:optarg, :initial,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :first,
                s(:true)),
              s(:block,
                s(:send,
                  s(:const, nil, :XPath), :each,
                  s(:ivar, :@element),
                  s(:lvar, :xpath)),
                s(:args,
                  s(:arg, :e)),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :e), :kind_of?,
                      s(:const, nil, :Element))),
                  s(:if,
                    s(:begin,
                      s(:and,
                        s(:lvar, :first),
                        s(:send,
                          s(:lvar, :initial), :==,
                          s(:nil)))),
                    s(:begin,
                      s(:lvasgn, :initial,
                        s(:lvar, :e)),
                      s(:lvasgn, :first,
                        s(:false))),
                    s(:if,
                      s(:send,
                        s(:lvar, :e), :kind_of?,
                        s(:const, nil, :Element)),
                      s(:lvasgn, :initial,
                        s(:yield,
                          s(:lvar, :initial),
                          s(:lvar, :e))), nil)), nil)),
              s(:lvar, :initial))),
          s(:def, :size,
            s(:args),
            s(:begin,
              s(:lvasgn, :count,
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:ivar, :@element), :each),
                s(:args,
                  s(:arg, :child)),
                s(:if,
                  s(:send,
                    s(:lvar, :child), :kind_of?,
                    s(:const, nil, :Element)),
                  s(:op_asgn,
                    s(:lvasgn, :count), :+,
                    s(:int, 1)), nil)),
              s(:lvar, :count))),
          s(:def, :to_a,
            s(:args,
              s(:optarg, :xpath,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :rv,
                s(:send,
                  s(:const, nil, :XPath), :match,
                  s(:ivar, :@element),
                  s(:lvar, :xpath))),
              s(:if,
                s(:lvar, :xpath),
                s(:return,
                  s(:block,
                    s(:send,
                      s(:lvar, :rv), :find_all),
                    s(:args,
                      s(:arg, :e)),
                    s(:send,
                      s(:lvar, :e), :kind_of?,
                      s(:const, nil, :Element)))), nil),
              s(:lvar, :rv))),
          s(:send, nil, :private),
          s(:def, :literalize,
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:if,
                s(:or,
                  s(:send,
                    s(:send,
                      s(:lvar, :name), :[],
                      s(:int, 0)), :==,
                    s(:str, "'")),
                  s(:send,
                    s(:send,
                      s(:lvar, :name), :[],
                      s(:int, 0)), :==,
                    s(:str, "\""))),
                s(:lvasgn, :name,
                  s(:send,
                    s(:lvar, :name), :[],
                    s(:irange,
                      s(:int, 1),
                      s(:int, -2)))), nil),
              s(:lvar, :name))))),
      s(:class,
        s(:const, nil, :Attributes),
        s(:const, nil, :Hash),
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :element)),
            s(:ivasgn, :@element,
              s(:lvar, :element))),
          s(:def, :[],
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :attr,
                s(:send, nil, :get_attribute,
                  s(:lvar, :name))),
              s(:if,
                s(:send,
                  s(:lvar, :attr), :nil?), nil,
                s(:return,
                  s(:send,
                    s(:lvar, :attr), :value))),
              s(:return,
                s(:nil)))),
          s(:def, :to_a,
            s(:args),
            s(:send,
              s(:send, nil, :enum_for,
                s(:sym, :each_attribute)), :to_a)),
          s(:def, :length,
            s(:args),
            s(:begin,
              s(:lvasgn, :c,
                s(:int, 0)),
              s(:block,
                s(:send, nil, :each_attribute),
                s(:args),
                s(:op_asgn,
                  s(:lvasgn, :c), :+,
                  s(:int, 1))),
              s(:lvar, :c))),
          s(:alias,
            s(:sym, :size),
            s(:sym, :length)),
          s(:def, :each_attribute,
            s(:args),
            s(:block,
              s(:send, nil, :each_value),
              s(:args,
                s(:arg, :val)),
              s(:if,
                s(:send,
                  s(:lvar, :val), :kind_of?,
                  s(:const, nil, :Attribute)),
                s(:yield,
                  s(:lvar, :val)),
                s(:block,
                  s(:send,
                    s(:lvar, :val), :each_value),
                  s(:args,
                    s(:arg, :atr)),
                  s(:yield,
                    s(:lvar, :atr)))))),
          s(:def, :each,
            s(:args),
            s(:block,
              s(:send, nil, :each_attribute),
              s(:args,
                s(:arg, :attr)),
              s(:yield,
                s(:array,
                  s(:send,
                    s(:lvar, :attr), :expanded_name),
                  s(:send,
                    s(:lvar, :attr), :value))))),
          s(:def, :get_attribute,
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :attr,
                s(:send, nil, :fetch,
                  s(:lvar, :name),
                  s(:nil))),
              s(:if,
                s(:send,
                  s(:lvar, :attr), :nil?),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :name), :nil?),
                    s(:return,
                      s(:nil)), nil),
                  s(:send,
                    s(:lvar, :name), :=~,
                    s(:const,
                      s(:const, nil, :Namespace), :NAMESPLIT)),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :prefix),
                      s(:lvasgn, :n)),
                    s(:array,
                      s(:nth_ref, 1),
                      s(:nth_ref, 2))),
                  s(:if,
                    s(:lvar, :prefix),
                    s(:begin,
                      s(:lvasgn, :attr,
                        s(:send, nil, :fetch,
                          s(:lvar, :n),
                          s(:nil))),
                      s(:if,
                        s(:send,
                          s(:lvar, :attr), :==,
                          s(:nil)), nil,
                        s(:if,
                          s(:send,
                            s(:lvar, :attr), :kind_of?,
                            s(:const, nil, :Attribute)),
                          s(:if,
                            s(:send,
                              s(:lvar, :prefix), :==,
                              s(:send,
                                s(:lvar, :attr), :prefix)),
                            s(:return,
                              s(:lvar, :attr)), nil),
                          s(:begin,
                            s(:lvasgn, :attr,
                              s(:send,
                                s(:lvar, :attr), :[],
                                s(:lvar, :prefix))),
                            s(:return,
                              s(:lvar, :attr)))))), nil),
                  s(:lvasgn, :element_document,
                    s(:send,
                      s(:ivar, :@element), :document)),
                  s(:if,
                    s(:and,
                      s(:lvar, :element_document),
                      s(:send,
                        s(:lvar, :element_document), :doctype)),
                    s(:begin,
                      s(:lvasgn, :expn,
                        s(:send,
                          s(:ivar, :@element), :expanded_name)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :expn), :size), :==,
                          s(:int, 0)),
                        s(:lvasgn, :expn,
                          s(:send,
                            s(:send,
                              s(:lvar, :element_document), :doctype), :name)), nil),
                      s(:lvasgn, :attr_val,
                        s(:send,
                          s(:send,
                            s(:lvar, :element_document), :doctype), :attribute_of,
                          s(:lvar, :expn),
                          s(:lvar, :name))),
                      s(:if,
                        s(:lvar, :attr_val),
                        s(:return,
                          s(:send,
                            s(:const, nil, :Attribute), :new,
                            s(:lvar, :name),
                            s(:lvar, :attr_val))), nil)), nil),
                  s(:return,
                    s(:nil))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :attr), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:lvasgn, :attr,
                  s(:send,
                    s(:lvar, :attr), :[],
                    s(:send,
                      s(:ivar, :@element), :prefix))), nil),
              s(:return,
                s(:lvar, :attr)))),
          s(:def, :[]=,
            s(:args,
              s(:arg, :name),
              s(:arg, :value)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :value), :nil?),
                s(:begin,
                  s(:lvasgn, :attr,
                    s(:send, nil, :get_attribute,
                      s(:lvar, :name))),
                  s(:send, nil, :delete,
                    s(:lvar, :attr)),
                  s(:return)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :value), :kind_of?,
                  s(:const, nil, :Attribute)), nil,
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:ivar, :@element), :document),
                      s(:send,
                        s(:send,
                          s(:ivar, :@element), :document), :doctype)),
                    s(:lvasgn, :value,
                      s(:send,
                        s(:const, nil, :Text), :normalize,
                        s(:lvar, :value),
                        s(:send,
                          s(:send,
                            s(:ivar, :@element), :document), :doctype))),
                    s(:lvasgn, :value,
                      s(:send,
                        s(:const, nil, :Text), :normalize,
                        s(:lvar, :value),
                        s(:nil)))),
                  s(:lvasgn, :value,
                    s(:send,
                      s(:const, nil, :Attribute), :new,
                      s(:lvar, :name),
                      s(:lvar, :value))))),
              s(:send,
                s(:lvar, :value), :element=,
                s(:ivar, :@element)),
              s(:lvasgn, :old_attr,
                s(:send, nil, :fetch,
                  s(:send,
                    s(:lvar, :value), :name),
                  s(:nil))),
              s(:if,
                s(:send,
                  s(:lvar, :old_attr), :nil?),
                s(:send, nil, :store,
                  s(:send,
                    s(:lvar, :value), :name),
                  s(:lvar, :value)),
                s(:if,
                  s(:send,
                    s(:lvar, :old_attr), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:send,
                    s(:lvar, :old_attr), :[]=,
                    s(:send,
                      s(:lvar, :value), :prefix),
                    s(:lvar, :value)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :old_attr), :prefix), :!=,
                      s(:send,
                        s(:lvar, :value), :prefix)),
                    s(:begin,
                      s(:if,
                        s(:and,
                          s(:and,
                            s(:send,
                              s(:send,
                                s(:lvar, :value), :prefix), :!=,
                              s(:str, "xmlns")),
                            s(:send,
                              s(:send,
                                s(:lvar, :old_attr), :prefix), :!=,
                              s(:str, "xmlns"))),
                          s(:send,
                            s(:send,
                              s(:ivar, :@element), :namespace,
                              s(:send,
                                s(:lvar, :old_attr), :prefix)), :==,
                            s(:send,
                              s(:ivar, :@element), :namespace,
                              s(:send,
                                s(:lvar, :value), :prefix)))),
                        s(:send, nil, :raise,
                          s(:send,
                            s(:const, nil, :ParseException), :new,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:dstr,
                                    s(:str, "Namespace conflict in adding attribute \""),
                                    s(:begin,
                                      s(:send,
                                        s(:lvar, :value), :name)),
                                    s(:str, "\": ")), :+,
                                  s(:dstr,
                                    s(:str, "Prefix \""),
                                    s(:begin,
                                      s(:send,
                                        s(:lvar, :old_attr), :prefix)),
                                    s(:str, "\" = "))), :+,
                                s(:dstr,
                                  s(:str, "\""),
                                  s(:begin,
                                    s(:send,
                                      s(:ivar, :@element), :namespace,
                                      s(:send,
                                        s(:lvar, :old_attr), :prefix))),
                                  s(:str, "\" and prefix "))), :+,
                              s(:dstr,
                                s(:str, "\""),
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :value), :prefix)),
                                s(:str, "\" = \""),
                                s(:begin,
                                  s(:send,
                                    s(:ivar, :@element), :namespace,
                                    s(:send,
                                      s(:lvar, :value), :prefix))),
                                s(:str, "\""))))), nil),
                      s(:send, nil, :store,
                        s(:send,
                          s(:lvar, :value), :name),
                        s(:hash,
                          s(:pair,
                            s(:send,
                              s(:lvar, :old_attr), :prefix),
                            s(:lvar, :old_attr)),
                          s(:pair,
                            s(:send,
                              s(:lvar, :value), :prefix),
                            s(:lvar, :value))))),
                    s(:send, nil, :store,
                      s(:send,
                        s(:lvar, :value), :name),
                      s(:lvar, :value))))),
              s(:return,
                s(:ivar, :@element)))),
          s(:def, :prefixes,
            s(:args),
            s(:begin,
              s(:lvasgn, :ns,
                s(:array)),
              s(:block,
                s(:send, nil, :each_attribute),
                s(:args,
                  s(:arg, :attribute)),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :attribute), :prefix), :==,
                    s(:str, "xmlns")),
                  s(:send,
                    s(:lvar, :ns), :<<,
                    s(:send,
                      s(:lvar, :attribute), :name)), nil)),
              s(:if,
                s(:and,
                  s(:send,
                    s(:ivar, :@element), :document),
                  s(:send,
                    s(:send,
                      s(:ivar, :@element), :document), :doctype)),
                s(:begin,
                  s(:lvasgn, :expn,
                    s(:send,
                      s(:ivar, :@element), :expanded_name)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :expn), :size), :==,
                      s(:int, 0)),
                    s(:lvasgn, :expn,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@element), :document), :doctype), :name)), nil),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@element), :document), :doctype), :attributes_of,
                        s(:lvar, :expn)), :each),
                    s(:args,
                      s(:arg, :attribute)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :attribute), :prefix), :==,
                        s(:str, "xmlns")),
                      s(:send,
                        s(:lvar, :ns), :<<,
                        s(:send,
                          s(:lvar, :attribute), :name)), nil))), nil),
              s(:lvar, :ns))),
          s(:def, :namespaces,
            s(:args),
            s(:begin,
              s(:lvasgn, :namespaces,
                s(:hash)),
              s(:block,
                s(:send, nil, :each_attribute),
                s(:args,
                  s(:arg, :attribute)),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:send,
                        s(:lvar, :attribute), :prefix), :==,
                      s(:str, "xmlns")),
                    s(:send,
                      s(:send,
                        s(:lvar, :attribute), :name), :==,
                      s(:str, "xmlns"))),
                  s(:send,
                    s(:lvar, :namespaces), :[]=,
                    s(:send,
                      s(:lvar, :attribute), :name),
                    s(:send,
                      s(:lvar, :attribute), :value)), nil)),
              s(:if,
                s(:and,
                  s(:send,
                    s(:ivar, :@element), :document),
                  s(:send,
                    s(:send,
                      s(:ivar, :@element), :document), :doctype)),
                s(:begin,
                  s(:lvasgn, :expn,
                    s(:send,
                      s(:ivar, :@element), :expanded_name)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :expn), :size), :==,
                      s(:int, 0)),
                    s(:lvasgn, :expn,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@element), :document), :doctype), :name)), nil),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@element), :document), :doctype), :attributes_of,
                        s(:lvar, :expn)), :each),
                    s(:args,
                      s(:arg, :attribute)),
                    s(:if,
                      s(:or,
                        s(:send,
                          s(:send,
                            s(:lvar, :attribute), :prefix), :==,
                          s(:str, "xmlns")),
                        s(:send,
                          s(:send,
                            s(:lvar, :attribute), :name), :==,
                          s(:str, "xmlns"))),
                      s(:send,
                        s(:lvar, :namespaces), :[]=,
                        s(:send,
                          s(:lvar, :attribute), :name),
                        s(:send,
                          s(:lvar, :attribute), :value)), nil))), nil),
              s(:lvar, :namespaces))),
          s(:def, :delete,
            s(:args,
              s(:arg, :attribute)),
            s(:begin,
              s(:lvasgn, :name,
                s(:nil)),
              s(:lvasgn, :prefix,
                s(:nil)),
              s(:if,
                s(:send,
                  s(:lvar, :attribute), :kind_of?,
                  s(:const, nil, :Attribute)),
                s(:begin,
                  s(:lvasgn, :name,
                    s(:send,
                      s(:lvar, :attribute), :name)),
                  s(:lvasgn, :prefix,
                    s(:send,
                      s(:lvar, :attribute), :prefix))),
                s(:begin,
                  s(:send,
                    s(:lvar, :attribute), :=~,
                    s(:const,
                      s(:const, nil, :Namespace), :NAMESPLIT)),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :prefix),
                      s(:lvasgn, :name)),
                    s(:array,
                      s(:nth_ref, 1),
                      s(:nth_ref, 2))),
                  s(:if,
                    s(:lvar, :prefix), nil,
                    s(:lvasgn, :prefix,
                      s(:str, ""))))),
              s(:lvasgn, :old,
                s(:send, nil, :fetch,
                  s(:lvar, :name),
                  s(:nil))),
              s(:if,
                s(:send,
                  s(:lvar, :old), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:send,
                    s(:lvar, :old), :delete,
                    s(:lvar, :prefix)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :old), :size), :==,
                      s(:int, 1)),
                    s(:begin,
                      s(:lvasgn, :repl,
                        s(:nil)),
                      s(:block,
                        s(:send,
                          s(:lvar, :old), :each_value),
                        s(:args,
                          s(:arg, :v)),
                        s(:lvasgn, :repl,
                          s(:lvar, :v))),
                      s(:send, nil, :store,
                        s(:lvar, :name),
                        s(:lvar, :repl))), nil)),
                s(:if,
                  s(:send,
                    s(:lvar, :old), :nil?),
                  s(:return,
                    s(:ivar, :@element)),
                  s(:super,
                    s(:lvar, :name)))),
              s(:ivar, :@element))),
          s(:def, :add,
            s(:args,
              s(:arg, :attribute)),
            s(:send,
              s(:self), :[]=,
              s(:send,
                s(:lvar, :attribute), :name),
              s(:lvar, :attribute))),
          s(:alias,
            s(:sym, :<<),
            s(:sym, :add)),
          s(:def, :delete_all,
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :rv,
                s(:array)),
              s(:block,
                s(:send, nil, :each_attribute),
                s(:args,
                  s(:arg, :attribute)),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :attribute), :expanded_name), :==,
                    s(:lvar, :name)),
                  s(:send,
                    s(:lvar, :rv), :<<,
                    s(:lvar, :attribute)), nil)),
              s(:block,
                s(:send,
                  s(:lvar, :rv), :each),
                s(:args,
                  s(:arg, :attr)),
                s(:send,
                  s(:lvar, :attr), :remove)),
              s(:return,
                s(:lvar, :rv)))),
          s(:def, :get_attribute_ns,
            s(:args,
              s(:arg, :namespace),
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :result,
                s(:nil)),
              s(:block,
                s(:send, nil, :each_attribute),
                s(:args,
                  s(:arg, :attribute)),
                s(:if,
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:lvar, :name), :==,
                        s(:send,
                          s(:lvar, :attribute), :name)),
                      s(:send,
                        s(:lvar, :namespace), :==,
                        s(:send,
                          s(:lvar, :attribute), :namespace))),
                    s(:begin,
                      s(:or,
                        s(:send,
                          s(:send,
                            s(:lvar, :namespace), :empty?), :!),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :attribute), :fully_expanded_name), :index,
                            s(:str, ":")), :!)))),
                  s(:if,
                    s(:or,
                      s(:or,
                        s(:send,
                          s(:lvar, :result), :!),
                        s(:send,
                          s(:send,
                            s(:lvar, :namespace), :empty?), :!)),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :attribute), :fully_expanded_name), :index,
                          s(:str, ":")), :!)),
                    s(:lvasgn, :result,
                      s(:lvar, :attribute)), nil), nil)),
              s(:lvar, :result))))))))
