s(:begin,
  s(:module,
    s(:const, nil, :Forwardable),
    s(:begin,
      s(:casgn, nil, :FORWARDABLE_VERSION,
        s(:str, "1.1.0")),
      s(:casgn, nil, :FILE_REGEXP,
        s(:regexp,
          s(:begin,
            s(:send,
              s(:const, nil, :Regexp), :quote,
              s(:str, "(string)"))),
          s(:regopt))),
      s(:ivasgn, :@debug,
        s(:nil)),
      s(:sclass,
        s(:self),
        s(:send, nil, :attr_accessor,
          s(:sym, :debug))),
      s(:def, :instance_delegate,
        s(:args,
          s(:arg, :hash)),
        s(:block,
          s(:send,
            s(:lvar, :hash), :each),
          s(:args,
            s(:arg, :methods),
            s(:arg, :accessor)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :methods), :respond_to?,
                s(:sym, :each)), nil,
              s(:lvasgn, :methods,
                s(:array,
                  s(:lvar, :methods)))),
            s(:block,
              s(:send,
                s(:lvar, :methods), :each),
              s(:args,
                s(:arg, :method)),
              s(:send, nil, :def_instance_delegator,
                s(:lvar, :accessor),
                s(:lvar, :method)))))),
      s(:def, :def_instance_delegators,
        s(:args,
          s(:arg, :accessor),
          s(:restarg, :methods)),
        s(:begin,
          s(:send,
            s(:lvar, :methods), :delete,
            s(:str, "__send__")),
          s(:send,
            s(:lvar, :methods), :delete,
            s(:str, "__id__")),
          s(:for,
            s(:lvasgn, :method),
            s(:lvar, :methods),
            s(:send, nil, :def_instance_delegator,
              s(:lvar, :accessor),
              s(:lvar, :method))))),
      s(:def, :def_instance_delegator,
        s(:args,
          s(:arg, :accessor),
          s(:arg, :method),
          s(:optarg, :ali,
            s(:lvar, :method))),
        s(:begin,
          s(:lvasgn, :accessor,
            s(:send,
              s(:lvar, :accessor), :to_s)),
          s(:if,
            s(:or,
              s(:send, nil, :method_defined?,
                s(:lvar, :accessor)),
              s(:send, nil, :private_method_defined?,
                s(:lvar, :accessor))),
            s(:lvasgn, :accessor,
              s(:dstr,
                s(:begin,
                  s(:lvar, :accessor)),
                s(:str, "()"))), nil),
          s(:lvasgn, :line_no,
            s(:int, 186)),
          s(:lvasgn, :str,
            s(:dstr,
              s(:str, "\n"),
              s(:str, "      def "),
              s(:begin,
                s(:lvar, :ali)),
              s(:str, "(*args, &block)\n"),
              s(:str, "        begin\n"),
              s(:str, "          "),
              s(:begin,
                s(:lvar, :accessor)),
              s(:str, ".__send__(:"),
              s(:begin,
                s(:lvar, :method)),
              s(:str, ", *args, &block)\n"),
              s(:str, "        rescue ::Exception\n"),
              s(:str, "          $@.delete_if{|s| ::Forwardable::FILE_REGEXP =~ s} unless ::Forwardable::debug\n"),
              s(:str, "          ::Kernel::raise\n"),
              s(:str, "        end\n"),
              s(:str, "      end\n"),
              s(:str, "    "))),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :module_eval,
                s(:lvar, :str),
                s(:str, "(string)"),
                s(:lvar, :line_no)),
              s(:resbody, nil, nil,
                s(:send, nil, :instance_eval,
                  s(:lvar, :str),
                  s(:str, "(string)"),
                  s(:lvar, :line_no))), nil)))),
      s(:alias,
        s(:sym, :delegate),
        s(:sym, :instance_delegate)),
      s(:alias,
        s(:sym, :def_delegators),
        s(:sym, :def_instance_delegators)),
      s(:alias,
        s(:sym, :def_delegator),
        s(:sym, :def_instance_delegator)))),
  s(:module,
    s(:const, nil, :SingleForwardable),
    s(:begin,
      s(:def, :single_delegate,
        s(:args,
          s(:arg, :hash)),
        s(:block,
          s(:send,
            s(:lvar, :hash), :each),
          s(:args,
            s(:arg, :methods),
            s(:arg, :accessor)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :methods), :respond_to?,
                s(:sym, :each)), nil,
              s(:lvasgn, :methods,
                s(:array,
                  s(:lvar, :methods)))),
            s(:block,
              s(:send,
                s(:lvar, :methods), :each),
              s(:args,
                s(:arg, :method)),
              s(:send, nil, :def_single_delegator,
                s(:lvar, :accessor),
                s(:lvar, :method)))))),
      s(:def, :def_single_delegators,
        s(:args,
          s(:arg, :accessor),
          s(:restarg, :methods)),
        s(:begin,
          s(:send,
            s(:lvar, :methods), :delete,
            s(:str, "__send__")),
          s(:send,
            s(:lvar, :methods), :delete,
            s(:str, "__id__")),
          s(:for,
            s(:lvasgn, :method),
            s(:lvar, :methods),
            s(:send, nil, :def_single_delegator,
              s(:lvar, :accessor),
              s(:lvar, :method))))),
      s(:def, :def_single_delegator,
        s(:args,
          s(:arg, :accessor),
          s(:arg, :method),
          s(:optarg, :ali,
            s(:lvar, :method))),
        s(:begin,
          s(:lvasgn, :accessor,
            s(:send,
              s(:lvar, :accessor), :to_s)),
          s(:if,
            s(:or,
              s(:send, nil, :method_defined?,
                s(:lvar, :accessor)),
              s(:send, nil, :private_method_defined?,
                s(:lvar, :accessor))),
            s(:lvasgn, :accessor,
              s(:dstr,
                s(:begin,
                  s(:lvar, :accessor)),
                s(:str, "()"))), nil),
          s(:lvasgn, :line_no,
            s(:int, 283)),
          s(:lvasgn, :str,
            s(:dstr,
              s(:str, "\n"),
              s(:str, "      def "),
              s(:begin,
                s(:lvar, :ali)),
              s(:str, "(*args, &block)\n"),
              s(:str, "        begin\n"),
              s(:str, "          "),
              s(:begin,
                s(:lvar, :accessor)),
              s(:str, ".__send__(:"),
              s(:begin,
                s(:lvar, :method)),
              s(:str, ", *args, &block)\n"),
              s(:str, "        rescue ::Exception\n"),
              s(:str, "          $@.delete_if{|s| ::Forwardable::FILE_REGEXP =~ s} unless ::Forwardable::debug\n"),
              s(:str, "          ::Kernel::raise\n"),
              s(:str, "        end\n"),
              s(:str, "      end\n"),
              s(:str, "    "))),
          s(:send, nil, :instance_eval,
            s(:lvar, :str),
            s(:str, "(string)"),
            s(:lvar, :line_no)))),
      s(:alias,
        s(:sym, :delegate),
        s(:sym, :single_delegate)),
      s(:alias,
        s(:sym, :def_delegators),
        s(:sym, :def_single_delegators)),
      s(:alias,
        s(:sym, :def_delegator),
        s(:sym, :def_single_delegator)))))
