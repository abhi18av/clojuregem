s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:send, nil, :require,
    s(:str, "webrick/htmlutils")),
  s(:send, nil, :require,
    s(:str, "webrick/httputils")),
  s(:send, nil, :require,
    s(:str, "webrick/httpstatus")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:module,
      s(:const, nil, :HTTPServlet),
      s(:begin,
        s(:class,
          s(:const, nil, :HTTPServletError),
          s(:const, nil, :StandardError), nil),
        s(:class,
          s(:const, nil, :AbstractServlet), nil,
          s(:begin,
            s(:defs,
              s(:self), :get_instance,
              s(:args,
                s(:arg, :server),
                s(:restarg, :options)),
              s(:send,
                s(:self), :new,
                s(:lvar, :server),
                s(:splat,
                  s(:lvar, :options)))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :server),
                s(:restarg, :options)),
              s(:begin,
                s(:ivasgn, :@server,
                  s(:ivasgn, :@config,
                    s(:lvar, :server))),
                s(:ivasgn, :@logger,
                  s(:send,
                    s(:ivar, :@server), :[],
                    s(:sym, :Logger))),
                s(:ivasgn, :@options,
                  s(:lvar, :options)))),
            s(:def, :service,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:lvasgn, :method_name,
                  s(:send,
                    s(:str, "do_"), :+,
                    s(:send,
                      s(:send,
                        s(:lvar, :req), :request_method), :gsub,
                      s(:regexp,
                        s(:str, "-"),
                        s(:regopt)),
                      s(:str, "_")))),
                s(:if,
                  s(:send, nil, :respond_to?,
                    s(:lvar, :method_name)),
                  s(:send, nil, :__send__,
                    s(:lvar, :method_name),
                    s(:lvar, :req),
                    s(:lvar, :res)),
                  s(:send, nil, :raise,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :MethodNotAllowed),
                    s(:dstr,
                      s(:str, "unsupported method `"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :request_method)),
                      s(:str, "'.")))))),
            s(:def, :do_GET,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:send, nil, :raise,
                s(:const,
                  s(:const, nil, :HTTPStatus), :NotFound),
                s(:str, "not found."))),
            s(:def, :do_HEAD,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:send, nil, :do_GET,
                s(:lvar, :req),
                s(:lvar, :res))),
            s(:def, :do_OPTIONS,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:lvasgn, :m,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:self), :methods), :grep,
                      s(:regexp,
                        s(:str, "\\Ado_([A-Z]+)\\z"),
                        s(:regopt))),
                    s(:args),
                    s(:nth_ref, 1))),
                s(:send,
                  s(:lvar, :m), :sort!),
                s(:send,
                  s(:lvar, :res), :[]=,
                  s(:str, "allow"),
                  s(:send,
                    s(:lvar, :m), :join,
                    s(:str, ","))))),
            s(:send, nil, :private),
            s(:def, :redirect_to_directory_uri,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :req), :path), :[],
                    s(:int, -1)), :!=,
                  s(:str, "/")),
                s(:begin,
                  s(:lvasgn, :location,
                    s(:send,
                      s(:const,
                        s(:const, nil, :WEBrick), :HTTPUtils), :escape_path,
                      s(:send,
                        s(:send,
                          s(:lvar, :req), :path), :+,
                        s(:str, "/")))),
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:lvar, :req), :query_string),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :req), :query_string), :bytesize), :>,
                        s(:int, 0))),
                    s(:send,
                      s(:send,
                        s(:lvar, :location), :<<,
                        s(:str, "?")), :<<,
                      s(:send,
                        s(:lvar, :req), :query_string)), nil),
                  s(:send,
                    s(:lvar, :res), :set_redirect,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :MovedPermanently),
                    s(:lvar, :location))), nil))))))))
