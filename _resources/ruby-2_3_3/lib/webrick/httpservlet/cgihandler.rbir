s(:begin,
  s(:send, nil, :require,
    s(:str, "rbconfig")),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:send, nil, :require,
    s(:str, "webrick/config")),
  s(:send, nil, :require,
    s(:str, "webrick/httpservlet/abstract")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:module,
      s(:const, nil, :HTTPServlet),
      s(:class,
        s(:const, nil, :CGIHandler),
        s(:const, nil, :AbstractServlet),
        s(:begin,
          s(:casgn, nil, :Ruby,
            s(:send,
              s(:const, nil, :RbConfig), :ruby)),
          s(:casgn, nil, :CGIRunner,
            s(:dstr,
              s(:str, "\""),
              s(:begin,
                s(:const, nil, :Ruby)),
              s(:str, "\" \""),
              s(:begin,
                s(:const,
                  s(:const,
                    s(:const, nil, :WEBrick), :Config), :LIBDIR)),
              s(:str, "/httpservlet/cgi_runner.rb\""))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :server),
              s(:arg, :name)),
            s(:begin,
              s(:super,
                s(:lvar, :server),
                s(:lvar, :name)),
              s(:ivasgn, :@script_filename,
                s(:lvar, :name)),
              s(:ivasgn, :@tempdir,
                s(:send,
                  s(:lvar, :server), :[],
                  s(:sym, :TempDir))),
              s(:ivasgn, :@cgicmd,
                s(:dstr,
                  s(:begin,
                    s(:const, nil, :CGIRunner)),
                  s(:str, " "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :server), :[],
                      s(:sym, :CGIInterpreter))))))),
          s(:def, :do_GET,
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:lvasgn, :cgi_in,
                s(:send,
                  s(:const, nil, :IO), :popen,
                  s(:ivar, :@cgicmd),
                  s(:str, "wb"))),
              s(:lvasgn, :cgi_out,
                s(:send,
                  s(:const, nil, :Tempfile), :new,
                  s(:str, "webrick.cgiout."),
                  s(:ivar, :@tempdir),
                  s(:hash,
                    s(:pair,
                      s(:sym, :mode),
                      s(:const,
                        s(:const, nil, :IO), :BINARY))))),
              s(:send,
                s(:lvar, :cgi_out), :set_encoding,
                s(:str, "ASCII-8BIT")),
              s(:lvasgn, :cgi_err,
                s(:send,
                  s(:const, nil, :Tempfile), :new,
                  s(:str, "webrick.cgierr."),
                  s(:ivar, :@tempdir),
                  s(:hash,
                    s(:pair,
                      s(:sym, :mode),
                      s(:const,
                        s(:const, nil, :IO), :BINARY))))),
              s(:send,
                s(:lvar, :cgi_err), :set_encoding,
                s(:str, "ASCII-8BIT")),
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:send,
                      s(:lvar, :cgi_in), :sync=,
                      s(:true)),
                    s(:lvasgn, :meta,
                      s(:send,
                        s(:lvar, :req), :meta_vars)),
                    s(:send,
                      s(:lvar, :meta), :[]=,
                      s(:str, "SCRIPT_FILENAME"),
                      s(:ivar, :@script_filename)),
                    s(:send,
                      s(:lvar, :meta), :[]=,
                      s(:str, "PATH"),
                      s(:send,
                        s(:ivar, :@config), :[],
                        s(:sym, :CGIPathEnv))),
                    s(:send,
                      s(:lvar, :meta), :delete,
                      s(:str, "HTTP_PROXY")),
                    s(:if,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "mswin|bccwin|mingw"),
                          s(:regopt)),
                        s(:const, nil, :RUBY_PLATFORM)),
                      s(:send,
                        s(:lvar, :meta), :[]=,
                        s(:str, "SystemRoot"),
                        s(:send,
                          s(:const, nil, :ENV), :[],
                          s(:str, "SystemRoot"))), nil),
                    s(:lvasgn, :dump,
                      s(:send,
                        s(:const, nil, :Marshal), :dump,
                        s(:lvar, :meta))),
                    s(:send,
                      s(:lvar, :cgi_in), :write,
                      s(:send,
                        s(:str, "%8d"), :%,
                        s(:send,
                          s(:send,
                            s(:lvar, :cgi_out), :path), :bytesize))),
                    s(:send,
                      s(:lvar, :cgi_in), :write,
                      s(:send,
                        s(:lvar, :cgi_out), :path)),
                    s(:send,
                      s(:lvar, :cgi_in), :write,
                      s(:send,
                        s(:str, "%8d"), :%,
                        s(:send,
                          s(:send,
                            s(:lvar, :cgi_err), :path), :bytesize))),
                    s(:send,
                      s(:lvar, :cgi_in), :write,
                      s(:send,
                        s(:lvar, :cgi_err), :path)),
                    s(:send,
                      s(:lvar, :cgi_in), :write,
                      s(:send,
                        s(:str, "%8d"), :%,
                        s(:send,
                          s(:lvar, :dump), :bytesize))),
                    s(:send,
                      s(:lvar, :cgi_in), :write,
                      s(:lvar, :dump)),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:lvar, :req), :body),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :req), :body), :bytesize), :>,
                          s(:int, 0))),
                      s(:send,
                        s(:lvar, :cgi_in), :write,
                        s(:send,
                          s(:lvar, :req), :body)), nil)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :cgi_in), :close),
                    s(:lvasgn, :status,
                      s(:send,
                        s(:gvar, :$?), :exitstatus)),
                    s(:if,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "mswin|bccwin|mingw"),
                          s(:regopt)),
                        s(:const, nil, :RUBY_PLATFORM)),
                      s(:send, nil, :sleep,
                        s(:float, 0.1)), nil),
                    s(:lvasgn, :data,
                      s(:send,
                        s(:lvar, :cgi_out), :read)),
                    s(:send,
                      s(:lvar, :cgi_out), :close,
                      s(:true)),
                    s(:if,
                      s(:lvasgn, :errmsg,
                        s(:send,
                          s(:lvar, :cgi_err), :read)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :errmsg), :bytesize), :>,
                          s(:int, 0)),
                        s(:send,
                          s(:ivar, :@logger), :error,
                          s(:send,
                            s(:dstr,
                              s(:str, "CGIHandler: "),
                              s(:begin,
                                s(:ivar, :@script_filename)),
                              s(:str, ":\n")), :+,
                            s(:lvar, :errmsg))), nil), nil),
                    s(:send,
                      s(:lvar, :cgi_err), :close,
                      s(:true))))),
              s(:if,
                s(:send,
                  s(:lvar, :status), :!=,
                  s(:int, 0)),
                s(:send,
                  s(:ivar, :@logger), :error,
                  s(:dstr,
                    s(:str, "CGIHandler: "),
                    s(:begin,
                      s(:ivar, :@script_filename)),
                    s(:str, " exit with "),
                    s(:begin,
                      s(:lvar, :status)))), nil),
              s(:if,
                s(:lvar, :data), nil,
                s(:lvasgn, :data,
                  s(:str, ""))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :raw_header),
                  s(:lvasgn, :body)),
                s(:send,
                  s(:lvar, :data), :split,
                  s(:regexp,
                    s(:str, "^[\\xd\\xa]+"),
                    s(:regopt)),
                  s(:int, 2))),
              s(:if,
                s(:send,
                  s(:lvar, :body), :nil?),
                s(:send, nil, :raise,
                  s(:const,
                    s(:const, nil, :HTTPStatus), :InternalServerError),
                  s(:dstr,
                    s(:str, "Premature end of script headers: "),
                    s(:begin,
                      s(:ivar, :@script_filename)))), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:lvasgn, :header,
                      s(:send,
                        s(:const, nil, :HTTPUtils), :parse_header,
                        s(:lvar, :raw_header))),
                    s(:if,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "^(\\d+)"),
                          s(:regopt)),
                        s(:send,
                          s(:send,
                            s(:lvar, :header), :[],
                            s(:str, "status")), :[],
                          s(:int, 0))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :res), :status=,
                          s(:send,
                            s(:nth_ref, 1), :to_i)),
                        s(:send,
                          s(:lvar, :header), :delete,
                          s(:str, "status"))), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :header), :has_key?,
                        s(:str, "location")),
                      s(:if,
                        s(:send,
                          s(:begin,
                            s(:erange,
                              s(:int, 300),
                              s(:int, 400))), :===,
                          s(:send,
                            s(:lvar, :res), :status)), nil,
                        s(:send,
                          s(:lvar, :res), :status=,
                          s(:int, 302))), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :header), :has_key?,
                        s(:str, "set-cookie")),
                      s(:begin,
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:lvar, :header), :[],
                              s(:str, "set-cookie")), :each),
                          s(:args,
                            s(:arg, :k)),
                          s(:send,
                            s(:send,
                              s(:lvar, :res), :cookies), :<<,
                            s(:send,
                              s(:const, nil, :Cookie), :parse_set_cookie,
                              s(:lvar, :k)))),
                        s(:send,
                          s(:lvar, :header), :delete,
                          s(:str, "set-cookie"))), nil),
                    s(:block,
                      s(:send,
                        s(:lvar, :header), :each),
                      s(:args,
                        s(:arg, :key),
                        s(:arg, :val)),
                      s(:send,
                        s(:lvar, :res), :[]=,
                        s(:lvar, :key),
                        s(:send,
                          s(:lvar, :val), :join,
                          s(:str, ", "))))),
                  s(:resbody, nil,
                    s(:lvasgn, :ex),
                    s(:send, nil, :raise,
                      s(:const,
                        s(:const, nil, :HTTPStatus), :InternalServerError),
                      s(:send,
                        s(:lvar, :ex), :message))), nil)),
              s(:send,
                s(:lvar, :res), :body=,
                s(:lvar, :body)))),
          s(:alias,
            s(:sym, :do_POST),
            s(:sym, :do_GET)))))))
