s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:send, nil, :require,
    s(:str, "time")),
  s(:send, nil, :require,
    s(:str, "webrick/htmlutils")),
  s(:send, nil, :require,
    s(:str, "webrick/httputils")),
  s(:send, nil, :require,
    s(:str, "webrick/httpstatus")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:module,
      s(:const, nil, :HTTPServlet),
      s(:begin,
        s(:class,
          s(:const, nil, :DefaultFileHandler),
          s(:const, nil, :AbstractServlet),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :server),
                s(:arg, :local_path)),
              s(:begin,
                s(:super,
                  s(:lvar, :server),
                  s(:lvar, :local_path)),
                s(:ivasgn, :@local_path,
                  s(:lvar, :local_path)))),
            s(:def, :do_GET,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:lvasgn, :st,
                  s(:send,
                    s(:const, nil, :File), :stat,
                    s(:ivar, :@local_path))),
                s(:lvasgn, :mtime,
                  s(:send,
                    s(:lvar, :st), :mtime)),
                s(:send,
                  s(:lvar, :res), :[]=,
                  s(:str, "etag"),
                  s(:send, nil, :sprintf,
                    s(:str, "%x-%x-%x"),
                    s(:send,
                      s(:lvar, :st), :ino),
                    s(:send,
                      s(:lvar, :st), :size),
                    s(:send,
                      s(:send,
                        s(:lvar, :st), :mtime), :to_i))),
                s(:if,
                  s(:send, nil, :not_modified?,
                    s(:lvar, :req),
                    s(:lvar, :res),
                    s(:lvar, :mtime),
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "etag"))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :res), :body=,
                      s(:str, "")),
                    s(:send, nil, :raise,
                      s(:const,
                        s(:const, nil, :HTTPStatus), :NotModified))),
                  s(:if,
                    s(:send,
                      s(:lvar, :req), :[],
                      s(:str, "range")),
                    s(:begin,
                      s(:send, nil, :make_partial_content,
                        s(:lvar, :req),
                        s(:lvar, :res),
                        s(:ivar, :@local_path),
                        s(:send,
                          s(:lvar, :st), :size)),
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const, nil, :HTTPStatus), :PartialContent))),
                    s(:begin,
                      s(:lvasgn, :mtype,
                        s(:send,
                          s(:const, nil, :HTTPUtils), :mime_type,
                          s(:ivar, :@local_path),
                          s(:send,
                            s(:ivar, :@config), :[],
                            s(:sym, :MimeTypes)))),
                      s(:send,
                        s(:lvar, :res), :[]=,
                        s(:str, "content-type"),
                        s(:lvar, :mtype)),
                      s(:send,
                        s(:lvar, :res), :[]=,
                        s(:str, "content-length"),
                        s(:send,
                          s(:lvar, :st), :size)),
                      s(:send,
                        s(:lvar, :res), :[]=,
                        s(:str, "last-modified"),
                        s(:send,
                          s(:lvar, :mtime), :httpdate)),
                      s(:send,
                        s(:lvar, :res), :body=,
                        s(:send, nil, :open,
                          s(:ivar, :@local_path),
                          s(:str, "rb")))))))),
            s(:def, :not_modified?,
              s(:args,
                s(:arg, :req),
                s(:arg, :res),
                s(:arg, :mtime),
                s(:arg, :etag)),
              s(:begin,
                s(:if,
                  s(:lvasgn, :ir,
                    s(:send,
                      s(:lvar, :req), :[],
                      s(:str, "if-range"))),
                  s(:kwbegin,
                    s(:rescue,
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Time), :httpdate,
                            s(:lvar, :ir)), :>=,
                          s(:lvar, :mtime)),
                        s(:return,
                          s(:true)), nil),
                      s(:resbody, nil, nil,
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:const, nil, :HTTPUtils), :split_header_value,
                              s(:lvar, :ir)), :member?,
                            s(:send,
                              s(:lvar, :res), :[],
                              s(:str, "etag"))),
                          s(:return,
                            s(:true)), nil)), nil)), nil),
                s(:if,
                  s(:and,
                    s(:begin,
                      s(:lvasgn, :ims,
                        s(:send,
                          s(:lvar, :req), :[],
                          s(:str, "if-modified-since")))),
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :parse,
                        s(:lvar, :ims)), :>=,
                      s(:lvar, :mtime))),
                  s(:return,
                    s(:true)), nil),
                s(:if,
                  s(:and,
                    s(:begin,
                      s(:lvasgn, :inm,
                        s(:send,
                          s(:lvar, :req), :[],
                          s(:str, "if-none-match")))),
                    s(:send,
                      s(:send,
                        s(:const, nil, :HTTPUtils), :split_header_value,
                        s(:lvar, :inm)), :member?,
                      s(:send,
                        s(:lvar, :res), :[],
                        s(:str, "etag")))),
                  s(:return,
                    s(:true)), nil),
                s(:return,
                  s(:false)))),
            s(:def, :make_partial_content,
              s(:args,
                s(:arg, :req),
                s(:arg, :res),
                s(:arg, :filename),
                s(:arg, :filesize)),
              s(:begin,
                s(:lvasgn, :mtype,
                  s(:send,
                    s(:const, nil, :HTTPUtils), :mime_type,
                    s(:lvar, :filename),
                    s(:send,
                      s(:ivar, :@config), :[],
                      s(:sym, :MimeTypes)))),
                s(:if,
                  s(:lvasgn, :ranges,
                    s(:send,
                      s(:const, nil, :HTTPUtils), :parse_range_header,
                      s(:send,
                        s(:lvar, :req), :[],
                        s(:str, "range")))), nil,
                  s(:send, nil, :raise,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :BadRequest),
                    s(:dstr,
                      s(:str, "Unrecognized range-spec: \""),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :[],
                          s(:str, "range"))),
                      s(:str, "\"")))),
                s(:block,
                  s(:send, nil, :open,
                    s(:lvar, :filename),
                    s(:str, "rb")),
                  s(:args,
                    s(:arg, :io)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :ranges), :size), :>,
                      s(:int, 1)),
                    s(:begin,
                      s(:lvasgn, :time,
                        s(:send,
                          s(:const, nil, :Time), :now)),
                      s(:lvasgn, :boundary,
                        s(:dstr,
                          s(:begin,
                            s(:send,
                              s(:lvar, :time), :sec)),
                          s(:str, "_"),
                          s(:begin,
                            s(:send,
                              s(:lvar, :time), :usec)),
                          s(:str, "_"),
                          s(:begin,
                            s(:send,
                              s(:const, nil, :Process), :pid)))),
                      s(:lvasgn, :body,
                        s(:str, "")),
                      s(:block,
                        s(:send,
                          s(:lvar, :ranges), :each),
                        s(:args,
                          s(:arg, :range)),
                        s(:begin,
                          s(:masgn,
                            s(:mlhs,
                              s(:lvasgn, :first),
                              s(:lvasgn, :last)),
                            s(:send, nil, :prepare_range,
                              s(:lvar, :range),
                              s(:lvar, :filesize))),
                          s(:if,
                            s(:send,
                              s(:lvar, :first), :<,
                              s(:int, 0)),
                            s(:next), nil),
                          s(:send,
                            s(:lvar, :io), :pos=,
                            s(:lvar, :first)),
                          s(:lvasgn, :content,
                            s(:send,
                              s(:lvar, :io), :read,
                              s(:send,
                                s(:send,
                                  s(:lvar, :last), :-,
                                  s(:lvar, :first)), :+,
                                s(:int, 1)))),
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :body), :<<,
                                s(:str, "--")), :<<,
                              s(:lvar, :boundary)), :<<,
                            s(:const, nil, :CRLF)),
                          s(:send,
                            s(:send,
                              s(:lvar, :body), :<<,
                              s(:dstr,
                                s(:str, "Content-Type: "),
                                s(:begin,
                                  s(:lvar, :mtype)))), :<<,
                            s(:const, nil, :CRLF)),
                          s(:send,
                            s(:send,
                              s(:lvar, :body), :<<,
                              s(:dstr,
                                s(:str, "Content-Range: bytes "),
                                s(:begin,
                                  s(:lvar, :first)),
                                s(:str, "-"),
                                s(:begin,
                                  s(:lvar, :last)),
                                s(:str, "/"),
                                s(:begin,
                                  s(:lvar, :filesize)))), :<<,
                            s(:const, nil, :CRLF)),
                          s(:send,
                            s(:lvar, :body), :<<,
                            s(:const, nil, :CRLF)),
                          s(:send,
                            s(:lvar, :body), :<<,
                            s(:lvar, :content)),
                          s(:send,
                            s(:lvar, :body), :<<,
                            s(:const, nil, :CRLF)))),
                      s(:if,
                        s(:send,
                          s(:lvar, :body), :empty?),
                        s(:send, nil, :raise,
                          s(:const,
                            s(:const, nil, :HTTPStatus), :RequestRangeNotSatisfiable)), nil),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :body), :<<,
                              s(:str, "--")), :<<,
                            s(:lvar, :boundary)), :<<,
                          s(:str, "--")), :<<,
                        s(:const, nil, :CRLF)),
                      s(:send,
                        s(:lvar, :res), :[]=,
                        s(:str, "content-type"),
                        s(:dstr,
                          s(:str, "multipart/byteranges; boundary="),
                          s(:begin,
                            s(:lvar, :boundary)))),
                      s(:send,
                        s(:lvar, :res), :body=,
                        s(:lvar, :body))),
                    s(:if,
                      s(:lvasgn, :range,
                        s(:send,
                          s(:lvar, :ranges), :[],
                          s(:int, 0))),
                      s(:begin,
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :first),
                            s(:lvasgn, :last)),
                          s(:send, nil, :prepare_range,
                            s(:lvar, :range),
                            s(:lvar, :filesize))),
                        s(:if,
                          s(:send,
                            s(:lvar, :first), :<,
                            s(:int, 0)),
                          s(:send, nil, :raise,
                            s(:const,
                              s(:const, nil, :HTTPStatus), :RequestRangeNotSatisfiable)), nil),
                        s(:if,
                          s(:send,
                            s(:lvar, :last), :==,
                            s(:send,
                              s(:lvar, :filesize), :-,
                              s(:int, 1))),
                          s(:begin,
                            s(:lvasgn, :content,
                              s(:send,
                                s(:lvar, :io), :dup)),
                            s(:send,
                              s(:lvar, :content), :pos=,
                              s(:lvar, :first))),
                          s(:begin,
                            s(:send,
                              s(:lvar, :io), :pos=,
                              s(:lvar, :first)),
                            s(:lvasgn, :content,
                              s(:send,
                                s(:lvar, :io), :read,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :last), :-,
                                    s(:lvar, :first)), :+,
                                  s(:int, 1)))))),
                        s(:send,
                          s(:lvar, :res), :[]=,
                          s(:str, "content-type"),
                          s(:lvar, :mtype)),
                        s(:send,
                          s(:lvar, :res), :[]=,
                          s(:str, "content-range"),
                          s(:dstr,
                            s(:str, "bytes "),
                            s(:begin,
                              s(:lvar, :first)),
                            s(:str, "-"),
                            s(:begin,
                              s(:lvar, :last)),
                            s(:str, "/"),
                            s(:begin,
                              s(:lvar, :filesize)))),
                        s(:send,
                          s(:lvar, :res), :[]=,
                          s(:str, "content-length"),
                          s(:send,
                            s(:send,
                              s(:lvar, :last), :-,
                              s(:lvar, :first)), :+,
                            s(:int, 1))),
                        s(:send,
                          s(:lvar, :res), :body=,
                          s(:lvar, :content))),
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const, nil, :HTTPStatus), :BadRequest))))))),
            s(:def, :prepare_range,
              s(:args,
                s(:arg, :range),
                s(:arg, :filesize)),
              s(:begin,
                s(:lvasgn, :first,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :range), :first), :<,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :filesize), :+,
                      s(:send,
                        s(:lvar, :range), :first)),
                    s(:send,
                      s(:lvar, :range), :first))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :first), :<,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :first), :>=,
                      s(:lvar, :filesize))),
                  s(:return,
                    s(:int, -1),
                    s(:int, -1)), nil),
                s(:lvasgn, :last,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :range), :last), :<,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :filesize), :+,
                      s(:send,
                        s(:lvar, :range), :last)),
                    s(:send,
                      s(:lvar, :range), :last))),
                s(:if,
                  s(:send,
                    s(:lvar, :last), :>=,
                    s(:lvar, :filesize)),
                  s(:lvasgn, :last,
                    s(:send,
                      s(:lvar, :filesize), :-,
                      s(:int, 1))), nil),
                s(:return,
                  s(:lvar, :first),
                  s(:lvar, :last)))))),
        s(:class,
          s(:const, nil, :FileHandler),
          s(:const, nil, :AbstractServlet),
          s(:begin,
            s(:casgn, nil, :HandlerTable,
              s(:send,
                s(:const, nil, :Hash), :new)),
            s(:defs,
              s(:self), :add_handler,
              s(:args,
                s(:arg, :suffix),
                s(:arg, :handler)),
              s(:send,
                s(:const, nil, :HandlerTable), :[]=,
                s(:lvar, :suffix),
                s(:lvar, :handler))),
            s(:defs,
              s(:self), :remove_handler,
              s(:args,
                s(:arg, :suffix)),
              s(:send,
                s(:const, nil, :HandlerTable), :delete,
                s(:lvar, :suffix))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :server),
                s(:arg, :root),
                s(:optarg, :options,
                  s(:hash)),
                s(:optarg, :default,
                  s(:const,
                    s(:const, nil, :Config), :FileHandler))),
              s(:begin,
                s(:ivasgn, :@config,
                  s(:send,
                    s(:lvar, :server), :config)),
                s(:ivasgn, :@logger,
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :Logger))),
                s(:ivasgn, :@root,
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:lvar, :root))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :options), :==,
                      s(:true)),
                    s(:send,
                      s(:lvar, :options), :==,
                      s(:false))),
                  s(:lvasgn, :options,
                    s(:hash,
                      s(:pair,
                        s(:sym, :FancyIndexing),
                        s(:lvar, :options)))), nil),
                s(:ivasgn, :@options,
                  s(:send,
                    s(:send,
                      s(:lvar, :default), :dup), :update,
                    s(:lvar, :options))))),
            s(:def, :service,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:if,
                  s(:and,
                    s(:and,
                      s(:defined?,
                        s(:const, nil, :Etc)),
                      s(:send,
                        s(:ivar, :@options), :[],
                        s(:sym, :UserDir))),
                    s(:send,
                      s(:send,
                        s(:lvar, :req), :script_name), :empty?)),
                  s(:if,
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "^(/~([^/]+))"),
                        s(:regopt)),
                      s(:send,
                        s(:lvar, :req), :path_info)),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :script_name),
                          s(:lvasgn, :user)),
                        s(:array,
                          s(:nth_ref, 1),
                          s(:nth_ref, 2))),
                      s(:lvasgn, :path_info,
                        s(:back_ref, :$')),
                      s(:kwbegin,
                        s(:rescue,
                          s(:begin,
                            s(:lvasgn, :passwd,
                              s(:send,
                                s(:const, nil, :Etc), :getpwnam,
                                s(:lvar, :user))),
                            s(:ivasgn, :@root,
                              s(:send,
                                s(:const, nil, :File), :join,
                                s(:send,
                                  s(:lvar, :passwd), :dir),
                                s(:send,
                                  s(:ivar, :@options), :[],
                                  s(:sym, :UserDir)))),
                            s(:send,
                              s(:lvar, :req), :script_name=,
                              s(:lvar, :script_name)),
                            s(:send,
                              s(:lvar, :req), :path_info=,
                              s(:lvar, :path_info))),
                          s(:resbody, nil, nil,
                            s(:send,
                              s(:ivar, :@logger), :debug,
                              s(:dstr,
                                s(:begin,
                                  s(:send,
                                    s(:self), :class)),
                                s(:str, "#do_GET: getpwnam("),
                                s(:begin,
                                  s(:lvar, :user)),
                                s(:str, ") failed")))), nil))), nil), nil),
                s(:send, nil, :prevent_directory_traversal,
                  s(:lvar, :req),
                  s(:lvar, :res)),
                s(:super,
                  s(:lvar, :req),
                  s(:lvar, :res)))),
            s(:def, :do_GET,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:if,
                s(:send, nil, :exec_handler,
                  s(:lvar, :req),
                  s(:lvar, :res)), nil,
                s(:send, nil, :set_dir_list,
                  s(:lvar, :req),
                  s(:lvar, :res)))),
            s(:def, :do_POST,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:if,
                s(:send, nil, :exec_handler,
                  s(:lvar, :req),
                  s(:lvar, :res)), nil,
                s(:send, nil, :raise,
                  s(:const,
                    s(:const, nil, :HTTPStatus), :NotFound),
                  s(:dstr,
                    s(:str, "`"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :path)),
                    s(:str, "' not found."))))),
            s(:def, :do_OPTIONS,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:if,
                s(:send, nil, :exec_handler,
                  s(:lvar, :req),
                  s(:lvar, :res)), nil,
                s(:super,
                  s(:lvar, :req),
                  s(:lvar, :res)))),
            s(:send, nil, :private),
            s(:def, :trailing_pathsep?,
              s(:args,
                s(:arg, :path)),
              s(:return,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:lvar, :path)), :!=,
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:send,
                      s(:lvar, :path), :+,
                      s(:str, "x")))))),
            s(:def, :prevent_directory_traversal,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:lvasgn, :path,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :req), :path_info), :dup), :force_encoding,
                    s(:send,
                      s(:const, nil, :Encoding), :find,
                      s(:str, "filesystem")))),
                s(:if,
                  s(:send, nil, :trailing_pathsep?,
                    s(:send,
                      s(:lvar, :req), :path_info)),
                  s(:begin,
                    s(:lvasgn, :expanded,
                      s(:send,
                        s(:const, nil, :File), :expand_path,
                        s(:send,
                          s(:lvar, :path), :+,
                          s(:str, "x")))),
                    s(:send,
                      s(:lvar, :expanded), :chop!)),
                  s(:lvasgn, :expanded,
                    s(:send,
                      s(:const, nil, :File), :expand_path,
                      s(:lvar, :path)))),
                s(:send,
                  s(:lvar, :expanded), :force_encoding,
                  s(:send,
                    s(:send,
                      s(:lvar, :req), :path_info), :encoding)),
                s(:send,
                  s(:lvar, :req), :path_info=,
                  s(:lvar, :expanded)))),
            s(:def, :exec_handler,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:if,
                  s(:ivar, :@root), nil,
                  s(:send, nil, :raise,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :NotFound),
                    s(:dstr,
                      s(:str, "`"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :path)),
                      s(:str, "' not found")))),
                s(:if,
                  s(:send, nil, :set_filename,
                    s(:lvar, :req),
                    s(:lvar, :res)),
                  s(:begin,
                    s(:lvasgn, :handler,
                      s(:send, nil, :get_handler,
                        s(:lvar, :req),
                        s(:lvar, :res))),
                    s(:send, nil, :call_callback,
                      s(:sym, :HandlerCallback),
                      s(:lvar, :req),
                      s(:lvar, :res)),
                    s(:lvasgn, :h,
                      s(:send,
                        s(:lvar, :handler), :get_instance,
                        s(:ivar, :@config),
                        s(:send,
                          s(:lvar, :res), :filename))),
                    s(:send,
                      s(:lvar, :h), :service,
                      s(:lvar, :req),
                      s(:lvar, :res)),
                    s(:return,
                      s(:true))), nil),
                s(:send, nil, :call_callback,
                  s(:sym, :HandlerCallback),
                  s(:lvar, :req),
                  s(:lvar, :res)),
                s(:return,
                  s(:false)))),
            s(:def, :get_handler,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:lvasgn, :suffix1,
                  s(:and,
                    s(:begin,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "\\.(\\w+)\\z"),
                          s(:regopt)),
                        s(:send,
                          s(:lvar, :res), :filename))),
                    s(:send,
                      s(:nth_ref, 1), :downcase))),
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "\\.(\\w+)\\.([\\w\\-]+)\\z"),
                      s(:regopt)),
                    s(:send,
                      s(:lvar, :res), :filename)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:ivar, :@options), :[],
                        s(:sym, :AcceptableLanguages)), :include?,
                      s(:send,
                        s(:nth_ref, 2), :downcase)),
                    s(:lvasgn, :suffix2,
                      s(:send,
                        s(:nth_ref, 1), :downcase)), nil), nil),
                s(:lvasgn, :handler_table,
                  s(:send,
                    s(:ivar, :@options), :[],
                    s(:sym, :HandlerTable))),
                s(:return,
                  s(:or,
                    s(:or,
                      s(:or,
                        s(:or,
                          s(:send,
                            s(:lvar, :handler_table), :[],
                            s(:lvar, :suffix1)),
                          s(:send,
                            s(:lvar, :handler_table), :[],
                            s(:lvar, :suffix2))),
                        s(:send,
                          s(:const, nil, :HandlerTable), :[],
                          s(:lvar, :suffix1))),
                      s(:send,
                        s(:const, nil, :HandlerTable), :[],
                        s(:lvar, :suffix2))),
                    s(:const, nil, :DefaultFileHandler))))),
            s(:def, :set_filename,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:send,
                  s(:lvar, :res), :filename=,
                  s(:send,
                    s(:ivar, :@root), :dup)),
                s(:lvasgn, :path_info,
                  s(:send,
                    s(:send,
                      s(:lvar, :req), :path_info), :scan,
                    s(:regexp,
                      s(:str, "/[^/]*"),
                      s(:regopt)))),
                s(:send,
                  s(:lvar, :path_info), :unshift,
                  s(:str, "")),
                s(:while,
                  s(:lvasgn, :base,
                    s(:send,
                      s(:lvar, :path_info), :first)),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :base), :==,
                        s(:str, "/")),
                      s(:break), nil),
                    s(:if,
                      s(:send,
                        s(:const, nil, :File), :directory?,
                        s(:send,
                          s(:const, nil, :File), :expand_path,
                          s(:send,
                            s(:send,
                              s(:lvar, :res), :filename), :+,
                            s(:lvar, :base)))), nil,
                      s(:break)),
                    s(:send, nil, :shift_path_info,
                      s(:lvar, :req),
                      s(:lvar, :res),
                      s(:lvar, :path_info)),
                    s(:send, nil, :call_callback,
                      s(:sym, :DirectoryCallback),
                      s(:lvar, :req),
                      s(:lvar, :res)))),
                s(:if,
                  s(:lvasgn, :base,
                    s(:send,
                      s(:lvar, :path_info), :first)),
                  s(:if,
                    s(:send,
                      s(:lvar, :base), :==,
                      s(:str, "/")),
                    s(:begin,
                      s(:if,
                        s(:lvasgn, :file,
                          s(:send, nil, :search_index_file,
                            s(:lvar, :req),
                            s(:lvar, :res))),
                        s(:begin,
                          s(:send, nil, :shift_path_info,
                            s(:lvar, :req),
                            s(:lvar, :res),
                            s(:lvar, :path_info),
                            s(:lvar, :file)),
                          s(:send, nil, :call_callback,
                            s(:sym, :FileCallback),
                            s(:lvar, :req),
                            s(:lvar, :res)),
                          s(:return,
                            s(:true))), nil),
                      s(:send, nil, :shift_path_info,
                        s(:lvar, :req),
                        s(:lvar, :res),
                        s(:lvar, :path_info))),
                    s(:if,
                      s(:lvasgn, :file,
                        s(:send, nil, :search_file,
                          s(:lvar, :req),
                          s(:lvar, :res),
                          s(:lvar, :base))),
                      s(:begin,
                        s(:send, nil, :shift_path_info,
                          s(:lvar, :req),
                          s(:lvar, :res),
                          s(:lvar, :path_info),
                          s(:lvar, :file)),
                        s(:send, nil, :call_callback,
                          s(:sym, :FileCallback),
                          s(:lvar, :req),
                          s(:lvar, :res)),
                        s(:return,
                          s(:true))),
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const, nil, :HTTPStatus), :NotFound),
                        s(:dstr,
                          s(:str, "`"),
                          s(:begin,
                            s(:send,
                              s(:lvar, :req), :path)),
                          s(:str, "' not found."))))), nil),
                s(:return,
                  s(:false)))),
            s(:def, :check_filename,
              s(:args,
                s(:arg, :req),
                s(:arg, :res),
                s(:arg, :name)),
              s(:if,
                s(:or,
                  s(:send, nil, :nondisclosure_name?,
                    s(:lvar, :name)),
                  s(:send, nil, :windows_ambiguous_name?,
                    s(:lvar, :name))),
                s(:begin,
                  s(:send,
                    s(:ivar, :@logger), :warn,
                    s(:dstr,
                      s(:str, "the request refers nondisclosure name `"),
                      s(:begin,
                        s(:lvar, :name)),
                      s(:str, "'."))),
                  s(:send, nil, :raise,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :NotFound),
                    s(:dstr,
                      s(:str, "`"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :path)),
                      s(:str, "' not found.")))), nil)),
            s(:def, :shift_path_info,
              s(:args,
                s(:arg, :req),
                s(:arg, :res),
                s(:arg, :path_info),
                s(:optarg, :base,
                  s(:nil))),
              s(:begin,
                s(:lvasgn, :tmp,
                  s(:send,
                    s(:lvar, :path_info), :shift)),
                s(:lvasgn, :base,
                  s(:or,
                    s(:lvar, :base),
                    s(:lvar, :tmp))),
                s(:send,
                  s(:lvar, :req), :path_info=,
                  s(:send,
                    s(:lvar, :path_info), :join)),
                s(:send,
                  s(:send,
                    s(:lvar, :req), :script_name), :<<,
                  s(:lvar, :base)),
                s(:send,
                  s(:lvar, :res), :filename=,
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:send,
                      s(:send,
                        s(:lvar, :res), :filename), :+,
                      s(:lvar, :base)))),
                s(:send, nil, :check_filename,
                  s(:lvar, :req),
                  s(:lvar, :res),
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:lvar, :res), :filename))))),
            s(:def, :search_index_file,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@config), :[],
                      s(:sym, :DirectoryIndex)), :each),
                  s(:args,
                    s(:arg, :index)),
                  s(:if,
                    s(:lvasgn, :file,
                      s(:send, nil, :search_file,
                        s(:lvar, :req),
                        s(:lvar, :res),
                        s(:send,
                          s(:str, "/"), :+,
                          s(:lvar, :index)))),
                    s(:return,
                      s(:lvar, :file)), nil)),
                s(:return,
                  s(:nil)))),
            s(:def, :search_file,
              s(:args,
                s(:arg, :req),
                s(:arg, :res),
                s(:arg, :basename)),
              s(:begin,
                s(:lvasgn, :langs,
                  s(:send,
                    s(:ivar, :@options), :[],
                    s(:sym, :AcceptableLanguages))),
                s(:lvasgn, :path,
                  s(:send,
                    s(:send,
                      s(:lvar, :res), :filename), :+,
                    s(:lvar, :basename))),
                s(:if,
                  s(:send,
                    s(:const, nil, :File), :file?,
                    s(:lvar, :path)),
                  s(:return,
                    s(:lvar, :basename)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :langs), :size), :>,
                      s(:int, 0)),
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:lvar, :req), :accept_language), :each),
                        s(:args,
                          s(:arg, :lang)),
                        s(:begin,
                          s(:lvasgn, :path_with_lang,
                            s(:send,
                              s(:lvar, :path), :+,
                              s(:dstr,
                                s(:str, "."),
                                s(:begin,
                                  s(:lvar, :lang))))),
                          s(:if,
                            s(:and,
                              s(:send,
                                s(:lvar, :langs), :member?,
                                s(:lvar, :lang)),
                              s(:send,
                                s(:const, nil, :File), :file?,
                                s(:lvar, :path_with_lang))),
                            s(:return,
                              s(:send,
                                s(:lvar, :basename), :+,
                                s(:dstr,
                                  s(:str, "."),
                                  s(:begin,
                                    s(:lvar, :lang))))), nil))),
                      s(:block,
                        s(:send,
                          s(:begin,
                            s(:send,
                              s(:lvar, :langs), :-,
                              s(:send,
                                s(:lvar, :req), :accept_language))), :each),
                        s(:args,
                          s(:arg, :lang)),
                        s(:begin,
                          s(:lvasgn, :path_with_lang,
                            s(:send,
                              s(:lvar, :path), :+,
                              s(:dstr,
                                s(:str, "."),
                                s(:begin,
                                  s(:lvar, :lang))))),
                          s(:if,
                            s(:send,
                              s(:const, nil, :File), :file?,
                              s(:lvar, :path_with_lang)),
                            s(:return,
                              s(:send,
                                s(:lvar, :basename), :+,
                                s(:dstr,
                                  s(:str, "."),
                                  s(:begin,
                                    s(:lvar, :lang))))), nil)))), nil)),
                s(:return,
                  s(:nil)))),
            s(:def, :call_callback,
              s(:args,
                s(:arg, :callback_name),
                s(:arg, :req),
                s(:arg, :res)),
              s(:if,
                s(:lvasgn, :cb,
                  s(:send,
                    s(:ivar, :@options), :[],
                    s(:lvar, :callback_name))),
                s(:send,
                  s(:lvar, :cb), :call,
                  s(:lvar, :req),
                  s(:lvar, :res)), nil)),
            s(:def, :windows_ambiguous_name?,
              s(:args,
                s(:arg, :name)),
              s(:begin,
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "[. ]+\\z"),
                      s(:regopt)),
                    s(:lvar, :name)),
                  s(:return,
                    s(:true)), nil),
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "::\\$DATA\\z"),
                      s(:regopt)),
                    s(:lvar, :name)),
                  s(:return,
                    s(:true)), nil),
                s(:return,
                  s(:false)))),
            s(:def, :nondisclosure_name?,
              s(:args,
                s(:arg, :name)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@options), :[],
                      s(:sym, :NondisclosureName)), :each),
                  s(:args,
                    s(:arg, :pattern)),
                  s(:if,
                    s(:send,
                      s(:const, nil, :File), :fnmatch,
                      s(:lvar, :pattern),
                      s(:lvar, :name),
                      s(:const,
                        s(:const, nil, :File), :FNM_CASEFOLD)),
                    s(:return,
                      s(:true)), nil)),
                s(:return,
                  s(:false)))),
            s(:def, :set_dir_list,
              s(:args,
                s(:arg, :req),
                s(:arg, :res)),
              s(:begin,
                s(:send, nil, :redirect_to_directory_uri,
                  s(:lvar, :req),
                  s(:lvar, :res)),
                s(:if,
                  s(:send,
                    s(:ivar, :@options), :[],
                    s(:sym, :FancyIndexing)), nil,
                  s(:send, nil, :raise,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :Forbidden),
                    s(:dstr,
                      s(:str, "no access permission to `"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :path)),
                      s(:str, "'")))),
                s(:lvasgn, :local_path,
                  s(:send,
                    s(:lvar, :res), :filename)),
                s(:lvasgn, :list,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Dir), :entries,
                        s(:lvar, :local_path)), :collect),
                    s(:args,
                      s(:arg, :name)),
                    s(:begin,
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :name), :==,
                            s(:str, ".")),
                          s(:send,
                            s(:lvar, :name), :==,
                            s(:str, ".."))),
                        s(:next), nil),
                      s(:if,
                        s(:send, nil, :nondisclosure_name?,
                          s(:lvar, :name)),
                        s(:next), nil),
                      s(:if,
                        s(:send, nil, :windows_ambiguous_name?,
                          s(:lvar, :name)),
                        s(:next), nil),
                      s(:lvasgn, :st,
                        s(:begin,
                          s(:rescue,
                            s(:send,
                              s(:const, nil, :File), :stat,
                              s(:send,
                                s(:const, nil, :File), :join,
                                s(:lvar, :local_path),
                                s(:lvar, :name))),
                            s(:resbody, nil, nil,
                              s(:nil)), nil))),
                      s(:if,
                        s(:send,
                          s(:lvar, :st), :nil?),
                        s(:array,
                          s(:lvar, :name),
                          s(:nil),
                          s(:int, -1)),
                        s(:if,
                          s(:send,
                            s(:lvar, :st), :directory?),
                          s(:array,
                            s(:send,
                              s(:lvar, :name), :+,
                              s(:str, "/")),
                            s(:send,
                              s(:lvar, :st), :mtime),
                            s(:int, -1)),
                          s(:array,
                            s(:lvar, :name),
                            s(:send,
                              s(:lvar, :st), :mtime),
                            s(:send,
                              s(:lvar, :st), :size))))))),
                s(:send,
                  s(:lvar, :list), :compact!),
                s(:lvasgn, :query,
                  s(:send,
                    s(:lvar, :req), :query)),
                s(:lvasgn, :d0,
                  s(:nil)),
                s(:lvasgn, :idx,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "N"),
                      s(:str, "M"),
                      s(:str, "S")), :each_with_index),
                  s(:args,
                    s(:arg, :q),
                    s(:arg, :i)),
                  s(:if,
                    s(:lvasgn, :d,
                      s(:send,
                        s(:lvar, :query), :delete,
                        s(:lvar, :q))),
                    s(:begin,
                      s(:or_asgn,
                        s(:lvasgn, :idx),
                        s(:lvar, :i)),
                      s(:or_asgn,
                        s(:lvasgn, :d0),
                        s(:lvar, :d))), nil)),
                s(:or_asgn,
                  s(:lvasgn, :d0),
                  s(:str, "A")),
                s(:or_asgn,
                  s(:lvasgn, :idx),
                  s(:int, 0)),
                s(:lvasgn, :d1,
                  s(:if,
                    s(:begin,
                      s(:send,
                        s(:lvar, :d0), :==,
                        s(:str, "A"))),
                    s(:str, "D"),
                    s(:str, "A"))),
                s(:if,
                  s(:send,
                    s(:lvar, :d0), :==,
                    s(:str, "A")),
                  s(:block,
                    s(:send,
                      s(:lvar, :list), :sort!),
                    s(:args,
                      s(:arg, :a),
                      s(:arg, :b)),
                    s(:send,
                      s(:send,
                        s(:lvar, :a), :[],
                        s(:lvar, :idx)), :<=>,
                      s(:send,
                        s(:lvar, :b), :[],
                        s(:lvar, :idx)))),
                  s(:block,
                    s(:send,
                      s(:lvar, :list), :sort!),
                    s(:args,
                      s(:arg, :a),
                      s(:arg, :b)),
                    s(:send,
                      s(:send,
                        s(:lvar, :b), :[],
                        s(:lvar, :idx)), :<=>,
                      s(:send,
                        s(:lvar, :a), :[],
                        s(:lvar, :idx))))),
                s(:lvasgn, :namewidth,
                  s(:send,
                    s(:lvar, :query), :[],
                    s(:str, "NameWidth"))),
                s(:if,
                  s(:send,
                    s(:lvar, :namewidth), :==,
                    s(:str, "*")),
                  s(:lvasgn, :namewidth,
                    s(:nil)),
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:lvar, :namewidth), :!),
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :namewidth,
                            s(:send,
                              s(:lvar, :namewidth), :to_i))), :<,
                        s(:int, 2))),
                    s(:lvasgn, :namewidth,
                      s(:int, 25)), nil)),
                s(:lvasgn, :query,
                  s(:block,
                    s(:send,
                      s(:lvar, :query), :inject,
                      s(:str, "")),
                    s(:args,
                      s(:arg, :s),
                      s(:mlhs,
                        s(:arg, :k),
                        s(:arg, :v))),
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :<<,
                        s(:str, "&")), :<<,
                      s(:send,
                        s(:const, nil, :HTMLUtils), :escape,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :k)),
                          s(:str, "="),
                          s(:begin,
                            s(:lvar, :v))))))),
                s(:lvasgn, :type,
                  s(:str, "text/html")),
                s(:case,
                  s(:lvasgn, :enc,
                    s(:send,
                      s(:const, nil, :Encoding), :find,
                      s(:str, "filesystem"))),
                  s(:when,
                    s(:const,
                      s(:const, nil, :Encoding), :US_ASCII),
                    s(:const,
                      s(:const, nil, :Encoding), :ASCII_8BIT), nil),
                  s(:send,
                    s(:lvar, :type), :<<,
                    s(:dstr,
                      s(:str, "; charset=\""),
                      s(:begin,
                        s(:send,
                          s(:lvar, :enc), :name)),
                      s(:str, "\"")))),
                s(:send,
                  s(:lvar, :res), :[]=,
                  s(:str, "content-type"),
                  s(:lvar, :type)),
                s(:lvasgn, :title,
                  s(:dstr,
                    s(:str, "Index of "),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :HTMLUtils), :escape,
                        s(:send,
                          s(:lvar, :req), :path))))),
                s(:send,
                  s(:lvar, :res), :body=,
                  s(:dstr,
                    s(:str, "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n"),
                    s(:str, "<HTML>\n"),
                    s(:str, "  <HEAD>\n"),
                    s(:str, "    <TITLE>"),
                    s(:begin,
                      s(:lvar, :title)),
                    s(:str, "</TITLE>\n"),
                    s(:str, "    <style type=\"text/css\">\n"),
                    s(:str, "    <!--\n"),
                    s(:str, "    .name, .mtime { text-align: left; }\n"),
                    s(:str, "    .size { text-align: right; }\n"),
                    s(:str, "    td { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; }\n"),
                    s(:str, "    table { border-collapse: collapse; }\n"),
                    s(:str, "    tr th { border-bottom: 2px groove; }\n"),
                    s(:str, "    //-->\n"),
                    s(:str, "    </style>\n"),
                    s(:str, "  </HEAD>\n"),
                    s(:str, "  <BODY>\n"),
                    s(:str, "    <H1>"),
                    s(:begin,
                      s(:lvar, :title)),
                    s(:str, "</H1>\n"))),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:str, "<TABLE width=\"100%\"><THEAD><TR>\n")),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:dstr,
                    s(:str, "<TH class=\"name\"><A HREF=\"?N="),
                    s(:begin,
                      s(:lvar, :d1)),
                    s(:begin,
                      s(:lvar, :query)),
                    s(:str, "\">Name</A></TH>"))),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:dstr,
                    s(:str, "<TH class=\"mtime\"><A HREF=\"?M="),
                    s(:begin,
                      s(:lvar, :d1)),
                    s(:begin,
                      s(:lvar, :query)),
                    s(:str, "\">Last modified</A></TH>"))),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:dstr,
                    s(:str, "<TH class=\"size\"><A HREF=\"?S="),
                    s(:begin,
                      s(:lvar, :d1)),
                    s(:begin,
                      s(:lvar, :query)),
                    s(:str, "\">Size</A></TH>\n"))),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:str, "</TR></THEAD>\n")),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:str, "<TBODY>\n")),
                s(:send,
                  s(:lvar, :query), :sub!,
                  s(:regexp,
                    s(:str, "\\A&"),
                    s(:regopt)),
                  s(:str, "?")),
                s(:send,
                  s(:lvar, :list), :unshift,
                  s(:array,
                    s(:str, ".."),
                    s(:send,
                      s(:const, nil, :File), :mtime,
                      s(:send,
                        s(:lvar, :local_path), :+,
                        s(:str, "/.."))),
                    s(:int, -1))),
                s(:block,
                  s(:send,
                    s(:lvar, :list), :each),
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :time),
                    s(:arg, :size)),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :name), :==,
                        s(:str, "..")),
                      s(:lvasgn, :dname,
                        s(:str, "Parent Directory")),
                      s(:if,
                        s(:and,
                          s(:lvar, :namewidth),
                          s(:send,
                            s(:send,
                              s(:lvar, :name), :size), :>,
                            s(:lvar, :namewidth))),
                        s(:lvasgn, :dname,
                          s(:send,
                            s(:send,
                              s(:lvar, :name), :[],
                              s(:erange,
                                s(:int, 0),
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :namewidth), :-,
                                    s(:int, 2))))), :<<,
                            s(:str, ".."))),
                        s(:lvasgn, :dname,
                          s(:lvar, :name)))),
                    s(:lvasgn, :s,
                      s(:dstr,
                        s(:str, "<TR><TD class=\"name\"><A HREF=\""),
                        s(:begin,
                          s(:send,
                            s(:const, nil, :HTTPUtils), :escape,
                            s(:lvar, :name))),
                        s(:begin,
                          s(:if,
                            s(:send,
                              s(:lvar, :name), :end_with?,
                              s(:str, "/")),
                            s(:lvar, :query), nil)),
                        s(:str, "\">"),
                        s(:begin,
                          s(:send,
                            s(:const, nil, :HTMLUtils), :escape,
                            s(:lvar, :dname))),
                        s(:str, "</A></TD>"))),
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :<<,
                          s(:str, "<TD class=\"mtime\">")), :<<,
                        s(:begin,
                          s(:if,
                            s(:lvar, :time),
                            s(:send,
                              s(:lvar, :time), :strftime,
                              s(:str, "%Y/%m/%d %H:%M")),
                            s(:str, "")))), :<<,
                      s(:str, "</TD>")),
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :<<,
                          s(:str, "<TD class=\"size\">")), :<<,
                        s(:begin,
                          s(:if,
                            s(:send,
                              s(:lvar, :size), :>=,
                              s(:int, 0)),
                            s(:send,
                              s(:lvar, :size), :to_s),
                            s(:str, "-")))), :<<,
                      s(:str, "</TD></TR>\n")),
                    s(:send,
                      s(:send,
                        s(:lvar, :res), :body), :<<,
                      s(:lvar, :s)))),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:str, "</TBODY></TABLE>")),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:str, "<HR>")),
                s(:send,
                  s(:send,
                    s(:lvar, :res), :body), :<<,
                  s(:dstr,
                    s(:str, "    <ADDRESS>\n"),
                    s(:str, "     "),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :HTMLUtils), :escape,
                        s(:send,
                          s(:ivar, :@config), :[],
                          s(:sym, :ServerSoftware)))),
                    s(:str, "<BR>\n"),
                    s(:str, "     at "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :host)),
                    s(:str, ":"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :port)),
                    s(:str, "\n"),
                    s(:str, "    </ADDRESS>\n"),
                    s(:str, "  </BODY>\n"),
                    s(:str, "</HTML>\n")))))))))))
