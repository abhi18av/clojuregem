s(:begin,
  s(:send, nil, :require,
    s(:str, "io/wait")),
  s(:send, nil, :require,
    s(:str, "webrick/server")),
  s(:send, nil, :require,
    s(:str, "webrick/httputils")),
  s(:send, nil, :require,
    s(:str, "webrick/httpstatus")),
  s(:send, nil, :require,
    s(:str, "webrick/httprequest")),
  s(:send, nil, :require,
    s(:str, "webrick/httpresponse")),
  s(:send, nil, :require,
    s(:str, "webrick/httpservlet")),
  s(:send, nil, :require,
    s(:str, "webrick/accesslog")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:begin,
      s(:class,
        s(:const, nil, :HTTPServerError),
        s(:const, nil, :ServerError), nil),
      s(:class,
        s(:const, nil, :HTTPServer),
        s(:const,
          s(:const,
            s(:cbase), :WEBrick), :GenericServer),
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:optarg, :config,
                s(:hash)),
              s(:optarg, :default,
                s(:const,
                  s(:const, nil, :Config), :HTTP))),
            s(:begin,
              s(:super,
                s(:lvar, :config),
                s(:lvar, :default)),
              s(:ivasgn, :@http_version,
                s(:send,
                  s(:const, nil, :HTTPVersion), :convert,
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :HTTPVersion)))),
              s(:ivasgn, :@mount_tab,
                s(:send,
                  s(:const, nil, :MountTable), :new)),
              s(:if,
                s(:send,
                  s(:ivar, :@config), :[],
                  s(:sym, :DocumentRoot)),
                s(:send, nil, :mount,
                  s(:str, "/"),
                  s(:const,
                    s(:const, nil, :HTTPServlet), :FileHandler),
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :DocumentRoot)),
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :DocumentRootOptions))), nil),
              s(:if,
                s(:send,
                  s(:ivar, :@config), :[],
                  s(:sym, :AccessLog)), nil,
                s(:send,
                  s(:ivar, :@config), :[]=,
                  s(:sym, :AccessLog),
                  s(:array,
                    s(:array,
                      s(:gvar, :$stderr),
                      s(:const,
                        s(:const, nil, :AccessLog), :COMMON_LOG_FORMAT)),
                    s(:array,
                      s(:gvar, :$stderr),
                      s(:const,
                        s(:const, nil, :AccessLog), :REFERER_LOG_FORMAT))))),
              s(:ivasgn, :@virtual_hosts,
                s(:send,
                  s(:const, nil, :Array), :new)))),
          s(:def, :run,
            s(:args,
              s(:arg, :sock)),
            s(:while,
              s(:true),
              s(:begin,
                s(:lvasgn, :res,
                  s(:send,
                    s(:const, nil, :HTTPResponse), :new,
                    s(:ivar, :@config))),
                s(:lvasgn, :req,
                  s(:send,
                    s(:const, nil, :HTTPRequest), :new,
                    s(:ivar, :@config))),
                s(:lvasgn, :server,
                  s(:self)),
                s(:kwbegin,
                  s(:ensure,
                    s(:rescue,
                      s(:begin,
                        s(:lvasgn, :timeout,
                          s(:send,
                            s(:ivar, :@config), :[],
                            s(:sym, :RequestTimeout))),
                        s(:while,
                          s(:send,
                            s(:lvar, :timeout), :>,
                            s(:int, 0)),
                          s(:begin,
                            s(:if,
                              s(:send,
                                s(:send,
                                  s(:lvar, :sock), :to_io), :wait_readable,
                                s(:float, 0.5)),
                              s(:break), nil),
                            s(:if,
                              s(:send,
                                s(:ivar, :@status), :!=,
                                s(:sym, :Running)),
                              s(:break), nil),
                            s(:op_asgn,
                              s(:lvasgn, :timeout), :-,
                              s(:float, 0.5)))),
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:lvar, :timeout), :<=,
                              s(:int, 0)),
                            s(:send,
                              s(:ivar, :@status), :!=,
                              s(:sym, :Running))),
                          s(:send, nil, :raise,
                            s(:const,
                              s(:const, nil, :HTTPStatus), :EOFError)), nil),
                        s(:if,
                          s(:send,
                            s(:lvar, :sock), :eof?),
                          s(:send, nil, :raise,
                            s(:const,
                              s(:const, nil, :HTTPStatus), :EOFError)), nil),
                        s(:send,
                          s(:lvar, :req), :parse,
                          s(:lvar, :sock)),
                        s(:send,
                          s(:lvar, :res), :request_method=,
                          s(:send,
                            s(:lvar, :req), :request_method)),
                        s(:send,
                          s(:lvar, :res), :request_uri=,
                          s(:send,
                            s(:lvar, :req), :request_uri)),
                        s(:send,
                          s(:lvar, :res), :request_http_version=,
                          s(:send,
                            s(:lvar, :req), :http_version)),
                        s(:send,
                          s(:lvar, :res), :keep_alive=,
                          s(:send,
                            s(:lvar, :req), :keep_alive?)),
                        s(:lvasgn, :server,
                          s(:or,
                            s(:send, nil, :lookup_server,
                              s(:lvar, :req)),
                            s(:self))),
                        s(:if,
                          s(:lvasgn, :callback,
                            s(:send,
                              s(:lvar, :server), :[],
                              s(:sym, :RequestCallback))),
                          s(:send,
                            s(:lvar, :callback), :call,
                            s(:lvar, :req),
                            s(:lvar, :res)),
                          s(:if,
                            s(:lvasgn, :callback,
                              s(:send,
                                s(:lvar, :server), :[],
                                s(:sym, :RequestHandler))),
                            s(:begin,
                              s(:lvasgn, :msg,
                                s(:str, ":RequestHandler is deprecated, please use :RequestCallback")),
                              s(:send,
                                s(:ivar, :@logger), :warn,
                                s(:lvar, :msg)),
                              s(:send,
                                s(:lvar, :callback), :call,
                                s(:lvar, :req),
                                s(:lvar, :res))), nil)),
                        s(:send,
                          s(:lvar, :server), :service,
                          s(:lvar, :req),
                          s(:lvar, :res))),
                      s(:resbody,
                        s(:array,
                          s(:const,
                            s(:const, nil, :HTTPStatus), :EOFError),
                          s(:const,
                            s(:const, nil, :HTTPStatus), :RequestTimeout)),
                        s(:lvasgn, :ex),
                        s(:send,
                          s(:lvar, :res), :set_error,
                          s(:lvar, :ex))),
                      s(:resbody,
                        s(:array,
                          s(:const,
                            s(:const, nil, :HTTPStatus), :Error)),
                        s(:lvasgn, :ex),
                        s(:begin,
                          s(:send,
                            s(:ivar, :@logger), :error,
                            s(:send,
                              s(:lvar, :ex), :message)),
                          s(:send,
                            s(:lvar, :res), :set_error,
                            s(:lvar, :ex)))),
                      s(:resbody,
                        s(:array,
                          s(:const,
                            s(:const, nil, :HTTPStatus), :Status)),
                        s(:lvasgn, :ex),
                        s(:send,
                          s(:lvar, :res), :status=,
                          s(:send,
                            s(:lvar, :ex), :code))),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :StandardError)),
                        s(:lvasgn, :ex),
                        s(:begin,
                          s(:send,
                            s(:ivar, :@logger), :error,
                            s(:lvar, :ex)),
                          s(:send,
                            s(:lvar, :res), :set_error,
                            s(:lvar, :ex),
                            s(:true)))), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :req), :request_line),
                      s(:begin,
                        s(:if,
                          s(:and,
                            s(:send,
                              s(:lvar, :req), :keep_alive?),
                            s(:send,
                              s(:lvar, :res), :keep_alive?)),
                          s(:send,
                            s(:lvar, :req), :fixup), nil),
                        s(:send,
                          s(:lvar, :res), :send_response,
                          s(:lvar, :sock)),
                        s(:send,
                          s(:lvar, :server), :access_log,
                          s(:ivar, :@config),
                          s(:lvar, :req),
                          s(:lvar, :res))), nil))),
                s(:if,
                  s(:send,
                    s(:ivar, :@http_version), :<,
                    s(:str, "1.1")),
                  s(:break), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :req), :keep_alive?), nil,
                  s(:break)),
                s(:if,
                  s(:send,
                    s(:lvar, :res), :keep_alive?), nil,
                  s(:break))))),
          s(:def, :service,
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :req), :unparsed_uri), :==,
                  s(:str, "*")),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :req), :request_method), :==,
                      s(:str, "OPTIONS")),
                    s(:begin,
                      s(:send, nil, :do_OPTIONS,
                        s(:lvar, :req),
                        s(:lvar, :res)),
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const, nil, :HTTPStatus), :OK))), nil),
                  s(:send, nil, :raise,
                    s(:const,
                      s(:const, nil, :HTTPStatus), :NotFound),
                    s(:dstr,
                      s(:str, "`"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :unparsed_uri)),
                      s(:str, "' not found.")))), nil),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :servlet),
                  s(:lvasgn, :options),
                  s(:lvasgn, :script_name),
                  s(:lvasgn, :path_info)),
                s(:send, nil, :search_servlet,
                  s(:send,
                    s(:lvar, :req), :path))),
              s(:if,
                s(:lvar, :servlet), nil,
                s(:send, nil, :raise,
                  s(:const,
                    s(:const, nil, :HTTPStatus), :NotFound),
                  s(:dstr,
                    s(:str, "`"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :path)),
                    s(:str, "' not found.")))),
              s(:send,
                s(:lvar, :req), :script_name=,
                s(:lvar, :script_name)),
              s(:send,
                s(:lvar, :req), :path_info=,
                s(:lvar, :path_info)),
              s(:lvasgn, :si,
                s(:send,
                  s(:lvar, :servlet), :get_instance,
                  s(:self),
                  s(:splat,
                    s(:lvar, :options)))),
              s(:send,
                s(:ivar, :@logger), :debug,
                s(:send, nil, :format,
                  s(:str, "%s is invoked."),
                  s(:send,
                    s(:send,
                      s(:lvar, :si), :class), :name))),
              s(:send,
                s(:lvar, :si), :service,
                s(:lvar, :req),
                s(:lvar, :res)))),
          s(:def, :do_OPTIONS,
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "allow"),
              s(:str, "GET,HEAD,POST,OPTIONS"))),
          s(:def, :mount,
            s(:args,
              s(:arg, :dir),
              s(:arg, :servlet),
              s(:restarg, :options)),
            s(:begin,
              s(:send,
                s(:ivar, :@logger), :debug,
                s(:send, nil, :sprintf,
                  s(:str, "%s is mounted on %s."),
                  s(:send,
                    s(:lvar, :servlet), :inspect),
                  s(:lvar, :dir))),
              s(:send,
                s(:ivar, :@mount_tab), :[]=,
                s(:lvar, :dir),
                s(:array,
                  s(:lvar, :servlet),
                  s(:lvar, :options))))),
          s(:def, :mount_proc,
            s(:args,
              s(:arg, :dir),
              s(:optarg, :proc,
                s(:nil)),
              s(:blockarg, :block)),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :proc),
                s(:lvar, :block)),
              s(:if,
                s(:lvar, :proc), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :HTTPServerError),
                  s(:str, "must pass a proc or block"))),
              s(:send, nil, :mount,
                s(:lvar, :dir),
                s(:send,
                  s(:const,
                    s(:const, nil, :HTTPServlet), :ProcHandler), :new,
                  s(:lvar, :proc))))),
          s(:def, :unmount,
            s(:args,
              s(:arg, :dir)),
            s(:begin,
              s(:send,
                s(:ivar, :@logger), :debug,
                s(:send, nil, :sprintf,
                  s(:str, "unmount %s."),
                  s(:lvar, :dir))),
              s(:send,
                s(:ivar, :@mount_tab), :delete,
                s(:lvar, :dir)))),
          s(:alias,
            s(:sym, :umount),
            s(:sym, :unmount)),
          s(:def, :search_servlet,
            s(:args,
              s(:arg, :path)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :script_name),
                  s(:lvasgn, :path_info)),
                s(:send,
                  s(:ivar, :@mount_tab), :scan,
                  s(:lvar, :path))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :servlet),
                  s(:lvasgn, :options)),
                s(:send,
                  s(:ivar, :@mount_tab), :[],
                  s(:lvar, :script_name))),
              s(:if,
                s(:lvar, :servlet),
                s(:array,
                  s(:lvar, :servlet),
                  s(:lvar, :options),
                  s(:lvar, :script_name),
                  s(:lvar, :path_info)), nil))),
          s(:def, :virtual_host,
            s(:args,
              s(:arg, :server)),
            s(:begin,
              s(:send,
                s(:ivar, :@virtual_hosts), :<<,
                s(:lvar, :server)),
              s(:ivasgn, :@virtual_hosts,
                s(:block,
                  s(:send,
                    s(:ivar, :@virtual_hosts), :sort_by),
                  s(:args,
                    s(:arg, :s)),
                  s(:begin,
                    s(:lvasgn, :num,
                      s(:int, 0)),
                    s(:if,
                      s(:send,
                        s(:lvar, :s), :[],
                        s(:sym, :BindAddress)),
                      s(:op_asgn,
                        s(:lvasgn, :num), :-,
                        s(:int, 4)), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :s), :[],
                        s(:sym, :Port)),
                      s(:op_asgn,
                        s(:lvasgn, :num), :-,
                        s(:int, 2)), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :s), :[],
                        s(:sym, :ServerName)),
                      s(:op_asgn,
                        s(:lvasgn, :num), :-,
                        s(:int, 1)), nil),
                    s(:lvar, :num)))))),
          s(:def, :lookup_server,
            s(:args,
              s(:arg, :req)),
            s(:block,
              s(:send,
                s(:ivar, :@virtual_hosts), :find),
              s(:args,
                s(:arg, :s)),
              s(:and,
                s(:and,
                  s(:begin,
                    s(:or,
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :[],
                          s(:sym, :BindAddress)), :nil?),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :req), :addr), :[],
                          s(:int, 3)), :==,
                        s(:send,
                          s(:lvar, :s), :[],
                          s(:sym, :BindAddress))))),
                  s(:begin,
                    s(:or,
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :[],
                          s(:sym, :Port)), :nil?),
                      s(:send,
                        s(:send,
                          s(:lvar, :req), :port), :==,
                        s(:send,
                          s(:lvar, :s), :[],
                          s(:sym, :Port)))))),
                s(:begin,
                  s(:or,
                    s(:begin,
                      s(:or,
                        s(:send,
                          s(:send,
                            s(:lvar, :s), :[],
                            s(:sym, :ServerName)), :nil?),
                        s(:send,
                          s(:send,
                            s(:lvar, :req), :host), :==,
                          s(:send,
                            s(:lvar, :s), :[],
                            s(:sym, :ServerName))))),
                    s(:begin,
                      s(:and,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :s), :[],
                              s(:sym, :ServerAlias)), :nil?), :!),
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:lvar, :s), :[],
                              s(:sym, :ServerAlias)), :find),
                          s(:args,
                            s(:arg, :h)),
                          s(:send,
                            s(:lvar, :h), :===,
                            s(:send,
                              s(:lvar, :req), :host)))))))))),
          s(:def, :access_log,
            s(:args,
              s(:arg, :config),
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:lvasgn, :param,
                s(:send,
                  s(:const, nil, :AccessLog), :setup_params,
                  s(:lvar, :config),
                  s(:lvar, :req),
                  s(:lvar, :res))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :AccessLog)), :each),
                s(:args,
                  s(:arg, :logger),
                  s(:arg, :fmt)),
                s(:send,
                  s(:lvar, :logger), :<<,
                  s(:send,
                    s(:const, nil, :AccessLog), :format,
                    s(:send,
                      s(:lvar, :fmt), :+,
                      s(:str, "\n")),
                    s(:lvar, :param)))))),
          s(:class,
            s(:const, nil, :MountTable), nil,
            s(:begin,
              s(:def, :initialize,
                s(:args),
                s(:begin,
                  s(:ivasgn, :@tab,
                    s(:send,
                      s(:const, nil, :Hash), :new)),
                  s(:send, nil, :compile))),
              s(:def, :[],
                s(:args,
                  s(:arg, :dir)),
                s(:begin,
                  s(:lvasgn, :dir,
                    s(:send, nil, :normalize,
                      s(:lvar, :dir))),
                  s(:send,
                    s(:ivar, :@tab), :[],
                    s(:lvar, :dir)))),
              s(:def, :[]=,
                s(:args,
                  s(:arg, :dir),
                  s(:arg, :val)),
                s(:begin,
                  s(:lvasgn, :dir,
                    s(:send, nil, :normalize,
                      s(:lvar, :dir))),
                  s(:send,
                    s(:ivar, :@tab), :[]=,
                    s(:lvar, :dir),
                    s(:lvar, :val)),
                  s(:send, nil, :compile),
                  s(:lvar, :val))),
              s(:def, :delete,
                s(:args,
                  s(:arg, :dir)),
                s(:begin,
                  s(:lvasgn, :dir,
                    s(:send, nil, :normalize,
                      s(:lvar, :dir))),
                  s(:lvasgn, :res,
                    s(:send,
                      s(:ivar, :@tab), :delete,
                      s(:lvar, :dir))),
                  s(:send, nil, :compile),
                  s(:lvar, :res))),
              s(:def, :scan,
                s(:args,
                  s(:arg, :path)),
                s(:begin,
                  s(:send,
                    s(:ivar, :@scanner), :=~,
                    s(:lvar, :path)),
                  s(:array,
                    s(:back_ref, :$&),
                    s(:back_ref, :$')))),
              s(:send, nil, :private),
              s(:def, :compile,
                s(:args),
                s(:begin,
                  s(:lvasgn, :k,
                    s(:send,
                      s(:ivar, :@tab), :keys)),
                  s(:send,
                    s(:lvar, :k), :sort!),
                  s(:send,
                    s(:lvar, :k), :reverse!),
                  s(:block,
                    s(:send,
                      s(:lvar, :k), :collect!),
                    s(:args,
                      s(:arg, :path)),
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:lvar, :path))),
                  s(:ivasgn, :@scanner,
                    s(:send,
                      s(:const, nil, :Regexp), :new,
                      s(:send,
                        s(:send,
                          s(:str, "^("), :+,
                          s(:send,
                            s(:lvar, :k), :join,
                            s(:str, "|"))), :+,
                        s(:str, ")(?=/|$)")))))),
              s(:def, :normalize,
                s(:args,
                  s(:arg, :dir)),
                s(:begin,
                  s(:lvasgn, :ret,
                    s(:if,
                      s(:lvar, :dir),
                      s(:send,
                        s(:lvar, :dir), :dup),
                      s(:str, ""))),
                  s(:send,
                    s(:lvar, :ret), :sub!,
                    s(:regexp,
                      s(:str, "/+$"),
                      s(:regopt)),
                    s(:str, "")),
                  s(:lvar, :ret))))))))))
