s(:begin,
  s(:send, nil, :require,
    s(:str, "time")),
  s(:send, nil, :require,
    s(:str, "webrick/httpversion")),
  s(:send, nil, :require,
    s(:str, "webrick/htmlutils")),
  s(:send, nil, :require,
    s(:str, "webrick/httputils")),
  s(:send, nil, :require,
    s(:str, "webrick/httpstatus")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:class,
      s(:const, nil, :HTTPResponse), nil,
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :http_version)),
        s(:send, nil, :attr_reader,
          s(:sym, :status)),
        s(:send, nil, :attr_reader,
          s(:sym, :header)),
        s(:send, nil, :attr_reader,
          s(:sym, :cookies)),
        s(:send, nil, :attr_accessor,
          s(:sym, :reason_phrase)),
        s(:send, nil, :attr_accessor,
          s(:sym, :body)),
        s(:send, nil, :attr_accessor,
          s(:sym, :request_method)),
        s(:send, nil, :attr_accessor,
          s(:sym, :request_uri)),
        s(:send, nil, :attr_accessor,
          s(:sym, :request_http_version)),
        s(:send, nil, :attr_accessor,
          s(:sym, :filename)),
        s(:send, nil, :attr_accessor,
          s(:sym, :keep_alive)),
        s(:send, nil, :attr_reader,
          s(:sym, :config)),
        s(:send, nil, :attr_reader,
          s(:sym, :sent_size)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :config)),
          s(:begin,
            s(:ivasgn, :@config,
              s(:lvar, :config)),
            s(:ivasgn, :@buffer_size,
              s(:send,
                s(:lvar, :config), :[],
                s(:sym, :OutputBufferSize))),
            s(:ivasgn, :@logger,
              s(:send,
                s(:lvar, :config), :[],
                s(:sym, :Logger))),
            s(:ivasgn, :@header,
              s(:send,
                s(:const, nil, :Hash), :new)),
            s(:ivasgn, :@status,
              s(:const,
                s(:const, nil, :HTTPStatus), :RC_OK)),
            s(:ivasgn, :@reason_phrase,
              s(:nil)),
            s(:ivasgn, :@http_version,
              s(:send,
                s(:const, nil, :HTTPVersion), :convert,
                s(:send,
                  s(:ivar, :@config), :[],
                  s(:sym, :HTTPVersion)))),
            s(:ivasgn, :@body,
              s(:str, "")),
            s(:ivasgn, :@keep_alive,
              s(:true)),
            s(:ivasgn, :@cookies,
              s(:array)),
            s(:ivasgn, :@request_method,
              s(:nil)),
            s(:ivasgn, :@request_uri,
              s(:nil)),
            s(:ivasgn, :@request_http_version,
              s(:ivar, :@http_version)),
            s(:ivasgn, :@chunked,
              s(:false)),
            s(:ivasgn, :@filename,
              s(:nil)),
            s(:ivasgn, :@sent_size,
              s(:int, 0)))),
        s(:def, :status_line,
          s(:args),
          s(:dstr,
            s(:str, "HTTP/"),
            s(:ivar, :@http_version),
            s(:str, " "),
            s(:ivar, :@status),
            s(:str, " "),
            s(:ivar, :@reason_phrase),
            s(:str, " "),
            s(:begin,
              s(:const, nil, :CRLF)))),
        s(:def, :status=,
          s(:args,
            s(:arg, :status)),
          s(:begin,
            s(:ivasgn, :@status,
              s(:lvar, :status)),
            s(:ivasgn, :@reason_phrase,
              s(:send,
                s(:const, nil, :HTTPStatus), :reason_phrase,
                s(:lvar, :status))))),
        s(:def, :[],
          s(:args,
            s(:arg, :field)),
          s(:send,
            s(:ivar, :@header), :[],
            s(:send,
              s(:lvar, :field), :downcase))),
        s(:def, :[]=,
          s(:args,
            s(:arg, :field),
            s(:arg, :value)),
          s(:send,
            s(:ivar, :@header), :[]=,
            s(:send,
              s(:lvar, :field), :downcase),
            s(:send,
              s(:lvar, :value), :to_s))),
        s(:def, :content_length,
          s(:args),
          s(:if,
            s(:lvasgn, :len,
              s(:send,
                s(:self), :[],
                s(:str, "content-length"))),
            s(:return,
              s(:send, nil, :Integer,
                s(:lvar, :len))), nil)),
        s(:def, :content_length=,
          s(:args,
            s(:arg, :len)),
          s(:send,
            s(:self), :[]=,
            s(:str, "content-length"),
            s(:send,
              s(:lvar, :len), :to_s))),
        s(:def, :content_type,
          s(:args),
          s(:send,
            s(:self), :[],
            s(:str, "content-type"))),
        s(:def, :content_type=,
          s(:args,
            s(:arg, :type)),
          s(:send,
            s(:self), :[]=,
            s(:str, "content-type"),
            s(:lvar, :type))),
        s(:def, :each,
          s(:args),
          s(:block,
            s(:send,
              s(:ivar, :@header), :each),
            s(:args,
              s(:arg, :field),
              s(:arg, :value)),
            s(:yield,
              s(:lvar, :field),
              s(:lvar, :value)))),
        s(:def, :chunked?,
          s(:args),
          s(:ivar, :@chunked)),
        s(:def, :chunked=,
          s(:args,
            s(:arg, :val)),
          s(:ivasgn, :@chunked,
            s(:if,
              s(:lvar, :val),
              s(:true),
              s(:false)))),
        s(:def, :keep_alive?,
          s(:args),
          s(:ivar, :@keep_alive)),
        s(:def, :send_response,
          s(:args,
            s(:arg, :socket)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send, nil, :setup_header),
                s(:send, nil, :send_header,
                  s(:lvar, :socket)),
                s(:send, nil, :send_body,
                  s(:lvar, :socket))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :EPIPE),
                  s(:const,
                    s(:const, nil, :Errno), :ECONNRESET),
                  s(:const,
                    s(:const, nil, :Errno), :ENOTCONN)),
                s(:lvasgn, :ex),
                s(:begin,
                  s(:send,
                    s(:ivar, :@logger), :debug,
                    s(:lvar, :ex)),
                  s(:ivasgn, :@keep_alive,
                    s(:false)))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :Exception)),
                s(:lvasgn, :ex),
                s(:begin,
                  s(:send,
                    s(:ivar, :@logger), :error,
                    s(:lvar, :ex)),
                  s(:ivasgn, :@keep_alive,
                    s(:false)))), nil))),
        s(:def, :setup_header,
          s(:args),
          s(:begin,
            s(:or_asgn,
              s(:ivasgn, :@reason_phrase),
              s(:send,
                s(:const, nil, :HTTPStatus), :reason_phrase,
                s(:ivar, :@status))),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@header), :[],
                s(:str, "server")),
              s(:send,
                s(:ivar, :@config), :[],
                s(:sym, :ServerSoftware))),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@header), :[],
                s(:str, "date")),
              s(:send,
                s(:send,
                  s(:const, nil, :Time), :now), :httpdate)),
            s(:if,
              s(:send,
                s(:ivar, :@request_http_version), :<,
                s(:str, "1.0")),
              s(:begin,
                s(:ivasgn, :@http_version,
                  s(:send,
                    s(:const, nil, :HTTPVersion), :new,
                    s(:str, "0.9"))),
                s(:ivasgn, :@keep_alive,
                  s(:false))), nil),
            s(:if,
              s(:send,
                s(:ivar, :@request_http_version), :<,
                s(:str, "1.1")),
              s(:if,
                s(:send, nil, :chunked?),
                s(:begin,
                  s(:ivasgn, :@chunked,
                    s(:false)),
                  s(:lvasgn, :ver,
                    s(:send,
                      s(:ivar, :@request_http_version), :to_s)),
                  s(:lvasgn, :msg,
                    s(:dstr,
                      s(:str, "chunked is set for an HTTP/"),
                      s(:begin,
                        s(:lvar, :ver)),
                      s(:str, " request. (ignored)"))),
                  s(:send,
                    s(:ivar, :@logger), :warn,
                    s(:lvar, :msg))), nil), nil),
            s(:if,
              s(:or,
                s(:or,
                  s(:send,
                    s(:ivar, :@status), :==,
                    s(:int, 304)),
                  s(:send,
                    s(:ivar, :@status), :==,
                    s(:int, 204))),
                s(:send,
                  s(:const, nil, :HTTPStatus), :info?,
                  s(:ivar, :@status))),
              s(:begin,
                s(:send,
                  s(:ivar, :@header), :delete,
                  s(:str, "content-length")),
                s(:ivasgn, :@body,
                  s(:str, ""))),
              s(:if,
                s(:send, nil, :chunked?),
                s(:begin,
                  s(:send,
                    s(:ivar, :@header), :[]=,
                    s(:str, "transfer-encoding"),
                    s(:str, "chunked")),
                  s(:send,
                    s(:ivar, :@header), :delete,
                    s(:str, "content-length"))),
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "^multipart/byteranges"),
                      s(:regopt)),
                    s(:send,
                      s(:ivar, :@header), :[],
                      s(:str, "content-type"))),
                  s(:send,
                    s(:ivar, :@header), :delete,
                    s(:str, "content-length")),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:ivar, :@header), :[],
                        s(:str, "content-length")), :nil?),
                    s(:if,
                      s(:send,
                        s(:ivar, :@body), :is_a?,
                        s(:const, nil, :IO)), nil,
                      s(:send,
                        s(:ivar, :@header), :[]=,
                        s(:str, "content-length"),
                        s(:if,
                          s(:ivar, :@body),
                          s(:send,
                            s(:ivar, :@body), :bytesize),
                          s(:int, 0)))), nil)))),
            s(:if,
              s(:send,
                s(:send,
                  s(:ivar, :@header), :[],
                  s(:str, "connection")), :==,
                s(:str, "close")),
              s(:ivasgn, :@keep_alive,
                s(:false)),
              s(:if,
                s(:send, nil, :keep_alive?),
                s(:if,
                  s(:or,
                    s(:or,
                      s(:or,
                        s(:or,
                          s(:send, nil, :chunked?),
                          s(:send,
                            s(:ivar, :@header), :[],
                            s(:str, "content-length"))),
                        s(:send,
                          s(:ivar, :@status), :==,
                          s(:int, 304))),
                      s(:send,
                        s(:ivar, :@status), :==,
                        s(:int, 204))),
                    s(:send,
                      s(:const, nil, :HTTPStatus), :info?,
                      s(:ivar, :@status))),
                  s(:send,
                    s(:ivar, :@header), :[]=,
                    s(:str, "connection"),
                    s(:str, "Keep-Alive")),
                  s(:begin,
                    s(:lvasgn, :msg,
                      s(:str, "Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true")),
                    s(:send,
                      s(:ivar, :@logger), :warn,
                      s(:lvar, :msg)),
                    s(:send,
                      s(:ivar, :@header), :[]=,
                      s(:str, "connection"),
                      s(:str, "close")),
                    s(:ivasgn, :@keep_alive,
                      s(:false)))),
                s(:send,
                  s(:ivar, :@header), :[]=,
                  s(:str, "connection"),
                  s(:str, "close")))),
            s(:if,
              s(:lvasgn, :location,
                s(:send,
                  s(:ivar, :@header), :[],
                  s(:str, "location"))),
              s(:if,
                s(:ivar, :@request_uri),
                s(:send,
                  s(:ivar, :@header), :[]=,
                  s(:str, "location"),
                  s(:send,
                    s(:ivar, :@request_uri), :merge,
                    s(:lvar, :location))), nil), nil))),
        s(:def, :send_header,
          s(:args,
            s(:arg, :socket)),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@http_version), :major), :>,
              s(:int, 0)),
            s(:begin,
              s(:lvasgn, :data,
                s(:send, nil, :status_line)),
              s(:block,
                s(:send,
                  s(:ivar, :@header), :each),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :value)),
                s(:begin,
                  s(:lvasgn, :tmp,
                    s(:block,
                      s(:send,
                        s(:lvar, :key), :gsub,
                        s(:regexp,
                          s(:str, "\\bwww|^te$|\\b\\w"),
                          s(:regopt))),
                      s(:args),
                      s(:send,
                        s(:back_ref, :$&), :upcase))),
                  s(:send,
                    s(:send,
                      s(:lvar, :data), :<<,
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :tmp)),
                        s(:str, ": "),
                        s(:begin,
                          s(:lvar, :value)))), :<<,
                    s(:const, nil, :CRLF)))),
              s(:block,
                s(:send,
                  s(:ivar, :@cookies), :each),
                s(:args,
                  s(:arg, :cookie)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :data), :<<,
                      s(:str, "Set-Cookie: ")), :<<,
                    s(:send,
                      s(:lvar, :cookie), :to_s)), :<<,
                  s(:const, nil, :CRLF))),
              s(:send,
                s(:lvar, :data), :<<,
                s(:const, nil, :CRLF)),
              s(:send, nil, :_write_data,
                s(:lvar, :socket),
                s(:lvar, :data))), nil)),
        s(:def, :send_body,
          s(:args,
            s(:arg, :socket)),
          s(:if,
            s(:send,
              s(:ivar, :@body), :respond_to?,
              s(:sym, :readpartial)),
            s(:send, nil, :send_body_io,
              s(:lvar, :socket)),
            s(:send, nil, :send_body_string,
              s(:lvar, :socket)))),
        s(:def, :to_s,
          s(:args),
          s(:begin,
            s(:lvasgn, :ret,
              s(:str, "")),
            s(:send, nil, :send_response,
              s(:lvar, :ret)),
            s(:lvar, :ret))),
        s(:def, :set_redirect,
          s(:args,
            s(:arg, :status),
            s(:arg, :url)),
          s(:begin,
            s(:ivasgn, :@body,
              s(:dstr,
                s(:str, "<HTML><A HREF=\""),
                s(:begin,
                  s(:lvar, :url)),
                s(:str, "\">"),
                s(:begin,
                  s(:lvar, :url)),
                s(:str, "</A>.</HTML>\n"))),
            s(:send,
              s(:ivar, :@header), :[]=,
              s(:str, "location"),
              s(:send,
                s(:lvar, :url), :to_s)),
            s(:send, nil, :raise,
              s(:lvar, :status)))),
        s(:def, :set_error,
          s(:args,
            s(:arg, :ex),
            s(:optarg, :backtrace,
              s(:false))),
          s(:begin,
            s(:case,
              s(:lvar, :ex),
              s(:when,
                s(:const,
                  s(:const, nil, :HTTPStatus), :Status),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:const, nil, :HTTPStatus), :error?,
                      s(:send,
                        s(:lvar, :ex), :code)),
                    s(:ivasgn, :@keep_alive,
                      s(:false)), nil),
                  s(:send,
                    s(:self), :status=,
                    s(:send,
                      s(:lvar, :ex), :code)))),
              s(:begin,
                s(:ivasgn, :@keep_alive,
                  s(:false)),
                s(:send,
                  s(:self), :status=,
                  s(:const,
                    s(:const, nil, :HTTPStatus), :RC_INTERNAL_SERVER_ERROR)))),
            s(:send,
              s(:ivar, :@header), :[]=,
              s(:str, "content-type"),
              s(:str, "text/html; charset=ISO-8859-1")),
            s(:if,
              s(:send, nil, :respond_to?,
                s(:sym, :create_error_page)),
              s(:begin,
                s(:send, nil, :create_error_page),
                s(:return)), nil),
            s(:if,
              s(:ivar, :@request_uri),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :host),
                  s(:lvasgn, :port)),
                s(:array,
                  s(:send,
                    s(:ivar, :@request_uri), :host),
                  s(:send,
                    s(:ivar, :@request_uri), :port))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :host),
                  s(:lvasgn, :port)),
                s(:array,
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :ServerName)),
                  s(:send,
                    s(:ivar, :@config), :[],
                    s(:sym, :Port))))),
            s(:ivasgn, :@body,
              s(:str, "")),
            s(:send,
              s(:ivar, :@body), :<<,
              s(:dstr,
                s(:str, "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n"),
                s(:str, "<HTML>\n"),
                s(:str, "  <HEAD><TITLE>"),
                s(:begin,
                  s(:send,
                    s(:const, nil, :HTMLUtils), :escape,
                    s(:ivar, :@reason_phrase))),
                s(:str, "</TITLE></HEAD>\n"),
                s(:str, "  <BODY>\n"),
                s(:str, "    <H1>"),
                s(:begin,
                  s(:send,
                    s(:const, nil, :HTMLUtils), :escape,
                    s(:ivar, :@reason_phrase))),
                s(:str, "</H1>\n"),
                s(:str, "    "),
                s(:begin,
                  s(:send,
                    s(:const, nil, :HTMLUtils), :escape,
                    s(:send,
                      s(:lvar, :ex), :message))),
                s(:str, "\n"),
                s(:str, "    <HR>\n"))),
            s(:if,
              s(:and,
                s(:lvar, :backtrace),
                s(:gvar, :$DEBUG)),
              s(:begin,
                s(:send,
                  s(:ivar, :@body), :<<,
                  s(:dstr,
                    s(:str, "backtrace of `"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :HTMLUtils), :escape,
                        s(:send,
                          s(:send,
                            s(:lvar, :ex), :class), :to_s))),
                    s(:str, "' "))),
                s(:send,
                  s(:ivar, :@body), :<<,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:const, nil, :HTMLUtils), :escape,
                        s(:send,
                          s(:lvar, :ex), :message))))),
                s(:send,
                  s(:ivar, :@body), :<<,
                  s(:str, "<PRE>")),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :ex), :backtrace), :each),
                  s(:args,
                    s(:arg, :line)),
                  s(:send,
                    s(:ivar, :@body), :<<,
                    s(:dstr,
                      s(:str, "\t"),
                      s(:begin,
                        s(:lvar, :line)),
                      s(:str, "\n")))),
                s(:send,
                  s(:ivar, :@body), :<<,
                  s(:str, "</PRE><HR>"))), nil),
            s(:send,
              s(:ivar, :@body), :<<,
              s(:dstr,
                s(:str, "    <ADDRESS>\n"),
                s(:str, "     "),
                s(:begin,
                  s(:send,
                    s(:const, nil, :HTMLUtils), :escape,
                    s(:send,
                      s(:ivar, :@config), :[],
                      s(:sym, :ServerSoftware)))),
                s(:str, " at\n"),
                s(:str, "     "),
                s(:begin,
                  s(:lvar, :host)),
                s(:str, ":"),
                s(:begin,
                  s(:lvar, :port)),
                s(:str, "\n"),
                s(:str, "    </ADDRESS>\n"),
                s(:str, "  </BODY>\n"),
                s(:str, "</HTML>\n"))))),
        s(:send, nil, :private),
        s(:def, :send_body_io,
          s(:args,
            s(:arg, :socket)),
          s(:kwbegin,
            s(:ensure,
              s(:if,
                s(:send,
                  s(:ivar, :@request_method), :==,
                  s(:str, "HEAD")), nil,
                s(:if,
                  s(:send, nil, :chunked?),
                  s(:begin,
                    s(:kwbegin,
                      s(:rescue,
                        s(:begin,
                          s(:lvasgn, :buf,
                            s(:str, "")),
                          s(:lvasgn, :data,
                            s(:str, "")),
                          s(:while,
                            s(:true),
                            s(:begin,
                              s(:send,
                                s(:ivar, :@body), :readpartial,
                                s(:ivar, :@buffer_size),
                                s(:lvar, :buf)),
                              s(:send,
                                s(:send,
                                  s(:lvar, :data), :<<,
                                  s(:send, nil, :format,
                                    s(:str, "%x"),
                                    s(:send,
                                      s(:lvar, :buf), :bytesize))), :<<,
                                s(:const, nil, :CRLF)),
                              s(:send,
                                s(:send,
                                  s(:lvar, :data), :<<,
                                  s(:lvar, :buf)), :<<,
                                s(:const, nil, :CRLF)),
                              s(:send, nil, :_write_data,
                                s(:lvar, :socket),
                                s(:lvar, :data)),
                              s(:send,
                                s(:lvar, :data), :clear),
                              s(:op_asgn,
                                s(:ivasgn, :@sent_size), :+,
                                s(:send,
                                  s(:lvar, :buf), :bytesize))))),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :EOFError)), nil, nil), nil)),
                    s(:send, nil, :_write_data,
                      s(:lvar, :socket),
                      s(:dstr,
                        s(:str, "0"),
                        s(:begin,
                          s(:const, nil, :CRLF)),
                        s(:begin,
                          s(:const, nil, :CRLF))))),
                  s(:begin,
                    s(:lvasgn, :size,
                      s(:send,
                        s(:send,
                          s(:ivar, :@header), :[],
                          s(:str, "content-length")), :to_i)),
                    s(:send, nil, :_send_file,
                      s(:lvar, :socket),
                      s(:ivar, :@body),
                      s(:int, 0),
                      s(:lvar, :size)),
                    s(:ivasgn, :@sent_size,
                      s(:lvar, :size))))),
              s(:send,
                s(:ivar, :@body), :close)))),
        s(:def, :send_body_string,
          s(:args,
            s(:arg, :socket)),
          s(:if,
            s(:send,
              s(:ivar, :@request_method), :==,
              s(:str, "HEAD")), nil,
            s(:if,
              s(:send, nil, :chunked?),
              s(:begin,
                s(:if,
                  s(:send, nil, :body),
                  s(:send,
                    s(:ivar, :@body), :bytesize),
                  s(:int, 0)),
                s(:while,
                  s(:lvasgn, :buf,
                    s(:send,
                      s(:ivar, :@body), :[],
                      s(:ivar, :@sent_size),
                      s(:ivar, :@buffer_size))),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :buf), :empty?),
                      s(:break), nil),
                    s(:lvasgn, :data,
                      s(:str, "")),
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :<<,
                        s(:send, nil, :format,
                          s(:str, "%x"),
                          s(:send,
                            s(:lvar, :buf), :bytesize))), :<<,
                      s(:const, nil, :CRLF)),
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :<<,
                        s(:lvar, :buf)), :<<,
                      s(:const, nil, :CRLF)),
                    s(:send, nil, :_write_data,
                      s(:lvar, :socket),
                      s(:lvar, :data)),
                    s(:op_asgn,
                      s(:ivasgn, :@sent_size), :+,
                      s(:send,
                        s(:lvar, :buf), :bytesize)))),
                s(:send, nil, :_write_data,
                  s(:lvar, :socket),
                  s(:dstr,
                    s(:str, "0"),
                    s(:begin,
                      s(:const, nil, :CRLF)),
                    s(:begin,
                      s(:const, nil, :CRLF))))),
              s(:if,
                s(:and,
                  s(:ivar, :@body),
                  s(:send,
                    s(:send,
                      s(:ivar, :@body), :bytesize), :>,
                    s(:int, 0))),
                s(:begin,
                  s(:send, nil, :_write_data,
                    s(:lvar, :socket),
                    s(:ivar, :@body)),
                  s(:ivasgn, :@sent_size,
                    s(:send,
                      s(:ivar, :@body), :bytesize))), nil)))),
        s(:def, :_send_file,
          s(:args,
            s(:arg, :output),
            s(:arg, :input),
            s(:arg, :offset),
            s(:arg, :size)),
          s(:begin,
            s(:while,
              s(:send,
                s(:lvar, :offset), :>,
                s(:int, 0)),
              s(:begin,
                s(:lvasgn, :sz,
                  s(:if,
                    s(:send,
                      s(:ivar, :@buffer_size), :<,
                      s(:lvar, :size)),
                    s(:ivar, :@buffer_size),
                    s(:lvar, :size))),
                s(:lvasgn, :buf,
                  s(:send,
                    s(:lvar, :input), :read,
                    s(:lvar, :sz))),
                s(:op_asgn,
                  s(:lvasgn, :offset), :-,
                  s(:send,
                    s(:lvar, :buf), :bytesize)))),
            s(:if,
              s(:send,
                s(:lvar, :size), :==,
                s(:int, 0)),
              s(:while,
                s(:lvasgn, :buf,
                  s(:send,
                    s(:lvar, :input), :read,
                    s(:ivar, :@buffer_size))),
                s(:send, nil, :_write_data,
                  s(:lvar, :output),
                  s(:lvar, :buf))),
              s(:while,
                s(:send,
                  s(:lvar, :size), :>,
                  s(:int, 0)),
                s(:begin,
                  s(:lvasgn, :sz,
                    s(:if,
                      s(:send,
                        s(:ivar, :@buffer_size), :<,
                        s(:lvar, :size)),
                      s(:ivar, :@buffer_size),
                      s(:lvar, :size))),
                  s(:lvasgn, :buf,
                    s(:send,
                      s(:lvar, :input), :read,
                      s(:lvar, :sz))),
                  s(:send, nil, :_write_data,
                    s(:lvar, :output),
                    s(:lvar, :buf)),
                  s(:op_asgn,
                    s(:lvasgn, :size), :-,
                    s(:send,
                      s(:lvar, :buf), :bytesize))))))),
        s(:def, :_write_data,
          s(:args,
            s(:arg, :socket),
            s(:arg, :data)),
          s(:send,
            s(:lvar, :socket), :<<,
            s(:lvar, :data)))))))
