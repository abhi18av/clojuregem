s(:module,
  s(:const, nil, :WEBrick),
  s(:module,
    s(:const, nil, :AccessLog),
    s(:begin,
      s(:class,
        s(:const, nil, :AccessLogError),
        s(:const, nil, :StandardError), nil),
      s(:casgn, nil, :CLF_TIME_FORMAT,
        s(:str, "[%d/%b/%Y:%H:%M:%S %Z]")),
      s(:casgn, nil, :COMMON_LOG_FORMAT,
        s(:str, "%h %l %u %t \"%r\" %s %b")),
      s(:casgn, nil, :CLF,
        s(:const, nil, :COMMON_LOG_FORMAT)),
      s(:casgn, nil, :REFERER_LOG_FORMAT,
        s(:str, "%{Referer}i -> %U")),
      s(:casgn, nil, :AGENT_LOG_FORMAT,
        s(:str, "%{User-Agent}i")),
      s(:casgn, nil, :COMBINED_LOG_FORMAT,
        s(:dstr,
          s(:begin,
            s(:const, nil, :CLF)),
          s(:str, " \"%{Referer}i\" \"%{User-agent}i\""))),
      s(:send, nil, :module_function),
      s(:def, :setup_params,
        s(:args,
          s(:arg, :config),
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:lvasgn, :params,
            s(:send,
              s(:const, nil, :Hash), :new,
              s(:str, ""))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "a"),
            s(:send,
              s(:send,
                s(:lvar, :req), :peeraddr), :[],
              s(:int, 3))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "b"),
            s(:send,
              s(:lvar, :res), :sent_size)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "e"),
            s(:const, nil, :ENV)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "f"),
            s(:or,
              s(:send,
                s(:lvar, :res), :filename),
              s(:str, ""))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "h"),
            s(:send,
              s(:send,
                s(:lvar, :req), :peeraddr), :[],
              s(:int, 2))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "i"),
            s(:lvar, :req)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "l"),
            s(:str, "-")),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "m"),
            s(:send,
              s(:lvar, :req), :request_method)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "n"),
            s(:send,
              s(:lvar, :req), :attributes)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "o"),
            s(:lvar, :res)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "p"),
            s(:send,
              s(:lvar, :req), :port)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "q"),
            s(:send,
              s(:lvar, :req), :query_string)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "r"),
            s(:send,
              s(:send,
                s(:lvar, :req), :request_line), :sub,
              s(:regexp,
                s(:str, "\\x0d?\\x0a\\z"),
                s(:regopt, :o)),
              s(:str, ""))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "s"),
            s(:send,
              s(:lvar, :res), :status)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "t"),
            s(:send,
              s(:lvar, :req), :request_time)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "T"),
            s(:send,
              s(:send,
                s(:const, nil, :Time), :now), :-,
              s(:send,
                s(:lvar, :req), :request_time))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "u"),
            s(:or,
              s(:send,
                s(:lvar, :req), :user),
              s(:str, "-"))),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "U"),
            s(:send,
              s(:lvar, :req), :unparsed_uri)),
          s(:send,
            s(:lvar, :params), :[]=,
            s(:str, "v"),
            s(:send,
              s(:lvar, :config), :[],
              s(:sym, :ServerName))),
          s(:lvar, :params))),
      s(:def, :format,
        s(:args,
          s(:arg, :format_string),
          s(:arg, :params)),
        s(:block,
          s(:send,
            s(:lvar, :format_string), :gsub,
            s(:regexp,
              s(:str, "\\%(?:\\{(.*?)\\})?>?([a-zA-Z%])"),
              s(:regopt))),
          s(:args),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :param),
                s(:lvasgn, :spec)),
              s(:array,
                s(:nth_ref, 1),
                s(:nth_ref, 2))),
            s(:case,
              s(:send,
                s(:lvar, :spec), :[],
                s(:int, 0)),
              s(:when,
                s(:str, "e"),
                s(:str, "i"),
                s(:str, "n"),
                s(:str, "o"),
                s(:begin,
                  s(:if,
                    s(:lvar, :param), nil,
                    s(:send, nil, :raise,
                      s(:const, nil, :AccessLogError),
                      s(:dstr,
                        s(:str, "parameter is required for \""),
                        s(:begin,
                          s(:lvar, :spec)),
                        s(:str, "\"")))),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :param,
                        s(:send,
                          s(:send,
                            s(:lvar, :params), :[],
                            s(:lvar, :spec)), :[],
                          s(:lvar, :param)))),
                    s(:send, nil, :escape,
                      s(:lvar, :param)),
                    s(:str, "-")))),
              s(:when,
                s(:str, "t"),
                s(:send,
                  s(:send,
                    s(:lvar, :params), :[],
                    s(:lvar, :spec)), :strftime,
                  s(:or,
                    s(:lvar, :param),
                    s(:const, nil, :CLF_TIME_FORMAT)))),
              s(:when,
                s(:str, "p"),
                s(:case,
                  s(:lvar, :param),
                  s(:when,
                    s(:str, "remote"),
                    s(:send, nil, :escape,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :params), :[],
                              s(:str, "i")), :peeraddr), :[],
                          s(:int, 1)), :to_s))),
                  s(:send, nil, :escape,
                    s(:send,
                      s(:send,
                        s(:lvar, :params), :[],
                        s(:str, "p")), :to_s)))),
              s(:when,
                s(:str, "%"),
                s(:str, "%")),
              s(:send, nil, :escape,
                s(:send,
                  s(:send,
                    s(:lvar, :params), :[],
                    s(:lvar, :spec)), :to_s)))))),
      s(:def, :escape,
        s(:args,
          s(:arg, :data)),
        s(:if,
          s(:send,
            s(:lvar, :data), :tainted?),
          s(:send,
            s(:block,
              s(:send,
                s(:lvar, :data), :gsub,
                s(:regexp,
                  s(:str, "[[:cntrl:]\\\\]+"),
                  s(:regopt))),
              s(:args),
              s(:send,
                s(:send,
                  s(:back_ref, :$&), :dump), :[],
                s(:erange,
                  s(:int, 1),
                  s(:int, -1)))), :untaint),
          s(:lvar, :data))))))
