s(:begin,
  s(:send, nil, :require,
    s(:str, "webrick/accesslog")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:module,
      s(:const, nil, :HTTPStatus),
      s(:begin,
        s(:class,
          s(:const, nil, :Status),
          s(:const, nil, :StandardError),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :args), :empty?), nil,
                  s(:send,
                    s(:lvar, :args), :[]=,
                    s(:int, 0),
                    s(:send,
                      s(:const, nil, :AccessLog), :escape,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0))))),
                s(:super,
                  s(:splat,
                    s(:lvar, :args))))),
            s(:sclass,
              s(:self),
              s(:send, nil, :attr_reader,
                s(:sym, :code),
                s(:sym, :reason_phrase))),
            s(:def, :code,
              s(:args),
              s(:send,
                s(:send,
                  s(:self), :class), :code)),
            s(:def, :reason_phrase,
              s(:args),
              s(:send,
                s(:send,
                  s(:self), :class), :reason_phrase)),
            s(:alias,
              s(:sym, :to_i),
              s(:sym, :code)))),
        s(:class,
          s(:const, nil, :Info),
          s(:const, nil, :Status), nil),
        s(:class,
          s(:const, nil, :Success),
          s(:const, nil, :Status), nil),
        s(:class,
          s(:const, nil, :Redirect),
          s(:const, nil, :Status), nil),
        s(:class,
          s(:const, nil, :Error),
          s(:const, nil, :Status), nil),
        s(:class,
          s(:const, nil, :ClientError),
          s(:const, nil, :Error), nil),
        s(:class,
          s(:const, nil, :ServerError),
          s(:const, nil, :Error), nil),
        s(:class,
          s(:const, nil, :EOFError),
          s(:const, nil, :StandardError), nil),
        s(:casgn, nil, :StatusMessage,
          s(:hash,
            s(:pair,
              s(:int, 100),
              s(:str, "Continue")),
            s(:pair,
              s(:int, 101),
              s(:str, "Switching Protocols")),
            s(:pair,
              s(:int, 200),
              s(:str, "OK")),
            s(:pair,
              s(:int, 201),
              s(:str, "Created")),
            s(:pair,
              s(:int, 202),
              s(:str, "Accepted")),
            s(:pair,
              s(:int, 203),
              s(:str, "Non-Authoritative Information")),
            s(:pair,
              s(:int, 204),
              s(:str, "No Content")),
            s(:pair,
              s(:int, 205),
              s(:str, "Reset Content")),
            s(:pair,
              s(:int, 206),
              s(:str, "Partial Content")),
            s(:pair,
              s(:int, 207),
              s(:str, "Multi-Status")),
            s(:pair,
              s(:int, 300),
              s(:str, "Multiple Choices")),
            s(:pair,
              s(:int, 301),
              s(:str, "Moved Permanently")),
            s(:pair,
              s(:int, 302),
              s(:str, "Found")),
            s(:pair,
              s(:int, 303),
              s(:str, "See Other")),
            s(:pair,
              s(:int, 304),
              s(:str, "Not Modified")),
            s(:pair,
              s(:int, 305),
              s(:str, "Use Proxy")),
            s(:pair,
              s(:int, 307),
              s(:str, "Temporary Redirect")),
            s(:pair,
              s(:int, 400),
              s(:str, "Bad Request")),
            s(:pair,
              s(:int, 401),
              s(:str, "Unauthorized")),
            s(:pair,
              s(:int, 402),
              s(:str, "Payment Required")),
            s(:pair,
              s(:int, 403),
              s(:str, "Forbidden")),
            s(:pair,
              s(:int, 404),
              s(:str, "Not Found")),
            s(:pair,
              s(:int, 405),
              s(:str, "Method Not Allowed")),
            s(:pair,
              s(:int, 406),
              s(:str, "Not Acceptable")),
            s(:pair,
              s(:int, 407),
              s(:str, "Proxy Authentication Required")),
            s(:pair,
              s(:int, 408),
              s(:str, "Request Timeout")),
            s(:pair,
              s(:int, 409),
              s(:str, "Conflict")),
            s(:pair,
              s(:int, 410),
              s(:str, "Gone")),
            s(:pair,
              s(:int, 411),
              s(:str, "Length Required")),
            s(:pair,
              s(:int, 412),
              s(:str, "Precondition Failed")),
            s(:pair,
              s(:int, 413),
              s(:str, "Request Entity Too Large")),
            s(:pair,
              s(:int, 414),
              s(:str, "Request-URI Too Large")),
            s(:pair,
              s(:int, 415),
              s(:str, "Unsupported Media Type")),
            s(:pair,
              s(:int, 416),
              s(:str, "Request Range Not Satisfiable")),
            s(:pair,
              s(:int, 417),
              s(:str, "Expectation Failed")),
            s(:pair,
              s(:int, 422),
              s(:str, "Unprocessable Entity")),
            s(:pair,
              s(:int, 423),
              s(:str, "Locked")),
            s(:pair,
              s(:int, 424),
              s(:str, "Failed Dependency")),
            s(:pair,
              s(:int, 426),
              s(:str, "Upgrade Required")),
            s(:pair,
              s(:int, 428),
              s(:str, "Precondition Required")),
            s(:pair,
              s(:int, 429),
              s(:str, "Too Many Requests")),
            s(:pair,
              s(:int, 431),
              s(:str, "Request Header Fields Too Large")),
            s(:pair,
              s(:int, 500),
              s(:str, "Internal Server Error")),
            s(:pair,
              s(:int, 501),
              s(:str, "Not Implemented")),
            s(:pair,
              s(:int, 502),
              s(:str, "Bad Gateway")),
            s(:pair,
              s(:int, 503),
              s(:str, "Service Unavailable")),
            s(:pair,
              s(:int, 504),
              s(:str, "Gateway Timeout")),
            s(:pair,
              s(:int, 505),
              s(:str, "HTTP Version Not Supported")),
            s(:pair,
              s(:int, 507),
              s(:str, "Insufficient Storage")),
            s(:pair,
              s(:int, 511),
              s(:str, "Network Authentication Required")))),
        s(:casgn, nil, :CodeToError,
          s(:hash)),
        s(:block,
          s(:send,
            s(:const, nil, :StatusMessage), :each),
          s(:args,
            s(:arg, :code),
            s(:arg, :message)),
          s(:begin,
            s(:send,
              s(:lvar, :message), :freeze),
            s(:lvasgn, :var_name,
              s(:send,
                s(:send,
                  s(:lvar, :message), :gsub,
                  s(:regexp,
                    s(:str, "[ \\-]"),
                    s(:regopt)),
                  s(:str, "_")), :upcase)),
            s(:lvasgn, :err_name,
              s(:send,
                s(:lvar, :message), :gsub,
                s(:regexp,
                  s(:str, "[ \\-]"),
                  s(:regopt)),
                s(:str, ""))),
            s(:case,
              s(:lvar, :code),
              s(:when,
                s(:erange,
                  s(:int, 100),
                  s(:int, 200)),
                s(:lvasgn, :parent,
                  s(:const, nil, :Info))),
              s(:when,
                s(:erange,
                  s(:int, 200),
                  s(:int, 300)),
                s(:lvasgn, :parent,
                  s(:const, nil, :Success))),
              s(:when,
                s(:erange,
                  s(:int, 300),
                  s(:int, 400)),
                s(:lvasgn, :parent,
                  s(:const, nil, :Redirect))),
              s(:when,
                s(:erange,
                  s(:int, 400),
                  s(:int, 500)),
                s(:lvasgn, :parent,
                  s(:const, nil, :ClientError))),
              s(:when,
                s(:erange,
                  s(:int, 500),
                  s(:int, 600)),
                s(:lvasgn, :parent,
                  s(:const, nil, :ServerError))), nil),
            s(:send, nil, :const_set,
              s(:dstr,
                s(:str, "RC_"),
                s(:begin,
                  s(:lvar, :var_name))),
              s(:lvar, :code)),
            s(:lvasgn, :err_class,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:lvar, :parent))),
            s(:send,
              s(:lvar, :err_class), :instance_variable_set,
              s(:sym, :@code),
              s(:lvar, :code)),
            s(:send,
              s(:lvar, :err_class), :instance_variable_set,
              s(:sym, :@reason_phrase),
              s(:lvar, :message)),
            s(:send, nil, :const_set,
              s(:lvar, :err_name),
              s(:lvar, :err_class)),
            s(:send,
              s(:const, nil, :CodeToError), :[]=,
              s(:lvar, :code),
              s(:lvar, :err_class)))),
        s(:def, :reason_phrase,
          s(:args,
            s(:arg, :code)),
          s(:send,
            s(:const, nil, :StatusMessage), :[],
            s(:send,
              s(:lvar, :code), :to_i))),
        s(:def, :info?,
          s(:args,
            s(:arg, :code)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :>=,
              s(:int, 100)),
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :<,
              s(:int, 200)))),
        s(:def, :success?,
          s(:args,
            s(:arg, :code)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :>=,
              s(:int, 200)),
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :<,
              s(:int, 300)))),
        s(:def, :redirect?,
          s(:args,
            s(:arg, :code)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :>=,
              s(:int, 300)),
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :<,
              s(:int, 400)))),
        s(:def, :error?,
          s(:args,
            s(:arg, :code)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :>=,
              s(:int, 400)),
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :<,
              s(:int, 600)))),
        s(:def, :client_error?,
          s(:args,
            s(:arg, :code)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :>=,
              s(:int, 400)),
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :<,
              s(:int, 500)))),
        s(:def, :server_error?,
          s(:args,
            s(:arg, :code)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :>=,
              s(:int, 500)),
            s(:send,
              s(:send,
                s(:lvar, :code), :to_i), :<,
              s(:int, 600)))),
        s(:defs,
          s(:self), :[],
          s(:args,
            s(:arg, :code)),
          s(:send,
            s(:const, nil, :CodeToError), :[],
            s(:lvar, :code))),
        s(:send, nil, :module_function,
          s(:sym, :reason_phrase)),
        s(:send, nil, :module_function,
          s(:sym, :info?),
          s(:sym, :success?),
          s(:sym, :redirect?),
          s(:sym, :error?)),
        s(:send, nil, :module_function,
          s(:sym, :client_error?),
          s(:sym, :server_error?))))))
