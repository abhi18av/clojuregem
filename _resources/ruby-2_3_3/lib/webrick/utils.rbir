s(:begin,
  s(:send, nil, :require,
    s(:str, "socket")),
  s(:send, nil, :require,
    s(:str, "io/nonblock")),
  s(:send, nil, :require,
    s(:str, "etc")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:module,
      s(:const, nil, :Utils),
      s(:begin,
        s(:def, :set_non_blocking,
          s(:args,
            s(:arg, :io)),
          s(:if,
            s(:send,
              s(:lvar, :io), :respond_to?,
              s(:sym, :nonblock=)),
            s(:send,
              s(:lvar, :io), :nonblock=,
              s(:true)), nil)),
        s(:send, nil, :module_function,
          s(:sym, :set_non_blocking)),
        s(:def, :set_close_on_exec,
          s(:args,
            s(:arg, :io)),
          s(:if,
            s(:send,
              s(:lvar, :io), :respond_to?,
              s(:sym, :close_on_exec=)),
            s(:send,
              s(:lvar, :io), :close_on_exec=,
              s(:true)), nil)),
        s(:send, nil, :module_function,
          s(:sym, :set_close_on_exec)),
        s(:def, :su,
          s(:args,
            s(:arg, :user)),
          s(:if,
            s(:lvasgn, :pw,
              s(:send,
                s(:const, nil, :Etc), :getpwnam,
                s(:lvar, :user))),
            s(:begin,
              s(:send,
                s(:const, nil, :Process), :initgroups,
                s(:lvar, :user),
                s(:send,
                  s(:lvar, :pw), :gid)),
              s(:send,
                s(:const,
                  s(:const, nil, :Process), :Sys), :setgid,
                s(:send,
                  s(:lvar, :pw), :gid)),
              s(:send,
                s(:const,
                  s(:const, nil, :Process), :Sys), :setuid,
                s(:send,
                  s(:lvar, :pw), :uid))),
            s(:send, nil, :warn,
              s(:str, "WEBrick::Utils::su doesn't work on this platform")))),
        s(:send, nil, :module_function,
          s(:sym, :su)),
        s(:def, :getservername,
          s(:args),
          s(:begin,
            s(:lvasgn, :host,
              s(:send,
                s(:const, nil, :Socket), :gethostname)),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:send,
                    s(:const, nil, :Socket), :gethostbyname,
                    s(:lvar, :host)), :[],
                  s(:int, 0)),
                s(:resbody, nil, nil,
                  s(:lvar, :host)), nil)))),
        s(:send, nil, :module_function,
          s(:sym, :getservername)),
        s(:def, :create_listeners,
          s(:args,
            s(:arg, :address),
            s(:arg, :port)),
          s(:begin,
            s(:if,
              s(:lvar, :port), nil,
              s(:send, nil, :raise,
                s(:const, nil, :ArgumentError),
                s(:str, "must specify port"))),
            s(:lvasgn, :sockets,
              s(:send,
                s(:const, nil, :Socket), :tcp_server_sockets,
                s(:lvar, :address),
                s(:lvar, :port))),
            s(:lvasgn, :sockets,
              s(:block,
                s(:send,
                  s(:lvar, :sockets), :map),
                s(:args,
                  s(:arg, :s)),
                s(:begin,
                  s(:send,
                    s(:lvar, :s), :autoclose=,
                    s(:false)),
                  s(:lvasgn, :ts,
                    s(:send,
                      s(:const, nil, :TCPServer), :for_fd,
                      s(:send,
                        s(:lvar, :s), :fileno))),
                  s(:send,
                    s(:lvar, :s), :close),
                  s(:lvar, :ts)))),
            s(:return,
              s(:lvar, :sockets)))),
        s(:send, nil, :module_function,
          s(:sym, :create_listeners)),
        s(:casgn, nil, :RAND_CHARS,
          s(:send,
            s(:send,
              s(:str, "ABCDEFGHIJKLMNOPQRSTUVWXYZ"), :+,
              s(:str, "0123456789")), :+,
            s(:str, "abcdefghijklmnopqrstuvwxyz"))),
        s(:def, :random_string,
          s(:args,
            s(:arg, :len)),
          s(:begin,
            s(:lvasgn, :rand_max,
              s(:send,
                s(:const, nil, :RAND_CHARS), :bytesize)),
            s(:lvasgn, :ret,
              s(:str, "")),
            s(:block,
              s(:send,
                s(:lvar, :len), :times),
              s(:args),
              s(:send,
                s(:lvar, :ret), :<<,
                s(:send,
                  s(:const, nil, :RAND_CHARS), :[],
                  s(:send, nil, :rand,
                    s(:lvar, :rand_max))))),
            s(:lvar, :ret))),
        s(:send, nil, :module_function,
          s(:sym, :random_string)),
        s(:send, nil, :require,
          s(:str, "thread")),
        s(:send, nil, :require,
          s(:str, "timeout")),
        s(:send, nil, :require,
          s(:str, "singleton")),
        s(:class,
          s(:const, nil, :TimeoutHandler), nil,
          s(:begin,
            s(:send, nil, :include,
              s(:const, nil, :Singleton)),
            s(:class,
              s(:const, nil, :Thread),
              s(:const,
                s(:cbase), :Thread), nil),
            s(:casgn, nil, :TimeoutMutex,
              s(:send,
                s(:const, nil, :Mutex), :new)),
            s(:defs,
              s(:const, nil, :TimeoutHandler), :register,
              s(:args,
                s(:arg, :seconds),
                s(:arg, :exception)),
              s(:send,
                s(:send, nil, :instance), :register,
                s(:send,
                  s(:const, nil, :Thread), :current),
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :+,
                  s(:lvar, :seconds)),
                s(:lvar, :exception))),
            s(:defs,
              s(:const, nil, :TimeoutHandler), :cancel,
              s(:args,
                s(:arg, :id)),
              s(:send,
                s(:send, nil, :instance), :cancel,
                s(:send,
                  s(:const, nil, :Thread), :current),
                s(:lvar, :id))),
            s(:def, :initialize,
              s(:args),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:const, nil, :TimeoutMutex), :synchronize),
                  s(:args),
                  s(:ivasgn, :@timeout_info,
                    s(:send,
                      s(:const, nil, :Hash), :new))),
                s(:ivasgn, :@queue,
                  s(:send,
                    s(:const, nil, :Queue), :new)),
                s(:ivasgn, :@watcher,
                  s(:block,
                    s(:send,
                      s(:const, nil, :Thread), :start),
                    s(:args),
                    s(:begin,
                      s(:lvasgn, :to_interrupt,
                        s(:array)),
                      s(:while,
                        s(:true),
                        s(:begin,
                          s(:lvasgn, :now,
                            s(:send,
                              s(:const, nil, :Time), :now)),
                          s(:lvasgn, :wakeup,
                            s(:nil)),
                          s(:send,
                            s(:lvar, :to_interrupt), :clear),
                          s(:block,
                            s(:send,
                              s(:const, nil, :TimeoutMutex), :synchronize),
                            s(:args),
                            s(:block,
                              s(:send,
                                s(:ivar, :@timeout_info), :each),
                              s(:args,
                                s(:arg, :thread),
                                s(:arg, :ary)),
                              s(:begin,
                                s(:if,
                                  s(:lvar, :ary), nil,
                                  s(:next)),
                                s(:block,
                                  s(:send,
                                    s(:lvar, :ary), :each),
                                  s(:args,
                                    s(:arg, :info)),
                                  s(:begin,
                                    s(:masgn,
                                      s(:mlhs,
                                        s(:lvasgn, :time),
                                        s(:lvasgn, :exception)),
                                      s(:array,
                                        s(:splat,
                                          s(:lvar, :info)))),
                                    s(:if,
                                      s(:send,
                                        s(:lvar, :time), :<,
                                        s(:lvar, :now)),
                                      s(:send,
                                        s(:lvar, :to_interrupt), :push,
                                        s(:array,
                                          s(:lvar, :thread),
                                          s(:send,
                                            s(:lvar, :info), :object_id),
                                          s(:lvar, :exception))),
                                      s(:if,
                                        s(:or,
                                          s(:send,
                                            s(:lvar, :wakeup), :!),
                                          s(:send,
                                            s(:lvar, :time), :<,
                                            s(:lvar, :wakeup))),
                                        s(:lvasgn, :wakeup,
                                          s(:lvar, :time)), nil))))))),
                          s(:block,
                            s(:send,
                              s(:lvar, :to_interrupt), :each),
                            s(:args,
                              s(:arg, :arg)),
                            s(:send, nil, :interrupt,
                              s(:splat,
                                s(:lvar, :arg)))),
                          s(:if,
                            s(:send,
                              s(:lvar, :wakeup), :!),
                            s(:send,
                              s(:ivar, :@queue), :pop),
                            s(:if,
                              s(:send,
                                s(:begin,
                                  s(:op_asgn,
                                    s(:lvasgn, :wakeup), :-,
                                    s(:lvar, :now))), :>,
                                s(:int, 0)),
                              s(:kwbegin,
                                s(:ensure,
                                  s(:send,
                                    s(:begin,
                                      s(:lvasgn, :th,
                                        s(:block,
                                          s(:send,
                                            s(:const, nil, :Thread), :start),
                                          s(:args),
                                          s(:send,
                                            s(:ivar, :@queue), :pop)))), :join,
                                    s(:lvar, :wakeup)),
                                  s(:csend,
                                    s(:csend,
                                      s(:lvar, :th), :kill), :join))), nil)),
                          s(:send,
                            s(:ivar, :@queue), :clear)))))))),
            s(:def, :interrupt,
              s(:args,
                s(:arg, :thread),
                s(:arg, :id),
                s(:arg, :exception)),
              s(:if,
                s(:and,
                  s(:send, nil, :cancel,
                    s(:lvar, :thread),
                    s(:lvar, :id)),
                  s(:send,
                    s(:lvar, :thread), :alive?)),
                s(:send,
                  s(:lvar, :thread), :raise,
                  s(:lvar, :exception),
                  s(:str, "execution timeout")), nil)),
            s(:def, :register,
              s(:args,
                s(:arg, :thread),
                s(:arg, :time),
                s(:arg, :exception)),
              s(:begin,
                s(:lvasgn, :info,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:const, nil, :TimeoutMutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:or_asgn,
                      s(:send,
                        s(:ivar, :@timeout_info), :[],
                        s(:lvar, :thread)),
                      s(:send,
                        s(:const, nil, :Array), :new)),
                    s(:send,
                      s(:send,
                        s(:ivar, :@timeout_info), :[],
                        s(:lvar, :thread)), :<<,
                      s(:begin,
                        s(:lvasgn, :info,
                          s(:array,
                            s(:lvar, :time),
                            s(:lvar, :exception))))))),
                s(:send,
                  s(:ivar, :@queue), :push,
                  s(:nil)),
                s(:return,
                  s(:send,
                    s(:lvar, :info), :object_id)))),
            s(:def, :cancel,
              s(:args,
                s(:arg, :thread),
                s(:arg, :id)),
              s(:block,
                s(:send,
                  s(:const, nil, :TimeoutMutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:if,
                    s(:lvasgn, :ary,
                      s(:send,
                        s(:ivar, :@timeout_info), :[],
                        s(:lvar, :thread))),
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :ary), :delete_if),
                        s(:args,
                          s(:arg, :info)),
                        s(:send,
                          s(:send,
                            s(:lvar, :info), :object_id), :==,
                          s(:lvar, :id))),
                      s(:if,
                        s(:send,
                          s(:lvar, :ary), :empty?),
                        s(:send,
                          s(:ivar, :@timeout_info), :delete,
                          s(:lvar, :thread)), nil),
                      s(:return,
                        s(:true))), nil),
                  s(:return,
                    s(:false))))))),
        s(:def, :timeout,
          s(:args,
            s(:arg, :seconds),
            s(:optarg, :exception,
              s(:const,
                s(:const, nil, :Timeout), :Error))),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :seconds), :nil?),
                s(:send,
                  s(:lvar, :seconds), :zero?)),
              s(:return,
                s(:yield)), nil),
            s(:lvasgn, :id,
              s(:send,
                s(:const, nil, :TimeoutHandler), :register,
                s(:lvar, :seconds),
                s(:lvar, :exception))),
            s(:kwbegin,
              s(:ensure,
                s(:yield,
                  s(:lvar, :seconds)),
                s(:send,
                  s(:const, nil, :TimeoutHandler), :cancel,
                  s(:lvar, :id)))))),
        s(:send, nil, :module_function,
          s(:sym, :timeout))))))
