s(:begin,
  s(:send, nil, :require,
    s(:str, "webrick/httpauth/userdb")),
  s(:send, nil, :require,
    s(:str, "webrick/httpauth/basicauth")),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:module,
      s(:const, nil, :HTTPAuth),
      s(:class,
        s(:const, nil, :Htpasswd), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :UserDB)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :path)),
            s(:begin,
              s(:ivasgn, :@path,
                s(:lvar, :path)),
              s(:ivasgn, :@mtime,
                s(:send,
                  s(:const, nil, :Time), :at,
                  s(:int, 0))),
              s(:ivasgn, :@passwd,
                s(:send,
                  s(:const, nil, :Hash), :new)),
              s(:ivasgn, :@auth_type,
                s(:const, nil, :BasicAuth)),
              s(:if,
                s(:send,
                  s(:const, nil, :File), :exist?,
                  s(:ivar, :@path)), nil,
                s(:send,
                  s(:send, nil, :open,
                    s(:ivar, :@path),
                    s(:str, "a")), :close)),
              s(:send, nil, :reload))),
          s(:def, :reload,
            s(:args),
            s(:begin,
              s(:lvasgn, :mtime,
                s(:send,
                  s(:const, nil, :File), :mtime,
                  s(:ivar, :@path))),
              s(:if,
                s(:send,
                  s(:lvar, :mtime), :>,
                  s(:ivar, :@mtime)),
                s(:begin,
                  s(:send,
                    s(:ivar, :@passwd), :clear),
                  s(:block,
                    s(:send, nil, :open,
                      s(:ivar, :@path)),
                    s(:args,
                      s(:arg, :io)),
                    s(:while,
                      s(:lvasgn, :line,
                        s(:send,
                          s(:lvar, :io), :gets)),
                      s(:begin,
                        s(:send,
                          s(:lvar, :line), :chomp!),
                        s(:case,
                          s(:lvar, :line),
                          s(:when,
                            s(:regexp,
                              s(:str, "\\A[^:]+:[a-zA-Z0-9./]{13}\\z"),
                              s(:regopt)),
                            s(:masgn,
                              s(:mlhs,
                                s(:lvasgn, :user),
                                s(:lvasgn, :pass)),
                              s(:send,
                                s(:lvar, :line), :split,
                                s(:str, ":")))),
                          s(:when,
                            s(:regexp,
                              s(:str, ":\\$"),
                              s(:regopt)),
                            s(:regexp,
                              s(:str, ":{SHA}"),
                              s(:regopt)),
                            s(:send, nil, :raise,
                              s(:const, nil, :NotImplementedError),
                              s(:str, "MD5, SHA1 .htpasswd file not supported"))),
                          s(:send, nil, :raise,
                            s(:const, nil, :StandardError),
                            s(:str, "bad .htpasswd file"))),
                        s(:send,
                          s(:ivar, :@passwd), :[]=,
                          s(:lvar, :user),
                          s(:lvar, :pass))))),
                  s(:ivasgn, :@mtime,
                    s(:lvar, :mtime))), nil))),
          s(:def, :flush,
            s(:args,
              s(:optarg, :output,
                s(:nil))),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :output),
                s(:ivar, :@path)),
              s(:lvasgn, :tmp,
                s(:send,
                  s(:const, nil, :Tempfile), :create,
                  s(:str, "htpasswd"),
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:lvar, :output)))),
              s(:lvasgn, :renamed,
                s(:false)),
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:block,
                      s(:send, nil, :each),
                      s(:args,
                        s(:arg, :item)),
                      s(:send,
                        s(:lvar, :tmp), :puts,
                        s(:send,
                          s(:lvar, :item), :join,
                          s(:str, ":")))),
                    s(:send,
                      s(:lvar, :tmp), :close),
                    s(:send,
                      s(:const, nil, :File), :rename,
                      s(:send,
                        s(:lvar, :tmp), :path),
                      s(:lvar, :output)),
                    s(:lvasgn, :renamed,
                      s(:true))),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :tmp), :closed?), :!),
                      s(:send,
                        s(:lvar, :tmp), :close), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :renamed), :!),
                      s(:send,
                        s(:const, nil, :File), :unlink,
                        s(:send,
                          s(:lvar, :tmp), :path)), nil)))))),
          s(:def, :get_passwd,
            s(:args,
              s(:arg, :realm),
              s(:arg, :user),
              s(:arg, :reload_db)),
            s(:begin,
              s(:if,
                s(:lvar, :reload_db),
                s(:send, nil, :reload), nil),
              s(:send,
                s(:ivar, :@passwd), :[],
                s(:lvar, :user)))),
          s(:def, :set_passwd,
            s(:args,
              s(:arg, :realm),
              s(:arg, :user),
              s(:arg, :pass)),
            s(:send,
              s(:ivar, :@passwd), :[]=,
              s(:lvar, :user),
              s(:send, nil, :make_passwd,
                s(:lvar, :realm),
                s(:lvar, :user),
                s(:lvar, :pass)))),
          s(:def, :delete_passwd,
            s(:args,
              s(:arg, :realm),
              s(:arg, :user)),
            s(:send,
              s(:ivar, :@passwd), :delete,
              s(:lvar, :user))),
          s(:def, :each,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@passwd), :keys), :sort), :each),
              s(:args,
                s(:arg, :user)),
              s(:yield,
                s(:array,
                  s(:lvar, :user),
                  s(:send,
                    s(:ivar, :@passwd), :[],
                    s(:lvar, :user)))))))))))
