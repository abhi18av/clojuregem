s(:begin,
  s(:send, nil, :require,
    s(:str, "time")),
  s(:send, nil, :require,
    s(:str, "webrick/httputils")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:class,
      s(:const, nil, :Cookie), nil,
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :name)),
        s(:send, nil, :attr_accessor,
          s(:sym, :value)),
        s(:send, nil, :attr_accessor,
          s(:sym, :version)),
        s(:send, nil, :attr_accessor,
          s(:sym, :domain)),
        s(:send, nil, :attr_accessor,
          s(:sym, :path)),
        s(:send, nil, :attr_accessor,
          s(:sym, :secure)),
        s(:send, nil, :attr_accessor,
          s(:sym, :comment)),
        s(:send, nil, :attr_accessor,
          s(:sym, :max_age)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :name),
            s(:arg, :value)),
          s(:begin,
            s(:ivasgn, :@name,
              s(:lvar, :name)),
            s(:ivasgn, :@value,
              s(:lvar, :value)),
            s(:ivasgn, :@version,
              s(:int, 0)),
            s(:ivasgn, :@domain,
              s(:ivasgn, :@path,
                s(:ivasgn, :@secure,
                  s(:ivasgn, :@comment,
                    s(:ivasgn, :@max_age,
                      s(:ivasgn, :@expires,
                        s(:ivasgn, :@comment_url,
                          s(:ivasgn, :@discard,
                            s(:ivasgn, :@port,
                              s(:nil)))))))))))),
        s(:def, :expires=,
          s(:args,
            s(:arg, :t)),
          s(:ivasgn, :@expires,
            s(:and,
              s(:lvar, :t),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :t), :is_a?,
                    s(:const, nil, :Time)),
                  s(:send,
                    s(:lvar, :t), :httpdate),
                  s(:send,
                    s(:lvar, :t), :to_s)))))),
        s(:def, :expires,
          s(:args),
          s(:and,
            s(:ivar, :@expires),
            s(:send,
              s(:const, nil, :Time), :parse,
              s(:ivar, :@expires)))),
        s(:def, :to_s,
          s(:args),
          s(:begin,
            s(:lvasgn, :ret,
              s(:str, "")),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :ret), :<<,
                  s(:ivar, :@name)), :<<,
                s(:str, "=")), :<<,
              s(:ivar, :@value)),
            s(:if,
              s(:send,
                s(:ivar, :@version), :>,
                s(:int, 0)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ret), :<<,
                    s(:str, "; ")), :<<,
                  s(:str, "Version=")), :<<,
                s(:send,
                  s(:ivar, :@version), :to_s)), nil),
            s(:if,
              s(:ivar, :@domain),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ret), :<<,
                    s(:str, "; ")), :<<,
                  s(:str, "Domain=")), :<<,
                s(:ivar, :@domain)), nil),
            s(:if,
              s(:ivar, :@expires),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ret), :<<,
                    s(:str, "; ")), :<<,
                  s(:str, "Expires=")), :<<,
                s(:ivar, :@expires)), nil),
            s(:if,
              s(:ivar, :@max_age),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ret), :<<,
                    s(:str, "; ")), :<<,
                  s(:str, "Max-Age=")), :<<,
                s(:send,
                  s(:ivar, :@max_age), :to_s)), nil),
            s(:if,
              s(:ivar, :@comment),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ret), :<<,
                    s(:str, "; ")), :<<,
                  s(:str, "Comment=")), :<<,
                s(:ivar, :@comment)), nil),
            s(:if,
              s(:ivar, :@path),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ret), :<<,
                    s(:str, "; ")), :<<,
                  s(:str, "Path=")), :<<,
                s(:ivar, :@path)), nil),
            s(:if,
              s(:ivar, :@secure),
              s(:send,
                s(:send,
                  s(:lvar, :ret), :<<,
                  s(:str, "; ")), :<<,
                s(:str, "Secure")), nil),
            s(:lvar, :ret))),
        s(:defs,
          s(:self), :parse,
          s(:args,
            s(:arg, :str)),
          s(:if,
            s(:lvar, :str),
            s(:begin,
              s(:lvasgn, :ret,
                s(:array)),
              s(:lvasgn, :cookie,
                s(:nil)),
              s(:lvasgn, :ver,
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :str), :split,
                    s(:regexp,
                      s(:str, "[;,]\\s+"),
                      s(:regopt))), :each),
                s(:args,
                  s(:arg, :x)),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :key),
                      s(:lvasgn, :val)),
                    s(:send,
                      s(:lvar, :x), :split,
                      s(:regexp,
                        s(:str, "="),
                        s(:regopt)),
                      s(:int, 2))),
                  s(:lvasgn, :val,
                    s(:if,
                      s(:lvar, :val),
                      s(:send,
                        s(:const, nil, :HTTPUtils), :dequote,
                        s(:lvar, :val)),
                      s(:str, ""))),
                  s(:case,
                    s(:lvar, :key),
                    s(:when,
                      s(:str, "$Version"),
                      s(:lvasgn, :ver,
                        s(:send,
                          s(:lvar, :val), :to_i))),
                    s(:when,
                      s(:str, "$Path"),
                      s(:send,
                        s(:lvar, :cookie), :path=,
                        s(:lvar, :val))),
                    s(:when,
                      s(:str, "$Domain"),
                      s(:send,
                        s(:lvar, :cookie), :domain=,
                        s(:lvar, :val))),
                    s(:when,
                      s(:str, "$Port"),
                      s(:send,
                        s(:lvar, :cookie), :port=,
                        s(:lvar, :val))),
                    s(:begin,
                      s(:if,
                        s(:lvar, :cookie),
                        s(:send,
                          s(:lvar, :ret), :<<,
                          s(:lvar, :cookie)), nil),
                      s(:lvasgn, :cookie,
                        s(:send,
                          s(:self), :new,
                          s(:lvar, :key),
                          s(:lvar, :val))),
                      s(:send,
                        s(:lvar, :cookie), :version=,
                        s(:lvar, :ver)))))),
              s(:if,
                s(:lvar, :cookie),
                s(:send,
                  s(:lvar, :ret), :<<,
                  s(:lvar, :cookie)), nil),
              s(:lvar, :ret)), nil)),
        s(:defs,
          s(:self), :parse_set_cookie,
          s(:args,
            s(:arg, :str)),
          s(:begin,
            s(:lvasgn, :cookie_elem,
              s(:send,
                s(:lvar, :str), :split,
                s(:regexp,
                  s(:str, ";"),
                  s(:regopt)))),
            s(:lvasgn, :first_elem,
              s(:send,
                s(:lvar, :cookie_elem), :shift)),
            s(:send,
              s(:lvar, :first_elem), :strip!),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :key),
                s(:lvasgn, :value)),
              s(:send,
                s(:lvar, :first_elem), :split,
                s(:regexp,
                  s(:str, "="),
                  s(:regopt)),
                s(:int, 2))),
            s(:lvasgn, :cookie,
              s(:send, nil, :new,
                s(:lvar, :key),
                s(:send,
                  s(:const, nil, :HTTPUtils), :dequote,
                  s(:lvar, :value)))),
            s(:block,
              s(:send,
                s(:lvar, :cookie_elem), :each),
              s(:args,
                s(:arg, :pair)),
              s(:begin,
                s(:send,
                  s(:lvar, :pair), :strip!),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :key),
                    s(:lvasgn, :value)),
                  s(:send,
                    s(:lvar, :pair), :split,
                    s(:regexp,
                      s(:str, "="),
                      s(:regopt)),
                    s(:int, 2))),
                s(:if,
                  s(:lvar, :value),
                  s(:lvasgn, :value,
                    s(:send,
                      s(:const, nil, :HTTPUtils), :dequote,
                      s(:send,
                        s(:lvar, :value), :strip))), nil),
                s(:case,
                  s(:send,
                    s(:lvar, :key), :downcase),
                  s(:when,
                    s(:str, "domain"),
                    s(:send,
                      s(:lvar, :cookie), :domain=,
                      s(:lvar, :value))),
                  s(:when,
                    s(:str, "path"),
                    s(:send,
                      s(:lvar, :cookie), :path=,
                      s(:lvar, :value))),
                  s(:when,
                    s(:str, "expires"),
                    s(:send,
                      s(:lvar, :cookie), :expires=,
                      s(:lvar, :value))),
                  s(:when,
                    s(:str, "max-age"),
                    s(:send,
                      s(:lvar, :cookie), :max_age=,
                      s(:send, nil, :Integer,
                        s(:lvar, :value)))),
                  s(:when,
                    s(:str, "comment"),
                    s(:send,
                      s(:lvar, :cookie), :comment=,
                      s(:lvar, :value))),
                  s(:when,
                    s(:str, "version"),
                    s(:send,
                      s(:lvar, :cookie), :version=,
                      s(:send, nil, :Integer,
                        s(:lvar, :value)))),
                  s(:when,
                    s(:str, "secure"),
                    s(:send,
                      s(:lvar, :cookie), :secure=,
                      s(:true))), nil))),
            s(:return,
              s(:lvar, :cookie)))),
        s(:defs,
          s(:self), :parse_set_cookies,
          s(:args,
            s(:arg, :str)),
          s(:return,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :str), :split,
                  s(:regexp,
                    s(:str, ",(?=[^;,]*=)|,$"),
                    s(:regopt))), :collect),
              s(:args,
                s(:arg, :c)),
              s(:send, nil, :parse_set_cookie,
                s(:lvar, :c)))))))))
