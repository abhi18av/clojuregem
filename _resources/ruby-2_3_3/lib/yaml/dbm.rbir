s(:begin,
  s(:send, nil, :require,
    s(:str, "yaml")),
  s(:send, nil, :require,
    s(:str, "dbm")),
  s(:module,
    s(:const, nil, :YAML),
    s(:class,
      s(:const, nil, :DBM),
      s(:const,
        s(:cbase), :DBM),
      s(:begin,
        s(:casgn, nil, :VERSION,
          s(:str, "0.1")),
        s(:def, :[],
          s(:args,
            s(:arg, :key)),
          s(:send, nil, :fetch,
            s(:lvar, :key))),
        s(:def, :[]=,
          s(:args,
            s(:arg, :key),
            s(:arg, :val)),
          s(:send, nil, :store,
            s(:lvar, :key),
            s(:lvar, :val))),
        s(:def, :fetch,
          s(:args,
            s(:arg, :keystr),
            s(:optarg, :ifnone,
              s(:nil))),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :val,
                    s(:super,
                      s(:lvar, :keystr))),
                  s(:if,
                    s(:send,
                      s(:const, nil, :String), :===,
                      s(:lvar, :val)),
                    s(:return,
                      s(:send,
                        s(:const, nil, :YAML), :load,
                        s(:lvar, :val))), nil)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :IndexError)), nil, nil), nil)),
            s(:if,
              s(:send, nil, :block_given?),
              s(:yield,
                s(:lvar, :keystr)),
              s(:lvar, :ifnone)))),
        s(:def, :index,
          s(:args,
            s(:arg, :keystr)),
          s(:super,
            s(:send,
              s(:lvar, :keystr), :to_yaml))),
        s(:def, :key,
          s(:args,
            s(:arg, :keystr)),
          s(:send,
            s(:send, nil, :invert), :[],
            s(:lvar, :keystr))),
        s(:def, :values_at,
          s(:args,
            s(:restarg, :keys)),
          s(:block,
            s(:send,
              s(:lvar, :keys), :collect),
            s(:args,
              s(:arg, :k)),
            s(:send, nil, :fetch,
              s(:lvar, :k)))),
        s(:def, :delete,
          s(:args,
            s(:arg, :key)),
          s(:begin,
            s(:lvasgn, :v,
              s(:super,
                s(:lvar, :key))),
            s(:if,
              s(:send,
                s(:const, nil, :String), :===,
                s(:lvar, :v)),
              s(:lvasgn, :v,
                s(:send,
                  s(:const, nil, :YAML), :load,
                  s(:lvar, :v))), nil),
            s(:lvar, :v))),
        s(:def, :delete_if,
          s(:args),
          s(:begin,
            s(:lvasgn, :del_keys,
              s(:send,
                s(:send, nil, :keys), :dup)),
            s(:block,
              s(:send,
                s(:lvar, :del_keys), :delete_if),
              s(:args,
                s(:arg, :k)),
              s(:send,
                s(:yield,
                  s(:lvar, :k),
                  s(:send, nil, :fetch,
                    s(:lvar, :k))), :==,
                s(:false))),
            s(:block,
              s(:send,
                s(:lvar, :del_keys), :each),
              s(:args,
                s(:arg, :k)),
              s(:send, nil, :delete,
                s(:lvar, :k))),
            s(:self))),
        s(:def, :reject,
          s(:args),
          s(:begin,
            s(:lvasgn, :hsh,
              s(:send,
                s(:self), :to_hash)),
            s(:block,
              s(:send,
                s(:lvar, :hsh), :reject),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:yield,
                s(:lvar, :k),
                s(:lvar, :v))))),
        s(:def, :each_pair,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:send, nil, :keys), :each),
              s(:args,
                s(:arg, :k)),
              s(:yield,
                s(:lvar, :k),
                s(:send, nil, :fetch,
                  s(:lvar, :k)))),
            s(:self))),
        s(:def, :each_value,
          s(:args),
          s(:begin,
            s(:block,
              s(:zsuper),
              s(:args,
                s(:arg, :v)),
              s(:yield,
                s(:send,
                  s(:const, nil, :YAML), :load,
                  s(:lvar, :v)))),
            s(:self))),
        s(:def, :values,
          s(:args),
          s(:block,
            s(:send,
              s(:zsuper), :collect),
            s(:args,
              s(:arg, :v)),
            s(:send,
              s(:const, nil, :YAML), :load,
              s(:lvar, :v)))),
        s(:def, :has_value?,
          s(:args,
            s(:arg, :val)),
          s(:begin,
            s(:block,
              s(:send, nil, :each_value),
              s(:args,
                s(:arg, :v)),
              s(:if,
                s(:send,
                  s(:lvar, :v), :==,
                  s(:lvar, :val)),
                s(:return,
                  s(:true)), nil)),
            s(:return,
              s(:false)))),
        s(:def, :invert,
          s(:args),
          s(:begin,
            s(:lvasgn, :h,
              s(:hash)),
            s(:block,
              s(:send,
                s(:send, nil, :keys), :each),
              s(:args,
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:send,
                  s(:self), :fetch,
                  s(:lvar, :k)),
                s(:lvar, :k))),
            s(:lvar, :h))),
        s(:def, :replace,
          s(:args,
            s(:arg, :hsh)),
          s(:begin,
            s(:send, nil, :clear),
            s(:send, nil, :update,
              s(:lvar, :hsh)))),
        s(:def, :shift,
          s(:args),
          s(:begin,
            s(:lvasgn, :a,
              s(:zsuper)),
            s(:if,
              s(:lvar, :a),
              s(:send,
                s(:lvar, :a), :[]=,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :YAML), :load,
                  s(:send,
                    s(:lvar, :a), :[],
                    s(:int, 1)))), nil),
            s(:lvar, :a))),
        s(:def, :select,
          s(:args,
            s(:restarg, :keys)),
          s(:if,
            s(:send, nil, :block_given?),
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:self), :keys), :collect),
                s(:args,
                  s(:arg, :k)),
                s(:begin,
                  s(:lvasgn, :v,
                    s(:send,
                      s(:self), :[],
                      s(:lvar, :k))),
                  s(:if,
                    s(:yield,
                      s(:lvar, :k),
                      s(:lvar, :v)),
                    s(:array,
                      s(:lvar, :k),
                      s(:lvar, :v)), nil))), :compact),
            s(:send, nil, :values_at,
              s(:splat,
                s(:lvar, :keys))))),
        s(:def, :store,
          s(:args,
            s(:arg, :key),
            s(:arg, :val)),
          s(:begin,
            s(:super,
              s(:lvar, :key),
              s(:send,
                s(:lvar, :val), :to_yaml)),
            s(:lvar, :val))),
        s(:def, :update,
          s(:args,
            s(:arg, :hsh)),
          s(:begin,
            s(:block,
              s(:send,
                s(:lvar, :hsh), :each_pair),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:send,
                s(:self), :store,
                s(:lvar, :k),
                s(:lvar, :v))),
            s(:self))),
        s(:def, :to_a,
          s(:args),
          s(:begin,
            s(:lvasgn, :a,
              s(:array)),
            s(:block,
              s(:send,
                s(:send, nil, :keys), :each),
              s(:args,
                s(:arg, :k)),
              s(:send,
                s(:lvar, :a), :push,
                s(:array,
                  s(:lvar, :k),
                  s(:send,
                    s(:self), :fetch,
                    s(:lvar, :k))))),
            s(:lvar, :a))),
        s(:def, :to_hash,
          s(:args),
          s(:begin,
            s(:lvasgn, :h,
              s(:hash)),
            s(:block,
              s(:send,
                s(:send, nil, :keys), :each),
              s(:args,
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :k),
                s(:send,
                  s(:self), :fetch,
                  s(:lvar, :k)))),
            s(:lvar, :h))),
        s(:alias,
          s(:sym, :each),
          s(:sym, :each_pair))))))
