s(:module,
  s(:const, nil, :Open3),
  s(:begin,
    s(:def, :popen3,
      s(:args,
        s(:restarg, :cmd),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :in_r),
            s(:lvasgn, :in_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :in),
          s(:lvar, :in_r)),
        s(:send,
          s(:lvar, :in_w), :sync=,
          s(:true)),
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :out_r),
            s(:lvasgn, :out_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :out),
          s(:lvar, :out_w)),
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :err_r),
            s(:lvasgn, :err_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :err),
          s(:lvar, :err_w)),
        s(:send, nil, :popen_run,
          s(:lvar, :cmd),
          s(:lvar, :opts),
          s(:array,
            s(:lvar, :in_r),
            s(:lvar, :out_w),
            s(:lvar, :err_w)),
          s(:array,
            s(:lvar, :in_w),
            s(:lvar, :out_r),
            s(:lvar, :err_r)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:send, nil, :module_function,
      s(:sym, :popen3)),
    s(:def, :popen2,
      s(:args,
        s(:restarg, :cmd),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :in_r),
            s(:lvasgn, :in_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :in),
          s(:lvar, :in_r)),
        s(:send,
          s(:lvar, :in_w), :sync=,
          s(:true)),
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :out_r),
            s(:lvasgn, :out_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :out),
          s(:lvar, :out_w)),
        s(:send, nil, :popen_run,
          s(:lvar, :cmd),
          s(:lvar, :opts),
          s(:array,
            s(:lvar, :in_r),
            s(:lvar, :out_w)),
          s(:array,
            s(:lvar, :in_w),
            s(:lvar, :out_r)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:send, nil, :module_function,
      s(:sym, :popen2)),
    s(:def, :popen2e,
      s(:args,
        s(:restarg, :cmd),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :in_r),
            s(:lvasgn, :in_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :in),
          s(:lvar, :in_r)),
        s(:send,
          s(:lvar, :in_w), :sync=,
          s(:true)),
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :out_r),
            s(:lvasgn, :out_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:array,
            s(:sym, :out),
            s(:sym, :err)),
          s(:lvar, :out_w)),
        s(:send, nil, :popen_run,
          s(:lvar, :cmd),
          s(:lvar, :opts),
          s(:array,
            s(:lvar, :in_r),
            s(:lvar, :out_w)),
          s(:array,
            s(:lvar, :in_w),
            s(:lvar, :out_r)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:send, nil, :module_function,
      s(:sym, :popen2e)),
    s(:def, :popen_run,
      s(:args,
        s(:arg, :cmd),
        s(:arg, :opts),
        s(:arg, :child_io),
        s(:arg, :parent_io)),
      s(:begin,
        s(:if,
          s(:lvasgn, :last,
            s(:send,
              s(:const, nil, :Hash), :try_convert,
              s(:send,
                s(:lvar, :cmd), :last))),
          s(:begin,
            s(:lvasgn, :opts,
              s(:send,
                s(:lvar, :opts), :merge,
                s(:lvar, :last))),
            s(:send,
              s(:lvar, :cmd), :pop)), nil),
        s(:lvasgn, :pid,
          s(:send, nil, :spawn,
            s(:splat,
              s(:lvar, :cmd)),
            s(:lvar, :opts))),
        s(:lvasgn, :wait_thr,
          s(:send,
            s(:const, nil, :Process), :detach,
            s(:lvar, :pid))),
        s(:block,
          s(:send,
            s(:lvar, :child_io), :each),
          s(:args,
            s(:arg, :io)),
          s(:send,
            s(:lvar, :io), :close)),
        s(:lvasgn, :result,
          s(:array,
            s(:splat,
              s(:lvar, :parent_io)),
            s(:lvar, :wait_thr))),
        s(:if,
          s(:defined?,
            s(:yield)),
          s(:kwbegin,
            s(:ensure,
              s(:return,
                s(:yield,
                  s(:splat,
                    s(:lvar, :result)))),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :parent_io), :each),
                  s(:args,
                    s(:arg, :io)),
                  s(:if,
                    s(:send,
                      s(:lvar, :io), :closed?), nil,
                    s(:send,
                      s(:lvar, :io), :close))),
                s(:send,
                  s(:lvar, :wait_thr), :join)))), nil),
        s(:lvar, :result))),
    s(:send, nil, :module_function,
      s(:sym, :popen_run)),
    s(:sclass,
      s(:self),
      s(:send, nil, :private,
        s(:sym, :popen_run))),
    s(:def, :capture3,
      s(:args,
        s(:restarg, :cmd),
        s(:kwoptarg, :stdin_data,
          s(:str, "")),
        s(:kwoptarg, :binmode,
          s(:false)),
        s(:kwrestarg, :opts)),
      s(:block,
        s(:send, nil, :popen3,
          s(:splat,
            s(:lvar, :cmd)),
          s(:lvar, :opts)),
        s(:args,
          s(:arg, :i),
          s(:arg, :o),
          s(:arg, :e),
          s(:arg, :t)),
        s(:begin,
          s(:if,
            s(:lvar, :binmode),
            s(:begin,
              s(:send,
                s(:lvar, :i), :binmode),
              s(:send,
                s(:lvar, :o), :binmode),
              s(:send,
                s(:lvar, :e), :binmode)), nil),
          s(:lvasgn, :out_reader,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:send,
                s(:lvar, :o), :read))),
          s(:lvasgn, :err_reader,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:send,
                s(:lvar, :e), :read))),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:lvar, :i), :write,
                s(:lvar, :stdin_data)),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :EPIPE)), nil, nil), nil)),
          s(:send,
            s(:lvar, :i), :close),
          s(:array,
            s(:send,
              s(:lvar, :out_reader), :value),
            s(:send,
              s(:lvar, :err_reader), :value),
            s(:send,
              s(:lvar, :t), :value))))),
    s(:send, nil, :module_function,
      s(:sym, :capture3)),
    s(:def, :capture2,
      s(:args,
        s(:restarg, :cmd),
        s(:kwoptarg, :stdin_data,
          s(:nil)),
        s(:kwoptarg, :binmode,
          s(:false)),
        s(:kwrestarg, :opts)),
      s(:block,
        s(:send, nil, :popen2,
          s(:splat,
            s(:lvar, :cmd)),
          s(:lvar, :opts)),
        s(:args,
          s(:arg, :i),
          s(:arg, :o),
          s(:arg, :t)),
        s(:begin,
          s(:if,
            s(:lvar, :binmode),
            s(:begin,
              s(:send,
                s(:lvar, :i), :binmode),
              s(:send,
                s(:lvar, :o), :binmode)), nil),
          s(:lvasgn, :out_reader,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:send,
                s(:lvar, :o), :read))),
          s(:if,
            s(:lvar, :stdin_data),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:lvar, :i), :write,
                  s(:lvar, :stdin_data)),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :Errno), :EPIPE)), nil, nil), nil)), nil),
          s(:send,
            s(:lvar, :i), :close),
          s(:array,
            s(:send,
              s(:lvar, :out_reader), :value),
            s(:send,
              s(:lvar, :t), :value))))),
    s(:send, nil, :module_function,
      s(:sym, :capture2)),
    s(:def, :capture2e,
      s(:args,
        s(:restarg, :cmd),
        s(:kwoptarg, :stdin_data,
          s(:nil)),
        s(:kwoptarg, :binmode,
          s(:false)),
        s(:kwrestarg, :opts)),
      s(:block,
        s(:send, nil, :popen2e,
          s(:splat,
            s(:lvar, :cmd)),
          s(:lvar, :opts)),
        s(:args,
          s(:arg, :i),
          s(:arg, :oe),
          s(:arg, :t)),
        s(:begin,
          s(:if,
            s(:lvar, :binmode),
            s(:begin,
              s(:send,
                s(:lvar, :i), :binmode),
              s(:send,
                s(:lvar, :oe), :binmode)), nil),
          s(:lvasgn, :outerr_reader,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:send,
                s(:lvar, :oe), :read))),
          s(:if,
            s(:lvar, :stdin_data),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:lvar, :i), :write,
                  s(:lvar, :stdin_data)),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :Errno), :EPIPE)), nil, nil), nil)), nil),
          s(:send,
            s(:lvar, :i), :close),
          s(:array,
            s(:send,
              s(:lvar, :outerr_reader), :value),
            s(:send,
              s(:lvar, :t), :value))))),
    s(:send, nil, :module_function,
      s(:sym, :capture2e)),
    s(:def, :pipeline_rw,
      s(:args,
        s(:restarg, :cmds),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :in_r),
            s(:lvasgn, :in_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :in),
          s(:lvar, :in_r)),
        s(:send,
          s(:lvar, :in_w), :sync=,
          s(:true)),
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :out_r),
            s(:lvasgn, :out_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :out),
          s(:lvar, :out_w)),
        s(:send, nil, :pipeline_run,
          s(:lvar, :cmds),
          s(:lvar, :opts),
          s(:array,
            s(:lvar, :in_r),
            s(:lvar, :out_w)),
          s(:array,
            s(:lvar, :in_w),
            s(:lvar, :out_r)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:send, nil, :module_function,
      s(:sym, :pipeline_rw)),
    s(:def, :pipeline_r,
      s(:args,
        s(:restarg, :cmds),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :out_r),
            s(:lvasgn, :out_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :out),
          s(:lvar, :out_w)),
        s(:send, nil, :pipeline_run,
          s(:lvar, :cmds),
          s(:lvar, :opts),
          s(:array,
            s(:lvar, :out_w)),
          s(:array,
            s(:lvar, :out_r)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:send, nil, :module_function,
      s(:sym, :pipeline_r)),
    s(:def, :pipeline_w,
      s(:args,
        s(:restarg, :cmds),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :in_r),
            s(:lvasgn, :in_w)),
          s(:send,
            s(:const, nil, :IO), :pipe)),
        s(:send,
          s(:lvar, :opts), :[]=,
          s(:sym, :in),
          s(:lvar, :in_r)),
        s(:send,
          s(:lvar, :in_w), :sync=,
          s(:true)),
        s(:send, nil, :pipeline_run,
          s(:lvar, :cmds),
          s(:lvar, :opts),
          s(:array,
            s(:lvar, :in_r)),
          s(:array,
            s(:lvar, :in_w)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:send, nil, :module_function,
      s(:sym, :pipeline_w)),
    s(:def, :pipeline_start,
      s(:args,
        s(:restarg, :cmds),
        s(:kwrestarg, :opts),
        s(:blockarg, :block)),
      s(:if,
        s(:lvar, :block),
        s(:send, nil, :pipeline_run,
          s(:lvar, :cmds),
          s(:lvar, :opts),
          s(:array),
          s(:array),
          s(:block_pass,
            s(:lvar, :block))),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :ts)),
            s(:send, nil, :pipeline_run,
              s(:lvar, :cmds),
              s(:lvar, :opts),
              s(:array),
              s(:array))),
          s(:lvar, :ts)))),
    s(:send, nil, :module_function,
      s(:sym, :pipeline_start)),
    s(:def, :pipeline,
      s(:args,
        s(:restarg, :cmds),
        s(:kwrestarg, :opts)),
      s(:block,
        s(:send, nil, :pipeline_run,
          s(:lvar, :cmds),
          s(:lvar, :opts),
          s(:array),
          s(:array)),
        s(:args,
          s(:arg, :ts)),
        s(:block,
          s(:send,
            s(:lvar, :ts), :map),
          s(:args,
            s(:arg, :t)),
          s(:send,
            s(:lvar, :t), :value)))),
    s(:send, nil, :module_function,
      s(:sym, :pipeline)),
    s(:def, :pipeline_run,
      s(:args,
        s(:arg, :cmds),
        s(:arg, :pipeline_opts),
        s(:arg, :child_io),
        s(:arg, :parent_io)),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :cmds), :empty?),
          s(:send, nil, :raise,
            s(:const, nil, :ArgumentError),
            s(:str, "no commands")), nil),
        s(:lvasgn, :opts_base,
          s(:send,
            s(:lvar, :pipeline_opts), :dup)),
        s(:send,
          s(:lvar, :opts_base), :delete,
          s(:sym, :in)),
        s(:send,
          s(:lvar, :opts_base), :delete,
          s(:sym, :out)),
        s(:lvasgn, :wait_thrs,
          s(:array)),
        s(:lvasgn, :r,
          s(:nil)),
        s(:block,
          s(:send,
            s(:lvar, :cmds), :each_with_index),
          s(:args,
            s(:arg, :cmd),
            s(:arg, :i)),
          s(:begin,
            s(:lvasgn, :cmd_opts,
              s(:send,
                s(:lvar, :opts_base), :dup)),
            s(:if,
              s(:send,
                s(:const, nil, :String), :===,
                s(:lvar, :cmd)),
              s(:lvasgn, :cmd,
                s(:array,
                  s(:lvar, :cmd))),
              s(:if,
                s(:send,
                  s(:const, nil, :Hash), :===,
                  s(:send,
                    s(:lvar, :cmd), :last)),
                s(:send,
                  s(:lvar, :cmd_opts), :update,
                  s(:send,
                    s(:lvar, :cmd), :pop)), nil)),
            s(:if,
              s(:send,
                s(:lvar, :i), :==,
                s(:int, 0)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :cmd_opts), :include?,
                    s(:sym, :in)), :!),
                s(:if,
                  s(:send,
                    s(:lvar, :pipeline_opts), :include?,
                    s(:sym, :in)),
                  s(:send,
                    s(:lvar, :cmd_opts), :[]=,
                    s(:sym, :in),
                    s(:send,
                      s(:lvar, :pipeline_opts), :[],
                      s(:sym, :in))), nil), nil),
              s(:send,
                s(:lvar, :cmd_opts), :[]=,
                s(:sym, :in),
                s(:lvar, :r))),
            s(:if,
              s(:send,
                s(:lvar, :i), :!=,
                s(:send,
                  s(:send,
                    s(:lvar, :cmds), :length), :-,
                  s(:int, 1))),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :r2),
                    s(:lvasgn, :w2)),
                  s(:send,
                    s(:const, nil, :IO), :pipe)),
                s(:send,
                  s(:lvar, :cmd_opts), :[]=,
                  s(:sym, :out),
                  s(:lvar, :w2))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :cmd_opts), :include?,
                    s(:sym, :out)), :!),
                s(:if,
                  s(:send,
                    s(:lvar, :pipeline_opts), :include?,
                    s(:sym, :out)),
                  s(:send,
                    s(:lvar, :cmd_opts), :[]=,
                    s(:sym, :out),
                    s(:send,
                      s(:lvar, :pipeline_opts), :[],
                      s(:sym, :out))), nil), nil)),
            s(:lvasgn, :pid,
              s(:send, nil, :spawn,
                s(:splat,
                  s(:lvar, :cmd)),
                s(:lvar, :cmd_opts))),
            s(:send,
              s(:lvar, :wait_thrs), :<<,
              s(:send,
                s(:const, nil, :Process), :detach,
                s(:lvar, :pid))),
            s(:if,
              s(:lvar, :r),
              s(:send,
                s(:lvar, :r), :close), nil),
            s(:if,
              s(:lvar, :w2),
              s(:send,
                s(:lvar, :w2), :close), nil),
            s(:lvasgn, :r,
              s(:lvar, :r2)))),
        s(:lvasgn, :result,
          s(:send,
            s(:lvar, :parent_io), :+,
            s(:array,
              s(:lvar, :wait_thrs)))),
        s(:block,
          s(:send,
            s(:lvar, :child_io), :each),
          s(:args,
            s(:arg, :io)),
          s(:send,
            s(:lvar, :io), :close)),
        s(:if,
          s(:defined?,
            s(:yield)),
          s(:kwbegin,
            s(:ensure,
              s(:return,
                s(:yield,
                  s(:splat,
                    s(:lvar, :result)))),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :parent_io), :each),
                  s(:args,
                    s(:arg, :io)),
                  s(:if,
                    s(:send,
                      s(:lvar, :io), :closed?), nil,
                    s(:send,
                      s(:lvar, :io), :close))),
                s(:block,
                  s(:send,
                    s(:lvar, :wait_thrs), :each),
                  s(:args,
                    s(:arg, :t)),
                  s(:send,
                    s(:lvar, :t), :join))))), nil),
        s(:lvar, :result))),
    s(:send, nil, :module_function,
      s(:sym, :pipeline_run)),
    s(:sclass,
      s(:self),
      s(:send, nil, :private,
        s(:sym, :pipeline_run)))))
