s(:begin,
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:class,
    s(:const,
      s(:const, nil, :OptionParser), :AC),
    s(:const, nil, :OptionParser),
    s(:begin,
      s(:send, nil, :private),
      s(:def, :_check_ac_args,
        s(:args,
          s(:arg, :name),
          s(:arg, :block)),
        s(:begin,
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "\\A\\w[-\\w]*\\z"),
                s(:regopt)),
              s(:lvar, :name)), nil,
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:lvar, :name))),
          s(:if,
            s(:lvar, :block), nil,
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:str, "no block given"),
              s(:send,
                s(:const, nil, :ParseError), :filter_backtrace,
                s(:send, nil, :caller)))))),
      s(:def, :_ac_arg_enable,
        s(:args,
          s(:arg, :prefix),
          s(:arg, :name),
          s(:arg, :help_string),
          s(:arg, :block)),
        s(:begin,
          s(:send, nil, :_check_ac_args,
            s(:lvar, :name),
            s(:lvar, :block)),
          s(:lvasgn, :sdesc,
            s(:array)),
          s(:lvasgn, :ldesc,
            s(:array,
              s(:dstr,
                s(:str, "--"),
                s(:begin,
                  s(:lvar, :prefix)),
                s(:str, "-"),
                s(:begin,
                  s(:lvar, :name))))),
          s(:lvasgn, :desc,
            s(:array,
              s(:lvar, :help_string))),
          s(:lvasgn, :q,
            s(:send,
              s(:lvar, :name), :downcase)),
          s(:lvasgn, :enable,
            s(:send,
              s(:const,
                s(:const, nil, :Switch), :NoArgument), :new,
              s(:nil),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:true)),
              s(:lvar, :sdesc),
              s(:lvar, :ldesc),
              s(:nil),
              s(:lvar, :desc),
              s(:lvar, :block))),
          s(:lvasgn, :disable,
            s(:send,
              s(:const,
                s(:const, nil, :Switch), :NoArgument), :new,
              s(:nil),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:false)),
              s(:lvar, :sdesc),
              s(:lvar, :ldesc),
              s(:nil),
              s(:lvar, :desc),
              s(:lvar, :block))),
          s(:send,
            s(:send, nil, :top), :append,
            s(:lvar, :enable),
            s(:array),
            s(:array,
              s(:send,
                s(:str, "enable-"), :+,
                s(:lvar, :q))),
            s(:lvar, :disable),
            s(:array,
              s(:send,
                s(:str, "disable-"), :+,
                s(:lvar, :q)))),
          s(:lvar, :enable))),
      s(:send, nil, :public),
      s(:def, :ac_arg_enable,
        s(:args,
          s(:arg, :name),
          s(:arg, :help_string),
          s(:blockarg, :block)),
        s(:send, nil, :_ac_arg_enable,
          s(:str, "enable"),
          s(:lvar, :name),
          s(:lvar, :help_string),
          s(:lvar, :block))),
      s(:def, :ac_arg_disable,
        s(:args,
          s(:arg, :name),
          s(:arg, :help_string),
          s(:blockarg, :block)),
        s(:send, nil, :_ac_arg_enable,
          s(:str, "disable"),
          s(:lvar, :name),
          s(:lvar, :help_string),
          s(:lvar, :block))),
      s(:def, :ac_arg_with,
        s(:args,
          s(:arg, :name),
          s(:arg, :help_string),
          s(:blockarg, :block)),
        s(:begin,
          s(:send, nil, :_check_ac_args,
            s(:lvar, :name),
            s(:lvar, :block)),
          s(:lvasgn, :sdesc,
            s(:array)),
          s(:lvasgn, :ldesc,
            s(:array,
              s(:dstr,
                s(:str, "--with-"),
                s(:begin,
                  s(:lvar, :name))))),
          s(:lvasgn, :desc,
            s(:array,
              s(:lvar, :help_string))),
          s(:lvasgn, :q,
            s(:send,
              s(:lvar, :name), :downcase)),
          s(:lvasgn, :with,
            s(:send,
              s(:const,
                s(:const, nil, :Switch), :PlacedArgument), :new,
              s(:splat,
                s(:send, nil, :search,
                  s(:sym, :atype),
                  s(:const, nil, :String))),
              s(:lvar, :sdesc),
              s(:lvar, :ldesc),
              s(:nil),
              s(:lvar, :desc),
              s(:lvar, :block))),
          s(:lvasgn, :without,
            s(:send,
              s(:const,
                s(:const, nil, :Switch), :NoArgument), :new,
              s(:nil),
              s(:block,
                s(:send, nil, :proc),
                s(:args), nil),
              s(:lvar, :sdesc),
              s(:lvar, :ldesc),
              s(:nil),
              s(:lvar, :desc),
              s(:lvar, :block))),
          s(:send,
            s(:send, nil, :top), :append,
            s(:lvar, :with),
            s(:array),
            s(:array,
              s(:send,
                s(:str, "with-"), :+,
                s(:lvar, :q))),
            s(:lvar, :without),
            s(:array,
              s(:send,
                s(:str, "without-"), :+,
                s(:lvar, :q)))),
          s(:lvar, :with))))))
