s(:sclass,
  s(:const, nil, :OptionParser),
  s(:begin,
    s(:def, :show_version,
      s(:args,
        s(:restarg, :pkgs)),
      s(:begin,
        s(:lvasgn, :progname,
          s(:send,
            s(:send,
              s(:const, nil, :ARGV), :options), :program_name)),
        s(:lvasgn, :result,
          s(:false)),
        s(:lvasgn, :show,
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :klass),
              s(:arg, :cname),
              s(:arg, :version)),
            s(:begin,
              s(:lvasgn, :str,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :progname)))),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :klass), :==,
                    s(:const,
                      s(:cbase), :Object)),
                  s(:send,
                    s(:lvar, :cname), :==,
                    s(:sym, :VERSION))), nil,
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:const, nil, :Array), :===,
                      s(:lvar, :version)),
                    s(:lvasgn, :version,
                      s(:send,
                        s(:lvar, :version), :join,
                        s(:str, "."))), nil),
                  s(:if,
                    s(:send,
                      s(:lvar, :klass), :==,
                      s(:const, nil, :Object)), nil,
                    s(:send,
                      s(:lvar, :str), :<<,
                      s(:dstr,
                        s(:str, ": "),
                        s(:begin,
                          s(:lvar, :klass))))),
                  s(:send,
                    s(:lvar, :str), :<<,
                    s(:dstr,
                      s(:str, " version "),
                      s(:begin,
                        s(:lvar, :version)))))),
              s(:block,
                s(:send,
                  s(:array,
                    s(:sym, :Release),
                    s(:sym, :RELEASE)), :find),
                s(:args,
                  s(:arg, :rel)),
                s(:if,
                  s(:send,
                    s(:lvar, :klass), :const_defined?,
                    s(:lvar, :rel)),
                  s(:send,
                    s(:lvar, :str), :<<,
                    s(:dstr,
                      s(:str, " ("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :klass), :const_get,
                          s(:lvar, :rel))),
                      s(:str, ")"))), nil)),
              s(:send, nil, :puts,
                s(:lvar, :str)),
              s(:lvasgn, :result,
                s(:true))))),
        s(:if,
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :pkgs), :size), :==,
              s(:int, 1)),
            s(:send,
              s(:send,
                s(:lvar, :pkgs), :[],
                s(:int, 0)), :==,
              s(:str, "all"))),
          s(:block,
            s(:send,
              s(:self), :search_const,
              s(:const,
                s(:cbase), :Object),
              s(:regexp,
                s(:str, "\\AV(?:ERSION|ersion)\\z"),
                s(:regopt))),
            s(:args,
              s(:arg, :klass),
              s(:arg, :cname),
              s(:arg, :version)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :cname), :[],
                    s(:int, 1)), :==,
                  s(:str, "e")),
                s(:send,
                  s(:lvar, :klass), :const_defined?,
                  s(:sym, :Version))), nil,
              s(:send,
                s(:lvar, :show), :call,
                s(:lvar, :klass),
                s(:send,
                  s(:lvar, :cname), :intern),
                s(:lvar, :version)))),
          s(:block,
            s(:send,
              s(:lvar, :pkgs), :each),
            s(:args,
              s(:arg, :pkg)),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :pkg,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :pkg), :split,
                          s(:regexp,
                            s(:str, "::|/"),
                            s(:regopt))), :inject,
                        s(:const,
                          s(:cbase), :Object)),
                      s(:args,
                        s(:arg, :m),
                        s(:arg, :c)),
                      s(:send,
                        s(:lvar, :m), :const_get,
                        s(:lvar, :c)))),
                  s(:lvasgn, :v,
                    s(:case, nil,
                      s(:when,
                        s(:send,
                          s(:lvar, :pkg), :const_defined?,
                          s(:sym, :Version)),
                        s(:send,
                          s(:lvar, :pkg), :const_get,
                          s(:lvasgn, :n,
                            s(:sym, :Version)))),
                      s(:when,
                        s(:send,
                          s(:lvar, :pkg), :const_defined?,
                          s(:sym, :VERSION)),
                        s(:send,
                          s(:lvar, :pkg), :const_get,
                          s(:lvasgn, :n,
                            s(:sym, :VERSION)))),
                      s(:begin,
                        s(:lvasgn, :n,
                          s(:nil)),
                        s(:str, "unknown")))),
                  s(:send,
                    s(:lvar, :show), :call,
                    s(:lvar, :pkg),
                    s(:lvar, :n),
                    s(:lvar, :v))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NameError)), nil, nil), nil)))),
        s(:lvar, :result))),
    s(:def, :each_const,
      s(:args,
        s(:arg, :path),
        s(:optarg, :base,
          s(:const,
            s(:cbase), :Object))),
      s(:block,
        s(:send,
          s(:send,
            s(:lvar, :path), :split,
            s(:regexp,
              s(:str, "::|/"),
              s(:regopt))), :inject,
          s(:lvar, :base)),
        s(:args,
          s(:arg, :klass),
          s(:arg, :name)),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Module), :===,
              s(:lvar, :klass)), nil,
            s(:send, nil, :raise,
              s(:const, nil, :NameError),
              s(:lvar, :path))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :klass), :constants), :grep,
              s(:regexp,
                s(:begin,
                  s(:lvar, :name)),
                s(:regopt, :i))),
            s(:args,
              s(:arg, :c)),
            s(:begin,
              s(:or,
                s(:send,
                  s(:lvar, :klass), :const_defined?,
                  s(:lvar, :c)),
                s(:next)),
              s(:send,
                s(:lvar, :klass), :const_get,
                s(:lvar, :c))))))),
    s(:def, :search_const,
      s(:args,
        s(:arg, :klass),
        s(:arg, :name)),
      s(:begin,
        s(:lvasgn, :klasses,
          s(:array,
            s(:lvar, :klass))),
        s(:while,
          s(:lvasgn, :klass,
            s(:send,
              s(:lvar, :klasses), :shift)),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :klass), :constants), :each),
            s(:args,
              s(:arg, :cname)),
            s(:begin,
              s(:or,
                s(:send,
                  s(:lvar, :klass), :const_defined?,
                  s(:lvar, :cname)),
                s(:next)),
              s(:lvasgn, :const,
                s(:send,
                  s(:lvar, :klass), :const_get,
                  s(:lvar, :cname))),
              s(:if,
                s(:send,
                  s(:lvar, :name), :===,
                  s(:lvar, :cname)),
                s(:yield,
                  s(:lvar, :klass),
                  s(:lvar, :cname),
                  s(:lvar, :const)), nil),
              s(:if,
                s(:and,
                  s(:send,
                    s(:const, nil, :Module), :===,
                    s(:lvar, :const)),
                  s(:send,
                    s(:lvar, :const), :!=,
                    s(:const,
                      s(:cbase), :Object))),
                s(:send,
                  s(:lvar, :klasses), :<<,
                  s(:lvar, :const)), nil))))))))
