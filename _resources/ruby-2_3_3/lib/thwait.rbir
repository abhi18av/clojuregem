s(:begin,
  s(:send, nil, :require,
    s(:str, "thread.rb")),
  s(:send, nil, :require,
    s(:str, "e2mmap.rb")),
  s(:class,
    s(:const, nil, :ThreadsWait), nil,
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :Exception2MessageMapper)),
      s(:send, nil, :def_exception,
        s(:str, "ErrNoWaitingThread"),
        s(:str, "No threads for waiting.")),
      s(:send, nil, :def_exception,
        s(:str, "ErrNoFinishedThread"),
        s(:str, "No finished threads.")),
      s(:defs,
        s(:const, nil, :ThreadsWait), :all_waits,
        s(:args,
          s(:restarg, :threads)),
        s(:begin,
          s(:lvasgn, :tw,
            s(:send,
              s(:const, nil, :ThreadsWait), :new,
              s(:splat,
                s(:lvar, :threads)))),
          s(:if,
            s(:send, nil, :block_given?),
            s(:block,
              s(:send,
                s(:lvar, :tw), :all_waits),
              s(:args,
                s(:arg, :th)),
              s(:yield,
                s(:lvar, :th))),
            s(:send,
              s(:lvar, :tw), :all_waits)))),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :threads)),
        s(:begin,
          s(:ivasgn, :@threads,
            s(:array)),
          s(:ivasgn, :@wait_queue,
            s(:send,
              s(:const, nil, :Queue), :new)),
          s(:if,
            s(:send,
              s(:lvar, :threads), :empty?), nil,
            s(:send, nil, :join_nowait,
              s(:splat,
                s(:lvar, :threads)))))),
      s(:send, nil, :attr_reader,
        s(:sym, :threads)),
      s(:def, :empty?,
        s(:args),
        s(:send,
          s(:ivar, :@threads), :empty?)),
      s(:def, :finished?,
        s(:args),
        s(:send,
          s(:send,
            s(:ivar, :@wait_queue), :empty?), :!)),
      s(:def, :join,
        s(:args,
          s(:restarg, :threads)),
        s(:begin,
          s(:send, nil, :join_nowait,
            s(:splat,
              s(:lvar, :threads))),
          s(:send, nil, :next_wait))),
      s(:def, :join_nowait,
        s(:args,
          s(:restarg, :threads)),
        s(:begin,
          s(:send,
            s(:lvar, :threads), :flatten!),
          s(:send,
            s(:ivar, :@threads), :concat,
            s(:lvar, :threads)),
          s(:for,
            s(:lvasgn, :th),
            s(:lvar, :threads),
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :start,
                s(:lvar, :th)),
              s(:args,
                s(:arg, :t)),
              s(:kwbegin,
                s(:ensure,
                  s(:send,
                    s(:lvar, :t), :join),
                  s(:send,
                    s(:ivar, :@wait_queue), :push,
                    s(:lvar, :t)))))))),
      s(:def, :next_wait,
        s(:args,
          s(:optarg, :nonblock,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@threads), :empty?),
            s(:send,
              s(:const, nil, :ThreadsWait), :fail,
              s(:const, nil, :ErrNoWaitingThread)), nil),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send,
                  s(:ivar, :@threads), :delete,
                  s(:lvasgn, :th,
                    s(:send,
                      s(:ivar, :@wait_queue), :pop,
                      s(:lvar, :nonblock)))),
                s(:lvar, :th)),
              s(:resbody,
                s(:array,
                  s(:const, nil, :ThreadError)), nil,
                s(:send,
                  s(:const, nil, :ThreadsWait), :fail,
                  s(:const, nil, :ErrNoFinishedThread))), nil)))),
      s(:def, :all_waits,
        s(:args),
        s(:until,
          s(:send,
            s(:ivar, :@threads), :empty?),
          s(:begin,
            s(:lvasgn, :th,
              s(:send, nil, :next_wait)),
            s(:if,
              s(:send, nil, :block_given?),
              s(:yield,
                s(:lvar, :th)), nil)))))),
  s(:casgn, nil, :ThWait,
    s(:const, nil, :ThreadsWait)))
