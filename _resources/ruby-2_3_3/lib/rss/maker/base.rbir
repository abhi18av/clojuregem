s(:begin,
  s(:send, nil, :require,
    s(:str, "forwardable")),
  s(:send, nil, :require,
    s(:str, "rss/rss")),
  s(:module,
    s(:const, nil, :RSS),
    s(:module,
      s(:const, nil, :Maker),
      s(:begin,
        s(:class,
          s(:const, nil, :Base), nil,
          s(:begin,
            s(:send, nil, :extend,
              s(:const,
                s(:const, nil, :Utils), :InheritedReader)),
            s(:casgn, nil, :OTHER_ELEMENTS,
              s(:array)),
            s(:casgn, nil, :NEED_INITIALIZE_VARIABLES,
              s(:array)),
            s(:sclass,
              s(:self),
              s(:begin,
                s(:def, :other_elements,
                  s(:args),
                  s(:send, nil, :inherited_array_reader,
                    s(:str, "OTHER_ELEMENTS"))),
                s(:def, :need_initialize_variables,
                  s(:args),
                  s(:send, nil, :inherited_array_reader,
                    s(:str, "NEED_INITIALIZE_VARIABLES"))),
                s(:def, :inherited_base,
                  s(:args),
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:cbase), :RSS), :Maker), :Base)),
                s(:def, :inherited,
                  s(:args,
                    s(:arg, :subclass)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :subclass), :const_set,
                      s(:sym, :OTHER_ELEMENTS),
                      s(:array)),
                    s(:send,
                      s(:lvar, :subclass), :const_set,
                      s(:sym, :NEED_INITIALIZE_VARIABLES),
                      s(:array)))),
                s(:def, :add_other_element,
                  s(:args,
                    s(:arg, :variable_name)),
                  s(:send,
                    s(:const,
                      s(:self), :OTHER_ELEMENTS), :<<,
                    s(:lvar, :variable_name))),
                s(:def, :add_need_initialize_variable,
                  s(:args,
                    s(:arg, :variable_name),
                    s(:optarg, :init_value,
                      s(:nil)),
                    s(:blockarg, :init_block)),
                  s(:begin,
                    s(:or_asgn,
                      s(:lvasgn, :init_value),
                      s(:lvar, :init_block)),
                    s(:send,
                      s(:const,
                        s(:self), :NEED_INITIALIZE_VARIABLES), :<<,
                      s(:array,
                        s(:lvar, :variable_name),
                        s(:lvar, :init_value))))),
                s(:def, :def_array_element,
                  s(:args,
                    s(:arg, :name),
                    s(:optarg, :plural,
                      s(:nil)),
                    s(:optarg, :klass_name,
                      s(:nil))),
                  s(:begin,
                    s(:send, nil, :include,
                      s(:const, nil, :Enumerable)),
                    s(:send, nil, :extend,
                      s(:const, nil, :Forwardable)),
                    s(:or_asgn,
                      s(:lvasgn, :plural),
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "s"))),
                    s(:or_asgn,
                      s(:lvasgn, :klass_name),
                      s(:send,
                        s(:const, nil, :Utils), :to_class_name,
                        s(:lvar, :name))),
                    s(:send, nil, :def_delegators,
                      s(:dstr,
                        s(:str, "@"),
                        s(:begin,
                          s(:lvar, :plural))),
                      s(:sym, :<<),
                      s(:sym, :[]),
                      s(:sym, :[]=),
                      s(:sym, :first),
                      s(:sym, :last)),
                    s(:send, nil, :def_delegators,
                      s(:dstr,
                        s(:str, "@"),
                        s(:begin,
                          s(:lvar, :plural))),
                      s(:sym, :push),
                      s(:sym, :pop),
                      s(:sym, :shift),
                      s(:sym, :unshift)),
                    s(:send, nil, :def_delegators,
                      s(:dstr,
                        s(:str, "@"),
                        s(:begin,
                          s(:lvar, :plural))),
                      s(:sym, :each),
                      s(:sym, :size),
                      s(:sym, :empty?),
                      s(:sym, :clear)),
                    s(:block,
                      s(:send, nil, :add_need_initialize_variable,
                        s(:lvar, :plural)),
                      s(:args),
                      s(:array)),
                    s(:send, nil, :module_eval,
                      s(:dstr,
                        s(:str, "            def new_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, " = self.class::"),
                        s(:begin,
                          s(:lvar, :klass_name)),
                        s(:str, ".new(@maker)\n"),
                        s(:str, "              @"),
                        s(:begin,
                          s(:lvar, :plural)),
                        s(:str, " << "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              if block_given?\n"),
                        s(:str, "                yield "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              else\n"),
                        s(:str, "                "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              end\n"),
                        s(:str, "            end\n"),
                        s(:str, "            alias new_child new_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "\n"),
                        s(:str, "            def to_feed(*args)\n"),
                        s(:str, "              @"),
                        s(:begin,
                          s(:lvar, :plural)),
                        s(:str, ".each do |"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "|\n"),
                        s(:str, "                "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, ".to_feed(*args)\n"),
                        s(:str, "              end\n"),
                        s(:str, "            end\n"),
                        s(:str, "\n"),
                        s(:str, "            def replace(elements)\n"),
                        s(:str, "              @"),
                        s(:begin,
                          s(:lvar, :plural)),
                        s(:str, ".replace(elements.to_a)\n"),
                        s(:str, "            end\n")),
                      s(:str, "(string)"),
                      s(:send,
                        s(:int, 53), :+,
                        s(:int, 1))))),
                s(:def, :def_classed_element_without_accessor,
                  s(:args,
                    s(:arg, :name),
                    s(:optarg, :class_name,
                      s(:nil))),
                  s(:begin,
                    s(:or_asgn,
                      s(:lvasgn, :class_name),
                      s(:send,
                        s(:const, nil, :Utils), :to_class_name,
                        s(:lvar, :name))),
                    s(:send, nil, :add_other_element,
                      s(:lvar, :name)),
                    s(:block,
                      s(:send, nil, :add_need_initialize_variable,
                        s(:lvar, :name)),
                      s(:args,
                        s(:arg, :object)),
                      s(:send,
                        s(:lvar, :object), :send,
                        s(:dstr,
                          s(:str, "make_"),
                          s(:begin,
                            s(:lvar, :name))))),
                    s(:send, nil, :module_eval,
                      s(:dstr,
                        s(:str, "            private\n"),
                        s(:str, "            def setup_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "(feed, current)\n"),
                        s(:str, "              @"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, ".to_feed(feed, current)\n"),
                        s(:str, "            end\n"),
                        s(:str, "\n"),
                        s(:str, "            def make_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              self.class::"),
                        s(:begin,
                          s(:lvar, :class_name)),
                        s(:str, ".new(@maker)\n"),
                        s(:str, "            end\n")),
                      s(:str, "(string)"),
                      s(:send,
                        s(:int, 83), :+,
                        s(:int, 1))))),
                s(:def, :def_classed_element,
                  s(:args,
                    s(:arg, :name),
                    s(:optarg, :class_name,
                      s(:nil)),
                    s(:optarg, :attribute_name,
                      s(:nil))),
                  s(:begin,
                    s(:send, nil, :def_classed_element_without_accessor,
                      s(:lvar, :name),
                      s(:lvar, :class_name)),
                    s(:if,
                      s(:lvar, :attribute_name),
                      s(:send, nil, :module_eval,
                        s(:dstr,
                          s(:str, "              def "),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "\n"),
                          s(:str, "                if block_given?\n"),
                          s(:str, "                  yield(@"),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, ")\n"),
                          s(:str, "                else\n"),
                          s(:str, "                  @"),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "."),
                          s(:begin,
                            s(:lvar, :attribute_name)),
                          s(:str, "\n"),
                          s(:str, "                end\n"),
                          s(:str, "              end\n"),
                          s(:str, "\n"),
                          s(:str, "              def "),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "=(new_value)\n"),
                          s(:str, "                @"),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "."),
                          s(:begin,
                            s(:lvar, :attribute_name)),
                          s(:str, " = new_value\n"),
                          s(:str, "              end\n")),
                        s(:str, "(string)"),
                        s(:send,
                          s(:int, 98), :+,
                          s(:int, 1))),
                      s(:send, nil, :attr_reader,
                        s(:lvar, :name))))),
                s(:def, :def_classed_elements,
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :attribute),
                    s(:optarg, :plural_class_name,
                      s(:nil)),
                    s(:optarg, :plural_name,
                      s(:nil)),
                    s(:optarg, :new_name,
                      s(:nil))),
                  s(:begin,
                    s(:or_asgn,
                      s(:lvasgn, :plural_name),
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "s"))),
                    s(:or_asgn,
                      s(:lvasgn, :new_name),
                      s(:lvar, :name)),
                    s(:send, nil, :def_classed_element,
                      s(:lvar, :plural_name),
                      s(:lvar, :plural_class_name)),
                    s(:lvasgn, :local_variable_name,
                      s(:dstr,
                        s(:str, "_"),
                        s(:begin,
                          s(:lvar, :name)))),
                    s(:lvasgn, :new_value_variable_name,
                      s(:str, "new_value")),
                    s(:lvasgn, :additional_setup_code,
                      s(:nil)),
                    s(:if,
                      s(:send, nil, :block_given?),
                      s(:lvasgn, :additional_setup_code,
                        s(:yield,
                          s(:lvar, :local_variable_name),
                          s(:lvar, :new_value_variable_name))), nil),
                    s(:send, nil, :module_eval,
                      s(:dstr,
                        s(:str, "            def "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              "),
                        s(:begin,
                          s(:lvar, :local_variable_name)),
                        s(:str, " = "),
                        s(:begin,
                          s(:lvar, :plural_name)),
                        s(:str, ".first\n"),
                        s(:str, "              "),
                        s(:begin,
                          s(:lvar, :local_variable_name)),
                        s(:str, " ? "),
                        s(:begin,
                          s(:lvar, :local_variable_name)),
                        s(:str, "."),
                        s(:begin,
                          s(:lvar, :attribute)),
                        s(:str, " : nil\n"),
                        s(:str, "            end\n"),
                        s(:str, "\n"),
                        s(:str, "            def "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "=("),
                        s(:begin,
                          s(:lvar, :new_value_variable_name)),
                        s(:str, ")\n"),
                        s(:str, "              "),
                        s(:begin,
                          s(:lvar, :local_variable_name)),
                        s(:str, " =\n"),
                        s(:str, "                "),
                        s(:begin,
                          s(:lvar, :plural_name)),
                        s(:str, ".first || "),
                        s(:begin,
                          s(:lvar, :plural_name)),
                        s(:str, ".new_"),
                        s(:begin,
                          s(:lvar, :new_name)),
                        s(:str, "\n"),
                        s(:str, "              "),
                        s(:begin,
                          s(:lvar, :additional_setup_code)),
                        s(:str, "\n"),
                        s(:str, "              "),
                        s(:begin,
                          s(:lvar, :local_variable_name)),
                        s(:str, "."),
                        s(:begin,
                          s(:lvar, :attribute)),
                        s(:str, " = "),
                        s(:begin,
                          s(:lvar, :new_value_variable_name)),
                        s(:str, "\n"),
                        s(:str, "            end\n")),
                      s(:str, "(string)"),
                      s(:send,
                        s(:int, 128), :+,
                        s(:int, 1))))),
                s(:def, :def_other_element,
                  s(:args,
                    s(:arg, :name)),
                  s(:begin,
                    s(:send, nil, :attr_accessor,
                      s(:lvar, :name)),
                    s(:send, nil, :def_other_element_without_accessor,
                      s(:lvar, :name)))),
                s(:def, :def_other_element_without_accessor,
                  s(:args,
                    s(:arg, :name)),
                  s(:begin,
                    s(:send, nil, :add_need_initialize_variable,
                      s(:lvar, :name)),
                    s(:send, nil, :add_other_element,
                      s(:lvar, :name)),
                    s(:send, nil, :module_eval,
                      s(:dstr,
                        s(:str, "            def setup_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "(feed, current)\n"),
                        s(:str, "              if !@"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, ".nil? and current.respond_to?(:"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "=)\n"),
                        s(:str, "                current."),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, " = @"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "\n"),
                        s(:str, "              end\n"),
                        s(:str, "            end\n")),
                      s(:str, "(string)"),
                      s(:send,
                        s(:int, 151), :+,
                        s(:int, 1))))),
                s(:def, :def_csv_element,
                  s(:args,
                    s(:arg, :name),
                    s(:optarg, :type,
                      s(:nil))),
                  s(:begin,
                    s(:send, nil, :def_other_element_without_accessor,
                      s(:lvar, :name)),
                    s(:send, nil, :attr_reader,
                      s(:lvar, :name)),
                    s(:lvasgn, :converter,
                      s(:str, "")),
                    s(:if,
                      s(:send,
                        s(:lvar, :type), :==,
                        s(:sym, :integer)),
                      s(:lvasgn, :converter,
                        s(:str, "{|v| Integer(v)}")), nil),
                    s(:send, nil, :module_eval,
                      s(:dstr,
                        s(:str, "            def "),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "=(value)\n"),
                        s(:str, "              @"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, " = Utils::CSV.parse(value)"),
                        s(:begin,
                          s(:lvar, :converter)),
                        s(:str, "\n"),
                        s(:str, "            end\n")),
                      s(:str, "(string)"),
                      s(:send,
                        s(:int, 167), :+,
                        s(:int, 1))))))),
            s(:send, nil, :attr_reader,
              s(:sym, :maker)),
            s(:def, :initialize,
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:ivasgn, :@maker,
                  s(:lvar, :maker)),
                s(:ivasgn, :@default_values_are_set,
                  s(:false)),
                s(:send, nil, :initialize_variables))),
            s(:def, :have_required_values?,
              s(:args),
              s(:send,
                s(:send, nil, :not_set_required_variables), :empty?)),
            s(:def, :variable_is_set?,
              s(:args),
              s(:block,
                s(:send,
                  s(:send, nil, :variables), :any?),
                s(:args,
                  s(:arg, :var)),
                s(:send,
                  s(:send,
                    s(:send, nil, :__send__,
                      s(:lvar, :var)), :nil?), :!))),
            s(:send, nil, :private),
            s(:def, :initialize_variables,
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:self), :class), :need_initialize_variables), :each),
                s(:args,
                  s(:arg, :variable_name),
                  s(:arg, :init_value)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :init_value), :nil?),
                    s(:lvasgn, :value,
                      s(:nil)),
                    s(:if,
                      s(:send,
                        s(:lvar, :init_value), :respond_to?,
                        s(:sym, :call)),
                      s(:lvasgn, :value,
                        s(:send,
                          s(:lvar, :init_value), :call,
                          s(:self))),
                      s(:if,
                        s(:send,
                          s(:lvar, :init_value), :is_a?,
                          s(:const, nil, :String)),
                        s(:lvasgn, :value,
                          s(:send, nil, :instance_eval,
                            s(:lvar, :init_value),
                            s(:str, "(string)"),
                            s(:int, 200))),
                        s(:lvasgn, :value,
                          s(:lvar, :init_value))))),
                  s(:send, nil, :instance_variable_set,
                    s(:dstr,
                      s(:str, "@"),
                      s(:begin,
                        s(:lvar, :variable_name))),
                    s(:lvar, :value))))),
            s(:def, :setup_other_elements,
              s(:args,
                s(:arg, :feed),
                s(:optarg, :current,
                  s(:nil))),
              s(:begin,
                s(:or_asgn,
                  s(:lvasgn, :current),
                  s(:send, nil, :current_element,
                    s(:lvar, :feed))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:self), :class), :other_elements), :each),
                  s(:args,
                    s(:arg, :element)),
                  s(:send, nil, :__send__,
                    s(:dstr,
                      s(:str, "setup_"),
                      s(:begin,
                        s(:lvar, :element))),
                    s(:lvar, :feed),
                    s(:lvar, :current))))),
            s(:def, :current_element,
              s(:args,
                s(:arg, :feed)),
              s(:lvar, :feed)),
            s(:def, :set_default_values,
              s(:args,
                s(:blockarg, :block)),
              s(:begin,
                s(:if,
                  s(:ivar, :@default_values_are_set),
                  s(:return,
                    s(:yield)), nil),
                s(:kwbegin,
                  s(:ensure,
                    s(:begin,
                      s(:ivasgn, :@default_values_are_set,
                        s(:true)),
                      s(:send, nil, :_set_default_values,
                        s(:block_pass,
                          s(:lvar, :block)))),
                    s(:ivasgn, :@default_values_are_set,
                      s(:false)))))),
            s(:def, :_set_default_values,
              s(:args,
                s(:blockarg, :block)),
              s(:yield)),
            s(:def, :setup_values,
              s(:args,
                s(:arg, :target)),
              s(:begin,
                s(:lvasgn, :set,
                  s(:false)),
                s(:if,
                  s(:send, nil, :have_required_values?),
                  s(:block,
                    s(:send,
                      s(:send, nil, :variables), :each),
                    s(:args,
                      s(:arg, :var)),
                    s(:begin,
                      s(:lvasgn, :setter,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :var)),
                          s(:str, "="))),
                      s(:if,
                        s(:send,
                          s(:lvar, :target), :respond_to?,
                          s(:lvar, :setter)),
                        s(:begin,
                          s(:lvasgn, :value,
                            s(:send, nil, :__send__,
                              s(:lvar, :var))),
                          s(:if,
                            s(:send,
                              s(:lvar, :value), :nil?), nil,
                            s(:begin,
                              s(:send,
                                s(:lvar, :target), :__send__,
                                s(:lvar, :setter),
                                s(:lvar, :value)),
                              s(:lvasgn, :set,
                                s(:true))))), nil))), nil),
                s(:lvar, :set))),
            s(:def, :set_parent,
              s(:args,
                s(:arg, :target),
                s(:arg, :parent)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :target), :class), :need_parent?),
                s(:send,
                  s(:lvar, :target), :parent=,
                  s(:lvar, :parent)), nil)),
            s(:def, :variables,
              s(:args),
              s(:block,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:self), :class), :need_initialize_variables), :find_all),
                    s(:args,
                      s(:arg, :name),
                      s(:arg, :init)),
                    s(:or,
                      s(:send,
                        s(:lvar, :init), :nil?),
                      s(:send,
                        s(:lvar, :init), :==,
                        s(:str, "nil")))), :collect),
                s(:args,
                  s(:arg, :name),
                  s(:arg, :init)),
                s(:lvar, :name))),
            s(:def, :not_set_required_variables,
              s(:args),
              s(:block,
                s(:send,
                  s(:send, nil, :required_variable_names), :find_all),
                s(:args,
                  s(:arg, :var)),
                s(:send,
                  s(:send, nil, :__send__,
                    s(:lvar, :var)), :nil?))),
            s(:def, :required_variables_are_set?,
              s(:args),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:send, nil, :required_variable_names), :each),
                  s(:args,
                    s(:arg, :var)),
                  s(:if,
                    s(:send,
                      s(:send, nil, :__send__,
                        s(:lvar, :var)), :nil?),
                    s(:return,
                      s(:false)), nil)),
                s(:true))))),
        s(:module,
          s(:const, nil, :AtomPersonConstructBase),
          s(:defs,
            s(:self), :append_features,
            s(:args,
              s(:arg, :klass)),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:lvar, :klass), :class_eval,
                s(:dstr,
                  s(:str, "          %w(name uri email).each do |element|\n"),
                  s(:str, "            attr_accessor element\n"),
                  s(:str, "            add_need_initialize_variable(element)\n"),
                  s(:str, "          end\n")),
                s(:str, "(string)"),
                s(:send,
                  s(:int, 283), :+,
                  s(:int, 1)))))),
        s(:module,
          s(:const, nil, :AtomTextConstructBase),
          s(:begin,
            s(:module,
              s(:const, nil, :EnsureXMLContent),
              s(:begin,
                s(:sclass,
                  s(:self),
                  s(:def, :included,
                    s(:args,
                      s(:arg, :base)),
                    s(:begin,
                      s(:zsuper),
                      s(:block,
                        s(:send,
                          s(:lvar, :base), :class_eval),
                        s(:args),
                        s(:begin,
                          s(:block,
                            s(:send,
                              s(:array,
                                s(:str, "type"),
                                s(:str, "content"),
                                s(:str, "xml_content")), :each),
                            s(:args,
                              s(:arg, :element)),
                            s(:begin,
                              s(:send, nil, :attr_reader,
                                s(:lvar, :element)),
                              s(:if,
                                s(:send,
                                  s(:lvar, :element), :!=,
                                  s(:str, "xml_content")),
                                s(:send, nil, :attr_writer,
                                  s(:lvar, :element)), nil),
                              s(:send, nil, :add_need_initialize_variable,
                                s(:lvar, :element)))),
                          s(:send, nil, :alias_method,
                            s(:sym, :xhtml),
                            s(:sym, :xml_content))))))),
                s(:def, :ensure_xml_content,
                  s(:args,
                    s(:arg, :content)),
                  s(:begin,
                    s(:lvasgn, :xhtml_uri,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:cbase), :RSS), :Atom), :XHTML_URI)),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:lvar, :content), :is_a?,
                          s(:const,
                            s(:const,
                              s(:const, nil, :RSS), :XML), :Element)),
                        s(:send,
                          s(:array,
                            s(:str, "div"),
                            s(:lvar, :xhtml_uri)), :==,
                          s(:array,
                            s(:send,
                              s(:lvar, :content), :name),
                            s(:send,
                              s(:lvar, :content), :uri)))), nil,
                      s(:begin,
                        s(:lvasgn, :children,
                          s(:lvar, :content)),
                        s(:if,
                          s(:send,
                            s(:lvar, :content), :is_a?,
                            s(:const, nil, :Array)), nil,
                          s(:lvasgn, :children,
                            s(:array,
                              s(:lvar, :children)))),
                        s(:lvasgn, :children,
                          s(:send, nil, :set_xhtml_uri_as_default_uri,
                            s(:lvar, :children))),
                        s(:lvasgn, :content,
                          s(:send,
                            s(:const,
                              s(:const,
                                s(:const, nil, :RSS), :XML), :Element), :new,
                            s(:str, "div"),
                            s(:nil),
                            s(:lvar, :xhtml_uri),
                            s(:hash,
                              s(:pair,
                                s(:str, "xmlns"),
                                s(:lvar, :xhtml_uri))),
                            s(:lvar, :children))))),
                    s(:lvar, :content))),
                s(:def, :xml_content=,
                  s(:args,
                    s(:arg, :content)),
                  s(:ivasgn, :@xml_content,
                    s(:send, nil, :ensure_xml_content,
                      s(:lvar, :content)))),
                s(:def, :xhtml=,
                  s(:args,
                    s(:arg, :content)),
                  s(:send,
                    s(:self), :xml_content=,
                    s(:lvar, :content))),
                s(:send, nil, :private),
                s(:def, :set_xhtml_uri_as_default_uri,
                  s(:args,
                    s(:arg, :children)),
                  s(:block,
                    s(:send,
                      s(:lvar, :children), :collect),
                    s(:args,
                      s(:arg, :child)),
                    s(:if,
                      s(:and,
                        s(:and,
                          s(:send,
                            s(:lvar, :child), :is_a?,
                            s(:const,
                              s(:const,
                                s(:const, nil, :RSS), :XML), :Element)),
                          s(:send,
                            s(:send,
                              s(:lvar, :child), :prefix), :nil?)),
                        s(:send,
                          s(:send,
                            s(:lvar, :child), :uri), :nil?)),
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :RSS), :XML), :Element), :new,
                        s(:send,
                          s(:lvar, :child), :name),
                        s(:nil),
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:cbase), :RSS), :Atom), :XHTML_URI),
                        s(:send,
                          s(:send,
                            s(:lvar, :child), :attributes), :dup),
                        s(:send, nil, :set_xhtml_uri_as_default_uri,
                          s(:send,
                            s(:lvar, :child), :children))),
                      s(:lvar, :child)))))),
            s(:defs,
              s(:self), :append_features,
              s(:args,
                s(:arg, :klass)),
              s(:begin,
                s(:zsuper),
                s(:block,
                  s(:send,
                    s(:lvar, :klass), :class_eval),
                  s(:args),
                  s(:send, nil, :include,
                    s(:const, nil, :EnsureXMLContent))))))),
        s(:module,
          s(:const, nil, :SetupDefaultDate),
          s(:begin,
            s(:send, nil, :private),
            s(:def, :_set_default_values,
              s(:args),
              s(:ensure,
                s(:begin,
                  s(:lvasgn, :keep,
                    s(:hash,
                      s(:pair,
                        s(:sym, :date),
                        s(:send, nil, :date)),
                      s(:pair,
                        s(:sym, :dc_dates),
                        s(:send,
                          s(:send,
                            s(:send, nil, :dc_dates), :to_a), :dup)))),
                  s(:lvasgn, :_date,
                    s(:send, nil, :_parse_date_if_needed,
                      s(:send, nil, :date))),
                  s(:if,
                    s(:and,
                      s(:lvar, :_date),
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:send, nil, :dc_dates), :any?),
                          s(:args,
                            s(:arg, :dc_date)),
                          s(:send,
                            s(:send,
                              s(:lvar, :dc_date), :value), :==,
                            s(:lvar, :_date))), :!)),
                    s(:begin,
                      s(:lvasgn, :dc_date,
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:send,
                                s(:self), :class), :DublinCoreDates), :DublinCoreDate), :new,
                          s(:self))),
                      s(:send,
                        s(:lvar, :dc_date), :value=,
                        s(:send,
                          s(:lvar, :_date), :dup)),
                      s(:send,
                        s(:send, nil, :dc_dates), :unshift,
                        s(:lvar, :dc_date))), nil),
                  s(:or_asgn,
                    s(:send,
                      s(:self), :date),
                    s(:send,
                      s(:self), :dc_date)),
                  s(:zsuper)),
                s(:begin,
                  s(:send,
                    s(:self), :date=,
                    s(:send,
                      s(:lvar, :keep), :[],
                      s(:sym, :date))),
                  s(:send,
                    s(:send, nil, :dc_dates), :replace,
                    s(:send,
                      s(:lvar, :keep), :[],
                      s(:sym, :dc_dates)))))),
            s(:def, :_parse_date_if_needed,
              s(:args,
                s(:arg, :date_value)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :date_value), :is_a?,
                    s(:const, nil, :String)),
                  s(:lvasgn, :date_value,
                    s(:send,
                      s(:const, nil, :Time), :parse,
                      s(:lvar, :date_value))), nil),
                s(:lvar, :date_value))))),
        s(:module,
          s(:const, nil, :SetupDefaultLanguage),
          s(:begin,
            s(:send, nil, :private),
            s(:def, :_set_default_values,
              s(:args),
              s(:ensure,
                s(:begin,
                  s(:lvasgn, :keep,
                    s(:hash,
                      s(:pair,
                        s(:sym, :dc_languages),
                        s(:send,
                          s(:send,
                            s(:send, nil, :dc_languages), :to_a), :dup)))),
                  s(:lvasgn, :_language,
                    s(:send, nil, :language)),
                  s(:if,
                    s(:and,
                      s(:lvar, :_language),
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:send, nil, :dc_languages), :any?),
                          s(:args,
                            s(:arg, :dc_language)),
                          s(:send,
                            s(:send,
                              s(:lvar, :dc_language), :value), :==,
                            s(:lvar, :_language))), :!)),
                    s(:begin,
                      s(:lvasgn, :dc_language,
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:send,
                                s(:self), :class), :DublinCoreLanguages), :DublinCoreLanguage), :new,
                          s(:self))),
                      s(:send,
                        s(:lvar, :dc_language), :value=,
                        s(:send,
                          s(:lvar, :_language), :dup)),
                      s(:send,
                        s(:send, nil, :dc_languages), :unshift,
                        s(:lvar, :dc_language))), nil),
                  s(:zsuper)),
                s(:send,
                  s(:send, nil, :dc_languages), :replace,
                  s(:send,
                    s(:lvar, :keep), :[],
                    s(:sym, :dc_languages))))))),
        s(:class,
          s(:const, nil, :RSSBase),
          s(:const, nil, :Base),
          s(:begin,
            s(:sclass,
              s(:self),
              s(:def, :make,
                s(:args,
                  s(:restarg, :args),
                  s(:blockarg, :block)),
                s(:send,
                  s(:send, nil, :new,
                    s(:splat,
                      s(:lvar, :args))), :make,
                  s(:block_pass,
                    s(:lvar, :block))))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "xml_stylesheets"),
                  s(:str, "channel"),
                  s(:str, "image"),
                  s(:str, "items"),
                  s(:str, "textinput")), :each),
              s(:args,
                s(:arg, :element)),
              s(:begin,
                s(:send, nil, :attr_reader,
                  s(:lvar, :element)),
                s(:block,
                  s(:send, nil, :add_need_initialize_variable,
                    s(:lvar, :element)),
                  s(:args,
                    s(:arg, :object)),
                  s(:send,
                    s(:lvar, :object), :send,
                    s(:dstr,
                      s(:str, "make_"),
                      s(:begin,
                        s(:lvar, :element))))),
                s(:send, nil, :module_eval,
                  s(:dstr,
                    s(:str, "          private\n"),
                    s(:str, "          def setup_"),
                    s(:begin,
                      s(:lvar, :element)),
                    s(:str, "(feed)\n"),
                    s(:str, "            @"),
                    s(:begin,
                      s(:lvar, :element)),
                    s(:str, ".to_feed(feed)\n"),
                    s(:str, "          end\n"),
                    s(:str, "\n"),
                    s(:str, "          def make_"),
                    s(:begin,
                      s(:lvar, :element)),
                    s(:str, "\n"),
                    s(:str, "            self.class::"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :Utils), :to_class_name,
                        s(:lvar, :element))),
                    s(:str, ".new(self)\n"),
                    s(:str, "          end\n")),
                  s(:str, "(string)"),
                  s(:send,
                    s(:int, 412), :+,
                    s(:int, 1))))),
            s(:send, nil, :attr_reader,
              s(:sym, :feed_version)),
            s(:send, nil, :alias_method,
              s(:sym, :rss_version),
              s(:sym, :feed_version)),
            s(:send, nil, :attr_accessor,
              s(:sym, :version),
              s(:sym, :encoding),
              s(:sym, :standalone)),
            s(:def, :initialize,
              s(:args,
                s(:arg, :feed_version)),
              s(:begin,
                s(:super,
                  s(:self)),
                s(:ivasgn, :@feed_type,
                  s(:nil)),
                s(:ivasgn, :@feed_subtype,
                  s(:nil)),
                s(:ivasgn, :@feed_version,
                  s(:lvar, :feed_version)),
                s(:ivasgn, :@version,
                  s(:str, "1.0")),
                s(:ivasgn, :@encoding,
                  s(:str, "UTF-8")),
                s(:ivasgn, :@standalone,
                  s(:nil)))),
            s(:def, :make,
              s(:args),
              s(:begin,
                s(:yield,
                  s(:self)),
                s(:send, nil, :to_feed))),
            s(:def, :to_feed,
              s(:args),
              s(:begin,
                s(:lvasgn, :feed,
                  s(:send, nil, :make_feed)),
                s(:send, nil, :setup_xml_stylesheets,
                  s(:lvar, :feed)),
                s(:send, nil, :setup_elements,
                  s(:lvar, :feed)),
                s(:send, nil, :setup_other_elements,
                  s(:lvar, :feed)),
                s(:send,
                  s(:lvar, :feed), :validate),
                s(:lvar, :feed))),
            s(:send, nil, :private),
            s(:send, nil, :remove_method,
              s(:sym, :make_xml_stylesheets)),
            s(:def, :make_xml_stylesheets,
              s(:args),
              s(:send,
                s(:const, nil, :XMLStyleSheets), :new,
                s(:self))))),
        s(:class,
          s(:const, nil, :XMLStyleSheets),
          s(:const, nil, :Base),
          s(:begin,
            s(:send, nil, :def_array_element,
              s(:str, "xml_stylesheet"),
              s(:nil),
              s(:str, "XMLStyleSheet")),
            s(:class,
              s(:const, nil, :XMLStyleSheet),
              s(:const, nil, :Base),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:cbase), :RSS), :XMLStyleSheet), :ATTRIBUTES), :each),
                  s(:args,
                    s(:arg, :attribute)),
                  s(:begin,
                    s(:send, nil, :attr_accessor,
                      s(:lvar, :attribute)),
                    s(:send, nil, :add_need_initialize_variable,
                      s(:lvar, :attribute)))),
                s(:def, :to_feed,
                  s(:args,
                    s(:arg, :feed)),
                  s(:begin,
                    s(:lvasgn, :xss,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:cbase), :RSS), :XMLStyleSheet), :new)),
                    s(:send, nil, :guess_type_if_need,
                      s(:lvar, :xss)),
                    s(:lvasgn, :set,
                      s(:send, nil, :setup_values,
                        s(:lvar, :xss))),
                    s(:if,
                      s(:lvar, :set),
                      s(:send,
                        s(:send,
                          s(:lvar, :feed), :xml_stylesheets), :<<,
                        s(:lvar, :xss)), nil))),
                s(:send, nil, :private),
                s(:def, :guess_type_if_need,
                  s(:args,
                    s(:arg, :xss)),
                  s(:if,
                    s(:send,
                      s(:ivar, :@type), :nil?),
                    s(:begin,
                      s(:send,
                        s(:lvar, :xss), :href=,
                        s(:ivar, :@href)),
                      s(:ivasgn, :@type,
                        s(:send,
                          s(:lvar, :xss), :type))), nil)),
                s(:def, :required_variable_names,
                  s(:args),
                  s(:array,
                    s(:str, "href"),
                    s(:str, "type"))))))),
        s(:class,
          s(:const, nil, :ChannelBase),
          s(:const, nil, :Base),
          s(:begin,
            s(:send, nil, :include,
              s(:const, nil, :SetupDefaultDate)),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "cloud"),
                  s(:str, "categories"),
                  s(:str, "skipDays"),
                  s(:str, "skipHours")), :each),
              s(:args,
                s(:arg, :name)),
              s(:send, nil, :def_classed_element,
                s(:lvar, :name))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "generator"),
                  s(:str, "copyright"),
                  s(:str, "description"),
                  s(:str, "title")), :each),
              s(:args,
                s(:arg, :name)),
              s(:send, nil, :def_classed_element,
                s(:lvar, :name),
                s(:nil),
                s(:str, "content"))),
            s(:block,
              s(:send,
                s(:array,
                  s(:array,
                    s(:str, "link"),
                    s(:str, "href"),
                    s(:block,
                      s(:send,
                        s(:const, nil, :Proc), :new),
                      s(:args,
                        s(:arg, :target)),
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :target)),
                        s(:str, ".href = 'self'")))),
                  s(:array,
                    s(:str, "author"),
                    s(:str, "name")),
                  s(:array,
                    s(:str, "contributor"),
                    s(:str, "name"))), :each),
              s(:args,
                s(:arg, :name),
                s(:arg, :attribute),
                s(:arg, :additional_setup_maker)),
              s(:send, nil, :def_classed_elements,
                s(:lvar, :name),
                s(:lvar, :attribute),
                s(:block_pass,
                  s(:lvar, :additional_setup_maker)))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "id"),
                  s(:str, "about"),
                  s(:str, "language"),
                  s(:str, "managingEditor"),
                  s(:str, "webMaster"),
                  s(:str, "rating"),
                  s(:str, "docs"),
                  s(:str, "ttl")), :each),
              s(:args,
                s(:arg, :element)),
              s(:begin,
                s(:send, nil, :attr_accessor,
                  s(:lvar, :element)),
                s(:send, nil, :add_need_initialize_variable,
                  s(:lvar, :element)))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "date"),
                  s(:str, "lastBuildDate")), :each),
              s(:args,
                s(:arg, :date_element)),
              s(:begin,
                s(:send, nil, :attr_reader,
                  s(:lvar, :date_element)),
                s(:send, nil, :add_need_initialize_variable,
                  s(:lvar, :date_element)))),
            s(:def, :date=,
              s(:args,
                s(:arg, :_date)),
              s(:ivasgn, :@date,
                s(:send, nil, :_parse_date_if_needed,
                  s(:lvar, :_date)))),
            s(:def, :lastBuildDate=,
              s(:args,
                s(:arg, :_date)),
              s(:ivasgn, :@lastBuildDate,
                s(:send, nil, :_parse_date_if_needed,
                  s(:lvar, :_date)))),
            s(:def, :pubDate,
              s(:args),
              s(:send, nil, :date)),
            s(:def, :pubDate=,
              s(:args,
                s(:arg, :date)),
              s(:send,
                s(:self), :date=,
                s(:lvar, :date))),
            s(:def, :updated,
              s(:args),
              s(:send, nil, :date)),
            s(:def, :updated=,
              s(:args,
                s(:arg, :date)),
              s(:send,
                s(:self), :date=,
                s(:lvar, :date))),
            s(:send, nil, :alias_method,
              s(:sym, :rights),
              s(:sym, :copyright)),
            s(:send, nil, :alias_method,
              s(:sym, :rights=),
              s(:sym, :copyright=)),
            s(:send, nil, :alias_method,
              s(:sym, :subtitle),
              s(:sym, :description)),
            s(:send, nil, :alias_method,
              s(:sym, :subtitle=),
              s(:sym, :description=)),
            s(:def, :icon,
              s(:args),
              s(:send,
                s(:send, nil, :image_favicon), :about)),
            s(:def, :icon=,
              s(:args,
                s(:arg, :url)),
              s(:send,
                s(:send, nil, :image_favicon), :about=,
                s(:lvar, :url))),
            s(:def, :logo,
              s(:args),
              s(:send,
                s(:send,
                  s(:send, nil, :maker), :image), :url)),
            s(:def, :logo=,
              s(:args,
                s(:arg, :url)),
              s(:send,
                s(:send,
                  s(:send, nil, :maker), :image), :url=,
                s(:lvar, :url))),
            s(:class,
              s(:const, nil, :SkipDaysBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "day")),
                s(:class,
                  s(:const, nil, :DayBase),
                  s(:const, nil, :Base),
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:str, "content")), :each),
                    s(:args,
                      s(:arg, :element)),
                    s(:begin,
                      s(:send, nil, :attr_accessor,
                        s(:lvar, :element)),
                      s(:send, nil, :add_need_initialize_variable,
                        s(:lvar, :element))))))),
            s(:class,
              s(:const, nil, :SkipHoursBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "hour")),
                s(:class,
                  s(:const, nil, :HourBase),
                  s(:const, nil, :Base),
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:str, "content")), :each),
                    s(:args,
                      s(:arg, :element)),
                    s(:begin,
                      s(:send, nil, :attr_accessor,
                        s(:lvar, :element)),
                      s(:send, nil, :add_need_initialize_variable,
                        s(:lvar, :element))))))),
            s(:class,
              s(:const, nil, :CloudBase),
              s(:const, nil, :Base),
              s(:block,
                s(:send,
                  s(:array,
                    s(:str, "domain"),
                    s(:str, "port"),
                    s(:str, "path"),
                    s(:str, "registerProcedure"),
                    s(:str, "protocol")), :each),
                s(:args,
                  s(:arg, :element)),
                s(:begin,
                  s(:send, nil, :attr_accessor,
                    s(:lvar, :element)),
                  s(:send, nil, :add_need_initialize_variable,
                    s(:lvar, :element))))),
            s(:class,
              s(:const, nil, :CategoriesBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "category"),
                  s(:str, "categories")),
                s(:class,
                  s(:const, nil, :CategoryBase),
                  s(:const, nil, :Base),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "domain"),
                          s(:str, "content"),
                          s(:str, "label")), :each),
                      s(:args,
                        s(:arg, :element)),
                      s(:begin,
                        s(:send, nil, :attr_accessor,
                          s(:lvar, :element)),
                        s(:send, nil, :add_need_initialize_variable,
                          s(:lvar, :element)))),
                    s(:send, nil, :alias_method,
                      s(:sym, :term),
                      s(:sym, :domain)),
                    s(:send, nil, :alias_method,
                      s(:sym, :term=),
                      s(:sym, :domain=)),
                    s(:send, nil, :alias_method,
                      s(:sym, :scheme),
                      s(:sym, :content)),
                    s(:send, nil, :alias_method,
                      s(:sym, :scheme=),
                      s(:sym, :content=)))))),
            s(:class,
              s(:const, nil, :LinksBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "link")),
                s(:class,
                  s(:const, nil, :LinkBase),
                  s(:const, nil, :Base),
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:str, "href"),
                        s(:str, "rel"),
                        s(:str, "type"),
                        s(:str, "hreflang"),
                        s(:str, "title"),
                        s(:str, "length")), :each),
                    s(:args,
                      s(:arg, :element)),
                    s(:begin,
                      s(:send, nil, :attr_accessor,
                        s(:lvar, :element)),
                      s(:send, nil, :add_need_initialize_variable,
                        s(:lvar, :element))))))),
            s(:class,
              s(:const, nil, :AuthorsBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "author")),
                s(:class,
                  s(:const, nil, :AuthorBase),
                  s(:const, nil, :Base),
                  s(:send, nil, :include,
                    s(:const, nil, :AtomPersonConstructBase))))),
            s(:class,
              s(:const, nil, :ContributorsBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "contributor")),
                s(:class,
                  s(:const, nil, :ContributorBase),
                  s(:const, nil, :Base),
                  s(:send, nil, :include,
                    s(:const, nil, :AtomPersonConstructBase))))),
            s(:class,
              s(:const, nil, :GeneratorBase),
              s(:const, nil, :Base),
              s(:block,
                s(:send,
                  s(:array,
                    s(:str, "uri"),
                    s(:str, "version"),
                    s(:str, "content")), :each),
                s(:args,
                  s(:arg, :element)),
                s(:begin,
                  s(:send, nil, :attr_accessor,
                    s(:lvar, :element)),
                  s(:send, nil, :add_need_initialize_variable,
                    s(:lvar, :element))))),
            s(:class,
              s(:const, nil, :CopyrightBase),
              s(:const, nil, :Base),
              s(:send, nil, :include,
                s(:const, nil, :AtomTextConstructBase))),
            s(:class,
              s(:const, nil, :DescriptionBase),
              s(:const, nil, :Base),
              s(:send, nil, :include,
                s(:const, nil, :AtomTextConstructBase))),
            s(:class,
              s(:const, nil, :TitleBase),
              s(:const, nil, :Base),
              s(:send, nil, :include,
                s(:const, nil, :AtomTextConstructBase))))),
        s(:class,
          s(:const, nil, :ImageBase),
          s(:const, nil, :Base),
          s(:begin,
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "title"),
                  s(:str, "url"),
                  s(:str, "width"),
                  s(:str, "height"),
                  s(:str, "description")), :each),
              s(:args,
                s(:arg, :element)),
              s(:begin,
                s(:send, nil, :attr_accessor,
                  s(:lvar, :element)),
                s(:send, nil, :add_need_initialize_variable,
                  s(:lvar, :element)))),
            s(:def, :link,
              s(:args),
              s(:send,
                s(:send,
                  s(:ivar, :@maker), :channel), :link)))),
        s(:class,
          s(:const, nil, :ItemsBase),
          s(:const, nil, :Base),
          s(:begin,
            s(:send, nil, :def_array_element,
              s(:str, "item")),
            s(:send, nil, :attr_accessor,
              s(:sym, :do_sort),
              s(:sym, :max_size)),
            s(:def, :initialize,
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:zsuper),
                s(:ivasgn, :@do_sort,
                  s(:false)),
                s(:ivasgn, :@max_size,
                  s(:int, -1)))),
            s(:def, :normalize,
              s(:args),
              s(:if,
                s(:send,
                  s(:ivar, :@max_size), :>=,
                  s(:int, 0)),
                s(:send,
                  s(:send, nil, :sort_if_need), :[],
                  s(:erange,
                    s(:int, 0),
                    s(:ivar, :@max_size))),
                s(:send,
                  s(:send, nil, :sort_if_need), :[],
                  s(:irange,
                    s(:int, 0),
                    s(:ivar, :@max_size))))),
            s(:send, nil, :private),
            s(:def, :sort_if_need,
              s(:args),
              s(:if,
                s(:send,
                  s(:ivar, :@do_sort), :respond_to?,
                  s(:sym, :call)),
                s(:block,
                  s(:send,
                    s(:ivar, :@items), :sort),
                  s(:args,
                    s(:arg, :x),
                    s(:arg, :y)),
                  s(:send,
                    s(:ivar, :@do_sort), :call,
                    s(:lvar, :x),
                    s(:lvar, :y))),
                s(:if,
                  s(:ivar, :@do_sort),
                  s(:block,
                    s(:send,
                      s(:ivar, :@items), :sort),
                    s(:args,
                      s(:arg, :x),
                      s(:arg, :y)),
                    s(:send,
                      s(:lvar, :y), :<=>,
                      s(:lvar, :x))),
                  s(:ivar, :@items)))),
            s(:class,
              s(:const, nil, :ItemBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :include,
                  s(:const, nil, :SetupDefaultDate)),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "guid"),
                      s(:str, "enclosure"),
                      s(:str, "source"),
                      s(:str, "categories"),
                      s(:str, "content")), :each),
                  s(:args,
                    s(:arg, :name)),
                  s(:send, nil, :def_classed_element,
                    s(:lvar, :name))),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "rights"),
                      s(:str, "description"),
                      s(:str, "title")), :each),
                  s(:args,
                    s(:arg, :name)),
                  s(:send, nil, :def_classed_element,
                    s(:lvar, :name),
                    s(:nil),
                    s(:str, "content"))),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:array,
                        s(:str, "author"),
                        s(:str, "name")),
                      s(:array,
                        s(:str, "link"),
                        s(:str, "href"),
                        s(:block,
                          s(:send,
                            s(:const, nil, :Proc), :new),
                          s(:args,
                            s(:arg, :target)),
                          s(:dstr,
                            s(:begin,
                              s(:lvar, :target)),
                            s(:str, ".href = 'alternate'")))),
                      s(:array,
                        s(:str, "contributor"),
                        s(:str, "name"))), :each),
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :attribute)),
                  s(:send, nil, :def_classed_elements,
                    s(:lvar, :name),
                    s(:lvar, :attribute))),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "comments"),
                      s(:str, "id"),
                      s(:str, "published")), :each),
                  s(:args,
                    s(:arg, :element)),
                  s(:begin,
                    s(:send, nil, :attr_accessor,
                      s(:lvar, :element)),
                    s(:send, nil, :add_need_initialize_variable,
                      s(:lvar, :element)))),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "date")), :each),
                  s(:args,
                    s(:arg, :date_element)),
                  s(:begin,
                    s(:send, nil, :attr_reader,
                      s(:lvar, :date_element)),
                    s(:send, nil, :add_need_initialize_variable,
                      s(:lvar, :date_element)))),
                s(:def, :date=,
                  s(:args,
                    s(:arg, :_date)),
                  s(:ivasgn, :@date,
                    s(:send, nil, :_parse_date_if_needed,
                      s(:lvar, :_date)))),
                s(:def, :pubDate,
                  s(:args),
                  s(:send, nil, :date)),
                s(:def, :pubDate=,
                  s(:args,
                    s(:arg, :date)),
                  s(:send,
                    s(:self), :date=,
                    s(:lvar, :date))),
                s(:def, :updated,
                  s(:args),
                  s(:send, nil, :date)),
                s(:def, :updated=,
                  s(:args,
                    s(:arg, :date)),
                  s(:send,
                    s(:self), :date=,
                    s(:lvar, :date))),
                s(:send, nil, :alias_method,
                  s(:sym, :summary),
                  s(:sym, :description)),
                s(:send, nil, :alias_method,
                  s(:sym, :summary=),
                  s(:sym, :description=)),
                s(:def, :<=>,
                  s(:args,
                    s(:arg, :other)),
                  s(:begin,
                    s(:lvasgn, :_date,
                      s(:or,
                        s(:send, nil, :date),
                        s(:send, nil, :dc_date))),
                    s(:lvasgn, :_other_date,
                      s(:or,
                        s(:send,
                          s(:lvar, :other), :date),
                        s(:send,
                          s(:lvar, :other), :dc_date))),
                    s(:if,
                      s(:and,
                        s(:lvar, :_date),
                        s(:lvar, :_other_date)),
                      s(:send,
                        s(:lvar, :_date), :<=>,
                        s(:lvar, :_other_date)),
                      s(:if,
                        s(:lvar, :_date),
                        s(:int, 1),
                        s(:if,
                          s(:lvar, :_other_date),
                          s(:int, -1),
                          s(:int, 0)))))),
                s(:class,
                  s(:const, nil, :GuidBase),
                  s(:const, nil, :Base),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "isPermaLink"),
                          s(:str, "content")), :each),
                      s(:args,
                        s(:arg, :element)),
                      s(:begin,
                        s(:send, nil, :attr_accessor,
                          s(:lvar, :element)),
                        s(:send, nil, :add_need_initialize_variable,
                          s(:lvar, :element)))),
                    s(:def, :permanent_link?,
                      s(:args),
                      s(:send, nil, :isPermaLink)),
                    s(:def, :permanent_link=,
                      s(:args,
                        s(:arg, :bool)),
                      s(:send,
                        s(:self), :isPermaLink=,
                        s(:lvar, :bool))))),
                s(:class,
                  s(:const, nil, :EnclosureBase),
                  s(:const, nil, :Base),
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:str, "url"),
                        s(:str, "length"),
                        s(:str, "type")), :each),
                    s(:args,
                      s(:arg, :element)),
                    s(:begin,
                      s(:send, nil, :attr_accessor,
                        s(:lvar, :element)),
                      s(:send, nil, :add_need_initialize_variable,
                        s(:lvar, :element))))),
                s(:class,
                  s(:const, nil, :SourceBase),
                  s(:const, nil, :Base),
                  s(:begin,
                    s(:send, nil, :include,
                      s(:const, nil, :SetupDefaultDate)),
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "authors"),
                          s(:str, "categories"),
                          s(:str, "contributors"),
                          s(:str, "generator"),
                          s(:str, "icon"),
                          s(:str, "logo"),
                          s(:str, "rights"),
                          s(:str, "subtitle"),
                          s(:str, "title")), :each),
                      s(:args,
                        s(:arg, :name)),
                      s(:send, nil, :def_classed_element,
                        s(:lvar, :name))),
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:array,
                            s(:str, "link"),
                            s(:str, "href"))), :each),
                      s(:args,
                        s(:arg, :name),
                        s(:arg, :attribute)),
                      s(:send, nil, :def_classed_elements,
                        s(:lvar, :name),
                        s(:lvar, :attribute))),
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "id"),
                          s(:str, "content")), :each),
                      s(:args,
                        s(:arg, :element)),
                      s(:begin,
                        s(:send, nil, :attr_accessor,
                          s(:lvar, :element)),
                        s(:send, nil, :add_need_initialize_variable,
                          s(:lvar, :element)))),
                    s(:send, nil, :alias_method,
                      s(:sym, :url),
                      s(:sym, :link)),
                    s(:send, nil, :alias_method,
                      s(:sym, :url=),
                      s(:sym, :link=)),
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "date")), :each),
                      s(:args,
                        s(:arg, :date_element)),
                      s(:begin,
                        s(:send, nil, :attr_reader,
                          s(:lvar, :date_element)),
                        s(:send, nil, :add_need_initialize_variable,
                          s(:lvar, :date_element)))),
                    s(:def, :date=,
                      s(:args,
                        s(:arg, :_date)),
                      s(:ivasgn, :@date,
                        s(:send, nil, :_parse_date_if_needed,
                          s(:lvar, :_date)))),
                    s(:def, :updated,
                      s(:args),
                      s(:send, nil, :date)),
                    s(:def, :updated=,
                      s(:args,
                        s(:arg, :date)),
                      s(:send,
                        s(:self), :date=,
                        s(:lvar, :date))),
                    s(:send, nil, :private),
                    s(:casgn, nil, :AuthorsBase,
                      s(:const,
                        s(:const, nil, :ChannelBase), :AuthorsBase)),
                    s(:casgn, nil, :CategoriesBase,
                      s(:const,
                        s(:const, nil, :ChannelBase), :CategoriesBase)),
                    s(:casgn, nil, :ContributorsBase,
                      s(:const,
                        s(:const, nil, :ChannelBase), :ContributorsBase)),
                    s(:casgn, nil, :GeneratorBase,
                      s(:const,
                        s(:const, nil, :ChannelBase), :GeneratorBase)),
                    s(:class,
                      s(:const, nil, :IconBase),
                      s(:const, nil, :Base),
                      s(:block,
                        s(:send,
                          s(:array,
                            s(:str, "url")), :each),
                        s(:args,
                          s(:arg, :element)),
                        s(:begin,
                          s(:send, nil, :attr_accessor,
                            s(:lvar, :element)),
                          s(:send, nil, :add_need_initialize_variable,
                            s(:lvar, :element))))),
                    s(:casgn, nil, :LinksBase,
                      s(:const,
                        s(:const, nil, :ChannelBase), :LinksBase)),
                    s(:class,
                      s(:const, nil, :LogoBase),
                      s(:const, nil, :Base),
                      s(:block,
                        s(:send,
                          s(:array,
                            s(:str, "uri")), :each),
                        s(:args,
                          s(:arg, :element)),
                        s(:begin,
                          s(:send, nil, :attr_accessor,
                            s(:lvar, :element)),
                          s(:send, nil, :add_need_initialize_variable,
                            s(:lvar, :element))))),
                    s(:class,
                      s(:const, nil, :RightsBase),
                      s(:const, nil, :Base),
                      s(:send, nil, :include,
                        s(:const, nil, :AtomTextConstructBase))),
                    s(:class,
                      s(:const, nil, :SubtitleBase),
                      s(:const, nil, :Base),
                      s(:send, nil, :include,
                        s(:const, nil, :AtomTextConstructBase))),
                    s(:class,
                      s(:const, nil, :TitleBase),
                      s(:const, nil, :Base),
                      s(:send, nil, :include,
                        s(:const, nil, :AtomTextConstructBase))))),
                s(:casgn, nil, :CategoriesBase,
                  s(:const,
                    s(:const, nil, :ChannelBase), :CategoriesBase)),
                s(:casgn, nil, :AuthorsBase,
                  s(:const,
                    s(:const, nil, :ChannelBase), :AuthorsBase)),
                s(:casgn, nil, :LinksBase,
                  s(:const,
                    s(:const, nil, :ChannelBase), :LinksBase)),
                s(:casgn, nil, :ContributorsBase,
                  s(:const,
                    s(:const, nil, :ChannelBase), :ContributorsBase)),
                s(:class,
                  s(:const, nil, :RightsBase),
                  s(:const, nil, :Base),
                  s(:send, nil, :include,
                    s(:const, nil, :AtomTextConstructBase))),
                s(:class,
                  s(:const, nil, :DescriptionBase),
                  s(:const, nil, :Base),
                  s(:send, nil, :include,
                    s(:const, nil, :AtomTextConstructBase))),
                s(:class,
                  s(:const, nil, :ContentBase),
                  s(:const, nil, :Base),
                  s(:begin,
                    s(:send, nil, :include,
                      s(:const,
                        s(:const, nil, :AtomTextConstructBase), :EnsureXMLContent)),
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "src")), :each),
                      s(:args,
                        s(:arg, :element)),
                      s(:begin,
                        s(:send, nil, :attr_accessor,
                          s(:lvar, :element)),
                        s(:send, nil, :add_need_initialize_variable,
                          s(:lvar, :element)))),
                    s(:def, :xml_content=,
                      s(:args,
                        s(:arg, :content)),
                      s(:begin,
                        s(:if,
                          s(:send, nil, :inline_xhtml?),
                          s(:lvasgn, :content,
                            s(:send, nil, :ensure_xml_content,
                              s(:lvar, :content))), nil),
                        s(:ivasgn, :@xml_content,
                          s(:lvar, :content)))),
                    s(:send, nil, :alias_method,
                      s(:sym, :xml),
                      s(:sym, :xml_content)),
                    s(:send, nil, :alias_method,
                      s(:sym, :xml=),
                      s(:sym, :xml_content=)),
                    s(:def, :inline_text?,
                      s(:args),
                      s(:send,
                        s(:array,
                          s(:nil),
                          s(:str, "text"),
                          s(:str, "html")), :include?,
                        s(:ivar, :@type))),
                    s(:def, :inline_html?,
                      s(:args),
                      s(:send,
                        s(:ivar, :@type), :==,
                        s(:str, "html"))),
                    s(:def, :inline_xhtml?,
                      s(:args),
                      s(:send,
                        s(:ivar, :@type), :==,
                        s(:str, "xhtml"))),
                    s(:def, :inline_other?,
                      s(:args),
                      s(:and,
                        s(:send,
                          s(:send, nil, :out_of_line?), :!),
                        s(:send,
                          s(:send,
                            s(:array,
                              s(:nil),
                              s(:str, "text"),
                              s(:str, "html"),
                              s(:str, "xhtml")), :include?,
                            s(:ivar, :@type)), :!))),
                    s(:def, :inline_other_text?,
                      s(:args),
                      s(:begin,
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:ivar, :@type), :nil?),
                            s(:send, nil, :out_of_line?)),
                          s(:return,
                            s(:false)), nil),
                        s(:if,
                          s(:send,
                            s(:regexp,
                              s(:str, "\\Atext/"),
                              s(:regopt, :i)), :match,
                            s(:ivar, :@type)),
                          s(:true),
                          s(:false)))),
                    s(:def, :inline_other_xml?,
                      s(:args),
                      s(:begin,
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:ivar, :@type), :nil?),
                            s(:send, nil, :out_of_line?)),
                          s(:return,
                            s(:false)), nil),
                        s(:if,
                          s(:send,
                            s(:regexp,
                              s(:str, "[\\+/]xml\\z"),
                              s(:regopt, :i)), :match,
                            s(:ivar, :@type)),
                          s(:true),
                          s(:false)))),
                    s(:def, :inline_other_base64?,
                      s(:args),
                      s(:begin,
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:ivar, :@type), :nil?),
                            s(:send, nil, :out_of_line?)),
                          s(:return,
                            s(:false)), nil),
                        s(:and,
                          s(:and,
                            s(:send,
                              s(:ivar, :@type), :include?,
                              s(:str, "/")),
                            s(:send,
                              s(:send, nil, :inline_other_text?), :!)),
                          s(:send,
                            s(:send, nil, :inline_other_xml?), :!)))),
                    s(:def, :out_of_line?,
                      s(:args),
                      s(:and,
                        s(:send,
                          s(:send,
                            s(:ivar, :@src), :nil?), :!),
                        s(:send,
                          s(:ivar, :@content), :nil?))))),
                s(:class,
                  s(:const, nil, :TitleBase),
                  s(:const, nil, :Base),
                  s(:send, nil, :include,
                    s(:const, nil, :AtomTextConstructBase))))))),
        s(:class,
          s(:const, nil, :TextinputBase),
          s(:const, nil, :Base),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "title"),
                s(:str, "description"),
                s(:str, "name"),
                s(:str, "link")), :each),
            s(:args,
              s(:arg, :element)),
            s(:begin,
              s(:send, nil, :attr_accessor,
                s(:lvar, :element)),
              s(:send, nil, :add_need_initialize_variable,
                s(:lvar, :element)))))))))
