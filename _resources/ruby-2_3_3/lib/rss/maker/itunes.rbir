s(:begin,
  s(:send, nil, :require,
    s(:str, "rss/itunes")),
  s(:send, nil, :require,
    s(:str, "rss/maker/2.0")),
  s(:module,
    s(:const, nil, :RSS),
    s(:module,
      s(:const, nil, :Maker),
      s(:begin,
        s(:module,
          s(:const, nil, :ITunesBaseModel),
          s(:begin,
            s(:def, :def_class_accessor,
              s(:args,
                s(:arg, :klass),
                s(:arg, :name),
                s(:arg, :type),
                s(:restarg, :args)),
              s(:begin,
                s(:lvasgn, :name,
                  s(:send,
                    s(:send,
                      s(:lvar, :name), :gsub,
                      s(:regexp,
                        s(:str, "-"),
                        s(:regopt)),
                      s(:str, "_")), :gsub,
                    s(:regexp,
                      s(:str, "^itunes_"),
                      s(:regopt)),
                    s(:str, ""))),
                s(:lvasgn, :full_name,
                  s(:dstr,
                    s(:begin,
                      s(:const,
                        s(:const, nil, :RSS), :ITUNES_PREFIX)),
                    s(:str, "_"),
                    s(:begin,
                      s(:lvar, :name)))),
                s(:case,
                  s(:lvar, :type),
                  s(:when,
                    s(:nil),
                    s(:send,
                      s(:lvar, :klass), :def_other_element,
                      s(:lvar, :full_name))),
                  s(:when,
                    s(:sym, :yes_other),
                    s(:send, nil, :def_yes_other_accessor,
                      s(:lvar, :klass),
                      s(:lvar, :full_name))),
                  s(:when,
                    s(:sym, :yes_clean_other),
                    s(:send, nil, :def_yes_clean_other_accessor,
                      s(:lvar, :klass),
                      s(:lvar, :full_name))),
                  s(:when,
                    s(:sym, :csv),
                    s(:send, nil, :def_csv_accessor,
                      s(:lvar, :klass),
                      s(:lvar, :full_name))),
                  s(:when,
                    s(:sym, :element),
                    s(:sym, :attribute),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :recommended_attribute_name)),
                        s(:array,
                          s(:splat,
                            s(:lvar, :args)))),
                      s(:lvasgn, :klass_name,
                        s(:dstr,
                          s(:str, "ITunes"),
                          s(:begin,
                            s(:send,
                              s(:const, nil, :Utils), :to_class_name,
                              s(:lvar, :name))))),
                      s(:send,
                        s(:lvar, :klass), :def_classed_element,
                        s(:lvar, :full_name),
                        s(:lvar, :klass_name),
                        s(:lvar, :recommended_attribute_name)))),
                  s(:when,
                    s(:sym, :elements),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :plural_name),
                          s(:lvasgn, :recommended_attribute_name)),
                        s(:lvar, :args)),
                      s(:or_asgn,
                        s(:lvasgn, :plural_name),
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "s"))),
                      s(:lvasgn, :full_plural_name,
                        s(:dstr,
                          s(:begin,
                            s(:const,
                              s(:const, nil, :RSS), :ITUNES_PREFIX)),
                          s(:str, "_"),
                          s(:begin,
                            s(:lvar, :plural_name)))),
                      s(:lvasgn, :klass_name,
                        s(:dstr,
                          s(:str, "ITunes"),
                          s(:begin,
                            s(:send,
                              s(:const, nil, :Utils), :to_class_name,
                              s(:lvar, :name))))),
                      s(:lvasgn, :plural_klass_name,
                        s(:dstr,
                          s(:str, "ITunes"),
                          s(:begin,
                            s(:send,
                              s(:const, nil, :Utils), :to_class_name,
                              s(:lvar, :plural_name))))),
                      s(:send, nil, :def_elements_class_accessor,
                        s(:lvar, :klass),
                        s(:lvar, :name),
                        s(:lvar, :full_name),
                        s(:lvar, :full_plural_name),
                        s(:lvar, :klass_name),
                        s(:lvar, :plural_klass_name),
                        s(:lvar, :recommended_attribute_name)))), nil))),
            s(:def, :def_yes_other_accessor,
              s(:args,
                s(:arg, :klass),
                s(:arg, :full_name)),
              s(:begin,
                s(:send,
                  s(:lvar, :klass), :def_other_element,
                  s(:lvar, :full_name)),
                s(:send,
                  s(:lvar, :klass), :module_eval,
                  s(:dstr,
                    s(:str, "          def "),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, "?\n"),
                    s(:str, "            Utils::YesOther.parse(@"),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, ")\n"),
                    s(:str, "          end\n")),
                  s(:str, "(string)"),
                  s(:send,
                    s(:int, 39), :+,
                    s(:int, 1))))),
            s(:def, :def_yes_clean_other_accessor,
              s(:args,
                s(:arg, :klass),
                s(:arg, :full_name)),
              s(:begin,
                s(:send,
                  s(:lvar, :klass), :def_other_element,
                  s(:lvar, :full_name)),
                s(:send,
                  s(:lvar, :klass), :module_eval,
                  s(:dstr,
                    s(:str, "          def "),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, "?\n"),
                    s(:str, "            Utils::YesCleanOther.parse("),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, ")\n"),
                    s(:str, "          end\n")),
                  s(:str, "(string)"),
                  s(:send,
                    s(:int, 48), :+,
                    s(:int, 1))))),
            s(:def, :def_csv_accessor,
              s(:args,
                s(:arg, :klass),
                s(:arg, :full_name)),
              s(:send,
                s(:lvar, :klass), :def_csv_element,
                s(:lvar, :full_name))),
            s(:def, :def_elements_class_accessor,
              s(:args,
                s(:arg, :klass),
                s(:arg, :name),
                s(:arg, :full_name),
                s(:arg, :full_plural_name),
                s(:arg, :klass_name),
                s(:arg, :plural_klass_name),
                s(:optarg, :recommended_attribute_name,
                  s(:nil))),
              s(:begin,
                s(:if,
                  s(:lvar, :recommended_attribute_name),
                  s(:send,
                    s(:lvar, :klass), :def_classed_elements,
                    s(:lvar, :full_name),
                    s(:lvar, :recommended_attribute_name),
                    s(:lvar, :plural_klass_name),
                    s(:lvar, :full_plural_name)),
                  s(:send,
                    s(:lvar, :klass), :def_classed_element,
                    s(:lvar, :full_plural_name),
                    s(:lvar, :plural_klass_name))),
                s(:send,
                  s(:lvar, :klass), :module_eval,
                  s(:dstr,
                    s(:str, "          def new_"),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, "(text=nil)\n"),
                    s(:str, "            "),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, " = @"),
                    s(:begin,
                      s(:lvar, :full_plural_name)),
                    s(:str, ".new_"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, "\n"),
                    s(:str, "            "),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, ".text = text\n"),
                    s(:str, "            if block_given?\n"),
                    s(:str, "              yield "),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, "\n"),
                    s(:str, "            else\n"),
                    s(:str, "              "),
                    s(:begin,
                      s(:lvar, :full_name)),
                    s(:str, "\n"),
                    s(:str, "            end\n"),
                    s(:str, "          end\n")),
                  s(:str, "(string)"),
                  s(:send,
                    s(:int, 68), :+,
                    s(:int, 1))))))),
        s(:module,
          s(:const, nil, :ITunesChannelModel),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :ITunesBaseModel)),
            s(:sclass,
              s(:self),
              s(:def, :append_features,
                s(:args,
                  s(:arg, :klass)),
                s(:begin,
                  s(:zsuper),
                  s(:block,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:cbase), :RSS), :ITunesChannelModel), :ELEMENT_INFOS), :each),
                    s(:args,
                      s(:arg, :name),
                      s(:arg, :type),
                      s(:restarg, :args)),
                    s(:send, nil, :def_class_accessor,
                      s(:lvar, :klass),
                      s(:lvar, :name),
                      s(:lvar, :type),
                      s(:splat,
                        s(:lvar, :args))))))),
            s(:class,
              s(:const, nil, :ITunesCategoriesBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :def_array_element,
                  s(:str, "category"),
                  s(:str, "itunes_categories"),
                  s(:str, "ITunesCategory")),
                s(:class,
                  s(:const, nil, :ITunesCategoryBase),
                  s(:const, nil, :Base),
                  s(:begin,
                    s(:send, nil, :attr_accessor,
                      s(:sym, :text)),
                    s(:send, nil, :add_need_initialize_variable,
                      s(:str, "text")),
                    s(:send, nil, :def_array_element,
                      s(:str, "category"),
                      s(:str, "itunes_categories"),
                      s(:str, "ITunesCategory")),
                    s(:def, :have_required_values?,
                      s(:args),
                      s(:send, nil, :text)),
                    s(:send, nil, :alias_method,
                      s(:sym, :to_feed_for_categories),
                      s(:sym, :to_feed)),
                    s(:def, :to_feed,
                      s(:args,
                        s(:arg, :feed),
                        s(:arg, :current)),
                      s(:if,
                        s(:and,
                          s(:send, nil, :text),
                          s(:send,
                            s(:lvar, :current), :respond_to?,
                            s(:sym, :itunes_category))),
                        s(:begin,
                          s(:lvasgn, :new_item,
                            s(:send,
                              s(:const,
                                s(:send,
                                  s(:lvar, :current), :class), :ITunesCategory), :new,
                              s(:send, nil, :text))),
                          s(:send, nil, :to_feed_for_categories,
                            s(:lvar, :feed),
                            s(:lvar, :new_item)),
                          s(:send,
                            s(:send,
                              s(:lvar, :current), :itunes_categories), :<<,
                            s(:lvar, :new_item))), nil)))))),
            s(:class,
              s(:const, nil, :ITunesImageBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :add_need_initialize_variable,
                  s(:str, "href")),
                s(:send, nil, :attr_accessor,
                  s(:str, "href")),
                s(:def, :to_feed,
                  s(:args,
                    s(:arg, :feed),
                    s(:arg, :current)),
                  s(:if,
                    s(:and,
                      s(:ivar, :@href),
                      s(:send,
                        s(:lvar, :current), :respond_to?,
                        s(:sym, :itunes_image))),
                    s(:begin,
                      s(:or_asgn,
                        s(:send,
                          s(:lvar, :current), :itunes_image),
                        s(:send,
                          s(:const,
                            s(:send,
                              s(:lvar, :current), :class), :ITunesImage), :new)),
                      s(:send,
                        s(:send,
                          s(:lvar, :current), :itunes_image), :href=,
                        s(:ivar, :@href))), nil)))),
            s(:class,
              s(:const, nil, :ITunesOwnerBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "itunes_name"),
                      s(:str, "itunes_email")), :each),
                  s(:args,
                    s(:arg, :name)),
                  s(:begin,
                    s(:send, nil, :add_need_initialize_variable,
                      s(:lvar, :name)),
                    s(:send, nil, :attr_accessor,
                      s(:lvar, :name)))),
                s(:def, :to_feed,
                  s(:args,
                    s(:arg, :feed),
                    s(:arg, :current)),
                  s(:if,
                    s(:send,
                      s(:lvar, :current), :respond_to?,
                      s(:sym, :itunes_owner=)),
                    s(:begin,
                      s(:lvasgn, :_not_set_required_variables,
                        s(:send, nil, :not_set_required_variables)),
                      s(:if,
                        s(:send,
                          s(:begin,
                            s(:send,
                              s(:send, nil, :required_variable_names), :-,
                              s(:lvar, :_not_set_required_variables))), :empty?),
                        s(:return), nil),
                      s(:if,
                        s(:send, nil, :have_required_values?), nil,
                        s(:send, nil, :raise,
                          s(:send,
                            s(:const, nil, :NotSetError), :new,
                            s(:str, "maker.channel.itunes_owner"),
                            s(:lvar, :_not_set_required_variables)))),
                      s(:or_asgn,
                        s(:send,
                          s(:lvar, :current), :itunes_owner),
                        s(:send,
                          s(:const,
                            s(:send,
                              s(:lvar, :current), :class), :ITunesOwner), :new)),
                      s(:send,
                        s(:send,
                          s(:lvar, :current), :itunes_owner), :itunes_name=,
                        s(:ivar, :@itunes_name)),
                      s(:send,
                        s(:send,
                          s(:lvar, :current), :itunes_owner), :itunes_email=,
                        s(:ivar, :@itunes_email))), nil)),
                s(:send, nil, :private),
                s(:def, :required_variable_names,
                  s(:args),
                  s(:array,
                    s(:str, "itunes_name"),
                    s(:str, "itunes_email"))))))),
        s(:module,
          s(:const, nil, :ITunesItemModel),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :ITunesBaseModel)),
            s(:sclass,
              s(:self),
              s(:def, :append_features,
                s(:args,
                  s(:arg, :klass)),
                s(:begin,
                  s(:zsuper),
                  s(:block,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:cbase), :RSS), :ITunesItemModel), :ELEMENT_INFOS), :each),
                    s(:args,
                      s(:arg, :name),
                      s(:arg, :type),
                      s(:restarg, :args)),
                    s(:send, nil, :def_class_accessor,
                      s(:lvar, :klass),
                      s(:lvar, :name),
                      s(:lvar, :type),
                      s(:splat,
                        s(:lvar, :args))))))),
            s(:class,
              s(:const, nil, :ITunesDurationBase),
              s(:const, nil, :Base),
              s(:begin,
                s(:send, nil, :attr_reader,
                  s(:sym, :content)),
                s(:send, nil, :add_need_initialize_variable,
                  s(:str, "content")),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "hour"),
                      s(:str, "minute"),
                      s(:str, "second")), :each),
                  s(:args,
                    s(:arg, :name)),
                  s(:begin,
                    s(:send, nil, :attr_reader,
                      s(:lvar, :name)),
                    s(:send, nil, :add_need_initialize_variable,
                      s(:lvar, :name),
                      s(:int, 0)))),
                s(:def, :content=,
                  s(:args,
                    s(:arg, :content)),
                  s(:if,
                    s(:send,
                      s(:lvar, :content), :nil?),
                    s(:masgn,
                      s(:mlhs,
                        s(:ivasgn, :@hour),
                        s(:ivasgn, :@minute),
                        s(:ivasgn, :@second),
                        s(:ivasgn, :@content)),
                      s(:nil)),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:ivasgn, :@hour),
                          s(:ivasgn, :@minute),
                          s(:ivasgn, :@second)),
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:const,
                                s(:cbase), :RSS), :ITunesItemModel), :ITunesDuration), :parse,
                          s(:lvar, :content))),
                      s(:ivasgn, :@content,
                        s(:lvar, :content))))),
                s(:def, :hour=,
                  s(:args,
                    s(:arg, :hour)),
                  s(:begin,
                    s(:ivasgn, :@hour,
                      s(:send, nil, :Integer,
                        s(:lvar, :hour))),
                    s(:send, nil, :update_content))),
                s(:def, :minute=,
                  s(:args,
                    s(:arg, :minute)),
                  s(:begin,
                    s(:ivasgn, :@minute,
                      s(:send, nil, :Integer,
                        s(:lvar, :minute))),
                    s(:send, nil, :update_content))),
                s(:def, :second=,
                  s(:args,
                    s(:arg, :second)),
                  s(:begin,
                    s(:ivasgn, :@second,
                      s(:send, nil, :Integer,
                        s(:lvar, :second))),
                    s(:send, nil, :update_content))),
                s(:def, :to_feed,
                  s(:args,
                    s(:arg, :feed),
                    s(:arg, :current)),
                  s(:if,
                    s(:and,
                      s(:ivar, :@content),
                      s(:send,
                        s(:lvar, :current), :respond_to?,
                        s(:sym, :itunes_duration=))),
                    s(:begin,
                      s(:or_asgn,
                        s(:send,
                          s(:lvar, :current), :itunes_duration),
                        s(:send,
                          s(:const,
                            s(:send,
                              s(:lvar, :current), :class), :ITunesDuration), :new)),
                      s(:send,
                        s(:send,
                          s(:lvar, :current), :itunes_duration), :content=,
                        s(:ivar, :@content))), nil)),
                s(:send, nil, :private),
                s(:def, :update_content,
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :components,
                      s(:array,
                        s(:ivar, :@hour),
                        s(:ivar, :@minute),
                        s(:ivar, :@second))),
                    s(:ivasgn, :@content,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:cbase), :RSS), :ITunesItemModel), :ITunesDuration), :construct,
                        s(:splat,
                          s(:lvar, :components)))))))))),
        s(:class,
          s(:const, nil, :ChannelBase), nil,
          s(:begin,
            s(:send, nil, :include,
              s(:const,
                s(:const, nil, :Maker), :ITunesChannelModel)),
            s(:class,
              s(:const, nil, :ITunesCategories),
              s(:const, nil, :ITunesCategoriesBase),
              s(:class,
                s(:const, nil, :ITunesCategory),
                s(:const, nil, :ITunesCategoryBase),
                s(:casgn, nil, :ITunesCategory,
                  s(:self)))),
            s(:class,
              s(:const, nil, :ITunesImage),
              s(:const, nil, :ITunesImageBase), nil),
            s(:class,
              s(:const, nil, :ITunesOwner),
              s(:const, nil, :ITunesOwnerBase), nil))),
        s(:class,
          s(:const, nil, :ItemsBase), nil,
          s(:class,
            s(:const, nil, :ItemBase), nil,
            s(:begin,
              s(:send, nil, :include,
                s(:const,
                  s(:const, nil, :Maker), :ITunesItemModel)),
              s(:class,
                s(:const, nil, :ITunesDuration),
                s(:const, nil, :ITunesDurationBase), nil))))))))
