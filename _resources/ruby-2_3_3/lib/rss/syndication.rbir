s(:begin,
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:module,
    s(:const, nil, :RSS),
    s(:begin,
      s(:casgn, nil, :SY_PREFIX,
        s(:str, "sy")),
      s(:casgn, nil, :SY_URI,
        s(:str, "http://purl.org/rss/1.0/modules/syndication/")),
      s(:send,
        s(:const, nil, :RDF), :install_ns,
        s(:const, nil, :SY_PREFIX),
        s(:const, nil, :SY_URI)),
      s(:module,
        s(:const, nil, :SyndicationModel),
        s(:begin,
          s(:send, nil, :extend,
            s(:const, nil, :BaseModel)),
          s(:casgn, nil, :ELEMENTS,
            s(:array)),
          s(:defs,
            s(:self), :append_features,
            s(:args,
              s(:arg, :klass)),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:lvar, :klass), :install_must_call_validator,
                s(:const, nil, :SY_PREFIX),
                s(:const, nil, :SY_URI)),
              s(:block,
                s(:send,
                  s(:lvar, :klass), :module_eval),
                s(:args),
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:array,
                          s(:str, "updatePeriod")),
                        s(:array,
                          s(:str, "updateFrequency"),
                          s(:sym, :positive_integer))), :each),
                    s(:args,
                      s(:arg, :name),
                      s(:arg, :type)),
                    s(:send, nil, :install_text_element,
                      s(:lvar, :name),
                      s(:const, nil, :SY_URI),
                      s(:str, "?"),
                      s(:dstr,
                        s(:begin,
                          s(:const, nil, :SY_PREFIX)),
                        s(:str, "_"),
                        s(:begin,
                          s(:lvar, :name))),
                      s(:lvar, :type),
                      s(:dstr,
                        s(:begin,
                          s(:const, nil, :SY_PREFIX)),
                        s(:str, ":"),
                        s(:begin,
                          s(:lvar, :name))))),
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:str, "updateBase")), :each),
                    s(:args,
                      s(:arg, :name)),
                    s(:send, nil, :install_date_element,
                      s(:lvar, :name),
                      s(:const, nil, :SY_URI),
                      s(:str, "?"),
                      s(:dstr,
                        s(:begin,
                          s(:const, nil, :SY_PREFIX)),
                        s(:str, "_"),
                        s(:begin,
                          s(:lvar, :name))),
                      s(:str, "w3cdtf"),
                      s(:dstr,
                        s(:begin,
                          s(:const, nil, :SY_PREFIX)),
                        s(:str, ":"),
                        s(:begin,
                          s(:lvar, :name))))))),
              s(:send,
                s(:lvar, :klass), :module_eval,
                s(:dstr,
                  s(:str, "        alias_method(:_sy_updatePeriod=, :sy_updatePeriod=)\n"),
                  s(:str, "        def sy_updatePeriod=(new_value)\n"),
                  s(:str, "          new_value = new_value.strip\n"),
                  s(:str, "          validate_sy_updatePeriod(new_value) if @do_validate\n"),
                  s(:str, "          self._sy_updatePeriod = new_value\n"),
                  s(:str, "        end\n")),
                s(:str, "(string)"),
                s(:send,
                  s(:int, 39), :+,
                  s(:int, 1))))),
          s(:send, nil, :private),
          s(:casgn, nil, :SY_UPDATEPERIOD_AVAILABLE_VALUES,
            s(:array,
              s(:str, "hourly"),
              s(:str, "daily"),
              s(:str, "weekly"),
              s(:str, "monthly"),
              s(:str, "yearly"))),
          s(:def, :validate_sy_updatePeriod,
            s(:args,
              s(:arg, :value)),
            s(:if,
              s(:send,
                s(:const, nil, :SY_UPDATEPERIOD_AVAILABLE_VALUES), :include?,
                s(:lvar, :value)), nil,
              s(:send, nil, :raise,
                s(:send,
                  s(:const, nil, :NotAvailableValueError), :new,
                  s(:str, "updatePeriod"),
                  s(:lvar, :value))))))),
      s(:class,
        s(:const, nil, :RDF), nil,
        s(:class,
          s(:const, nil, :Channel), nil,
          s(:send, nil, :include,
            s(:const, nil, :SyndicationModel)))),
      s(:lvasgn, :prefix_size,
        s(:send,
          s(:send,
            s(:const, nil, :SY_PREFIX), :size), :+,
          s(:int, 1))),
      s(:send,
        s(:const,
          s(:const, nil, :SyndicationModel), :ELEMENTS), :uniq!),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :SyndicationModel), :ELEMENTS), :each),
        s(:args,
          s(:arg, :full_name)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:lvar, :full_name), :[],
              s(:irange,
                s(:lvar, :prefix_size),
                s(:int, -1)))),
          s(:send,
            s(:const, nil, :BaseListener), :install_get_text_element,
            s(:const, nil, :SY_URI),
            s(:lvar, :name),
            s(:lvar, :full_name)))))))
