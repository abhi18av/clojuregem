s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "xml/parser")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil,
        s(:send, nil, :require,
          s(:str, "xmlparser"))), nil)),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "xml/encoding-ja")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil,
        s(:begin,
          s(:send, nil, :require,
            s(:str, "xmlencoding-ja")),
          s(:if,
            s(:defined?,
              s(:const, nil, :Kconv)),
            s(:module,
              s(:const, nil, :XMLEncoding_ja),
              s(:class,
                s(:const, nil, :SJISHandler), nil,
                s(:send, nil, :include,
                  s(:const, nil, :Kconv)))), nil))), nil)),
  s(:module,
    s(:const, nil, :XML),
    s(:class,
      s(:const, nil, :Parser), nil,
      s(:if,
        s(:defined?,
          s(:const, nil, :Error)), nil,
        s(:casgn, nil, :Error,
          s(:const,
            s(:cbase), :XMLParserError))))),
  s(:module,
    s(:const, nil, :RSS),
    s(:begin,
      s(:class,
        s(:const, nil, :REXMLLikeXMLParser),
        s(:const,
          s(:const,
            s(:cbase), :XML), :Parser),
        s(:begin,
          s(:send, nil, :include,
            s(:const,
              s(:const,
                s(:cbase), :XML), :Encoding_ja)),
          s(:def, :listener=,
            s(:args,
              s(:arg, :listener)),
            s(:ivasgn, :@listener,
              s(:lvar, :listener))),
          s(:def, :startElement,
            s(:args,
              s(:arg, :name),
              s(:arg, :attrs)),
            s(:send,
              s(:ivar, :@listener), :tag_start,
              s(:lvar, :name),
              s(:lvar, :attrs))),
          s(:def, :endElement,
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:ivar, :@listener), :tag_end,
              s(:lvar, :name))),
          s(:def, :character,
            s(:args,
              s(:arg, :data)),
            s(:send,
              s(:ivar, :@listener), :text,
              s(:lvar, :data))),
          s(:def, :xmlDecl,
            s(:args,
              s(:arg, :version),
              s(:arg, :encoding),
              s(:arg, :standalone)),
            s(:send,
              s(:ivar, :@listener), :xmldecl,
              s(:lvar, :version),
              s(:lvar, :encoding),
              s(:send,
                s(:lvar, :standalone), :==,
                s(:int, 1)))),
          s(:def, :processingInstruction,
            s(:args,
              s(:arg, :target),
              s(:arg, :content)),
            s(:send,
              s(:ivar, :@listener), :instruction,
              s(:lvar, :target),
              s(:lvar, :content))))),
      s(:class,
        s(:const, nil, :XMLParserParser),
        s(:const, nil, :BaseParser),
        s(:begin,
          s(:sclass,
            s(:self),
            s(:def, :listener,
              s(:args),
              s(:const, nil, :XMLParserListener))),
          s(:send, nil, :private),
          s(:def, :_parse,
            s(:args),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :parser,
                    s(:send,
                      s(:const, nil, :REXMLLikeXMLParser), :new)),
                  s(:send,
                    s(:lvar, :parser), :listener=,
                    s(:ivar, :@listener)),
                  s(:send,
                    s(:lvar, :parser), :parse,
                    s(:ivar, :@rss))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:cbase), :XML), :Parser), :Error)),
                  s(:lvasgn, :e),
                  s(:send, nil, :raise,
                    s(:block,
                      s(:send,
                        s(:const, nil, :NotWellFormedError), :new,
                        s(:send,
                          s(:lvar, :parser), :line)),
                      s(:args),
                      s(:send,
                        s(:lvar, :e), :message)))), nil))))),
      s(:class,
        s(:const, nil, :XMLParserListener),
        s(:const, nil, :BaseListener),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ListenerMixin)),
          s(:def, :xmldecl,
            s(:args,
              s(:arg, :version),
              s(:arg, :encoding),
              s(:arg, :standalone)),
            s(:begin,
              s(:zsuper),
              s(:ivasgn, :@encoding,
                s(:str, "UTF-8")))))))))
