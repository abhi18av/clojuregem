s(:begin,
  s(:send, nil, :require,
    s(:str, "rss/utils")),
  s(:module,
    s(:const, nil, :RSS),
    s(:begin,
      s(:module,
        s(:const, nil, :XMLStyleSheetMixin),
        s(:begin,
          s(:send, nil, :attr_accessor,
            s(:sym, :xml_stylesheets)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:zsuper),
              s(:ivasgn, :@xml_stylesheets,
                s(:array)))),
          s(:send, nil, :private),
          s(:def, :xml_stylesheet_pi,
            s(:args),
            s(:begin,
              s(:lvasgn, :xsss,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:ivar, :@xml_stylesheets), :collect),
                    s(:args,
                      s(:arg, :xss)),
                    s(:begin,
                      s(:lvasgn, :pi,
                        s(:send,
                          s(:lvar, :xss), :to_s)),
                      s(:if,
                        s(:match_with_lvasgn,
                          s(:regexp,
                            s(:str, "\\A\\s*\\z"),
                            s(:regopt)),
                          s(:lvar, :pi)),
                        s(:lvasgn, :pi,
                          s(:nil)), nil),
                      s(:lvar, :pi))), :compact)),
              s(:if,
                s(:send,
                  s(:lvar, :xsss), :empty?), nil,
                s(:send,
                  s(:lvar, :xsss), :push,
                  s(:str, ""))),
              s(:send,
                s(:lvar, :xsss), :join,
                s(:str, "\n")))))),
      s(:class,
        s(:const, nil, :XMLStyleSheet), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :Utils)),
          s(:casgn, nil, :ATTRIBUTES,
            s(:array,
              s(:str, "href"),
              s(:str, "type"),
              s(:str, "title"),
              s(:str, "media"),
              s(:str, "charset"),
              s(:str, "alternate"))),
          s(:casgn, nil, :GUESS_TABLE,
            s(:hash,
              s(:pair,
                s(:str, "xsl"),
                s(:str, "text/xsl")),
              s(:pair,
                s(:str, "css"),
                s(:str, "text/css")))),
          s(:send, nil, :attr_accessor,
            s(:splat,
              s(:const, nil, :ATTRIBUTES))),
          s(:send, nil, :attr_accessor,
            s(:sym, :do_validate)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :attrs)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:send,
                    s(:send,
                      s(:lvar, :attrs), :size), :==,
                    s(:int, 1)),
                  s(:begin,
                    s(:or,
                      s(:send,
                        s(:send,
                          s(:lvar, :attrs), :first), :is_a?,
                        s(:const, nil, :Hash)),
                      s(:send,
                        s(:send,
                          s(:lvar, :attrs), :first), :is_a?,
                        s(:const, nil, :Array))))),
                s(:lvasgn, :attrs,
                  s(:send,
                    s(:lvar, :attrs), :first)), nil),
              s(:ivasgn, :@do_validate,
                s(:true)),
              s(:block,
                s(:send,
                  s(:const, nil, :ATTRIBUTES), :each),
                s(:args,
                  s(:arg, :attr)),
                s(:send, nil, :__send__,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :attr)),
                    s(:str, "=")),
                  s(:nil))),
              s(:lvasgn, :vars,
                s(:send,
                  s(:const, nil, :ATTRIBUTES), :dup)),
              s(:send,
                s(:lvar, :vars), :unshift,
                s(:sym, :do_validate)),
              s(:block,
                s(:send,
                  s(:lvar, :attrs), :each),
                s(:args,
                  s(:arg, :name),
                  s(:arg, :value)),
                s(:if,
                  s(:send,
                    s(:lvar, :vars), :include?,
                    s(:send,
                      s(:lvar, :name), :to_s)),
                  s(:send, nil, :__send__,
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :name)),
                      s(:str, "=")),
                    s(:lvar, :value)), nil)))),
          s(:def, :to_s,
            s(:args),
            s(:begin,
              s(:lvasgn, :rv,
                s(:str, "")),
              s(:if,
                s(:ivar, :@href),
                s(:begin,
                  s(:send,
                    s(:lvar, :rv), :<<,
                    s(:str, "<?xml-stylesheet")),
                  s(:block,
                    s(:send,
                      s(:const, nil, :ATTRIBUTES), :each),
                    s(:args,
                      s(:arg, :name)),
                    s(:if,
                      s(:send, nil, :__send__,
                        s(:lvar, :name)),
                      s(:send,
                        s(:lvar, :rv), :<<,
                        s(:dstr,
                          s(:str, " "),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "=\""),
                          s(:begin,
                            s(:send, nil, :h,
                              s(:send, nil, :__send__,
                                s(:lvar, :name)))),
                          s(:str, "\""))), nil)),
                  s(:send,
                    s(:lvar, :rv), :<<,
                    s(:str, "?>"))), nil),
              s(:lvar, :rv))),
          s(:send, nil, :remove_method,
            s(:sym, :href=)),
          s(:def, :href=,
            s(:args,
              s(:arg, :value)),
            s(:begin,
              s(:ivasgn, :@href,
                s(:lvar, :value)),
              s(:if,
                s(:and,
                  s(:ivar, :@href),
                  s(:send,
                    s(:ivar, :@type), :nil?)),
                s(:ivasgn, :@type,
                  s(:send, nil, :guess_type,
                    s(:ivar, :@href))), nil),
              s(:ivar, :@href))),
          s(:send, nil, :remove_method,
            s(:sym, :alternate=)),
          s(:def, :alternate=,
            s(:args,
              s(:arg, :value)),
            s(:begin,
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :value), :nil?),
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "\\A(?:yes|no)\\z"),
                      s(:regopt)),
                    s(:lvar, :value))),
                s(:ivasgn, :@alternate,
                  s(:lvar, :value)),
                s(:if,
                  s(:ivar, :@do_validate),
                  s(:begin,
                    s(:lvasgn, :args,
                      s(:array,
                        s(:str, "?xml-stylesheet?"),
                        s(:dstr,
                          s(:str, "alternate=\""),
                          s(:begin,
                            s(:lvar, :value)),
                          s(:str, "\"")))),
                    s(:send, nil, :raise,
                      s(:send,
                        s(:const, nil, :NotAvailableValueError), :new,
                        s(:splat,
                          s(:lvar, :args))))), nil)),
              s(:ivar, :@alternate))),
          s(:def, :setup_maker,
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:lvasgn, :xss,
                s(:send,
                  s(:send,
                    s(:lvar, :maker), :xml_stylesheets), :new_xml_stylesheet)),
              s(:block,
                s(:send,
                  s(:const, nil, :ATTRIBUTES), :each),
                s(:args,
                  s(:arg, :attr)),
                s(:send,
                  s(:lvar, :xss), :__send__,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :attr)),
                    s(:str, "=")),
                  s(:send, nil, :__send__,
                    s(:lvar, :attr)))))),
          s(:send, nil, :private),
          s(:def, :guess_type,
            s(:args,
              s(:arg, :filename)),
            s(:begin,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\.([^.]+)$"),
                  s(:regopt)),
                s(:lvar, :filename)),
              s(:send,
                s(:const, nil, :GUESS_TABLE), :[],
                s(:nth_ref, 1)))))))))
