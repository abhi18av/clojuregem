s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:send, nil, :require,
    s(:str, "rexml/streamlistener")),
  s(:module,
    s(:const, nil, :RSS),
    s(:begin,
      s(:class,
        s(:const, nil, :REXMLParser),
        s(:const, nil, :BaseParser),
        s(:begin,
          s(:sclass,
            s(:self),
            s(:def, :listener,
              s(:args),
              s(:const, nil, :REXMLListener))),
          s(:send, nil, :private),
          s(:def, :_parse,
            s(:args),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const,
                    s(:const, nil, :REXML), :Document), :parse_stream,
                  s(:ivar, :@rss),
                  s(:ivar, :@listener)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :RuntimeError)),
                  s(:lvasgn, :e),
                  s(:send, nil, :raise,
                    s(:block,
                      s(:send,
                        s(:const, nil, :NotWellFormedError), :new),
                      s(:args),
                      s(:send,
                        s(:lvar, :e), :message)))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :REXML), :ParseException)),
                  s(:lvasgn, :e),
                  s(:begin,
                    s(:lvasgn, :context,
                      s(:send,
                        s(:lvar, :e), :context)),
                    s(:if,
                      s(:lvar, :context),
                      s(:lvasgn, :line,
                        s(:send,
                          s(:lvar, :context), :[],
                          s(:int, 0))), nil),
                    s(:send, nil, :raise,
                      s(:block,
                        s(:send,
                          s(:const, nil, :NotWellFormedError), :new,
                          s(:lvar, :line)),
                        s(:args),
                        s(:send,
                          s(:lvar, :e), :message))))), nil))))),
      s(:class,
        s(:const, nil, :REXMLListener),
        s(:const, nil, :BaseListener),
        s(:begin,
          s(:send, nil, :include,
            s(:const,
              s(:const, nil, :REXML), :StreamListener)),
          s(:send, nil, :include,
            s(:const, nil, :ListenerMixin)),
          s(:sclass,
            s(:self),
            s(:def, :raise_for_undefined_entity?,
              s(:args),
              s(:false))),
          s(:def, :xmldecl,
            s(:args,
              s(:arg, :version),
              s(:arg, :encoding),
              s(:arg, :standalone)),
            s(:begin,
              s(:super,
                s(:lvar, :version),
                s(:lvar, :encoding),
                s(:send,
                  s(:lvar, :standalone), :==,
                  s(:str, "yes"))),
              s(:ivasgn, :@encoding,
                s(:str, "UTF-8")))),
          s(:send, nil, :alias_method,
            s(:sym, :cdata),
            s(:sym, :text)))))))
