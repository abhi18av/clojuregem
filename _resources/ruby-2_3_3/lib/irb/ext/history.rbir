s(:module,
  s(:const, nil, :IRB),
  s(:begin,
    s(:class,
      s(:const, nil, :Context), nil,
      s(:begin,
        s(:send,
          s(:const, nil, :NOPRINTING_IVARS), :push,
          s(:str, "@eval_history_values")),
        s(:alias,
          s(:sym, :_set_last_value),
          s(:sym, :set_last_value)),
        s(:def, :set_last_value,
          s(:args,
            s(:arg, :value)),
          s(:begin,
            s(:send, nil, :_set_last_value,
              s(:lvar, :value)),
            s(:if,
              s(:ivar, :@eval_history),
              s(:begin,
                s(:send,
                  s(:ivar, :@eval_history_values), :push,
                  s(:ivar, :@line_no),
                  s(:ivar, :@last_value)),
                s(:send,
                  s(:ivar, :@workspace), :evaluate,
                  s(:self),
                  s(:str, "__ = IRB.CurrentContext.instance_eval{@eval_history_values}"))), nil),
            s(:ivar, :@last_value))),
        s(:send, nil, :attr_reader,
          s(:sym, :eval_history)),
        s(:def, :eval_history=,
          s(:args,
            s(:arg, :no)),
          s(:begin,
            s(:if,
              s(:lvar, :no),
              s(:if,
                s(:and,
                  s(:defined?,
                    s(:ivar, :@eval_history)),
                  s(:ivar, :@eval_history)),
                s(:send,
                  s(:ivar, :@eval_history_values), :size,
                  s(:lvar, :no)),
                s(:begin,
                  s(:ivasgn, :@eval_history_values,
                    s(:send,
                      s(:const, nil, :History), :new,
                      s(:lvar, :no))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :IRB), :conf), :[]=,
                    s(:sym, :__TMP__EHV__),
                    s(:ivar, :@eval_history_values)),
                  s(:send,
                    s(:ivar, :@workspace), :evaluate,
                    s(:self),
                    s(:str, "__ = IRB.conf[:__TMP__EHV__]")),
                  s(:send,
                    s(:send,
                      s(:const, nil, :IRB), :conf), :delete,
                    s(:sym, :__TMP_EHV__)))),
              s(:ivasgn, :@eval_history_values,
                s(:nil))),
            s(:ivasgn, :@eval_history,
              s(:lvar, :no)))))),
    s(:class,
      s(:const, nil, :History), nil,
      s(:begin,
        s(:def, :initialize,
          s(:args,
            s(:optarg, :size,
              s(:int, 16))),
          s(:begin,
            s(:ivasgn, :@size,
              s(:lvar, :size)),
            s(:ivasgn, :@contents,
              s(:array)))),
        s(:def, :size,
          s(:args,
            s(:arg, :size)),
          s(:begin,
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :size), :!=,
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :size), :<,
                  s(:ivar, :@size))),
              s(:ivasgn, :@contents,
                s(:send,
                  s(:ivar, :@contents), :[],
                  s(:irange,
                    s(:send,
                      s(:ivar, :@size), :-,
                      s(:lvar, :size)),
                    s(:ivar, :@size)))), nil),
            s(:ivasgn, :@size,
              s(:lvar, :size)))),
        s(:def, :[],
          s(:args,
            s(:arg, :idx)),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:send,
                  s(:lvar, :idx), :>=,
                  s(:int, 0)),
                s(:send,
                  s(:block,
                    s(:send,
                      s(:ivar, :@contents), :find),
                    s(:args,
                      s(:arg, :no),
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :no), :==,
                      s(:lvar, :idx))), :[],
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:ivar, :@contents), :[],
                    s(:lvar, :idx)), :[],
                  s(:int, 1))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NameError)), nil,
                s(:nil)), nil))),
        s(:def, :push,
          s(:args,
            s(:arg, :no),
            s(:arg, :val)),
          s(:begin,
            s(:send,
              s(:ivar, :@contents), :push,
              s(:array,
                s(:lvar, :no),
                s(:lvar, :val))),
            s(:if,
              s(:and,
                s(:send,
                  s(:ivar, :@size), :!=,
                  s(:int, 0)),
                s(:send,
                  s(:send,
                    s(:ivar, :@contents), :size), :>,
                  s(:ivar, :@size))),
              s(:send,
                s(:ivar, :@contents), :shift), nil))),
        s(:alias,
          s(:sym, :real_inspect),
          s(:sym, :inspect)),
        s(:def, :inspect,
          s(:args),
          s(:begin,
            s(:if,
              s(:send,
                s(:ivar, :@contents), :empty?),
              s(:return,
                s(:send, nil, :real_inspect)), nil),
            s(:if,
              s(:send,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :last,
                      s(:send,
                        s(:ivar, :@contents), :pop))), :[],
                  s(:int, 1)), :equal?,
                s(:self)), nil,
              s(:begin,
                s(:send,
                  s(:ivar, :@contents), :push,
                  s(:lvar, :last)),
                s(:lvasgn, :last,
                  s(:nil)))),
            s(:lvasgn, :str,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@contents), :collect),
                  s(:args,
                    s(:arg, :no),
                    s(:arg, :val)),
                  s(:if,
                    s(:send,
                      s(:lvar, :val), :equal?,
                      s(:self)),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :no)),
                      s(:str, " ...self-history...")),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :no)),
                      s(:str, " "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :val), :inspect))))), :join,
                s(:str, "\n"))),
            s(:if,
              s(:send,
                s(:lvar, :str), :==,
                s(:str, "")),
              s(:lvasgn, :str,
                s(:str, "Empty.")), nil),
            s(:if,
              s(:lvar, :last),
              s(:send,
                s(:ivar, :@contents), :push,
                s(:lvar, :last)), nil),
            s(:lvar, :str)))))))
