s(:begin,
  s(:send, nil, :require,
    s(:str, "tracer")),
  s(:module,
    s(:const, nil, :IRB),
    s(:begin,
      s(:defs,
        s(:const, nil, :IRB), :initialize_tracer,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :Tracer), :verbose=,
            s(:false)),
          s(:block,
            s(:send,
              s(:const, nil, :Tracer), :add_filter),
            s(:args,
              s(:arg, :event),
              s(:arg, :file),
              s(:arg, :line),
              s(:arg, :id),
              s(:arg, :binding),
              s(:restarg, :rests)),
            s(:and,
              s(:send,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :quote,
                      s(:send,
                        s(:ivar, :@CONF), :[],
                        s(:sym, :IRB_LIB_PATH)))),
                  s(:regopt)), :!~,
                s(:lvar, :file)),
              s(:send,
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:lvar, :file)), :!=,
                s(:str, "irb.rb")))))),
      s(:class,
        s(:const, nil, :Context), nil,
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :use_tracer)),
          s(:alias,
            s(:sym, :use_tracer?),
            s(:sym, :use_tracer)),
          s(:def, :use_tracer=,
            s(:args,
              s(:arg, :opt)),
            s(:begin,
              s(:if,
                s(:lvar, :opt),
                s(:block,
                  s(:send,
                    s(:const, nil, :Tracer), :set_get_line_procs,
                    s(:ivar, :@irb_path)),
                  s(:args,
                    s(:arg, :line_no),
                    s(:restarg, :rests)),
                  s(:send,
                    s(:ivar, :@io), :line,
                    s(:lvar, :line_no))),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:lvar, :opt), :!),
                    s(:ivar, :@use_tracer)),
                  s(:send,
                    s(:const, nil, :Tracer), :off), nil)),
              s(:ivasgn, :@use_tracer,
                s(:lvar, :opt)))))),
      s(:class,
        s(:const, nil, :WorkSpace), nil,
        s(:begin,
          s(:alias,
            s(:sym, :__evaluate__),
            s(:sym, :evaluate)),
          s(:def, :evaluate,
            s(:args,
              s(:arg, :context),
              s(:arg, :statements),
              s(:optarg, :file,
                s(:nil)),
              s(:optarg, :line,
                s(:nil))),
            s(:if,
              s(:and,
                s(:and,
                  s(:send,
                    s(:lvar, :context), :use_tracer?),
                  s(:send,
                    s(:lvar, :file), :!=,
                    s(:nil))),
                s(:send,
                  s(:lvar, :line), :!=,
                  s(:nil))),
              s(:begin,
                s(:send,
                  s(:const, nil, :Tracer), :on),
                s(:kwbegin,
                  s(:ensure,
                    s(:send, nil, :__evaluate__,
                      s(:lvar, :context),
                      s(:lvar, :statements),
                      s(:lvar, :file),
                      s(:lvar, :line)),
                    s(:send,
                      s(:const, nil, :Tracer), :off)))),
              s(:send, nil, :__evaluate__,
                s(:lvar, :context),
                s(:lvar, :statements),
                s(:or,
                  s(:lvar, :file),
                  s(:str, "(string)")),
                s(:or,
                  s(:lvar, :line),
                  s(:int, 65))))))),
      s(:send,
        s(:const, nil, :IRB), :initialize_tracer))))
