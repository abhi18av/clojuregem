s(:module,
  s(:const, nil, :IRB),
  s(:sclass,
    s(:begin,
      s(:casgn, nil, :MagicFile,
        s(:send,
          s(:const, nil, :Object), :new))),
    s(:begin,
      s(:casgn, nil, :ENCODING_SPEC_RE,
        s(:regexp,
          s(:str, "coding\\s*[=:]\\s*([[:alnum:]\\-_]+)"),
          s(:regopt))),
      s(:def, :open,
        s(:args,
          s(:arg, :path)),
        s(:begin,
          s(:lvasgn, :io,
            s(:send,
              s(:const, nil, :File), :open,
              s(:lvar, :path),
              s(:str, "rb"))),
          s(:lvasgn, :line,
            s(:send,
              s(:lvar, :io), :gets)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :line), :[],
                s(:int, 0),
                s(:int, 2)), :==,
              s(:str, "#!")),
            s(:lvasgn, :line,
              s(:send,
                s(:lvar, :io), :gets)), nil),
          s(:lvasgn, :encoding,
            s(:send, nil, :detect_encoding,
              s(:lvar, :line))),
          s(:lvasgn, :internal_encoding,
            s(:lvar, :encoding)),
          s(:or_asgn,
            s(:lvasgn, :encoding),
            s(:send, nil, :default_src_encoding)),
          s(:send,
            s(:lvar, :io), :rewind),
          s(:send,
            s(:lvar, :io), :set_encoding,
            s(:lvar, :encoding),
            s(:lvar, :internal_encoding)),
          s(:if,
            s(:send, nil, :block_given?),
            s(:kwbegin,
              s(:ensure,
                s(:return,
                  s(:begin,
                    s(:yield,
                      s(:lvar, :io)))),
                s(:send,
                  s(:lvar, :io), :close))),
            s(:return,
              s(:lvar, :io))))),
      s(:send, nil, :private),
      s(:def, :detect_encoding,
        s(:args,
          s(:arg, :line)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :line), :[],
                s(:int, 0)), :==,
              s(:str, "#")), nil,
            s(:return)),
          s(:lvasgn, :line,
            s(:send,
              s(:lvar, :line), :[],
              s(:irange,
                s(:int, 1),
                s(:int, -1)))),
          s(:if,
            s(:send,
              s(:lvar, :line), :[],
              s(:regexp,
                s(:str, "-\\*-\\s*(.*?)\\s*-*-$"),
                s(:regopt))),
            s(:lvasgn, :line,
              s(:nth_ref, 1)), nil),
          s(:if,
            s(:send,
              s(:const, nil, :ENCODING_SPEC_RE), :=~,
              s(:lvar, :line)), nil,
            s(:return,
              s(:nil))),
          s(:lvasgn, :encoding,
            s(:nth_ref, 1)),
          s(:return,
            s(:send,
              s(:lvar, :encoding), :sub,
              s(:regexp,
                s(:str, "-(?:mac|dos|unix)"),
                s(:regopt, :i)),
              s(:str, ""))))))))
