s(:begin,
  s(:send, nil, :require,
    s(:str, "readline")),
  s(:module,
    s(:const, nil, :IRB),
    s(:module,
      s(:const, nil, :InputCompletor),
      s(:begin,
        s(:casgn, nil, :ReservedWords,
          s(:array,
            s(:str, "BEGIN"),
            s(:str, "END"),
            s(:str, "alias"),
            s(:str, "and"),
            s(:str, "begin"),
            s(:str, "break"),
            s(:str, "case"),
            s(:str, "class"),
            s(:str, "def"),
            s(:str, "defined"),
            s(:str, "do"),
            s(:str, "else"),
            s(:str, "elsif"),
            s(:str, "end"),
            s(:str, "ensure"),
            s(:str, "false"),
            s(:str, "for"),
            s(:str, "if"),
            s(:str, "in"),
            s(:str, "module"),
            s(:str, "next"),
            s(:str, "nil"),
            s(:str, "not"),
            s(:str, "or"),
            s(:str, "redo"),
            s(:str, "rescue"),
            s(:str, "retry"),
            s(:str, "return"),
            s(:str, "self"),
            s(:str, "super"),
            s(:str, "then"),
            s(:str, "true"),
            s(:str, "undef"),
            s(:str, "unless"),
            s(:str, "until"),
            s(:str, "when"),
            s(:str, "while"),
            s(:str, "yield"))),
        s(:casgn, nil, :CompletionProc,
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :input)),
            s(:begin,
              s(:lvasgn, :bind,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :IRB), :conf), :[],
                      s(:sym, :MAIN_CONTEXT)), :workspace), :binding)),
              s(:case,
                s(:lvar, :input),
                s(:when,
                  s(:regexp,
                    s(:str, "^(([\"'`]).*\\2)\\.([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 3))),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :String), :instance_methods), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^(/[^/]*/)\\.([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 2))),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Regexp), :instance_methods), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^([^\\]]*\\])\\.([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 2))),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Array), :instance_methods), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^([^\\}]*\\})\\.([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 2))),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Proc), :instance_methods), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:op_asgn,
                      s(:lvasgn, :candidates), :|,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Hash), :instance_methods), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^(:[^:.]*)$"),
                    s(:regopt)),
                  s(:if,
                    s(:send,
                      s(:const, nil, :Symbol), :respond_to?,
                      s(:sym, :all_symbols)),
                    s(:begin,
                      s(:lvasgn, :sym,
                        s(:nth_ref, 1)),
                      s(:lvasgn, :candidates,
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:const, nil, :Symbol), :all_symbols), :collect),
                          s(:args,
                            s(:arg, :s)),
                          s(:send,
                            s(:str, ":"), :+,
                            s(:send,
                              s(:lvar, :s), :id2name)))),
                      s(:send,
                        s(:lvar, :candidates), :grep,
                        s(:regexp,
                          s(:str, "^"),
                          s(:begin,
                            s(:send,
                              s(:const, nil, :Regexp), :quote,
                              s(:lvar, :sym))),
                          s(:regopt)))),
                    s(:array))),
                s(:when,
                  s(:regexp,
                    s(:str, "^::([A-Z][^:\\.\\(]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Object), :constants), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :candidates), :grep,
                          s(:regexp,
                            s(:str, "^"),
                            s(:begin,
                              s(:lvar, :receiver)),
                            s(:regopt))), :collect),
                      s(:args,
                        s(:arg, :e)),
                      s(:send,
                        s(:str, "::"), :+,
                        s(:lvar, :e))))),
                s(:when,
                  s(:regexp,
                    s(:str, "^([A-Z].*)::([^:.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 2))),
                    s(:kwbegin,
                      s(:rescue,
                        s(:begin,
                          s(:lvasgn, :candidates,
                            s(:send, nil, :eval,
                              s(:dstr,
                                s(:begin,
                                  s(:lvar, :receiver)),
                                s(:str, ".constants.collect{|m| m.to_s}")),
                              s(:lvar, :bind))),
                          s(:op_asgn,
                            s(:lvasgn, :candidates), :|,
                            s(:send, nil, :eval,
                              s(:dstr,
                                s(:begin,
                                  s(:lvar, :receiver)),
                                s(:str, ".methods.collect{|m| m.to_s}")),
                              s(:lvar, :bind)))),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :Exception)), nil,
                          s(:lvasgn, :candidates,
                            s(:array))), nil)),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates),
                      s(:str, "::")))),
                s(:when,
                  s(:regexp,
                    s(:str, "^(:[^:.]+)(\\.|::)([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :sep,
                      s(:nth_ref, 2)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 3))),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Symbol), :instance_methods), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates),
                      s(:lvar, :sep)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^(-?(0[dbo])?[0-9_]+(\\.[0-9_]+)?([eE]-?[0-9]+)?)(\\.|::)([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :sep,
                      s(:nth_ref, 5)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 6))),
                    s(:kwbegin,
                      s(:rescue,
                        s(:lvasgn, :candidates,
                          s(:block,
                            s(:send,
                              s(:send,
                                s(:send, nil, :eval,
                                  s(:lvar, :receiver),
                                  s(:lvar, :bind)), :methods), :collect),
                            s(:args,
                              s(:arg, :m)),
                            s(:send,
                              s(:lvar, :m), :to_s))),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :Exception)), nil,
                          s(:lvasgn, :candidates,
                            s(:array))), nil)),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates),
                      s(:lvar, :sep)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^(-?0x[0-9a-fA-F_]+)(\\.|::)([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :sep,
                      s(:nth_ref, 2)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 3))),
                    s(:kwbegin,
                      s(:rescue,
                        s(:lvasgn, :candidates,
                          s(:block,
                            s(:send,
                              s(:send,
                                s(:send, nil, :eval,
                                  s(:lvar, :receiver),
                                  s(:lvar, :bind)), :methods), :collect),
                            s(:args,
                              s(:arg, :m)),
                            s(:send,
                              s(:lvar, :m), :to_s))),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :Exception)), nil,
                          s(:lvasgn, :candidates,
                            s(:array))), nil)),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates),
                      s(:lvar, :sep)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^(\\$[^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :regmessage,
                      s(:send,
                        s(:const, nil, :Regexp), :new,
                        s(:send,
                          s(:const, nil, :Regexp), :quote,
                          s(:nth_ref, 1)))),
                    s(:lvasgn, :candidates,
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:send, nil, :global_variables), :collect),
                          s(:args,
                            s(:arg, :m)),
                          s(:send,
                            s(:lvar, :m), :to_s)), :grep,
                        s(:lvar, :regmessage))))),
                s(:when,
                  s(:regexp,
                    s(:str, "^([^.\"].*)(\\.|::)([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:nth_ref, 1)),
                    s(:lvasgn, :sep,
                      s(:nth_ref, 2)),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 3))),
                    s(:lvasgn, :gv,
                      s(:block,
                        s(:send,
                          s(:send, nil, :eval,
                            s(:str, "global_variables"),
                            s(:lvar, :bind)), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:lvasgn, :lv,
                      s(:block,
                        s(:send,
                          s(:send, nil, :eval,
                            s(:str, "local_variables"),
                            s(:lvar, :bind)), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:lvasgn, :iv,
                      s(:block,
                        s(:send,
                          s(:send, nil, :eval,
                            s(:str, "instance_variables"),
                            s(:lvar, :bind)), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:lvasgn, :cv,
                      s(:block,
                        s(:send,
                          s(:send, nil, :eval,
                            s(:str, "self.class.constants"),
                            s(:lvar, :bind)), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:if,
                      s(:or,
                        s(:send,
                          s(:begin,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:lvar, :gv), :|,
                                  s(:lvar, :lv)), :|,
                                s(:lvar, :iv)), :|,
                              s(:lvar, :cv))), :include?,
                          s(:lvar, :receiver)),
                        s(:and,
                          s(:match_with_lvasgn,
                            s(:regexp,
                              s(:str, "^[A-Z]"),
                              s(:regopt)),
                            s(:lvar, :receiver)),
                          s(:send,
                            s(:regexp,
                              s(:str, "\\."),
                              s(:regopt)), :!~,
                            s(:lvar, :receiver)))),
                      s(:kwbegin,
                        s(:rescue,
                          s(:begin,
                            s(:lvasgn, :candidates,
                              s(:array)),
                            s(:lvasgn, :rec,
                              s(:send, nil, :eval,
                                s(:lvar, :receiver),
                                s(:lvar, :bind))),
                            s(:if,
                              s(:and,
                                s(:send,
                                  s(:lvar, :sep), :==,
                                  s(:str, "::")),
                                s(:send,
                                  s(:lvar, :rec), :kind_of?,
                                  s(:const, nil, :Module))),
                              s(:lvasgn, :candidates,
                                s(:block,
                                  s(:send,
                                    s(:send,
                                      s(:lvar, :rec), :constants), :collect),
                                  s(:args,
                                    s(:arg, :m)),
                                  s(:send,
                                    s(:lvar, :m), :to_s))), nil),
                            s(:op_asgn,
                              s(:lvasgn, :candidates), :|,
                              s(:block,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :rec), :methods), :collect),
                                s(:args,
                                  s(:arg, :m)),
                                s(:send,
                                  s(:lvar, :m), :to_s)))),
                          s(:resbody,
                            s(:array,
                              s(:const, nil, :Exception)), nil,
                            s(:lvasgn, :candidates,
                              s(:array))), nil)),
                      s(:begin,
                        s(:lvasgn, :candidates,
                          s(:array)),
                        s(:block,
                          s(:send,
                            s(:const, nil, :ObjectSpace), :each_object,
                            s(:const, nil, :Module)),
                          s(:args,
                            s(:arg, :m)),
                          s(:begin,
                            s(:kwbegin,
                              s(:rescue,
                                s(:lvasgn, :name,
                                  s(:send,
                                    s(:lvar, :m), :name)),
                                s(:resbody,
                                  s(:array,
                                    s(:const, nil, :Exception)), nil,
                                  s(:lvasgn, :name,
                                    s(:str, ""))), nil)),
                            s(:kwbegin,
                              s(:rescue,
                                s(:if,
                                  s(:and,
                                    s(:send,
                                      s(:lvar, :name), :!=,
                                      s(:str, "IRB::Context")),
                                    s(:match_with_lvasgn,
                                      s(:regexp,
                                        s(:str, "^(IRB|SLex|RubyLex|RubyToken)"),
                                        s(:regopt)),
                                      s(:lvar, :name))),
                                  s(:next), nil),
                                s(:resbody,
                                  s(:array,
                                    s(:const, nil, :Exception)), nil,
                                  s(:next)), nil)),
                            s(:send,
                              s(:lvar, :candidates), :concat,
                              s(:block,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :m), :instance_methods,
                                    s(:false)), :collect),
                                s(:args,
                                  s(:arg, :x)),
                                s(:send,
                                  s(:lvar, :x), :to_s))))),
                        s(:send,
                          s(:lvar, :candidates), :sort!),
                        s(:send,
                          s(:lvar, :candidates), :uniq!))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates),
                      s(:lvar, :sep)))),
                s(:when,
                  s(:regexp,
                    s(:str, "^\\.([^.]*)$"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :receiver,
                      s(:str, "")),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:nth_ref, 1))),
                    s(:lvasgn, :candidates,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :String), :instance_methods,
                            s(:true)), :collect),
                        s(:args,
                          s(:arg, :m)),
                        s(:send,
                          s(:lvar, :m), :to_s))),
                    s(:send, nil, :select_message,
                      s(:lvar, :receiver),
                      s(:lvar, :message),
                      s(:lvar, :candidates)))),
                s(:begin,
                  s(:lvasgn, :candidates,
                    s(:block,
                      s(:send,
                        s(:send, nil, :eval,
                          s(:str, "methods | private_methods | local_variables | instance_variables | self.class.constants"),
                          s(:lvar, :bind)), :collect),
                      s(:args,
                        s(:arg, :m)),
                      s(:send,
                        s(:lvar, :m), :to_s))),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :candidates), :|,
                        s(:const, nil, :ReservedWords))), :grep,
                    s(:regexp,
                      s(:str, "^"),
                      s(:begin,
                        s(:send,
                          s(:const, nil, :Regexp), :quote,
                          s(:lvar, :input))),
                      s(:regopt)))))))),
        s(:casgn, nil, :Operators,
          s(:array,
            s(:str, "%"),
            s(:str, "&"),
            s(:str, "*"),
            s(:str, "**"),
            s(:str, "+"),
            s(:str, "-"),
            s(:str, "/"),
            s(:str, "<"),
            s(:str, "<<"),
            s(:str, "<="),
            s(:str, "<=>"),
            s(:str, "=="),
            s(:str, "==="),
            s(:str, "=~"),
            s(:str, ">"),
            s(:str, ">="),
            s(:str, ">>"),
            s(:str, "[]"),
            s(:str, "[]="),
            s(:str, "^"),
            s(:str, "!"),
            s(:str, "!="),
            s(:str, "!~"))),
        s(:defs,
          s(:self), :select_message,
          s(:args,
            s(:arg, :receiver),
            s(:arg, :message),
            s(:arg, :candidates),
            s(:optarg, :sep,
              s(:str, "."))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :candidates), :grep,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:lvar, :message)),
                  s(:regopt))), :collect),
            s(:args,
              s(:arg, :e)),
            s(:case,
              s(:lvar, :e),
              s(:when,
                s(:regexp,
                  s(:str, "^[a-zA-Z_]"),
                  s(:regopt)),
                s(:send,
                  s(:send,
                    s(:lvar, :receiver), :+,
                    s(:lvar, :sep)), :+,
                  s(:lvar, :e))),
              s(:when,
                s(:regexp,
                  s(:str, "^[0-9]"),
                  s(:regopt)), nil),
              s(:when,
                s(:splat,
                  s(:const, nil, :Operators)), nil), nil)))))),
  s(:if,
    s(:send,
      s(:const, nil, :Readline), :respond_to?,
      s(:str, "basic_word_break_characters=")),
    s(:send,
      s(:const, nil, :Readline), :basic_word_break_characters=,
      s(:str, " \t\n`><=;|&{(")), nil),
  s(:send,
    s(:const, nil, :Readline), :completion_append_character=,
    s(:nil)),
  s(:send,
    s(:const, nil, :Readline), :completion_proc=,
    s(:const,
      s(:const,
        s(:const, nil, :IRB), :InputCompletor), :CompletionProc)))
