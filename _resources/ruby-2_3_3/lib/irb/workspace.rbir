s(:module,
  s(:const, nil, :IRB),
  s(:class,
    s(:const, nil, :WorkSpace), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:restarg, :main)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :main), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Binding)),
            s(:ivasgn, :@binding,
              s(:send,
                s(:lvar, :main), :shift)),
            s(:if,
              s(:send,
                s(:send,
                  s(:const, nil, :IRB), :conf), :[],
                s(:sym, :SINGLE_IRB)),
              s(:ivasgn, :@binding,
                s(:const, nil, :TOPLEVEL_BINDING)),
              s(:case,
                s(:send,
                  s(:send,
                    s(:const, nil, :IRB), :conf), :[],
                  s(:sym, :CONTEXT_MODE)),
                s(:when,
                  s(:int, 0),
                  s(:ivasgn, :@binding,
                    s(:send, nil, :eval,
                      s(:str, "proc{binding}.call"),
                      s(:const, nil, :TOPLEVEL_BINDING),
                      s(:str, "(string)"),
                      s(:int, 29)))),
                s(:when,
                  s(:int, 1),
                  s(:begin,
                    s(:send, nil, :require,
                      s(:str, "tempfile")),
                    s(:lvasgn, :f,
                      s(:send,
                        s(:const, nil, :Tempfile), :open,
                        s(:str, "irb-binding"))),
                    s(:send,
                      s(:lvar, :f), :print,
                      s(:str, "      $binding = binding\n")),
                    s(:send,
                      s(:lvar, :f), :close),
                    s(:send, nil, :load,
                      s(:send,
                        s(:lvar, :f), :path)),
                    s(:ivasgn, :@binding,
                      s(:gvar, :$binding)))),
                s(:when,
                  s(:int, 2),
                  s(:begin,
                    s(:if,
                      s(:defined?,
                        s(:const, nil, :BINDING_QUEUE)), nil,
                      s(:begin,
                        s(:send, nil, :require,
                          s(:str, "thread")),
                        s(:send,
                          s(:const, nil, :IRB), :const_set,
                          s(:sym, :BINDING_QUEUE),
                          s(:send,
                            s(:const, nil, :SizedQueue), :new,
                            s(:int, 1))),
                        s(:send,
                          s(:const, nil, :Thread), :abort_on_exception=,
                          s(:true)),
                        s(:block,
                          s(:send,
                            s(:const, nil, :Thread), :start),
                          s(:args),
                          s(:send, nil, :eval,
                            s(:str, "require \"irb/ws-for-case-2\""),
                            s(:const, nil, :TOPLEVEL_BINDING),
                            s(:str, "(string)"),
                            s(:int, 47))),
                        s(:send,
                          s(:const, nil, :Thread), :pass))),
                    s(:ivasgn, :@binding,
                      s(:send,
                        s(:const, nil, :BINDING_QUEUE), :pop)))),
                s(:when,
                  s(:int, 3),
                  s(:ivasgn, :@binding,
                    s(:send, nil, :eval,
                      s(:str, "def irb_binding; private; binding; end; irb_binding"),
                      s(:const, nil, :TOPLEVEL_BINDING),
                      s(:str, "(string)"),
                      s(:send,
                        s(:int, 57), :-,
                        s(:int, 3))))), nil))),
          s(:if,
            s(:send,
              s(:lvar, :main), :empty?),
            s(:ivasgn, :@main,
              s(:send, nil, :eval,
                s(:str, "self"),
                s(:ivar, :@binding))),
            s(:begin,
              s(:ivasgn, :@main,
                s(:send,
                  s(:lvar, :main), :[],
                  s(:int, 0))),
              s(:send,
                s(:send,
                  s(:const, nil, :IRB), :conf), :[]=,
                s(:sym, :__MAIN__),
                s(:ivar, :@main)),
              s(:case,
                s(:ivar, :@main),
                s(:when,
                  s(:const, nil, :Module),
                  s(:ivasgn, :@binding,
                    s(:send, nil, :eval,
                      s(:str, "IRB.conf[:__MAIN__].module_eval('binding', __FILE__, __LINE__)"),
                      s(:ivar, :@binding),
                      s(:str, "(string)"),
                      s(:int, 67)))),
                s(:kwbegin,
                  s(:rescue,
                    s(:ivasgn, :@binding,
                      s(:send, nil, :eval,
                        s(:str, "IRB.conf[:__MAIN__].instance_eval('binding', __FILE__, __LINE__)"),
                        s(:ivar, :@binding),
                        s(:str, "(string)"),
                        s(:int, 70))),
                    s(:resbody,
                      s(:array,
                        s(:const, nil, :TypeError)), nil,
                      s(:send,
                        s(:const, nil, :IRB), :fail,
                        s(:const, nil, :CantChangeBinding),
                        s(:send,
                          s(:ivar, :@main), :inspect))), nil))))),
          s(:send, nil, :eval,
            s(:str, "_=nil"),
            s(:ivar, :@binding)))),
      s(:send, nil, :attr_reader,
        s(:sym, :binding)),
      s(:send, nil, :attr_reader,
        s(:sym, :main)),
      s(:def, :evaluate,
        s(:args,
          s(:arg, :context),
          s(:arg, :statements),
          s(:optarg, :file,
            s(:str, "(string)")),
          s(:optarg, :line,
            s(:int, 86))),
        s(:send, nil, :eval,
          s(:lvar, :statements),
          s(:ivar, :@binding),
          s(:lvar, :file),
          s(:lvar, :line))),
      s(:def, :filter_backtrace,
        s(:args,
          s(:arg, :bt)),
        s(:begin,
          s(:case,
            s(:send,
              s(:send,
                s(:const, nil, :IRB), :conf), :[],
              s(:sym, :CONTEXT_MODE)),
            s(:when,
              s(:int, 0),
              s(:if,
                s(:send,
                  s(:lvar, :bt), :=~,
                  s(:regexp,
                    s(:str, "\\(irb_local_binding\\)"),
                    s(:regopt))),
                s(:return,
                  s(:nil)), nil)),
            s(:when,
              s(:int, 1),
              s(:if,
                s(:begin,
                  s(:or,
                    s(:or,
                      s(:send,
                        s(:lvar, :bt), :=~,
                        s(:regexp,
                          s(:str, "/tmp/irb-binding"),
                          s(:regopt))),
                      s(:send,
                        s(:lvar, :bt), :=~,
                        s(:regexp,
                          s(:str, "irb/.*\\.rb"),
                          s(:regopt)))),
                    s(:send,
                      s(:lvar, :bt), :=~,
                      s(:regexp,
                        s(:str, "irb\\.rb"),
                        s(:regopt))))),
                s(:return,
                  s(:nil)), nil)),
            s(:when,
              s(:int, 2),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :bt), :=~,
                    s(:regexp,
                      s(:str, "irb/.*\\.rb"),
                      s(:regopt))),
                  s(:return,
                    s(:nil)), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :bt), :=~,
                    s(:regexp,
                      s(:str, "irb\\.rb"),
                      s(:regopt))),
                  s(:return,
                    s(:nil)), nil))),
            s(:when,
              s(:int, 3),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :bt), :=~,
                    s(:regexp,
                      s(:str, "irb/.*\\.rb"),
                      s(:regopt))),
                  s(:return,
                    s(:nil)), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :bt), :=~,
                    s(:regexp,
                      s(:str, "irb\\.rb"),
                      s(:regopt))),
                  s(:return,
                    s(:nil)), nil),
                s(:lvasgn, :bt,
                  s(:send,
                    s(:lvar, :bt), :sub,
                    s(:regexp,
                      s(:str, ":\\s*in `irb_binding'"),
                      s(:regopt)),
                    s(:str, ""))))), nil),
          s(:lvar, :bt))),
      s(:defs,
        s(:const, nil, :IRB), :delete_caller,
        s(:args), nil))))
