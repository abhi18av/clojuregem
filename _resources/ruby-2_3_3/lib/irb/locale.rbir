s(:module,
  s(:const, nil, :IRB),
  s(:class,
    s(:const, nil, :Locale), nil,
    s(:begin,
      s(:casgn, nil, :LOCALE_NAME_RE,
        s(:regexp,
          s(:str, "\n"),
          s(:str, "      (?<language>[[:alpha:]]{2,3})\n"),
          s(:str, "      (?:_  (?<territory>[[:alpha:]]{2,3}) )?\n"),
          s(:str, "      (?:\\. (?<codeset>[^@]+) )?\n"),
          s(:str, "      (?:@  (?<modifier>.*) )?\n"),
          s(:str, "    "),
          s(:regopt, :x))),
      s(:casgn, nil, :LOCALE_DIR,
        s(:str, "/lc/")),
      s(:cvasgn, :@@legacy_encoding_alias_map,
        s(:send,
          s(:hash), :freeze)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :locale,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@lang,
            s(:ivasgn, :@territory,
              s(:ivasgn, :@encoding_name,
                s(:ivasgn, :@modifier,
                  s(:nil))))),
          s(:ivasgn, :@locale,
            s(:or,
              s(:or,
                s(:or,
                  s(:or,
                    s(:or,
                      s(:lvar, :locale),
                      s(:send,
                        s(:const, nil, :ENV), :[],
                        s(:str, "IRB_LANG"))),
                    s(:send,
                      s(:const, nil, :ENV), :[],
                      s(:str, "LC_MESSAGES"))),
                  s(:send,
                    s(:const, nil, :ENV), :[],
                    s(:str, "LC_ALL"))),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "LANG"))),
              s(:str, "C"))),
          s(:if,
            s(:lvasgn, :m,
              s(:send,
                s(:const, nil, :LOCALE_NAME_RE), :match,
                s(:ivar, :@locale))),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:ivasgn, :@lang),
                  s(:ivasgn, :@territory),
                  s(:ivasgn, :@encoding_name),
                  s(:ivasgn, :@modifier)),
                s(:array,
                  s(:send,
                    s(:lvar, :m), :[],
                    s(:sym, :language)),
                  s(:send,
                    s(:lvar, :m), :[],
                    s(:sym, :territory)),
                  s(:send,
                    s(:lvar, :m), :[],
                    s(:sym, :codeset)),
                  s(:send,
                    s(:lvar, :m), :[],
                    s(:sym, :modifier)))),
              s(:if,
                s(:ivar, :@encoding_name),
                s(:begin,
                  s(:kwbegin,
                    s(:rescue,
                      s(:send, nil, :load,
                        s(:str, "irb/encoding_aliases.rb")),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :LoadError)), nil, nil), nil)),
                  s(:if,
                    s(:ivasgn, :@encoding,
                      s(:send,
                        s(:cvar, :@@legacy_encoding_alias_map), :[],
                        s(:ivar, :@encoding_name))),
                    s(:send, nil, :warn,
                      s(:send,
                        s(:str, "%s is obsolete. use %s"), :%,
                        s(:array,
                          s(:dstr,
                            s(:begin,
                              s(:ivar, :@lang)),
                            s(:str, "_"),
                            s(:begin,
                              s(:ivar, :@territory)),
                            s(:str, "."),
                            s(:begin,
                              s(:ivar, :@encoding_name))),
                          s(:dstr,
                            s(:begin,
                              s(:ivar, :@lang)),
                            s(:str, "_"),
                            s(:begin,
                              s(:ivar, :@territory)),
                            s(:str, "."),
                            s(:begin,
                              s(:send,
                                s(:ivar, :@encoding), :name)))))), nil),
                  s(:ivasgn, :@encoding,
                    s(:rescue,
                      s(:send,
                        s(:const, nil, :Encoding), :find,
                        s(:ivar, :@encoding_name)),
                      s(:resbody, nil, nil,
                        s(:nil)), nil))), nil)), nil),
          s(:or_asgn,
            s(:ivasgn, :@encoding),
            s(:begin,
              s(:rescue,
                s(:send,
                  s(:const, nil, :Encoding), :find,
                  s(:str, "locale")),
                s(:resbody, nil, nil,
                  s(:const,
                    s(:const, nil, :Encoding), :ASCII_8BIT)), nil))))),
      s(:send, nil, :attr_reader,
        s(:sym, :lang),
        s(:sym, :territory),
        s(:sym, :encoding),
        s(:sym, :modifier)),
      s(:def, :String,
        s(:args,
          s(:arg, :mes)),
        s(:begin,
          s(:lvasgn, :mes,
            s(:super,
              s(:lvar, :mes))),
          s(:if,
            s(:ivar, :@encoding),
            s(:send,
              s(:lvar, :mes), :encode,
              s(:ivar, :@encoding),
              s(:hash,
                s(:pair,
                  s(:sym, :undef),
                  s(:sym, :replace)))),
            s(:lvar, :mes)))),
      s(:def, :format,
        s(:args,
          s(:restarg, :opts)),
        s(:send, nil, :String,
          s(:super,
            s(:splat,
              s(:lvar, :opts))))),
      s(:def, :gets,
        s(:args,
          s(:restarg, :rs)),
        s(:send, nil, :String,
          s(:super,
            s(:splat,
              s(:lvar, :rs))))),
      s(:def, :readline,
        s(:args,
          s(:restarg, :rs)),
        s(:send, nil, :String,
          s(:super,
            s(:splat,
              s(:lvar, :rs))))),
      s(:def, :print,
        s(:args,
          s(:restarg, :opts)),
        s(:begin,
          s(:lvasgn, :ary,
            s(:block,
              s(:send,
                s(:lvar, :opts), :collect),
              s(:args,
                s(:arg, :opt)),
              s(:send, nil, :String,
                s(:lvar, :opt)))),
          s(:super,
            s(:splat,
              s(:lvar, :ary))))),
      s(:def, :printf,
        s(:args,
          s(:restarg, :opts)),
        s(:begin,
          s(:lvasgn, :s,
            s(:send, nil, :format,
              s(:splat,
                s(:lvar, :opts)))),
          s(:send, nil, :print,
            s(:lvar, :s)))),
      s(:def, :puts,
        s(:args,
          s(:restarg, :opts)),
        s(:begin,
          s(:lvasgn, :ary,
            s(:block,
              s(:send,
                s(:lvar, :opts), :collect),
              s(:args,
                s(:arg, :opt)),
              s(:send, nil, :String,
                s(:lvar, :opt)))),
          s(:super,
            s(:splat,
              s(:lvar, :ary))))),
      s(:def, :require,
        s(:args,
          s(:arg, :file),
          s(:optarg, :priv,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :rex,
            s(:send,
              s(:const, nil, :Regexp), :new,
              s(:dstr,
                s(:str, "lc/"),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Regexp), :quote,
                    s(:lvar, :file))),
                s(:str, ".(so|o|sl|rb)?")))),
          s(:if,
            s(:block,
              s(:send,
                s(:gvar, :$"), :find),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :=~,
                s(:lvar, :rex))),
            s(:return,
              s(:false)), nil),
          s(:case,
            s(:lvar, :file),
            s(:when,
              s(:regexp,
                s(:str, "\\.rb$"),
                s(:regopt)),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:send, nil, :load,
                      s(:lvar, :file),
                      s(:lvar, :priv)),
                    s(:send,
                      s(:gvar, :$"), :push,
                      s(:lvar, :file)),
                    s(:return,
                      s(:true))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :LoadError)), nil, nil), nil))),
            s(:when,
              s(:regexp,
                s(:str, "\\.(so|o|sl)$"),
                s(:regopt)),
              s(:return,
                s(:zsuper))), nil),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send, nil, :load,
                  s(:lvasgn, :f,
                    s(:send,
                      s(:lvar, :file), :+,
                      s(:str, ".rb")))),
                s(:send,
                  s(:gvar, :$"), :push,
                  s(:lvar, :f)),
                s(:return,
                  s(:true))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :LoadError)), nil,
                s(:return,
                  s(:send, nil, :ruby_require,
                    s(:lvar, :file)))), nil)))),
      s(:alias,
        s(:sym, :toplevel_load),
        s(:sym, :load)),
      s(:def, :load,
        s(:args,
          s(:arg, :file),
          s(:optarg, :priv,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :found,
            s(:send, nil, :find,
              s(:lvar, :file))),
          s(:if,
            s(:lvar, :found),
            s(:return,
              s(:send, nil, :real_load,
                s(:lvar, :found),
                s(:lvar, :priv))),
            s(:send, nil, :raise,
              s(:const, nil, :LoadError),
              s(:dstr,
                s(:str, "No such file to load -- "),
                s(:begin,
                  s(:lvar, :file))))))),
      s(:def, :find,
        s(:args,
          s(:arg, :file),
          s(:optarg, :paths,
            s(:gvar, :$:))),
        s(:begin,
          s(:lvasgn, :dir,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:lvar, :file))),
          s(:if,
            s(:send,
              s(:lvar, :dir), :==,
              s(:str, ".")),
            s(:lvasgn, :dir,
              s(:str, "")), nil),
          s(:lvasgn, :base,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:lvar, :file))),
          s(:if,
            s(:send,
              s(:lvar, :dir), :start_with?,
              s(:str, "/")),
            s(:return,
              s(:block,
                s(:send,
                  s(:send, nil, :each_localized_path,
                    s(:lvar, :dir),
                    s(:lvar, :base)), :find),
                s(:args,
                  s(:arg, :full_path)),
                s(:send,
                  s(:const, nil, :File), :readable?,
                  s(:lvar, :full_path)))),
            s(:return,
              s(:send, nil, :search_file,
                s(:lvar, :paths),
                s(:lvar, :dir),
                s(:lvar, :base)))))),
      s(:send, nil, :private),
      s(:def, :real_load,
        s(:args,
          s(:arg, :path),
          s(:arg, :priv)),
        s(:begin,
          s(:lvasgn, :src,
            s(:block,
              s(:send,
                s(:const, nil, :MagicFile), :open,
                s(:lvar, :path)),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :read))),
          s(:if,
            s(:lvar, :priv),
            s(:send,
              s(:send, nil, :eval,
                s(:str, "self"),
                s(:const, nil, :TOPLEVEL_BINDING)), :extend,
              s(:block,
                s(:send,
                  s(:const, nil, :Module), :new),
                s(:args),
                s(:send, nil, :eval,
                  s(:lvar, :src),
                  s(:nil),
                  s(:lvar, :path)))),
            s(:send, nil, :eval,
              s(:lvar, :src),
              s(:const, nil, :TOPLEVEL_BINDING),
              s(:lvar, :path))))),
      s(:def, :search_file,
        s(:args,
          s(:arg, :lib_paths),
          s(:arg, :dir),
          s(:arg, :file)),
        s(:begin,
          s(:block,
            s(:send, nil, :each_localized_path,
              s(:lvar, :dir),
              s(:lvar, :file)),
            s(:args,
              s(:arg, :lc_path)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :lib_paths), :each),
                s(:args,
                  s(:arg, :libpath)),
                s(:begin,
                  s(:lvasgn, :full_path,
                    s(:send,
                      s(:const, nil, :File), :join,
                      s(:lvar, :libpath),
                      s(:lvar, :lc_path))),
                  s(:if,
                    s(:send,
                      s(:const, nil, :File), :readable?,
                      s(:lvar, :full_path)),
                    s(:return,
                      s(:lvar, :full_path)), nil))),
              s(:if,
                s(:and,
                  s(:defined?,
                    s(:const, nil, :Gem)),
                  s(:send,
                    s(:const, nil, :Gem), :try_activate,
                    s(:lvar, :lc_path))),
                s(:redo), nil))),
          s(:nil))),
      s(:def, :each_localized_path,
        s(:args,
          s(:arg, :dir),
          s(:arg, :file)),
        s(:begin,
          s(:if,
            s(:send, nil, :block_given?), nil,
            s(:return,
              s(:send, nil, :enum_for,
                s(:sym, :each_localized_path)))),
          s(:block,
            s(:send, nil, :each_sublocale),
            s(:args,
              s(:arg, :lc)),
            s(:yield,
              s(:if,
                s(:send,
                  s(:lvar, :lc), :nil?),
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :dir),
                  s(:const, nil, :LOCALE_DIR),
                  s(:lvar, :file)),
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :dir),
                  s(:const, nil, :LOCALE_DIR),
                  s(:lvar, :lc),
                  s(:lvar, :file))))))),
      s(:def, :each_sublocale,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@lang),
            s(:begin,
              s(:if,
                s(:ivar, :@territory),
                s(:begin,
                  s(:if,
                    s(:ivar, :@encoding_name),
                    s(:begin,
                      s(:if,
                        s(:ivar, :@modifier),
                        s(:yield,
                          s(:dstr,
                            s(:begin,
                              s(:ivar, :@lang)),
                            s(:str, "_"),
                            s(:begin,
                              s(:ivar, :@territory)),
                            s(:str, "."),
                            s(:begin,
                              s(:ivar, :@encoding_name)),
                            s(:str, "@"),
                            s(:begin,
                              s(:ivar, :@modifier)))), nil),
                      s(:yield,
                        s(:dstr,
                          s(:begin,
                            s(:ivar, :@lang)),
                          s(:str, "_"),
                          s(:begin,
                            s(:ivar, :@territory)),
                          s(:str, "."),
                          s(:begin,
                            s(:ivar, :@encoding_name))))), nil),
                  s(:if,
                    s(:ivar, :@modifier),
                    s(:yield,
                      s(:dstr,
                        s(:begin,
                          s(:ivar, :@lang)),
                        s(:str, "_"),
                        s(:begin,
                          s(:ivar, :@territory)),
                        s(:str, "@"),
                        s(:begin,
                          s(:ivar, :@modifier)))), nil),
                  s(:yield,
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@lang)),
                      s(:str, "_"),
                      s(:begin,
                        s(:ivar, :@territory))))), nil),
              s(:if,
                s(:ivar, :@encoding_name),
                s(:begin,
                  s(:if,
                    s(:ivar, :@modifier),
                    s(:yield,
                      s(:dstr,
                        s(:begin,
                          s(:ivar, :@lang)),
                        s(:str, "."),
                        s(:begin,
                          s(:ivar, :@encoding_name)),
                        s(:str, "@"),
                        s(:begin,
                          s(:ivar, :@modifier)))), nil),
                  s(:yield,
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@lang)),
                      s(:str, "."),
                      s(:begin,
                        s(:ivar, :@encoding_name))))), nil),
              s(:if,
                s(:ivar, :@modifier),
                s(:yield,
                  s(:dstr,
                    s(:begin,
                      s(:ivar, :@lang)),
                    s(:str, "@"),
                    s(:begin,
                      s(:ivar, :@modifier)))), nil),
              s(:yield,
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@lang))))), nil),
          s(:yield,
            s(:nil)))))))
