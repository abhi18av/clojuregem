s(:begin,
  s(:class,
    s(:const, nil, :CGI), nil,
    s(:begin,
      s(:module,
        s(:const, nil, :Util), nil),
      s(:send, nil, :extend,
        s(:const, nil, :Util)))),
  s(:module,
    s(:const,
      s(:const, nil, :CGI), :Util),
    s(:begin,
      s(:if,
        s(:defined?,
          s(:cvar, :@@accept_charset)), nil,
        s(:cvasgn, :@@accept_charset,
          s(:str, "UTF-8"))),
      s(:def, :escape,
        s(:args,
          s(:arg, :string)),
        s(:begin,
          s(:lvasgn, :encoding,
            s(:send,
              s(:lvar, :string), :encoding)),
          s(:send,
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :string), :b), :gsub,
                  s(:regexp,
                    s(:str, "([^ a-zA-Z0-9_.-]+)"),
                    s(:regopt))),
                s(:args,
                  s(:arg, :m)),
                s(:send,
                  s(:str, "%"), :+,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :m), :unpack,
                        s(:send,
                          s(:str, "H2"), :*,
                          s(:send,
                            s(:lvar, :m), :bytesize))), :join,
                      s(:str, "%")), :upcase))), :tr,
              s(:str, " "),
              s(:str, "+")), :force_encoding,
            s(:lvar, :encoding)))),
      s(:def, :unescape,
        s(:args,
          s(:arg, :string),
          s(:optarg, :encoding,
            s(:cvar, :@@accept_charset))),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :string), :tr,
                      s(:str, "+"),
                      s(:str, " ")), :b), :gsub,
                  s(:regexp,
                    s(:str, "((?:%[0-9a-fA-F]{2})+)"),
                    s(:regopt))),
                s(:args,
                  s(:arg, :m)),
                s(:send,
                  s(:array,
                    s(:send,
                      s(:lvar, :m), :delete,
                      s(:str, "%"))), :pack,
                  s(:str, "H*"))), :force_encoding,
              s(:lvar, :encoding))),
          s(:if,
            s(:send,
              s(:lvar, :str), :valid_encoding?),
            s(:lvar, :str),
            s(:send,
              s(:lvar, :str), :force_encoding,
              s(:send,
                s(:lvar, :string), :encoding))))),
      s(:casgn, nil, :TABLE_FOR_ESCAPE_HTML__,
        s(:hash,
          s(:pair,
            s(:str, "'"),
            s(:str, "&#39;")),
          s(:pair,
            s(:str, "&"),
            s(:str, "&amp;")),
          s(:pair,
            s(:str, "\""),
            s(:str, "&quot;")),
          s(:pair,
            s(:str, "<"),
            s(:str, "&lt;")),
          s(:pair,
            s(:str, ">"),
            s(:str, "&gt;")))),
      s(:def, :escapeHTML,
        s(:args,
          s(:arg, :string)),
        s(:send,
          s(:lvar, :string), :gsub,
          s(:regexp,
            s(:str, "['&\\\"<>]"),
            s(:regopt)),
          s(:const, nil, :TABLE_FOR_ESCAPE_HTML__))),
      s(:kwbegin,
        s(:rescue,
          s(:send, nil, :require,
            s(:str, "cgi/escape")),
          s(:resbody,
            s(:array,
              s(:const, nil, :LoadError)), nil, nil), nil)),
      s(:def, :unescapeHTML,
        s(:args,
          s(:arg, :string)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :string), :include?,
              s(:str, "&")), nil,
            s(:return,
              s(:lvar, :string))),
          s(:lvasgn, :enc,
            s(:send,
              s(:lvar, :string), :encoding)),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :enc), :!=,
                s(:const,
                  s(:const, nil, :Encoding), :UTF_8)),
              s(:send,
                s(:array,
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_16BE),
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_16LE),
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_32BE),
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_32LE)), :include?,
                s(:lvar, :enc))),
            s(:return,
              s(:block,
                s(:send,
                  s(:lvar, :string), :gsub,
                  s(:send,
                    s(:const, nil, :Regexp), :new,
                    s(:send,
                      s(:str, "&(apos|amp|quot|gt|lt|#[0-9]+|#x[0-9A-Fa-f]+);"), :encode,
                      s(:lvar, :enc)))),
                s(:args),
                s(:case,
                  s(:send,
                    s(:nth_ref, 1), :encode,
                    s(:const,
                      s(:const, nil, :Encoding), :US_ASCII)),
                  s(:when,
                    s(:str, "apos"),
                    s(:send,
                      s(:str, "'"), :encode,
                      s(:lvar, :enc))),
                  s(:when,
                    s(:str, "amp"),
                    s(:send,
                      s(:str, "&"), :encode,
                      s(:lvar, :enc))),
                  s(:when,
                    s(:str, "quot"),
                    s(:send,
                      s(:str, "\""), :encode,
                      s(:lvar, :enc))),
                  s(:when,
                    s(:str, "gt"),
                    s(:send,
                      s(:str, ">"), :encode,
                      s(:lvar, :enc))),
                  s(:when,
                    s(:str, "lt"),
                    s(:send,
                      s(:str, "<"), :encode,
                      s(:lvar, :enc))),
                  s(:when,
                    s(:regexp,
                      s(:str, "\\A#0*(\\d+)\\z"),
                      s(:regopt)),
                    s(:send,
                      s(:send,
                        s(:nth_ref, 1), :to_i), :chr,
                      s(:lvar, :enc))),
                  s(:when,
                    s(:regexp,
                      s(:str, "\\A#x([0-9a-f]+)\\z"),
                      s(:regopt, :i)),
                    s(:send,
                      s(:send,
                        s(:nth_ref, 1), :hex), :chr,
                      s(:lvar, :enc))), nil))), nil),
          s(:lvasgn, :asciicompat,
            s(:send,
              s(:const, nil, :Encoding), :compatible?,
              s(:lvar, :string),
              s(:str, "a"))),
          s(:block,
            s(:send,
              s(:lvar, :string), :gsub,
              s(:regexp,
                s(:str, "&(apos|amp|quot|gt|lt|\\#[0-9]+|\\#[xX][0-9A-Fa-f]+);"),
                s(:regopt))),
            s(:args),
            s(:begin,
              s(:lvasgn, :match,
                s(:send,
                  s(:nth_ref, 1), :dup)),
              s(:case,
                s(:lvar, :match),
                s(:when,
                  s(:str, "apos"),
                  s(:str, "'")),
                s(:when,
                  s(:str, "amp"),
                  s(:str, "&")),
                s(:when,
                  s(:str, "quot"),
                  s(:str, "\"")),
                s(:when,
                  s(:str, "gt"),
                  s(:str, ">")),
                s(:when,
                  s(:str, "lt"),
                  s(:str, "<")),
                s(:when,
                  s(:regexp,
                    s(:str, "\\A#0*(\\d+)\\z"),
                    s(:regopt)),
                  s(:begin,
                    s(:lvasgn, :n,
                      s(:send,
                        s(:nth_ref, 1), :to_i)),
                    s(:if,
                      s(:or,
                        s(:or,
                          s(:send,
                            s(:lvar, :enc), :==,
                            s(:const,
                              s(:const, nil, :Encoding), :UTF_8)),
                          s(:and,
                            s(:send,
                              s(:lvar, :enc), :==,
                              s(:const,
                                s(:const, nil, :Encoding), :ISO_8859_1)),
                            s(:send,
                              s(:lvar, :n), :<,
                              s(:int, 256)))),
                        s(:and,
                          s(:lvar, :asciicompat),
                          s(:send,
                            s(:lvar, :n), :<,
                            s(:int, 128)))),
                      s(:send,
                        s(:lvar, :n), :chr,
                        s(:lvar, :enc)),
                      s(:dstr,
                        s(:str, "&#"),
                        s(:begin,
                          s(:nth_ref, 1)),
                        s(:str, ";"))))),
                s(:when,
                  s(:regexp,
                    s(:str, "\\A#x([0-9a-f]+)\\z"),
                    s(:regopt, :i)),
                  s(:begin,
                    s(:lvasgn, :n,
                      s(:send,
                        s(:nth_ref, 1), :hex)),
                    s(:if,
                      s(:or,
                        s(:or,
                          s(:send,
                            s(:lvar, :enc), :==,
                            s(:const,
                              s(:const, nil, :Encoding), :UTF_8)),
                          s(:and,
                            s(:send,
                              s(:lvar, :enc), :==,
                              s(:const,
                                s(:const, nil, :Encoding), :ISO_8859_1)),
                            s(:send,
                              s(:lvar, :n), :<,
                              s(:int, 256)))),
                        s(:and,
                          s(:lvar, :asciicompat),
                          s(:send,
                            s(:lvar, :n), :<,
                            s(:int, 128)))),
                      s(:send,
                        s(:lvar, :n), :chr,
                        s(:lvar, :enc)),
                      s(:dstr,
                        s(:str, "&#x"),
                        s(:begin,
                          s(:nth_ref, 1)),
                        s(:str, ";"))))),
                s(:dstr,
                  s(:str, "&"),
                  s(:begin,
                    s(:lvar, :match)),
                  s(:str, ";"))))))),
      s(:alias,
        s(:sym, :escape_html),
        s(:sym, :escapeHTML)),
      s(:alias,
        s(:sym, :unescape_html),
        s(:sym, :unescapeHTML)),
      s(:def, :escapeElement,
        s(:args,
          s(:arg, :string),
          s(:restarg, :elements)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :elements), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Array)),
            s(:lvasgn, :elements,
              s(:send,
                s(:lvar, :elements), :[],
                s(:int, 0))), nil),
          s(:if,
            s(:send,
              s(:lvar, :elements), :empty?),
            s(:lvar, :string),
            s(:block,
              s(:send,
                s(:lvar, :string), :gsub,
                s(:regexp,
                  s(:str, "</?(?:"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :elements), :join,
                      s(:str, "|"))),
                  s(:str, ")(?!\\w)(?:.|\\n)*?>"),
                  s(:regopt, :i))),
              s(:args),
              s(:send,
                s(:const, nil, :CGI), :escapeHTML,
                s(:back_ref, :$&)))))),
      s(:def, :unescapeElement,
        s(:args,
          s(:arg, :string),
          s(:restarg, :elements)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :elements), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Array)),
            s(:lvasgn, :elements,
              s(:send,
                s(:lvar, :elements), :[],
                s(:int, 0))), nil),
          s(:if,
            s(:send,
              s(:lvar, :elements), :empty?),
            s(:lvar, :string),
            s(:block,
              s(:send,
                s(:lvar, :string), :gsub,
                s(:regexp,
                  s(:str, "&lt;/?(?:"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :elements), :join,
                      s(:str, "|"))),
                  s(:str, ")(?!\\w)(?:.|\\n)*?&gt;"),
                  s(:regopt, :i))),
              s(:args),
              s(:send, nil, :unescapeHTML,
                s(:back_ref, :$&)))))),
      s(:alias,
        s(:sym, :escape_element),
        s(:sym, :escapeElement)),
      s(:alias,
        s(:sym, :unescape_element),
        s(:sym, :unescapeElement)),
      s(:casgn, nil, :RFC822_DAYS,
        s(:array,
          s(:str, "Sun"),
          s(:str, "Mon"),
          s(:str, "Tue"),
          s(:str, "Wed"),
          s(:str, "Thu"),
          s(:str, "Fri"),
          s(:str, "Sat"))),
      s(:casgn, nil, :RFC822_MONTHS,
        s(:array,
          s(:str, "Jan"),
          s(:str, "Feb"),
          s(:str, "Mar"),
          s(:str, "Apr"),
          s(:str, "May"),
          s(:str, "Jun"),
          s(:str, "Jul"),
          s(:str, "Aug"),
          s(:str, "Sep"),
          s(:str, "Oct"),
          s(:str, "Nov"),
          s(:str, "Dec"))),
      s(:def, :rfc1123_date,
        s(:args,
          s(:arg, :time)),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:send,
                s(:lvar, :time), :clone), :gmtime)),
          s(:return,
            s(:send, nil, :format,
              s(:str, "%s, %.2d %s %.4d %.2d:%.2d:%.2d GMT"),
              s(:send,
                s(:const, nil, :RFC822_DAYS), :[],
                s(:send,
                  s(:lvar, :t), :wday)),
              s(:send,
                s(:lvar, :t), :day),
              s(:send,
                s(:const, nil, :RFC822_MONTHS), :[],
                s(:send,
                  s(:send,
                    s(:lvar, :t), :month), :-,
                  s(:int, 1))),
              s(:send,
                s(:lvar, :t), :year),
              s(:send,
                s(:lvar, :t), :hour),
              s(:send,
                s(:lvar, :t), :min),
              s(:send,
                s(:lvar, :t), :sec))))),
      s(:def, :pretty,
        s(:args,
          s(:arg, :string),
          s(:optarg, :shift,
            s(:str, "  "))),
        s(:begin,
          s(:lvasgn, :lines,
            s(:send,
              s(:send,
                s(:lvar, :string), :gsub,
                s(:regexp,
                  s(:str, "(?!\\A)<.*?>"),
                  s(:regopt, :m)),
                s(:str, "\n\\0")), :gsub,
              s(:regexp,
                s(:str, "<.*?>(?!\\n)"),
                s(:regopt, :m)),
              s(:str, "\\0\n"))),
          s(:lvasgn, :end_pos,
            s(:int, 0)),
          s(:while,
            s(:lvasgn, :end_pos,
              s(:send,
                s(:lvar, :lines), :index,
                s(:regexp,
                  s(:str, "^</(\\w+)"),
                  s(:regopt)),
                s(:lvar, :end_pos))),
            s(:begin,
              s(:lvasgn, :element,
                s(:send,
                  s(:nth_ref, 1), :dup)),
              s(:lvasgn, :start_pos,
                s(:send,
                  s(:lvar, :lines), :rindex,
                  s(:regexp,
                    s(:str, "^\\s*<"),
                    s(:begin,
                      s(:lvar, :element)),
                    s(:regopt, :i)),
                  s(:lvar, :end_pos))),
              s(:send,
                s(:lvar, :lines), :[]=,
                s(:erange,
                  s(:lvar, :start_pos),
                  s(:lvar, :end_pos)),
                s(:send,
                  s(:send,
                    s(:str, "__"), :+,
                    s(:send,
                      s(:send,
                        s(:lvar, :lines), :[],
                        s(:erange,
                          s(:lvar, :start_pos),
                          s(:lvar, :end_pos))), :gsub,
                      s(:regexp,
                        s(:str, "\\n(?!\\z)"),
                        s(:regopt)),
                      s(:send,
                        s(:str, "\n"), :+,
                        s(:lvar, :shift)))), :+,
                  s(:str, "__"))))),
          s(:send,
            s(:lvar, :lines), :gsub,
            s(:regexp,
              s(:str, "^((?:"),
              s(:begin,
                s(:send,
                  s(:const, nil, :Regexp), :quote,
                  s(:lvar, :shift))),
              s(:str, ")*)__(?=</?\\w)"),
              s(:regopt)),
            s(:str, "\\1")))),
      s(:alias,
        s(:sym, :h),
        s(:sym, :escapeHTML)))))
