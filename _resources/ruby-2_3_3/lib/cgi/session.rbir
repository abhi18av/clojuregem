s(:begin,
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:class,
    s(:const, nil, :CGI), nil,
    s(:class,
      s(:const, nil, :Session), nil,
      s(:begin,
        s(:class,
          s(:const, nil, :NoSession),
          s(:const, nil, :RuntimeError), nil),
        s(:send, nil, :attr_reader,
          s(:sym, :session_id),
          s(:sym, :new_session)),
        s(:defs,
          s(:const, nil, :Session), :callback,
          s(:args,
            s(:arg, :dbman)),
          s(:block,
            s(:send,
              s(:const, nil, :Proc), :new),
            s(:args),
            s(:if,
              s(:send,
                s(:lvar, :dbman), :empty?), nil,
              s(:send,
                s(:send,
                  s(:lvar, :dbman), :[],
                  s(:int, 0)), :close)))),
        s(:def, :create_new_id,
          s(:args),
          s(:begin,
            s(:send, nil, :require,
              s(:str, "securerandom")),
            s(:kwbegin,
              s(:rescue,
                s(:lvasgn, :session_id,
                  s(:send,
                    s(:const, nil, :SecureRandom), :hex,
                    s(:int, 16))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NotImplementedError)), nil,
                  s(:begin,
                    s(:send, nil, :require,
                      s(:str, "digest")),
                    s(:lvasgn, :d,
                      s(:send,
                        s(:send, nil, :Digest,
                          s(:str, "SHA512")), :new)),
                    s(:lvasgn, :now,
                      s(:send,
                        s(:const, nil, :Time), :now)),
                    s(:send,
                      s(:lvar, :d), :update,
                      s(:send,
                        s(:lvar, :now), :to_s)),
                    s(:send,
                      s(:lvar, :d), :update,
                      s(:send, nil, :String,
                        s(:send,
                          s(:lvar, :now), :usec))),
                    s(:send,
                      s(:lvar, :d), :update,
                      s(:send, nil, :String,
                        s(:send, nil, :rand,
                          s(:int, 0)))),
                    s(:send,
                      s(:lvar, :d), :update,
                      s(:send, nil, :String,
                        s(:gvar, :$$))),
                    s(:send,
                      s(:lvar, :d), :update,
                      s(:str, "foobar")),
                    s(:lvasgn, :session_id,
                      s(:send,
                        s(:send,
                          s(:lvar, :d), :hexdigest), :[],
                        s(:int, 0),
                        s(:int, 32))))), nil)),
            s(:lvar, :session_id))),
        s(:send, nil, :private,
          s(:sym, :create_new_id)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :request),
            s(:optarg, :option,
              s(:hash))),
          s(:begin,
            s(:ivasgn, :@new_session,
              s(:false)),
            s(:lvasgn, :session_key,
              s(:or,
                s(:send,
                  s(:lvar, :option), :[],
                  s(:str, "session_key")),
                s(:str, "_session_id"))),
            s(:lvasgn, :session_id,
              s(:send,
                s(:lvar, :option), :[],
                s(:str, "session_id"))),
            s(:if,
              s(:lvar, :session_id), nil,
              s(:if,
                s(:send,
                  s(:lvar, :option), :[],
                  s(:str, "new_session")),
                s(:begin,
                  s(:lvasgn, :session_id,
                    s(:send, nil, :create_new_id)),
                  s(:ivasgn, :@new_session,
                    s(:true))), nil)),
            s(:if,
              s(:lvar, :session_id), nil,
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :request), :key?,
                    s(:lvar, :session_key)),
                  s(:begin,
                    s(:lvasgn, :session_id,
                      s(:send,
                        s(:lvar, :request), :[],
                        s(:lvar, :session_key))),
                    s(:if,
                      s(:send,
                        s(:lvar, :session_id), :respond_to?,
                        s(:sym, :read)),
                      s(:lvasgn, :session_id,
                        s(:send,
                          s(:lvar, :session_id), :read)), nil)), nil),
                s(:if,
                  s(:lvar, :session_id), nil,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :session_id)),
                    s(:send,
                      s(:send,
                        s(:lvar, :request), :cookies), :[],
                      s(:lvar, :session_key)))),
                s(:if,
                  s(:lvar, :session_id), nil,
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :option), :fetch,
                        s(:str, "new_session"),
                        s(:true)), nil,
                      s(:send, nil, :raise,
                        s(:const, nil, :ArgumentError),
                        s(:send,
                          s(:str, "session_key `%s' should be supplied"), :%,
                          s(:lvar, :session_key)))),
                    s(:lvasgn, :session_id,
                      s(:send, nil, :create_new_id)),
                    s(:ivasgn, :@new_session,
                      s(:true)))))),
            s(:ivasgn, :@session_id,
              s(:lvar, :session_id)),
            s(:lvasgn, :dbman,
              s(:or,
                s(:send,
                  s(:lvar, :option), :[],
                  s(:str, "database_manager")),
                s(:const, nil, :FileStore))),
            s(:kwbegin,
              s(:rescue,
                s(:ivasgn, :@dbman,
                  s(:send,
                    s(:lvar, :dbman), :new,
                    s(:self),
                    s(:lvar, :option))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NoSession)), nil,
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :option), :fetch,
                        s(:str, "new_session"),
                        s(:true)), nil,
                      s(:send, nil, :raise,
                        s(:const, nil, :ArgumentError),
                        s(:send,
                          s(:str, "invalid session_id `%s'"), :%,
                          s(:lvar, :session_id)))),
                    s(:if,
                      s(:lvar, :session_id), nil,
                      s(:lvasgn, :session_id,
                        s(:ivasgn, :@session_id,
                          s(:send, nil, :create_new_id)))),
                    s(:ivasgn, :@new_session,
                      s(:true)),
                    s(:retry))), nil)),
            s(:block,
              s(:send,
                s(:lvar, :request), :instance_eval),
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :option), :[],
                    s(:str, "no_hidden")), nil,
                  s(:ivasgn, :@output_hidden,
                    s(:hash,
                      s(:pair,
                        s(:lvar, :session_key),
                        s(:lvar, :session_id))))),
                s(:if,
                  s(:send,
                    s(:lvar, :option), :[],
                    s(:str, "no_cookies")), nil,
                  s(:ivasgn, :@output_cookies,
                    s(:array,
                      s(:send,
                        s(:const, nil, :Cookie), :new,
                        s(:hash,
                          s(:pair,
                            s(:str, "name"),
                            s(:lvar, :session_key)),
                          s(:pair,
                            s(:str, "value"),
                            s(:lvar, :session_id)),
                          s(:pair,
                            s(:str, "expires"),
                            s(:send,
                              s(:lvar, :option), :[],
                              s(:str, "session_expires"))),
                          s(:pair,
                            s(:str, "domain"),
                            s(:send,
                              s(:lvar, :option), :[],
                              s(:str, "session_domain"))),
                          s(:pair,
                            s(:str, "secure"),
                            s(:send,
                              s(:lvar, :option), :[],
                              s(:str, "session_secure"))),
                          s(:pair,
                            s(:str, "path"),
                            s(:if,
                              s(:send,
                                s(:lvar, :option), :[],
                                s(:str, "session_path")),
                              s(:send,
                                s(:lvar, :option), :[],
                                s(:str, "session_path")),
                              s(:if,
                                s(:send,
                                  s(:const, nil, :ENV), :[],
                                  s(:str, "SCRIPT_NAME")),
                                s(:send,
                                  s(:const, nil, :File), :dirname,
                                  s(:send,
                                    s(:const, nil, :ENV), :[],
                                    s(:str, "SCRIPT_NAME"))),
                                s(:str, ""))))))))))),
            s(:ivasgn, :@dbprot,
              s(:array,
                s(:ivar, :@dbman))),
            s(:send,
              s(:const, nil, :ObjectSpace), :define_finalizer,
              s(:self),
              s(:send,
                s(:const, nil, :Session), :callback,
                s(:ivar, :@dbprot))))),
        s(:def, :[],
          s(:args,
            s(:arg, :key)),
          s(:begin,
            s(:or_asgn,
              s(:ivasgn, :@data),
              s(:send,
                s(:ivar, :@dbman), :restore)),
            s(:send,
              s(:ivar, :@data), :[],
              s(:lvar, :key)))),
        s(:def, :[]=,
          s(:args,
            s(:arg, :key),
            s(:arg, :val)),
          s(:begin,
            s(:or_asgn,
              s(:ivasgn, :@write_lock),
              s(:true)),
            s(:or_asgn,
              s(:ivasgn, :@data),
              s(:send,
                s(:ivar, :@dbman), :restore)),
            s(:send,
              s(:ivar, :@data), :[]=,
              s(:lvar, :key),
              s(:lvar, :val)))),
        s(:def, :update,
          s(:args),
          s(:send,
            s(:ivar, :@dbman), :update)),
        s(:def, :close,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@dbman), :close),
            s(:send,
              s(:ivar, :@dbprot), :clear))),
        s(:def, :delete,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@dbman), :delete),
            s(:send,
              s(:ivar, :@dbprot), :clear))),
        s(:class,
          s(:const, nil, :FileStore), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :session),
                s(:optarg, :option,
                  s(:hash))),
              s(:begin,
                s(:lvasgn, :dir,
                  s(:or,
                    s(:send,
                      s(:lvar, :option), :[],
                      s(:str, "tmpdir")),
                    s(:send,
                      s(:const, nil, :Dir), :tmpdir))),
                s(:lvasgn, :prefix,
                  s(:or,
                    s(:send,
                      s(:lvar, :option), :[],
                      s(:str, "prefix")),
                    s(:str, "cgi_sid_"))),
                s(:lvasgn, :suffix,
                  s(:or,
                    s(:send,
                      s(:lvar, :option), :[],
                      s(:str, "suffix")),
                    s(:str, ""))),
                s(:lvasgn, :id,
                  s(:send,
                    s(:lvar, :session), :session_id)),
                s(:send, nil, :require,
                  s(:str, "digest/md5")),
                s(:lvasgn, :md5,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Digest), :MD5), :hexdigest,
                      s(:lvar, :id)), :[],
                    s(:int, 0),
                    s(:int, 16))),
                s(:ivasgn, :@path,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :dir), :+,
                          s(:str, "/")), :+,
                        s(:lvar, :prefix)), :+,
                      s(:lvar, :md5)), :+,
                    s(:lvar, :suffix))),
                s(:if,
                  s(:send,
                    s(:const, nil, :File), :exist?,
                    s(:ivar, :@path)),
                  s(:ivasgn, :@hash,
                    s(:nil)),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :session), :new_session), nil,
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const,
                            s(:const, nil, :CGI), :Session), :NoSession),
                        s(:str, "uninitialized session"))),
                    s(:ivasgn, :@hash,
                      s(:hash)))))),
            s(:def, :restore,
              s(:args),
              s(:begin,
                s(:if,
                  s(:ivar, :@hash), nil,
                  s(:begin,
                    s(:ivasgn, :@hash,
                      s(:hash)),
                    s(:kwbegin,
                      s(:ensure,
                        s(:begin,
                          s(:lvasgn, :lockf,
                            s(:send,
                              s(:const, nil, :File), :open,
                              s(:send,
                                s(:ivar, :@path), :+,
                                s(:str, ".lock")),
                              s(:str, "r"))),
                          s(:send,
                            s(:lvar, :lockf), :flock,
                            s(:const,
                              s(:const, nil, :File), :LOCK_SH)),
                          s(:lvasgn, :f,
                            s(:send,
                              s(:const, nil, :File), :open,
                              s(:ivar, :@path),
                              s(:str, "r"))),
                          s(:for,
                            s(:lvasgn, :line),
                            s(:lvar, :f),
                            s(:begin,
                              s(:send,
                                s(:lvar, :line), :chomp!),
                              s(:masgn,
                                s(:mlhs,
                                  s(:lvasgn, :k),
                                  s(:lvasgn, :v)),
                                s(:send,
                                  s(:lvar, :line), :split,
                                  s(:str, "="),
                                  s(:int, 2))),
                              s(:send,
                                s(:ivar, :@hash), :[]=,
                                s(:send,
                                  s(:const, nil, :CGI), :unescape,
                                  s(:lvar, :k)),
                                s(:send,
                                  s(:const, nil, :Marshal), :restore,
                                  s(:send,
                                    s(:const, nil, :CGI), :unescape,
                                    s(:lvar, :v))))))),
                        s(:begin,
                          s(:if,
                            s(:send,
                              s(:lvar, :f), :nil?), nil,
                            s(:send,
                              s(:lvar, :f), :close)),
                          s(:if,
                            s(:lvar, :lockf),
                            s(:send,
                              s(:lvar, :lockf), :close), nil)))))),
                s(:ivar, :@hash))),
            s(:def, :update,
              s(:args),
              s(:begin,
                s(:if,
                  s(:ivar, :@hash), nil,
                  s(:return)),
                s(:kwbegin,
                  s(:ensure,
                    s(:begin,
                      s(:lvasgn, :lockf,
                        s(:send,
                          s(:const, nil, :File), :open,
                          s(:send,
                            s(:ivar, :@path), :+,
                            s(:str, ".lock")),
                          s(:send,
                            s(:const,
                              s(:const, nil, :File), :CREAT), :|,
                            s(:const,
                              s(:const, nil, :File), :RDWR)),
                          s(:int, 384))),
                      s(:send,
                        s(:lvar, :lockf), :flock,
                        s(:const,
                          s(:const, nil, :File), :LOCK_EX)),
                      s(:lvasgn, :f,
                        s(:send,
                          s(:const, nil, :File), :open,
                          s(:send,
                            s(:ivar, :@path), :+,
                            s(:str, ".new")),
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :File), :CREAT), :|,
                              s(:const,
                                s(:const, nil, :File), :TRUNC)), :|,
                            s(:const,
                              s(:const, nil, :File), :WRONLY)),
                          s(:int, 384))),
                      s(:for,
                        s(:mlhs,
                          s(:lvasgn, :k),
                          s(:lvasgn, :v)),
                        s(:ivar, :@hash),
                        s(:send,
                          s(:lvar, :f), :printf,
                          s(:str, "%s=%s\n"),
                          s(:send,
                            s(:const, nil, :CGI), :escape,
                            s(:lvar, :k)),
                          s(:send,
                            s(:const, nil, :CGI), :escape,
                            s(:send, nil, :String,
                              s(:send,
                                s(:const, nil, :Marshal), :dump,
                                s(:lvar, :v)))))),
                      s(:send,
                        s(:lvar, :f), :close),
                      s(:send,
                        s(:const, nil, :File), :rename,
                        s(:send,
                          s(:ivar, :@path), :+,
                          s(:str, ".new")),
                        s(:ivar, :@path))),
                    s(:begin,
                      s(:if,
                        s(:and,
                          s(:lvar, :f),
                          s(:send,
                            s(:send,
                              s(:lvar, :f), :closed?), :!)),
                        s(:send,
                          s(:lvar, :f), :close), nil),
                      s(:if,
                        s(:lvar, :lockf),
                        s(:send,
                          s(:lvar, :lockf), :close), nil)))))),
            s(:def, :close,
              s(:args),
              s(:send, nil, :update)),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:rescue,
                  s(:send,
                    s(:const, nil, :File), :unlink,
                    s(:send,
                      s(:ivar, :@path), :+,
                      s(:str, ".lock"))),
                  s(:resbody, nil, nil,
                    s(:nil)), nil),
                s(:rescue,
                  s(:send,
                    s(:const, nil, :File), :unlink,
                    s(:send,
                      s(:ivar, :@path), :+,
                      s(:str, ".new"))),
                  s(:resbody, nil, nil,
                    s(:nil)), nil),
                s(:rescue,
                  s(:send,
                    s(:const, nil, :File), :unlink,
                    s(:ivar, :@path)),
                  s(:resbody, nil, nil,
                    s(:nil)), nil))))),
        s(:class,
          s(:const, nil, :MemoryStore), nil,
          s(:begin,
            s(:casgn, nil, :GLOBAL_HASH_TABLE,
              s(:hash)),
            s(:def, :initialize,
              s(:args,
                s(:arg, :session),
                s(:optarg, :option,
                  s(:nil))),
              s(:begin,
                s(:ivasgn, :@session_id,
                  s(:send,
                    s(:lvar, :session), :session_id)),
                s(:if,
                  s(:send,
                    s(:const, nil, :GLOBAL_HASH_TABLE), :key?,
                    s(:ivar, :@session_id)), nil,
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :session), :new_session), nil,
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const,
                            s(:const, nil, :CGI), :Session), :NoSession),
                        s(:str, "uninitialized session"))),
                    s(:send,
                      s(:const, nil, :GLOBAL_HASH_TABLE), :[]=,
                      s(:ivar, :@session_id),
                      s(:hash)))))),
            s(:def, :restore,
              s(:args),
              s(:send,
                s(:const, nil, :GLOBAL_HASH_TABLE), :[],
                s(:ivar, :@session_id))),
            s(:def, :update,
              s(:args), nil),
            s(:def, :close,
              s(:args), nil),
            s(:def, :delete,
              s(:args),
              s(:send,
                s(:const, nil, :GLOBAL_HASH_TABLE), :delete,
                s(:ivar, :@session_id))))),
        s(:class,
          s(:const, nil, :NullStore), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :session),
                s(:optarg, :option,
                  s(:nil))), nil),
            s(:def, :restore,
              s(:args),
              s(:hash)),
            s(:def, :update,
              s(:args), nil),
            s(:def, :close,
              s(:args), nil),
            s(:def, :delete,
              s(:args), nil)))))))
