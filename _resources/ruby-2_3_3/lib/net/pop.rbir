s(:begin,
  s(:send, nil, :require,
    s(:str, "net/protocol")),
  s(:send, nil, :require,
    s(:str, "digest/md5")),
  s(:send, nil, :require,
    s(:str, "timeout")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "openssl")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:module,
    s(:const, nil, :Net),
    s(:begin,
      s(:class,
        s(:const, nil, :POPError),
        s(:const, nil, :ProtocolError), nil),
      s(:class,
        s(:const, nil, :POPAuthenticationError),
        s(:const, nil, :ProtoAuthError), nil),
      s(:class,
        s(:const, nil, :POPBadResponse),
        s(:const, nil, :POPError), nil),
      s(:class,
        s(:const, nil, :POP3),
        s(:const, nil, :Protocol),
        s(:begin,
          s(:casgn, nil, :Revision,
            s(:send,
              s(:send,
                s(:str, "Revision"), :split), :[],
              s(:int, 1))),
          s(:defs,
            s(:const, nil, :POP3), :default_port,
            s(:args),
            s(:send, nil, :default_pop3_port)),
          s(:defs,
            s(:const, nil, :POP3), :default_pop3_port,
            s(:args),
            s(:int, 110)),
          s(:defs,
            s(:const, nil, :POP3), :default_pop3s_port,
            s(:args),
            s(:int, 995)),
          s(:defs,
            s(:const, nil, :POP3), :socket_type,
            s(:args),
            s(:const,
              s(:const, nil, :Net), :InternetMessageIO)),
          s(:defs,
            s(:const, nil, :POP3), :APOP,
            s(:args,
              s(:arg, :isapop)),
            s(:if,
              s(:lvar, :isapop),
              s(:const, nil, :APOP),
              s(:const, nil, :POP3))),
          s(:defs,
            s(:const, nil, :POP3), :foreach,
            s(:args,
              s(:arg, :address),
              s(:optarg, :port,
                s(:nil)),
              s(:optarg, :account,
                s(:nil)),
              s(:optarg, :password,
                s(:nil)),
              s(:optarg, :isapop,
                s(:false)),
              s(:blockarg, :block)),
            s(:block,
              s(:send, nil, :start,
                s(:lvar, :address),
                s(:lvar, :port),
                s(:lvar, :account),
                s(:lvar, :password),
                s(:lvar, :isapop)),
              s(:args,
                s(:arg, :pop)),
              s(:send,
                s(:lvar, :pop), :each_mail,
                s(:block_pass,
                  s(:lvar, :block))))),
          s(:defs,
            s(:const, nil, :POP3), :delete_all,
            s(:args,
              s(:arg, :address),
              s(:optarg, :port,
                s(:nil)),
              s(:optarg, :account,
                s(:nil)),
              s(:optarg, :password,
                s(:nil)),
              s(:optarg, :isapop,
                s(:false)),
              s(:blockarg, :block)),
            s(:block,
              s(:send, nil, :start,
                s(:lvar, :address),
                s(:lvar, :port),
                s(:lvar, :account),
                s(:lvar, :password),
                s(:lvar, :isapop)),
              s(:args,
                s(:arg, :pop)),
              s(:send,
                s(:lvar, :pop), :delete_all,
                s(:block_pass,
                  s(:lvar, :block))))),
          s(:defs,
            s(:const, nil, :POP3), :auth_only,
            s(:args,
              s(:arg, :address),
              s(:optarg, :port,
                s(:nil)),
              s(:optarg, :account,
                s(:nil)),
              s(:optarg, :password,
                s(:nil)),
              s(:optarg, :isapop,
                s(:false))),
            s(:send,
              s(:send, nil, :new,
                s(:lvar, :address),
                s(:lvar, :port),
                s(:lvar, :isapop)), :auth_only,
              s(:lvar, :account),
              s(:lvar, :password))),
          s(:def, :auth_only,
            s(:args,
              s(:arg, :account),
              s(:arg, :password)),
            s(:begin,
              s(:if,
                s(:send, nil, :started?),
                s(:send, nil, :raise,
                  s(:const, nil, :IOError),
                  s(:str, "opening previously opened POP session")), nil),
              s(:block,
                s(:send, nil, :start,
                  s(:lvar, :account),
                  s(:lvar, :password)),
                s(:args), nil))),
          s(:ivasgn, :@ssl_params,
            s(:nil)),
          s(:defs,
            s(:const, nil, :POP3), :enable_ssl,
            s(:args,
              s(:restarg, :args)),
            s(:ivasgn, :@ssl_params,
              s(:send, nil, :create_ssl_params,
                s(:splat,
                  s(:lvar, :args))))),
          s(:defs,
            s(:const, nil, :POP3), :create_ssl_params,
            s(:args,
              s(:optarg, :verify_or_params,
                s(:hash)),
              s(:optarg, :certs,
                s(:nil))),
            s(:begin,
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :params,
                    s(:send,
                      s(:lvar, :verify_or_params), :to_hash)),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :NoMethodError)), nil,
                    s(:begin,
                      s(:lvasgn, :params,
                        s(:hash)),
                      s(:send,
                        s(:lvar, :params), :[]=,
                        s(:sym, :verify_mode),
                        s(:lvar, :verify_or_params)),
                      s(:if,
                        s(:lvar, :certs),
                        s(:if,
                          s(:send,
                            s(:const, nil, :File), :file?,
                            s(:lvar, :certs)),
                          s(:send,
                            s(:lvar, :params), :[]=,
                            s(:sym, :ca_file),
                            s(:lvar, :certs)),
                          s(:if,
                            s(:send,
                              s(:const, nil, :File), :directory?,
                              s(:lvar, :certs)),
                            s(:send,
                              s(:lvar, :params), :[]=,
                              s(:sym, :ca_path),
                              s(:lvar, :certs)), nil)), nil))), nil)),
              s(:return,
                s(:lvar, :params)))),
          s(:defs,
            s(:const, nil, :POP3), :disable_ssl,
            s(:args),
            s(:ivasgn, :@ssl_params,
              s(:nil))),
          s(:defs,
            s(:const, nil, :POP3), :ssl_params,
            s(:args),
            s(:return,
              s(:ivar, :@ssl_params))),
          s(:defs,
            s(:const, nil, :POP3), :use_ssl?,
            s(:args),
            s(:return,
              s(:send,
                s(:send,
                  s(:ivar, :@ssl_params), :nil?), :!))),
          s(:defs,
            s(:const, nil, :POP3), :verify,
            s(:args),
            s(:return,
              s(:send,
                s(:ivar, :@ssl_params), :[],
                s(:sym, :verify_mode)))),
          s(:defs,
            s(:const, nil, :POP3), :certs,
            s(:args),
            s(:return,
              s(:or,
                s(:send,
                  s(:ivar, :@ssl_params), :[],
                  s(:sym, :ca_file)),
                s(:send,
                  s(:ivar, :@ssl_params), :[],
                  s(:sym, :ca_path))))),
          s(:defs,
            s(:const, nil, :POP3), :start,
            s(:args,
              s(:arg, :address),
              s(:optarg, :port,
                s(:nil)),
              s(:optarg, :account,
                s(:nil)),
              s(:optarg, :password,
                s(:nil)),
              s(:optarg, :isapop,
                s(:false)),
              s(:blockarg, :block)),
            s(:send,
              s(:send, nil, :new,
                s(:lvar, :address),
                s(:lvar, :port),
                s(:lvar, :isapop)), :start,
              s(:lvar, :account),
              s(:lvar, :password),
              s(:block_pass,
                s(:lvar, :block)))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :addr),
              s(:optarg, :port,
                s(:nil)),
              s(:optarg, :isapop,
                s(:false))),
            s(:begin,
              s(:ivasgn, :@address,
                s(:lvar, :addr)),
              s(:ivasgn, :@ssl_params,
                s(:send,
                  s(:const, nil, :POP3), :ssl_params)),
              s(:ivasgn, :@port,
                s(:lvar, :port)),
              s(:ivasgn, :@apop,
                s(:lvar, :isapop)),
              s(:ivasgn, :@command,
                s(:nil)),
              s(:ivasgn, :@socket,
                s(:nil)),
              s(:ivasgn, :@started,
                s(:false)),
              s(:ivasgn, :@open_timeout,
                s(:int, 30)),
              s(:ivasgn, :@read_timeout,
                s(:int, 60)),
              s(:ivasgn, :@debug_output,
                s(:nil)),
              s(:ivasgn, :@mails,
                s(:nil)),
              s(:ivasgn, :@n_mails,
                s(:nil)),
              s(:ivasgn, :@n_bytes,
                s(:nil)))),
          s(:def, :apop?,
            s(:args),
            s(:ivar, :@apop)),
          s(:def, :use_ssl?,
            s(:args),
            s(:return,
              s(:send,
                s(:send,
                  s(:ivar, :@ssl_params), :nil?), :!))),
          s(:def, :enable_ssl,
            s(:args,
              s(:optarg, :verify_or_params,
                s(:hash)),
              s(:optarg, :certs,
                s(:nil)),
              s(:optarg, :port,
                s(:nil))),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:ivasgn, :@ssl_params,
                    s(:send,
                      s(:send,
                        s(:lvar, :verify_or_params), :to_hash), :dup)),
                  s(:ivasgn, :@port,
                    s(:or,
                      s(:send,
                        s(:ivar, :@ssl_params), :delete,
                        s(:sym, :port)),
                      s(:ivar, :@port)))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NoMethodError)), nil,
                  s(:begin,
                    s(:ivasgn, :@ssl_params,
                      s(:send,
                        s(:const, nil, :POP3), :create_ssl_params,
                        s(:lvar, :verify_or_params),
                        s(:lvar, :certs))),
                    s(:ivasgn, :@port,
                      s(:or,
                        s(:lvar, :port),
                        s(:ivar, :@port))))), nil))),
          s(:def, :disable_ssl,
            s(:args),
            s(:ivasgn, :@ssl_params,
              s(:nil))),
          s(:def, :inspect,
            s(:args),
            s(:dstr,
              s(:str, "#<"),
              s(:begin,
                s(:send,
                  s(:self), :class)),
              s(:str, " "),
              s(:begin,
                s(:ivar, :@address)),
              s(:str, ":"),
              s(:begin,
                s(:ivar, :@port)),
              s(:str, " open="),
              s(:begin,
                s(:ivar, :@started)),
              s(:str, ">"))),
          s(:def, :set_debug_output,
            s(:args,
              s(:arg, :arg)),
            s(:ivasgn, :@debug_output,
              s(:lvar, :arg))),
          s(:send, nil, :attr_reader,
            s(:sym, :address)),
          s(:def, :port,
            s(:args),
            s(:return,
              s(:or,
                s(:ivar, :@port),
                s(:begin,
                  s(:if,
                    s(:send, nil, :use_ssl?),
                    s(:send,
                      s(:const, nil, :POP3), :default_pop3s_port),
                    s(:send,
                      s(:const, nil, :POP3), :default_pop3_port)))))),
          s(:send, nil, :attr_accessor,
            s(:sym, :open_timeout)),
          s(:send, nil, :attr_reader,
            s(:sym, :read_timeout)),
          s(:def, :read_timeout=,
            s(:args,
              s(:arg, :sec)),
            s(:begin,
              s(:if,
                s(:ivar, :@command),
                s(:send,
                  s(:send,
                    s(:ivar, :@command), :socket), :read_timeout=,
                  s(:lvar, :sec)), nil),
              s(:ivasgn, :@read_timeout,
                s(:lvar, :sec)))),
          s(:def, :started?,
            s(:args),
            s(:ivar, :@started)),
          s(:alias,
            s(:sym, :active?),
            s(:sym, :started?)),
          s(:def, :start,
            s(:args,
              s(:arg, :account),
              s(:arg, :password)),
            s(:begin,
              s(:if,
                s(:ivar, :@started),
                s(:send, nil, :raise,
                  s(:const, nil, :IOError),
                  s(:str, "POP session already started")), nil),
              s(:if,
                s(:send, nil, :block_given?),
                s(:kwbegin,
                  s(:ensure,
                    s(:begin,
                      s(:send, nil, :do_start,
                        s(:lvar, :account),
                        s(:lvar, :password)),
                      s(:return,
                        s(:yield,
                          s(:self)))),
                    s(:send, nil, :do_finish))),
                s(:begin,
                  s(:send, nil, :do_start,
                    s(:lvar, :account),
                    s(:lvar, :password)),
                  s(:return,
                    s(:self)))))),
          s(:def, :do_start,
            s(:args,
              s(:arg, :account),
              s(:arg, :password)),
            s(:ensure,
              s(:begin,
                s(:lvasgn, :s,
                  s(:block,
                    s(:send,
                      s(:const, nil, :Timeout), :timeout,
                      s(:ivar, :@open_timeout),
                      s(:const,
                        s(:const, nil, :Net), :OpenTimeout)),
                    s(:args),
                    s(:send,
                      s(:const, nil, :TCPSocket), :open,
                      s(:ivar, :@address),
                      s(:send, nil, :port)))),
                s(:if,
                  s(:send, nil, :use_ssl?),
                  s(:begin,
                    s(:if,
                      s(:defined?,
                        s(:const, nil, :OpenSSL)), nil,
                      s(:send, nil, :raise,
                        s(:str, "openssl library not installed"))),
                    s(:lvasgn, :context,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new)),
                    s(:send,
                      s(:lvar, :context), :set_params,
                      s(:ivar, :@ssl_params)),
                    s(:lvasgn, :s,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                        s(:lvar, :s),
                        s(:lvar, :context))),
                    s(:send,
                      s(:lvar, :s), :sync_close=,
                      s(:true)),
                    s(:send,
                      s(:lvar, :s), :connect),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :context), :verify_mode), :!=,
                        s(:const,
                          s(:const,
                            s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE)),
                      s(:send,
                        s(:lvar, :s), :post_connection_check,
                        s(:ivar, :@address)), nil)), nil),
                s(:ivasgn, :@socket,
                  s(:send,
                    s(:const, nil, :InternetMessageIO), :new,
                    s(:lvar, :s))),
                s(:send, nil, :logging,
                  s(:dstr,
                    s(:str, "POP session started: "),
                    s(:begin,
                      s(:ivar, :@address)),
                    s(:str, ":"),
                    s(:begin,
                      s(:ivar, :@port)),
                    s(:str, " ("),
                    s(:begin,
                      s(:if,
                        s(:ivar, :@apop),
                        s(:str, "APOP"),
                        s(:str, "POP"))),
                    s(:str, ")"))),
                s(:send,
                  s(:ivar, :@socket), :read_timeout=,
                  s(:ivar, :@read_timeout)),
                s(:send,
                  s(:ivar, :@socket), :debug_output=,
                  s(:ivar, :@debug_output)),
                s(:send, nil, :on_connect),
                s(:ivasgn, :@command,
                  s(:send,
                    s(:const, nil, :POP3Command), :new,
                    s(:ivar, :@socket))),
                s(:if,
                  s(:send, nil, :apop?),
                  s(:send,
                    s(:ivar, :@command), :apop,
                    s(:lvar, :account),
                    s(:lvar, :password)),
                  s(:send,
                    s(:ivar, :@command), :auth,
                    s(:lvar, :account),
                    s(:lvar, :password))),
                s(:ivasgn, :@started,
                  s(:true))),
              s(:if,
                s(:ivar, :@started), nil,
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:lvar, :s),
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :closed?), :!)),
                    s(:send,
                      s(:lvar, :s), :close), nil),
                  s(:ivasgn, :@socket,
                    s(:nil)),
                  s(:ivasgn, :@command,
                    s(:nil)))))),
          s(:send, nil, :private,
            s(:sym, :do_start)),
          s(:def, :on_connect,
            s(:args), nil),
          s(:send, nil, :private,
            s(:sym, :on_connect)),
          s(:def, :finish,
            s(:args),
            s(:begin,
              s(:if,
                s(:send, nil, :started?), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :IOError),
                  s(:str, "POP session not yet started"))),
              s(:send, nil, :do_finish))),
          s(:def, :do_finish,
            s(:args),
            s(:ensure,
              s(:begin,
                s(:ivasgn, :@mails,
                  s(:nil)),
                s(:ivasgn, :@n_mails,
                  s(:nil)),
                s(:ivasgn, :@n_bytes,
                  s(:nil)),
                s(:if,
                  s(:ivar, :@command),
                  s(:send,
                    s(:ivar, :@command), :quit), nil)),
              s(:begin,
                s(:ivasgn, :@started,
                  s(:false)),
                s(:ivasgn, :@command,
                  s(:nil)),
                s(:if,
                  s(:and,
                    s(:ivar, :@socket),
                    s(:send,
                      s(:send,
                        s(:ivar, :@socket), :closed?), :!)),
                  s(:send,
                    s(:ivar, :@socket), :close), nil),
                s(:ivasgn, :@socket,
                  s(:nil))))),
          s(:send, nil, :private,
            s(:sym, :do_finish)),
          s(:def, :command,
            s(:args),
            s(:begin,
              s(:if,
                s(:or,
                  s(:send,
                    s(:ivar, :@socket), :!),
                  s(:send,
                    s(:ivar, :@socket), :closed?)),
                s(:send, nil, :raise,
                  s(:const, nil, :IOError),
                  s(:str, "POP session not opened yet")), nil),
              s(:ivar, :@command))),
          s(:send, nil, :private,
            s(:sym, :command)),
          s(:def, :n_mails,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@n_mails),
                s(:return,
                  s(:ivar, :@n_mails)), nil),
              s(:masgn,
                s(:mlhs,
                  s(:ivasgn, :@n_mails),
                  s(:ivasgn, :@n_bytes)),
                s(:send,
                  s(:send, nil, :command), :stat)),
              s(:ivar, :@n_mails))),
          s(:def, :n_bytes,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@n_bytes),
                s(:return,
                  s(:ivar, :@n_bytes)), nil),
              s(:masgn,
                s(:mlhs,
                  s(:ivasgn, :@n_mails),
                  s(:ivasgn, :@n_bytes)),
                s(:send,
                  s(:send, nil, :command), :stat)),
              s(:ivar, :@n_bytes))),
          s(:def, :mails,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@mails),
                s(:return,
                  s(:send,
                    s(:ivar, :@mails), :dup)), nil),
              s(:if,
                s(:send,
                  s(:send, nil, :n_mails), :==,
                  s(:int, 0)),
                s(:begin,
                  s(:ivasgn, :@mails,
                    s(:array)),
                  s(:return,
                    s(:array))), nil),
              s(:ivasgn, :@mails,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:send, nil, :command), :list), :map),
                  s(:args,
                    s(:arg, :num),
                    s(:arg, :size)),
                  s(:send,
                    s(:const, nil, :POPMail), :new,
                    s(:lvar, :num),
                    s(:lvar, :size),
                    s(:self),
                    s(:send, nil, :command)))),
              s(:send,
                s(:ivar, :@mails), :dup))),
          s(:def, :each_mail,
            s(:args,
              s(:blockarg, :block)),
            s(:send,
              s(:send, nil, :mails), :each,
              s(:block_pass,
                s(:lvar, :block)))),
          s(:alias,
            s(:sym, :each),
            s(:sym, :each_mail)),
          s(:def, :delete_all,
            s(:args),
            s(:block,
              s(:send,
                s(:send, nil, :mails), :each),
              s(:args,
                s(:arg, :m)),
              s(:begin,
                s(:if,
                  s(:send, nil, :block_given?),
                  s(:yield,
                    s(:lvar, :m)), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :m), :deleted?), nil,
                  s(:send,
                    s(:lvar, :m), :delete))))),
          s(:def, :reset,
            s(:args),
            s(:begin,
              s(:send,
                s(:send, nil, :command), :rset),
              s(:block,
                s(:send,
                  s(:send, nil, :mails), :each),
                s(:args,
                  s(:arg, :m)),
                s(:block,
                  s(:send,
                    s(:lvar, :m), :instance_eval),
                  s(:args),
                  s(:ivasgn, :@deleted,
                    s(:false)))))),
          s(:def, :set_all_uids,
            s(:args),
            s(:begin,
              s(:lvasgn, :uidl,
                s(:send,
                  s(:send, nil, :command), :uidl)),
              s(:block,
                s(:send,
                  s(:ivar, :@mails), :each),
                s(:args,
                  s(:arg, :m)),
                s(:send,
                  s(:lvar, :m), :uid=,
                  s(:send,
                    s(:lvar, :uidl), :[],
                    s(:send,
                      s(:lvar, :m), :number)))))),
          s(:def, :logging,
            s(:args,
              s(:arg, :msg)),
            s(:if,
              s(:ivar, :@debug_output),
              s(:send,
                s(:ivar, :@debug_output), :<<,
                s(:send,
                  s(:lvar, :msg), :+,
                  s(:str, "\n"))), nil)))),
      s(:casgn, nil, :POP,
        s(:const, nil, :POP3)),
      s(:casgn, nil, :POPSession,
        s(:const, nil, :POP3)),
      s(:casgn, nil, :POP3Session,
        s(:const, nil, :POP3)),
      s(:class,
        s(:const, nil, :APOP),
        s(:const, nil, :POP3),
        s(:def, :apop?,
          s(:args),
          s(:true))),
      s(:casgn, nil, :APOPSession,
        s(:const, nil, :APOP)),
      s(:class,
        s(:const, nil, :POPMail), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :num),
              s(:arg, :len),
              s(:arg, :pop),
              s(:arg, :cmd)),
            s(:begin,
              s(:ivasgn, :@number,
                s(:lvar, :num)),
              s(:ivasgn, :@length,
                s(:lvar, :len)),
              s(:ivasgn, :@pop,
                s(:lvar, :pop)),
              s(:ivasgn, :@command,
                s(:lvar, :cmd)),
              s(:ivasgn, :@deleted,
                s(:false)),
              s(:ivasgn, :@uid,
                s(:nil)))),
          s(:send, nil, :attr_reader,
            s(:sym, :number)),
          s(:send, nil, :attr_reader,
            s(:sym, :length)),
          s(:alias,
            s(:sym, :size),
            s(:sym, :length)),
          s(:def, :inspect,
            s(:args),
            s(:dstr,
              s(:str, "#<"),
              s(:begin,
                s(:send,
                  s(:self), :class)),
              s(:str, " "),
              s(:begin,
                s(:ivar, :@number)),
              s(:begin,
                s(:if,
                  s(:ivar, :@deleted),
                  s(:str, " deleted"),
                  s(:str, ""))),
              s(:str, ">"))),
          s(:def, :pop,
            s(:args,
              s(:optarg, :dest,
                s(:str, "")),
              s(:blockarg, :block)),
            s(:if,
              s(:send, nil, :block_given?),
              s(:begin,
                s(:send,
                  s(:ivar, :@command), :retr,
                  s(:ivar, :@number),
                  s(:block_pass,
                    s(:lvar, :block))),
                s(:nil)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:ivar, :@command), :retr,
                    s(:ivar, :@number)),
                  s(:args,
                    s(:arg, :chunk)),
                  s(:send,
                    s(:lvar, :dest), :<<,
                    s(:lvar, :chunk))),
                s(:lvar, :dest)))),
          s(:alias,
            s(:sym, :all),
            s(:sym, :pop)),
          s(:alias,
            s(:sym, :mail),
            s(:sym, :pop)),
          s(:def, :top,
            s(:args,
              s(:arg, :lines),
              s(:optarg, :dest,
                s(:str, ""))),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@command), :top,
                  s(:ivar, :@number),
                  s(:lvar, :lines)),
                s(:args,
                  s(:arg, :chunk)),
                s(:send,
                  s(:lvar, :dest), :<<,
                  s(:lvar, :chunk))),
              s(:lvar, :dest))),
          s(:def, :header,
            s(:args,
              s(:optarg, :dest,
                s(:str, ""))),
            s(:send, nil, :top,
              s(:int, 0),
              s(:lvar, :dest))),
          s(:def, :delete,
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@command), :dele,
                s(:ivar, :@number)),
              s(:ivasgn, :@deleted,
                s(:true)))),
          s(:alias,
            s(:sym, :delete!),
            s(:sym, :delete)),
          s(:def, :deleted?,
            s(:args),
            s(:ivar, :@deleted)),
          s(:def, :unique_id,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@uid),
                s(:return,
                  s(:ivar, :@uid)), nil),
              s(:send,
                s(:ivar, :@pop), :set_all_uids),
              s(:ivar, :@uid))),
          s(:alias,
            s(:sym, :uidl),
            s(:sym, :unique_id)),
          s(:def, :uid=,
            s(:args,
              s(:arg, :uid)),
            s(:ivasgn, :@uid,
              s(:lvar, :uid))))),
      s(:class,
        s(:const, nil, :POP3Command), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :sock)),
            s(:begin,
              s(:ivasgn, :@socket,
                s(:lvar, :sock)),
              s(:ivasgn, :@error_occurred,
                s(:false)),
              s(:lvasgn, :res,
                s(:send, nil, :check_response,
                  s(:block,
                    s(:send, nil, :critical),
                    s(:args),
                    s(:send, nil, :recv_response)))),
              s(:ivasgn, :@apop_stamp,
                s(:send,
                  s(:lvar, :res), :slice,
                  s(:regexp,
                    s(:str, "<[!-~]+@[!-~]+>"),
                    s(:regopt)))))),
          s(:send, nil, :attr_reader,
            s(:sym, :socket)),
          s(:def, :inspect,
            s(:args),
            s(:dstr,
              s(:str, "#<"),
              s(:begin,
                s(:send,
                  s(:self), :class)),
              s(:str, " socket="),
              s(:begin,
                s(:ivar, :@socket)),
              s(:str, ">"))),
          s(:def, :auth,
            s(:args,
              s(:arg, :account),
              s(:arg, :password)),
            s(:send, nil, :check_response_auth,
              s(:block,
                s(:send, nil, :critical),
                s(:args),
                s(:begin,
                  s(:send, nil, :check_response_auth,
                    s(:send, nil, :get_response,
                      s(:str, "USER %s"),
                      s(:lvar, :account))),
                  s(:send, nil, :get_response,
                    s(:str, "PASS %s"),
                    s(:lvar, :password)))))),
          s(:def, :apop,
            s(:args,
              s(:arg, :account),
              s(:arg, :password)),
            s(:begin,
              s(:if,
                s(:ivar, :@apop_stamp), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :POPAuthenticationError),
                  s(:str, "not APOP server; cannot login"))),
              s(:send, nil, :check_response_auth,
                s(:block,
                  s(:send, nil, :critical),
                  s(:args),
                  s(:send, nil, :get_response,
                    s(:str, "APOP %s %s"),
                    s(:lvar, :account),
                    s(:send,
                      s(:const,
                        s(:const, nil, :Digest), :MD5), :hexdigest,
                      s(:send,
                        s(:ivar, :@apop_stamp), :+,
                        s(:lvar, :password)))))))),
          s(:def, :list,
            s(:args),
            s(:block,
              s(:send, nil, :critical),
              s(:args),
              s(:begin,
                s(:send, nil, :getok,
                  s(:str, "LIST")),
                s(:lvasgn, :list,
                  s(:array)),
                s(:block,
                  s(:send,
                    s(:ivar, :@socket), :each_list_item),
                  s(:args,
                    s(:arg, :line)),
                  s(:begin,
                    s(:or,
                      s(:lvasgn, :m,
                        s(:send,
                          s(:regexp,
                            s(:str, "\\A(\\d+)[ \\t]+(\\d+)"),
                            s(:regopt)), :match,
                          s(:lvar, :line))),
                      s(:send, nil, :raise,
                        s(:const, nil, :POPBadResponse),
                        s(:dstr,
                          s(:str, "bad response: "),
                          s(:begin,
                            s(:lvar, :line))))),
                    s(:send,
                      s(:lvar, :list), :push,
                      s(:array,
                        s(:send,
                          s(:send,
                            s(:lvar, :m), :[],
                            s(:int, 1)), :to_i),
                        s(:send,
                          s(:send,
                            s(:lvar, :m), :[],
                            s(:int, 2)), :to_i))))),
                s(:return,
                  s(:lvar, :list))))),
          s(:def, :stat,
            s(:args),
            s(:begin,
              s(:lvasgn, :res,
                s(:send, nil, :check_response,
                  s(:block,
                    s(:send, nil, :critical),
                    s(:args),
                    s(:send, nil, :get_response,
                      s(:str, "STAT"))))),
              s(:or,
                s(:lvasgn, :m,
                  s(:send,
                    s(:regexp,
                      s(:str, "\\A\\+OK\\s+(\\d+)\\s+(\\d+)"),
                      s(:regopt)), :match,
                    s(:lvar, :res))),
                s(:send, nil, :raise,
                  s(:const, nil, :POPBadResponse),
                  s(:dstr,
                    s(:str, "wrong response format: "),
                    s(:begin,
                      s(:lvar, :res))))),
              s(:array,
                s(:send,
                  s(:send,
                    s(:lvar, :m), :[],
                    s(:int, 1)), :to_i),
                s(:send,
                  s(:send,
                    s(:lvar, :m), :[],
                    s(:int, 2)), :to_i)))),
          s(:def, :rset,
            s(:args),
            s(:send, nil, :check_response,
              s(:block,
                s(:send, nil, :critical),
                s(:args),
                s(:send, nil, :get_response,
                  s(:str, "RSET"))))),
          s(:def, :top,
            s(:args,
              s(:arg, :num),
              s(:optarg, :lines,
                s(:int, 0)),
              s(:blockarg, :block)),
            s(:block,
              s(:send, nil, :critical),
              s(:args),
              s(:begin,
                s(:send, nil, :getok,
                  s(:str, "TOP %d %d"),
                  s(:lvar, :num),
                  s(:lvar, :lines)),
                s(:send,
                  s(:ivar, :@socket), :each_message_chunk,
                  s(:block_pass,
                    s(:lvar, :block)))))),
          s(:def, :retr,
            s(:args,
              s(:arg, :num),
              s(:blockarg, :block)),
            s(:block,
              s(:send, nil, :critical),
              s(:args),
              s(:begin,
                s(:send, nil, :getok,
                  s(:str, "RETR %d"),
                  s(:lvar, :num)),
                s(:send,
                  s(:ivar, :@socket), :each_message_chunk,
                  s(:block_pass,
                    s(:lvar, :block)))))),
          s(:def, :dele,
            s(:args,
              s(:arg, :num)),
            s(:send, nil, :check_response,
              s(:block,
                s(:send, nil, :critical),
                s(:args),
                s(:send, nil, :get_response,
                  s(:str, "DELE %d"),
                  s(:lvar, :num))))),
          s(:def, :uidl,
            s(:args,
              s(:optarg, :num,
                s(:nil))),
            s(:if,
              s(:lvar, :num),
              s(:begin,
                s(:lvasgn, :res,
                  s(:send, nil, :check_response,
                    s(:block,
                      s(:send, nil, :critical),
                      s(:args),
                      s(:send, nil, :get_response,
                        s(:str, "UIDL %d"),
                        s(:lvar, :num))))),
                s(:return,
                  s(:send,
                    s(:send,
                      s(:lvar, :res), :split,
                      s(:regexp,
                        s(:str, " "),
                        s(:regopt))), :[],
                    s(:int, 1)))),
              s(:block,
                s(:send, nil, :critical),
                s(:args),
                s(:begin,
                  s(:send, nil, :getok,
                    s(:str, "UIDL")),
                  s(:lvasgn, :table,
                    s(:hash)),
                  s(:block,
                    s(:send,
                      s(:ivar, :@socket), :each_list_item),
                    s(:args,
                      s(:arg, :line)),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :num),
                          s(:lvasgn, :uid)),
                        s(:send,
                          s(:lvar, :line), :split)),
                      s(:send,
                        s(:lvar, :table), :[]=,
                        s(:send,
                          s(:lvar, :num), :to_i),
                        s(:lvar, :uid)))),
                  s(:return,
                    s(:lvar, :table)))))),
          s(:def, :quit,
            s(:args),
            s(:send, nil, :check_response,
              s(:block,
                s(:send, nil, :critical),
                s(:args),
                s(:send, nil, :get_response,
                  s(:str, "QUIT"))))),
          s(:send, nil, :private),
          s(:def, :getok,
            s(:args,
              s(:arg, :fmt),
              s(:restarg, :fargs)),
            s(:begin,
              s(:send,
                s(:ivar, :@socket), :writeline,
                s(:send, nil, :sprintf,
                  s(:lvar, :fmt),
                  s(:splat,
                    s(:lvar, :fargs)))),
              s(:send, nil, :check_response,
                s(:send, nil, :recv_response)))),
          s(:def, :get_response,
            s(:args,
              s(:arg, :fmt),
              s(:restarg, :fargs)),
            s(:begin,
              s(:send,
                s(:ivar, :@socket), :writeline,
                s(:send, nil, :sprintf,
                  s(:lvar, :fmt),
                  s(:splat,
                    s(:lvar, :fargs)))),
              s(:send, nil, :recv_response))),
          s(:def, :recv_response,
            s(:args),
            s(:send,
              s(:ivar, :@socket), :readline)),
          s(:def, :check_response,
            s(:args,
              s(:arg, :res)),
            s(:begin,
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\A\\+OK"),
                    s(:regopt, :i)),
                  s(:lvar, :res)), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :POPError),
                  s(:lvar, :res))),
              s(:lvar, :res))),
          s(:def, :check_response_auth,
            s(:args,
              s(:arg, :res)),
            s(:begin,
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\A\\+OK"),
                    s(:regopt, :i)),
                  s(:lvar, :res)), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :POPAuthenticationError),
                  s(:lvar, :res))),
              s(:lvar, :res))),
          s(:def, :critical,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@error_occurred),
                s(:return,
                  s(:str, "+OK dummy ok response")), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:return,
                    s(:yield)),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :Exception)), nil,
                    s(:begin,
                      s(:ivasgn, :@error_occurred,
                        s(:true)),
                      s(:send, nil, :raise))), nil)))))))))
