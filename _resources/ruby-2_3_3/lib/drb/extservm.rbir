s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:send, nil, :require,
    s(:str, "monitor")),
  s(:module,
    s(:const, nil, :DRb),
    s(:class,
      s(:const, nil, :ExtServManager), nil,
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :DRbUndumped)),
        s(:send, nil, :include,
          s(:const, nil, :MonitorMixin)),
        s(:cvasgn, :@@command,
          s(:hash)),
        s(:defs,
          s(:self), :command,
          s(:args),
          s(:cvar, :@@command)),
        s(:defs,
          s(:self), :command=,
          s(:args,
            s(:arg, :cmd)),
          s(:cvasgn, :@@command,
            s(:lvar, :cmd))),
        s(:def, :initialize,
          s(:args),
          s(:begin,
            s(:super),
            s(:ivasgn, :@cond,
              s(:send, nil, :new_cond)),
            s(:ivasgn, :@servers,
              s(:hash)),
            s(:ivasgn, :@waiting,
              s(:array)),
            s(:ivasgn, :@queue,
              s(:send,
                s(:const, nil, :Queue), :new)),
            s(:ivasgn, :@thread,
              s(:send, nil, :invoke_thread)),
            s(:ivasgn, :@uri,
              s(:nil)))),
        s(:send, nil, :attr_accessor,
          s(:sym, :uri)),
        s(:def, :service,
          s(:args,
            s(:arg, :name)),
          s(:block,
            s(:send, nil, :synchronize),
            s(:args),
            s(:while,
              s(:true),
              s(:begin,
                s(:lvasgn, :server,
                  s(:send,
                    s(:ivar, :@servers), :[],
                    s(:lvar, :name))),
                s(:if,
                  s(:csend,
                    s(:lvar, :server), :alive?),
                  s(:return,
                    s(:lvar, :server)), nil),
                s(:send, nil, :invoke_service,
                  s(:lvar, :name)),
                s(:send,
                  s(:ivar, :@cond), :wait))))),
        s(:def, :regist,
          s(:args,
            s(:arg, :name),
            s(:arg, :ro)),
          s(:begin,
            s(:block,
              s(:send, nil, :synchronize),
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@servers), :[]=,
                  s(:lvar, :name),
                  s(:lvar, :ro)),
                s(:send,
                  s(:ivar, :@cond), :signal))),
            s(:self))),
        s(:def, :unregist,
          s(:args,
            s(:arg, :name)),
          s(:block,
            s(:send, nil, :synchronize),
            s(:args),
            s(:send,
              s(:ivar, :@servers), :delete,
              s(:lvar, :name)))),
        s(:send, nil, :private),
        s(:def, :invoke_thread,
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :Thread), :new),
            s(:args),
            s(:while,
              s(:true),
              s(:begin,
                s(:lvasgn, :name,
                  s(:send,
                    s(:ivar, :@queue), :pop)),
                s(:send, nil, :invoke_service_command,
                  s(:lvar, :name),
                  s(:send,
                    s(:cvar, :@@command), :[],
                    s(:lvar, :name))))))),
        s(:def, :invoke_service,
          s(:args,
            s(:arg, :name)),
          s(:send,
            s(:ivar, :@queue), :push,
            s(:lvar, :name))),
        s(:def, :invoke_service_command,
          s(:args,
            s(:arg, :name),
            s(:arg, :command)),
          s(:begin,
            s(:if,
              s(:lvar, :command), nil,
              s(:send, nil, :raise,
                s(:dstr,
                  s(:str, "invalid command. name: "),
                  s(:begin,
                    s(:lvar, :name))))),
            s(:block,
              s(:send, nil, :synchronize),
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@servers), :include?,
                    s(:lvar, :name)),
                  s(:return), nil),
                s(:send,
                  s(:ivar, :@servers), :[]=,
                  s(:lvar, :name),
                  s(:false)))),
            s(:lvasgn, :uri,
              s(:or,
                s(:ivar, :@uri),
                s(:send,
                  s(:const, nil, :DRb), :uri))),
            s(:if,
              s(:send,
                s(:lvar, :command), :respond_to?,
                s(:sym, :to_ary)),
              s(:begin,
                s(:lvasgn, :command,
                  s(:send,
                    s(:send,
                      s(:lvar, :command), :to_ary), :+,
                    s(:array,
                      s(:lvar, :uri),
                      s(:lvar, :name)))),
                s(:lvasgn, :pid,
                  s(:send, nil, :spawn,
                    s(:splat,
                      s(:lvar, :command))))),
              s(:lvasgn, :pid,
                s(:send, nil, :spawn,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :command)),
                    s(:str, " "),
                    s(:begin,
                      s(:lvar, :uri)),
                    s(:str, " "),
                    s(:begin,
                      s(:lvar, :name)))))),
            s(:lvasgn, :th,
              s(:send,
                s(:const, nil, :Process), :detach,
                s(:lvar, :pid))),
            s(:send,
              s(:lvar, :th), :[]=,
              s(:sym, :drb_service),
              s(:lvar, :name)),
            s(:lvar, :th)))))))
