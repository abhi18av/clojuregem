s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:send, nil, :require,
    s(:str, "monitor")),
  s(:module,
    s(:const, nil, :DRb),
    s(:class,
      s(:const, nil, :TimerIdConv),
      s(:const, nil, :DRbIdConv),
      s(:begin,
        s(:class,
          s(:const, nil, :TimerHolder2), nil,
          s(:begin,
            s(:send, nil, :include,
              s(:const, nil, :MonitorMixin)),
            s(:class,
              s(:const, nil, :InvalidIndexError),
              s(:const, nil, :RuntimeError), nil),
            s(:def, :initialize,
              s(:args,
                s(:optarg, :keeping,
                  s(:int, 600))),
              s(:begin,
                s(:super),
                s(:ivasgn, :@sentinel,
                  s(:send,
                    s(:const, nil, :Object), :new)),
                s(:ivasgn, :@gc,
                  s(:hash)),
                s(:ivasgn, :@renew,
                  s(:hash)),
                s(:ivasgn, :@keeping,
                  s(:lvar, :keeping)),
                s(:ivasgn, :@expires,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Time), :now), :+,
                    s(:ivar, :@keeping))))),
            s(:def, :add,
              s(:args,
                s(:arg, :obj)),
              s(:block,
                s(:send, nil, :synchronize),
                s(:args),
                s(:begin,
                  s(:send, nil, :rotate),
                  s(:lvasgn, :key,
                    s(:send,
                      s(:lvar, :obj), :__id__)),
                  s(:send,
                    s(:ivar, :@renew), :[]=,
                    s(:lvar, :key),
                    s(:lvar, :obj)),
                  s(:return,
                    s(:lvar, :key))))),
            s(:def, :fetch,
              s(:args,
                s(:arg, :key),
                s(:optarg, :dv,
                  s(:ivar, :@sentinel))),
              s(:block,
                s(:send, nil, :synchronize),
                s(:args),
                s(:begin,
                  s(:send, nil, :rotate),
                  s(:lvasgn, :obj,
                    s(:send, nil, :peek,
                      s(:lvar, :key))),
                  s(:if,
                    s(:send,
                      s(:lvar, :obj), :==,
                      s(:ivar, :@sentinel)),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:lvar, :dv), :==,
                          s(:ivar, :@sentinel)), nil,
                        s(:return,
                          s(:lvar, :dv))),
                      s(:send, nil, :raise,
                        s(:const, nil, :InvalidIndexError))), nil),
                  s(:send,
                    s(:ivar, :@renew), :[]=,
                    s(:lvar, :key),
                    s(:lvar, :obj)),
                  s(:return,
                    s(:lvar, :obj))))),
            s(:send, nil, :private),
            s(:def, :peek,
              s(:args,
                s(:arg, :key)),
              s(:block,
                s(:send, nil, :synchronize),
                s(:args),
                s(:return,
                  s(:block,
                    s(:send,
                      s(:ivar, :@renew), :fetch,
                      s(:lvar, :key)),
                    s(:args),
                    s(:send,
                      s(:ivar, :@gc), :fetch,
                      s(:lvar, :key),
                      s(:ivar, :@sentinel)))))),
            s(:def, :rotate,
              s(:args),
              s(:block,
                s(:send, nil, :synchronize),
                s(:args),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:ivar, :@expires), :>,
                      s(:send,
                        s(:const, nil, :Time), :now)),
                    s(:return), nil),
                  s(:ivasgn, :@gc,
                    s(:ivar, :@renew)),
                  s(:ivasgn, :@renew,
                    s(:hash)),
                  s(:ivasgn, :@expires,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :now), :+,
                      s(:ivar, :@keeping)))))),
            s(:def, :keeper,
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Thread), :new),
                s(:args),
                s(:block,
                  s(:send, nil, :loop),
                  s(:args),
                  s(:begin,
                    s(:send, nil, :rotate),
                    s(:send, nil, :sleep,
                      s(:ivar, :@keeping)))))))),
        s(:def, :initialize,
          s(:args,
            s(:optarg, :keeping,
              s(:int, 600))),
          s(:ivasgn, :@holder,
            s(:send,
              s(:const, nil, :TimerHolder2), :new,
              s(:lvar, :keeping)))),
        s(:def, :to_obj,
          s(:args,
            s(:arg, :ref)),
          s(:rescue,
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :ref), :nil?),
                s(:return,
                  s(:zsuper)), nil),
              s(:send,
                s(:ivar, :@holder), :fetch,
                s(:lvar, :ref))),
            s(:resbody,
              s(:array,
                s(:const,
                  s(:const, nil, :TimerHolder2), :InvalidIndexError)), nil,
              s(:send, nil, :raise,
                s(:str, "invalid reference"))), nil)),
        s(:def, :to_id,
          s(:args,
            s(:arg, :obj)),
          s(:return,
            s(:send,
              s(:ivar, :@holder), :add,
              s(:lvar, :obj))))))))
