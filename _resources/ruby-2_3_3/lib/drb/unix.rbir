s(:begin,
  s(:send, nil, :require,
    s(:str, "socket")),
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:if,
    s(:defined?,
      s(:const, nil, :UNIXServer)), nil,
    s(:send, nil, :raise,
      s(:const, nil, :LoadError),
      s(:str, "UNIXServer is required"))),
  s(:module,
    s(:const, nil, :DRb),
    s(:begin,
      s(:class,
        s(:const, nil, :DRbUNIXSocket),
        s(:const, nil, :DRbTCPSocket),
        s(:begin,
          s(:defs,
            s(:self), :parse_uri,
            s(:args,
              s(:arg, :uri)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "^drbunix:(.*?)(\\?(.*))?$"),
                  s(:regopt)),
                s(:lvar, :uri)),
              s(:begin,
                s(:lvasgn, :filename,
                  s(:nth_ref, 1)),
                s(:lvasgn, :option,
                  s(:nth_ref, 3)),
                s(:array,
                  s(:lvar, :filename),
                  s(:lvar, :option))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :uri), :=~,
                    s(:regexp,
                      s(:str, "^drbunix:"),
                      s(:regopt))), nil,
                  s(:send, nil, :raise,
                    s(:const, nil, :DRbBadScheme),
                    s(:lvar, :uri))),
                s(:send, nil, :raise,
                  s(:const, nil, :DRbBadURI),
                  s(:send,
                    s(:str, "can't parse uri:"), :+,
                    s(:lvar, :uri)))))),
          s(:defs,
            s(:self), :open,
            s(:args,
              s(:arg, :uri),
              s(:arg, :config)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :filename)),
                s(:send, nil, :parse_uri,
                  s(:lvar, :uri))),
              s(:send,
                s(:lvar, :filename), :untaint),
              s(:lvasgn, :soc,
                s(:send,
                  s(:const, nil, :UNIXSocket), :open,
                  s(:lvar, :filename))),
              s(:send,
                s(:self), :new,
                s(:lvar, :uri),
                s(:lvar, :soc),
                s(:lvar, :config)))),
          s(:defs,
            s(:self), :open_server,
            s(:args,
              s(:arg, :uri),
              s(:arg, :config)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :filename)),
                s(:send, nil, :parse_uri,
                  s(:lvar, :uri))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :filename), :size), :==,
                  s(:int, 0)),
                s(:begin,
                  s(:lvasgn, :soc,
                    s(:send, nil, :temp_server)),
                  s(:lvasgn, :filename,
                    s(:send,
                      s(:lvar, :soc), :path)),
                  s(:lvasgn, :uri,
                    s(:send,
                      s(:str, "drbunix:"), :+,
                      s(:send,
                        s(:lvar, :soc), :path)))),
                s(:lvasgn, :soc,
                  s(:send,
                    s(:const, nil, :UNIXServer), :open,
                    s(:lvar, :filename)))),
              s(:lvasgn, :owner,
                s(:send,
                  s(:lvar, :config), :[],
                  s(:sym, :UNIXFileOwner))),
              s(:lvasgn, :group,
                s(:send,
                  s(:lvar, :config), :[],
                  s(:sym, :UNIXFileGroup))),
              s(:if,
                s(:or,
                  s(:lvar, :owner),
                  s(:lvar, :group)),
                s(:begin,
                  s(:send, nil, :require,
                    s(:str, "etc")),
                  s(:if,
                    s(:lvar, :owner),
                    s(:lvasgn, :owner,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Etc), :getpwnam,
                          s(:lvar, :owner)), :uid)), nil),
                  s(:if,
                    s(:lvar, :group),
                    s(:lvasgn, :group,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Etc), :getgrnam,
                          s(:lvar, :group)), :gid)), nil),
                  s(:send,
                    s(:const, nil, :File), :chown,
                    s(:lvar, :owner),
                    s(:lvar, :group),
                    s(:lvar, :filename))), nil),
              s(:lvasgn, :mode,
                s(:send,
                  s(:lvar, :config), :[],
                  s(:sym, :UNIXFileMode))),
              s(:if,
                s(:lvar, :mode),
                s(:send,
                  s(:const, nil, :File), :chmod,
                  s(:lvar, :mode),
                  s(:lvar, :filename)), nil),
              s(:send,
                s(:self), :new,
                s(:lvar, :uri),
                s(:lvar, :soc),
                s(:lvar, :config),
                s(:true)))),
          s(:defs,
            s(:self), :uri_option,
            s(:args,
              s(:arg, :uri),
              s(:arg, :config)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :filename),
                  s(:lvasgn, :option)),
                s(:send, nil, :parse_uri,
                  s(:lvar, :uri))),
              s(:return,
                s(:dstr,
                  s(:str, "drbunix:"),
                  s(:begin,
                    s(:lvar, :filename))),
                s(:lvar, :option)))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :uri),
              s(:arg, :soc),
              s(:optarg, :config,
                s(:hash)),
              s(:optarg, :server_mode,
                s(:false))),
            s(:begin,
              s(:super,
                s(:lvar, :uri),
                s(:lvar, :soc),
                s(:lvar, :config)),
              s(:send, nil, :set_sockopt,
                s(:ivar, :@socket)),
              s(:ivasgn, :@server_mode,
                s(:lvar, :server_mode)),
              s(:ivasgn, :@acl,
                s(:nil)))),
          s(:casgn, nil, :Max_try,
            s(:int, 10)),
          s(:send, nil, :private),
          s(:defs,
            s(:self), :temp_server,
            s(:args),
            s(:begin,
              s(:lvasgn, :tmpdir,
                s(:send,
                  s(:const, nil, :Dir), :tmpdir)),
              s(:lvasgn, :n,
                s(:int, 0)),
              s(:while,
                s(:true),
                s(:begin,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:lvasgn, :tmpname,
                          s(:send, nil, :sprintf,
                            s(:str, "%s/druby%d.%d"),
                            s(:lvar, :tmpdir),
                            s(:gvar, :$$),
                            s(:lvar, :n))),
                        s(:lvasgn, :lock,
                          s(:send,
                            s(:lvar, :tmpname), :+,
                            s(:str, ".lock"))),
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:const, nil, :File), :exist?,
                              s(:lvar, :tmpname)),
                            s(:send,
                              s(:const, nil, :File), :exist?,
                              s(:lvar, :lock))), nil,
                          s(:begin,
                            s(:send,
                              s(:const, nil, :Dir), :mkdir,
                              s(:lvar, :lock)),
                            s(:break)))),
                      s(:resbody, nil, nil,
                        s(:if,
                          s(:send,
                            s(:lvar, :n), :>=,
                            s(:const, nil, :Max_try)),
                          s(:send, nil, :raise,
                            s(:send,
                              s(:str, "cannot generate tempfile `%s'"), :%,
                              s(:lvar, :tmpname))), nil)), nil)),
                  s(:op_asgn,
                    s(:lvasgn, :n), :+,
                    s(:int, 1)))),
              s(:lvasgn, :soc,
                s(:send,
                  s(:const, nil, :UNIXServer), :new,
                  s(:lvar, :tmpname))),
              s(:send,
                s(:const, nil, :Dir), :rmdir,
                s(:lvar, :lock)),
              s(:lvar, :soc))),
          s(:send, nil, :public),
          s(:def, :close,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@socket), nil,
                s(:return)),
              s(:if,
                s(:ivar, :@server_mode),
                s(:lvasgn, :path,
                  s(:send,
                    s(:ivar, :@socket), :path)), nil),
              s(:send,
                s(:ivar, :@socket), :close),
              s(:if,
                s(:ivar, :@server_mode),
                s(:send,
                  s(:const, nil, :File), :unlink,
                  s(:lvar, :path)), nil),
              s(:ivasgn, :@socket,
                s(:nil)),
              s(:send, nil, :close_shutdown_pipe))),
          s(:def, :accept,
            s(:args),
            s(:begin,
              s(:lvasgn, :s,
                s(:send, nil, :accept_or_shutdown)),
              s(:if,
                s(:lvar, :s), nil,
                s(:return,
                  s(:nil))),
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:nil),
                s(:lvar, :s),
                s(:ivar, :@config)))),
          s(:def, :set_sockopt,
            s(:args,
              s(:arg, :soc)), nil))),
      s(:send,
        s(:const, nil, :DRbProtocol), :add_protocol,
        s(:const, nil, :DRbUNIXSocket)))))
