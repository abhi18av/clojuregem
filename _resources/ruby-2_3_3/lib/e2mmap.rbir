s(:module,
  s(:const, nil, :Exception2MessageMapper),
  s(:begin,
    s(:casgn, nil, :E2MM,
      s(:const, nil, :Exception2MessageMapper)),
    s(:defs,
      s(:const, nil, :E2MM), :extend_object,
      s(:args,
        s(:arg, :cl)),
      s(:begin,
        s(:zsuper),
        s(:if,
          s(:send,
            s(:lvar, :cl), :<,
            s(:const, nil, :E2MM)), nil,
          s(:send,
            s(:lvar, :cl), :bind,
            s(:self))))),
    s(:def, :bind,
      s(:args,
        s(:arg, :cl)),
      s(:send,
        s(:self), :module_eval,
        s(:dstr,
          s(:str, "\n"),
          s(:str, "      def Raise(err = nil, *rest)\n"),
          s(:str, "        Exception2MessageMapper.Raise(self.class, err, *rest)\n"),
          s(:str, "      end\n"),
          s(:str, "      alias Fail Raise\n"),
          s(:str, "\n"),
          s(:str, "      def self.included(mod)\n"),
          s(:str, "        mod.extend Exception2MessageMapper\n"),
          s(:str, "      end\n"),
          s(:str, "    ")))),
    s(:def, :Raise,
      s(:args,
        s(:optarg, :err,
          s(:nil)),
        s(:restarg, :rest)),
      s(:send,
        s(:const, nil, :E2MM), :Raise,
        s(:self),
        s(:lvar, :err),
        s(:splat,
          s(:lvar, :rest)))),
    s(:alias,
      s(:sym, :Fail),
      s(:sym, :Raise)),
    s(:alias,
      s(:sym, :fail),
      s(:sym, :Raise)),
    s(:def, :def_e2message,
      s(:args,
        s(:arg, :c),
        s(:arg, :m)),
      s(:send,
        s(:const, nil, :E2MM), :def_e2message,
        s(:self),
        s(:lvar, :c),
        s(:lvar, :m))),
    s(:def, :def_exception,
      s(:args,
        s(:arg, :n),
        s(:arg, :m),
        s(:optarg, :s,
          s(:const, nil, :StandardError))),
      s(:send,
        s(:const, nil, :E2MM), :def_exception,
        s(:self),
        s(:lvar, :n),
        s(:lvar, :m),
        s(:lvar, :s))),
    s(:ivasgn, :@MessageMap,
      s(:hash)),
    s(:defs,
      s(:const, nil, :E2MM), :def_e2message,
      s(:args,
        s(:arg, :k),
        s(:arg, :c),
        s(:arg, :m)),
      s(:begin,
        s(:block,
          s(:send,
            s(:const, nil, :E2MM), :instance_eval),
          s(:args),
          s(:send,
            s(:ivar, :@MessageMap), :[]=,
            s(:array,
              s(:lvar, :k),
              s(:lvar, :c)),
            s(:lvar, :m))),
        s(:lvar, :c))),
    s(:defs,
      s(:const, nil, :E2MM), :def_exception,
      s(:args,
        s(:arg, :k),
        s(:arg, :n),
        s(:arg, :m),
        s(:optarg, :s,
          s(:const, nil, :StandardError))),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :n), :kind_of?,
            s(:const, nil, :Fixnum)),
          s(:lvasgn, :n,
            s(:send,
              s(:lvar, :n), :id2name)), nil),
        s(:lvasgn, :e,
          s(:send,
            s(:const, nil, :Class), :new,
            s(:lvar, :s))),
        s(:block,
          s(:send,
            s(:const, nil, :E2MM), :instance_eval),
          s(:args),
          s(:send,
            s(:ivar, :@MessageMap), :[]=,
            s(:array,
              s(:lvar, :k),
              s(:lvar, :e)),
            s(:lvar, :m))),
        s(:send,
          s(:lvar, :k), :const_set,
          s(:lvar, :n),
          s(:lvar, :e)))),
    s(:defs,
      s(:const, nil, :E2MM), :Raise,
      s(:args,
        s(:optarg, :klass,
          s(:const, nil, :E2MM)),
        s(:optarg, :err,
          s(:nil)),
        s(:restarg, :rest)),
      s(:if,
        s(:lvasgn, :form,
          s(:send, nil, :e2mm_message,
            s(:lvar, :klass),
            s(:lvar, :err))),
        s(:begin,
          s(:lvasgn, :b,
            s(:if,
              s(:send,
                s(:gvar, :$@), :nil?),
              s(:send, nil, :caller,
                s(:int, 1)),
              s(:gvar, :$@))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :b), :[],
                s(:int, 0)), :=~,
              s(:regexp,
                s(:str, "^"),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Regexp), :quote,
                    s(:str, "(string)"))),
                s(:str, ":"),
                s(:regopt))),
            s(:send,
              s(:lvar, :b), :shift), nil),
          s(:send, nil, :raise,
            s(:lvar, :err),
            s(:send, nil, :sprintf,
              s(:lvar, :form),
              s(:splat,
                s(:lvar, :rest))),
            s(:lvar, :b))),
        s(:send,
          s(:const, nil, :E2MM), :Fail,
          s(:const, nil, :E2MM),
          s(:const, nil, :ErrNotRegisteredException),
          s(:send,
            s(:lvar, :err), :inspect)))),
    s(:sclass,
      s(:const, nil, :E2MM),
      s(:alias,
        s(:sym, :Fail),
        s(:sym, :Raise))),
    s(:defs,
      s(:const, nil, :E2MM), :e2mm_message,
      s(:args,
        s(:arg, :klass),
        s(:arg, :exp)),
      s(:begin,
        s(:for,
          s(:lvasgn, :c),
          s(:send,
            s(:lvar, :klass), :ancestors),
          s(:if,
            s(:lvasgn, :mes,
              s(:send,
                s(:ivar, :@MessageMap), :[],
                s(:array,
                  s(:lvar, :c),
                  s(:lvar, :exp)))),
            s(:begin,
              s(:lvasgn, :m,
                s(:send,
                  s(:lvar, :klass), :instance_eval,
                  s(:send,
                    s(:send,
                      s(:str, "\""), :+,
                      s(:lvar, :mes)), :+,
                    s(:str, "\"")))),
              s(:return,
                s(:lvar, :m))), nil)),
        s(:nil))),
    s(:sclass,
      s(:self),
      s(:alias,
        s(:sym, :message),
        s(:sym, :e2mm_message))),
    s(:send,
      s(:const, nil, :E2MM), :def_exception,
      s(:const, nil, :E2MM),
      s(:sym, :ErrNotRegisteredException),
      s(:str, "not registered exception(%s)"))))
