s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:module,
    s(:const, nil, :Rinda),
    s(:begin,
      s(:class,
        s(:const, nil, :RindaError),
        s(:const, nil, :RuntimeError), nil),
      s(:class,
        s(:const, nil, :InvalidHashTupleKey),
        s(:const, nil, :RindaError), nil),
      s(:class,
        s(:const, nil, :RequestCanceledError),
        s(:const, nil, :ThreadError), nil),
      s(:class,
        s(:const, nil, :RequestExpiredError),
        s(:const, nil, :ThreadError), nil),
      s(:class,
        s(:const, nil, :Tuple), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :ary_or_hash)),
            s(:if,
              s(:send, nil, :hash?,
                s(:lvar, :ary_or_hash)),
              s(:send, nil, :init_with_hash,
                s(:lvar, :ary_or_hash)),
              s(:send, nil, :init_with_ary,
                s(:lvar, :ary_or_hash)))),
          s(:def, :size,
            s(:args),
            s(:send,
              s(:ivar, :@tuple), :size)),
          s(:def, :[],
            s(:args,
              s(:arg, :k)),
            s(:send,
              s(:ivar, :@tuple), :[],
              s(:lvar, :k))),
          s(:def, :fetch,
            s(:args,
              s(:arg, :k)),
            s(:send,
              s(:ivar, :@tuple), :fetch,
              s(:lvar, :k))),
          s(:def, :each,
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :Hash), :===,
                s(:ivar, :@tuple)),
              s(:block,
                s(:send,
                  s(:ivar, :@tuple), :each),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :v)),
                s(:yield,
                  s(:lvar, :k),
                  s(:lvar, :v))),
              s(:block,
                s(:send,
                  s(:ivar, :@tuple), :each_with_index),
                s(:args,
                  s(:arg, :v),
                  s(:arg, :k)),
                s(:yield,
                  s(:lvar, :k),
                  s(:lvar, :v))))),
          s(:def, :value,
            s(:args),
            s(:ivar, :@tuple)),
          s(:send, nil, :private),
          s(:def, :hash?,
            s(:args,
              s(:arg, :ary_or_hash)),
            s(:send,
              s(:lvar, :ary_or_hash), :respond_to?,
              s(:sym, :keys))),
          s(:def, :init_with_ary,
            s(:args,
              s(:arg, :ary)),
            s(:begin,
              s(:ivasgn, :@tuple,
                s(:send,
                  s(:const, nil, :Array), :new,
                  s(:send,
                    s(:lvar, :ary), :size))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@tuple), :size), :times),
                s(:args,
                  s(:arg, :i)),
                s(:send,
                  s(:ivar, :@tuple), :[]=,
                  s(:lvar, :i),
                  s(:send,
                    s(:lvar, :ary), :[],
                    s(:lvar, :i)))))),
          s(:def, :init_with_hash,
            s(:args,
              s(:arg, :hash)),
            s(:begin,
              s(:ivasgn, :@tuple,
                s(:send,
                  s(:const, nil, :Hash), :new)),
              s(:block,
                s(:send,
                  s(:lvar, :hash), :each),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :v)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:const, nil, :String), :===,
                      s(:lvar, :k)), nil,
                    s(:send, nil, :raise,
                      s(:const, nil, :InvalidHashTupleKey))),
                  s(:send,
                    s(:ivar, :@tuple), :[]=,
                    s(:lvar, :k),
                    s(:lvar, :v)))))))),
      s(:class,
        s(:const, nil, :Template),
        s(:const, nil, :Tuple),
        s(:begin,
          s(:def, :match,
            s(:args,
              s(:arg, :tuple)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :tuple), :respond_to?,
                  s(:sym, :size)), nil,
                s(:return,
                  s(:false))),
              s(:if,
                s(:send,
                  s(:lvar, :tuple), :respond_to?,
                  s(:sym, :fetch)), nil,
                s(:return,
                  s(:false))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:self), :size), :==,
                  s(:send,
                    s(:lvar, :tuple), :size)), nil,
                s(:return,
                  s(:false))),
              s(:block,
                s(:send, nil, :each),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :v)),
                s(:begin,
                  s(:kwbegin,
                    s(:rescue,
                      s(:lvasgn, :it,
                        s(:send,
                          s(:lvar, :tuple), :fetch,
                          s(:lvar, :k))),
                      s(:resbody, nil, nil,
                        s(:return,
                          s(:false))), nil)),
                  s(:if,
                    s(:send,
                      s(:lvar, :v), :nil?),
                    s(:next), nil),
                  s(:if,
                    s(:send,
                      s(:lvar, :v), :==,
                      s(:lvar, :it)),
                    s(:next), nil),
                  s(:if,
                    s(:send,
                      s(:lvar, :v), :===,
                      s(:lvar, :it)),
                    s(:next), nil),
                  s(:return,
                    s(:false)))),
              s(:return,
                s(:true)))),
          s(:def, :===,
            s(:args,
              s(:arg, :tuple)),
            s(:send, nil, :match,
              s(:lvar, :tuple))))),
      s(:class,
        s(:const, nil, :DRbObjectTemplate), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:optarg, :uri,
                s(:nil)),
              s(:optarg, :ref,
                s(:nil))),
            s(:begin,
              s(:ivasgn, :@drb_uri,
                s(:lvar, :uri)),
              s(:ivasgn, :@drb_ref,
                s(:lvar, :ref)))),
          s(:def, :===,
            s(:args,
              s(:arg, :ro)),
            s(:begin,
              s(:if,
                s(:super,
                  s(:lvar, :ro)),
                s(:return,
                  s(:true)), nil),
              s(:if,
                s(:send,
                  s(:ivar, :@drb_uri), :nil?), nil,
                s(:if,
                  s(:begin,
                    s(:rescue,
                      s(:send,
                        s(:ivar, :@drb_uri), :===,
                        s(:send,
                          s(:lvar, :ro), :__drburi)),
                      s(:resbody, nil, nil,
                        s(:false)), nil)), nil,
                  s(:return,
                    s(:false)))),
              s(:if,
                s(:send,
                  s(:ivar, :@drb_ref), :nil?), nil,
                s(:if,
                  s(:begin,
                    s(:rescue,
                      s(:send,
                        s(:ivar, :@drb_ref), :===,
                        s(:send,
                          s(:lvar, :ro), :__drbref)),
                      s(:resbody, nil, nil,
                        s(:false)), nil)), nil,
                  s(:return,
                    s(:false)))),
              s(:true))))),
      s(:class,
        s(:const, nil, :TupleSpaceProxy), nil,
        s(:begin,
          s(:class,
            s(:const, nil, :Port), nil,
            s(:begin,
              s(:send, nil, :attr_reader,
                s(:sym, :value)),
              s(:defs,
                s(:self), :deliver,
                s(:args),
                s(:begin,
                  s(:lvasgn, :port,
                    s(:send, nil, :new)),
                  s(:kwbegin,
                    s(:ensure,
                      s(:yield,
                        s(:lvar, :port)),
                      s(:send,
                        s(:lvar, :port), :close))),
                  s(:send,
                    s(:lvar, :port), :value))),
              s(:def, :initialize,
                s(:args),
                s(:begin,
                  s(:ivasgn, :@open,
                    s(:true)),
                  s(:ivasgn, :@value,
                    s(:nil)))),
              s(:def, :close,
                s(:args),
                s(:ivasgn, :@open,
                  s(:false))),
              s(:def, :push,
                s(:args,
                  s(:arg, :value)),
                s(:begin,
                  s(:if,
                    s(:ivar, :@open), nil,
                    s(:send, nil, :raise,
                      s(:str, "port closed"))),
                  s(:ivasgn, :@value,
                    s(:lvar, :value)),
                  s(:nil))))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :ts)),
            s(:ivasgn, :@ts,
              s(:lvar, :ts))),
          s(:def, :write,
            s(:args,
              s(:arg, :tuple),
              s(:optarg, :sec,
                s(:nil))),
            s(:send,
              s(:ivar, :@ts), :write,
              s(:lvar, :tuple),
              s(:lvar, :sec))),
          s(:def, :take,
            s(:args,
              s(:arg, :tuple),
              s(:optarg, :sec,
                s(:nil)),
              s(:blockarg, :block)),
            s(:block,
              s(:send,
                s(:const, nil, :Port), :deliver),
              s(:args,
                s(:arg, :port)),
              s(:send,
                s(:ivar, :@ts), :move,
                s(:send,
                  s(:const, nil, :DRbObject), :new,
                  s(:lvar, :port)),
                s(:lvar, :tuple),
                s(:lvar, :sec),
                s(:block_pass,
                  s(:lvar, :block))))),
          s(:def, :read,
            s(:args,
              s(:arg, :tuple),
              s(:optarg, :sec,
                s(:nil)),
              s(:blockarg, :block)),
            s(:send,
              s(:ivar, :@ts), :read,
              s(:lvar, :tuple),
              s(:lvar, :sec),
              s(:block_pass,
                s(:lvar, :block)))),
          s(:def, :read_all,
            s(:args,
              s(:arg, :tuple)),
            s(:send,
              s(:ivar, :@ts), :read_all,
              s(:lvar, :tuple))),
          s(:def, :notify,
            s(:args,
              s(:arg, :ev),
              s(:arg, :tuple),
              s(:optarg, :sec,
                s(:nil))),
            s(:send,
              s(:ivar, :@ts), :notify,
              s(:lvar, :ev),
              s(:lvar, :tuple),
              s(:lvar, :sec))))),
      s(:class,
        s(:const, nil, :SimpleRenewer), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbUndumped)),
          s(:def, :initialize,
            s(:args,
              s(:optarg, :sec,
                s(:int, 180))),
            s(:ivasgn, :@sec,
              s(:lvar, :sec))),
          s(:def, :renew,
            s(:args),
            s(:ivar, :@sec)))))))
