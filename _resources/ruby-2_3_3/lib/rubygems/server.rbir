s(:begin,
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require,
    s(:str, "zlib")),
  s(:send, nil, :require,
    s(:str, "erb")),
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "rubygems/rdoc")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Server), nil,
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :spec_dirs)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :ERB), :Util)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:casgn, nil, :SEARCH,
        s(:dstr,
          s(:str, "      <form class=\"headerSearch\" name=\"headerSearchForm\" method=\"get\" action=\"/rdoc\">\n"),
          s(:str, "        <div id=\"search\" style=\"float:right\">\n"),
          s(:str, "          <label for=\"q\">Filter/Search</label>\n"),
          s(:str, "          <input id=\"q\" type=\"text\" style=\"width:10em\" name=\"q\">\n"),
          s(:str, "          <button type=\"submit\" style=\"display:none\"></button>\n"),
          s(:str, "        </div>\n"),
          s(:str, "      </form>\n"))),
      s(:casgn, nil, :DOC_TEMPLATE,
        s(:dstr,
          s(:str, "  <?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n"),
          s(:str, "  <!DOCTYPE html\n"),
          s(:str, "       PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n"),
          s(:str, "       \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"),
          s(:str, "\n"),
          s(:str, "  <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n"),
          s(:str, "  <head>\n"),
          s(:str, "    <title>RubyGems Documentation Index</title>\n"),
          s(:str, "    <link rel=\"stylesheet\" href=\"gem-server-rdoc-style.css\" type=\"text/css\" media=\"screen\" />\n"),
          s(:str, "  </head>\n"),
          s(:str, "  <body>\n"),
          s(:str, "    <div id=\"fileHeader\">\n"),
          s(:str, "<%= SEARCH %>\n"),
          s(:str, "      <h1>RubyGems Documentation Index</h1>\n"),
          s(:str, "    </div>\n"),
          s(:str, "    <!-- banner header -->\n"),
          s(:str, "\n"),
          s(:str, "  <div id=\"bodyContent\">\n"),
          s(:str, "    <div id=\"contextContent\">\n"),
          s(:str, "      <div id=\"description\">\n"),
          s(:str, "        <h1>Summary</h1>\n"),
          s(:str, "  <p>There are <%=values[\"gem_count\"]%> gems installed:</p>\n"),
          s(:str, "  <p>\n"),
          s(:str, "  <%= values[\"specs\"].map { |v| \"<a href=\\\"#\#{v[\"name\"]}\\\">\#{v[\"name\"]}</a>\" }.join ', ' %>.\n"),
          s(:str, "  <h1>Gems</h1>\n"),
          s(:str, "\n"),
          s(:str, "  <dl>\n"),
          s(:str, "  <% values[\"specs\"].each do |spec| %>\n"),
          s(:str, "    <dt>\n"),
          s(:str, "    <% if spec[\"first_name_entry\"] then %>\n"),
          s(:str, "      <a name=\"<%=spec[\"name\"]%>\"></a>\n"),
          s(:str, "    <% end %>\n"),
          s(:str, "\n"),
          s(:str, "    <b><%=spec[\"name\"]%> <%=spec[\"version\"]%></b>\n"),
          s(:str, "\n"),
          s(:str, "    <% if spec[\"ri_installed\"] then %>\n"),
          s(:str, "      <a href=\"<%=spec[\"doc_path\"]%>\">[rdoc]</a>\n"),
          s(:str, "    <% elsif spec[\"rdoc_installed\"] then %>\n"),
          s(:str, "      <a href=\"<%=spec[\"doc_path\"]%>\">[rdoc]</a>\n"),
          s(:str, "    <% else %>\n"),
          s(:str, "      <span title=\"rdoc not installed\">[rdoc]</span>\n"),
          s(:str, "    <% end %>\n"),
          s(:str, "\n"),
          s(:str, "    <% if spec[\"homepage\"] then %>\n"),
          s(:str, "      <a href=\"<%=spec[\"homepage\"]%>\" title=\"<%=spec[\"homepage\"]%>\">[www]</a>\n"),
          s(:str, "    <% else %>\n"),
          s(:str, "      <span title=\"no homepage available\">[www]</span>\n"),
          s(:str, "    <% end %>\n"),
          s(:str, "\n"),
          s(:str, "    <% if spec[\"has_deps\"] then %>\n"),
          s(:str, "     - depends on\n"),
          s(:str, "      <%= spec[\"dependencies\"].map { |v| \"<a href=\\\"#\#{v[\"name\"]}\\\">\#{v[\"name\"]}</a>\" }.join ', ' %>.\n"),
          s(:str, "    <% end %>\n"),
          s(:str, "    </dt>\n"),
          s(:str, "    <dd>\n"),
          s(:str, "    <%=spec[\"summary\"]%>\n"),
          s(:str, "    <% if spec[\"executables\"] then %>\n"),
          s(:str, "      <br/>\n"),
          s(:str, "\n"),
          s(:str, "      <% if spec[\"only_one_executable\"] then %>\n"),
          s(:str, "          Executable is\n"),
          s(:str, "      <% else %>\n"),
          s(:str, "          Executables are\n"),
          s(:str, "      <%end%>\n"),
          s(:str, "\n"),
          s(:str, "      <%= spec[\"executables\"].map { |v| \"<span class=\\\"context-item-name\\\">\#{v[\"executable\"]}</span>\"}.join ', ' %>.\n"),
          s(:str, "\n"),
          s(:str, "    <%end%>\n"),
          s(:str, "    <br/>\n"),
          s(:str, "    <br/>\n"),
          s(:str, "    </dd>\n"),
          s(:str, "  <% end %>\n"),
          s(:str, "  </dl>\n"),
          s(:str, "\n"),
          s(:str, "      </div>\n"),
          s(:str, "     </div>\n"),
          s(:str, "    </div>\n"),
          s(:str, "  <div id=\"validator-badges\">\n"),
          s(:str, "    <p><small><a href=\"http://validator.w3.org/check/referer\">[Validate]</a></small></p>\n"),
          s(:str, "  </div>\n"),
          s(:str, "  </body>\n"),
          s(:str, "  </html>\n"))),
      s(:casgn, nil, :RDOC_CSS,
        s(:dstr,
          s(:str, "body {\n"),
          s(:str, "    font-family: Verdana,Arial,Helvetica,sans-serif;\n"),
          s(:str, "    font-size:   90%;\n"),
          s(:str, "    margin: 0;\n"),
          s(:str, "    margin-left: 40px;\n"),
          s(:str, "    padding: 0;\n"),
          s(:str, "    background: white;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "h1,h2,h3,h4 { margin: 0; color: #efefef; background: transparent; }\n"),
          s(:str, "h1 { font-size: 150%; }\n"),
          s(:str, "h2,h3,h4 { margin-top: 1em; }\n"),
          s(:str, "\n"),
          s(:str, "a { background: #eef; color: #039; text-decoration: none; }\n"),
          s(:str, "a:hover { background: #039; color: #eef; }\n"),
          s(:str, "\n"),
          s(:str, "/* Override the base stylesheets Anchor inside a table cell */\n"),
          s(:str, "td > a {\n"),
          s(:str, "  background: transparent;\n"),
          s(:str, "  color: #039;\n"),
          s(:str, "  text-decoration: none;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "/* and inside a section title */\n"),
          s(:str, ".section-title > a {\n"),
          s(:str, "  background: transparent;\n"),
          s(:str, "  color: #eee;\n"),
          s(:str, "  text-decoration: none;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "/* === Structural elements =================================== */\n"),
          s(:str, "\n"),
          s(:str, "div#index {\n"),
          s(:str, "    margin: 0;\n"),
          s(:str, "    margin-left: -40px;\n"),
          s(:str, "    padding: 0;\n"),
          s(:str, "    font-size: 90%;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "div#index a {\n"),
          s(:str, "    margin-left: 0.7em;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#index .section-bar {\n"),
          s(:str, "   margin-left: 0px;\n"),
          s(:str, "   padding-left: 0.7em;\n"),
          s(:str, "   background: #ccc;\n"),
          s(:str, "   font-size: small;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "div#classHeader, div#fileHeader {\n"),
          s(:str, "    width: auto;\n"),
          s(:str, "    color: white;\n"),
          s(:str, "    padding: 0.5em 1.5em 0.5em 1.5em;\n"),
          s(:str, "    margin: 0;\n"),
          s(:str, "    margin-left: -40px;\n"),
          s(:str, "    border-bottom: 3px solid #006;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#classHeader a, div#fileHeader a {\n"),
          s(:str, "    background: inherit;\n"),
          s(:str, "    color: white;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#classHeader td, div#fileHeader td {\n"),
          s(:str, "    background: inherit;\n"),
          s(:str, "    color: white;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "div#fileHeader {\n"),
          s(:str, "    background: #057;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#classHeader {\n"),
          s(:str, "    background: #048;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, ".class-name-in-header {\n"),
          s(:str, "  font-size:  180%;\n"),
          s(:str, "  font-weight: bold;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "div#bodyContent {\n"),
          s(:str, "    padding: 0 1.5em 0 1.5em;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#description {\n"),
          s(:str, "    padding: 0.5em 1.5em;\n"),
          s(:str, "    background: #efefef;\n"),
          s(:str, "    border: 1px dotted #999;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#description h1,h2,h3,h4,h5,h6 {\n"),
          s(:str, "    color: #125;;\n"),
          s(:str, "    background: transparent;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div#validator-badges {\n"),
          s(:str, "    text-align: center;\n"),
          s(:str, "}\n"),
          s(:str, "div#validator-badges img { border: 0; }\n"),
          s(:str, "\n"),
          s(:str, "div#copyright {\n"),
          s(:str, "    color: #333;\n"),
          s(:str, "    background: #efefef;\n"),
          s(:str, "    font: 0.75em sans-serif;\n"),
          s(:str, "    margin-top: 5em;\n"),
          s(:str, "    margin-bottom: 0;\n"),
          s(:str, "    padding: 0.5em 2em;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "/* === Classes =================================== */\n"),
          s(:str, "\n"),
          s(:str, "table.header-table {\n"),
          s(:str, "    color: white;\n"),
          s(:str, "    font-size: small;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, ".type-note {\n"),
          s(:str, "    font-size: small;\n"),
          s(:str, "    color: #DEDEDE;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, ".xxsection-bar {\n"),
          s(:str, "    background: #eee;\n"),
          s(:str, "    color: #333;\n"),
          s(:str, "    padding: 3px;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, ".section-bar {\n"),
          s(:str, "   color: #333;\n"),
          s(:str, "   border-bottom: 1px solid #999;\n"),
          s(:str, "    margin-left: -20px;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, ".section-title {\n"),
          s(:str, "    background: #79a;\n"),
          s(:str, "    color: #eee;\n"),
          s(:str, "    padding: 3px;\n"),
          s(:str, "    margin-top: 2em;\n"),
          s(:str, "    margin-left: -30px;\n"),
          s(:str, "    border: 1px solid #999;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, ".top-aligned-row {  vertical-align: top }\n"),
          s(:str, ".bottom-aligned-row { vertical-align: bottom }\n"),
          s(:str, "\n"),
          s(:str, "/* --- Context section classes ----------------------- */\n"),
          s(:str, "\n"),
          s(:str, ".context-row { }\n"),
          s(:str, ".context-item-name { font-family: monospace; font-weight: bold; color: black; }\n"),
          s(:str, ".context-item-value { font-size: small; color: #448; }\n"),
          s(:str, ".context-item-desc { color: #333; padding-left: 2em; }\n"),
          s(:str, "\n"),
          s(:str, "/* --- Method classes -------------------------- */\n"),
          s(:str, ".method-detail {\n"),
          s(:str, "    background: #efefef;\n"),
          s(:str, "    padding: 0;\n"),
          s(:str, "    margin-top: 0.5em;\n"),
          s(:str, "    margin-bottom: 1em;\n"),
          s(:str, "    border: 1px dotted #ccc;\n"),
          s(:str, "}\n"),
          s(:str, ".method-heading {\n"),
          s(:str, "  color: black;\n"),
          s(:str, "  background: #ccc;\n"),
          s(:str, "  border-bottom: 1px solid #666;\n"),
          s(:str, "  padding: 0.2em 0.5em 0 0.5em;\n"),
          s(:str, "}\n"),
          s(:str, ".method-signature { color: black; background: inherit; }\n"),
          s(:str, ".method-name { font-weight: bold; }\n"),
          s(:str, ".method-args { font-style: italic; }\n"),
          s(:str, ".method-description { padding: 0 0.5em 0 0.5em; }\n"),
          s(:str, "\n"),
          s(:str, "/* --- Source code sections -------------------- */\n"),
          s(:str, "\n"),
          s(:str, "a.source-toggle { font-size: 90%; }\n"),
          s(:str, "div.method-source-code {\n"),
          s(:str, "    background: #262626;\n"),
          s(:str, "    color: #ffdead;\n"),
          s(:str, "    margin: 1em;\n"),
          s(:str, "    padding: 0.5em;\n"),
          s(:str, "    border: 1px dashed #999;\n"),
          s(:str, "    overflow: hidden;\n"),
          s(:str, "}\n"),
          s(:str, "\n"),
          s(:str, "div.method-source-code pre { color: #ffdead; overflow: hidden; }\n"),
          s(:str, "\n"),
          s(:str, "/* --- Ruby keyword styles --------------------- */\n"),
          s(:str, "\n"),
          s(:str, ".standalone-code { background: #221111; color: #ffdead; overflow: hidden; }\n"),
          s(:str, "\n"),
          s(:str, ".ruby-constant  { color: #7fffd4; background: transparent; }\n"),
          s(:str, ".ruby-keyword { color: #00ffff; background: transparent; }\n"),
          s(:str, ".ruby-ivar    { color: #eedd82; background: transparent; }\n"),
          s(:str, ".ruby-operator  { color: #00ffee; background: transparent; }\n"),
          s(:str, ".ruby-identifier { color: #ffdead; background: transparent; }\n"),
          s(:str, ".ruby-node    { color: #ffa07a; background: transparent; }\n"),
          s(:str, ".ruby-comment { color: #b22222; font-weight: bold; background: transparent; }\n"),
          s(:str, ".ruby-regexp  { color: #ffa07a; background: transparent; }\n"),
          s(:str, ".ruby-value   { color: #7fffd4; background: transparent; }\n"))),
      s(:casgn, nil, :RDOC_NO_DOCUMENTATION,
        s(:dstr,
          s(:str, "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n"),
          s(:str, "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n"),
          s(:str, "          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"),
          s(:str, "<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n"),
          s(:str, "  <head>\n"),
          s(:str, "    <title>Found documentation</title>\n"),
          s(:str, "    <link rel=\"stylesheet\" href=\"gem-server-rdoc-style.css\" type=\"text/css\" media=\"screen\" />\n"),
          s(:str, "  </head>\n"),
          s(:str, "  <body>\n"),
          s(:str, "    <div id=\"fileHeader\">\n"),
          s(:str, "<%= SEARCH %>\n"),
          s(:str, "      <h1>No documentation found</h1>\n"),
          s(:str, "    </div>\n"),
          s(:str, "\n"),
          s(:str, "    <div id=\"bodyContent\">\n"),
          s(:str, "      <div id=\"contextContent\">\n"),
          s(:str, "        <div id=\"description\">\n"),
          s(:str, "          <p>No gems matched <%= h query.inspect %></p>\n"),
          s(:str, "\n"),
          s(:str, "          <p>\n"),
          s(:str, "            Back to <a href=\"/\">complete gem index</a>\n"),
          s(:str, "          </p>\n"),
          s(:str, "\n"),
          s(:str, "        </div>\n"),
          s(:str, "      </div>\n"),
          s(:str, "    </div>\n"),
          s(:str, "    <div id=\"validator-badges\">\n"),
          s(:str, "      <p><small><a href=\"http://validator.w3.org/check/referer\">[Validate]</a></small></p>\n"),
          s(:str, "    </div>\n"),
          s(:str, "  </body>\n"),
          s(:str, "</html>\n"))),
      s(:casgn, nil, :RDOC_SEARCH_TEMPLATE,
        s(:dstr,
          s(:str, "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n"),
          s(:str, "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n"),
          s(:str, "          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"),
          s(:str, "<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n"),
          s(:str, "  <head>\n"),
          s(:str, "    <title>Found documentation</title>\n"),
          s(:str, "    <link rel=\"stylesheet\" href=\"gem-server-rdoc-style.css\" type=\"text/css\" media=\"screen\" />\n"),
          s(:str, "  </head>\n"),
          s(:str, "  <body>\n"),
          s(:str, "    <div id=\"fileHeader\">\n"),
          s(:str, "<%= SEARCH %>\n"),
          s(:str, "      <h1>Found documentation</h1>\n"),
          s(:str, "    </div>\n"),
          s(:str, "    <!-- banner header -->\n"),
          s(:str, "\n"),
          s(:str, "    <div id=\"bodyContent\">\n"),
          s(:str, "      <div id=\"contextContent\">\n"),
          s(:str, "        <div id=\"description\">\n"),
          s(:str, "          <h1>Summary</h1>\n"),
          s(:str, "          <p><%=doc_items.length%> documentation topics found.</p>\n"),
          s(:str, "          <h1>Topics</h1>\n"),
          s(:str, "\n"),
          s(:str, "          <dl>\n"),
          s(:str, "          <% doc_items.each do |doc_item| %>\n"),
          s(:str, "            <dt>\n"),
          s(:str, "              <b><%=doc_item[:name]%></b>\n"),
          s(:str, "              <a href=\"<%=doc_item[:url]%>\">[rdoc]</a>\n"),
          s(:str, "            </dt>\n"),
          s(:str, "            <dd>\n"),
          s(:str, "              <%=doc_item[:summary]%>\n"),
          s(:str, "              <br/>\n"),
          s(:str, "              <br/>\n"),
          s(:str, "            </dd>\n"),
          s(:str, "          <% end %>\n"),
          s(:str, "          </dl>\n"),
          s(:str, "\n"),
          s(:str, "          <p>\n"),
          s(:str, "            Back to <a href=\"/\">complete gem index</a>\n"),
          s(:str, "          </p>\n"),
          s(:str, "\n"),
          s(:str, "        </div>\n"),
          s(:str, "      </div>\n"),
          s(:str, "    </div>\n"),
          s(:str, "    <div id=\"validator-badges\">\n"),
          s(:str, "      <p><small><a href=\"http://validator.w3.org/check/referer\">[Validate]</a></small></p>\n"),
          s(:str, "    </div>\n"),
          s(:str, "  </body>\n"),
          s(:str, "</html>\n"))),
      s(:defs,
        s(:self), :run,
        s(:args,
          s(:arg, :options)),
        s(:send,
          s(:send, nil, :new,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :gemdir)),
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :port)),
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :daemon)),
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :launch)),
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :addresses))), :run)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :gem_dirs),
          s(:arg, :port),
          s(:arg, :daemon),
          s(:optarg, :launch,
            s(:nil)),
          s(:optarg, :addresses,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RDoc), :load_rdoc),
          s(:send,
            s(:const, nil, :Socket), :do_not_reverse_lookup=,
            s(:true)),
          s(:ivasgn, :@gem_dirs,
            s(:send, nil, :Array,
              s(:lvar, :gem_dirs))),
          s(:ivasgn, :@port,
            s(:lvar, :port)),
          s(:ivasgn, :@daemon,
            s(:lvar, :daemon)),
          s(:ivasgn, :@launch,
            s(:lvar, :launch)),
          s(:ivasgn, :@addresses,
            s(:lvar, :addresses)),
          s(:lvasgn, :logger,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Log), :new,
              s(:nil),
              s(:const,
                s(:const,
                  s(:const, nil, :WEBrick), :BasicLog), :FATAL))),
          s(:ivasgn, :@server,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPServer), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :DoNotListen),
                  s(:true)),
                s(:pair,
                  s(:sym, :Logger),
                  s(:lvar, :logger))))),
          s(:ivasgn, :@spec_dirs,
            s(:block,
              s(:send,
                s(:ivar, :@gem_dirs), :map),
              s(:args,
                s(:arg, :gem_dir)),
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :gem_dir),
                s(:str, "specifications")))),
          s(:block,
            s(:send,
              s(:ivar, :@spec_dirs), :reject!),
            s(:args,
              s(:arg, :spec_dir)),
            s(:send,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :spec_dir)), :!)),
          s(:send, nil, :reset_gems),
          s(:ivasgn, :@have_rdoc_4_plus,
            s(:nil)))),
      s(:def, :add_date,
        s(:args,
          s(:arg, :res)),
        s(:send,
          s(:lvar, :res), :[]=,
          s(:str, "date"),
          s(:send,
            s(:block,
              s(:send,
                s(:ivar, :@spec_dirs), :map),
              s(:args,
                s(:arg, :spec_dir)),
              s(:send,
                s(:send,
                  s(:const, nil, :File), :stat,
                  s(:lvar, :spec_dir)), :mtime)), :max))),
      s(:def, :doc_root,
        s(:args,
          s(:arg, :gem_name)),
        s(:if,
          s(:send, nil, :have_rdoc_4_plus?),
          s(:dstr,
            s(:str, "/doc_root/"),
            s(:begin,
              s(:lvar, :gem_name)),
            s(:str, "/")),
          s(:dstr,
            s(:str, "/doc_root/"),
            s(:begin,
              s(:lvar, :gem_name)),
            s(:str, "/rdoc/index.html")))),
      s(:def, :have_rdoc_4_plus?,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@have_rdoc_4_plus),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :new,
              s(:str, ">= 4.0.0.preview2")), :satisfied_by?,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :rdoc_version)))),
      s(:def, :latest_specs,
        s(:args,
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:send, nil, :reset_gems),
          s(:send,
            s(:lvar, :res), :[]=,
            s(:str, "content-type"),
            s(:str, "application/x-gzip")),
          s(:send, nil, :add_date,
            s(:lvar, :res)),
          s(:lvasgn, :latest_specs,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :latest_specs)),
          s(:lvasgn, :specs,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :latest_specs), :sort), :map),
              s(:args,
                s(:arg, :spec)),
              s(:begin,
                s(:lvasgn, :platform,
                  s(:or,
                    s(:send,
                      s(:lvar, :spec), :original_platform),
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :RUBY))),
                s(:array,
                  s(:send,
                    s(:lvar, :spec), :name),
                  s(:send,
                    s(:lvar, :spec), :version),
                  s(:lvar, :platform))))),
          s(:lvasgn, :specs,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :specs))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :path), :=~,
              s(:regexp,
                s(:str, "\\.gz$"),
                s(:regopt))),
            s(:begin,
              s(:lvasgn, :specs,
                s(:send,
                  s(:const, nil, :Gem), :gzip,
                  s(:lvar, :specs))),
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "content-type"),
                s(:str, "application/x-gzip"))),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "content-type"),
              s(:str, "application/octet-stream"))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :request_method), :==,
              s(:str, "HEAD")),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "content-length"),
              s(:send,
                s(:lvar, :specs), :length)),
            s(:send,
              s(:send,
                s(:lvar, :res), :body), :<<,
              s(:lvar, :specs))))),
      s(:def, :listen,
        s(:args,
          s(:optarg, :addresses,
            s(:ivar, :@addresses))),
        s(:begin,
          s(:if,
            s(:lvar, :addresses), nil,
            s(:lvasgn, :addresses,
              s(:array,
                s(:nil)))),
          s(:lvasgn, :listeners,
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:lvar, :addresses), :each),
            s(:args,
              s(:arg, :address)),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:send,
                    s(:ivar, :@server), :listen,
                    s(:lvar, :address),
                    s(:ivar, :@port)),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:ivar, :@server), :listeners), :[],
                        s(:irange,
                          s(:lvar, :listeners),
                          s(:int, -1))), :each),
                    s(:args,
                      s(:arg, :listener)),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :host),
                          s(:lvasgn, :port)),
                        s(:send,
                          s(:send,
                            s(:lvar, :listener), :addr), :values_at,
                          s(:int, 2),
                          s(:int, 1))),
                      s(:if,
                        s(:send,
                          s(:lvar, :host), :=~,
                          s(:regexp,
                            s(:str, ":"),
                            s(:regopt))),
                        s(:lvasgn, :host,
                          s(:dstr,
                            s(:str, "["),
                            s(:begin,
                              s(:lvar, :host)),
                            s(:str, "]"))), nil),
                      s(:send, nil, :say,
                        s(:dstr,
                          s(:str, "Server started at http://"),
                          s(:begin,
                            s(:lvar, :host)),
                          s(:str, ":"),
                          s(:begin,
                            s(:lvar, :port)))))),
                  s(:lvasgn, :listeners,
                    s(:send,
                      s(:send,
                        s(:ivar, :@server), :listeners), :length))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :SystemCallError)), nil,
                  s(:next)), nil))),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@server), :listeners), :empty?),
            s(:begin,
              s(:send, nil, :say,
                s(:str, "Unable to start a server.")),
              s(:send, nil, :say,
                s(:str, "Check for running servers or your --bind and --port arguments")),
              s(:send, nil, :terminate_interaction,
                s(:int, 1))), nil))),
      s(:def, :prerelease_specs,
        s(:args,
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:send, nil, :reset_gems),
          s(:send,
            s(:lvar, :res), :[]=,
            s(:str, "content-type"),
            s(:str, "application/x-gzip")),
          s(:send, nil, :add_date,
            s(:lvar, :res)),
          s(:lvasgn, :specs,
            s(:block,
              s(:send,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Specification), :select),
                    s(:args,
                      s(:arg, :spec)),
                    s(:send,
                      s(:send,
                        s(:lvar, :spec), :version), :prerelease?)), :sort), :map),
              s(:args,
                s(:arg, :spec)),
              s(:begin,
                s(:lvasgn, :platform,
                  s(:or,
                    s(:send,
                      s(:lvar, :spec), :original_platform),
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :RUBY))),
                s(:array,
                  s(:send,
                    s(:lvar, :spec), :name),
                  s(:send,
                    s(:lvar, :spec), :version),
                  s(:lvar, :platform))))),
          s(:lvasgn, :specs,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :specs))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :path), :=~,
              s(:regexp,
                s(:str, "\\.gz$"),
                s(:regopt))),
            s(:begin,
              s(:lvasgn, :specs,
                s(:send,
                  s(:const, nil, :Gem), :gzip,
                  s(:lvar, :specs))),
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "content-type"),
                s(:str, "application/x-gzip"))),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "content-type"),
              s(:str, "application/octet-stream"))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :request_method), :==,
              s(:str, "HEAD")),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "content-length"),
              s(:send,
                s(:lvar, :specs), :length)),
            s(:send,
              s(:send,
                s(:lvar, :res), :body), :<<,
              s(:lvar, :specs))))),
      s(:def, :quick,
        s(:args,
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:send, nil, :reset_gems),
          s(:send,
            s(:lvar, :res), :[]=,
            s(:str, "content-type"),
            s(:str, "text/plain")),
          s(:send, nil, :add_date,
            s(:lvar, :res)),
          s(:case,
            s(:send,
              s(:send,
                s(:lvar, :req), :request_uri), :path),
            s(:when,
              s(:regexp,
                s(:str, "^/quick/(Marshal."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Regexp), :escape,
                    s(:send,
                      s(:const, nil, :Gem), :marshal_version))),
                s(:str, "/)?(.*?)-([0-9.]+[^-]*?)(-.*?)?\\.gemspec\\.rz$"),
                s(:regopt)),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :marshal_format),
                    s(:lvasgn, :name),
                    s(:lvasgn, :version),
                    s(:lvasgn, :platform)),
                  s(:array,
                    s(:nth_ref, 1),
                    s(:nth_ref, 2),
                    s(:nth_ref, 3),
                    s(:nth_ref, 4))),
                s(:lvasgn, :specs,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Specification), :find_all_by_name,
                    s(:lvar, :name),
                    s(:lvar, :version))),
                s(:lvasgn, :selector,
                  s(:send,
                    s(:send,
                      s(:array,
                        s(:lvar, :name),
                        s(:lvar, :version),
                        s(:lvar, :platform)), :map,
                      s(:block_pass,
                        s(:sym, :inspect))), :join,
                    s(:str, " "))),
                s(:lvasgn, :platform,
                  s(:if,
                    s(:lvar, :platform),
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :new,
                      s(:send,
                        s(:lvar, :platform), :sub,
                        s(:regexp,
                          s(:str, "^-"),
                          s(:regopt)),
                        s(:str, ""))),
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :RUBY))),
                s(:lvasgn, :specs,
                  s(:block,
                    s(:send,
                      s(:lvar, :specs), :select),
                    s(:args,
                      s(:arg, :s)),
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :platform), :==,
                      s(:lvar, :platform)))),
                s(:if,
                  s(:send,
                    s(:lvar, :specs), :empty?),
                  s(:begin,
                    s(:send,
                      s(:lvar, :res), :status=,
                      s(:int, 404)),
                    s(:send,
                      s(:lvar, :res), :body=,
                      s(:dstr,
                        s(:str, "No gems found matching "),
                        s(:begin,
                          s(:lvar, :selector))))),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :specs), :length), :>,
                      s(:int, 1)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :res), :status=,
                        s(:int, 500)),
                      s(:send,
                        s(:lvar, :res), :body=,
                        s(:dstr,
                          s(:str, "Multiple gems found matching "),
                          s(:begin,
                            s(:lvar, :selector))))),
                    s(:if,
                      s(:lvar, :marshal_format),
                      s(:begin,
                        s(:send,
                          s(:lvar, :res), :[]=,
                          s(:str, "content-type"),
                          s(:str, "application/x-deflate")),
                        s(:send,
                          s(:send,
                            s(:lvar, :res), :body), :<<,
                          s(:send,
                            s(:const, nil, :Gem), :deflate,
                            s(:send,
                              s(:const, nil, :Marshal), :dump,
                              s(:send,
                                s(:lvar, :specs), :first))))), nil))))),
            s(:send, nil, :raise,
              s(:const,
                s(:const,
                  s(:const, nil, :WEBrick), :HTTPStatus), :NotFound),
              s(:dstr,
                s(:str, "`"),
                s(:begin,
                  s(:send,
                    s(:lvar, :req), :path)),
                s(:str, "' not found.")))))),
      s(:def, :root,
        s(:args,
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:send, nil, :reset_gems),
          s(:send, nil, :add_date,
            s(:lvar, :res)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :path), :==,
              s(:str, "/")), nil,
            s(:send, nil, :raise,
              s(:const,
                s(:const,
                  s(:const, nil, :WEBrick), :HTTPStatus), :NotFound),
              s(:dstr,
                s(:str, "`"),
                s(:begin,
                  s(:send,
                    s(:lvar, :req), :path)),
                s(:str, "' not found.")))),
          s(:lvasgn, :specs,
            s(:array)),
          s(:lvasgn, :total_file_count,
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :each),
            s(:args,
              s(:arg, :spec)),
            s(:begin,
              s(:op_asgn,
                s(:lvasgn, :total_file_count), :+,
                s(:send,
                  s(:send,
                    s(:lvar, :spec), :files), :size)),
              s(:lvasgn, :deps,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :spec), :dependencies), :map),
                  s(:args,
                    s(:arg, :dep)),
                  s(:hash,
                    s(:pair,
                      s(:str, "name"),
                      s(:send,
                        s(:lvar, :dep), :name)),
                    s(:pair,
                      s(:str, "type"),
                      s(:send,
                        s(:lvar, :dep), :type)),
                    s(:pair,
                      s(:str, "version"),
                      s(:send,
                        s(:send,
                          s(:lvar, :dep), :requirement), :to_s))))),
              s(:lvasgn, :deps,
                s(:block,
                  s(:send,
                    s(:lvar, :deps), :sort_by),
                  s(:args,
                    s(:arg, :dep)),
                  s(:array,
                    s(:send,
                      s(:send,
                        s(:lvar, :dep), :[],
                        s(:str, "name")), :downcase),
                    s(:send,
                      s(:lvar, :dep), :[],
                      s(:str, "version"))))),
              s(:if,
                s(:send,
                  s(:lvar, :deps), :empty?), nil,
                s(:send,
                  s(:send,
                    s(:lvar, :deps), :last), :[]=,
                  s(:str, "is_last"),
                  s(:true))),
              s(:lvasgn, :executables,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :spec), :executables), :sort), :collect),
                  s(:args,
                    s(:arg, :exec)),
                  s(:hash,
                    s(:pair,
                      s(:str, "executable"),
                      s(:lvar, :exec))))),
              s(:if,
                s(:send,
                  s(:lvar, :executables), :empty?),
                s(:lvasgn, :executables,
                  s(:nil)), nil),
              s(:if,
                s(:lvar, :executables),
                s(:send,
                  s(:send,
                    s(:lvar, :executables), :last), :[]=,
                  s(:str, "is_last"),
                  s(:true)), nil),
              s(:send,
                s(:lvar, :specs), :<<,
                s(:hash,
                  s(:pair,
                    s(:str, "authors"),
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :spec), :authors), :sort), :join,
                      s(:str, ", "))),
                  s(:pair,
                    s(:str, "date"),
                    s(:send,
                      s(:send,
                        s(:lvar, :spec), :date), :to_s)),
                  s(:pair,
                    s(:str, "dependencies"),
                    s(:lvar, :deps)),
                  s(:pair,
                    s(:str, "doc_path"),
                    s(:send, nil, :doc_root,
                      s(:send,
                        s(:lvar, :spec), :full_name))),
                  s(:pair,
                    s(:str, "executables"),
                    s(:lvar, :executables)),
                  s(:pair,
                    s(:str, "only_one_executable"),
                    s(:begin,
                      s(:and,
                        s(:lvar, :executables),
                        s(:send,
                          s(:send,
                            s(:lvar, :executables), :size), :==,
                          s(:int, 1))))),
                  s(:pair,
                    s(:str, "full_name"),
                    s(:send,
                      s(:lvar, :spec), :full_name)),
                  s(:pair,
                    s(:str, "has_deps"),
                    s(:send,
                      s(:send,
                        s(:lvar, :deps), :empty?), :!)),
                  s(:pair,
                    s(:str, "homepage"),
                    s(:send,
                      s(:lvar, :spec), :homepage)),
                  s(:pair,
                    s(:str, "name"),
                    s(:send,
                      s(:lvar, :spec), :name)),
                  s(:pair,
                    s(:str, "rdoc_installed"),
                    s(:send,
                      s(:send,
                        s(:const,
                          s(:const, nil, :Gem), :RDoc), :new,
                        s(:lvar, :spec)), :rdoc_installed?)),
                  s(:pair,
                    s(:str, "ri_installed"),
                    s(:send,
                      s(:send,
                        s(:const,
                          s(:const, nil, :Gem), :RDoc), :new,
                        s(:lvar, :spec)), :ri_installed?)),
                  s(:pair,
                    s(:str, "summary"),
                    s(:send,
                      s(:lvar, :spec), :summary)),
                  s(:pair,
                    s(:str, "version"),
                    s(:send,
                      s(:send,
                        s(:lvar, :spec), :version), :to_s)))))),
          s(:send,
            s(:lvar, :specs), :<<,
            s(:hash,
              s(:pair,
                s(:str, "authors"),
                s(:str, "Chad Fowler, Rich Kilmer, Jim Weirich, Eric Hodel and others")),
              s(:pair,
                s(:str, "dependencies"),
                s(:array)),
              s(:pair,
                s(:str, "doc_path"),
                s(:send, nil, :doc_root,
                  s(:dstr,
                    s(:str, "rubygems-"),
                    s(:begin,
                      s(:const,
                        s(:const, nil, :Gem), :VERSION))))),
              s(:pair,
                s(:str, "executables"),
                s(:array,
                  s(:hash,
                    s(:pair,
                      s(:str, "executable"),
                      s(:str, "gem")),
                    s(:pair,
                      s(:str, "is_last"),
                      s(:true))))),
              s(:pair,
                s(:str, "only_one_executable"),
                s(:true)),
              s(:pair,
                s(:str, "full_name"),
                s(:dstr,
                  s(:str, "rubygems-"),
                  s(:begin,
                    s(:const,
                      s(:const, nil, :Gem), :VERSION)))),
              s(:pair,
                s(:str, "has_deps"),
                s(:false)),
              s(:pair,
                s(:str, "homepage"),
                s(:str, "http://docs.rubygems.org/")),
              s(:pair,
                s(:str, "name"),
                s(:str, "rubygems")),
              s(:pair,
                s(:str, "ri_installed"),
                s(:true)),
              s(:pair,
                s(:str, "summary"),
                s(:str, "RubyGems itself")),
              s(:pair,
                s(:str, "version"),
                s(:const,
                  s(:const, nil, :Gem), :VERSION)))),
          s(:lvasgn, :specs,
            s(:block,
              s(:send,
                s(:lvar, :specs), :sort_by),
              s(:args,
                s(:arg, :spec)),
              s(:array,
                s(:send,
                  s(:send,
                    s(:lvar, :spec), :[],
                    s(:str, "name")), :downcase),
                s(:send,
                  s(:lvar, :spec), :[],
                  s(:str, "version"))))),
          s(:send,
            s(:send,
              s(:lvar, :specs), :last), :[]=,
            s(:str, "is_last"),
            s(:true)),
          s(:lvasgn, :last_spec,
            s(:nil)),
          s(:block,
            s(:send,
              s(:lvar, :specs), :each),
            s(:args,
              s(:arg, :spec)),
            s(:begin,
              s(:lvasgn, :is_first,
                s(:or,
                  s(:send,
                    s(:lvar, :last_spec), :nil?),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :last_spec), :[],
                          s(:str, "name")), :downcase), :!=,
                      s(:send,
                        s(:send,
                          s(:lvar, :spec), :[],
                          s(:str, "name")), :downcase))))),
              s(:send,
                s(:lvar, :spec), :[]=,
                s(:str, "first_name_entry"),
                s(:lvar, :is_first)),
              s(:lvasgn, :last_spec,
                s(:lvar, :spec)))),
          s(:lvasgn, :template,
            s(:send,
              s(:const, nil, :ERB), :new,
              s(:const, nil, :DOC_TEMPLATE))),
          s(:send,
            s(:lvar, :res), :[]=,
            s(:str, "content-type"),
            s(:str, "text/html")),
          s(:lvasgn, :values,
            s(:hash,
              s(:pair,
                s(:str, "gem_count"),
                s(:send,
                  s(:send,
                    s(:lvar, :specs), :size), :to_s)),
              s(:pair,
                s(:str, "specs"),
                s(:lvar, :specs)),
              s(:pair,
                s(:str, "total_file_count"),
                s(:send,
                  s(:lvar, :total_file_count), :to_s)))),
          s(:lvasgn, :values,
            s(:lvar, :values)),
          s(:lvasgn, :result,
            s(:send,
              s(:lvar, :template), :result,
              s(:send, nil, :binding))),
          s(:send,
            s(:lvar, :res), :body=,
            s(:lvar, :result)))),
      s(:def, :rdoc,
        s(:args,
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:lvasgn, :query,
            s(:send,
              s(:send,
                s(:lvar, :req), :query), :[],
              s(:str, "q"))),
          s(:and,
            s(:send, nil, :show_rdoc_for_pattern,
              s(:dstr,
                s(:begin,
                  s(:lvar, :query)),
                s(:str, "*")),
              s(:lvar, :res)),
            s(:return)),
          s(:and,
            s(:send, nil, :show_rdoc_for_pattern,
              s(:dstr,
                s(:str, "*"),
                s(:begin,
                  s(:lvar, :query)),
                s(:str, "*")),
              s(:lvar, :res)),
            s(:return)),
          s(:lvasgn, :template,
            s(:send,
              s(:const, nil, :ERB), :new,
              s(:const, nil, :RDOC_NO_DOCUMENTATION))),
          s(:send,
            s(:lvar, :res), :[]=,
            s(:str, "content-type"),
            s(:str, "text/html")),
          s(:send,
            s(:lvar, :res), :body=,
            s(:send,
              s(:lvar, :template), :result,
              s(:send, nil, :binding))))),
      s(:def, :reset_gems,
        s(:args),
        s(:send,
          s(:const,
            s(:const, nil, :Gem), :Specification), :dirs=,
          s(:ivar, :@gem_dirs))),
      s(:def, :show_rdoc_for_pattern,
        s(:args,
          s(:arg, :pattern),
          s(:arg, :res)),
        s(:begin,
          s(:lvasgn, :found_gems,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Dir), :glob,
                  s(:dstr,
                    s(:str, "{"),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@gem_dirs), :join,
                        s(:str, ","))),
                    s(:str, "}/doc/"),
                    s(:begin,
                      s(:lvar, :pattern)))), :select),
              s(:args,
                s(:arg, :path)),
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :path),
                  s(:str, "rdoc/index.html"))))),
          s(:case,
            s(:send,
              s(:lvar, :found_gems), :length),
            s(:when,
              s(:int, 0),
              s(:return,
                s(:false))),
            s(:when,
              s(:int, 1),
              s(:begin,
                s(:lvasgn, :new_path,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:lvar, :found_gems), :[],
                      s(:int, 0)))),
                s(:send,
                  s(:lvar, :res), :status=,
                  s(:int, 302)),
                s(:send,
                  s(:lvar, :res), :[]=,
                  s(:str, "Location"),
                  s(:send, nil, :doc_root,
                    s(:lvar, :new_path))),
                s(:return,
                  s(:true)))),
            s(:begin,
              s(:lvasgn, :doc_items,
                s(:array)),
              s(:block,
                s(:send,
                  s(:lvar, :found_gems), :each),
                s(:args,
                  s(:arg, :file_name)),
                s(:begin,
                  s(:lvasgn, :base_name,
                    s(:send,
                      s(:const, nil, :File), :basename,
                      s(:lvar, :file_name))),
                  s(:send,
                    s(:lvar, :doc_items), :<<,
                    s(:hash,
                      s(:pair,
                        s(:sym, :name),
                        s(:lvar, :base_name)),
                      s(:pair,
                        s(:sym, :url),
                        s(:send, nil, :doc_root,
                          s(:lvar, :new_path))),
                      s(:pair,
                        s(:sym, :summary),
                        s(:str, "")))))),
              s(:lvasgn, :template,
                s(:send,
                  s(:const, nil, :ERB), :new,
                  s(:const, nil, :RDOC_SEARCH_TEMPLATE))),
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "content-type"),
                s(:str, "text/html")),
              s(:lvasgn, :result,
                s(:send,
                  s(:lvar, :template), :result,
                  s(:send, nil, :binding))),
              s(:send,
                s(:lvar, :res), :body=,
                s(:lvar, :result)),
              s(:return,
                s(:true)))))),
      s(:def, :run,
        s(:args),
        s(:begin,
          s(:send, nil, :listen),
          s(:if,
            s(:ivar, :@daemon),
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Daemon), :start), nil),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:dstr,
              s(:str, "/specs."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version))),
            s(:send, nil, :method,
              s(:sym, :specs))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:dstr,
              s(:str, "/specs."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version)),
              s(:str, ".gz")),
            s(:send, nil, :method,
              s(:sym, :specs))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:dstr,
              s(:str, "/latest_specs."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version))),
            s(:send, nil, :method,
              s(:sym, :latest_specs))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:dstr,
              s(:str, "/latest_specs."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version)),
              s(:str, ".gz")),
            s(:send, nil, :method,
              s(:sym, :latest_specs))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:dstr,
              s(:str, "/prerelease_specs."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version))),
            s(:send, nil, :method,
              s(:sym, :prerelease_specs))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:dstr,
              s(:str, "/prerelease_specs."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version)),
              s(:str, ".gz")),
            s(:send, nil, :method,
              s(:sym, :prerelease_specs))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:str, "/quick/"),
            s(:send, nil, :method,
              s(:sym, :quick))),
          s(:block,
            s(:send,
              s(:ivar, :@server), :mount_proc,
              s(:str, "/gem-server-rdoc-style.css")),
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "content-type"),
                s(:str, "text/css")),
              s(:send, nil, :add_date,
                s(:lvar, :res)),
              s(:send,
                s(:send,
                  s(:lvar, :res), :body), :<<,
                s(:const, nil, :RDOC_CSS)))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:str, "/"),
            s(:send, nil, :method,
              s(:sym, :root))),
          s(:send,
            s(:ivar, :@server), :mount_proc,
            s(:str, "/rdoc"),
            s(:send, nil, :method,
              s(:sym, :rdoc))),
          s(:lvasgn, :file_handlers,
            s(:hash,
              s(:pair,
                s(:str, "/gems"),
                s(:str, "/cache/")))),
          s(:if,
            s(:send, nil, :have_rdoc_4_plus?),
            s(:send,
              s(:ivar, :@server), :mount,
              s(:str, "/doc_root"),
              s(:const,
                s(:const, nil, :RDoc), :Servlet),
              s(:str, "/doc_root")),
            s(:send,
              s(:lvar, :file_handlers), :[]=,
              s(:str, "/doc_root"),
              s(:str, "/doc/"))),
          s(:block,
            s(:send,
              s(:ivar, :@gem_dirs), :each),
            s(:args,
              s(:arg, :gem_dir)),
            s(:block,
              s(:send,
                s(:lvar, :file_handlers), :each),
              s(:args,
                s(:arg, :mount_point),
                s(:arg, :mount_dir)),
              s(:send,
                s(:ivar, :@server), :mount,
                s(:lvar, :mount_point),
                s(:const,
                  s(:const,
                    s(:const, nil, :WEBrick), :HTTPServlet), :FileHandler),
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :gem_dir),
                  s(:lvar, :mount_dir)),
                s(:true)))),
          s(:block,
            s(:send, nil, :trap,
              s(:str, "INT")),
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@server), :shutdown),
              s(:send, nil, :exit!))),
          s(:block,
            s(:send, nil, :trap,
              s(:str, "TERM")),
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@server), :shutdown),
              s(:send, nil, :exit!))),
          s(:if,
            s(:ivar, :@launch),
            s(:send, nil, :launch), nil),
          s(:send,
            s(:ivar, :@server), :start))),
      s(:def, :specs,
        s(:args,
          s(:arg, :req),
          s(:arg, :res)),
        s(:begin,
          s(:send, nil, :reset_gems),
          s(:send, nil, :add_date,
            s(:lvar, :res)),
          s(:lvasgn, :specs,
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Specification), :sort_by,
                  s(:block_pass,
                    s(:sym, :sort_obj))), :map),
              s(:args,
                s(:arg, :spec)),
              s(:begin,
                s(:lvasgn, :platform,
                  s(:or,
                    s(:send,
                      s(:lvar, :spec), :original_platform),
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :RUBY))),
                s(:array,
                  s(:send,
                    s(:lvar, :spec), :name),
                  s(:send,
                    s(:lvar, :spec), :version),
                  s(:lvar, :platform))))),
          s(:lvasgn, :specs,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :specs))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :path), :=~,
              s(:regexp,
                s(:str, "\\.gz$"),
                s(:regopt))),
            s(:begin,
              s(:lvasgn, :specs,
                s(:send,
                  s(:const, nil, :Gem), :gzip,
                  s(:lvar, :specs))),
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "content-type"),
                s(:str, "application/x-gzip"))),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "content-type"),
              s(:str, "application/octet-stream"))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :req), :request_method), :==,
              s(:str, "HEAD")),
            s(:send,
              s(:lvar, :res), :[]=,
              s(:str, "content-length"),
              s(:send,
                s(:lvar, :specs), :length)),
            s(:send,
              s(:send,
                s(:lvar, :res), :body), :<<,
              s(:lvar, :specs))))),
      s(:def, :launch,
        s(:args),
        s(:begin,
          s(:lvasgn, :listeners,
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@server), :listeners), :map),
              s(:args,
                s(:arg, :l)),
              s(:send,
                s(:send,
                  s(:lvar, :l), :addr), :[],
                s(:int, 2)))),
          s(:lvasgn, :host,
            s(:if,
              s(:block,
                s(:send,
                  s(:lvar, :listeners), :any?),
                s(:args,
                  s(:arg, :l)),
                s(:send,
                  s(:lvar, :l), :==,
                  s(:str, "0.0.0.0"))),
              s(:str, "localhost"),
              s(:send,
                s(:lvar, :listeners), :first))),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Launching browser to http://"),
              s(:begin,
                s(:lvar, :host)),
              s(:str, ":"),
              s(:begin,
                s(:ivar, :@port)))),
          s(:send, nil, :system,
            s(:dstr,
              s(:begin,
                s(:ivar, :@launch)),
              s(:str, " http://"),
              s(:begin,
                s(:lvar, :host)),
              s(:str, ":"),
              s(:begin,
                s(:ivar, :@port)))))))))
