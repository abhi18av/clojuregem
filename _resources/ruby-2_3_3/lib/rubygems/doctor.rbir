s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Doctor), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:casgn, nil, :REPOSITORY_EXTENSION_MAP,
        s(:array,
          s(:array,
            s(:str, "specifications"),
            s(:str, ".gemspec")),
          s(:array,
            s(:str, "build_info"),
            s(:str, ".info")),
          s(:array,
            s(:str, "cache"),
            s(:str, ".gem")),
          s(:array,
            s(:str, "doc"),
            s(:str, "")),
          s(:array,
            s(:str, "extensions"),
            s(:str, "")),
          s(:array,
            s(:str, "gems"),
            s(:str, "")))),
      s(:lvasgn, :missing,
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :REPOSITORY_SUBDIRECTORIES), :sort), :-,
          s(:send,
            s(:block,
              s(:send,
                s(:const, nil, :REPOSITORY_EXTENSION_MAP), :map),
              s(:args,
                s(:mlhs,
                  s(:arg, :k),
                  s(:arg, :_))),
              s(:lvar, :k)), :sort))),
      s(:if,
        s(:send,
          s(:lvar, :missing), :empty?), nil,
        s(:send, nil, :raise,
          s(:dstr,
            s(:str, "Update REPOSITORY_EXTENSION_MAP, missing: "),
            s(:begin,
              s(:send,
                s(:lvar, :missing), :join,
                s(:str, ", ")))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :gem_repository),
          s(:optarg, :dry_run,
            s(:false))),
        s(:begin,
          s(:ivasgn, :@gem_repository,
            s(:lvar, :gem_repository)),
          s(:ivasgn, :@dry_run,
            s(:lvar, :dry_run)),
          s(:ivasgn, :@installed_specs,
            s(:nil)))),
      s(:def, :installed_specs,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@installed_specs),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :map),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :full_name)))),
      s(:def, :gem_repository?,
        s(:args),
        s(:send,
          s(:send,
            s(:send, nil, :installed_specs), :empty?), :!)),
      s(:def, :doctor,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:ivasgn, :@orig_home,
              s(:send,
                s(:const, nil, :Gem), :dir)),
            s(:ivasgn, :@orig_path,
              s(:send,
                s(:const, nil, :Gem), :path)),
            s(:send, nil, :say,
              s(:dstr,
                s(:str, "Checking "),
                s(:begin,
                  s(:ivar, :@gem_repository)))),
            s(:send,
              s(:const, nil, :Gem), :use_paths,
              s(:send,
                s(:ivar, :@gem_repository), :to_s)),
            s(:if,
              s(:send, nil, :gem_repository?), nil,
              s(:begin,
                s(:send, nil, :say,
                  s(:send,
                    s(:str, "This directory does not appear to be a RubyGems repository, "), :+,
                    s(:str, "skipping"))),
                s(:send, nil, :say),
                s(:return))),
            s(:send, nil, :doctor_children),
            s(:send, nil, :say)),
          s(:send,
            s(:const, nil, :Gem), :use_paths,
            s(:ivar, :@orig_home),
            s(:splat,
              s(:ivar, :@orig_path))))),
      s(:def, :doctor_children,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :REPOSITORY_EXTENSION_MAP), :each),
          s(:args,
            s(:arg, :sub_directory),
            s(:arg, :extension)),
          s(:send, nil, :doctor_child,
            s(:lvar, :sub_directory),
            s(:lvar, :extension)))),
      s(:def, :doctor_child,
        s(:args,
          s(:arg, :sub_directory),
          s(:arg, :extension)),
        s(:rescue,
          s(:begin,
            s(:lvasgn, :directory,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@gem_repository),
                s(:lvar, :sub_directory))),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:const, nil, :Dir), :entries,
                    s(:lvar, :directory)), :sort), :each),
              s(:args,
                s(:arg, :ent)),
              s(:begin,
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :ent), :==,
                      s(:str, ".")),
                    s(:send,
                      s(:lvar, :ent), :==,
                      s(:str, ".."))),
                  s(:next), nil),
                s(:lvasgn, :child,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:lvar, :directory),
                    s(:lvar, :ent))),
                s(:if,
                  s(:send,
                    s(:const, nil, :File), :exist?,
                    s(:lvar, :child)), nil,
                  s(:next)),
                s(:lvasgn, :basename,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:lvar, :child),
                    s(:lvar, :extension))),
                s(:if,
                  s(:send,
                    s(:send, nil, :installed_specs), :include?,
                    s(:lvar, :basename)),
                  s(:next), nil),
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "^rubygems-\\d"),
                      s(:regopt)),
                    s(:lvar, :basename)),
                  s(:next), nil),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:str, "specifications"), :==,
                      s(:lvar, :sub_directory)),
                    s(:send,
                      s(:str, "default"), :==,
                      s(:lvar, :basename))),
                  s(:next), nil),
                s(:lvasgn, :type,
                  s(:if,
                    s(:send,
                      s(:const, nil, :File), :directory?,
                      s(:lvar, :child)),
                    s(:str, "directory"),
                    s(:str, "file"))),
                s(:lvasgn, :action,
                  s(:if,
                    s(:ivar, :@dry_run),
                    s(:str, "Extra"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :FileUtils), :rm_r,
                        s(:lvar, :child)),
                      s(:str, "Removed")))),
                s(:send, nil, :say,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :action)),
                    s(:str, " "),
                    s(:begin,
                      s(:lvar, :type)),
                    s(:str, " "),
                    s(:begin,
                      s(:lvar, :sub_directory)),
                    s(:str, "/"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :File), :basename,
                        s(:lvar, :child)))))))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)), nil, nil), nil)))))
