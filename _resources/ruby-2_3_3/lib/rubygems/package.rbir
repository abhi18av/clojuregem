s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/security")),
  s(:send, nil, :require,
    s(:str, "rubygems/specification")),
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:send, nil, :require,
    s(:str, "zlib")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Package), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:class,
        s(:const, nil, :Error),
        s(:const,
          s(:const, nil, :Gem), :Exception), nil),
      s(:class,
        s(:const, nil, :FormatError),
        s(:const, nil, :Error),
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :path)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :message),
              s(:optarg, :source,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:lvar, :source),
                s(:begin,
                  s(:ivasgn, :@path,
                    s(:send,
                      s(:lvar, :source), :path)),
                  s(:if,
                    s(:send, nil, :path),
                    s(:lvasgn, :message,
                      s(:send,
                        s(:lvar, :message), :+,
                        s(:dstr,
                          s(:str, " in "),
                          s(:begin,
                            s(:send, nil, :path))))), nil)), nil),
              s(:super,
                s(:lvar, :message)))))),
      s(:class,
        s(:const, nil, :PathError),
        s(:const, nil, :Error),
        s(:def, :initialize,
          s(:args,
            s(:arg, :destination),
            s(:arg, :destination_dir)),
          s(:super,
            s(:send,
              s(:str, "installing into parent path %s of %s is not allowed"), :%,
              s(:array,
                s(:lvar, :destination),
                s(:lvar, :destination_dir)))))),
      s(:class,
        s(:const, nil, :NonSeekableIO),
        s(:const, nil, :Error), nil),
      s(:class,
        s(:const, nil, :TooLongFileName),
        s(:const, nil, :Error), nil),
      s(:class,
        s(:const, nil, :TarInvalidError),
        s(:const, nil, :Error), nil),
      s(:send, nil, :attr_accessor,
        s(:sym, :build_time)),
      s(:send, nil, :attr_reader,
        s(:sym, :checksums)),
      s(:send, nil, :attr_reader,
        s(:sym, :files)),
      s(:send, nil, :attr_accessor,
        s(:sym, :security_policy)),
      s(:send, nil, :attr_writer,
        s(:sym, :spec)),
      s(:defs,
        s(:self), :build,
        s(:args,
          s(:arg, :spec),
          s(:optarg, :skip_validation,
            s(:false))),
        s(:begin,
          s(:lvasgn, :gem_file,
            s(:send,
              s(:lvar, :spec), :file_name)),
          s(:lvasgn, :package,
            s(:send, nil, :new,
              s(:lvar, :gem_file))),
          s(:send,
            s(:lvar, :package), :spec=,
            s(:lvar, :spec)),
          s(:send,
            s(:lvar, :package), :build,
            s(:lvar, :skip_validation)),
          s(:lvar, :gem_file))),
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :gem),
          s(:optarg, :security_policy,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :gem,
            s(:if,
              s(:send,
                s(:lvar, :gem), :is_a?,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :Source)),
              s(:lvar, :gem),
              s(:if,
                s(:send,
                  s(:lvar, :gem), :respond_to?,
                  s(:sym, :read)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :IOSource), :new,
                  s(:lvar, :gem)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :FileSource), :new,
                  s(:lvar, :gem))))),
          s(:if,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Package), :==,
              s(:self)), nil,
            s(:return,
              s(:zsuper))),
          s(:if,
            s(:send,
              s(:lvar, :gem), :present?), nil,
            s(:return,
              s(:zsuper))),
          s(:if,
            s(:send,
              s(:lvar, :gem), :start), nil,
            s(:return,
              s(:zsuper))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :gem), :start), :include?,
              s(:str, "MD5SUM =")), nil,
            s(:return,
              s(:zsuper))),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Package), :Old), :new,
            s(:lvar, :gem)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :gem),
          s(:arg, :security_policy)),
        s(:begin,
          s(:ivasgn, :@gem,
            s(:lvar, :gem)),
          s(:ivasgn, :@build_time,
            s(:send,
              s(:const, nil, :Time), :now)),
          s(:ivasgn, :@checksums,
            s(:hash)),
          s(:ivasgn, :@contents,
            s(:nil)),
          s(:ivasgn, :@digests,
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args,
                s(:arg, :h),
                s(:arg, :algorithm)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :algorithm),
                s(:hash)))),
          s(:ivasgn, :@files,
            s(:nil)),
          s(:ivasgn, :@security_policy,
            s(:lvar, :security_policy)),
          s(:ivasgn, :@signatures,
            s(:hash)),
          s(:ivasgn, :@signer,
            s(:nil)),
          s(:ivasgn, :@spec,
            s(:nil)))),
      s(:def, :copy_to,
        s(:args,
          s(:arg, :path)),
        s(:if,
          s(:send,
            s(:const, nil, :File), :exist?,
            s(:lvar, :path)), nil,
          s(:send,
            s(:const, nil, :FileUtils), :cp,
            s(:send,
              s(:ivar, :@gem), :path),
            s(:lvar, :path)))),
      s(:def, :add_checksums,
        s(:args,
          s(:arg, :tar)),
        s(:begin,
          s(:send,
            s(:const, nil, :Gem), :load_yaml),
          s(:lvasgn, :checksums_by_algorithm,
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args,
                s(:arg, :h),
                s(:arg, :algorithm)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :algorithm),
                s(:hash)))),
          s(:block,
            s(:send,
              s(:ivar, :@checksums), :each),
            s(:args,
              s(:arg, :name),
              s(:arg, :digests)),
            s(:block,
              s(:send,
                s(:lvar, :digests), :each),
              s(:args,
                s(:arg, :algorithm),
                s(:arg, :digest)),
              s(:send,
                s(:send,
                  s(:lvar, :checksums_by_algorithm), :[],
                  s(:lvar, :algorithm)), :[]=,
                s(:lvar, :name),
                s(:send,
                  s(:lvar, :digest), :hexdigest)))),
          s(:block,
            s(:send,
              s(:lvar, :tar), :add_file_signed,
              s(:str, "checksums.yaml.gz"),
              s(:int, 292),
              s(:ivar, :@signer)),
            s(:args,
              s(:arg, :io)),
            s(:block,
              s(:send, nil, :gzip_to,
                s(:lvar, :io)),
              s(:args,
                s(:arg, :gz_io)),
              s(:send,
                s(:const, nil, :YAML), :dump,
                s(:lvar, :checksums_by_algorithm),
                s(:lvar, :gz_io)))))),
      s(:def, :add_contents,
        s(:args,
          s(:arg, :tar)),
        s(:begin,
          s(:lvasgn, :digests,
            s(:block,
              s(:send,
                s(:lvar, :tar), :add_file_signed,
                s(:str, "data.tar.gz"),
                s(:int, 292),
                s(:ivar, :@signer)),
              s(:args,
                s(:arg, :io)),
              s(:block,
                s(:send, nil, :gzip_to,
                  s(:lvar, :io)),
                s(:args,
                  s(:arg, :gz_io)),
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Package), :TarWriter), :new,
                    s(:lvar, :gz_io)),
                  s(:args,
                    s(:arg, :data_tar)),
                  s(:send, nil, :add_files,
                    s(:lvar, :data_tar)))))),
          s(:send,
            s(:ivar, :@checksums), :[]=,
            s(:str, "data.tar.gz"),
            s(:lvar, :digests)))),
      s(:def, :add_files,
        s(:args,
          s(:arg, :tar)),
        s(:block,
          s(:send,
            s(:send,
              s(:ivar, :@spec), :files), :each),
          s(:args,
            s(:arg, :file)),
          s(:begin,
            s(:lvasgn, :stat,
              s(:send,
                s(:const, nil, :File), :lstat,
                s(:lvar, :file))),
            s(:if,
              s(:send,
                s(:lvar, :stat), :symlink?),
              s(:send,
                s(:lvar, :tar), :add_symlink,
                s(:lvar, :file),
                s(:send,
                  s(:const, nil, :File), :readlink,
                  s(:lvar, :file)),
                s(:send,
                  s(:lvar, :stat), :mode)), nil),
            s(:if,
              s(:send,
                s(:lvar, :stat), :file?), nil,
              s(:next)),
            s(:block,
              s(:send,
                s(:lvar, :tar), :add_file_simple,
                s(:lvar, :file),
                s(:send,
                  s(:lvar, :stat), :mode),
                s(:send,
                  s(:lvar, :stat), :size)),
              s(:args,
                s(:arg, :dst_io)),
              s(:block,
                s(:send, nil, :open,
                  s(:lvar, :file),
                  s(:str, "rb")),
                s(:args,
                  s(:arg, :src_io)),
                s(:until,
                  s(:send,
                    s(:lvar, :src_io), :eof?),
                  s(:send,
                    s(:lvar, :dst_io), :write,
                    s(:send,
                      s(:lvar, :src_io), :read,
                      s(:int, 16384))))))))),
      s(:def, :add_metadata,
        s(:args,
          s(:arg, :tar)),
        s(:begin,
          s(:lvasgn, :digests,
            s(:block,
              s(:send,
                s(:lvar, :tar), :add_file_signed,
                s(:str, "metadata.gz"),
                s(:int, 292),
                s(:ivar, :@signer)),
              s(:args,
                s(:arg, :io)),
              s(:block,
                s(:send, nil, :gzip_to,
                  s(:lvar, :io)),
                s(:args,
                  s(:arg, :gz_io)),
                s(:send,
                  s(:lvar, :gz_io), :write,
                  s(:send,
                    s(:ivar, :@spec), :to_yaml))))),
          s(:send,
            s(:ivar, :@checksums), :[]=,
            s(:str, "metadata.gz"),
            s(:lvar, :digests)))),
      s(:def, :build,
        s(:args,
          s(:optarg, :skip_validation,
            s(:false))),
        s(:ensure,
          s(:begin,
            s(:send,
              s(:const, nil, :Gem), :load_yaml),
            s(:send, nil, :require,
              s(:str, "rubygems/security")),
            s(:send,
              s(:ivar, :@spec), :mark_version),
            s(:if,
              s(:lvar, :skip_validation), nil,
              s(:send,
                s(:ivar, :@spec), :validate)),
            s(:send, nil, :setup_signer),
            s(:block,
              s(:send,
                s(:ivar, :@gem), :with_write_io),
              s(:args,
                s(:arg, :gem_io)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :TarWriter), :new,
                  s(:lvar, :gem_io)),
                s(:args,
                  s(:arg, :gem)),
                s(:begin,
                  s(:send, nil, :add_metadata,
                    s(:lvar, :gem)),
                  s(:send, nil, :add_contents,
                    s(:lvar, :gem)),
                  s(:send, nil, :add_checksums,
                    s(:lvar, :gem))))),
            s(:send, nil, :say,
              s(:dstr,
                s(:str, "  Successfully built RubyGem\n"),
                s(:str, "  Name: "),
                s(:begin,
                  s(:send,
                    s(:ivar, :@spec), :name)),
                s(:str, "\n"),
                s(:str, "  Version: "),
                s(:begin,
                  s(:send,
                    s(:ivar, :@spec), :version)),
                s(:str, "\n"),
                s(:str, "  File: "),
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@spec), :cache_file))),
                s(:str, "\n")))),
          s(:ivasgn, :@signer,
            s(:nil)))),
      s(:def, :contents,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@contents),
            s(:return,
              s(:ivar, :@contents)), nil),
          s(:if,
            s(:ivar, :@spec), nil,
            s(:send, nil, :verify)),
          s(:ivasgn, :@contents,
            s(:array)),
          s(:block,
            s(:send,
              s(:ivar, :@gem), :with_read_io),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:lvasgn, :gem_tar,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :TarReader), :new,
                  s(:lvar, :io))),
              s(:block,
                s(:send,
                  s(:lvar, :gem_tar), :each),
                s(:args,
                  s(:arg, :entry)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :entry), :full_name), :==,
                      s(:str, "data.tar.gz")), nil,
                    s(:next)),
                  s(:block,
                    s(:send, nil, :open_tar_gz,
                      s(:lvar, :entry)),
                    s(:args,
                      s(:arg, :pkg_tar)),
                    s(:block,
                      s(:send,
                        s(:lvar, :pkg_tar), :each),
                      s(:args,
                        s(:arg, :contents_entry)),
                      s(:send,
                        s(:ivar, :@contents), :<<,
                        s(:send,
                          s(:lvar, :contents_entry), :full_name)))),
                  s(:return,
                    s(:ivar, :@contents)))))))),
      s(:def, :digest,
        s(:args,
          s(:arg, :entry)),
        s(:begin,
          s(:lvasgn, :algorithms,
            s(:if,
              s(:ivar, :@checksums),
              s(:send,
                s(:ivar, :@checksums), :keys),
              s(:send,
                s(:array,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Security), :DIGEST_NAME)), :compact))),
          s(:block,
            s(:send,
              s(:lvar, :algorithms), :each),
            s(:args,
              s(:arg, :algorithm)),
            s(:begin,
              s(:lvasgn, :digester,
                s(:if,
                  s(:defined?,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :new,
                    s(:lvar, :algorithm)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :Digest), :const_get,
                      s(:lvar, :algorithm)), :new))),
              s(:until,
                s(:send,
                  s(:lvar, :entry), :eof?),
                s(:send,
                  s(:lvar, :digester), :<<,
                  s(:send,
                    s(:lvar, :entry), :read,
                    s(:int, 16384)))),
              s(:send,
                s(:lvar, :entry), :rewind),
              s(:send,
                s(:send,
                  s(:ivar, :@digests), :[],
                  s(:lvar, :algorithm)), :[]=,
                s(:send,
                  s(:lvar, :entry), :full_name),
                s(:lvar, :digester)))),
          s(:ivar, :@digests))),
      s(:def, :extract_files,
        s(:args,
          s(:arg, :destination_dir),
          s(:optarg, :pattern,
            s(:str, "*"))),
        s(:begin,
          s(:if,
            s(:ivar, :@spec), nil,
            s(:send, nil, :verify)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:lvar, :destination_dir)),
          s(:block,
            s(:send,
              s(:ivar, :@gem), :with_read_io),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:lvasgn, :reader,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :TarReader), :new,
                  s(:lvar, :io))),
              s(:block,
                s(:send,
                  s(:lvar, :reader), :each),
                s(:args,
                  s(:arg, :entry)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :entry), :full_name), :==,
                      s(:str, "data.tar.gz")), nil,
                    s(:next)),
                  s(:send, nil, :extract_tar_gz,
                    s(:lvar, :entry),
                    s(:lvar, :destination_dir),
                    s(:lvar, :pattern)),
                  s(:return))))))),
      s(:def, :extract_tar_gz,
        s(:args,
          s(:arg, :io),
          s(:arg, :destination_dir),
          s(:optarg, :pattern,
            s(:str, "*"))),
        s(:block,
          s(:send, nil, :open_tar_gz,
            s(:lvar, :io)),
          s(:args,
            s(:arg, :tar)),
          s(:block,
            s(:send,
              s(:lvar, :tar), :each),
            s(:args,
              s(:arg, :entry)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :File), :fnmatch,
                  s(:lvar, :pattern),
                  s(:send,
                    s(:lvar, :entry), :full_name),
                  s(:const,
                    s(:const, nil, :File), :FNM_DOTMATCH)), nil,
                s(:next)),
              s(:lvasgn, :destination,
                s(:send, nil, :install_location,
                  s(:send,
                    s(:lvar, :entry), :full_name),
                  s(:lvar, :destination_dir))),
              s(:send,
                s(:const, nil, :FileUtils), :rm_rf,
                s(:lvar, :destination)),
              s(:lvasgn, :mkdir_options,
                s(:hash)),
              s(:if,
                s(:send,
                  s(:lvar, :entry), :directory?),
                s(:send,
                  s(:lvar, :mkdir_options), :[]=,
                  s(:sym, :mode),
                  s(:send,
                    s(:send,
                      s(:lvar, :entry), :header), :mode)), nil),
              s(:lvasgn, :mkdir,
                s(:if,
                  s(:send,
                    s(:lvar, :entry), :directory?),
                  s(:lvar, :destination),
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:lvar, :destination)))),
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:lvar, :mkdir),
                s(:lvar, :mkdir_options)),
              s(:if,
                s(:send,
                  s(:lvar, :entry), :file?),
                s(:block,
                  s(:send, nil, :open,
                    s(:lvar, :destination),
                    s(:str, "wb")),
                  s(:args,
                    s(:arg, :out)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :out), :write,
                      s(:send,
                        s(:lvar, :entry), :read)),
                    s(:send,
                      s(:const, nil, :FileUtils), :chmod,
                      s(:send,
                        s(:send,
                          s(:lvar, :entry), :header), :mode),
                      s(:lvar, :destination)))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :entry), :symlink?),
                s(:send,
                  s(:const, nil, :File), :symlink,
                  s(:send,
                    s(:send,
                      s(:lvar, :entry), :header), :linkname),
                  s(:lvar, :destination)), nil),
              s(:send, nil, :verbose,
                s(:lvar, :destination)))))),
      s(:def, :gzip_to,
        s(:args,
          s(:arg, :io)),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :gz_io,
              s(:send,
                s(:const,
                  s(:const, nil, :Zlib), :GzipWriter), :new,
                s(:lvar, :io),
                s(:const,
                  s(:const, nil, :Zlib), :BEST_COMPRESSION))),
            s(:send,
              s(:lvar, :gz_io), :mtime=,
              s(:ivar, :@build_time)),
            s(:yield,
              s(:lvar, :gz_io))),
          s(:send,
            s(:lvar, :gz_io), :close))),
      s(:def, :install_location,
        s(:args,
          s(:arg, :filename),
          s(:arg, :destination_dir)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :filename), :start_with?,
              s(:str, "/")),
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :PathError), :new,
                s(:lvar, :filename),
                s(:lvar, :destination_dir))), nil),
          s(:if,
            s(:send,
              s(:const, nil, :File), :respond_to?,
              s(:sym, :realpath)),
            s(:lvasgn, :destination_dir,
              s(:send,
                s(:const, nil, :File), :realpath,
                s(:lvar, :destination_dir))), nil),
          s(:lvasgn, :destination_dir,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :destination_dir))),
          s(:lvasgn, :destination,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :destination_dir),
              s(:lvar, :filename))),
          s(:lvasgn, :destination,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :destination))),
          s(:if,
            s(:send,
              s(:lvar, :destination), :start_with?,
              s(:lvar, :destination_dir)), nil,
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :PathError), :new,
                s(:lvar, :destination),
                s(:lvar, :destination_dir)))),
          s(:send,
            s(:lvar, :destination), :untaint),
          s(:lvar, :destination))),
      s(:def, :load_spec,
        s(:args,
          s(:arg, :entry)),
        s(:case,
          s(:send,
            s(:lvar, :entry), :full_name),
          s(:when,
            s(:str, "metadata"),
            s(:ivasgn, :@spec,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Specification), :from_yaml,
                s(:send,
                  s(:lvar, :entry), :read)))),
          s(:when,
            s(:str, "metadata.gz"),
            s(:begin,
              s(:lvasgn, :args,
                s(:array,
                  s(:lvar, :entry))),
              s(:if,
                s(:and,
                  s(:send,
                    s(:const, nil, :Object), :const_defined?,
                    s(:sym, :Encoding)),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const,
                          s(:const, nil, :Zlib), :GzipReader), :method,
                        s(:sym, :wrap)), :arity), :!=,
                    s(:int, 1))),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:hash,
                    s(:pair,
                      s(:sym, :external_encoding),
                      s(:const,
                        s(:const, nil, :Encoding), :UTF_8)))), nil),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :Zlib), :GzipReader), :wrap,
                  s(:splat,
                    s(:lvar, :args))),
                s(:args,
                  s(:arg, :gzio)),
                s(:ivasgn, :@spec,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Specification), :from_yaml,
                    s(:send,
                      s(:lvar, :gzio), :read)))))), nil)),
      s(:def, :open_tar_gz,
        s(:args,
          s(:arg, :io)),
        s(:block,
          s(:send,
            s(:const,
              s(:const, nil, :Zlib), :GzipReader), :wrap,
            s(:lvar, :io)),
          s(:args,
            s(:arg, :gzio)),
          s(:begin,
            s(:lvasgn, :tar,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :TarReader), :new,
                s(:lvar, :gzio))),
            s(:yield,
              s(:lvar, :tar))))),
      s(:def, :read_checksums,
        s(:args,
          s(:arg, :gem)),
        s(:begin,
          s(:send,
            s(:const, nil, :Gem), :load_yaml),
          s(:ivasgn, :@checksums,
            s(:block,
              s(:send,
                s(:lvar, :gem), :seek,
                s(:str, "checksums.yaml.gz")),
              s(:args,
                s(:arg, :entry)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :Zlib), :GzipReader), :wrap,
                  s(:lvar, :entry)),
                s(:args,
                  s(:arg, :gz_io)),
                s(:send,
                  s(:const, nil, :YAML), :load,
                  s(:send,
                    s(:lvar, :gz_io), :read))))))),
      s(:def, :setup_signer,
        s(:args),
        s(:begin,
          s(:lvasgn, :passphrase,
            s(:send,
              s(:const, nil, :ENV), :[],
              s(:str, "GEM_PRIVATE_KEY_PASSPHRASE"))),
          s(:if,
            s(:send,
              s(:ivar, :@spec), :signing_key),
            s(:begin,
              s(:ivasgn, :@signer,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Security), :Signer), :new,
                  s(:send,
                    s(:ivar, :@spec), :signing_key),
                  s(:send,
                    s(:ivar, :@spec), :cert_chain),
                  s(:lvar, :passphrase))),
              s(:send,
                s(:ivar, :@spec), :signing_key=,
                s(:nil)),
              s(:send,
                s(:ivar, :@spec), :cert_chain=,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@signer), :cert_chain), :map),
                  s(:args,
                    s(:arg, :cert)),
                  s(:send,
                    s(:lvar, :cert), :to_s)))),
            s(:begin,
              s(:ivasgn, :@signer,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Security), :Signer), :new,
                  s(:nil),
                  s(:nil),
                  s(:lvar, :passphrase))),
              s(:if,
                s(:send,
                  s(:ivar, :@signer), :cert_chain),
                s(:send,
                  s(:ivar, :@spec), :cert_chain=,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:ivar, :@signer), :cert_chain), :map),
                    s(:args,
                      s(:arg, :cert)),
                    s(:send,
                      s(:lvar, :cert), :to_pem))), nil))))),
      s(:def, :spec,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@spec), nil,
            s(:send, nil, :verify)),
          s(:ivar, :@spec))),
      s(:def, :verify,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:ivasgn, :@files,
              s(:array)),
            s(:ivasgn, :@spec,
              s(:nil)),
            s(:block,
              s(:send,
                s(:ivar, :@gem), :with_read_io),
              s(:args,
                s(:arg, :io)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :TarReader), :new,
                  s(:lvar, :io)),
                s(:args,
                  s(:arg, :reader)),
                s(:begin,
                  s(:send, nil, :read_checksums,
                    s(:lvar, :reader)),
                  s(:send, nil, :verify_files,
                    s(:lvar, :reader))))),
            s(:send, nil, :verify_checksums,
              s(:ivar, :@digests),
              s(:ivar, :@checksums)),
            s(:if,
              s(:ivar, :@security_policy),
              s(:send,
                s(:ivar, :@security_policy), :verify_signatures,
                s(:ivar, :@spec),
                s(:ivar, :@digests),
                s(:ivar, :@signatures)), nil),
            s(:true)),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Security), :Exception)), nil,
            s(:begin,
              s(:ivasgn, :@spec,
                s(:nil)),
              s(:ivasgn, :@files,
                s(:array)),
              s(:send, nil, :raise))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)),
            s(:lvasgn, :e),
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :FormatError), :new,
                s(:send,
                  s(:lvar, :e), :message)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarInvalidError)),
            s(:lvasgn, :e),
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :FormatError), :new,
                s(:send,
                  s(:lvar, :e), :message),
                s(:ivar, :@gem)))), nil)),
      s(:def, :verify_checksums,
        s(:args,
          s(:arg, :digests),
          s(:arg, :checksums)),
        s(:begin,
          s(:if,
            s(:lvar, :checksums), nil,
            s(:return)),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :checksums), :sort), :each),
            s(:args,
              s(:arg, :algorithm),
              s(:arg, :gem_digests)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :gem_digests), :sort), :each),
              s(:args,
                s(:arg, :file_name),
                s(:arg, :gem_hexdigest)),
              s(:begin,
                s(:lvasgn, :computed_digest,
                  s(:send,
                    s(:send,
                      s(:lvar, :digests), :[],
                      s(:lvar, :algorithm)), :[],
                    s(:lvar, :file_name))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :computed_digest), :hexdigest), :==,
                    s(:lvar, :gem_hexdigest)), nil,
                  s(:send, nil, :raise,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :Package), :FormatError), :new,
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :algorithm)),
                        s(:str, " checksum mismatch for "),
                        s(:begin,
                          s(:lvar, :file_name))),
                      s(:ivar, :@gem))))))))),
      s(:def, :verify_entry,
        s(:args,
          s(:arg, :entry)),
        s(:rescue,
          s(:begin,
            s(:lvasgn, :file_name,
              s(:send,
                s(:lvar, :entry), :full_name)),
            s(:send,
              s(:ivar, :@files), :<<,
              s(:lvar, :file_name)),
            s(:case,
              s(:lvar, :file_name),
              s(:when,
                s(:regexp,
                  s(:str, "\\.sig$"),
                  s(:regopt)),
                s(:begin,
                  s(:if,
                    s(:ivar, :@security_policy),
                    s(:send,
                      s(:ivar, :@signatures), :[]=,
                      s(:back_ref, :$`),
                      s(:send,
                        s(:lvar, :entry), :read)), nil),
                  s(:return))),
              s(:send, nil, :digest,
                s(:lvar, :entry))),
            s(:case,
              s(:lvar, :file_name),
              s(:when,
                s(:regexp,
                  s(:str, "^metadata(.gz)?$"),
                  s(:regopt)),
                s(:send, nil, :load_spec,
                  s(:lvar, :entry))),
              s(:when,
                s(:str, "data.tar.gz"),
                s(:send, nil, :verify_gz,
                  s(:lvar, :entry))), nil)),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :message,
                s(:send,
                  s(:str, "package is corrupt, exception while verifying: "), :+,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send, nil, :raise,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :FormatError), :new,
                  s(:lvar, :message),
                  s(:ivar, :@gem))))), nil)),
      s(:def, :verify_files,
        s(:args,
          s(:arg, :gem)),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :gem), :each),
            s(:args,
              s(:arg, :entry)),
            s(:send, nil, :verify_entry,
              s(:lvar, :entry))),
          s(:if,
            s(:ivar, :@spec), nil,
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :FormatError), :new,
                s(:str, "package metadata is missing"),
                s(:ivar, :@gem)))),
          s(:if,
            s(:send,
              s(:ivar, :@files), :include?,
              s(:str, "data.tar.gz")), nil,
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :FormatError), :new,
                s(:str, "package content (data.tar.gz) is missing"),
                s(:ivar, :@gem)))))),
      s(:def, :verify_gz,
        s(:args,
          s(:arg, :entry)),
        s(:rescue,
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Zlib), :GzipReader), :wrap,
              s(:lvar, :entry)),
            s(:args,
              s(:arg, :gzio)),
            s(:until,
              s(:send,
                s(:lvar, :gzio), :eof?),
              s(:send,
                s(:lvar, :gzio), :read,
                s(:int, 16384)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const,
                  s(:const, nil, :Zlib), :GzipFile), :Error)),
            s(:lvasgn, :e),
            s(:send, nil, :raise,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :FormatError), :new,
                s(:send,
                  s(:lvar, :e), :message),
                s(:send,
                  s(:lvar, :entry), :full_name)))), nil)))),
  s(:send, nil, :require,
    s(:str, "rubygems/package/digest_io")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/source")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/file_source")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/io_source")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/old")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_header")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_reader")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_reader/entry")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_writer")))
