s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:send, nil, :require,
    s(:str, "rbconfig")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :ConfigFile), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:casgn, nil, :DEFAULT_BACKTRACE,
        s(:false)),
      s(:casgn, nil, :DEFAULT_BULK_THRESHOLD,
        s(:int, 1000)),
      s(:casgn, nil, :DEFAULT_VERBOSITY,
        s(:true)),
      s(:casgn, nil, :DEFAULT_UPDATE_SOURCES,
        s(:true)),
      s(:casgn, nil, :OPERATING_SYSTEM_DEFAULTS,
        s(:hash)),
      s(:casgn, nil, :PLATFORM_DEFAULTS,
        s(:hash)),
      s(:casgn, nil, :SYSTEM_CONFIG_PATH,
        s(:kwbegin,
          s(:rescue,
            s(:begin,
              s(:send, nil, :require,
                s(:str, "etc")),
              s(:send,
                s(:const, nil, :Etc), :sysconfdir)),
            s(:resbody,
              s(:array,
                s(:const, nil, :LoadError),
                s(:const, nil, :NoMethodError)), nil,
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:send, nil, :require,
                      s(:str, "Win32API")),
                    s(:casgn, nil, :CSIDL_COMMON_APPDATA,
                      s(:int, 35)),
                    s(:lvasgn, :path,
                      s(:send,
                        s(:send,
                          s(:int, 0), :chr), :*,
                        s(:int, 260))),
                    s(:if,
                      s(:send,
                        s(:const, nil, :RUBY_VERSION), :>,
                        s(:str, "1.9")),
                      s(:begin,
                        s(:casgn, nil, :SHGetFolderPath,
                          s(:send,
                            s(:const, nil, :Win32API), :new,
                            s(:str, "shell32"),
                            s(:str, "SHGetFolderPath"),
                            s(:str, "PLPLP"),
                            s(:str, "L"),
                            s(:sym, :stdcall))),
                        s(:send,
                          s(:const, nil, :SHGetFolderPath), :call,
                          s(:nil),
                          s(:const, nil, :CSIDL_COMMON_APPDATA),
                          s(:nil),
                          s(:int, 1),
                          s(:lvar, :path))),
                      s(:begin,
                        s(:casgn, nil, :SHGetFolderPath,
                          s(:send,
                            s(:const, nil, :Win32API), :new,
                            s(:str, "shell32"),
                            s(:str, "SHGetFolderPath"),
                            s(:str, "LLLLP"),
                            s(:str, "L"))),
                        s(:send,
                          s(:const, nil, :SHGetFolderPath), :call,
                          s(:int, 0),
                          s(:const, nil, :CSIDL_COMMON_APPDATA),
                          s(:int, 0),
                          s(:int, 1),
                          s(:lvar, :path)))),
                    s(:send,
                      s(:lvar, :path), :strip)),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :LoadError)), nil,
                    s(:or,
                      s(:send,
                        s(:const,
                          s(:const, nil, :RbConfig), :CONFIG), :[],
                        s(:str, "sysconfdir")),
                      s(:str, "/etc"))), nil))), nil))),
      s(:casgn, nil, :SYSTEM_WIDE_CONFIG_FILE,
        s(:send,
          s(:const, nil, :File), :join,
          s(:const, nil, :SYSTEM_CONFIG_PATH),
          s(:str, "gemrc"))),
      s(:send, nil, :attr_reader,
        s(:sym, :args)),
      s(:send, nil, :attr_accessor,
        s(:sym, :path)),
      s(:send, nil, :attr_accessor,
        s(:sym, :home)),
      s(:send, nil, :attr_writer,
        s(:sym, :backtrace)),
      s(:send, nil, :attr_accessor,
        s(:sym, :bulk_threshold)),
      s(:send, nil, :attr_accessor,
        s(:sym, :verbose)),
      s(:send, nil, :attr_accessor,
        s(:sym, :update_sources)),
      s(:send, nil, :attr_accessor,
        s(:sym, :disable_default_gem_server)),
      s(:send, nil, :attr_reader,
        s(:sym, :ssl_verify_mode)),
      s(:send, nil, :attr_accessor,
        s(:sym, :ssl_ca_cert)),
      s(:send, nil, :attr_reader,
        s(:sym, :ssl_client_cert)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :args)),
        s(:begin,
          s(:ivasgn, :@config_file_name,
            s(:nil)),
          s(:lvasgn, :need_config_file_name,
            s(:false)),
          s(:lvasgn, :arg_list,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :args), :each),
            s(:args,
              s(:arg, :arg)),
            s(:if,
              s(:lvar, :need_config_file_name),
              s(:begin,
                s(:ivasgn, :@config_file_name,
                  s(:lvar, :arg)),
                s(:lvasgn, :need_config_file_name,
                  s(:false))),
              s(:if,
                s(:send,
                  s(:lvar, :arg), :=~,
                  s(:regexp,
                    s(:str, "^--config-file=(.*)"),
                    s(:regopt))),
                s(:ivasgn, :@config_file_name,
                  s(:nth_ref, 1)),
                s(:if,
                  s(:send,
                    s(:lvar, :arg), :=~,
                    s(:regexp,
                      s(:str, "^--config-file$"),
                      s(:regopt))),
                  s(:lvasgn, :need_config_file_name,
                    s(:true)),
                  s(:send,
                    s(:lvar, :arg_list), :<<,
                    s(:lvar, :arg)))))),
          s(:ivasgn, :@backtrace,
            s(:const, nil, :DEFAULT_BACKTRACE)),
          s(:ivasgn, :@bulk_threshold,
            s(:const, nil, :DEFAULT_BULK_THRESHOLD)),
          s(:ivasgn, :@verbose,
            s(:const, nil, :DEFAULT_VERBOSITY)),
          s(:ivasgn, :@update_sources,
            s(:const, nil, :DEFAULT_UPDATE_SOURCES)),
          s(:lvasgn, :operating_system_config,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Marshal), :dump,
                s(:const, nil, :OPERATING_SYSTEM_DEFAULTS)))),
          s(:lvasgn, :platform_config,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Marshal), :dump,
                s(:const, nil, :PLATFORM_DEFAULTS)))),
          s(:lvasgn, :system_config,
            s(:send, nil, :load_file,
              s(:const, nil, :SYSTEM_WIDE_CONFIG_FILE))),
          s(:lvasgn, :user_config,
            s(:send, nil, :load_file,
              s(:send,
                s(:send,
                  s(:send, nil, :config_file_name), :dup), :untaint))),
          s(:lvasgn, :environment_config,
            s(:block,
              s(:send,
                s(:send,
                  s(:begin,
                    s(:or,
                      s(:send,
                        s(:const, nil, :ENV), :[],
                        s(:str, "GEMRC")),
                      s(:str, ""))), :split,
                  s(:regexp,
                    s(:str, "[:;]"),
                    s(:regopt))), :inject,
                s(:hash)),
              s(:args,
                s(:arg, :result),
                s(:arg, :file)),
              s(:send,
                s(:lvar, :result), :merge,
                s(:send, nil, :load_file,
                  s(:lvar, :file))))),
          s(:ivasgn, :@hash,
            s(:send,
              s(:lvar, :operating_system_config), :merge,
              s(:lvar, :platform_config))),
          s(:if,
            s(:send,
              s(:lvar, :arg_list), :index,
              s(:str, "--norc")), nil,
            s(:begin,
              s(:ivasgn, :@hash,
                s(:send,
                  s(:ivar, :@hash), :merge,
                  s(:lvar, :system_config))),
              s(:ivasgn, :@hash,
                s(:send,
                  s(:ivar, :@hash), :merge,
                  s(:lvar, :user_config))),
              s(:ivasgn, :@hash,
                s(:send,
                  s(:ivar, :@hash), :merge,
                  s(:lvar, :environment_config))))),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :backtrace)),
            s(:ivasgn, :@backtrace,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :backtrace))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :bulk_threshold)),
            s(:ivasgn, :@bulk_threshold,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :bulk_threshold))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :gemhome)),
            s(:ivasgn, :@home,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :gemhome))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :gempath)),
            s(:ivasgn, :@path,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :gempath))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :update_sources)),
            s(:ivasgn, :@update_sources,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :update_sources))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :verbose)),
            s(:ivasgn, :@verbose,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :verbose))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :disable_default_gem_server)),
            s(:ivasgn, :@disable_default_gem_server,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :disable_default_gem_server))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :ssl_verify_mode)),
            s(:ivasgn, :@ssl_verify_mode,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :ssl_verify_mode))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :ssl_ca_cert)),
            s(:ivasgn, :@ssl_ca_cert,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :ssl_ca_cert))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :ssl_client_cert)),
            s(:ivasgn, :@ssl_client_cert,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :ssl_client_cert))), nil),
          s(:ivasgn, :@api_keys,
            s(:nil)),
          s(:ivasgn, :@rubygems_api_key,
            s(:nil)),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :sources)),
            s(:send,
              s(:const, nil, :Gem), :sources=,
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :sources))), nil),
          s(:send, nil, :handle_arguments,
            s(:lvar, :arg_list)))),
      s(:def, :api_keys,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@api_keys), nil,
            s(:send, nil, :load_api_keys)),
          s(:ivar, :@api_keys))),
      s(:def, :check_credentials_permissions,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Gem), :win_platform?),
            s(:return), nil),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send, nil, :credentials_path)), nil,
            s(:return)),
          s(:lvasgn, :existing_permissions,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :File), :stat,
                  s(:send, nil, :credentials_path)), :mode), :&,
              s(:int, 511))),
          s(:if,
            s(:send,
              s(:lvar, :existing_permissions), :==,
              s(:int, 384)),
            s(:return), nil),
          s(:send, nil, :alert_error,
            s(:dstr,
              s(:str, "Your gem push credentials file located at:\n"),
              s(:str, "\n"),
              s(:str, "\t"),
              s(:begin,
                s(:send, nil, :credentials_path)),
              s(:str, "\n"),
              s(:str, "\n"),
              s(:str, "has file permissions of 0"),
              s(:begin,
                s(:send,
                  s(:lvar, :existing_permissions), :to_s,
                  s(:int, 8))),
              s(:str, " but 0600 is required.\n"),
              s(:str, "\n"),
              s(:str, "To fix this error run:\n"),
              s(:str, "\n"),
              s(:str, "\tchmod 0600 "),
              s(:begin,
                s(:send, nil, :credentials_path)),
              s(:str, "\n"),
              s(:str, "\n"),
              s(:str, "You should reset your credentials at:\n"),
              s(:str, "\n"),
              s(:str, "\thttps://rubygems.org/profile/edit\n"),
              s(:str, "\n"),
              s(:str, "if you believe they were disclosed to a third party.\n"))),
          s(:send, nil, :terminate_interaction,
            s(:int, 1)))),
      s(:def, :credentials_path,
        s(:args),
        s(:send,
          s(:const, nil, :File), :join,
          s(:send,
            s(:const, nil, :Gem), :user_home),
          s(:str, ".gem"),
          s(:str, "credentials"))),
      s(:def, :load_api_keys,
        s(:args),
        s(:begin,
          s(:send, nil, :check_credentials_permissions),
          s(:ivasgn, :@api_keys,
            s(:if,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:send, nil, :credentials_path)),
              s(:send, nil, :load_file,
                s(:send, nil, :credentials_path)),
              s(:ivar, :@hash))),
          s(:if,
            s(:send,
              s(:ivar, :@api_keys), :key?,
              s(:sym, :rubygems_api_key)),
            s(:begin,
              s(:ivasgn, :@rubygems_api_key,
                s(:send,
                  s(:ivar, :@api_keys), :[],
                  s(:sym, :rubygems_api_key))),
              s(:if,
                s(:send,
                  s(:ivar, :@api_keys), :key?,
                  s(:sym, :rubygems)), nil,
                s(:send,
                  s(:ivar, :@api_keys), :[]=,
                  s(:sym, :rubygems),
                  s(:send,
                    s(:ivar, :@api_keys), :delete,
                    s(:sym, :rubygems_api_key))))), nil))),
      s(:def, :rubygems_api_key,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@rubygems_api_key), nil,
            s(:send, nil, :load_api_keys)),
          s(:ivar, :@rubygems_api_key))),
      s(:def, :rubygems_api_key=,
        s(:args,
          s(:arg, :api_key)),
        s(:begin,
          s(:send, nil, :check_credentials_permissions),
          s(:lvasgn, :config,
            s(:send,
              s(:send, nil, :load_file,
                s(:send, nil, :credentials_path)), :merge,
              s(:hash,
                s(:pair,
                  s(:sym, :rubygems_api_key),
                  s(:lvar, :api_key))))),
          s(:lvasgn, :dirname,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send, nil, :credentials_path))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :dirname)), nil,
            s(:send,
              s(:const, nil, :Dir), :mkdir,
              s(:lvar, :dirname))),
          s(:send,
            s(:const, nil, :Gem), :load_yaml),
          s(:lvasgn, :permissions,
            s(:send,
              s(:int, 384), :&,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :umask), :~)))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send, nil, :credentials_path),
              s(:str, "w"),
              s(:lvar, :permissions)),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:send,
                s(:lvar, :config), :to_yaml))),
          s(:ivasgn, :@rubygems_api_key,
            s(:lvar, :api_key)))),
      s(:def, :load_file,
        s(:args,
          s(:arg, :filename)),
        s(:begin,
          s(:send,
            s(:const, nil, :Gem), :load_yaml),
          s(:lvasgn, :yaml_errors,
            s(:array,
              s(:const, nil, :ArgumentError))),
          s(:if,
            s(:defined?,
              s(:const,
                s(:const, nil, :Psych), :SyntaxError)),
            s(:send,
              s(:lvar, :yaml_errors), :<<,
              s(:const,
                s(:const, nil, :Psych), :SyntaxError)), nil),
          s(:if,
            s(:and,
              s(:lvar, :filename),
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:lvar, :filename))), nil,
            s(:return,
              s(:hash))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :content,
                  s(:send,
                    s(:const, nil, :YAML), :load,
                    s(:send,
                      s(:const, nil, :File), :read,
                      s(:lvar, :filename)))),
                s(:if,
                  s(:send,
                    s(:lvar, :content), :kind_of?,
                    s(:const, nil, :Hash)), nil,
                  s(:begin,
                    s(:send, nil, :warn,
                      s(:dstr,
                        s(:str, "Failed to load "),
                        s(:begin,
                          s(:lvar, :filename)),
                        s(:str, " because it doesn't contain valid YAML hash"))),
                    s(:return,
                      s(:hash)))),
                s(:return,
                  s(:lvar, :content))),
              s(:resbody,
                s(:array,
                  s(:splat,
                    s(:lvar, :yaml_errors))),
                s(:lvasgn, :e),
                s(:send, nil, :warn,
                  s(:dstr,
                    s(:str, "Failed to load "),
                    s(:begin,
                      s(:lvar, :filename)),
                    s(:str, ", "),
                    s(:begin,
                      s(:lvar, :e))))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :EACCES)), nil,
                s(:send, nil, :warn,
                  s(:dstr,
                    s(:str, "Failed to load "),
                    s(:begin,
                      s(:lvar, :filename)),
                    s(:str, " due to permissions problem.")))), nil)),
          s(:hash))),
      s(:def, :backtrace,
        s(:args),
        s(:or,
          s(:ivar, :@backtrace),
          s(:gvar, :$DEBUG))),
      s(:def, :config_file_name,
        s(:args),
        s(:or,
          s(:ivar, :@config_file_name),
          s(:send,
            s(:const, nil, :Gem), :config_file))),
      s(:def, :each,
        s(:args,
          s(:blockarg, :block)),
        s(:begin,
          s(:lvasgn, :hash,
            s(:send,
              s(:ivar, :@hash), :dup)),
          s(:send,
            s(:lvar, :hash), :delete,
            s(:sym, :update_sources)),
          s(:send,
            s(:lvar, :hash), :delete,
            s(:sym, :verbose)),
          s(:send,
            s(:lvar, :hash), :delete,
            s(:sym, :backtrace)),
          s(:send,
            s(:lvar, :hash), :delete,
            s(:sym, :bulk_threshold)),
          s(:yield,
            s(:sym, :update_sources),
            s(:ivar, :@update_sources)),
          s(:yield,
            s(:sym, :verbose),
            s(:ivar, :@verbose)),
          s(:yield,
            s(:sym, :backtrace),
            s(:ivar, :@backtrace)),
          s(:yield,
            s(:sym, :bulk_threshold),
            s(:ivar, :@bulk_threshold)),
          s(:if,
            s(:ivar, :@config_file_name),
            s(:yield,
              s(:str, "config_file_name"),
              s(:ivar, :@config_file_name)), nil),
          s(:send,
            s(:lvar, :hash), :each,
            s(:block_pass,
              s(:lvar, :block))))),
      s(:def, :handle_arguments,
        s(:args,
          s(:arg, :arg_list)),
        s(:begin,
          s(:ivasgn, :@args,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :arg_list), :each),
            s(:args,
              s(:arg, :arg)),
            s(:case,
              s(:lvar, :arg),
              s(:when,
                s(:regexp,
                  s(:str, "^--(backtrace|traceback)$"),
                  s(:regopt)),
                s(:ivasgn, :@backtrace,
                  s(:true))),
              s(:when,
                s(:regexp,
                  s(:str, "^--debug$"),
                  s(:regopt)),
                s(:begin,
                  s(:gvasgn, :$DEBUG,
                    s(:true)),
                  s(:send, nil, :warn,
                    s(:str, "NOTE:  Debugging mode prints all exceptions even when rescued")))),
              s(:send,
                s(:ivar, :@args), :<<,
                s(:lvar, :arg)))))),
      s(:def, :really_verbose,
        s(:args),
        s(:case,
          s(:send, nil, :verbose),
          s(:when,
            s(:true),
            s(:false),
            s(:nil),
            s(:false)),
          s(:true))),
      s(:def, :to_yaml,
        s(:args),
        s(:begin,
          s(:lvasgn, :yaml_hash,
            s(:hash)),
          s(:send,
            s(:lvar, :yaml_hash), :[]=,
            s(:sym, :backtrace),
            s(:if,
              s(:send,
                s(:ivar, :@hash), :key?,
                s(:sym, :backtrace)),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :backtrace)),
              s(:const, nil, :DEFAULT_BACKTRACE))),
          s(:send,
            s(:lvar, :yaml_hash), :[]=,
            s(:sym, :bulk_threshold),
            s(:if,
              s(:send,
                s(:ivar, :@hash), :key?,
                s(:sym, :bulk_threshold)),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :bulk_threshold)),
              s(:const, nil, :DEFAULT_BULK_THRESHOLD))),
          s(:send,
            s(:lvar, :yaml_hash), :[]=,
            s(:sym, :sources),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :sources), :to_a)),
          s(:send,
            s(:lvar, :yaml_hash), :[]=,
            s(:sym, :update_sources),
            s(:if,
              s(:send,
                s(:ivar, :@hash), :key?,
                s(:sym, :update_sources)),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :update_sources)),
              s(:const, nil, :DEFAULT_UPDATE_SOURCES))),
          s(:send,
            s(:lvar, :yaml_hash), :[]=,
            s(:sym, :verbose),
            s(:if,
              s(:send,
                s(:ivar, :@hash), :key?,
                s(:sym, :verbose)),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :verbose)),
              s(:const, nil, :DEFAULT_VERBOSITY))),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :ssl_verify_mode)),
            s(:send,
              s(:lvar, :yaml_hash), :[]=,
              s(:sym, :ssl_verify_mode),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :ssl_verify_mode))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :ssl_ca_cert)),
            s(:send,
              s(:lvar, :yaml_hash), :[]=,
              s(:sym, :ssl_ca_cert),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :ssl_ca_cert))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@hash), :key?,
              s(:sym, :ssl_client_cert)),
            s(:send,
              s(:lvar, :yaml_hash), :[]=,
              s(:sym, :ssl_client_cert),
              s(:send,
                s(:ivar, :@hash), :[],
                s(:sym, :ssl_client_cert))), nil),
          s(:lvasgn, :keys,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :yaml_hash), :keys), :map),
              s(:args,
                s(:arg, :key)),
              s(:send,
                s(:lvar, :key), :to_s))),
          s(:send,
            s(:lvar, :keys), :<<,
            s(:str, "debug")),
          s(:lvasgn, :re,
            s(:send,
              s(:const, nil, :Regexp), :union,
              s(:splat,
                s(:lvar, :keys)))),
          s(:block,
            s(:send,
              s(:ivar, :@hash), :each),
            s(:args,
              s(:arg, :key),
              s(:arg, :value)),
            s(:begin,
              s(:lvasgn, :key,
                s(:send,
                  s(:lvar, :key), :to_s)),
              s(:if,
                s(:send,
                  s(:lvar, :key), :=~,
                  s(:lvar, :re)),
                s(:next), nil),
              s(:send,
                s(:lvar, :yaml_hash), :[]=,
                s(:send,
                  s(:lvar, :key), :to_s),
                s(:lvar, :value)))),
          s(:send,
            s(:lvar, :yaml_hash), :to_yaml))),
      s(:def, :write,
        s(:args),
        s(:block,
          s(:send, nil, :open,
            s(:send, nil, :config_file_name),
            s(:str, "w")),
          s(:args,
            s(:arg, :io)),
          s(:send,
            s(:lvar, :io), :write,
            s(:send, nil, :to_yaml)))),
      s(:def, :[],
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@hash), :[],
          s(:send,
            s(:lvar, :key), :to_s))),
      s(:def, :[]=,
        s(:args,
          s(:arg, :key),
          s(:arg, :value)),
        s(:send,
          s(:ivar, :@hash), :[]=,
          s(:send,
            s(:lvar, :key), :to_s),
          s(:lvar, :value))),
      s(:def, :==,
        s(:args,
          s(:arg, :other)),
        s(:and,
          s(:and,
            s(:and,
              s(:and,
                s(:and,
                  s(:send,
                    s(:send,
                      s(:self), :class), :===,
                    s(:lvar, :other)),
                  s(:send,
                    s(:ivar, :@backtrace), :==,
                    s(:send,
                      s(:lvar, :other), :backtrace))),
                s(:send,
                  s(:ivar, :@bulk_threshold), :==,
                  s(:send,
                    s(:lvar, :other), :bulk_threshold))),
              s(:send,
                s(:ivar, :@verbose), :==,
                s(:send,
                  s(:lvar, :other), :verbose))),
            s(:send,
              s(:ivar, :@update_sources), :==,
              s(:send,
                s(:lvar, :other), :update_sources))),
          s(:send,
            s(:ivar, :@hash), :==,
            s(:send,
              s(:lvar, :other), :hash)))),
      s(:send, nil, :attr_reader,
        s(:sym, :hash)),
      s(:send, nil, :protected,
        s(:sym, :hash)))))
