s(:module,
  s(:const, nil, :Kernel),
  s(:begin,
    s(:if,
      s(:send,
        s(:str, "method"), :==,
        s(:defined?,
          s(:send, nil, :gem))),
      s(:send, nil, :remove_method,
        s(:sym, :gem)), nil),
    s(:def, :gem,
      s(:args,
        s(:arg, :gem_name),
        s(:restarg, :requirements)),
      s(:begin,
        s(:lvasgn, :skip_list,
          s(:send,
            s(:begin,
              s(:or,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "GEM_SKIP")),
                s(:str, ""))), :split,
            s(:regexp,
              s(:str, ":"),
              s(:regopt)))),
        s(:if,
          s(:send,
            s(:lvar, :skip_list), :include?,
            s(:lvar, :gem_name)),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :Gem), :LoadError),
            s(:dstr,
              s(:str, "skipping "),
              s(:begin,
                s(:lvar, :gem_name)))), nil),
        s(:if,
          s(:send,
            s(:lvar, :gem_name), :kind_of?,
            s(:const,
              s(:const, nil, :Gem), :Dependency)),
          s(:begin,
            s(:if,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Deprecate), :skip), nil,
              s(:send, nil, :warn,
                s(:dstr,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Gem), :location_of_caller), :join,
                        s(:str, ":"))),
                    s(:str, ":Warning: Kernel.gem no longer ")),
                  s(:str, "accepts a Gem::Dependency object, please pass the name "),
                  s(:str, "and requirements directly")))),
            s(:lvasgn, :requirements,
              s(:send,
                s(:lvar, :gem_name), :requirement)),
            s(:lvasgn, :gem_name,
              s(:send,
                s(:lvar, :gem_name), :name))), nil),
        s(:lvasgn, :dep,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Dependency), :new,
            s(:lvar, :gem_name),
            s(:splat,
              s(:lvar, :requirements)))),
        s(:lvasgn, :loaded,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :loaded_specs), :[],
            s(:lvar, :gem_name))),
        s(:if,
          s(:and,
            s(:lvar, :loaded),
            s(:send,
              s(:lvar, :dep), :matches_spec?,
              s(:lvar, :loaded))),
          s(:return,
            s(:false)), nil),
        s(:lvasgn, :spec,
          s(:send,
            s(:lvar, :dep), :to_spec)),
        s(:if,
          s(:lvar, :spec),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :LOADED_SPECS_MUTEX), :synchronize),
            s(:args),
            s(:send,
              s(:lvar, :spec), :activate)), nil))),
    s(:send, nil, :private,
      s(:sym, :gem))))
