s(:begin,
  s(:send, nil, :require,
    s(:str, "tsort")),
  s(:send, nil, :require,
    s(:str, "rubygems/deprecate")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :DependencyList), nil,
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :specs)),
      s(:send, nil, :include,
        s(:const, nil, :Enumerable)),
      s(:send, nil, :include,
        s(:const, nil, :TSort)),
      s(:send, nil, :attr_accessor,
        s(:sym, :development)),
      s(:defs,
        s(:self), :from_specs,
        s(:args),
        s(:begin,
          s(:lvasgn, :list,
            s(:send, nil, :new)),
          s(:send,
            s(:lvar, :list), :add,
            s(:splat,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Specification), :to_a))),
          s(:lvar, :list))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :development,
            s(:false))),
        s(:begin,
          s(:ivasgn, :@specs,
            s(:array)),
          s(:ivasgn, :@development,
            s(:lvar, :development)))),
      s(:def, :add,
        s(:args,
          s(:restarg, :gemspecs)),
        s(:send,
          s(:ivar, :@specs), :concat,
          s(:lvar, :gemspecs))),
      s(:def, :clear,
        s(:args),
        s(:send,
          s(:ivar, :@specs), :clear)),
      s(:def, :dependency_order,
        s(:args),
        s(:begin,
          s(:lvasgn, :sorted,
            s(:send,
              s(:send, nil, :strongly_connected_components), :flatten)),
          s(:lvasgn, :result,
            s(:array)),
          s(:lvasgn, :seen,
            s(:hash)),
          s(:block,
            s(:send,
              s(:lvar, :sorted), :each),
            s(:args,
              s(:arg, :spec)),
            s(:if,
              s(:lvasgn, :index,
                s(:send,
                  s(:lvar, :seen), :[],
                  s(:send,
                    s(:lvar, :spec), :name))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :result), :[],
                      s(:lvar, :index)), :version), :<,
                  s(:send,
                    s(:lvar, :spec), :version)),
                s(:send,
                  s(:lvar, :result), :[]=,
                  s(:lvar, :index),
                  s(:lvar, :spec)), nil),
              s(:begin,
                s(:send,
                  s(:lvar, :seen), :[]=,
                  s(:send,
                    s(:lvar, :spec), :name),
                  s(:send,
                    s(:lvar, :result), :length)),
                s(:send,
                  s(:lvar, :result), :<<,
                  s(:lvar, :spec))))),
          s(:send,
            s(:lvar, :result), :reverse))),
      s(:def, :each,
        s(:args,
          s(:blockarg, :block)),
        s(:send,
          s(:send, nil, :dependency_order), :each,
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :find_name,
        s(:args,
          s(:arg, :full_name)),
        s(:block,
          s(:send,
            s(:ivar, :@specs), :find),
          s(:args,
            s(:arg, :spec)),
          s(:send,
            s(:send,
              s(:lvar, :spec), :full_name), :==,
            s(:lvar, :full_name)))),
      s(:def, :inspect,
        s(:args),
        s(:send,
          s(:str, "#<%s:0x%x %p>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:send, nil, :object_id),
            s(:block,
              s(:send, nil, :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :ok?,
        s(:args),
        s(:send,
          s(:send, nil, :why_not_ok?,
            s(:sym, :quick)), :empty?)),
      s(:def, :why_not_ok?,
        s(:args,
          s(:optarg, :quick,
            s(:false))),
        s(:begin,
          s(:lvasgn, :unsatisfied,
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args,
                s(:arg, :h),
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :k),
                s(:array)))),
          s(:block,
            s(:send, nil, :each),
            s(:args,
              s(:arg, :spec)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :spec), :runtime_dependencies), :each),
              s(:args,
                s(:arg, :dep)),
              s(:begin,
                s(:lvasgn, :inst,
                  s(:block,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Specification), :any?),
                    s(:args,
                      s(:arg, :installed_spec)),
                    s(:and,
                      s(:send,
                        s(:send,
                          s(:lvar, :dep), :name), :==,
                        s(:send,
                          s(:lvar, :installed_spec), :name)),
                      s(:send,
                        s(:send,
                          s(:lvar, :dep), :requirement), :satisfied_by?,
                        s(:send,
                          s(:lvar, :installed_spec), :version))))),
                s(:if,
                  s(:or,
                    s(:lvar, :inst),
                    s(:block,
                      s(:send,
                        s(:ivar, :@specs), :find),
                      s(:args,
                        s(:arg, :s)),
                      s(:send,
                        s(:lvar, :s), :satisfies_requirement?,
                        s(:lvar, :dep)))), nil,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :unsatisfied), :[],
                        s(:send,
                          s(:lvar, :spec), :name)), :<<,
                      s(:lvar, :dep)),
                    s(:if,
                      s(:lvar, :quick),
                      s(:return,
                        s(:lvar, :unsatisfied)), nil)))))),
          s(:lvar, :unsatisfied))),
      s(:def, :ok_to_remove?,
        s(:args,
          s(:arg, :full_name),
          s(:optarg, :check_dev,
            s(:true))),
        s(:begin,
          s(:lvasgn, :gem_to_remove,
            s(:send, nil, :find_name,
              s(:lvar, :full_name))),
          s(:if,
            s(:lvar, :gem_to_remove), nil,
            s(:return,
              s(:true))),
          s(:lvasgn, :siblings,
            s(:block,
              s(:send,
                s(:ivar, :@specs), :find_all),
              s(:args,
                s(:arg, :s)),
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :s), :name), :==,
                  s(:send,
                    s(:lvar, :gem_to_remove), :name)),
                s(:send,
                  s(:send,
                    s(:lvar, :s), :full_name), :!=,
                  s(:send,
                    s(:lvar, :gem_to_remove), :full_name))))),
          s(:lvasgn, :deps,
            s(:array)),
          s(:block,
            s(:send,
              s(:ivar, :@specs), :each),
            s(:args,
              s(:arg, :spec)),
            s(:begin,
              s(:lvasgn, :check,
                s(:if,
                  s(:lvar, :check_dev),
                  s(:send,
                    s(:lvar, :spec), :dependencies),
                  s(:send,
                    s(:lvar, :spec), :runtime_dependencies))),
              s(:block,
                s(:send,
                  s(:lvar, :check), :each),
                s(:args,
                  s(:arg, :dep)),
                s(:if,
                  s(:send,
                    s(:lvar, :gem_to_remove), :satisfies_requirement?,
                    s(:lvar, :dep)),
                  s(:send,
                    s(:lvar, :deps), :<<,
                    s(:lvar, :dep)), nil)))),
          s(:block,
            s(:send,
              s(:lvar, :deps), :all?),
            s(:args,
              s(:arg, :dep)),
            s(:block,
              s(:send,
                s(:lvar, :siblings), :any?),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :satisfies_requirement?,
                s(:lvar, :dep)))))),
      s(:def, :remove_specs_unsatisfied_by,
        s(:args,
          s(:arg, :dependencies)),
        s(:block,
          s(:send,
            s(:send, nil, :specs), :reject!),
          s(:args,
            s(:arg, :spec)),
          s(:begin,
            s(:lvasgn, :dep,
              s(:send,
                s(:lvar, :dependencies), :[],
                s(:send,
                  s(:lvar, :spec), :name))),
            s(:and,
              s(:lvar, :dep),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :dep), :requirement), :satisfied_by?,
                  s(:send,
                    s(:lvar, :spec), :version)), :!))))),
      s(:def, :remove_by_name,
        s(:args,
          s(:arg, :full_name)),
        s(:block,
          s(:send,
            s(:ivar, :@specs), :delete_if),
          s(:args,
            s(:arg, :spec)),
          s(:send,
            s(:send,
              s(:lvar, :spec), :full_name), :==,
            s(:lvar, :full_name)))),
      s(:def, :spec_predecessors,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args,
                s(:arg, :h),
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :k),
                s(:array)))),
          s(:lvasgn, :specs,
            s(:send,
              s(:send,
                s(:ivar, :@specs), :sort), :reverse)),
          s(:block,
            s(:send,
              s(:lvar, :specs), :each),
            s(:args,
              s(:arg, :spec)),
            s(:block,
              s(:send,
                s(:lvar, :specs), :each),
              s(:args,
                s(:arg, :other)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :spec), :==,
                    s(:lvar, :other)),
                  s(:next), nil),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :other), :dependencies), :each),
                  s(:args,
                    s(:arg, :dep)),
                  s(:if,
                    s(:send,
                      s(:lvar, :spec), :satisfies_requirement?,
                      s(:lvar, :dep)),
                    s(:send,
                      s(:send,
                        s(:lvar, :result), :[],
                        s(:lvar, :spec)), :<<,
                      s(:lvar, :other)), nil))))),
          s(:lvar, :result))),
      s(:def, :tsort_each_node,
        s(:args,
          s(:blockarg, :block)),
        s(:send,
          s(:ivar, :@specs), :each,
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :tsort_each_child,
        s(:args,
          s(:arg, :node)),
        s(:begin,
          s(:lvasgn, :specs,
            s(:send,
              s(:send,
                s(:ivar, :@specs), :sort), :reverse)),
          s(:lvasgn, :dependencies,
            s(:send,
              s(:lvar, :node), :runtime_dependencies)),
          s(:if,
            s(:ivar, :@development),
            s(:send,
              s(:lvar, :dependencies), :push,
              s(:splat,
                s(:send,
                  s(:lvar, :node), :development_dependencies))), nil),
          s(:block,
            s(:send,
              s(:lvar, :dependencies), :each),
            s(:args,
              s(:arg, :dep)),
            s(:block,
              s(:send,
                s(:lvar, :specs), :each),
              s(:args,
                s(:arg, :spec)),
              s(:if,
                s(:send,
                  s(:lvar, :spec), :satisfies_requirement?,
                  s(:lvar, :dep)),
                s(:begin,
                  s(:yield,
                    s(:lvar, :spec)),
                  s(:break)), nil))))),
      s(:send, nil, :private),
      s(:def, :active_count,
        s(:args,
          s(:arg, :specs),
          s(:arg, :ignored)),
        s(:block,
          s(:send,
            s(:lvar, :specs), :count),
          s(:args,
            s(:arg, :spec)),
          s(:send,
            s(:send,
              s(:lvar, :ignored), :[],
              s(:send,
                s(:lvar, :spec), :full_name)), :nil?))))))
