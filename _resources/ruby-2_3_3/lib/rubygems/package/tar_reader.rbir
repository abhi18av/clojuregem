s(:begin,
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Package), :TarReader), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Enumerable)),
      s(:class,
        s(:const, nil, :UnexpectedEOF),
        s(:const, nil, :StandardError), nil),
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :io)),
        s(:begin,
          s(:lvasgn, :reader,
            s(:zsuper)),
          s(:if,
            s(:send, nil, :block_given?), nil,
            s(:return,
              s(:lvar, :reader))),
          s(:kwbegin,
            s(:ensure,
              s(:yield,
                s(:lvar, :reader)),
              s(:send,
                s(:lvar, :reader), :close))),
          s(:nil))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :io)),
        s(:begin,
          s(:ivasgn, :@io,
            s(:lvar, :io)),
          s(:ivasgn, :@init_pos,
            s(:send,
              s(:lvar, :io), :pos)))),
      s(:def, :close,
        s(:args), nil),
      s(:def, :each,
        s(:args),
        s(:begin,
          s(:if,
            s(:send, nil, :block_given?), nil,
            s(:return,
              s(:send, nil, :enum_for,
                s(:send, nil, :__method__)))),
          s(:until,
            s(:send,
              s(:ivar, :@io), :eof?),
            s(:begin,
              s(:lvasgn, :header,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :TarHeader), :from,
                  s(:ivar, :@io))),
              s(:if,
                s(:send,
                  s(:lvar, :header), :empty?),
                s(:return), nil),
              s(:lvasgn, :entry,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Package), :TarReader), :Entry), :new,
                  s(:lvar, :header),
                  s(:ivar, :@io))),
              s(:lvasgn, :size,
                s(:send,
                  s(:send,
                    s(:lvar, :entry), :header), :size)),
              s(:yield,
                s(:lvar, :entry)),
              s(:lvasgn, :skip,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:int, 512), :-,
                      s(:begin,
                        s(:send,
                          s(:lvar, :size), :%,
                          s(:int, 512))))), :%,
                  s(:int, 512))),
              s(:lvasgn, :pending,
                s(:send,
                  s(:lvar, :size), :-,
                  s(:send,
                    s(:lvar, :entry), :bytes_read))),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:send,
                      s(:ivar, :@io), :seek,
                      s(:lvar, :pending),
                      s(:const,
                        s(:const, nil, :IO), :SEEK_CUR)),
                    s(:lvasgn, :pending,
                      s(:int, 0))),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :Errno), :EINVAL),
                      s(:const, nil, :NameError)), nil,
                    s(:while,
                      s(:send,
                        s(:lvar, :pending), :>,
                        s(:int, 0)),
                      s(:begin,
                        s(:lvasgn, :bytes_read,
                          s(:send,
                            s(:send,
                              s(:ivar, :@io), :read,
                              s(:send,
                                s(:array,
                                  s(:lvar, :pending),
                                  s(:int, 4096)), :min)), :size)),
                        s(:if,
                          s(:send,
                            s(:ivar, :@io), :eof?),
                          s(:send, nil, :raise,
                            s(:const, nil, :UnexpectedEOF)), nil),
                        s(:op_asgn,
                          s(:lvasgn, :pending), :-,
                          s(:lvar, :bytes_read))))), nil)),
              s(:send,
                s(:ivar, :@io), :read,
                s(:lvar, :skip)),
              s(:send,
                s(:lvar, :entry), :close))))),
      s(:alias,
        s(:sym, :each_entry),
        s(:sym, :each)),
      s(:def, :rewind,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@init_pos), :==,
            s(:int, 0)),
          s(:begin,
            s(:if,
              s(:send,
                s(:ivar, :@io), :respond_to?,
                s(:sym, :rewind)), nil,
              s(:send, nil, :raise,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :NonSeekableIO))),
            s(:send,
              s(:ivar, :@io), :rewind)),
          s(:begin,
            s(:if,
              s(:send,
                s(:ivar, :@io), :respond_to?,
                s(:sym, :pos=)), nil,
              s(:send, nil, :raise,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :NonSeekableIO))),
            s(:send,
              s(:ivar, :@io), :pos=,
              s(:ivar, :@init_pos))))),
      s(:def, :seek,
        s(:args,
          s(:arg, :name)),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :found,
              s(:block,
                s(:send, nil, :find),
                s(:args,
                  s(:arg, :entry)),
                s(:send,
                  s(:send,
                    s(:lvar, :entry), :full_name), :==,
                  s(:lvar, :name)))),
            s(:if,
              s(:lvar, :found), nil,
              s(:return)),
            s(:return,
              s(:yield,
                s(:lvar, :found)))),
          s(:send, nil, :rewind))))),
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_reader/entry")))
