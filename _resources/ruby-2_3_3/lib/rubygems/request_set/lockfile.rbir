s(:begin,
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :RequestSet), :Lockfile), nil,
    s(:begin,
      s(:class,
        s(:const, nil, :ParseError),
        s(:const,
          s(:const, nil, :Gem), :Exception),
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :column)),
          s(:send, nil, :attr_reader,
            s(:sym, :line)),
          s(:send, nil, :attr_reader,
            s(:sym, :path)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :message),
              s(:arg, :column),
              s(:arg, :line),
              s(:arg, :path)),
            s(:begin,
              s(:ivasgn, :@line,
                s(:lvar, :line)),
              s(:ivasgn, :@column,
                s(:lvar, :column)),
              s(:ivasgn, :@path,
                s(:lvar, :path)),
              s(:super,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :message)),
                  s(:str, " (at line "),
                  s(:begin,
                    s(:lvar, :line)),
                  s(:str, " column "),
                  s(:begin,
                    s(:lvar, :column)),
                  s(:str, ")"))))))),
      s(:defs,
        s(:self), :build,
        s(:args,
          s(:arg, :request_set),
          s(:arg, :gem_deps_file),
          s(:optarg, :dependencies,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:lvar, :request_set), :resolve),
          s(:or_asgn,
            s(:lvasgn, :dependencies),
            s(:send, nil, :requests_to_deps,
              s(:send,
                s(:lvar, :request_set), :sorted_requests))),
          s(:send, nil, :new,
            s(:lvar, :request_set),
            s(:lvar, :gem_deps_file),
            s(:lvar, :dependencies)))),
      s(:defs,
        s(:self), :requests_to_deps,
        s(:args,
          s(:arg, :requests)),
        s(:begin,
          s(:lvasgn, :deps,
            s(:hash)),
          s(:block,
            s(:send,
              s(:lvar, :requests), :each),
            s(:args,
              s(:arg, :request)),
            s(:begin,
              s(:lvasgn, :spec,
                s(:send,
                  s(:lvar, :request), :spec)),
              s(:lvasgn, :name,
                s(:send,
                  s(:lvar, :request), :name)),
              s(:lvasgn, :requirement,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :request), :request), :dependency), :requirement)),
              s(:send,
                s(:lvar, :deps), :[]=,
                s(:lvar, :name),
                s(:if,
                  s(:send,
                    s(:array,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :Resolver), :VendorSpecification),
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :Resolver), :GitSpecification)), :include?,
                    s(:send,
                      s(:lvar, :spec), :class)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Requirement), :source_set),
                  s(:lvar, :requirement))))),
          s(:lvar, :deps))),
      s(:send, nil, :attr_reader,
        s(:sym, :platforms)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :request_set),
          s(:arg, :gem_deps_file),
          s(:arg, :dependencies)),
        s(:begin,
          s(:ivasgn, :@set,
            s(:lvar, :request_set)),
          s(:ivasgn, :@dependencies,
            s(:lvar, :dependencies)),
          s(:ivasgn, :@gem_deps_file,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :gem_deps_file))),
          s(:ivasgn, :@gem_deps_dir,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:ivar, :@gem_deps_file))),
          s(:if,
            s(:send,
              s(:lvar, :gem_deps_file), :tainted?), nil,
            s(:send,
              s(:ivar, :@gem_deps_file), :untaint)),
          s(:ivasgn, :@platforms,
            s(:array)))),
      s(:def, :add_DEPENDENCIES,
        s(:args,
          s(:arg, :out)),
        s(:begin,
          s(:send,
            s(:lvar, :out), :<<,
            s(:str, "DEPENDENCIES")),
          s(:send,
            s(:lvar, :out), :concat,
            s(:block,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@dependencies), :sort_by),
                  s(:args,
                    s(:arg, :name)),
                  s(:lvar, :name)), :map),
              s(:args,
                s(:arg, :name),
                s(:arg, :requirement)),
              s(:dstr,
                s(:str, "  "),
                s(:begin,
                  s(:lvar, :name)),
                s(:begin,
                  s(:send,
                    s(:lvar, :requirement), :for_lockfile))))),
          s(:send,
            s(:lvar, :out), :<<,
            s(:nil)))),
      s(:def, :add_GEM,
        s(:args,
          s(:arg, :out),
          s(:arg, :spec_groups)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :spec_groups), :empty?),
            s(:return), nil),
          s(:lvasgn, :source_groups,
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :spec_groups), :values), :flatten), :group_by),
              s(:args,
                s(:arg, :request)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :request), :spec), :source), :uri))),
          s(:block,
            s(:send,
              s(:block,
                s(:send,
                  s(:lvar, :source_groups), :sort_by),
                s(:args,
                  s(:arg, :group)),
                s(:send,
                  s(:lvar, :group), :to_s)), :map),
            s(:args,
              s(:arg, :group),
              s(:arg, :requests)),
            s(:begin,
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "GEM")),
              s(:send,
                s(:lvar, :out), :<<,
                s(:dstr,
                  s(:str, "  remote: "),
                  s(:begin,
                    s(:lvar, :group)))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "  specs:")),
              s(:block,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:lvar, :requests), :sort_by),
                    s(:args,
                      s(:arg, :request)),
                    s(:send,
                      s(:lvar, :request), :name)), :each),
                s(:args,
                  s(:arg, :request)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :request), :spec), :name), :==,
                      s(:str, "bundler")),
                    s(:next), nil),
                  s(:if,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :Platform), :RUBY), :==,
                      s(:send,
                        s(:send,
                          s(:lvar, :request), :spec), :platform)), nil,
                    s(:lvasgn, :platform,
                      s(:dstr,
                        s(:str, "-"),
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :request), :spec), :platform))))),
                  s(:send,
                    s(:lvar, :out), :<<,
                    s(:dstr,
                      s(:str, "    "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :request), :name)),
                      s(:str, " ("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :request), :version)),
                      s(:begin,
                        s(:lvar, :platform)),
                      s(:str, ")"))),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :request), :full_spec), :dependencies), :sort), :each),
                    s(:args,
                      s(:arg, :dependency)),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :dependency), :type), :==,
                          s(:sym, :development)),
                        s(:next), nil),
                      s(:lvasgn, :requirement,
                        s(:send,
                          s(:lvar, :dependency), :requirement)),
                      s(:send,
                        s(:lvar, :out), :<<,
                        s(:dstr,
                          s(:str, "      "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :dependency), :name)),
                          s(:begin,
                            s(:send,
                              s(:lvar, :requirement), :for_lockfile)))))))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:nil)))))),
      s(:def, :add_GIT,
        s(:args,
          s(:arg, :out),
          s(:arg, :git_requests)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :git_requests), :empty?),
            s(:return), nil),
          s(:lvasgn, :by_repository_revision,
            s(:block,
              s(:send,
                s(:lvar, :git_requests), :group_by),
              s(:args,
                s(:arg, :request)),
              s(:begin,
                s(:lvasgn, :source,
                  s(:send,
                    s(:send,
                      s(:lvar, :request), :spec), :source)),
                s(:array,
                  s(:send,
                    s(:lvar, :source), :repository),
                  s(:send,
                    s(:lvar, :source), :rev_parse))))),
          s(:block,
            s(:send,
              s(:lvar, :by_repository_revision), :each),
            s(:args,
              s(:mlhs,
                s(:arg, :repository),
                s(:arg, :revision)),
              s(:arg, :requests)),
            s(:begin,
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "GIT")),
              s(:send,
                s(:lvar, :out), :<<,
                s(:dstr,
                  s(:str, "  remote: "),
                  s(:begin,
                    s(:lvar, :repository)))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:dstr,
                  s(:str, "  revision: "),
                  s(:begin,
                    s(:lvar, :revision)))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "  specs:")),
              s(:block,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:lvar, :requests), :sort_by),
                    s(:args,
                      s(:arg, :request)),
                    s(:send,
                      s(:lvar, :request), :name)), :each),
                s(:args,
                  s(:arg, :request)),
                s(:begin,
                  s(:send,
                    s(:lvar, :out), :<<,
                    s(:dstr,
                      s(:str, "    "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :request), :name)),
                      s(:str, " ("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :request), :version)),
                      s(:str, ")"))),
                  s(:lvasgn, :dependencies,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :request), :spec), :dependencies), :sort_by),
                      s(:args,
                        s(:arg, :dep)),
                      s(:send,
                        s(:lvar, :dep), :name))),
                  s(:block,
                    s(:send,
                      s(:lvar, :dependencies), :each),
                    s(:args,
                      s(:arg, :dep)),
                    s(:send,
                      s(:lvar, :out), :<<,
                      s(:dstr,
                        s(:str, "      "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :dep), :name)),
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :dep), :requirement), :for_lockfile))))))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:nil)))))),
      s(:def, :relative_path_from,
        s(:args,
          s(:arg, :dest),
          s(:arg, :base)),
        s(:begin,
          s(:lvasgn, :dest,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :dest))),
          s(:lvasgn, :base,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :base))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :dest), :index,
                s(:lvar, :base)), :==,
              s(:int, 0)),
            s(:begin,
              s(:lvasgn, :offset,
                s(:send,
                  s(:lvar, :dest), :[],
                  s(:irange,
                    s(:send,
                      s(:send,
                        s(:lvar, :base), :size), :+,
                      s(:int, 1)),
                    s(:int, -1)))),
              s(:if,
                s(:lvar, :offset), nil,
                s(:return,
                  s(:str, "."))),
              s(:lvar, :offset)),
            s(:lvar, :dest)))),
      s(:def, :add_PATH,
        s(:args,
          s(:arg, :out),
          s(:arg, :path_requests)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :path_requests), :empty?),
            s(:return), nil),
          s(:send,
            s(:lvar, :out), :<<,
            s(:str, "PATH")),
          s(:block,
            s(:send,
              s(:lvar, :path_requests), :each),
            s(:args,
              s(:arg, :request)),
            s(:begin,
              s(:lvasgn, :directory,
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :request), :spec), :source), :uri))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:dstr,
                  s(:str, "  remote: "),
                  s(:begin,
                    s(:send, nil, :relative_path_from,
                      s(:lvar, :directory),
                      s(:ivar, :@gem_deps_dir))))),
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "  specs:")),
              s(:send,
                s(:lvar, :out), :<<,
                s(:dstr,
                  s(:str, "    "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :request), :name)),
                  s(:str, " ("),
                  s(:begin,
                    s(:send,
                      s(:lvar, :request), :version)),
                  s(:str, ")"))))),
          s(:send,
            s(:lvar, :out), :<<,
            s(:nil)))),
      s(:def, :add_PLATFORMS,
        s(:args,
          s(:arg, :out)),
        s(:begin,
          s(:send,
            s(:lvar, :out), :<<,
            s(:str, "PLATFORMS")),
          s(:lvasgn, :platforms,
            s(:send,
              s(:block,
                s(:send,
                  s(:send, nil, :requests), :map),
                s(:args,
                  s(:arg, :request)),
                s(:send,
                  s(:send,
                    s(:lvar, :request), :spec), :platform)), :uniq)),
          s(:lvasgn, :platforms,
            s(:block,
              s(:send,
                s(:lvar, :platforms), :sort_by),
              s(:args,
                s(:arg, :platform)),
              s(:send,
                s(:lvar, :platform), :to_s))),
          s(:block,
            s(:send,
              s(:lvar, :platforms), :each),
            s(:args,
              s(:arg, :platform)),
            s(:send,
              s(:lvar, :out), :<<,
              s(:dstr,
                s(:str, "  "),
                s(:begin,
                  s(:lvar, :platform))))),
          s(:send,
            s(:lvar, :out), :<<,
            s(:nil)))),
      s(:def, :spec_groups,
        s(:args),
        s(:block,
          s(:send,
            s(:send, nil, :requests), :group_by),
          s(:args,
            s(:arg, :request)),
          s(:send,
            s(:send,
              s(:lvar, :request), :spec), :class))),
      s(:def, :to_s,
        s(:args),
        s(:begin,
          s(:lvasgn, :out,
            s(:array)),
          s(:lvasgn, :groups,
            s(:send, nil, :spec_groups)),
          s(:send, nil, :add_PATH,
            s(:lvar, :out),
            s(:block,
              s(:send,
                s(:lvar, :groups), :delete,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Resolver), :VendorSpecification)),
              s(:args),
              s(:array))),
          s(:send, nil, :add_GIT,
            s(:lvar, :out),
            s(:block,
              s(:send,
                s(:lvar, :groups), :delete,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Resolver), :GitSpecification)),
              s(:args),
              s(:array))),
          s(:send, nil, :add_GEM,
            s(:lvar, :out),
            s(:lvar, :groups)),
          s(:send, nil, :add_PLATFORMS,
            s(:lvar, :out)),
          s(:send, nil, :add_DEPENDENCIES,
            s(:lvar, :out)),
          s(:send,
            s(:lvar, :out), :join,
            s(:str, "\n")))),
      s(:def, :write,
        s(:args),
        s(:begin,
          s(:lvasgn, :content,
            s(:send, nil, :to_s)),
          s(:block,
            s(:send, nil, :open,
              s(:dstr,
                s(:begin,
                  s(:ivar, :@gem_deps_file)),
                s(:str, ".lock")),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:lvar, :content))))),
      s(:send, nil, :private),
      s(:def, :requests,
        s(:args),
        s(:send,
          s(:ivar, :@set), :sorted_requests)))),
  s(:send, nil, :require,
    s(:str, "rubygems/request_set/lockfile/tokenizer")))
