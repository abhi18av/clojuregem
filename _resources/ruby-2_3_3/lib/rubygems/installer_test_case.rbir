s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/installer")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Installer), nil,
    s(:begin,
      s(:send, nil, :attr_writer,
        s(:sym, :bin_dir)),
      s(:send, nil, :attr_writer,
        s(:sym, :build_args)),
      s(:send, nil, :attr_writer,
        s(:sym, :gem_dir)),
      s(:send, nil, :attr_writer,
        s(:sym, :force)),
      s(:send, nil, :attr_writer,
        s(:sym, :format)),
      s(:send, nil, :attr_writer,
        s(:sym, :gem_home)),
      s(:send, nil, :attr_writer,
        s(:sym, :env_shebang)),
      s(:send, nil, :attr_writer,
        s(:sym, :ignore_dependencies)),
      s(:send, nil, :attr_writer,
        s(:sym, :format_executable)),
      s(:send, nil, :attr_writer,
        s(:sym, :security_policy)),
      s(:send, nil, :attr_writer,
        s(:sym, :wrappers)))),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :InstallerTestCase),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@spec,
            s(:block,
              s(:send, nil, :quick_gem,
                s(:str, "a")),
              s(:args,
                s(:arg, :spec)),
              s(:send, nil, :util_make_exec,
                s(:lvar, :spec)))),
          s(:ivasgn, :@user_spec,
            s(:block,
              s(:send, nil, :quick_gem,
                s(:str, "b")),
              s(:args,
                s(:arg, :spec)),
              s(:send, nil, :util_make_exec,
                s(:lvar, :spec)))),
          s(:send, nil, :util_build_gem,
            s(:ivar, :@spec)),
          s(:send, nil, :util_build_gem,
            s(:ivar, :@user_spec)),
          s(:ivasgn, :@gem,
            s(:send,
              s(:ivar, :@spec), :cache_file)),
          s(:ivasgn, :@user_gem,
            s(:send,
              s(:ivar, :@user_spec), :cache_file)),
          s(:ivasgn, :@installer,
            s(:send, nil, :util_installer,
              s(:ivar, :@spec),
              s(:ivar, :@gemhome))),
          s(:ivasgn, :@user_installer,
            s(:send, nil, :util_installer,
              s(:ivar, :@user_spec),
              s(:send,
                s(:const, nil, :Gem), :user_dir),
              s(:sym, :user))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Installer), :path_warning=,
            s(:false)))),
      s(:def, :util_gem_bindir,
        s(:args,
          s(:optarg, :spec,
            s(:ivar, :@spec))),
        s(:send,
          s(:lvar, :spec), :bin_dir)),
      s(:def, :util_gem_dir,
        s(:args,
          s(:optarg, :spec,
            s(:ivar, :@spec))),
        s(:send,
          s(:lvar, :spec), :gem_dir)),
      s(:def, :util_inst_bindir,
        s(:args),
        s(:send,
          s(:const, nil, :File), :join,
          s(:ivar, :@gemhome),
          s(:str, "bin"))),
      s(:def, :util_make_exec,
        s(:args,
          s(:optarg, :spec,
            s(:ivar, :@spec)),
          s(:optarg, :shebang,
            s(:str, "#!/usr/bin/ruby"))),
        s(:begin,
          s(:send,
            s(:lvar, :spec), :executables=,
            s(:array,
              s(:str, "executable"))),
          s(:send,
            s(:send,
              s(:lvar, :spec), :files), :<<,
            s(:str, "bin/executable")),
          s(:lvasgn, :exec_path,
            s(:send,
              s(:lvar, :spec), :bin_file,
              s(:str, "executable"))),
          s(:block,
            s(:send, nil, :write_file,
              s(:lvar, :exec_path)),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:lvar, :shebang))),
          s(:lvasgn, :bin_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "bin"),
              s(:str, "executable"))),
          s(:block,
            s(:send, nil, :write_file,
              s(:lvar, :bin_path)),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:lvar, :shebang))))),
      s(:def, :util_setup_gem,
        s(:args,
          s(:optarg, :ui,
            s(:ivar, :@ui))),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@spec), :files), :<<,
            s(:send,
              s(:const, nil, :File), :join,
              s(:str, "lib"),
              s(:str, "code.rb"))),
          s(:send,
            s(:send,
              s(:ivar, :@spec), :extensions), :<<,
            s(:send,
              s(:const, nil, :File), :join,
              s(:str, "ext"),
              s(:str, "a"),
              s(:str, "mkrf_conf.rb"))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@tempdir)),
            s(:args),
            s(:begin,
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:str, "bin")),
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:str, "lib")),
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:str, "ext"),
                  s(:str, "a"))),
              s(:block,
                s(:send,
                  s(:const, nil, :File), :open,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:str, "bin"),
                    s(:str, "executable")),
                  s(:str, "w")),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:lvar, :f), :puts,
                  s(:str, "raise 'ran executable'"))),
              s(:block,
                s(:send,
                  s(:const, nil, :File), :open,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:str, "lib"),
                    s(:str, "code.rb")),
                  s(:str, "w")),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:lvar, :f), :puts,
                  s(:str, "1"))),
              s(:block,
                s(:send,
                  s(:const, nil, :File), :open,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:str, "ext"),
                    s(:str, "a"),
                    s(:str, "mkrf_conf.rb")),
                  s(:str, "w")),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:lvar, :f), :<<,
                  s(:str, "          File.open 'Rakefile', 'w' do |rf| rf.puts \"task :default\" end\n"))),
              s(:block,
                s(:send, nil, :use_ui,
                  s(:lvar, :ui)),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:const, nil, :FileUtils), :rm_f,
                    s(:ivar, :@gem)),
                  s(:ivasgn, :@gem,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Package), :build,
                      s(:ivar, :@spec))))))),
          s(:ivasgn, :@installer,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Installer), :at,
              s(:ivar, :@gem))))),
      s(:def, :util_installer,
        s(:args,
          s(:arg, :spec),
          s(:arg, :gem_home),
          s(:optarg, :user,
            s(:false))),
        s(:send,
          s(:const,
            s(:const, nil, :Gem), :Installer), :at,
          s(:send,
            s(:lvar, :spec), :cache_file),
          s(:hash,
            s(:pair,
              s(:sym, :install_dir),
              s(:lvar, :gem_home)),
            s(:pair,
              s(:sym, :user_install),
              s(:lvar, :user))))))))
