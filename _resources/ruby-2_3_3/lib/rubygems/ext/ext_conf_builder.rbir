s(:begin,
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Ext), :ExtConfBuilder),
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Ext), :Builder),
    s(:begin,
      s(:casgn, nil, :FileEntry,
        s(:const,
          s(:const, nil, :FileUtils), :Entry_)),
      s(:defs,
        s(:self), :build,
        s(:args,
          s(:arg, :extension),
          s(:arg, :directory),
          s(:arg, :dest_path),
          s(:arg, :results),
          s(:optarg, :args,
            s(:array)),
          s(:optarg, :lib_dir,
            s(:nil))),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :tmp_dest,
              s(:send,
                s(:const, nil, :Dir), :mktmpdir,
                s(:str, ".gem."),
                s(:str, "."))),
            s(:if,
              s(:and,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:send,
                  s(:const, nil, :RUBY_VERSION), :<=,
                  s(:str, "2.0"))), nil,
              s(:lvasgn, :tmp_dest,
                s(:send, nil, :get_relative_path,
                  s(:lvar, :tmp_dest)))),
            s(:lvasgn, :t,
              s(:nil)),
            s(:block,
              s(:send,
                s(:const, nil, :Tempfile), :open,
                s(:array,
                  s(:str, "siteconf"),
                  s(:str, ".rb")),
                s(:str, ".")),
              s(:args,
                s(:arg, :siteconf)),
              s(:begin,
                s(:lvasgn, :t,
                  s(:lvar, :siteconf)),
                s(:send,
                  s(:lvar, :siteconf), :puts,
                  s(:str, "require 'rbconfig'")),
                s(:send,
                  s(:lvar, :siteconf), :puts,
                  s(:dstr,
                    s(:str, "dest_path = "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :tmp_dest), :dump)))),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "sitearchdir"),
                      s(:str, "sitelibdir")), :each),
                  s(:args,
                    s(:arg, :dir)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :siteconf), :puts,
                      s(:dstr,
                        s(:str, "RbConfig::MAKEFILE_CONFIG['"),
                        s(:begin,
                          s(:lvar, :dir)),
                        s(:str, "'] = dest_path"))),
                    s(:send,
                      s(:lvar, :siteconf), :puts,
                      s(:dstr,
                        s(:str, "RbConfig::CONFIG['"),
                        s(:begin,
                          s(:lvar, :dir)),
                        s(:str, "'] = dest_path"))))),
                s(:send,
                  s(:lvar, :siteconf), :flush),
                s(:lvasgn, :destdir,
                  s(:send,
                    s(:const, nil, :ENV), :[],
                    s(:str, "DESTDIR"))),
                s(:kwbegin,
                  s(:ensure,
                    s(:begin,
                      s(:lvasgn, :cmd,
                        s(:send,
                          s(:array,
                            s(:send,
                              s(:const, nil, :Gem), :ruby),
                            s(:str, "-r"),
                            s(:send, nil, :get_relative_path,
                              s(:send,
                                s(:lvar, :siteconf), :path)),
                            s(:send,
                              s(:const, nil, :File), :basename,
                              s(:lvar, :extension)),
                            s(:splat,
                              s(:lvar, :args))), :join,
                          s(:str, " "))),
                      s(:kwbegin,
                        s(:ensure,
                          s(:send, nil, :run,
                            s(:lvar, :cmd),
                            s(:lvar, :results)),
                          s(:begin,
                            s(:if,
                              s(:send,
                                s(:const, nil, :File), :exist?,
                                s(:str, "mkmf.log")),
                              s(:begin,
                                s(:send,
                                  s(:lvar, :results), :<<,
                                  s(:dstr,
                                    s(:str, "To see why this extension failed to compile, please check"),
                                    s(:str, " the mkmf.log which can be found here:\n"))),
                                s(:send,
                                  s(:lvar, :results), :<<,
                                  s(:send,
                                    s(:send,
                                      s(:str, "  "), :+,
                                      s(:send,
                                        s(:const, nil, :File), :join,
                                        s(:lvar, :dest_path),
                                        s(:str, "mkmf.log"))), :+,
                                    s(:str, "\n"))),
                                s(:send,
                                  s(:const, nil, :FileUtils), :mv,
                                  s(:str, "mkmf.log"),
                                  s(:lvar, :dest_path))), nil),
                            s(:send,
                              s(:lvar, :siteconf), :unlink)))),
                      s(:send,
                        s(:const, nil, :ENV), :[]=,
                        s(:str, "DESTDIR"),
                        s(:nil)),
                      s(:send, nil, :make,
                        s(:lvar, :dest_path),
                        s(:lvar, :results)),
                      s(:if,
                        s(:lvar, :tmp_dest),
                        s(:begin,
                          s(:if,
                            s(:and,
                              s(:send,
                                s(:const, nil, :Gem), :install_extension_in_lib),
                              s(:lvar, :lib_dir)),
                            s(:begin,
                              s(:send,
                                s(:const, nil, :FileUtils), :mkdir_p,
                                s(:lvar, :lib_dir)),
                              s(:lvasgn, :entries,
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :Dir), :entries,
                                    s(:lvar, :tmp_dest)), :-,
                                  s(:array,
                                    s(:str, "."),
                                    s(:str, "..")))),
                              s(:lvasgn, :entries,
                                s(:block,
                                  s(:send,
                                    s(:lvar, :entries), :map),
                                  s(:args,
                                    s(:arg, :entry)),
                                  s(:send,
                                    s(:const, nil, :File), :join,
                                    s(:lvar, :tmp_dest),
                                    s(:lvar, :entry)))),
                              s(:send,
                                s(:const, nil, :FileUtils), :cp_r,
                                s(:lvar, :entries),
                                s(:lvar, :lib_dir),
                                s(:hash,
                                  s(:pair,
                                    s(:sym, :remove_destination),
                                    s(:true))))), nil),
                          s(:block,
                            s(:send,
                              s(:send,
                                s(:const, nil, :FileEntry), :new,
                                s(:lvar, :tmp_dest)), :traverse),
                            s(:args,
                              s(:arg, :ent)),
                            s(:begin,
                              s(:lvasgn, :destent,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :ent), :class), :new,
                                  s(:lvar, :dest_path),
                                  s(:send,
                                    s(:lvar, :ent), :rel))),
                              s(:or,
                                s(:send,
                                  s(:lvar, :destent), :exist?),
                                s(:send,
                                  s(:const, nil, :FileUtils), :mv,
                                  s(:send,
                                    s(:lvar, :ent), :path),
                                  s(:send,
                                    s(:lvar, :destent), :path)))))), nil)),
                    s(:send,
                      s(:const, nil, :ENV), :[]=,
                      s(:str, "DESTDIR"),
                      s(:lvar, :destdir)))))),
            s(:if,
              s(:and,
                s(:lvar, :t),
                s(:send,
                  s(:lvar, :t), :path)),
              s(:send,
                s(:lvar, :t), :unlink), nil),
            s(:lvar, :results)),
          s(:if,
            s(:lvar, :tmp_dest),
            s(:send,
              s(:const, nil, :FileUtils), :rm_rf,
              s(:lvar, :tmp_dest)), nil))),
      s(:send, nil, :private),
      s(:defs,
        s(:self), :get_relative_path,
        s(:args,
          s(:arg, :path)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :path), :start_with?,
              s(:send,
                s(:const, nil, :Dir), :pwd)),
            s(:send,
              s(:lvar, :path), :[]=,
              s(:irange,
                s(:int, 0),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Dir), :pwd), :length), :-,
                  s(:int, 1))),
              s(:str, ".")), nil),
          s(:lvar, :path))))))
