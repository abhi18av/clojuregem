s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Ext), :Builder), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:casgn, nil, :CHDIR_MUTEX,
        s(:send,
          s(:const, nil, :Mutex), :new)),
      s(:send, nil, :attr_accessor,
        s(:sym, :build_args)),
      s(:defs,
        s(:self), :class_name,
        s(:args),
        s(:begin,
          s(:send,
            s(:send, nil, :name), :=~,
            s(:regexp,
              s(:str, "Ext::(.*)Builder"),
              s(:regopt))),
          s(:send,
            s(:nth_ref, 1), :downcase))),
      s(:defs,
        s(:self), :make,
        s(:args,
          s(:arg, :dest_path),
          s(:arg, :results)),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:str, "Makefile")), nil,
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Gem), :InstallError),
              s(:str, "Makefile not found"))),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :RbConfig), :CONFIG), :[],
              s(:str, "configure_args")), :=~,
            s(:regexp,
              s(:str, "with-make-prog\\=(\\w+)"),
              s(:regopt))),
          s(:lvasgn, :make_program,
            s(:or,
              s(:or,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "MAKE")),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "make"))),
              s(:nth_ref, 1))),
          s(:if,
            s(:lvar, :make_program), nil,
            s(:lvasgn, :make_program,
              s(:if,
                s(:begin,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "mswin"),
                      s(:regopt)),
                    s(:const, nil, :RUBY_PLATFORM))),
                s(:str, "nmake"),
                s(:str, "make")))),
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "2.0")),
            s(:lvasgn, :destdir,
              s(:send,
                s(:str, "\"DESTDIR=%s\""), :%,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "DESTDIR")))), nil),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "clean"),
                s(:str, ""),
                s(:str, "install")), :each),
            s(:args,
              s(:arg, :target)),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :make_program),
                      s(:lvar, :destdir),
                      s(:lvar, :target)), :join,
                    s(:str, " ")), :rstrip)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :run,
                    s(:lvar, :cmd),
                    s(:lvar, :results),
                    s(:send,
                      s(:dstr,
                        s(:str, "make "),
                        s(:begin,
                          s(:lvar, :target))), :rstrip)),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :Gem), :InstallError)), nil,
                    s(:if,
                      s(:send,
                        s(:lvar, :target), :==,
                        s(:str, "clean")), nil,
                      s(:send, nil, :raise))), nil)))))),
      s(:defs,
        s(:self), :redirector,
        s(:args),
        s(:str, "2>&1")),
      s(:defs,
        s(:self), :run,
        s(:args,
          s(:arg, :command),
          s(:arg, :results),
          s(:optarg, :command_name,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :verbose,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :really_verbose)),
          s(:kwbegin,
            s(:ensure,
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :rubygems_gemdeps),
                    s(:send,
                      s(:const, nil, :ENV), :[]=,
                      s(:str, "RUBYGEMS_GEMDEPS"))),
                  s(:array,
                    s(:send,
                      s(:const, nil, :ENV), :[],
                      s(:str, "RUBYGEMS_GEMDEPS")),
                    s(:nil))),
                s(:if,
                  s(:lvar, :verbose),
                  s(:begin,
                    s(:send, nil, :puts,
                      s(:dstr,
                        s(:str, "current directory: "),
                        s(:begin,
                          s(:send,
                            s(:const, nil, :Dir), :pwd)))),
                    s(:send, nil, :puts,
                      s(:lvar, :command)),
                    s(:send, nil, :system,
                      s(:lvar, :command))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :results), :<<,
                      s(:dstr,
                        s(:str, "current directory: "),
                        s(:begin,
                          s(:send,
                            s(:const, nil, :Dir), :pwd)))),
                    s(:send,
                      s(:lvar, :results), :<<,
                      s(:lvar, :command)),
                    s(:send,
                      s(:lvar, :results), :<<,
                      s(:xstr,
                        s(:begin,
                          s(:lvar, :command)),
                        s(:str, " "),
                        s(:begin,
                          s(:send, nil, :redirector))))))),
              s(:send,
                s(:const, nil, :ENV), :[]=,
                s(:str, "RUBYGEMS_GEMDEPS"),
                s(:lvar, :rubygems_gemdeps)))),
          s(:if,
            s(:send,
              s(:gvar, :$?), :success?), nil,
            s(:begin,
              s(:if,
                s(:lvar, :verbose),
                s(:send,
                  s(:lvar, :results), :<<,
                  s(:str, "Building has failed. See above output for more information on the failure.")), nil),
              s(:lvasgn, :exit_reason,
                s(:if,
                  s(:send,
                    s(:gvar, :$?), :exited?),
                  s(:dstr,
                    s(:str, ", exit code "),
                    s(:begin,
                      s(:send,
                        s(:gvar, :$?), :exitstatus))),
                  s(:if,
                    s(:send,
                      s(:gvar, :$?), :signaled?),
                    s(:dstr,
                      s(:str, ", uncaught signal "),
                      s(:begin,
                        s(:send,
                          s(:gvar, :$?), :termsig))), nil))),
              s(:send, nil, :raise,
                s(:const,
                  s(:const, nil, :Gem), :InstallError),
                s(:dstr,
                  s(:begin,
                    s(:or,
                      s(:lvar, :command_name),
                      s(:send, nil, :class_name))),
                  s(:str, " failed"),
                  s(:begin,
                    s(:lvar, :exit_reason)))))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :spec),
          s(:optarg, :build_args,
            s(:send,
              s(:lvar, :spec), :build_args))),
        s(:begin,
          s(:ivasgn, :@spec,
            s(:lvar, :spec)),
          s(:ivasgn, :@build_args,
            s(:lvar, :build_args)),
          s(:ivasgn, :@gem_dir,
            s(:send,
              s(:lvar, :spec), :full_gem_path)),
          s(:ivasgn, :@ran_rake,
            s(:nil)))),
      s(:def, :builder_for,
        s(:args,
          s(:arg, :extension)),
        s(:case,
          s(:lvar, :extension),
          s(:when,
            s(:regexp,
              s(:str, "extconf"),
              s(:regopt)),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Ext), :ExtConfBuilder)),
          s(:when,
            s(:regexp,
              s(:str, "configure"),
              s(:regopt)),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Ext), :ConfigureBuilder)),
          s(:when,
            s(:regexp,
              s(:str, "rakefile"),
              s(:regopt, :i)),
            s(:regexp,
              s(:str, "mkrf_conf"),
              s(:regopt, :i)),
            s(:begin,
              s(:ivasgn, :@ran_rake,
                s(:true)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Ext), :RakeBuilder))),
          s(:when,
            s(:regexp,
              s(:str, "CMakeLists.txt"),
              s(:regopt)),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Ext), :CmakeBuilder)),
          s(:begin,
            s(:lvasgn, :extension_dir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@gem_dir),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:lvar, :extension)))),
            s(:lvasgn, :message,
              s(:dstr,
                s(:str, "No builder for extension '"),
                s(:begin,
                  s(:lvar, :extension)),
                s(:str, "'"))),
            s(:send, nil, :build_error,
              s(:lvar, :extension_dir),
              s(:lvar, :message))))),
      s(:def, :build_error,
        s(:args,
          s(:arg, :build_dir),
          s(:arg, :output),
          s(:optarg, :backtrace,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :gem_make_out,
            s(:send, nil, :write_gem_make_out,
              s(:lvar, :output))),
          s(:lvasgn, :message,
            s(:dstr,
              s(:str, "ERROR: Failed to build gem native extension.\n"),
              s(:str, "\n"),
              s(:str, "    "),
              s(:begin,
                s(:lvar, :output)),
              s(:str, "\n"),
              s(:str, "\n"),
              s(:str, "Gem files will remain installed in "),
              s(:begin,
                s(:ivar, :@gem_dir)),
              s(:str, " for inspection.\n"),
              s(:str, "Results logged to "),
              s(:begin,
                s(:lvar, :gem_make_out)),
              s(:str, "\n"))),
          s(:send, nil, :raise,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Ext), :BuildError),
            s(:lvar, :message),
            s(:lvar, :backtrace)))),
      s(:def, :build_extension,
        s(:args,
          s(:arg, :extension),
          s(:arg, :dest_path)),
        s(:begin,
          s(:lvasgn, :results,
            s(:array)),
          s(:or_asgn,
            s(:lvasgn, :extension),
            s(:str, "")),
          s(:lvasgn, :extension_dir,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@gem_dir),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:lvar, :extension))))),
          s(:lvasgn, :lib_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:ivar, :@spec), :full_gem_path),
              s(:send,
                s(:send,
                  s(:ivar, :@spec), :raw_require_paths), :first))),
          s(:lvasgn, :builder,
            s(:send, nil, :builder_for,
              s(:lvar, :extension))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send,
                  s(:const, nil, :FileUtils), :mkdir_p,
                  s(:lvar, :dest_path)),
                s(:block,
                  s(:send,
                    s(:const, nil, :CHDIR_MUTEX), :synchronize),
                  s(:args),
                  s(:block,
                    s(:send,
                      s(:const, nil, :Dir), :chdir,
                      s(:lvar, :extension_dir)),
                    s(:args),
                    s(:begin,
                      s(:lvasgn, :results,
                        s(:send,
                          s(:lvar, :builder), :build,
                          s(:lvar, :extension),
                          s(:ivar, :@gem_dir),
                          s(:lvar, :dest_path),
                          s(:lvar, :results),
                          s(:ivar, :@build_args),
                          s(:lvar, :lib_dir))),
                      s(:block,
                        s(:send, nil, :verbose),
                        s(:args),
                        s(:send,
                          s(:lvar, :results), :join,
                          s(:str, "\n")))))),
                s(:send, nil, :write_gem_make_out,
                  s(:send,
                    s(:lvar, :results), :join,
                    s(:str, "\n")))),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:begin,
                  s(:send,
                    s(:lvar, :results), :<<,
                    s(:send,
                      s(:lvar, :e), :message)),
                  s(:send, nil, :build_error,
                    s(:lvar, :extension_dir),
                    s(:send,
                      s(:lvar, :results), :join,
                      s(:str, "\n")),
                    s(:gvar, :$@)))), nil)))),
      s(:def, :build_extensions,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@spec), :extensions), :empty?),
            s(:return), nil),
          s(:if,
            s(:send,
              s(:ivar, :@build_args), :empty?),
            s(:send, nil, :say,
              s(:str, "Building native extensions.  This could take a while...")),
            s(:begin,
              s(:send, nil, :say,
                s(:dstr,
                  s(:str, "Building native extensions with: '"),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@build_args), :join,
                      s(:str, " "))),
                  s(:str, "'"))),
              s(:send, nil, :say,
                s(:str, "This could take a while...")))),
          s(:lvasgn, :dest_path,
            s(:send,
              s(:ivar, :@spec), :extension_dir)),
          s(:send,
            s(:const, nil, :FileUtils), :rm_f,
            s(:send,
              s(:ivar, :@spec), :gem_build_complete_path)),
          s(:ivasgn, :@ran_rake,
            s(:false)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@spec), :extensions), :each),
            s(:args,
              s(:arg, :extension)),
            s(:begin,
              s(:if,
                s(:ivar, :@ran_rake),
                s(:break), nil),
              s(:send, nil, :build_extension,
                s(:lvar, :extension),
                s(:lvar, :dest_path)))),
          s(:send,
            s(:const, nil, :FileUtils), :touch,
            s(:send,
              s(:ivar, :@spec), :gem_build_complete_path)))),
      s(:def, :write_gem_make_out,
        s(:args,
          s(:arg, :output)),
        s(:begin,
          s(:lvasgn, :destination,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:ivar, :@spec), :extension_dir),
              s(:str, "gem_make.out"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:ivar, :@spec), :extension_dir)),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :destination),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:lvar, :output))),
          s(:lvar, :destination))))))
