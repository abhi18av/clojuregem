s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :ActivationRequest), nil,
  s(:begin,
    s(:send, nil, :attr_reader,
      s(:sym, :request)),
    s(:send, nil, :attr_reader,
      s(:sym, :spec)),
    s(:def, :initialize,
      s(:args,
        s(:arg, :spec),
        s(:arg, :request),
        s(:optarg, :others_possible,
          s(:true))),
      s(:begin,
        s(:ivasgn, :@spec,
          s(:lvar, :spec)),
        s(:ivasgn, :@request,
          s(:lvar, :request)),
        s(:ivasgn, :@others_possible,
          s(:lvar, :others_possible)))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:case,
        s(:lvar, :other),
        s(:when,
          s(:const,
            s(:const, nil, :Gem), :Specification),
          s(:send,
            s(:ivar, :@spec), :==,
            s(:lvar, :other))),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :Resolver), :ActivationRequest),
          s(:and,
            s(:send,
              s(:ivar, :@spec), :==,
              s(:send,
                s(:lvar, :other), :spec)),
            s(:send,
              s(:ivar, :@request), :==,
              s(:send,
                s(:lvar, :other), :request)))),
        s(:false))),
    s(:def, :development?,
      s(:args),
      s(:send,
        s(:ivar, :@request), :development?)),
    s(:def, :download,
      s(:args,
        s(:arg, :path)),
      s(:begin,
        s(:send,
          s(:const, nil, :Gem), :ensure_gem_subdirectories,
          s(:lvar, :path)),
        s(:if,
          s(:send,
            s(:ivar, :@spec), :respond_to?,
            s(:sym, :sources)),
          s(:begin,
            s(:lvasgn, :exception,
              s(:nil)),
            s(:lvasgn, :path,
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@spec), :sources), :find),
                s(:args,
                  s(:arg, :source)),
                s(:kwbegin,
                  s(:rescue,
                    s(:send,
                      s(:lvar, :source), :download,
                      s(:send, nil, :full_spec),
                      s(:lvar, :path)),
                    s(:resbody,
                      s(:array,
                        s(:lvar, :exception)), nil, nil), nil)))),
            s(:if,
              s(:lvar, :path),
              s(:return,
                s(:lvar, :path)), nil),
            s(:if,
              s(:lvar, :exception),
              s(:send, nil, :raise,
                s(:lvar, :exception)), nil)),
          s(:if,
            s(:send,
              s(:ivar, :@spec), :respond_to?,
              s(:sym, :source)),
            s(:begin,
              s(:lvasgn, :source,
                s(:send,
                  s(:ivar, :@spec), :source)),
              s(:send,
                s(:lvar, :source), :download,
                s(:send, nil, :full_spec),
                s(:lvar, :path))),
            s(:begin,
              s(:lvasgn, :source,
                s(:send,
                  s(:send,
                    s(:const, nil, :Gem), :sources), :first)),
              s(:send,
                s(:lvar, :source), :download,
                s(:send, nil, :full_spec),
                s(:lvar, :path))))))),
    s(:def, :full_name,
      s(:args),
      s(:send,
        s(:ivar, :@spec), :full_name)),
    s(:send, nil, :alias_method,
      s(:sym, :to_s),
      s(:sym, :full_name)),
    s(:def, :full_spec,
      s(:args),
      s(:if,
        s(:send,
          s(:const,
            s(:const, nil, :Gem), :Specification), :===,
          s(:ivar, :@spec)),
        s(:ivar, :@spec),
        s(:send,
          s(:ivar, :@spec), :spec))),
    s(:def, :inspect,
      s(:args),
      s(:begin,
        s(:lvasgn, :others,
          s(:case,
            s(:ivar, :@others_possible),
            s(:when,
              s(:true),
              s(:str, " (others possible)")),
            s(:when,
              s(:false),
              s(:nil)),
            s(:if,
              s(:send,
                s(:ivar, :@others_possible), :empty?), nil,
              s(:begin,
                s(:lvasgn, :others,
                  s(:block,
                    s(:send,
                      s(:ivar, :@others_possible), :map),
                    s(:args,
                      s(:arg, :s)),
                    s(:send,
                      s(:lvar, :s), :full_name))),
                s(:dstr,
                  s(:str, " (others possible: "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :others), :join,
                      s(:str, ", "))),
                  s(:str, ")")))))),
        s(:send,
          s(:str, "#<%s for %p from %s%s>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:ivar, :@spec),
            s(:ivar, :@request),
            s(:lvar, :others))))),
    s(:def, :installed?,
      s(:args),
      s(:case,
        s(:ivar, :@spec),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :Resolver), :VendorSpecification),
          s(:true)),
        s(:begin,
          s(:lvasgn, :this_spec,
            s(:send, nil, :full_spec)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :any?),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :==,
              s(:lvar, :this_spec)))))),
    s(:def, :name,
      s(:args),
      s(:send,
        s(:ivar, :@spec), :name)),
    s(:def, :others_possible?,
      s(:args),
      s(:case,
        s(:ivar, :@others_possible),
        s(:when,
          s(:true),
          s(:false),
          s(:ivar, :@others_possible)),
        s(:send,
          s(:send,
            s(:ivar, :@others_possible), :empty?), :!))),
    s(:def, :parent,
      s(:args),
      s(:send,
        s(:ivar, :@request), :requester)),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:str, "[Activation request"),
          s(:str, "]")),
        s(:args),
        s(:begin,
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :pp,
            s(:ivar, :@spec)),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:str, " for ")),
          s(:send,
            s(:lvar, :q), :pp,
            s(:ivar, :@request)),
          s(:case,
            s(:ivar, :@others_possible),
            s(:when,
              s(:false), nil),
            s(:when,
              s(:true),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :breakable),
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, "others possible")))),
            s(:if,
              s(:send,
                s(:ivar, :@others_possible), :empty?), nil,
              s(:begin,
                s(:send,
                  s(:lvar, :q), :breakable),
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, "others ")),
                s(:send,
                  s(:lvar, :q), :pp,
                  s(:block,
                    s(:send,
                      s(:ivar, :@others_possible), :map),
                    s(:args,
                      s(:arg, :s)),
                    s(:send,
                      s(:lvar, :s), :full_name))))))))),
    s(:def, :version,
      s(:args),
      s(:send,
        s(:ivar, :@spec), :version))))
