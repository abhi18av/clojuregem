s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Stats), nil,
  s(:begin,
    s(:def, :initialize,
      s(:args),
      s(:begin,
        s(:ivasgn, :@max_depth,
          s(:int, 0)),
        s(:ivasgn, :@max_requirements,
          s(:int, 0)),
        s(:ivasgn, :@requirements,
          s(:int, 0)),
        s(:ivasgn, :@backtracking,
          s(:int, 0)),
        s(:ivasgn, :@iterations,
          s(:int, 0)))),
    s(:def, :record_depth,
      s(:args,
        s(:arg, :stack)),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :stack), :size), :>,
          s(:ivar, :@max_depth)),
        s(:ivasgn, :@max_depth,
          s(:send,
            s(:lvar, :stack), :size)), nil)),
    s(:def, :record_requirements,
      s(:args,
        s(:arg, :reqs)),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :reqs), :size), :>,
          s(:ivar, :@max_requirements)),
        s(:ivasgn, :@max_requirements,
          s(:send,
            s(:lvar, :reqs), :size)), nil)),
    s(:def, :requirement!,
      s(:args),
      s(:op_asgn,
        s(:ivasgn, :@requirements), :+,
        s(:int, 1))),
    s(:def, :backtracking!,
      s(:args),
      s(:op_asgn,
        s(:ivasgn, :@backtracking), :+,
        s(:int, 1))),
    s(:def, :iteration!,
      s(:args),
      s(:op_asgn,
        s(:ivasgn, :@iterations), :+,
        s(:int, 1))),
    s(:casgn, nil, :PATTERN,
      s(:str, "%20s: %d\n")),
    s(:def, :display,
      s(:args),
      s(:begin,
        s(:send,
          s(:gvar, :$stdout), :puts,
          s(:str, "=== Resolver Statistics ===")),
        s(:send,
          s(:gvar, :$stdout), :printf,
          s(:const, nil, :PATTERN),
          s(:str, "Max Depth"),
          s(:ivar, :@max_depth)),
        s(:send,
          s(:gvar, :$stdout), :printf,
          s(:const, nil, :PATTERN),
          s(:str, "Total Requirements"),
          s(:ivar, :@requirements)),
        s(:send,
          s(:gvar, :$stdout), :printf,
          s(:const, nil, :PATTERN),
          s(:str, "Max Requirements"),
          s(:ivar, :@max_requirements)),
        s(:send,
          s(:gvar, :$stdout), :printf,
          s(:const, nil, :PATTERN),
          s(:str, "Backtracking #"),
          s(:ivar, :@backtracking)),
        s(:send,
          s(:gvar, :$stdout), :printf,
          s(:const, nil, :PATTERN),
          s(:str, "Iteration #"),
          s(:ivar, :@iterations))))))
