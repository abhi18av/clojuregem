s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :ComposedSet),
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Set),
  s(:begin,
    s(:send, nil, :attr_reader,
      s(:sym, :sets)),
    s(:def, :initialize,
      s(:args,
        s(:restarg, :sets)),
      s(:begin,
        s(:super),
        s(:ivasgn, :@sets,
          s(:lvar, :sets)))),
    s(:def, :prerelease=,
      s(:args,
        s(:arg, :allow_prerelease)),
      s(:begin,
        s(:zsuper),
        s(:block,
          s(:send,
            s(:send, nil, :sets), :each),
          s(:args,
            s(:arg, :set)),
          s(:send,
            s(:lvar, :set), :prerelease=,
            s(:lvar, :allow_prerelease))))),
    s(:def, :remote=,
      s(:args,
        s(:arg, :remote)),
      s(:begin,
        s(:zsuper),
        s(:block,
          s(:send,
            s(:ivar, :@sets), :each),
          s(:args,
            s(:arg, :set)),
          s(:send,
            s(:lvar, :set), :remote=,
            s(:lvar, :remote))))),
    s(:def, :errors,
      s(:args),
      s(:send,
        s(:ivar, :@errors), :+,
        s(:send,
          s(:block,
            s(:send,
              s(:ivar, :@sets), :map),
            s(:args,
              s(:arg, :set)),
            s(:send,
              s(:lvar, :set), :errors)), :flatten))),
    s(:def, :find_all,
      s(:args,
        s(:arg, :req)),
      s(:send,
        s(:block,
          s(:send,
            s(:ivar, :@sets), :map),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :find_all,
            s(:lvar, :req))), :flatten)),
    s(:def, :prefetch,
      s(:args,
        s(:arg, :reqs)),
      s(:block,
        s(:send,
          s(:ivar, :@sets), :each),
        s(:args,
          s(:arg, :s)),
        s(:send,
          s(:lvar, :s), :prefetch,
          s(:lvar, :reqs))))))
