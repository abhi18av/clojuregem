s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :InstalledSpecification),
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :SpecSpecification),
  s(:begin,
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:and,
          s(:send,
            s(:send,
              s(:self), :class), :===,
            s(:lvar, :other)),
          s(:send,
            s(:ivar, :@set), :==,
            s(:send,
              s(:lvar, :other), :set))),
        s(:send,
          s(:ivar, :@spec), :==,
          s(:send,
            s(:lvar, :other), :spec)))),
    s(:def, :install,
      s(:args,
        s(:optarg, :options,
          s(:hash))),
      s(:yield,
        s(:nil))),
    s(:def, :installable_platform?,
      s(:args),
      s(:begin,
        s(:if,
          s(:send,
            s(:ivar, :@source), :kind_of?,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :SpecificFile)),
          s(:return,
            s(:true)), nil),
        s(:zsuper))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:str, "[InstalledSpecification"),
          s(:str, "]")),
        s(:args),
        s(:begin,
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "name: "),
              s(:begin,
                s(:send, nil, :name)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "version: "),
              s(:begin,
                s(:send, nil, :version)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "platform: "),
              s(:begin,
                s(:send, nil, :platform)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:str, "dependencies:")),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :pp,
            s(:send,
              s(:send, nil, :spec), :dependencies))))),
    s(:def, :source,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@source),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :Source), :Installed), :new)))))
