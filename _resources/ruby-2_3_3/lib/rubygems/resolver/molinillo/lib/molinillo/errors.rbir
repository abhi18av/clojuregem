s(:module,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Molinillo),
  s(:begin,
    s(:class,
      s(:const, nil, :ResolverError),
      s(:const, nil, :StandardError), nil),
    s(:class,
      s(:const, nil, :NoSuchDependencyError),
      s(:const, nil, :ResolverError),
      s(:begin,
        s(:send, nil, :attr_accessor,
          s(:sym, :dependency)),
        s(:send, nil, :attr_accessor,
          s(:sym, :required_by)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :dependency),
            s(:optarg, :required_by,
              s(:array))),
          s(:begin,
            s(:ivasgn, :@dependency,
              s(:lvar, :dependency)),
            s(:ivasgn, :@required_by,
              s(:lvar, :required_by)),
            s(:super))),
        s(:def, :message,
          s(:args),
          s(:begin,
            s(:lvasgn, :sources,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send, nil, :required_by), :map),
                  s(:args,
                    s(:arg, :r)),
                  s(:dstr,
                    s(:str, "`"),
                    s(:begin,
                      s(:lvar, :r)),
                    s(:str, "`"))), :join,
                s(:str, " and "))),
            s(:lvasgn, :message,
              s(:dstr,
                s(:str, "Unable to find a specification for `"),
                s(:begin,
                  s(:send, nil, :dependency)),
                s(:str, "`"))),
            s(:if,
              s(:send,
                s(:lvar, :sources), :empty?), nil,
              s(:send,
                s(:lvar, :message), :<<,
                s(:dstr,
                  s(:str, " depended upon by "),
                  s(:begin,
                    s(:lvar, :sources))))),
            s(:lvar, :message))))),
    s(:class,
      s(:const, nil, :CircularDependencyError),
      s(:const, nil, :ResolverError),
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :dependencies)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :nodes)),
          s(:begin,
            s(:super,
              s(:dstr,
                s(:str, "There is a circular dependency between "),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :nodes), :map,
                      s(:block_pass,
                        s(:sym, :name))), :join,
                    s(:str, " and "))))),
            s(:ivasgn, :@dependencies,
              s(:send,
                s(:send,
                  s(:lvar, :nodes), :map,
                  s(:block_pass,
                    s(:sym, :payload))), :to_set)))))),
    s(:class,
      s(:const, nil, :VersionConflict),
      s(:const, nil, :ResolverError),
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :conflicts)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :conflicts)),
          s(:begin,
            s(:lvasgn, :pairs,
              s(:array)),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :conflicts), :values), :flatten), :map,
                    s(:block_pass,
                      s(:sym, :requirements))), :flatten), :each),
              s(:args,
                s(:arg, :conflicting)),
              s(:block,
                s(:send,
                  s(:lvar, :conflicting), :each),
                s(:args,
                  s(:arg, :source),
                  s(:arg, :conflict_requirements)),
                s(:block,
                  s(:send,
                    s(:lvar, :conflict_requirements), :each),
                  s(:args,
                    s(:arg, :c)),
                  s(:send,
                    s(:lvar, :pairs), :<<,
                    s(:array,
                      s(:lvar, :c),
                      s(:lvar, :source)))))),
            s(:super,
              s(:dstr,
                s(:str, "Unable to satisfy the following requirements:\n\n"),
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:lvar, :pairs), :map),
                        s(:args,
                          s(:arg, :r),
                          s(:arg, :d)),
                        s(:dstr,
                          s(:str, "- `"),
                          s(:begin,
                            s(:lvar, :r)),
                          s(:str, "` required by `"),
                          s(:begin,
                            s(:lvar, :d)),
                          s(:str, "`"))), :join,
                      s(:str, "\n")))))),
            s(:ivasgn, :@conflicts,
              s(:lvar, :conflicts))))))))
