s(:module,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Molinillo),
  s(:module,
    s(:const, nil, :SpecificationProvider),
    s(:begin,
      s(:def, :search_for,
        s(:args,
          s(:arg, :dependency)),
        s(:array)),
      s(:def, :dependencies_for,
        s(:args,
          s(:arg, :specification)),
        s(:array)),
      s(:def, :requirement_satisfied_by?,
        s(:args,
          s(:arg, :requirement),
          s(:arg, :activated),
          s(:arg, :spec)),
        s(:true)),
      s(:def, :name_for,
        s(:args,
          s(:arg, :dependency)),
        s(:send,
          s(:lvar, :dependency), :to_s)),
      s(:def, :name_for_explicit_dependency_source,
        s(:args),
        s(:str, "user-specified dependency")),
      s(:def, :name_for_locking_dependency_source,
        s(:args),
        s(:str, "Lockfile")),
      s(:def, :sort_dependencies,
        s(:args,
          s(:arg, :dependencies),
          s(:arg, :activated),
          s(:arg, :conflicts)),
        s(:block,
          s(:send,
            s(:lvar, :dependencies), :sort_by),
          s(:args,
            s(:arg, :dependency)),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :name_for,
                s(:lvar, :dependency))),
            s(:array,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :activated), :vertex_named,
                    s(:lvar, :name)), :payload),
                s(:int, 0),
                s(:int, 1)),
              s(:if,
                s(:send,
                  s(:lvar, :conflicts), :[],
                  s(:lvar, :name)),
                s(:int, 0),
                s(:int, 1)))))),
      s(:def, :allow_missing?,
        s(:args,
          s(:arg, :dependency)),
        s(:false)))))
