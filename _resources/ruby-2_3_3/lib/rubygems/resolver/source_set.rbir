s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :SourceSet),
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Set),
  s(:begin,
    s(:def, :initialize,
      s(:args),
      s(:begin,
        s(:super),
        s(:ivasgn, :@links,
          s(:hash)),
        s(:ivasgn, :@sets,
          s(:hash)))),
    s(:def, :find_all,
      s(:args,
        s(:arg, :req)),
      s(:if,
        s(:lvasgn, :set,
          s(:send, nil, :get_set,
            s(:send,
              s(:send,
                s(:lvar, :req), :dependency), :name))),
        s(:send,
          s(:lvar, :set), :find_all,
          s(:lvar, :req)),
        s(:array))),
    s(:def, :prefetch,
      s(:args,
        s(:arg, :reqs)),
      s(:block,
        s(:send,
          s(:lvar, :reqs), :each),
        s(:args,
          s(:arg, :req)),
        s(:if,
          s(:lvasgn, :set,
            s(:send, nil, :get_set,
              s(:send,
                s(:send,
                  s(:lvar, :req), :dependency), :name))),
          s(:send,
            s(:lvar, :set), :prefetch,
            s(:lvar, :reqs)), nil))),
    s(:def, :add_source_gem,
      s(:args,
        s(:arg, :name),
        s(:arg, :source)),
      s(:send,
        s(:ivar, :@links), :[]=,
        s(:lvar, :name),
        s(:lvar, :source))),
    s(:send, nil, :private),
    s(:def, :get_set,
      s(:args,
        s(:arg, :name)),
      s(:begin,
        s(:lvasgn, :link,
          s(:send,
            s(:ivar, :@links), :[],
            s(:lvar, :name))),
        s(:if,
          s(:lvar, :link),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@sets), :[],
              s(:lvar, :link)),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Source), :new,
                s(:lvar, :link)), :dependency_resolver_set)), nil)))))
