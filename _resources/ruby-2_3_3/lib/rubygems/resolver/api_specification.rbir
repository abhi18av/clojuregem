s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :APISpecification),
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Specification),
  s(:begin,
    s(:def, :initialize,
      s(:args,
        s(:arg, :set),
        s(:arg, :api_data)),
      s(:begin,
        s(:super),
        s(:ivasgn, :@set,
          s(:lvar, :set)),
        s(:ivasgn, :@name,
          s(:send,
            s(:lvar, :api_data), :[],
            s(:sym, :name))),
        s(:ivasgn, :@version,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Version), :new,
            s(:send,
              s(:lvar, :api_data), :[],
              s(:sym, :number)))),
        s(:ivasgn, :@platform,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Platform), :new,
            s(:send,
              s(:lvar, :api_data), :[],
              s(:sym, :platform)))),
        s(:ivasgn, :@dependencies,
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :api_data), :[],
                s(:sym, :dependencies)), :map),
            s(:args,
              s(:arg, :name),
              s(:arg, :ver)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Dependency), :new,
              s(:lvar, :name),
              s(:send,
                s(:lvar, :ver), :split,
                s(:regexp,
                  s(:str, "\\s*,\\s*"),
                  s(:regopt)))))))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:and,
          s(:and,
            s(:and,
              s(:and,
                s(:send,
                  s(:send,
                    s(:self), :class), :===,
                  s(:lvar, :other)),
                s(:send,
                  s(:ivar, :@set), :==,
                  s(:send,
                    s(:lvar, :other), :set))),
              s(:send,
                s(:ivar, :@name), :==,
                s(:send,
                  s(:lvar, :other), :name))),
            s(:send,
              s(:ivar, :@version), :==,
              s(:send,
                s(:lvar, :other), :version))),
          s(:send,
            s(:ivar, :@platform), :==,
            s(:send,
              s(:lvar, :other), :platform))),
        s(:send,
          s(:ivar, :@dependencies), :==,
          s(:send,
            s(:lvar, :other), :dependencies)))),
    s(:def, :fetch_development_dependencies,
      s(:args),
      s(:begin,
        s(:lvasgn, :spec,
          s(:send,
            s(:send, nil, :source), :fetch_spec,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :NameTuple), :new,
              s(:ivar, :@name),
              s(:ivar, :@version),
              s(:ivar, :@platform)))),
        s(:ivasgn, :@dependencies,
          s(:send,
            s(:lvar, :spec), :dependencies)))),
    s(:def, :installable_platform?,
      s(:args),
      s(:send,
        s(:const,
          s(:const, nil, :Gem), :Platform), :match,
        s(:ivar, :@platform))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:str, "[APISpecification"),
          s(:str, "]")),
        s(:args),
        s(:begin,
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "name: "),
              s(:begin,
                s(:send, nil, :name)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "version: "),
              s(:begin,
                s(:send, nil, :version)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "platform: "),
              s(:begin,
                s(:send, nil, :platform)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:str, "dependencies:")),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :pp,
            s(:ivar, :@dependencies)),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "set uri: "),
              s(:begin,
                s(:send,
                  s(:ivar, :@set), :dep_uri))))))),
    s(:def, :spec,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@spec),
        s(:kwbegin,
          s(:lvasgn, :tuple,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :NameTuple), :new,
              s(:ivar, :@name),
              s(:ivar, :@version),
              s(:ivar, :@platform))),
          s(:send,
            s(:send, nil, :source), :fetch_spec,
            s(:lvar, :tuple))))),
    s(:def, :source,
      s(:args),
      s(:send,
        s(:ivar, :@set), :source))))
