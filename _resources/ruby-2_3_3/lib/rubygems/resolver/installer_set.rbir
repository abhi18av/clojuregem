s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :InstallerSet),
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Resolver), :Set),
  s(:begin,
    s(:send, nil, :attr_reader,
      s(:sym, :always_install)),
    s(:send, nil, :attr_accessor,
      s(:sym, :ignore_dependencies)),
    s(:send, nil, :attr_accessor,
      s(:sym, :ignore_installed)),
    s(:send, nil, :attr_reader,
      s(:sym, :remote_set)),
    s(:def, :initialize,
      s(:args,
        s(:arg, :domain)),
      s(:begin,
        s(:super),
        s(:ivasgn, :@domain,
          s(:lvar, :domain)),
        s(:ivasgn, :@remote,
          s(:send, nil, :consider_remote?)),
        s(:ivasgn, :@f,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :SpecFetcher), :fetcher)),
        s(:ivasgn, :@always_install,
          s(:array)),
        s(:ivasgn, :@ignore_dependencies,
          s(:false)),
        s(:ivasgn, :@ignore_installed,
          s(:false)),
        s(:ivasgn, :@local,
          s(:hash)),
        s(:ivasgn, :@remote_set,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :BestSet), :new)),
        s(:ivasgn, :@specs,
          s(:hash)))),
    s(:def, :add_always_install,
      s(:args,
        s(:arg, :dependency)),
      s(:begin,
        s(:lvasgn, :request,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
            s(:lvar, :dependency),
            s(:nil))),
        s(:lvasgn, :found,
          s(:send, nil, :find_all,
            s(:lvar, :request))),
        s(:if,
          s(:send,
            s(:lvar, :dependency), :prerelease?), nil,
          s(:block,
            s(:send,
              s(:lvar, :found), :delete_if),
            s(:args,
              s(:arg, :s)),
            s(:and,
              s(:send,
                s(:send,
                  s(:lvar, :s), :version), :prerelease?),
              s(:send,
                s(:send,
                  s(:lvar, :s), :local?), :!)))),
        s(:lvasgn, :found,
          s(:block,
            s(:send,
              s(:lvar, :found), :select),
            s(:args,
              s(:arg, :s)),
            s(:or,
              s(:or,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Source), :SpecificFile), :===,
                  s(:send,
                    s(:lvar, :s), :source)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY), :==,
                  s(:send,
                    s(:lvar, :s), :platform))),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :local), :===,
                s(:send,
                  s(:lvar, :s), :platform))))),
        s(:if,
          s(:send,
            s(:lvar, :found), :empty?),
          s(:begin,
            s(:lvasgn, :exc,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :UnsatisfiableDependencyError), :new,
                s(:lvar, :request))),
            s(:send,
              s(:lvar, :exc), :errors=,
              s(:send, nil, :errors)),
            s(:send, nil, :raise,
              s(:lvar, :exc))), nil),
        s(:lvasgn, :newest,
          s(:block,
            s(:send,
              s(:lvar, :found), :max_by),
            s(:args,
              s(:arg, :s)),
            s(:array,
              s(:send,
                s(:lvar, :s), :version),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :s), :platform), :==,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY)),
                s(:int, -1),
                s(:int, 1))))),
        s(:send,
          s(:ivar, :@always_install), :<<,
          s(:send,
            s(:lvar, :newest), :spec)))),
    s(:def, :add_local,
      s(:args,
        s(:arg, :dep_name),
        s(:arg, :spec),
        s(:arg, :source)),
      s(:send,
        s(:ivar, :@local), :[]=,
        s(:lvar, :dep_name),
        s(:array,
          s(:lvar, :spec),
          s(:lvar, :source)))),
    s(:def, :consider_local?,
      s(:args),
      s(:or,
        s(:send,
          s(:ivar, :@domain), :==,
          s(:sym, :both)),
        s(:send,
          s(:ivar, :@domain), :==,
          s(:sym, :local)))),
    s(:def, :consider_remote?,
      s(:args),
      s(:or,
        s(:send,
          s(:ivar, :@domain), :==,
          s(:sym, :both)),
        s(:send,
          s(:ivar, :@domain), :==,
          s(:sym, :remote)))),
    s(:def, :errors,
      s(:args),
      s(:send,
        s(:ivar, :@errors), :+,
        s(:send,
          s(:ivar, :@remote_set), :errors))),
    s(:def, :find_all,
      s(:args,
        s(:arg, :req)),
      s(:begin,
        s(:lvasgn, :res,
          s(:array)),
        s(:lvasgn, :dep,
          s(:send,
            s(:lvar, :req), :dependency)),
        s(:if,
          s(:and,
            s(:ivar, :@ignore_dependencies),
            s(:block,
              s(:send,
                s(:ivar, :@always_install), :none?),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:lvar, :dep), :match?,
                s(:lvar, :spec)))),
          s(:return,
            s(:lvar, :res)), nil),
        s(:lvasgn, :name,
          s(:send,
            s(:lvar, :dep), :name)),
        s(:if,
          s(:ivar, :@ignore_installed), nil,
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :dep), :matching_specs), :each),
            s(:args,
              s(:arg, :gemspec)),
            s(:begin,
              s(:if,
                s(:block,
                  s(:send,
                    s(:ivar, :@always_install), :any?),
                  s(:args,
                    s(:arg, :spec)),
                  s(:send,
                    s(:send,
                      s(:lvar, :spec), :name), :==,
                    s(:send,
                      s(:lvar, :gemspec), :name))),
                s(:next), nil),
              s(:send,
                s(:lvar, :res), :<<,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :InstalledSpecification), :new,
                  s(:self),
                  s(:lvar, :gemspec)))))),
        s(:if,
          s(:send, nil, :consider_local?),
          s(:begin,
            s(:lvasgn, :matching_local,
              s(:block,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:ivar, :@local), :values), :select),
                    s(:args,
                      s(:arg, :spec),
                      s(:arg, :_)),
                    s(:send,
                      s(:lvar, :req), :match?,
                      s(:lvar, :spec))), :map),
                s(:args,
                  s(:arg, :spec),
                  s(:arg, :source)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :LocalSpecification), :new,
                  s(:self),
                  s(:lvar, :spec),
                  s(:lvar, :source)))),
            s(:send,
              s(:lvar, :res), :concat,
              s(:lvar, :matching_local)),
            s(:lvasgn, :local_source,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Source), :Local), :new)),
            s(:if,
              s(:lvasgn, :local_spec,
                s(:send,
                  s(:lvar, :local_source), :find_gem,
                  s(:lvar, :name),
                  s(:send,
                    s(:lvar, :dep), :requirement))),
              s(:send,
                s(:lvar, :res), :<<,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
                  s(:self),
                  s(:send,
                    s(:lvar, :local_spec), :name),
                  s(:send,
                    s(:lvar, :local_spec), :version),
                  s(:lvar, :local_source),
                  s(:send,
                    s(:lvar, :local_spec), :platform))), nil)), nil),
        s(:block,
          s(:send,
            s(:lvar, :res), :delete_if),
          s(:args,
            s(:arg, :spec)),
          s(:and,
            s(:send,
              s(:send,
                s(:lvar, :spec), :version), :prerelease?),
            s(:send,
              s(:send,
                s(:lvar, :dep), :prerelease?), :!))),
        s(:if,
          s(:send, nil, :consider_remote?),
          s(:send,
            s(:lvar, :res), :concat,
            s(:send,
              s(:ivar, :@remote_set), :find_all,
              s(:lvar, :req))), nil),
        s(:lvar, :res))),
    s(:def, :prefetch,
      s(:args,
        s(:arg, :reqs)),
      s(:if,
        s(:send, nil, :consider_remote?),
        s(:send,
          s(:ivar, :@remote_set), :prefetch,
          s(:lvar, :reqs)), nil)),
    s(:def, :prerelease=,
      s(:args,
        s(:arg, :allow_prerelease)),
      s(:begin,
        s(:zsuper),
        s(:send,
          s(:ivar, :@remote_set), :prerelease=,
          s(:lvar, :allow_prerelease)))),
    s(:def, :inspect,
      s(:args),
      s(:begin,
        s(:lvasgn, :always_install,
          s(:block,
            s(:send,
              s(:ivar, :@always_install), :map),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :full_name))),
        s(:send,
          s(:str, "#<%s domain: %s specs: %p always install: %p>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:ivar, :@domain),
            s(:send,
              s(:ivar, :@specs), :keys),
            s(:lvar, :always_install))))),
    s(:def, :load_spec,
      s(:args,
        s(:arg, :name),
        s(:arg, :ver),
        s(:arg, :platform),
        s(:arg, :source)),
      s(:begin,
        s(:lvasgn, :key,
          s(:dstr,
            s(:begin,
              s(:lvar, :name)),
            s(:str, "-"),
            s(:begin,
              s(:lvar, :ver)),
            s(:str, "-"),
            s(:begin,
              s(:lvar, :platform)))),
        s(:block,
          s(:send,
            s(:ivar, :@specs), :fetch,
            s(:lvar, :key)),
          s(:args),
          s(:begin,
            s(:lvasgn, :tuple,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :NameTuple), :new,
                s(:lvar, :name),
                s(:lvar, :ver),
                s(:lvar, :platform))),
            s(:send,
              s(:ivar, :@specs), :[]=,
              s(:lvar, :key),
              s(:send,
                s(:lvar, :source), :fetch_spec,
                s(:lvar, :tuple))))))),
    s(:def, :local?,
      s(:args,
        s(:arg, :dep_name)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :spec)),
          s(:send,
            s(:ivar, :@local), :[],
            s(:lvar, :dep_name))),
        s(:lvar, :spec))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:str, "[InstallerSet"),
          s(:str, "]")),
        s(:args),
        s(:begin,
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:dstr,
              s(:str, "domain: "),
              s(:begin,
                s(:ivar, :@domain)))),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:str, "specs: ")),
          s(:send,
            s(:lvar, :q), :pp,
            s(:send,
              s(:ivar, :@specs), :keys)),
          s(:send,
            s(:lvar, :q), :breakable),
          s(:send,
            s(:lvar, :q), :text,
            s(:str, "always install: ")),
          s(:send,
            s(:lvar, :q), :pp,
            s(:ivar, :@always_install))))),
    s(:def, :remote=,
      s(:args,
        s(:arg, :remote)),
      s(:case,
        s(:ivar, :@domain),
        s(:when,
          s(:sym, :local),
          s(:if,
            s(:lvar, :remote),
            s(:ivasgn, :@domain,
              s(:sym, :both)), nil)),
        s(:when,
          s(:sym, :remote),
          s(:if,
            s(:lvar, :remote), nil,
            s(:ivasgn, :@domain,
              s(:nil)))),
        s(:when,
          s(:sym, :both),
          s(:if,
            s(:lvar, :remote), nil,
            s(:ivasgn, :@domain,
              s(:sym, :local)))), nil))))
