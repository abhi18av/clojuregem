s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "rubygems/package")),
  s(:send, nil, :require,
    s(:str, "time")),
  s(:kwbegin,
    s(:rescue,
      s(:begin,
        s(:send, nil, :gem,
          s(:str, "builder")),
        s(:send, nil, :require,
          s(:str, "builder/xchar"))),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Indexer), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:send, nil, :attr_accessor,
        s(:sym, :build_modern)),
      s(:send, nil, :attr_reader,
        s(:sym, :dest_directory)),
      s(:send, nil, :attr_reader,
        s(:sym, :dest_specs_index)),
      s(:send, nil, :attr_reader,
        s(:sym, :dest_latest_specs_index)),
      s(:send, nil, :attr_reader,
        s(:sym, :dest_prerelease_specs_index)),
      s(:send, nil, :attr_reader,
        s(:sym, :directory)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :directory),
          s(:optarg, :options,
            s(:hash))),
        s(:begin,
          s(:send, nil, :require,
            s(:str, "fileutils")),
          s(:send, nil, :require,
            s(:str, "tmpdir")),
          s(:send, nil, :require,
            s(:str, "zlib")),
          s(:if,
            s(:defined?,
              s(:const,
                s(:const, nil, :Builder), :XChar)), nil,
            s(:send, nil, :raise,
              s(:send,
                s(:str, "Gem::Indexer requires that the XML Builder library be installed:"), :+,
                s(:str, "\n\tgem install builder")))),
          s(:lvasgn, :options,
            s(:send,
              s(:hash,
                s(:pair,
                  s(:sym, :build_modern),
                  s(:true))), :merge,
              s(:lvar, :options))),
          s(:ivasgn, :@build_modern,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :build_modern))),
          s(:ivasgn, :@dest_directory,
            s(:lvar, :directory)),
          s(:ivasgn, :@directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Dir), :tmpdir),
              s(:dstr,
                s(:str, "gem_generate_index_"),
                s(:begin,
                  s(:gvar, :$$))))),
          s(:lvasgn, :marshal_name,
            s(:dstr,
              s(:str, "Marshal."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version)))),
          s(:ivasgn, :@master_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@directory),
              s(:str, "yaml"))),
          s(:ivasgn, :@marshal_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@directory),
              s(:lvar, :marshal_name))),
          s(:ivasgn, :@quick_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@directory),
              s(:str, "quick"))),
          s(:ivasgn, :@quick_marshal_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@quick_dir),
              s(:lvar, :marshal_name))),
          s(:ivasgn, :@quick_marshal_dir_base,
            s(:send,
              s(:const, nil, :File), :join,
              s(:str, "quick"),
              s(:lvar, :marshal_name))),
          s(:ivasgn, :@quick_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@quick_dir),
              s(:str, "index"))),
          s(:ivasgn, :@latest_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@quick_dir),
              s(:str, "latest_index"))),
          s(:ivasgn, :@specs_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@directory),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version))))),
          s(:ivasgn, :@latest_specs_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@directory),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version))))),
          s(:ivasgn, :@prerelease_specs_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@directory),
              s(:dstr,
                s(:str, "prerelease_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version))))),
          s(:ivasgn, :@dest_specs_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@dest_directory),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version))))),
          s(:ivasgn, :@dest_latest_specs_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@dest_directory),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version))))),
          s(:ivasgn, :@dest_prerelease_specs_index,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@dest_directory),
              s(:dstr,
                s(:str, "prerelease_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version))))),
          s(:ivasgn, :@files,
            s(:array)))),
      s(:def, :build_indices,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:send, nil, :map_gems_to_specs,
              s(:send, nil, :gem_file_list))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Specification), :_resort!,
            s(:lvar, :specs)),
          s(:send, nil, :build_marshal_gemspecs,
            s(:lvar, :specs)),
          s(:if,
            s(:ivar, :@build_modern),
            s(:send, nil, :build_modern_indices,
              s(:lvar, :specs)), nil),
          s(:send, nil, :compress_indices))),
      s(:def, :build_marshal_gemspecs,
        s(:args,
          s(:arg, :specs)),
        s(:begin,
          s(:lvasgn, :count,
            s(:send,
              s(:lvar, :specs), :count)),
          s(:lvasgn, :progress,
            s(:send,
              s(:send, nil, :ui), :progress_reporter,
              s(:lvar, :count),
              s(:dstr,
                s(:str, "Generating Marshal quick index gemspecs for "),
                s(:begin,
                  s(:lvar, :count)),
                s(:str, " gems")),
              s(:str, "Complete"))),
          s(:lvasgn, :files,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :Gem), :time,
              s(:str, "Generated Marshal quick index gemspecs")),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :specs), :each),
                s(:args,
                  s(:arg, :spec)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :spec), :default_gem?),
                    s(:next), nil),
                  s(:lvasgn, :spec_file_name,
                    s(:dstr,
                      s(:begin,
                        s(:send,
                          s(:lvar, :spec), :original_name)),
                      s(:str, ".gemspec.rz"))),
                  s(:lvasgn, :marshal_name,
                    s(:send,
                      s(:const, nil, :File), :join,
                      s(:ivar, :@quick_marshal_dir),
                      s(:lvar, :spec_file_name))),
                  s(:lvasgn, :marshal_zipped,
                    s(:send,
                      s(:const, nil, :Gem), :deflate,
                      s(:send,
                        s(:const, nil, :Marshal), :dump,
                        s(:lvar, :spec)))),
                  s(:block,
                    s(:send, nil, :open,
                      s(:lvar, :marshal_name),
                      s(:str, "wb")),
                    s(:args,
                      s(:arg, :io)),
                    s(:send,
                      s(:lvar, :io), :write,
                      s(:lvar, :marshal_zipped))),
                  s(:send,
                    s(:lvar, :files), :<<,
                    s(:lvar, :marshal_name)),
                  s(:send,
                    s(:lvar, :progress), :updated,
                    s(:send,
                      s(:lvar, :spec), :original_name)))),
              s(:send,
                s(:lvar, :progress), :done))),
          s(:send,
            s(:ivar, :@files), :<<,
            s(:ivar, :@quick_marshal_dir)),
          s(:lvar, :files))),
      s(:def, :build_modern_index,
        s(:args,
          s(:arg, :index),
          s(:arg, :file),
          s(:arg, :name)),
        s(:begin,
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Generating "),
              s(:begin,
                s(:lvar, :name)),
              s(:str, " index"))),
          s(:block,
            s(:send,
              s(:const, nil, :Gem), :time,
              s(:dstr,
                s(:str, "Generated "),
                s(:begin,
                  s(:lvar, :name)),
                s(:str, " index"))),
            s(:args),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :file),
                s(:str, "wb")),
              s(:args,
                s(:arg, :io)),
              s(:begin,
                s(:lvasgn, :specs,
                  s(:block,
                    s(:send,
                      s(:lvar, :index), :map),
                    s(:args,
                      s(:restarg, :spec)),
                    s(:begin,
                      s(:lvasgn, :spec,
                        s(:send,
                          s(:send,
                            s(:lvar, :spec), :flatten), :last)),
                      s(:lvasgn, :platform,
                        s(:send,
                          s(:lvar, :spec), :original_platform)),
                      s(:if,
                        s(:send,
                          s(:const, nil, :String), :===,
                          s(:lvar, :platform)), nil,
                        s(:begin,
                          s(:send, nil, :alert_warning,
                            s(:dstr,
                              s(:str, "Skipping invalid platform in gem: "),
                              s(:begin,
                                s(:send,
                                  s(:lvar, :spec), :full_name)))),
                          s(:next))),
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :platform), :nil?),
                          s(:send,
                            s(:lvar, :platform), :empty?)),
                        s(:lvasgn, :platform,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Gem), :Platform), :RUBY)), nil),
                      s(:array,
                        s(:send,
                          s(:lvar, :spec), :name),
                        s(:send,
                          s(:lvar, :spec), :version),
                        s(:lvar, :platform))))),
                s(:lvasgn, :specs,
                  s(:send, nil, :compact_specs,
                    s(:lvar, :specs))),
                s(:send,
                  s(:const, nil, :Marshal), :dump,
                  s(:lvar, :specs),
                  s(:lvar, :io))))))),
      s(:def, :build_modern_indices,
        s(:args,
          s(:arg, :specs)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :prerelease),
              s(:lvasgn, :released)),
            s(:block,
              s(:send,
                s(:lvar, :specs), :partition),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:send,
                  s(:lvar, :s), :version), :prerelease?))),
          s(:lvasgn, :latest_specs,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :_latest_specs,
              s(:lvar, :specs))),
          s(:send, nil, :build_modern_index,
            s(:send,
              s(:lvar, :released), :sort),
            s(:ivar, :@specs_index),
            s(:str, "specs")),
          s(:send, nil, :build_modern_index,
            s(:send,
              s(:lvar, :latest_specs), :sort),
            s(:ivar, :@latest_specs_index),
            s(:str, "latest specs")),
          s(:send, nil, :build_modern_index,
            s(:send,
              s(:lvar, :prerelease), :sort),
            s(:ivar, :@prerelease_specs_index),
            s(:str, "prerelease specs")),
          s(:op_asgn,
            s(:ivasgn, :@files), :+,
            s(:array,
              s(:ivar, :@specs_index),
              s(:dstr,
                s(:begin,
                  s(:ivar, :@specs_index)),
                s(:str, ".gz")),
              s(:ivar, :@latest_specs_index),
              s(:dstr,
                s(:begin,
                  s(:ivar, :@latest_specs_index)),
                s(:str, ".gz")),
              s(:ivar, :@prerelease_specs_index),
              s(:dstr,
                s(:begin,
                  s(:ivar, :@prerelease_specs_index)),
                s(:str, ".gz")))))),
      s(:def, :map_gems_to_specs,
        s(:args,
          s(:arg, :gems)),
        s(:send,
          s(:block,
            s(:send,
              s(:lvar, :gems), :map),
            s(:args,
              s(:arg, :gemfile)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :size,
                    s(:lvar, :gemfile)), :==,
                  s(:int, 0)),
                s(:begin,
                  s(:send, nil, :alert_warning,
                    s(:dstr,
                      s(:str, "Skipping zero-length gem: "),
                      s(:begin,
                        s(:lvar, :gemfile)))),
                  s(:next)), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:lvasgn, :spec,
                      s(:send,
                        s(:send,
                          s(:const,
                            s(:const, nil, :Gem), :Package), :new,
                          s(:lvar, :gemfile)), :spec)),
                    s(:send,
                      s(:lvar, :spec), :loaded_from=,
                      s(:lvar, :gemfile)),
                    s(:send,
                      s(:lvar, :spec), :abbreviate),
                    s(:send,
                      s(:lvar, :spec), :sanitize),
                    s(:lvar, :spec)),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :SignalException)), nil,
                    s(:begin,
                      s(:send, nil, :alert_error,
                        s(:str, "Received signal, exiting")),
                      s(:send, nil, :raise))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :Exception)),
                    s(:lvasgn, :e),
                    s(:begin,
                      s(:lvasgn, :msg,
                        s(:send,
                          s(:array,
                            s(:dstr,
                              s(:str, "Unable to process "),
                              s(:begin,
                                s(:lvar, :gemfile))),
                            s(:dstr,
                              s(:begin,
                                s(:send,
                                  s(:lvar, :e), :message)),
                              s(:str, " ("),
                              s(:begin,
                                s(:send,
                                  s(:lvar, :e), :class)),
                              s(:str, ")")),
                            s(:dstr,
                              s(:str, "\t"),
                              s(:begin,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :e), :backtrace), :join,
                                  s(:str, "\n\t"))))), :join,
                          s(:str, "\n"))),
                      s(:send, nil, :alert_error,
                        s(:lvar, :msg)))), nil)))), :compact)),
      s(:def, :compress_indices,
        s(:args),
        s(:begin,
          s(:send, nil, :say,
            s(:str, "Compressing indices")),
          s(:block,
            s(:send,
              s(:const, nil, :Gem), :time,
              s(:str, "Compressed indices")),
            s(:args),
            s(:if,
              s(:ivar, :@build_modern),
              s(:begin,
                s(:send, nil, :gzip,
                  s(:ivar, :@specs_index)),
                s(:send, nil, :gzip,
                  s(:ivar, :@latest_specs_index)),
                s(:send, nil, :gzip,
                  s(:ivar, :@prerelease_specs_index))), nil)))),
      s(:def, :compact_specs,
        s(:args,
          s(:arg, :specs)),
        s(:begin,
          s(:lvasgn, :names,
            s(:hash)),
          s(:lvasgn, :versions,
            s(:hash)),
          s(:lvasgn, :platforms,
            s(:hash)),
          s(:block,
            s(:send,
              s(:lvar, :specs), :map),
            s(:args,
              s(:mlhs,
                s(:arg, :name),
                s(:arg, :version),
                s(:arg, :platform))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :names), :include?,
                  s(:lvar, :name)), nil,
                s(:send,
                  s(:lvar, :names), :[]=,
                  s(:lvar, :name),
                  s(:lvar, :name))),
              s(:if,
                s(:send,
                  s(:lvar, :versions), :include?,
                  s(:lvar, :version)), nil,
                s(:send,
                  s(:lvar, :versions), :[]=,
                  s(:lvar, :version),
                  s(:lvar, :version))),
              s(:if,
                s(:send,
                  s(:lvar, :platforms), :include?,
                  s(:lvar, :platform)), nil,
                s(:send,
                  s(:lvar, :platforms), :[]=,
                  s(:lvar, :platform),
                  s(:lvar, :platform))),
              s(:array,
                s(:send,
                  s(:lvar, :names), :[],
                  s(:lvar, :name)),
                s(:send,
                  s(:lvar, :versions), :[],
                  s(:lvar, :version)),
                s(:send,
                  s(:lvar, :platforms), :[],
                  s(:lvar, :platform))))))),
      s(:def, :compress,
        s(:args,
          s(:arg, :filename),
          s(:arg, :extension)),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:lvar, :filename))),
          s(:lvasgn, :zipped,
            s(:send,
              s(:const, nil, :Gem), :deflate,
              s(:lvar, :data))),
          s(:block,
            s(:send, nil, :open,
              s(:dstr,
                s(:begin,
                  s(:lvar, :filename)),
                s(:str, "."),
                s(:begin,
                  s(:lvar, :extension))),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:lvar, :zipped))))),
      s(:def, :gem_file_list,
        s(:args),
        s(:send,
          s(:const, nil, :Dir), :[],
          s(:send,
            s(:const, nil, :File), :join,
            s(:ivar, :@dest_directory),
            s(:str, "gems"),
            s(:str, "*.gem")))),
      s(:def, :generate_index,
        s(:args),
        s(:ensure,
          s(:rescue,
            s(:begin,
              s(:send, nil, :make_temp_directories),
              s(:send, nil, :build_indices),
              s(:send, nil, :install_indices)),
            s(:resbody,
              s(:array,
                s(:const, nil, :SignalException)), nil, nil), nil),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:ivar, :@directory)))),
      s(:def, :gzip,
        s(:args,
          s(:arg, :filename)),
        s(:block,
          s(:send,
            s(:const,
              s(:const, nil, :Zlib), :GzipWriter), :open,
            s(:dstr,
              s(:begin,
                s(:lvar, :filename)),
              s(:str, ".gz"))),
          s(:args,
            s(:arg, :io)),
          s(:send,
            s(:lvar, :io), :write,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:lvar, :filename))))),
      s(:def, :install_indices,
        s(:args),
        s(:begin,
          s(:lvasgn, :verbose,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :really_verbose)),
          s(:if,
            s(:lvar, :verbose),
            s(:send, nil, :say,
              s(:dstr,
                s(:str, "Moving index into production dir "),
                s(:begin,
                  s(:ivar, :@dest_directory)))), nil),
          s(:lvasgn, :files,
            s(:ivar, :@files)),
          s(:if,
            s(:send,
              s(:lvar, :files), :include?,
              s(:ivar, :@quick_dir)),
            s(:send,
              s(:lvar, :files), :delete,
              s(:ivar, :@quick_marshal_dir)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :files), :include?,
                s(:ivar, :@quick_marshal_dir)),
              s(:send,
                s(:send,
                  s(:lvar, :files), :include?,
                  s(:ivar, :@quick_dir)), :!)),
            s(:begin,
              s(:send,
                s(:lvar, :files), :delete,
                s(:ivar, :@quick_marshal_dir)),
              s(:lvasgn, :dst_name,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@dest_directory),
                  s(:ivar, :@quick_marshal_dir_base))),
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:lvar, :dst_name)),
                s(:hash,
                  s(:pair,
                    s(:sym, :verbose),
                    s(:lvar, :verbose)))),
              s(:send,
                s(:const, nil, :FileUtils), :rm_rf,
                s(:lvar, :dst_name),
                s(:hash,
                  s(:pair,
                    s(:sym, :verbose),
                    s(:lvar, :verbose)))),
              s(:send,
                s(:const, nil, :FileUtils), :mv,
                s(:ivar, :@quick_marshal_dir),
                s(:lvar, :dst_name),
                s(:hash,
                  s(:pair,
                    s(:sym, :verbose),
                    s(:lvar, :verbose)),
                  s(:pair,
                    s(:sym, :force),
                    s(:true))))), nil),
          s(:lvasgn, :files,
            s(:block,
              s(:send,
                s(:lvar, :files), :map),
              s(:args,
                s(:arg, :path)),
              s(:send,
                s(:lvar, :path), :sub,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:ivar, :@directory))),
                  s(:str, "/?"),
                  s(:regopt)),
                s(:str, "")))),
          s(:block,
            s(:send,
              s(:lvar, :files), :each),
            s(:args,
              s(:arg, :file)),
            s(:begin,
              s(:lvasgn, :src_name,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@directory),
                  s(:lvar, :file))),
              s(:lvasgn, :dst_name,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@dest_directory),
                  s(:lvar, :file))),
              s(:send,
                s(:const, nil, :FileUtils), :rm_rf,
                s(:lvar, :dst_name),
                s(:hash,
                  s(:pair,
                    s(:sym, :verbose),
                    s(:lvar, :verbose)))),
              s(:send,
                s(:const, nil, :FileUtils), :mv,
                s(:lvar, :src_name),
                s(:ivar, :@dest_directory),
                s(:hash,
                  s(:pair,
                    s(:sym, :verbose),
                    s(:lvar, :verbose)),
                  s(:pair,
                    s(:sym, :force),
                    s(:true)))))))),
      s(:def, :make_temp_directories,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:ivar, :@directory)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@directory),
            s(:hash,
              s(:pair,
                s(:sym, :mode),
                s(:int, 448)))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@quick_marshal_dir)))),
      s(:def, :paranoid,
        s(:args,
          s(:arg, :path),
          s(:arg, :extension)),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:lvar, :path))),
          s(:lvasgn, :compressed_data,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:dstr,
                s(:begin,
                  s(:lvar, :path)),
                s(:str, "."),
                s(:begin,
                  s(:lvar, :extension))))),
          s(:if,
            s(:send,
              s(:lvar, :data), :==,
              s(:send,
                s(:const, nil, :Gem), :inflate,
                s(:lvar, :compressed_data))), nil,
            s(:send, nil, :raise,
              s(:dstr,
                s(:str, "Compressed file "),
                s(:begin,
                  s(:send, nil, :compressed_path)),
                s(:str, " does not match uncompressed file "),
                s(:begin,
                  s(:lvar, :path))))))),
      s(:def, :update_index,
        s(:args),
        s(:begin,
          s(:send, nil, :make_temp_directories),
          s(:lvasgn, :specs_mtime,
            s(:send,
              s(:send,
                s(:const, nil, :File), :stat,
                s(:ivar, :@dest_specs_index)), :mtime)),
          s(:lvasgn, :newest_mtime,
            s(:send,
              s(:const, nil, :Time), :at,
              s(:int, 0))),
          s(:lvasgn, :updated_gems,
            s(:block,
              s(:send,
                s(:send, nil, :gem_file_list), :select),
              s(:args,
                s(:arg, :gem)),
              s(:begin,
                s(:lvasgn, :gem_mtime,
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :stat,
                      s(:lvar, :gem)), :mtime)),
                s(:if,
                  s(:send,
                    s(:lvar, :gem_mtime), :>,
                    s(:lvar, :newest_mtime)),
                  s(:lvasgn, :newest_mtime,
                    s(:lvar, :gem_mtime)), nil),
                s(:send,
                  s(:lvar, :gem_mtime), :>=,
                  s(:lvar, :specs_mtime))))),
          s(:if,
            s(:send,
              s(:lvar, :updated_gems), :empty?),
            s(:begin,
              s(:send, nil, :say,
                s(:str, "No new gems")),
              s(:send, nil, :terminate_interaction,
                s(:int, 0))), nil),
          s(:lvasgn, :specs,
            s(:send, nil, :map_gems_to_specs,
              s(:lvar, :updated_gems))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :prerelease),
              s(:lvasgn, :released)),
            s(:block,
              s(:send,
                s(:lvar, :specs), :partition),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:send,
                  s(:lvar, :s), :version), :prerelease?))),
          s(:lvasgn, :files,
            s(:send, nil, :build_marshal_gemspecs,
              s(:lvar, :specs))),
          s(:block,
            s(:send,
              s(:const, nil, :Gem), :time,
              s(:str, "Updated indexes")),
            s(:args),
            s(:begin,
              s(:send, nil, :update_specs_index,
                s(:lvar, :released),
                s(:ivar, :@dest_specs_index),
                s(:ivar, :@specs_index)),
              s(:send, nil, :update_specs_index,
                s(:lvar, :released),
                s(:ivar, :@dest_latest_specs_index),
                s(:ivar, :@latest_specs_index)),
              s(:send, nil, :update_specs_index,
                s(:lvar, :prerelease),
                s(:ivar, :@dest_prerelease_specs_index),
                s(:ivar, :@prerelease_specs_index)))),
          s(:send, nil, :compress_indices),
          s(:lvasgn, :verbose,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :really_verbose)),
          s(:if,
            s(:lvar, :verbose),
            s(:send, nil, :say,
              s(:dstr,
                s(:str, "Updating production dir "),
                s(:begin,
                  s(:ivar, :@dest_directory)))), nil),
          s(:send,
            s(:lvar, :files), :<<,
            s(:ivar, :@specs_index)),
          s(:send,
            s(:lvar, :files), :<<,
            s(:dstr,
              s(:begin,
                s(:ivar, :@specs_index)),
              s(:str, ".gz"))),
          s(:send,
            s(:lvar, :files), :<<,
            s(:ivar, :@latest_specs_index)),
          s(:send,
            s(:lvar, :files), :<<,
            s(:dstr,
              s(:begin,
                s(:ivar, :@latest_specs_index)),
              s(:str, ".gz"))),
          s(:send,
            s(:lvar, :files), :<<,
            s(:ivar, :@prerelease_specs_index)),
          s(:send,
            s(:lvar, :files), :<<,
            s(:dstr,
              s(:begin,
                s(:ivar, :@prerelease_specs_index)),
              s(:str, ".gz"))),
          s(:lvasgn, :files,
            s(:block,
              s(:send,
                s(:lvar, :files), :map),
              s(:args,
                s(:arg, :path)),
              s(:send,
                s(:lvar, :path), :sub,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:ivar, :@directory))),
                  s(:str, "/?"),
                  s(:regopt)),
                s(:str, "")))),
          s(:block,
            s(:send,
              s(:lvar, :files), :each),
            s(:args,
              s(:arg, :file)),
            s(:begin,
              s(:lvasgn, :src_name,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@directory),
                  s(:lvar, :file))),
              s(:lvasgn, :dst_name,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@dest_directory),
                  s(:lvar, :file))),
              s(:send,
                s(:const, nil, :FileUtils), :mv,
                s(:lvar, :src_name),
                s(:lvar, :dst_name),
                s(:hash,
                  s(:pair,
                    s(:sym, :verbose),
                    s(:lvar, :verbose)),
                  s(:pair,
                    s(:sym, :force),
                    s(:true)))),
              s(:send,
                s(:const, nil, :File), :utime,
                s(:lvar, :newest_mtime),
                s(:lvar, :newest_mtime),
                s(:lvar, :dst_name)))))),
      s(:def, :update_specs_index,
        s(:args,
          s(:arg, :index),
          s(:arg, :source),
          s(:arg, :dest)),
        s(:begin,
          s(:lvasgn, :specs_index,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :read_binary,
                s(:lvar, :source)))),
          s(:block,
            s(:send,
              s(:lvar, :index), :each),
            s(:args,
              s(:arg, :spec)),
            s(:begin,
              s(:lvasgn, :platform,
                s(:send,
                  s(:lvar, :spec), :original_platform)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :platform), :nil?),
                  s(:send,
                    s(:lvar, :platform), :empty?)),
                s(:lvasgn, :platform,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY)), nil),
              s(:send,
                s(:lvar, :specs_index), :<<,
                s(:array,
                  s(:send,
                    s(:lvar, :spec), :name),
                  s(:send,
                    s(:lvar, :spec), :version),
                  s(:lvar, :platform))))),
          s(:lvasgn, :specs_index,
            s(:send, nil, :compact_specs,
              s(:send,
                s(:send,
                  s(:lvar, :specs_index), :uniq), :sort))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :dest),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :specs_index),
              s(:lvar, :io))))))))
