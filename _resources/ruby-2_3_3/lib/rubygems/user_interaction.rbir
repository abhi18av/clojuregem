s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "io/console")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:module,
    s(:const,
      s(:const, nil, :Gem), :DefaultUserInteraction),
    s(:begin,
      s(:ivasgn, :@ui,
        s(:nil)),
      s(:defs,
        s(:self), :ui,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@ui),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :ConsoleUI), :new))),
      s(:defs,
        s(:self), :ui=,
        s(:args,
          s(:arg, :new_ui)),
        s(:ivasgn, :@ui,
          s(:lvar, :new_ui))),
      s(:defs,
        s(:self), :use_ui,
        s(:args,
          s(:arg, :new_ui)),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :old_ui,
              s(:ivar, :@ui)),
            s(:ivasgn, :@ui,
              s(:lvar, :new_ui)),
            s(:yield)),
          s(:ivasgn, :@ui,
            s(:lvar, :old_ui)))),
      s(:def, :ui,
        s(:args),
        s(:send,
          s(:const,
            s(:const, nil, :Gem), :DefaultUserInteraction), :ui)),
      s(:def, :ui=,
        s(:args,
          s(:arg, :new_ui)),
        s(:send,
          s(:const,
            s(:const, nil, :Gem), :DefaultUserInteraction), :ui=,
          s(:lvar, :new_ui))),
      s(:def, :use_ui,
        s(:args,
          s(:arg, :new_ui),
          s(:blockarg, :block)),
        s(:send,
          s(:const,
            s(:const, nil, :Gem), :DefaultUserInteraction), :use_ui,
          s(:lvar, :new_ui),
          s(:block_pass,
            s(:lvar, :block)))))),
  s(:module,
    s(:const,
      s(:const, nil, :Gem), :UserInteraction),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :DefaultUserInteraction)),
      s(:def, :alert,
        s(:args,
          s(:arg, :statement),
          s(:optarg, :question,
            s(:nil))),
        s(:send,
          s(:send, nil, :ui), :alert,
          s(:lvar, :statement),
          s(:lvar, :question))),
      s(:def, :alert_error,
        s(:args,
          s(:arg, :statement),
          s(:optarg, :question,
            s(:nil))),
        s(:send,
          s(:send, nil, :ui), :alert_error,
          s(:lvar, :statement),
          s(:lvar, :question))),
      s(:def, :alert_warning,
        s(:args,
          s(:arg, :statement),
          s(:optarg, :question,
            s(:nil))),
        s(:send,
          s(:send, nil, :ui), :alert_warning,
          s(:lvar, :statement),
          s(:lvar, :question))),
      s(:def, :ask,
        s(:args,
          s(:arg, :question)),
        s(:send,
          s(:send, nil, :ui), :ask,
          s(:lvar, :question))),
      s(:def, :ask_for_password,
        s(:args,
          s(:arg, :prompt)),
        s(:send,
          s(:send, nil, :ui), :ask_for_password,
          s(:lvar, :prompt))),
      s(:def, :ask_yes_no,
        s(:args,
          s(:arg, :question),
          s(:optarg, :default,
            s(:nil))),
        s(:send,
          s(:send, nil, :ui), :ask_yes_no,
          s(:lvar, :question),
          s(:lvar, :default))),
      s(:def, :choose_from_list,
        s(:args,
          s(:arg, :question),
          s(:arg, :list)),
        s(:send,
          s(:send, nil, :ui), :choose_from_list,
          s(:lvar, :question),
          s(:lvar, :list))),
      s(:def, :say,
        s(:args,
          s(:optarg, :statement,
            s(:str, ""))),
        s(:send,
          s(:send, nil, :ui), :say,
          s(:lvar, :statement))),
      s(:def, :terminate_interaction,
        s(:args,
          s(:optarg, :exit_code,
            s(:int, 0))),
        s(:send,
          s(:send, nil, :ui), :terminate_interaction,
          s(:lvar, :exit_code))),
      s(:def, :verbose,
        s(:args,
          s(:optarg, :msg,
            s(:nil))),
        s(:if,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :really_verbose),
          s(:send, nil, :say,
            s(:or,
              s(:lvar, :msg),
              s(:yield))), nil)))),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :StreamUI), nil,
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :ins)),
      s(:send, nil, :attr_reader,
        s(:sym, :outs)),
      s(:send, nil, :attr_reader,
        s(:sym, :errs)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :in_stream),
          s(:arg, :out_stream),
          s(:optarg, :err_stream,
            s(:const, nil, :STDERR)),
          s(:optarg, :usetty,
            s(:true))),
        s(:begin,
          s(:ivasgn, :@ins,
            s(:lvar, :in_stream)),
          s(:ivasgn, :@outs,
            s(:lvar, :out_stream)),
          s(:ivasgn, :@errs,
            s(:lvar, :err_stream)),
          s(:ivasgn, :@usetty,
            s(:lvar, :usetty)))),
      s(:def, :tty?,
        s(:args),
        s(:if,
          s(:and,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :<,
              s(:str, "1.9.3")),
            s(:send,
              s(:const, nil, :RUBY_PLATFORM), :=~,
              s(:regexp,
                s(:str, "mingw|mswin"),
                s(:regopt)))),
          s(:ivar, :@usetty),
          s(:and,
            s(:ivar, :@usetty),
            s(:send,
              s(:ivar, :@ins), :tty?)))),
      s(:def, :backtrace,
        s(:args,
          s(:arg, :exception)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :backtrace), nil,
            s(:return)),
          s(:send,
            s(:ivar, :@errs), :puts,
            s(:dstr,
              s(:str, "\t"),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :exception), :backtrace), :join,
                  s(:str, "\n\t"))))))),
      s(:def, :choose_from_list,
        s(:args,
          s(:arg, :question),
          s(:arg, :list)),
        s(:begin,
          s(:send,
            s(:ivar, :@outs), :puts,
            s(:lvar, :question)),
          s(:block,
            s(:send,
              s(:lvar, :list), :each_with_index),
            s(:args,
              s(:arg, :item),
              s(:arg, :index)),
            s(:send,
              s(:ivar, :@outs), :puts,
              s(:dstr,
                s(:str, " "),
                s(:begin,
                  s(:send,
                    s(:lvar, :index), :+,
                    s(:int, 1))),
                s(:str, ". "),
                s(:begin,
                  s(:lvar, :item))))),
          s(:send,
            s(:ivar, :@outs), :print,
            s(:str, "> ")),
          s(:send,
            s(:ivar, :@outs), :flush),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@ins), :gets)),
          s(:if,
            s(:lvar, :result), nil,
            s(:return,
              s(:nil),
              s(:nil))),
          s(:lvasgn, :result,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :result), :strip), :to_i), :-,
              s(:int, 1))),
          s(:return,
            s(:send,
              s(:lvar, :list), :[],
              s(:lvar, :result)),
            s(:lvar, :result)))),
      s(:def, :ask_yes_no,
        s(:args,
          s(:arg, :question),
          s(:optarg, :default,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send, nil, :tty?), nil,
            s(:if,
              s(:send,
                s(:lvar, :default), :nil?),
              s(:send, nil, :raise,
                s(:const,
                  s(:const, nil, :Gem), :OperationNotSupportedError),
                s(:str, "Not connected to a tty and no default specified")),
              s(:return,
                s(:lvar, :default)))),
          s(:lvasgn, :default_answer,
            s(:case,
              s(:lvar, :default),
              s(:when,
                s(:nil),
                s(:str, "yn")),
              s(:when,
                s(:true),
                s(:str, "Yn")),
              s(:str, "yN"))),
          s(:lvasgn, :result,
            s(:nil)),
          s(:while,
            s(:send,
              s(:lvar, :result), :nil?),
            s(:lvasgn, :result,
              s(:case,
                s(:send, nil, :ask,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :question)),
                    s(:str, " ["),
                    s(:begin,
                      s(:lvar, :default_answer)),
                    s(:str, "]"))),
                s(:when,
                  s(:regexp,
                    s(:str, "^y"),
                    s(:regopt, :i)),
                  s(:true)),
                s(:when,
                  s(:regexp,
                    s(:str, "^n"),
                    s(:regopt, :i)),
                  s(:false)),
                s(:when,
                  s(:regexp,
                    s(:str, "^$"),
                    s(:regopt)),
                  s(:lvar, :default)),
                s(:nil)))),
          s(:return,
            s(:lvar, :result)))),
      s(:def, :ask,
        s(:args,
          s(:arg, :question)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send, nil, :tty?), :!),
            s(:return,
              s(:nil)), nil),
          s(:send,
            s(:ivar, :@outs), :print,
            s(:send,
              s(:lvar, :question), :+,
              s(:str, "  "))),
          s(:send,
            s(:ivar, :@outs), :flush),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@ins), :gets)),
          s(:if,
            s(:lvar, :result),
            s(:send,
              s(:lvar, :result), :chomp!), nil),
          s(:lvar, :result))),
      s(:def, :ask_for_password,
        s(:args,
          s(:arg, :question)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send, nil, :tty?), :!),
            s(:return,
              s(:nil)), nil),
          s(:send,
            s(:ivar, :@outs), :print,
            s(:lvar, :question),
            s(:str, "  ")),
          s(:send,
            s(:ivar, :@outs), :flush),
          s(:lvasgn, :password,
            s(:send, nil, :_gets_noecho)),
          s(:send,
            s(:ivar, :@outs), :puts),
          s(:if,
            s(:lvar, :password),
            s(:send,
              s(:lvar, :password), :chomp!), nil),
          s(:lvar, :password))),
      s(:if,
        s(:send,
          s(:const, nil, :IO), :method_defined?,
          s(:sym, :noecho)),
        s(:def, :_gets_noecho,
          s(:args),
          s(:block,
            s(:send,
              s(:ivar, :@ins), :noecho),
            s(:args),
            s(:send,
              s(:ivar, :@ins), :gets))),
        s(:if,
          s(:send,
            s(:const, nil, :Gem), :win_platform?),
          s(:def, :_gets_noecho,
            s(:args),
            s(:begin,
              s(:send, nil, :require,
                s(:str, "Win32API")),
              s(:lvasgn, :password,
                s(:str, "")),
              s(:while,
                s(:lvasgn, :char,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Win32API), :new,
                      s(:str, "crtdll"),
                      s(:str, "_getch"),
                      s(:array),
                      s(:str, "L")), :Call)),
                s(:begin,
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:lvar, :char), :==,
                        s(:int, 10)),
                      s(:send,
                        s(:lvar, :char), :==,
                        s(:int, 13))),
                    s(:break), nil),
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:lvar, :char), :==,
                        s(:int, 127)),
                      s(:send,
                        s(:lvar, :char), :==,
                        s(:int, 8))),
                    s(:send,
                      s(:lvar, :password), :slice!,
                      s(:int, -1),
                      s(:int, 1)),
                    s(:send,
                      s(:lvar, :password), :<<,
                      s(:send,
                        s(:lvar, :char), :chr))))),
              s(:lvar, :password))),
          s(:def, :_gets_noecho,
            s(:args),
            s(:begin,
              s(:send, nil, :system,
                s(:str, "stty -echo")),
              s(:kwbegin,
                s(:ensure,
                  s(:send,
                    s(:ivar, :@ins), :gets),
                  s(:send, nil, :system,
                    s(:str, "stty echo")))))))),
      s(:def, :say,
        s(:args,
          s(:optarg, :statement,
            s(:str, ""))),
        s(:send,
          s(:ivar, :@outs), :puts,
          s(:lvar, :statement))),
      s(:def, :alert,
        s(:args,
          s(:arg, :statement),
          s(:optarg, :question,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:ivar, :@outs), :puts,
            s(:dstr,
              s(:str, "INFO:  "),
              s(:begin,
                s(:lvar, :statement)))),
          s(:if,
            s(:lvar, :question),
            s(:send, nil, :ask,
              s(:lvar, :question)), nil))),
      s(:def, :alert_warning,
        s(:args,
          s(:arg, :statement),
          s(:optarg, :question,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:ivar, :@errs), :puts,
            s(:dstr,
              s(:str, "WARNING:  "),
              s(:begin,
                s(:lvar, :statement)))),
          s(:if,
            s(:lvar, :question),
            s(:send, nil, :ask,
              s(:lvar, :question)), nil))),
      s(:def, :alert_error,
        s(:args,
          s(:arg, :statement),
          s(:optarg, :question,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:ivar, :@errs), :puts,
            s(:dstr,
              s(:str, "ERROR:  "),
              s(:begin,
                s(:lvar, :statement)))),
          s(:if,
            s(:lvar, :question),
            s(:send, nil, :ask,
              s(:lvar, :question)), nil))),
      s(:def, :debug,
        s(:args,
          s(:arg, :statement)),
        s(:send,
          s(:ivar, :@errs), :puts,
          s(:lvar, :statement))),
      s(:def, :terminate_interaction,
        s(:args,
          s(:optarg, :status,
            s(:int, 0))),
        s(:begin,
          s(:send, nil, :close),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :Gem), :SystemExitException),
            s(:lvar, :status)))),
      s(:def, :close,
        s(:args), nil),
      s(:def, :progress_reporter,
        s(:args,
          s(:restarg, :args)),
        s(:case,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :verbose),
          s(:when,
            s(:nil),
            s(:false),
            s(:send,
              s(:const, nil, :SilentProgressReporter), :new,
              s(:ivar, :@outs),
              s(:splat,
                s(:lvar, :args)))),
          s(:when,
            s(:true),
            s(:send,
              s(:const, nil, :SimpleProgressReporter), :new,
              s(:ivar, :@outs),
              s(:splat,
                s(:lvar, :args)))),
          s(:send,
            s(:const, nil, :VerboseProgressReporter), :new,
            s(:ivar, :@outs),
            s(:splat,
              s(:lvar, :args))))),
      s(:class,
        s(:const, nil, :SilentProgressReporter), nil,
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :count)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :out_stream),
              s(:arg, :size),
              s(:arg, :initial_message),
              s(:optarg, :terminal_message,
                s(:nil))), nil),
          s(:def, :updated,
            s(:args,
              s(:arg, :message)), nil),
          s(:def, :done,
            s(:args), nil))),
      s(:class,
        s(:const, nil, :SimpleProgressReporter), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const,
              s(:const, nil, :Gem), :DefaultUserInteraction)),
          s(:send, nil, :attr_reader,
            s(:sym, :count)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :out_stream),
              s(:arg, :size),
              s(:arg, :initial_message),
              s(:optarg, :terminal_message,
                s(:str, "complete"))),
            s(:begin,
              s(:ivasgn, :@out,
                s(:lvar, :out_stream)),
              s(:ivasgn, :@total,
                s(:lvar, :size)),
              s(:ivasgn, :@count,
                s(:int, 0)),
              s(:ivasgn, :@terminal_message,
                s(:lvar, :terminal_message)),
              s(:send,
                s(:ivar, :@out), :puts,
                s(:lvar, :initial_message)))),
          s(:def, :updated,
            s(:args,
              s(:arg, :message)),
            s(:begin,
              s(:op_asgn,
                s(:ivasgn, :@count), :+,
                s(:int, 1)),
              s(:send,
                s(:ivar, :@out), :print,
                s(:str, ".")),
              s(:send,
                s(:ivar, :@out), :flush))),
          s(:def, :done,
            s(:args),
            s(:send,
              s(:ivar, :@out), :puts,
              s(:dstr,
                s(:str, "\n"),
                s(:begin,
                  s(:ivar, :@terminal_message))))))),
      s(:class,
        s(:const, nil, :VerboseProgressReporter), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const,
              s(:const, nil, :Gem), :DefaultUserInteraction)),
          s(:send, nil, :attr_reader,
            s(:sym, :count)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :out_stream),
              s(:arg, :size),
              s(:arg, :initial_message),
              s(:optarg, :terminal_message,
                s(:str, "complete"))),
            s(:begin,
              s(:ivasgn, :@out,
                s(:lvar, :out_stream)),
              s(:ivasgn, :@total,
                s(:lvar, :size)),
              s(:ivasgn, :@count,
                s(:int, 0)),
              s(:ivasgn, :@terminal_message,
                s(:lvar, :terminal_message)),
              s(:send,
                s(:ivar, :@out), :puts,
                s(:lvar, :initial_message)))),
          s(:def, :updated,
            s(:args,
              s(:arg, :message)),
            s(:begin,
              s(:op_asgn,
                s(:ivasgn, :@count), :+,
                s(:int, 1)),
              s(:send,
                s(:ivar, :@out), :puts,
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@count)),
                  s(:str, "/"),
                  s(:begin,
                    s(:ivar, :@total)),
                  s(:str, ": "),
                  s(:begin,
                    s(:lvar, :message)))))),
          s(:def, :done,
            s(:args),
            s(:send,
              s(:ivar, :@out), :puts,
              s(:ivar, :@terminal_message))))),
      s(:def, :download_reporter,
        s(:args,
          s(:restarg, :args)),
        s(:case,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :verbose),
          s(:when,
            s(:nil),
            s(:false),
            s(:send,
              s(:const, nil, :SilentDownloadReporter), :new,
              s(:ivar, :@outs),
              s(:splat,
                s(:lvar, :args)))),
          s(:send,
            s(:const, nil, :VerboseDownloadReporter), :new,
            s(:ivar, :@outs),
            s(:splat,
              s(:lvar, :args))))),
      s(:class,
        s(:const, nil, :SilentDownloadReporter), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :out_stream),
              s(:restarg, :args)), nil),
          s(:def, :fetch,
            s(:args,
              s(:arg, :filename),
              s(:arg, :filesize)), nil),
          s(:def, :update,
            s(:args,
              s(:arg, :current)), nil),
          s(:def, :done,
            s(:args), nil))),
      s(:class,
        s(:const, nil, :VerboseDownloadReporter), nil,
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :file_name)),
          s(:send, nil, :attr_reader,
            s(:sym, :total_bytes)),
          s(:send, nil, :attr_reader,
            s(:sym, :progress)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :out_stream),
              s(:restarg, :args)),
            s(:begin,
              s(:ivasgn, :@out,
                s(:lvar, :out_stream)),
              s(:ivasgn, :@progress,
                s(:int, 0)))),
          s(:def, :fetch,
            s(:args,
              s(:arg, :file_name),
              s(:arg, :total_bytes)),
            s(:begin,
              s(:ivasgn, :@file_name,
                s(:lvar, :file_name)),
              s(:ivasgn, :@total_bytes,
                s(:send,
                  s(:lvar, :total_bytes), :to_i)),
              s(:ivasgn, :@units,
                s(:if,
                  s(:send,
                    s(:ivar, :@total_bytes), :zero?),
                  s(:str, "B"),
                  s(:str, "%"))),
              s(:send, nil, :update_display,
                s(:false)))),
          s(:def, :update,
            s(:args,
              s(:arg, :bytes)),
            s(:begin,
              s(:lvasgn, :new_progress,
                s(:if,
                  s(:send,
                    s(:ivar, :@units), :==,
                    s(:str, "B")),
                  s(:lvar, :bytes),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :bytes), :to_f), :*,
                            s(:int, 100))), :/,
                        s(:send,
                          s(:send, nil, :total_bytes), :to_f))), :ceil))),
              s(:if,
                s(:send,
                  s(:lvar, :new_progress), :==,
                  s(:ivar, :@progress)),
                s(:return), nil),
              s(:ivasgn, :@progress,
                s(:lvar, :new_progress)),
              s(:send, nil, :update_display))),
          s(:def, :done,
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:ivar, :@units), :==,
                  s(:str, "%")),
                s(:ivasgn, :@progress,
                  s(:int, 100)), nil),
              s(:send, nil, :update_display,
                s(:true),
                s(:true)))),
          s(:send, nil, :private),
          s(:def, :update_display,
            s(:args,
              s(:optarg, :show_progress,
                s(:true)),
              s(:optarg, :new_line,
                s(:false))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:ivar, :@out), :tty?), nil,
                s(:return)),
              s(:if,
                s(:lvar, :show_progress),
                s(:send,
                  s(:ivar, :@out), :print,
                  s(:send,
                    s(:str, "\rFetching: %s (%3d%s)"), :%,
                    s(:array,
                      s(:ivar, :@file_name),
                      s(:ivar, :@progress),
                      s(:ivar, :@units)))),
                s(:send,
                  s(:ivar, :@out), :print,
                  s(:send,
                    s(:str, "Fetching: %s"), :%,
                    s(:ivar, :@file_name)))),
              s(:if,
                s(:lvar, :new_line),
                s(:send,
                  s(:ivar, :@out), :puts), nil))))))),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :ConsoleUI),
    s(:const,
      s(:const, nil, :Gem), :StreamUI),
    s(:def, :initialize,
      s(:args),
      s(:super,
        s(:const, nil, :STDIN),
        s(:const, nil, :STDOUT),
        s(:const, nil, :STDERR),
        s(:true)))),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :SilentUI),
    s(:const,
      s(:const, nil, :Gem), :StreamUI),
    s(:begin,
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :reader),
              s(:lvasgn, :writer)),
            s(:array,
              s(:nil),
              s(:nil))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :reader,
                  s(:send,
                    s(:const, nil, :File), :open,
                    s(:str, "/dev/null"),
                    s(:str, "r"))),
                s(:lvasgn, :writer,
                  s(:send,
                    s(:const, nil, :File), :open,
                    s(:str, "/dev/null"),
                    s(:str, "w")))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :ENOENT)), nil,
                s(:begin,
                  s(:lvasgn, :reader,
                    s(:send,
                      s(:const, nil, :File), :open,
                      s(:str, "nul"),
                      s(:str, "r"))),
                  s(:lvasgn, :writer,
                    s(:send,
                      s(:const, nil, :File), :open,
                      s(:str, "nul"),
                      s(:str, "w"))))), nil)),
          s(:super,
            s(:lvar, :reader),
            s(:lvar, :writer),
            s(:lvar, :writer),
            s(:false)))),
      s(:def, :close,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:ivar, :@ins), :close),
          s(:send,
            s(:ivar, :@outs), :close))),
      s(:def, :download_reporter,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:const, nil, :SilentDownloadReporter), :new,
          s(:ivar, :@outs),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :progress_reporter,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:const, nil, :SilentProgressReporter), :new,
          s(:ivar, :@outs),
          s(:splat,
            s(:lvar, :args)))))))
