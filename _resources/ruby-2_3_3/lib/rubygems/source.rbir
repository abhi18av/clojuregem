s(:begin,
  s(:send, nil, :require,
    s(:str, "uri")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Source), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Comparable)),
      s(:casgn, nil, :FILES,
        s(:hash,
          s(:pair,
            s(:sym, :released),
            s(:str, "specs")),
          s(:pair,
            s(:sym, :latest),
            s(:str, "latest_specs")),
          s(:pair,
            s(:sym, :prerelease),
            s(:str, "prerelease_specs")))),
      s(:send, nil, :attr_reader,
        s(:sym, :uri)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :uri)),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:send,
                  s(:lvar, :uri), :kind_of?,
                  s(:const, nil, :URI)), nil,
                s(:lvasgn, :uri,
                  s(:send,
                    s(:const, nil, :URI), :parse,
                    s(:send,
                      s(:lvar, :uri), :to_s)))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :URI), :InvalidURIError)), nil,
                s(:if,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Source), :==,
                    s(:send,
                      s(:self), :class)),
                  s(:send, nil, :raise), nil)), nil)),
          s(:ivasgn, :@uri,
            s(:lvar, :uri)),
          s(:ivasgn, :@api_uri,
            s(:nil)))),
      s(:def, :api_uri,
        s(:args),
        s(:begin,
          s(:send, nil, :require,
            s(:str, "rubygems/remote_fetcher")),
          s(:or_asgn,
            s(:ivasgn, :@api_uri),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :RemoteFetcher), :fetcher), :api_endpoint,
              s(:send, nil, :uri))))),
      s(:def, :<=>,
        s(:args,
          s(:arg, :other)),
        s(:case,
          s(:lvar, :other),
          s(:when,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Installed),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Local),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Lock),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :SpecificFile),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Git),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Vendor),
            s(:int, -1)),
          s(:when,
            s(:const,
              s(:const, nil, :Gem), :Source),
            s(:begin,
              s(:if,
                s(:send,
                  s(:ivar, :@uri), :!),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :other), :uri), nil,
                    s(:return,
                      s(:int, 0))),
                  s(:return,
                    s(:int, 1))), nil),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :other), :uri), :!),
                s(:return,
                  s(:int, -1)), nil),
              s(:send,
                s(:send,
                  s(:ivar, :@uri), :to_s), :<=>,
                s(:send,
                  s(:send,
                    s(:lvar, :other), :uri), :to_s)))),
          s(:nil))),
      s(:def, :==,
        s(:args,
          s(:arg, :other)),
        s(:and,
          s(:send,
            s(:send,
              s(:self), :class), :===,
            s(:lvar, :other)),
          s(:send,
            s(:ivar, :@uri), :==,
            s(:send,
              s(:lvar, :other), :uri)))),
      s(:send, nil, :alias_method,
        s(:sym, :eql?),
        s(:sym, :==)),
      s(:def, :dependency_resolver_set,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:str, "file"), :==,
              s(:send,
                s(:send, nil, :api_uri), :scheme)),
            s(:return,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Resolver), :IndexSet), :new,
                s(:self))), nil),
          s(:lvasgn, :bundler_api_uri,
            s(:send,
              s(:send, nil, :api_uri), :+,
              s(:str, "./api/v1/dependencies"))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :fetcher,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :RemoteFetcher), :fetcher)),
                s(:lvasgn, :response,
                  s(:send,
                    s(:lvar, :fetcher), :fetch_path,
                    s(:lvar, :bundler_api_uri),
                    s(:nil),
                    s(:true)))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :RemoteFetcher), :FetchError)), nil,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :IndexSet), :new,
                  s(:self))),
              s(:if,
                s(:send,
                  s(:lvar, :response), :respond_to?,
                  s(:sym, :uri)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :APISet), :new,
                  s(:send,
                    s(:lvar, :response), :uri)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :APISet), :new,
                  s(:lvar, :bundler_api_uri))))))),
      s(:def, :hash,
        s(:args),
        s(:send,
          s(:ivar, :@uri), :hash)),
      s(:def, :cache_dir,
        s(:args,
          s(:arg, :uri)),
        s(:begin,
          s(:lvasgn, :escaped_path,
            s(:send,
              s(:send,
                s(:lvar, :uri), :path), :sub,
              s(:regexp,
                s(:str, "^/([a-z]):/"),
                s(:regopt, :i)),
              s(:str, "/\\1-/"))),
          s(:send,
            s(:lvar, :escaped_path), :untaint),
          s(:send,
            s(:const, nil, :File), :join,
            s(:send,
              s(:const, nil, :Gem), :spec_cache_dir),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :uri), :host)),
              s(:str, "%"),
              s(:begin,
                s(:send,
                  s(:lvar, :uri), :port))),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:lvar, :escaped_path))))),
      s(:def, :update_cache?,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@update_cache),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :stat,
                    s(:send,
                      s(:const, nil, :Gem), :user_home)), :uid), :==,
                s(:send,
                  s(:const, nil, :Process), :uid)),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :ENOENT)), nil,
                s(:false)), nil)))),
      s(:def, :fetch_spec,
        s(:args,
          s(:arg, :name_tuple)),
        s(:begin,
          s(:lvasgn, :fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RemoteFetcher), :fetcher)),
          s(:lvasgn, :spec_file_name,
            s(:send,
              s(:lvar, :name_tuple), :spec_name)),
          s(:lvasgn, :uri,
            s(:send,
              s(:send, nil, :api_uri), :+,
              s(:dstr,
                s(:begin,
                  s(:const,
                    s(:const, nil, :Gem), :MARSHAL_SPEC_DIR)),
                s(:begin,
                  s(:lvar, :spec_file_name))))),
          s(:lvasgn, :cache_dir,
            s(:send, nil, :cache_dir,
              s(:lvar, :uri))),
          s(:lvasgn, :local_spec,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :cache_dir),
              s(:lvar, :spec_file_name))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :local_spec)),
            s(:begin,
              s(:lvasgn, :spec,
                s(:send,
                  s(:const, nil, :Gem), :read_binary,
                  s(:lvar, :local_spec))),
              s(:lvasgn, :spec,
                s(:rescue,
                  s(:send,
                    s(:const, nil, :Marshal), :load,
                    s(:lvar, :spec)),
                  s(:resbody, nil, nil,
                    s(:nil)), nil)),
              s(:if,
                s(:lvar, :spec),
                s(:return,
                  s(:lvar, :spec)), nil)), nil),
          s(:send,
            s(:send,
              s(:lvar, :uri), :path), :<<,
            s(:str, ".rz")),
          s(:lvasgn, :spec,
            s(:send,
              s(:lvar, :fetcher), :fetch_path,
              s(:lvar, :uri))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :Gem), :inflate,
              s(:lvar, :spec))),
          s(:if,
            s(:send, nil, :update_cache?),
            s(:begin,
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:lvar, :cache_dir)),
              s(:block,
                s(:send, nil, :open,
                  s(:lvar, :local_spec),
                  s(:str, "wb")),
                s(:args,
                  s(:arg, :io)),
                s(:send,
                  s(:lvar, :io), :write,
                  s(:lvar, :spec)))), nil),
          s(:send,
            s(:const, nil, :Marshal), :load,
            s(:lvar, :spec)))),
      s(:def, :load_specs,
        s(:args,
          s(:arg, :type)),
        s(:begin,
          s(:lvasgn, :file,
            s(:send,
              s(:const, nil, :FILES), :[],
              s(:lvar, :type))),
          s(:lvasgn, :fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RemoteFetcher), :fetcher)),
          s(:lvasgn, :file_name,
            s(:dstr,
              s(:begin,
                s(:lvar, :file)),
              s(:str, "."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version)))),
          s(:lvasgn, :spec_path,
            s(:send,
              s(:send, nil, :api_uri), :+,
              s(:dstr,
                s(:begin,
                  s(:lvar, :file_name)),
                s(:str, ".gz")))),
          s(:lvasgn, :cache_dir,
            s(:send, nil, :cache_dir,
              s(:lvar, :spec_path))),
          s(:lvasgn, :local_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :cache_dir),
              s(:lvar, :file_name))),
          s(:lvasgn, :retried,
            s(:false)),
          s(:if,
            s(:send, nil, :update_cache?),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:lvar, :cache_dir)), nil),
          s(:lvasgn, :spec_dump,
            s(:send,
              s(:lvar, :fetcher), :cache_update_path,
              s(:lvar, :spec_path),
              s(:lvar, :local_file),
              s(:send, nil, :update_cache?))),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :NameTuple), :from_list,
                s(:send,
                  s(:const, nil, :Marshal), :load,
                  s(:lvar, :spec_dump))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :ArgumentError)), nil,
                s(:if,
                  s(:and,
                    s(:send, nil, :update_cache?),
                    s(:send,
                      s(:lvar, :retried), :!)),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :FileUtils), :rm,
                      s(:lvar, :local_file)),
                    s(:lvasgn, :retried,
                      s(:true)),
                    s(:retry)),
                  s(:send, nil, :raise,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Exception), :new,
                      s(:dstr,
                        s(:str, "Invalid spec cache file in "),
                        s(:begin,
                          s(:lvar, :local_file))))))), nil)))),
      s(:def, :download,
        s(:args,
          s(:arg, :spec),
          s(:optarg, :dir,
            s(:send,
              s(:const, nil, :Dir), :pwd))),
        s(:begin,
          s(:lvasgn, :fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RemoteFetcher), :fetcher)),
          s(:send,
            s(:lvar, :fetcher), :download,
            s(:lvar, :spec),
            s(:send,
              s(:send, nil, :api_uri), :to_s),
            s(:lvar, :dir)))),
      s(:def, :pretty_print,
        s(:args,
          s(:arg, :q)),
        s(:block,
          s(:send,
            s(:lvar, :q), :group,
            s(:int, 2),
            s(:str, "[Remote:"),
            s(:str, "]")),
          s(:args),
          s(:begin,
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:send,
                s(:ivar, :@uri), :to_s)),
            s(:if,
              s(:lvasgn, :api,
                s(:send, nil, :api_uri)),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :breakable),
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, "API URI: ")),
                s(:send,
                  s(:lvar, :q), :text,
                  s(:send,
                    s(:lvar, :api), :to_s))), nil)))))),
  s(:send, nil, :require,
    s(:str, "rubygems/source/git")),
  s(:send, nil, :require,
    s(:str, "rubygems/source/installed")),
  s(:send, nil, :require,
    s(:str, "rubygems/source/specific_file")),
  s(:send, nil, :require,
    s(:str, "rubygems/source/local")),
  s(:send, nil, :require,
    s(:str, "rubygems/source/lock")),
  s(:send, nil, :require,
    s(:str, "rubygems/source/vendor")))
