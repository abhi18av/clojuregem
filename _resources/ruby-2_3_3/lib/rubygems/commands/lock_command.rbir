s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :LockCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "lock"),
            s(:str, "Generate a lockdown list of gems"),
            s(:hash,
              s(:pair,
                s(:sym, :strict),
                s(:false)))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-s"),
              s(:str, "--[no-]strict"),
              s(:str, "fail if unable to satisfy a dependency")),
            s(:args,
              s(:arg, :strict),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :strict),
              s(:lvar, :strict))))),
      s(:def, :arguments,
        s(:args),
        s(:str, "GEMNAME       name of gem to lock\nVERSION       version of gem to lock")),
      s(:def, :defaults_str,
        s(:args),
        s(:str, "--no-strict")),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The lock command will generate a list of +gem+ statements that will lock down\n"),
          s(:str, "the versions for the gem given in the command line.  It will specify exact\n"),
          s(:str, "versions in the requirements list to ensure that the gems loaded will always\n"),
          s(:str, "be consistent.  A full recursive search of all effected gems will be\n"),
          s(:str, "generated.\n"),
          s(:str, "\n"),
          s(:str, "Example:\n"),
          s(:str, "\n"),
          s(:str, "  gem lock rails-1.0.0 > lockdown.rb\n"),
          s(:str, "\n"),
          s(:str, "will produce in lockdown.rb:\n"),
          s(:str, "\n"),
          s(:str, "  require \"rubygems\"\n"),
          s(:str, "  gem 'rails', '= 1.0.0'\n"),
          s(:str, "  gem 'rake', '= 0.7.0.1'\n"),
          s(:str, "  gem 'activesupport', '= 1.2.5'\n"),
          s(:str, "  gem 'activerecord', '= 1.13.2'\n"),
          s(:str, "  gem 'actionpack', '= 1.11.2'\n"),
          s(:str, "  gem 'actionmailer', '= 1.1.5'\n"),
          s(:str, "  gem 'actionwebservice', '= 1.0.0'\n"),
          s(:str, "\n"),
          s(:str, "Just load lockdown.rb from your application to ensure that the current\n"),
          s(:str, "versions are loaded.  Make sure that lockdown.rb is loaded *before* any\n"),
          s(:str, "other require statements.\n"),
          s(:str, "\n"),
          s(:str, "Notice that rails 1.0.0 only requires that rake 0.6.2 or better be used.\n"),
          s(:str, "Rake-0.7.0.1 is the most recent version installed that satisfies that, so we\n"),
          s(:str, "lock it down to the exact version.\n"))),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " GEMNAME-VERSION [GEMNAME-VERSION ...]"))),
      s(:def, :complain,
        s(:args,
          s(:arg, :message)),
        s(:if,
          s(:send,
            s(:send, nil, :options), :[],
            s(:sym, :strict)),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :Gem), :Exception),
            s(:lvar, :message)),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "# "),
              s(:begin,
                s(:lvar, :message)))))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:send, nil, :say,
            s(:str, "require 'rubygems'")),
          s(:lvasgn, :locked,
            s(:hash)),
          s(:lvasgn, :pending,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :args))),
          s(:until,
            s(:send,
              s(:lvar, :pending), :empty?),
            s(:begin,
              s(:lvasgn, :full_name,
                s(:send,
                  s(:lvar, :pending), :shift)),
              s(:lvasgn, :spec,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Specification), :load,
                  s(:send, nil, :spec_path,
                    s(:lvar, :full_name)))),
              s(:if,
                s(:send,
                  s(:lvar, :spec), :nil?),
                s(:begin,
                  s(:send, nil, :complain,
                    s(:dstr,
                      s(:str, "Could not find gem "),
                      s(:begin,
                        s(:lvar, :full_name)),
                      s(:str, ", try using the full name"))),
                  s(:next)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :locked), :[],
                  s(:send,
                    s(:lvar, :spec), :name)), nil,
                s(:send, nil, :say,
                  s(:dstr,
                    s(:str, "gem '"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :spec), :name)),
                    s(:str, "', '= "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :spec), :version)),
                    s(:str, "'")))),
              s(:send,
                s(:lvar, :locked), :[]=,
                s(:send,
                  s(:lvar, :spec), :name),
                s(:true)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :spec), :runtime_dependencies), :each),
                s(:args,
                  s(:arg, :dep)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :locked), :[],
                      s(:send,
                        s(:lvar, :dep), :name)),
                    s(:next), nil),
                  s(:lvasgn, :candidates,
                    s(:send,
                      s(:lvar, :dep), :matching_specs)),
                  s(:if,
                    s(:send,
                      s(:lvar, :candidates), :empty?),
                    s(:send, nil, :complain,
                      s(:dstr,
                        s(:str, "Unable to satisfy '"),
                        s(:begin,
                          s(:lvar, :dep)),
                        s(:str, "' from currently installed gems"))),
                    s(:send,
                      s(:lvar, :pending), :<<,
                      s(:send,
                        s(:send,
                          s(:lvar, :candidates), :last), :full_name))))))))),
      s(:def, :spec_path,
        s(:args,
          s(:arg, :gem_full_name)),
        s(:begin,
          s(:lvasgn, :gemspecs,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :path), :map),
              s(:args,
                s(:arg, :path)),
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :path),
                s(:str, "specifications"),
                s(:dstr,
                  s(:begin,
                    s(:lvar, :gem_full_name)),
                  s(:str, ".gemspec"))))),
          s(:block,
            s(:send,
              s(:lvar, :gemspecs), :find),
            s(:args,
              s(:arg, :path)),
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :path))))))))
