s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/local_remote_options")),
  s(:send, nil, :require,
    s(:str, "rubygems/gemcutter_utilities")),
  s(:send, nil, :require,
    s(:str, "rubygems/package")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :PushCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :LocalRemoteOptions)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :GemcutterUtilities)),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The push command uploads a gem to the push server (the default is\n"),
          s(:str, "https://rubygems.org) and adds it to the index.\n"),
          s(:str, "\n"),
          s(:str, "The gem can be removed from the index (but only the index) using the yank\n"),
          s(:str, "command.  For further discussion see the help for the yank command.\n"))),
      s(:def, :arguments,
        s(:args),
        s(:str, "GEM       built gem to push up")),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " GEM"))),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "push"),
            s(:str, "Push a gem up to the gem server"),
            s(:hash,
              s(:pair,
                s(:sym, :host),
                s(:send,
                  s(:self), :host)))),
          s(:send, nil, :add_proxy_option),
          s(:send, nil, :add_key_option),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--host HOST"),
              s(:str, "Push to another gemcutter-compatible host")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :host),
              s(:lvar, :value))),
          s(:ivasgn, :@host,
            s(:nil)))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:ivasgn, :@host,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :host))),
          s(:send, nil, :sign_in,
            s(:ivar, :@host)),
          s(:send, nil, :send_gem,
            s(:send, nil, :get_one_gem_name)))),
      s(:def, :send_gem,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :args,
            s(:array,
              s(:sym, :post),
              s(:str, "api/v1/gems"))),
          s(:lvasgn, :latest_rubygems_version,
            s(:send,
              s(:const, nil, :Gem), :latest_rubygems_version)),
          s(:if,
            s(:and,
              s(:and,
                s(:send,
                  s(:lvar, :latest_rubygems_version), :<,
                  s(:send,
                    s(:const, nil, :Gem), :rubygems_version)),
                s(:send,
                  s(:send,
                    s(:const, nil, :Gem), :rubygems_version), :prerelease?)),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:str, "2.0.0.rc.2")), :!=,
                s(:send,
                  s(:const, nil, :Gem), :rubygems_version))),
            s(:begin,
              s(:send, nil, :alert_error,
                s(:dstr,
                  s(:str, "You are using a beta release of RubyGems ("),
                  s(:begin,
                    s(:const,
                      s(:const, nil, :Gem), :VERSION)),
                  s(:str, ") which is not\n"),
                  s(:str, "allowed to push gems.  Please downgrade or upgrade to a release version.\n"),
                  s(:str, "\n"),
                  s(:str, "The latest released RubyGems version is "),
                  s(:begin,
                    s(:lvar, :latest_rubygems_version)),
                  s(:str, "\n"),
                  s(:str, "\n"),
                  s(:str, "You can upgrade or downgrade to the latest release version with:\n"),
                  s(:str, "\n"),
                  s(:str, "  gem update --system="),
                  s(:begin,
                    s(:lvar, :latest_rubygems_version)),
                  s(:str, "\n"),
                  s(:str, "\n"))),
              s(:send, nil, :terminate_interaction,
                s(:int, 1))), nil),
          s(:lvasgn, :gem_data,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Package), :new,
              s(:lvar, :name))),
          s(:if,
            s(:ivar, :@host), nil,
            s(:ivasgn, :@host,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :gem_data), :spec), :metadata), :[],
                s(:str, "default_gem_server")))),
          s(:send,
            s(:lvar, :args), :<<,
            s(:ivar, :@host)),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :gem_data), :spec), :metadata), :has_key?,
              s(:str, "allowed_push_host")),
            s(:send,
              s(:lvar, :args), :<<,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :gem_data), :spec), :metadata), :[],
                s(:str, "allowed_push_host"))), nil),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Pushing gem to "),
              s(:begin,
                s(:or,
                  s(:ivar, :@host),
                  s(:send,
                    s(:const, nil, :Gem), :host))),
              s(:str, "..."))),
          s(:lvasgn, :response,
            s(:block,
              s(:send, nil, :rubygems_api_request,
                s(:splat,
                  s(:lvar, :args))),
              s(:args,
                s(:arg, :request)),
              s(:begin,
                s(:send,
                  s(:lvar, :request), :body=,
                  s(:send,
                    s(:const, nil, :Gem), :read_binary,
                    s(:lvar, :name))),
                s(:send,
                  s(:lvar, :request), :add_field,
                  s(:str, "Content-Length"),
                  s(:send,
                    s(:send,
                      s(:lvar, :request), :body), :size)),
                s(:send,
                  s(:lvar, :request), :add_field,
                  s(:str, "Content-Type"),
                  s(:str, "application/octet-stream")),
                s(:send,
                  s(:lvar, :request), :add_field,
                  s(:str, "Authorization"),
                  s(:send, nil, :api_key))))),
          s(:send, nil, :with_response,
            s(:lvar, :response)))))))
