s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/remote_fetcher")),
  s(:send, nil, :require,
    s(:str, "rubygems/spec_fetcher")),
  s(:send, nil, :require,
    s(:str, "rubygems/local_remote_options")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :SourcesCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :LocalRemoteOptions)),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:send, nil, :require,
            s(:str, "fileutils")),
          s(:super,
            s(:str, "sources"),
            s(:str, "Manage the sources and cache file RubyGems uses to search for gems")),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-a"),
              s(:str, "--add SOURCE_URI"),
              s(:str, "Add source")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :add),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-l"),
              s(:str, "--list"),
              s(:str, "List sources")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :list),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-r"),
              s(:str, "--remove SOURCE_URI"),
              s(:str, "Remove source")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :remove),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-c"),
              s(:str, "--clear-all"),
              s(:str, "Remove all sources (clear the cache)")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :clear_all),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-u"),
              s(:str, "--update"),
              s(:str, "Update source cache")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :update),
              s(:lvar, :value))),
          s(:send, nil, :add_proxy_option))),
      s(:def, :add_source,
        s(:args,
          s(:arg, :source_uri)),
        s(:begin,
          s(:send, nil, :check_rubygems_https,
            s(:lvar, :source_uri)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:lvar, :source_uri))),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :Gem), :sources), :include?,
                  s(:lvar, :source_uri)),
                s(:send, nil, :say,
                  s(:dstr,
                    s(:str, "source "),
                    s(:begin,
                      s(:lvar, :source_uri)),
                    s(:str, " already present in the cache"))),
                s(:begin,
                  s(:send,
                    s(:lvar, :source), :load_specs,
                    s(:sym, :released)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :Gem), :sources), :<<,
                    s(:lvar, :source)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :Gem), :configuration), :write),
                  s(:send, nil, :say,
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :source_uri)),
                      s(:str, " added to sources"))))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :URI), :Error),
                  s(:const, nil, :ArgumentError)), nil,
                s(:begin,
                  s(:send, nil, :say,
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :source_uri)),
                      s(:str, " is not a URI"))),
                  s(:send, nil, :terminate_interaction,
                    s(:int, 1)))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :RemoteFetcher), :FetchError)),
                s(:lvasgn, :e),
                s(:begin,
                  s(:send, nil, :say,
                    s(:dstr,
                      s(:str, "Error fetching "),
                      s(:begin,
                        s(:lvar, :source_uri)),
                      s(:str, ":\n\t"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :e), :message)))),
                  s(:send, nil, :terminate_interaction,
                    s(:int, 1)))), nil)))),
      s(:def, :check_rubygems_https,
        s(:args,
          s(:arg, :source_uri)),
        s(:begin,
          s(:lvasgn, :uri,
            s(:send, nil, :URI,
              s(:lvar, :source_uri))),
          s(:if,
            s(:and,
              s(:and,
                s(:send,
                  s(:lvar, :uri), :scheme),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :uri), :scheme), :downcase), :==,
                  s(:str, "http"))),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :uri), :host), :downcase), :==,
                s(:str, "rubygems.org"))),
            s(:begin,
              s(:lvasgn, :question,
                s(:send,
                  s(:dstr,
                    s(:str, "https://rubygems.org is recommended for security over "),
                    s(:begin,
                      s(:lvar, :uri)),
                    s(:str, "\n"),
                    s(:str, "\n"),
                    s(:str, "Do you want to add this insecure source?\n")), :chomp)),
              s(:if,
                s(:send, nil, :ask_yes_no,
                  s(:lvar, :question)), nil,
                s(:send, nil, :terminate_interaction,
                  s(:int, 1)))), nil))),
      s(:def, :clear_all,
        s(:args),
        s(:begin,
          s(:lvasgn, :path,
            s(:send,
              s(:const, nil, :Gem), :spec_cache_dir)),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:lvar, :path)),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :path)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :File), :writable?,
                  s(:lvar, :path)),
                s(:send, nil, :say,
                  s(:str, "*** Unable to remove source cache ***")),
                s(:send, nil, :say,
                  s(:str, "*** Unable to remove source cache (write protected) ***"))),
              s(:send, nil, :terminate_interaction,
                s(:int, 1))),
            s(:send, nil, :say,
              s(:str, "*** Removed specs cache ***"))))),
      s(:def, :defaults_str,
        s(:args),
        s(:str, "--list")),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "RubyGems fetches gems from the sources you have configured (stored in your\n"),
          s(:str, "~/.gemrc).\n"),
          s(:str, "\n"),
          s(:str, "The default source is https://rubygems.org, but you may have other sources\n"),
          s(:str, "configured.  This guide will help you update your sources or configure\n"),
          s(:str, "yourself to use your own gem server.\n"),
          s(:str, "\n"),
          s(:str, "Without any arguments the sources lists your currently configured sources:\n"),
          s(:str, "\n"),
          s(:str, "  $ gem sources\n"),
          s(:str, "  *** CURRENT SOURCES ***\n"),
          s(:str, "\n"),
          s(:str, "  https://rubygems.org\n"),
          s(:str, "\n"),
          s(:str, "This may list multiple sources or non-rubygems sources.  You probably\n"),
          s(:str, "configured them before or have an old `~/.gemrc`.  If you have sources you\n"),
          s(:str, "do not recognize you should remove them.\n"),
          s(:str, "\n"),
          s(:str, "RubyGems has been configured to serve gems via the following URLs through\n"),
          s(:str, "its history:\n"),
          s(:str, "\n"),
          s(:str, "* http://gems.rubyforge.org (RubyGems 1.3.6 and earlier)\n"),
          s(:str, "* http://rubygems.org       (RubyGems 1.3.7 through 1.8.25)\n"),
          s(:str, "* https://rubygems.org      (RubyGems 2.0.1 and newer)\n"),
          s(:str, "\n"),
          s(:str, "Since all of these sources point to the same set of gems you only need one\n"),
          s(:str, "of them in your list.  https://rubygems.org is recommended as it brings the\n"),
          s(:str, "protections of an SSL connection to gem downloads.\n"),
          s(:str, "\n"),
          s(:str, "To add a source use the --add argument:\n"),
          s(:str, "\n"),
          s(:str, "    $ gem sources --add https://rubygems.org\n"),
          s(:str, "    https://rubygems.org added to sources\n"),
          s(:str, "\n"),
          s(:str, "RubyGems will check to see if gems can be installed from the source given\n"),
          s(:str, "before it is added.\n"),
          s(:str, "\n"),
          s(:str, "To remove a source use the --remove argument:\n"),
          s(:str, "\n"),
          s(:str, "    $ gem sources --remove http://rubygems.org\n"),
          s(:str, "    http://rubygems.org removed from sources\n"),
          s(:str, "\n"))),
      s(:def, :list,
        s(:args),
        s(:begin,
          s(:send, nil, :say,
            s(:str, "*** CURRENT SOURCES ***")),
          s(:send, nil, :say),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :sources), :each),
            s(:args,
              s(:arg, :src)),
            s(:send, nil, :say,
              s(:lvar, :src))))),
      s(:def, :list?,
        s(:args),
        s(:send,
          s(:begin,
            s(:or,
              s(:or,
                s(:or,
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :add)),
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :clear_all))),
                s(:send,
                  s(:send, nil, :options), :[],
                  s(:sym, :remove))),
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :update)))), :!)),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :clear_all)),
            s(:send, nil, :clear_all), nil),
          s(:lvasgn, :source_uri,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :add))),
          s(:if,
            s(:lvar, :source_uri),
            s(:send, nil, :add_source,
              s(:lvar, :source_uri)), nil),
          s(:lvasgn, :source_uri,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :remove))),
          s(:if,
            s(:lvar, :source_uri),
            s(:send, nil, :remove_source,
              s(:lvar, :source_uri)), nil),
          s(:if,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :update)),
            s(:send, nil, :update), nil),
          s(:if,
            s(:send, nil, :list?),
            s(:send, nil, :list), nil))),
      s(:def, :remove_source,
        s(:args,
          s(:arg, :source_uri)),
        s(:if,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :sources), :include?,
            s(:lvar, :source_uri)),
          s(:begin,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :sources), :delete,
              s(:lvar, :source_uri)),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :write),
            s(:send, nil, :say,
              s(:dstr,
                s(:begin,
                  s(:lvar, :source_uri)),
                s(:str, " removed from sources")))),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "source "),
              s(:begin,
                s(:lvar, :source_uri)),
              s(:str, " not present in cache"))))),
      s(:def, :update,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :sources), :each_source),
            s(:args,
              s(:arg, :src)),
            s(:begin,
              s(:send,
                s(:lvar, :src), :load_specs,
                s(:sym, :released)),
              s(:send,
                s(:lvar, :src), :load_specs,
                s(:sym, :latest)))),
          s(:send, nil, :say,
            s(:str, "source cache successfully updated")))),
      s(:def, :remove_cache_file,
        s(:args,
          s(:arg, :desc),
          s(:arg, :path)),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:lvar, :path)),
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:lvar, :path)), :!),
            s(:send, nil, :say,
              s(:dstr,
                s(:str, "*** Removed "),
                s(:begin,
                  s(:lvar, :desc)),
                s(:str, " source cache ***"))),
            s(:if,
              s(:send,
                s(:send,
                  s(:const, nil, :File), :writable?,
                  s(:lvar, :path)), :!),
              s(:send, nil, :say,
                s(:dstr,
                  s(:str, "*** Unable to remove "),
                  s(:begin,
                    s(:lvar, :desc)),
                  s(:str, " source cache (write protected) ***"))),
              s(:send, nil, :say,
                s(:dstr,
                  s(:str, "*** Unable to remove "),
                  s(:begin,
                    s(:lvar, :desc)),
                  s(:str, " source cache ***"))))))))))
