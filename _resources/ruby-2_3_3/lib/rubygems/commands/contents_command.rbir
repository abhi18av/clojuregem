s(:begin,
  s(:send, nil, :require,
    s(:str, "English")),
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/version_option")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :ContentsCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :VersionOption)),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "contents"),
            s(:str, "Display the contents of the installed gems"),
            s(:hash,
              s(:pair,
                s(:sym, :specdirs),
                s(:array)),
              s(:pair,
                s(:sym, :lib_only),
                s(:false)),
              s(:pair,
                s(:sym, :prefix),
                s(:true)),
              s(:pair,
                s(:sym, :show_install_dir),
                s(:false)))),
          s(:send, nil, :add_version_option),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--all"),
              s(:str, "Contents for all gems")),
            s(:args,
              s(:arg, :all),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :all),
              s(:lvar, :all))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-s"),
              s(:str, "--spec-dir a,b,c"),
              s(:const, nil, :Array),
              s(:str, "Search for gems under specific paths")),
            s(:args,
              s(:arg, :spec_dirs),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :specdirs),
              s(:lvar, :spec_dirs))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-l"),
              s(:str, "--[no-]lib-only"),
              s(:str, "Only return files in the Gem's lib_dirs")),
            s(:args,
              s(:arg, :lib_only),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :lib_only),
              s(:lvar, :lib_only))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--[no-]prefix"),
              s(:str, "Don't include installed path prefix")),
            s(:args,
              s(:arg, :prefix),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :prefix),
              s(:lvar, :prefix))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--[no-]show-install-dir"),
              s(:str, "Show only the gem install dir")),
            s(:args,
              s(:arg, :show),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :show_install_dir),
              s(:lvar, :show))),
          s(:ivasgn, :@path_kind,
            s(:nil)),
          s(:ivasgn, :@spec_dirs,
            s(:nil)),
          s(:ivasgn, :@version,
            s(:nil)))),
      s(:def, :arguments,
        s(:args),
        s(:str, "GEMNAME       name of gem to list contents for")),
      s(:def, :defaults_str,
        s(:args),
        s(:str, "--no-lib-only --prefix")),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The contents command lists the files in an installed gem.  The listing can\n"),
          s(:str, "be given as full file names, file names without the installed directory\n"),
          s(:str, "prefix or only the files that are requireable.\n"))),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " GEMNAME [GEMNAME ...]"))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:ivasgn, :@version,
            s(:or,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :version)),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Requirement), :default))),
          s(:ivasgn, :@spec_dirs,
            s(:send, nil, :specification_directories)),
          s(:ivasgn, :@path_kind,
            s(:send, nil, :path_description,
              s(:ivar, :@spec_dirs))),
          s(:lvasgn, :names,
            s(:send, nil, :gem_names)),
          s(:block,
            s(:send,
              s(:lvar, :names), :each),
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :found,
                s(:if,
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :show_install_dir)),
                  s(:send, nil, :gem_install_dir,
                    s(:lvar, :name)),
                  s(:send, nil, :gem_contents,
                    s(:lvar, :name)))),
              s(:if,
                s(:or,
                  s(:lvar, :found),
                  s(:send,
                    s(:send,
                      s(:lvar, :names), :length), :>,
                    s(:int, 1))), nil,
                s(:send, nil, :terminate_interaction,
                  s(:int, 1))))))),
      s(:def, :files_in,
        s(:args,
          s(:arg, :spec)),
        s(:if,
          s(:send,
            s(:lvar, :spec), :default_gem?),
          s(:send, nil, :files_in_default_gem,
            s(:lvar, :spec)),
          s(:send, nil, :files_in_gem,
            s(:lvar, :spec)))),
      s(:def, :files_in_gem,
        s(:args,
          s(:arg, :spec)),
        s(:begin,
          s(:lvasgn, :gem_path,
            s(:send,
              s(:lvar, :spec), :full_gem_path)),
          s(:if,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :lib_only)),
            s(:lvasgn, :extra,
              s(:dstr,
                s(:str, "/{"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :spec), :require_paths), :join,
                    s(:str, ","))),
                s(:str, "}"))), nil),
          s(:lvasgn, :glob,
            s(:dstr,
              s(:begin,
                s(:lvar, :gem_path)),
              s(:begin,
                s(:lvar, :extra)),
              s(:str, "/**/*"))),
          s(:lvasgn, :prefix_re,
            s(:regexp,
              s(:begin,
                s(:send,
                  s(:const, nil, :Regexp), :escape,
                  s(:lvar, :gem_path))),
              s(:str, "/"),
              s(:regopt))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Dir), :[],
                s(:lvar, :glob)), :map),
            s(:args,
              s(:arg, :file)),
            s(:array,
              s(:lvar, :gem_path),
              s(:send,
                s(:lvar, :file), :sub,
                s(:lvar, :prefix_re),
                s(:str, "")))))),
      s(:def, :files_in_default_gem,
        s(:args,
          s(:arg, :spec)),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :spec), :files), :map),
          s(:args,
            s(:arg, :file)),
          s(:case,
            s(:lvar, :file),
            s(:when,
              s(:regexp,
                s(:str, "\\A"),
                s(:begin,
                  s(:send,
                    s(:lvar, :spec), :bindir)),
                s(:str, "/"),
                s(:regopt)),
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :RbConfig), :CONFIG), :[],
                  s(:str, "bindir")),
                s(:gvar, :$POSTMATCH))),
            s(:when,
              s(:regexp,
                s(:str, "\\.so\\z"),
                s(:regopt)),
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :RbConfig), :CONFIG), :[],
                  s(:str, "archdir")),
                s(:lvar, :file))),
            s(:array,
              s(:send,
                s(:const,
                  s(:const, nil, :RbConfig), :CONFIG), :[],
                s(:str, "rubylibdir")),
              s(:lvar, :file))))),
      s(:def, :gem_contents,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send, nil, :spec_for,
              s(:lvar, :name))),
          s(:if,
            s(:lvar, :spec), nil,
            s(:return,
              s(:false))),
          s(:lvasgn, :files,
            s(:send, nil, :files_in,
              s(:lvar, :spec))),
          s(:send, nil, :show_files,
            s(:lvar, :files)),
          s(:true))),
      s(:def, :gem_install_dir,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send, nil, :spec_for,
              s(:lvar, :name))),
          s(:if,
            s(:lvar, :spec), nil,
            s(:return,
              s(:false))),
          s(:send, nil, :say,
            s(:send,
              s(:lvar, :spec), :gem_dir)),
          s(:true))),
      s(:def, :gem_names,
        s(:args),
        s(:if,
          s(:send,
            s(:send, nil, :options), :[],
            s(:sym, :all)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Specification), :map,
            s(:block_pass,
              s(:sym, :name))),
          s(:send, nil, :get_all_gem_names))),
      s(:def, :path_description,
        s(:args,
          s(:arg, :spec_dirs)),
        s(:if,
          s(:send,
            s(:lvar, :spec_dirs), :empty?),
          s(:str, "default gem paths"),
          s(:str, "specified path"))),
      s(:def, :show_files,
        s(:args,
          s(:arg, :files)),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :files), :sort), :each),
          s(:args,
            s(:arg, :prefix),
            s(:arg, :basename)),
          s(:begin,
            s(:lvasgn, :absolute_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :prefix),
                s(:lvar, :basename))),
            s(:if,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :absolute_path)),
              s(:next), nil),
            s(:if,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :prefix)),
              s(:send, nil, :say,
                s(:lvar, :absolute_path)),
              s(:send, nil, :say,
                s(:lvar, :basename)))))),
      s(:def, :spec_for,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Specification), :find_all_by_name,
                s(:lvar, :name),
                s(:ivar, :@version)), :last)),
          s(:if,
            s(:lvar, :spec),
            s(:return,
              s(:lvar, :spec)), nil),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Unable to find gem '"),
              s(:begin,
                s(:lvar, :name)),
              s(:str, "' in "),
              s(:begin,
                s(:ivar, :@path_kind)))),
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :verbose),
            s(:begin,
              s(:send, nil, :say,
                s(:str, "\nDirectories searched:")),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@spec_dirs), :sort), :each),
                s(:args,
                  s(:arg, :dir)),
                s(:send, nil, :say,
                  s(:lvar, :dir)))), nil),
          s(:return,
            s(:nil)))),
      s(:def, :specification_directories,
        s(:args),
        s(:send,
          s(:block,
            s(:send,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :specdirs)), :map),
            s(:args,
              s(:arg, :i)),
            s(:array,
              s(:lvar, :i),
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :i),
                s(:str, "specifications")))), :flatten)))))
