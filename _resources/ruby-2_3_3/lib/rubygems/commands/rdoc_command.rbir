s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/version_option")),
  s(:send, nil, :require,
    s(:str, "rubygems/rdoc")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :RdocCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :VersionOption)),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "rdoc"),
            s(:str, "Generates RDoc for pre-installed gems"),
            s(:hash,
              s(:pair,
                s(:sym, :version),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :default)),
              s(:pair,
                s(:sym, :include_rdoc),
                s(:false)),
              s(:pair,
                s(:sym, :include_ri),
                s(:true)),
              s(:pair,
                s(:sym, :overwrite),
                s(:false)))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--all"),
              s(:str, "Generate RDoc/RI documentation for all"),
              s(:str, "installed gems")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :all),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--[no-]rdoc"),
              s(:str, "Generate RDoc HTML")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :include_rdoc),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--[no-]ri"),
              s(:str, "Generate RI data")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :include_ri),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--[no-]overwrite"),
              s(:str, "Overwrite installed documents")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :overwrite),
              s(:lvar, :value))),
          s(:send, nil, :add_version_option))),
      s(:def, :arguments,
        s(:args),
        s(:str, "GEMNAME       gem to generate documentation for (unless --all)")),
      s(:def, :defaults_str,
        s(:args),
        s(:dstr,
          s(:str, "--version '"),
          s(:begin,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :default)),
          s(:str, "' --ri --no-overwrite"))),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The rdoc command builds documentation for installed gems.  By default\n"),
          s(:str, "only documentation is built using rdoc, but additional types of\n"),
          s(:str, "documentation may be built through rubygems plugins and the\n"),
          s(:str, "Gem.post_installs hook.\n"),
          s(:str, "\n"),
          s(:str, "Use --overwrite to force rebuilding of documentation.\n"))),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " [args]"))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:if,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :all)),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Specification), :to_a),
              s(:send,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:send, nil, :get_all_gem_names), :map),
                    s(:args,
                      s(:arg, :name)),
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Specification), :find_by_name,
                      s(:lvar, :name),
                      s(:send,
                        s(:send, nil, :options), :[],
                        s(:sym, :version)))), :flatten), :uniq))),
          s(:if,
            s(:send,
              s(:lvar, :specs), :empty?),
            s(:begin,
              s(:send, nil, :alert_error,
                s(:str, "No matching gems found")),
              s(:send, nil, :terminate_interaction,
                s(:int, 1))), nil),
          s(:block,
            s(:send,
              s(:lvar, :specs), :each),
            s(:args,
              s(:arg, :spec)),
            s(:begin,
              s(:lvasgn, :doc,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :RDoc), :new,
                  s(:lvar, :spec),
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :include_rdoc)),
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :include_ri)))),
              s(:send,
                s(:lvar, :doc), :force=,
                s(:send,
                  s(:send, nil, :options), :[],
                  s(:sym, :overwrite))),
              s(:if,
                s(:send,
                  s(:send, nil, :options), :[],
                  s(:sym, :overwrite)),
                s(:begin,
                  s(:send,
                    s(:const, nil, :FileUtils), :rm_rf,
                    s(:send,
                      s(:const, nil, :File), :join,
                      s(:send,
                        s(:lvar, :spec), :doc_dir),
                      s(:str, "ri"))),
                  s(:send,
                    s(:const, nil, :FileUtils), :rm_rf,
                    s(:send,
                      s(:const, nil, :File), :join,
                      s(:send,
                        s(:lvar, :spec), :doc_dir),
                      s(:str, "rdoc")))), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:send,
                    s(:lvar, :doc), :generate),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :Errno), :ENOENT)),
                    s(:lvasgn, :e),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :e), :message), :=~,
                        s(:regexp,
                          s(:str, " - "),
                          s(:regopt))),
                      s(:send, nil, :alert_error,
                        s(:dstr,
                          s(:str, "Unable to document "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :spec), :full_name)),
                          s(:str, ", "),
                          s(:begin,
                            s(:back_ref, :$')),
                          s(:str, " is missing, skipping"))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :specs), :length), :==,
                          s(:int, 1)),
                        s(:send, nil, :terminate_interaction,
                          s(:int, 1)), nil))), nil)))))))))
