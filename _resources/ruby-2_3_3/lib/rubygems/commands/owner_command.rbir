s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/local_remote_options")),
  s(:send, nil, :require,
    s(:str, "rubygems/gemcutter_utilities")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :OwnerCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :LocalRemoteOptions)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :GemcutterUtilities)),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The owner command lets you add and remove owners of a gem on a push\n"),
          s(:str, "server (the default is https://rubygems.org).\n"),
          s(:str, "\n"),
          s(:str, "The owner of a gem has the permission to push new versions, yank existing\n"),
          s(:str, "versions or edit the HTML page of the gem.  Be careful of who you give push\n"),
          s(:str, "permission to.\n"))),
      s(:def, :arguments,
        s(:args),
        s(:str, "GEM       gem to manage owners for")),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " GEM"))),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "owner"),
            s(:str, "Manage gem owners of a gem on the push server")),
          s(:send, nil, :add_proxy_option),
          s(:send, nil, :add_key_option),
          s(:send,
            s(:send, nil, :defaults), :merge!,
            s(:hash,
              s(:pair,
                s(:sym, :add),
                s(:array)),
              s(:pair,
                s(:sym, :remove),
                s(:array)))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-a"),
              s(:str, "--add EMAIL"),
              s(:str, "Add an owner")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :add)), :<<,
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-r"),
              s(:str, "--remove EMAIL"),
              s(:str, "Remove an owner")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :remove)), :<<,
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-h"),
              s(:str, "--host HOST"),
              s(:str, "Use another gemcutter-compatible host")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :host),
              s(:lvar, :value))))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:ivasgn, :@host,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :host))),
          s(:send, nil, :sign_in),
          s(:lvasgn, :name,
            s(:send, nil, :get_one_gem_name)),
          s(:send, nil, :add_owners,
            s(:lvar, :name),
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :add))),
          s(:send, nil, :remove_owners,
            s(:lvar, :name),
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :remove))),
          s(:send, nil, :show_owners,
            s(:lvar, :name)))),
      s(:def, :show_owners,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :response,
            s(:block,
              s(:send, nil, :rubygems_api_request,
                s(:sym, :get),
                s(:dstr,
                  s(:str, "api/v1/gems/"),
                  s(:begin,
                    s(:lvar, :name)),
                  s(:str, "/owners.yaml"))),
              s(:args,
                s(:arg, :request)),
              s(:send,
                s(:lvar, :request), :add_field,
                s(:str, "Authorization"),
                s(:send, nil, :api_key)))),
          s(:block,
            s(:send, nil, :with_response,
              s(:lvar, :response)),
            s(:args,
              s(:arg, :resp)),
            s(:begin,
              s(:lvasgn, :owners,
                s(:send,
                  s(:const, nil, :YAML), :load,
                  s(:send,
                    s(:lvar, :resp), :body))),
              s(:send, nil, :say,
                s(:dstr,
                  s(:str, "Owners for gem: "),
                  s(:begin,
                    s(:lvar, :name)))),
              s(:block,
                s(:send,
                  s(:lvar, :owners), :each),
                s(:args,
                  s(:arg, :owner)),
                s(:send, nil, :say,
                  s(:dstr,
                    s(:str, "- "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :owner), :[],
                        s(:str, "email")))))))))),
      s(:def, :add_owners,
        s(:args,
          s(:arg, :name),
          s(:arg, :owners)),
        s(:send, nil, :manage_owners,
          s(:sym, :post),
          s(:lvar, :name),
          s(:lvar, :owners))),
      s(:def, :remove_owners,
        s(:args,
          s(:arg, :name),
          s(:arg, :owners)),
        s(:send, nil, :manage_owners,
          s(:sym, :delete),
          s(:lvar, :name),
          s(:lvar, :owners))),
      s(:def, :manage_owners,
        s(:args,
          s(:arg, :method),
          s(:arg, :name),
          s(:arg, :owners)),
        s(:block,
          s(:send,
            s(:lvar, :owners), :each),
          s(:args,
            s(:arg, :owner)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :response,
                  s(:block,
                    s(:send, nil, :rubygems_api_request,
                      s(:lvar, :method),
                      s(:dstr,
                        s(:str, "api/v1/gems/"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "/owners"))),
                    s(:args,
                      s(:arg, :request)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :request), :set_form_data,
                        s(:hash,
                          s(:pair,
                            s(:str, "email"),
                            s(:lvar, :owner)))),
                      s(:send,
                        s(:lvar, :request), :add_field,
                        s(:str, "Authorization"),
                        s(:send, nil, :api_key))))),
                s(:lvasgn, :action,
                  s(:if,
                    s(:send,
                      s(:lvar, :method), :==,
                      s(:sym, :delete)),
                    s(:str, "Removing"),
                    s(:str, "Adding"))),
                s(:send, nil, :with_response,
                  s(:lvar, :response),
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :action)),
                    s(:str, " "),
                    s(:begin,
                      s(:lvar, :owner))))),
              s(:resbody, nil, nil, nil), nil)))))))
