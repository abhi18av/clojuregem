s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/command_manager")),
  s(:send, nil, :require,
    s(:str, "rubygems/dependency_installer")),
  s(:send, nil, :require,
    s(:str, "rubygems/install_update_options")),
  s(:send, nil, :require,
    s(:str, "rubygems/local_remote_options")),
  s(:send, nil, :require,
    s(:str, "rubygems/spec_fetcher")),
  s(:send, nil, :require,
    s(:str, "rubygems/version_option")),
  s(:send, nil, :require,
    s(:str, "rubygems/install_message")),
  s(:send, nil, :require,
    s(:str, "rubygems/rdoc")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :UpdateCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :InstallUpdateOptions)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :LocalRemoteOptions)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :VersionOption)),
      s(:send, nil, :attr_reader,
        s(:sym, :installer)),
      s(:send, nil, :attr_reader,
        s(:sym, :updated)),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "update"),
            s(:str, "Update installed gems to the latest version"),
            s(:hash,
              s(:pair,
                s(:sym, :document),
                s(:array,
                  s(:str, "rdoc"),
                  s(:str, "ri"))),
              s(:pair,
                s(:sym, :force),
                s(:false)))),
          s(:send, nil, :add_install_update_options),
          s(:block,
            s(:send,
              s(:const, nil, :OptionParser), :accept,
              s(:const,
                s(:const, nil, :Gem), :Version)),
            s(:args,
              s(:arg, :value)),
            s(:begin,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:lvar, :value)),
              s(:lvar, :value))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "--system [VERSION]"),
              s(:const,
                s(:const, nil, :Gem), :Version),
              s(:str, "Update the RubyGems system software")),
            s(:args,
              s(:arg, :value),
              s(:arg, :options)),
            s(:begin,
              s(:if,
                s(:lvar, :value), nil,
                s(:lvasgn, :value,
                  s(:true))),
              s(:send,
                s(:lvar, :options), :[]=,
                s(:sym, :system),
                s(:lvar, :value)))),
          s(:send, nil, :add_local_remote_options),
          s(:send, nil, :add_platform_option),
          s(:send, nil, :add_prerelease_option,
            s(:str, "as update targets")),
          s(:ivasgn, :@updated,
            s(:array)),
          s(:ivasgn, :@installer,
            s(:nil)))),
      s(:def, :arguments,
        s(:args),
        s(:str, "GEMNAME       name of gem to update")),
      s(:def, :defaults_str,
        s(:args),
        s(:dstr,
          s(:str, "--document --no-force --install-dir "),
          s(:begin,
            s(:send,
              s(:const, nil, :Gem), :dir)))),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The update command will update your gems to the latest version.\n"),
          s(:str, "\n"),
          s(:str, "The update command does not remove the previous version. Use the cleanup\n"),
          s(:str, "command to remove old versions.\n"))),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " GEMNAME [GEMNAME ...]"))),
      s(:def, :check_latest_rubygems,
        s(:args,
          s(:arg, :version)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :rubygems_version), :==,
              s(:lvar, :version)),
            s(:begin,
              s(:send, nil, :say,
                s(:str, "Latest version currently installed. Aborting.")),
              s(:send, nil, :terminate_interaction)), nil),
          s(:send,
            s(:send, nil, :options), :[]=,
            s(:sym, :user_install),
            s(:false)))),
      s(:def, :check_update_arguments,
        s(:args),
        s(:if,
          s(:send,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :args)), :empty?), nil,
          s(:begin,
            s(:send, nil, :alert_error,
              s(:str, "Gem names are not allowed with the --system option")),
            s(:send, nil, :terminate_interaction,
              s(:int, 1))))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :system)),
            s(:begin,
              s(:send, nil, :update_rubygems),
              s(:return)), nil),
          s(:send, nil, :say,
            s(:str, "Updating installed gems")),
          s(:lvasgn, :hig,
            s(:send, nil, :highest_installed_gems)),
          s(:lvasgn, :gems_to_update,
            s(:send, nil, :which_to_update,
              s(:lvar, :hig),
              s(:send,
                s(:send,
                  s(:send, nil, :options), :[],
                  s(:sym, :args)), :uniq))),
          s(:lvasgn, :updated,
            s(:send, nil, :update_gems,
              s(:lvar, :gems_to_update))),
          s(:lvasgn, :updated_names,
            s(:block,
              s(:send,
                s(:lvar, :updated), :map),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:lvar, :spec), :name))),
          s(:lvasgn, :not_updated_names,
            s(:send,
              s(:send,
                s(:send,
                  s(:send, nil, :options), :[],
                  s(:sym, :args)), :uniq), :-,
              s(:lvar, :updated_names))),
          s(:if,
            s(:send,
              s(:lvar, :updated), :empty?),
            s(:send, nil, :say,
              s(:str, "Nothing to update")),
            s(:begin,
              s(:send, nil, :say,
                s(:dstr,
                  s(:str, "Gems updated: "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :updated_names), :join,
                      s(:str, " "))))),
              s(:if,
                s(:send,
                  s(:lvar, :not_updated_names), :empty?), nil,
                s(:send, nil, :say,
                  s(:dstr,
                    s(:str, "Gems already up-to-date: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :not_updated_names), :join,
                        s(:str, " ")))))))))),
      s(:def, :fetch_remote_gems,
        s(:args,
          s(:arg, :spec)),
        s(:begin,
          s(:lvasgn, :dependency,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Dependency), :new,
              s(:send,
                s(:lvar, :spec), :name),
              s(:dstr,
                s(:str, "> "),
                s(:begin,
                  s(:send,
                    s(:lvar, :spec), :version))))),
          s(:send,
            s(:lvar, :dependency), :prerelease=,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :prerelease))),
          s(:lvasgn, :fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SpecFetcher), :fetcher)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :spec_tuples),
              s(:lvasgn, :errors)),
            s(:send,
              s(:lvar, :fetcher), :search_for_dependency,
              s(:lvar, :dependency))),
          s(:lvasgn, :error,
            s(:block,
              s(:send,
                s(:lvar, :errors), :find),
              s(:args,
                s(:arg, :e)),
              s(:send,
                s(:lvar, :e), :respond_to?,
                s(:sym, :exception)))),
          s(:if,
            s(:lvar, :error),
            s(:send, nil, :raise,
              s(:lvar, :error)), nil),
          s(:lvar, :spec_tuples))),
      s(:def, :highest_installed_gems,
        s(:args),
        s(:begin,
          s(:lvasgn, :hig,
            s(:hash)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :each),
            s(:args,
              s(:arg, :spec)),
            s(:if,
              s(:or,
                s(:send,
                  s(:send,
                    s(:lvar, :hig), :[],
                    s(:send,
                      s(:lvar, :spec), :name)), :nil?),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :hig), :[],
                      s(:send,
                        s(:lvar, :spec), :name)), :version), :<,
                  s(:send,
                    s(:lvar, :spec), :version))),
              s(:send,
                s(:lvar, :hig), :[]=,
                s(:send,
                  s(:lvar, :spec), :name),
                s(:lvar, :spec)), nil)),
          s(:lvar, :hig))),
      s(:def, :highest_remote_version,
        s(:args,
          s(:arg, :spec)),
        s(:begin,
          s(:lvasgn, :spec_tuples,
            s(:send, nil, :fetch_remote_gems,
              s(:lvar, :spec))),
          s(:lvasgn, :matching_gems,
            s(:block,
              s(:send,
                s(:lvar, :spec_tuples), :select),
              s(:args,
                s(:arg, :g),
                s(:arg, :_)),
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :g), :name), :==,
                  s(:send,
                    s(:lvar, :spec), :name)),
                s(:send,
                  s(:lvar, :g), :match_platform?)))),
          s(:lvasgn, :highest_remote_gem,
            s(:block,
              s(:send,
                s(:lvar, :matching_gems), :max_by),
              s(:args,
                s(:arg, :g),
                s(:arg, :_)),
              s(:send,
                s(:lvar, :g), :version))),
          s(:or_asgn,
            s(:lvasgn, :highest_remote_gem),
            s(:array,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :NameTuple), :null))),
          s(:send,
            s(:send,
              s(:lvar, :highest_remote_gem), :first), :version))),
      s(:def, :install_rubygems,
        s(:args,
          s(:arg, :version)),
        s(:begin,
          s(:lvasgn, :args,
            s(:send, nil, :update_rubygems_arguments)),
          s(:lvasgn, :update_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:str, "gems"),
              s(:dstr,
                s(:str, "rubygems-update-"),
                s(:begin,
                  s(:lvar, :version))))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:lvar, :update_dir)),
            s(:args),
            s(:begin,
              s(:send, nil, :say,
                s(:dstr,
                  s(:str, "Installing RubyGems "),
                  s(:begin,
                    s(:lvar, :version)))),
              s(:lvasgn, :old,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "RUBYOPT"))),
              s(:if,
                s(:lvar, :old),
                s(:send,
                  s(:const, nil, :ENV), :delete,
                  s(:str, "RUBYOPT")), nil),
              s(:lvasgn, :installed,
                s(:send, nil, :system,
                  s(:send,
                    s(:const, nil, :Gem), :ruby),
                  s(:str, "setup.rb"),
                  s(:splat,
                    s(:lvar, :args)))),
              s(:if,
                s(:lvar, :installed),
                s(:send, nil, :say,
                  s(:str, "RubyGems system software updated")), nil),
              s(:if,
                s(:lvar, :old),
                s(:send,
                  s(:const, nil, :ENV), :[]=,
                  s(:str, "RUBYOPT"),
                  s(:lvar, :old)), nil))))),
      s(:def, :rubygems_target_version,
        s(:args),
        s(:begin,
          s(:lvasgn, :version,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :system))),
          s(:lvasgn, :update_latest,
            s(:send,
              s(:lvar, :version), :==,
              s(:true))),
          s(:if,
            s(:lvar, :update_latest),
            s(:begin,
              s(:lvasgn, :version,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:const,
                    s(:const, nil, :Gem), :VERSION))),
              s(:lvasgn, :requirement,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :new,
                  s(:dstr,
                    s(:str, ">= "),
                    s(:begin,
                      s(:const,
                        s(:const, nil, :Gem), :VERSION)))))),
            s(:begin,
              s(:lvasgn, :version,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:lvar, :version))),
              s(:lvasgn, :requirement,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :new,
                  s(:lvar, :version))))),
          s(:lvasgn, :rubygems_update,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :new)),
          s(:send,
            s(:lvar, :rubygems_update), :name=,
            s(:str, "rubygems-update")),
          s(:send,
            s(:lvar, :rubygems_update), :version=,
            s(:lvar, :version)),
          s(:lvasgn, :hig,
            s(:hash,
              s(:pair,
                s(:str, "rubygems-update"),
                s(:lvar, :rubygems_update)))),
          s(:lvasgn, :gems_to_update,
            s(:send, nil, :which_to_update,
              s(:lvar, :hig),
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :args)),
              s(:sym, :system))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :up_ver)),
            s(:send,
              s(:lvar, :gems_to_update), :first)),
          s(:lvasgn, :target,
            s(:if,
              s(:lvar, :update_latest),
              s(:lvar, :up_ver),
              s(:lvar, :version))),
          s(:return,
            s(:lvar, :target),
            s(:lvar, :requirement)))),
      s(:def, :update_gem,
        s(:args,
          s(:arg, :name),
          s(:optarg, :version,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :default))),
        s(:begin,
          s(:if,
            s(:block,
              s(:send,
                s(:ivar, :@updated), :any?),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :name), :==,
                s(:lvar, :name))),
            s(:return), nil),
          s(:lvasgn, :update_options,
            s(:send,
              s(:send, nil, :options), :dup)),
          s(:send,
            s(:lvar, :update_options), :[]=,
            s(:sym, :prerelease),
            s(:send,
              s(:lvar, :version), :prerelease?)),
          s(:ivasgn, :@installer,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :DependencyInstaller), :new,
              s(:lvar, :update_options))),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Updating "),
              s(:begin,
                s(:lvar, :name)))),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:ivar, :@installer), :install,
                s(:lvar, :name),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :new,
                  s(:lvar, :version))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Gem), :InstallError),
                  s(:const,
                    s(:const, nil, :Gem), :DependencyError)),
                s(:lvasgn, :e),
                s(:send, nil, :alert_error,
                  s(:dstr,
                    s(:str, "Error installing "),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ":\n\t"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message))))), nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@installer), :installed_gems), :each),
            s(:args,
              s(:arg, :spec)),
            s(:send,
              s(:ivar, :@updated), :<<,
              s(:lvar, :spec))))),
      s(:def, :update_gems,
        s(:args,
          s(:arg, :gems_to_update)),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :gems_to_update), :uniq), :sort), :each),
            s(:args,
              s(:mlhs,
                s(:arg, :name),
                s(:arg, :version))),
            s(:send, nil, :update_gem,
              s(:lvar, :name),
              s(:lvar, :version))),
          s(:ivar, :@updated))),
      s(:def, :update_rubygems,
        s(:args),
        s(:begin,
          s(:send, nil, :check_update_arguments),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :version),
              s(:lvasgn, :requirement)),
            s(:send, nil, :rubygems_target_version)),
          s(:send, nil, :check_latest_rubygems,
            s(:lvar, :version)),
          s(:send, nil, :update_gem,
            s(:str, "rubygems-update"),
            s(:lvar, :version)),
          s(:lvasgn, :installed_gems,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :find_all_by_name,
              s(:str, "rubygems-update"),
              s(:lvar, :requirement))),
          s(:lvasgn, :version,
            s(:send,
              s(:send,
                s(:lvar, :installed_gems), :last), :version)),
          s(:send, nil, :install_rubygems,
            s(:lvar, :version)))),
      s(:def, :update_rubygems_arguments,
        s(:args),
        s(:begin,
          s(:lvasgn, :args,
            s(:array)),
          s(:if,
            s(:send,
              s(:const, nil, :Gem), :prefix),
            s(:send,
              s(:send,
                s(:lvar, :args), :<<,
                s(:str, "--prefix")), :<<,
              s(:send,
                s(:const, nil, :Gem), :prefix)), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :document)), :include?,
              s(:str, "rdoc")), nil,
            s(:send,
              s(:lvar, :args), :<<,
              s(:str, "--no-rdoc"))),
          s(:if,
            s(:send,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :document)), :include?,
              s(:str, "ri")), nil,
            s(:send,
              s(:lvar, :args), :<<,
              s(:str, "--no-ri"))),
          s(:if,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :no_format_executable)),
            s(:send,
              s(:lvar, :args), :<<,
              s(:str, "--no-format-executable")), nil),
          s(:if,
            s(:or,
              s(:send,
                s(:send,
                  s(:send, nil, :options), :[],
                  s(:sym, :system)), :==,
                s(:true)),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :system))), :>=,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 2)))),
            s(:send,
              s(:send,
                s(:lvar, :args), :<<,
                s(:str, "--previous-version")), :<<,
              s(:const,
                s(:const, nil, :Gem), :VERSION)), nil),
          s(:lvar, :args))),
      s(:def, :which_to_update,
        s(:args,
          s(:arg, :highest_installed_gems),
          s(:arg, :gem_names),
          s(:optarg, :system,
            s(:false))),
        s(:begin,
          s(:lvasgn, :result,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :highest_installed_gems), :each),
            s(:args,
              s(:arg, :l_name),
              s(:arg, :l_spec)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:send,
                    s(:send,
                      s(:lvar, :gem_names), :empty?), :!),
                  s(:block,
                    s(:send,
                      s(:lvar, :gem_names), :none?),
                    s(:args,
                      s(:arg, :name)),
                    s(:send,
                      s(:lvar, :name), :==,
                      s(:send,
                        s(:lvar, :l_spec), :name)))),
                s(:next), nil),
              s(:lvasgn, :highest_remote_ver,
                s(:send, nil, :highest_remote_version,
                  s(:lvar, :l_spec))),
              s(:if,
                s(:or,
                  s(:lvar, :system),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :l_spec), :version), :<,
                      s(:lvar, :highest_remote_ver)))),
                s(:send,
                  s(:lvar, :result), :<<,
                  s(:array,
                    s(:send,
                      s(:lvar, :l_spec), :name),
                    s(:send,
                      s(:array,
                        s(:send,
                          s(:lvar, :l_spec), :version),
                        s(:lvar, :highest_remote_ver)), :max))), nil))),
          s(:lvar, :result))))))
