s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Commands), :WhichCommand),
    s(:const,
      s(:const, nil, :Gem), :Command),
    s(:begin,
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:super,
            s(:str, "which"),
            s(:str, "Find the location of a library file you can require"),
            s(:hash,
              s(:pair,
                s(:sym, :search_gems_first),
                s(:false)),
              s(:pair,
                s(:sym, :show_all),
                s(:false)))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-a"),
              s(:str, "--[no-]all"),
              s(:str, "show all matching files")),
            s(:args,
              s(:arg, :show_all),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :show_all),
              s(:lvar, :show_all))),
          s(:block,
            s(:send, nil, :add_option,
              s(:str, "-g"),
              s(:str, "--[no-]gems-first"),
              s(:str, "search gems before non-gems")),
            s(:args,
              s(:arg, :gems_first),
              s(:arg, :options)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :search_gems_first),
              s(:lvar, :gems_first))))),
      s(:def, :arguments,
        s(:args),
        s(:str, "FILE          name of file to find")),
      s(:def, :defaults_str,
        s(:args),
        s(:str, "--no-gems-first --no-all")),
      s(:def, :description,
        s(:args),
        s(:dstr,
          s(:str, "The which command is like the shell which command and shows you where\n"),
          s(:str, "the file you wish to require lives.\n"),
          s(:str, "\n"),
          s(:str, "You can use the which command to help determine why you are requiring a\n"),
          s(:str, "version you did not expect or to look at the content of a file you are\n"),
          s(:str, "requiring to see why it does not behave as you expect.\n"))),
      s(:def, :execute,
        s(:args),
        s(:begin,
          s(:lvasgn, :found,
            s(:true)),
          s(:block,
            s(:send,
              s(:send,
                s(:send, nil, :options), :[],
                s(:sym, :args)), :each),
            s(:args,
              s(:arg, :arg)),
            s(:begin,
              s(:lvasgn, :arg,
                s(:send,
                  s(:lvar, :arg), :sub,
                  s(:regexp,
                    s(:begin,
                      s(:send,
                        s(:const, nil, :Regexp), :union,
                        s(:splat,
                          s(:send,
                            s(:const, nil, :Gem), :suffixes)))),
                    s(:str, "$"),
                    s(:regopt)),
                  s(:str, ""))),
              s(:lvasgn, :dirs,
                s(:gvar, :$LOAD_PATH)),
              s(:lvasgn, :spec,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Specification), :find_by_path,
                  s(:lvar, :arg))),
              s(:if,
                s(:lvar, :spec),
                s(:if,
                  s(:send,
                    s(:send, nil, :options), :[],
                    s(:sym, :search_gems_first)),
                  s(:lvasgn, :dirs,
                    s(:send,
                      s(:send,
                        s(:lvar, :spec), :full_require_paths), :+,
                      s(:gvar, :$LOAD_PATH))),
                  s(:lvasgn, :dirs,
                    s(:send,
                      s(:gvar, :$LOAD_PATH), :+,
                      s(:send,
                        s(:lvar, :spec), :full_require_paths)))), nil),
              s(:lvasgn, :paths,
                s(:send, nil, :find_paths,
                  s(:lvar, :arg),
                  s(:lvar, :dirs))),
              s(:if,
                s(:send,
                  s(:lvar, :paths), :empty?),
                s(:begin,
                  s(:send, nil, :alert_error,
                    s(:dstr,
                      s(:str, "Can't find ruby library file or shared library "),
                      s(:begin,
                        s(:lvar, :arg)))),
                  s(:and_asgn,
                    s(:lvasgn, :found),
                    s(:false))),
                s(:send, nil, :say,
                  s(:lvar, :paths))))),
          s(:if,
            s(:lvar, :found), nil,
            s(:send, nil, :terminate_interaction,
              s(:int, 1))))),
      s(:def, :find_paths,
        s(:args,
          s(:arg, :package_name),
          s(:arg, :dirs)),
        s(:begin,
          s(:lvasgn, :result,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :dirs), :each),
            s(:args,
              s(:arg, :dir)),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :suffixes), :each),
              s(:args,
                s(:arg, :ext)),
              s(:begin,
                s(:lvasgn, :full_path,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:lvar, :dir),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :package_name)),
                      s(:begin,
                        s(:lvar, :ext))))),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:const, nil, :File), :exist?,
                      s(:lvar, :full_path)),
                    s(:send,
                      s(:send,
                        s(:const, nil, :File), :directory?,
                        s(:lvar, :full_path)), :!)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :result), :<<,
                      s(:lvar, :full_path)),
                    s(:if,
                      s(:send,
                        s(:send, nil, :options), :[],
                        s(:sym, :show_all)), nil,
                      s(:return,
                        s(:lvar, :result)))), nil)))),
          s(:lvar, :result))),
      s(:def, :usage,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :program_name)),
          s(:str, " FILE [FILE ...]"))))))
