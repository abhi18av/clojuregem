s(:begin,
  s(:send, nil, :require,
    s(:str, "tsort")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :RequestSet), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TSort)),
      s(:send, nil, :attr_accessor,
        s(:sym, :always_install)),
      s(:send, nil, :attr_reader,
        s(:sym, :dependencies)),
      s(:send, nil, :attr_accessor,
        s(:sym, :development)),
      s(:send, nil, :attr_reader,
        s(:sym, :errors)),
      s(:send, nil, :attr_accessor,
        s(:sym, :development_shallow)),
      s(:send, nil, :attr_reader,
        s(:sym, :git_set)),
      s(:send, nil, :attr_accessor,
        s(:sym, :ignore_dependencies)),
      s(:send, nil, :attr_reader,
        s(:sym, :install_dir)),
      s(:send, nil, :attr_accessor,
        s(:sym, :prerelease)),
      s(:send, nil, :attr_accessor,
        s(:sym, :remote)),
      s(:send, nil, :attr_reader,
        s(:sym, :resolver)),
      s(:send, nil, :attr_reader,
        s(:sym, :sets)),
      s(:send, nil, :attr_accessor,
        s(:sym, :soft_missing)),
      s(:send, nil, :attr_reader,
        s(:sym, :vendor_set)),
      s(:send, nil, :attr_reader,
        s(:sym, :source_set)),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :deps)),
        s(:begin,
          s(:ivasgn, :@dependencies,
            s(:lvar, :deps)),
          s(:ivasgn, :@always_install,
            s(:array)),
          s(:ivasgn, :@conservative,
            s(:false)),
          s(:ivasgn, :@dependency_names,
            s(:hash)),
          s(:ivasgn, :@development,
            s(:false)),
          s(:ivasgn, :@development_shallow,
            s(:false)),
          s(:ivasgn, :@errors,
            s(:array)),
          s(:ivasgn, :@git_set,
            s(:nil)),
          s(:ivasgn, :@ignore_dependencies,
            s(:false)),
          s(:ivasgn, :@install_dir,
            s(:send,
              s(:const, nil, :Gem), :dir)),
          s(:ivasgn, :@prerelease,
            s(:false)),
          s(:ivasgn, :@remote,
            s(:true)),
          s(:ivasgn, :@requests,
            s(:array)),
          s(:ivasgn, :@sets,
            s(:array)),
          s(:ivasgn, :@soft_missing,
            s(:false)),
          s(:ivasgn, :@sorted,
            s(:nil)),
          s(:ivasgn, :@specs,
            s(:nil)),
          s(:ivasgn, :@vendor_set,
            s(:nil)),
          s(:ivasgn, :@source_set,
            s(:nil)),
          s(:if,
            s(:send, nil, :block_given?),
            s(:yield,
              s(:self)), nil))),
      s(:def, :gem,
        s(:args,
          s(:arg, :name),
          s(:restarg, :reqs)),
        s(:if,
          s(:lvasgn, :dep,
            s(:send,
              s(:ivar, :@dependency_names), :[],
              s(:lvar, :name))),
          s(:send,
            s(:send,
              s(:lvar, :dep), :requirement), :concat,
            s(:lvar, :reqs)),
          s(:begin,
            s(:lvasgn, :dep,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Dependency), :new,
                s(:lvar, :name),
                s(:splat,
                  s(:lvar, :reqs)))),
            s(:send,
              s(:ivar, :@dependency_names), :[]=,
              s(:lvar, :name),
              s(:lvar, :dep)),
            s(:send,
              s(:ivar, :@dependencies), :<<,
              s(:lvar, :dep))))),
      s(:def, :import,
        s(:args,
          s(:arg, :deps)),
        s(:send,
          s(:ivar, :@dependencies), :concat,
          s(:lvar, :deps))),
      s(:def, :install,
        s(:args,
          s(:arg, :options),
          s(:blockarg, :block)),
        s(:begin,
          s(:if,
            s(:lvasgn, :dir,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :install_dir))),
            s(:begin,
              s(:lvasgn, :requests,
                s(:send, nil, :install_into,
                  s(:lvar, :dir),
                  s(:false),
                  s(:lvar, :options),
                  s(:block_pass,
                    s(:lvar, :block)))),
              s(:return,
                s(:lvar, :requests))), nil),
          s(:ivasgn, :@prerelease,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :prerelease))),
          s(:lvasgn, :requests,
            s(:array)),
          s(:block,
            s(:send,
              s(:send, nil, :sorted_requests), :each),
            s(:args,
              s(:arg, :req)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :req), :installed?),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :req), :spec), :spec), :build_extensions),
                  s(:if,
                    s(:block,
                      s(:send,
                        s(:ivar, :@always_install), :none?),
                      s(:args,
                        s(:arg, :spec)),
                      s(:send,
                        s(:lvar, :spec), :==,
                        s(:send,
                          s(:send,
                            s(:lvar, :req), :spec), :spec))),
                    s(:begin,
                      s(:if,
                        s(:send, nil, :block_given?),
                        s(:yield,
                          s(:lvar, :req),
                          s(:nil)), nil),
                      s(:next)), nil)), nil),
              s(:lvasgn, :spec,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :req), :spec), :install,
                    s(:lvar, :options)),
                  s(:args,
                    s(:arg, :installer)),
                  s(:if,
                    s(:send, nil, :block_given?),
                    s(:yield,
                      s(:lvar, :req),
                      s(:lvar, :installer)), nil))),
              s(:send,
                s(:lvar, :requests), :<<,
                s(:lvar, :spec)))),
          s(:if,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :gemdeps)),
            s(:return,
              s(:lvar, :requests)), nil),
          s(:lvasgn, :specs,
            s(:block,
              s(:send,
                s(:lvar, :requests), :map),
              s(:args,
                s(:arg, :request)),
              s(:case,
                s(:lvar, :request),
                s(:when,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Resolver), :ActivationRequest),
                  s(:send,
                    s(:send,
                      s(:lvar, :request), :spec), :spec)),
                s(:lvar, :request)))),
          s(:send, nil, :require,
            s(:str, "rubygems/dependency_installer")),
          s(:lvasgn, :inst,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :DependencyInstaller), :new,
              s(:lvar, :options))),
          s(:send,
            s(:send,
              s(:lvar, :inst), :installed_gems), :replace,
            s(:lvar, :specs)),
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :done_installing_hooks), :empty?), nil,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :done_installing_hooks), :each),
              s(:args,
                s(:arg, :hook)),
              s(:send,
                s(:lvar, :hook), :call,
                s(:lvar, :inst),
                s(:lvar, :specs)))),
          s(:lvar, :requests))),
      s(:def, :install_from_gemdeps,
        s(:args,
          s(:arg, :options),
          s(:blockarg, :block)),
        s(:begin,
          s(:lvasgn, :gemdeps,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :gemdeps))),
          s(:ivasgn, :@install_dir,
            s(:or,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :install_dir)),
              s(:send,
                s(:const, nil, :Gem), :dir))),
          s(:ivasgn, :@prerelease,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :prerelease))),
          s(:ivasgn, :@remote,
            s(:send,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :domain)), :!=,
              s(:sym, :local))),
          s(:if,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :conservative)),
            s(:ivasgn, :@conservative,
              s(:true)), nil),
          s(:lvasgn, :gem_deps_api,
            s(:send, nil, :load_gemdeps,
              s(:lvar, :gemdeps),
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :without_groups)),
              s(:true))),
          s(:send, nil, :resolve),
          s(:if,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :explain)),
            s(:begin,
              s(:send, nil, :puts,
                s(:str, "Gems to install:")),
              s(:block,
                s(:send,
                  s(:send, nil, :sorted_requests), :each),
                s(:args,
                  s(:arg, :spec)),
                s(:send, nil, :puts,
                  s(:dstr,
                    s(:str, "  "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :spec), :full_name))))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :Gem), :configuration), :really_verbose),
                s(:send,
                  s(:send,
                    s(:ivar, :@resolver), :stats), :display), nil)),
            s(:begin,
              s(:lvasgn, :installed,
                s(:send, nil, :install,
                  s(:lvar, :options),
                  s(:block_pass,
                    s(:lvar, :block)))),
              s(:if,
                s(:send,
                  s(:lvar, :options), :fetch,
                  s(:sym, :lock),
                  s(:true)),
                s(:begin,
                  s(:lvasgn, :lockfile,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :RequestSet), :Lockfile), :build,
                      s(:self),
                      s(:lvar, :gemdeps),
                      s(:send,
                        s(:lvar, :gem_deps_api), :dependencies))),
                  s(:send,
                    s(:lvar, :lockfile), :write)), nil),
              s(:lvar, :installed))))),
      s(:def, :install_into,
        s(:args,
          s(:arg, :dir),
          s(:optarg, :force,
            s(:true)),
          s(:optarg, :options,
            s(:hash))),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :gem_home),
                s(:send,
                  s(:const, nil, :ENV), :[]=,
                  s(:str, "GEM_HOME"))),
              s(:array,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "GEM_HOME")),
                s(:lvar, :dir))),
            s(:lvasgn, :existing,
              s(:if,
                s(:lvar, :force),
                s(:array),
                s(:send, nil, :specs_in,
                  s(:lvar, :dir)))),
            s(:block,
              s(:send,
                s(:lvar, :existing), :delete_if),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:ivar, :@always_install), :include?,
                s(:lvar, :s))),
            s(:lvasgn, :dir,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:lvar, :dir))),
            s(:lvasgn, :installed,
              s(:array)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :development),
              s(:false)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :install_dir),
              s(:lvar, :dir)),
            s(:send,
              s(:lvar, :options), :[]=,
              s(:sym, :only_install_dir),
              s(:true)),
            s(:ivasgn, :@prerelease,
              s(:send,
                s(:lvar, :options), :[],
                s(:sym, :prerelease))),
            s(:block,
              s(:send,
                s(:send, nil, :sorted_requests), :each),
              s(:args,
                s(:arg, :request)),
              s(:begin,
                s(:lvasgn, :spec,
                  s(:send,
                    s(:lvar, :request), :spec)),
                s(:if,
                  s(:block,
                    s(:send,
                      s(:lvar, :existing), :find),
                    s(:args,
                      s(:arg, :s)),
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :full_name), :==,
                      s(:send,
                        s(:lvar, :spec), :full_name))),
                  s(:begin,
                    s(:if,
                      s(:send, nil, :block_given?),
                      s(:yield,
                        s(:lvar, :request),
                        s(:nil)), nil),
                    s(:next)), nil),
                s(:block,
                  s(:send,
                    s(:lvar, :spec), :install,
                    s(:lvar, :options)),
                  s(:args,
                    s(:arg, :installer)),
                  s(:if,
                    s(:send, nil, :block_given?),
                    s(:yield,
                      s(:lvar, :request),
                      s(:lvar, :installer)), nil)),
                s(:send,
                  s(:lvar, :installed), :<<,
                  s(:lvar, :request)))),
            s(:lvar, :installed)),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "GEM_HOME"),
            s(:lvar, :gem_home)))),
      s(:def, :load_gemdeps,
        s(:args,
          s(:arg, :path),
          s(:optarg, :without_groups,
            s(:array)),
          s(:optarg, :installing,
            s(:false))),
        s(:begin,
          s(:ivasgn, :@git_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :GitSet), :new)),
          s(:ivasgn, :@vendor_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSet), :new)),
          s(:ivasgn, :@source_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :SourceSet), :new)),
          s(:send,
            s(:ivar, :@git_set), :root_dir=,
            s(:ivar, :@install_dir)),
          s(:lvasgn, :lock_file,
            s(:send,
              s(:send,
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:const, nil, :File), :expand_path,
                      s(:lvar, :path))),
                  s(:str, ".lock")), :dup), :untaint)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :tokenizer,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :RequestSet), :Lockfile), :Tokenizer), :from_file,
                    s(:lvar, :lock_file))),
                s(:lvasgn, :parser,
                  s(:send,
                    s(:lvar, :tokenizer), :make_parser,
                    s(:self),
                    s(:array))),
                s(:send,
                  s(:lvar, :parser), :parse)),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :ENOENT)), nil, nil), nil)),
          s(:lvasgn, :gf,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :RequestSet), :GemDependencyAPI), :new,
              s(:self),
              s(:lvar, :path))),
          s(:send,
            s(:lvar, :gf), :installing=,
            s(:lvar, :installing)),
          s(:if,
            s(:lvar, :without_groups),
            s(:send,
              s(:lvar, :gf), :without_groups=,
              s(:lvar, :without_groups)), nil),
          s(:send,
            s(:lvar, :gf), :load))),
      s(:def, :pretty_print,
        s(:args,
          s(:arg, :q)),
        s(:block,
          s(:send,
            s(:lvar, :q), :group,
            s(:int, 2),
            s(:str, "[RequestSet:"),
            s(:str, "]")),
          s(:args),
          s(:begin,
            s(:send,
              s(:lvar, :q), :breakable),
            s(:if,
              s(:ivar, :@remote),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, "remote")),
                s(:send,
                  s(:lvar, :q), :breakable)), nil),
            s(:if,
              s(:ivar, :@prerelease),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, "prerelease")),
                s(:send,
                  s(:lvar, :q), :breakable)), nil),
            s(:if,
              s(:ivar, :@development_shallow),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, "shallow development")),
                s(:send,
                  s(:lvar, :q), :breakable)),
              s(:if,
                s(:ivar, :@development),
                s(:begin,
                  s(:send,
                    s(:lvar, :q), :text,
                    s(:str, "development")),
                  s(:send,
                    s(:lvar, :q), :breakable)), nil)),
            s(:if,
              s(:ivar, :@soft_missing),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, "soft missing")), nil),
            s(:block,
              s(:send,
                s(:lvar, :q), :group,
                s(:int, 2),
                s(:str, "[dependencies:"),
                s(:str, "]")),
              s(:args),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :breakable),
                s(:block,
                  s(:send,
                    s(:ivar, :@dependencies), :map),
                  s(:args,
                    s(:arg, :dep)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :q), :text,
                      s(:send,
                        s(:lvar, :dep), :to_s)),
                    s(:send,
                      s(:lvar, :q), :breakable))))),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "sets:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :pp,
              s(:block,
                s(:send,
                  s(:ivar, :@sets), :map),
                s(:args,
                  s(:arg, :set)),
                s(:send,
                  s(:lvar, :set), :class)))))),
      s(:def, :resolve,
        s(:args,
          s(:optarg, :set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :BestSet), :new))),
        s(:begin,
          s(:send,
            s(:ivar, :@sets), :<<,
            s(:lvar, :set)),
          s(:send,
            s(:ivar, :@sets), :<<,
            s(:ivar, :@git_set)),
          s(:send,
            s(:ivar, :@sets), :<<,
            s(:ivar, :@vendor_set)),
          s(:send,
            s(:ivar, :@sets), :<<,
            s(:ivar, :@source_set)),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :compose_sets,
              s(:splat,
                s(:ivar, :@sets)))),
          s(:send,
            s(:lvar, :set), :remote=,
            s(:ivar, :@remote)),
          s(:send,
            s(:lvar, :set), :prerelease=,
            s(:ivar, :@prerelease)),
          s(:lvasgn, :resolver,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :new,
              s(:ivar, :@dependencies),
              s(:lvar, :set))),
          s(:send,
            s(:lvar, :resolver), :development=,
            s(:ivar, :@development)),
          s(:send,
            s(:lvar, :resolver), :development_shallow=,
            s(:ivar, :@development_shallow)),
          s(:send,
            s(:lvar, :resolver), :ignore_dependencies=,
            s(:ivar, :@ignore_dependencies)),
          s(:send,
            s(:lvar, :resolver), :soft_missing=,
            s(:ivar, :@soft_missing)),
          s(:if,
            s(:ivar, :@conservative),
            s(:begin,
              s(:lvasgn, :installed_gems,
                s(:hash)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Specification), :find_all),
                s(:args,
                  s(:arg, :spec)),
                s(:send,
                  s(:begin,
                    s(:or_asgn,
                      s(:send,
                        s(:lvar, :installed_gems), :[],
                        s(:send,
                          s(:lvar, :spec), :name)),
                      s(:array))), :<<,
                  s(:lvar, :spec))),
              s(:send,
                s(:lvar, :resolver), :skip_gems=,
                s(:lvar, :installed_gems))), nil),
          s(:ivasgn, :@resolver,
            s(:lvar, :resolver)),
          s(:ivasgn, :@requests,
            s(:send,
              s(:lvar, :resolver), :resolve)),
          s(:ivasgn, :@errors,
            s(:send,
              s(:lvar, :set), :errors)),
          s(:ivar, :@requests))),
      s(:def, :resolve_current,
        s(:args),
        s(:send, nil, :resolve,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :CurrentSet), :new))),
      s(:def, :sorted_requests,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@sorted),
          s(:send,
            s(:send, nil, :strongly_connected_components), :flatten))),
      s(:def, :specs,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@specs),
          s(:block,
            s(:send,
              s(:ivar, :@requests), :map),
            s(:args,
              s(:arg, :r)),
            s(:send,
              s(:lvar, :r), :full_spec)))),
      s(:def, :specs_in,
        s(:args,
          s(:arg, :dir)),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Dir), :[],
              s(:dstr,
                s(:begin,
                  s(:lvar, :dir)),
                s(:str, "/specifications/*.gemspec"))), :map),
          s(:args,
            s(:arg, :g)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Specification), :load,
            s(:lvar, :g)))),
      s(:def, :tsort_each_node,
        s(:args,
          s(:blockarg, :block)),
        s(:send,
          s(:ivar, :@requests), :each,
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :tsort_each_child,
        s(:args,
          s(:arg, :node)),
        s(:block,
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :node), :spec), :dependencies), :each),
          s(:args,
            s(:arg, :dep)),
          s(:begin,
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :dep), :type), :==,
                  s(:sym, :development)),
                s(:send,
                  s(:ivar, :@development), :!)),
              s(:next), nil),
            s(:lvasgn, :match,
              s(:block,
                s(:send,
                  s(:ivar, :@requests), :find),
                s(:args,
                  s(:arg, :r)),
                s(:send,
                  s(:lvar, :dep), :match?,
                  s(:send,
                    s(:send,
                      s(:lvar, :r), :spec), :name),
                  s(:send,
                    s(:send,
                      s(:lvar, :r), :spec), :version),
                  s(:ivar, :@prerelease)))),
            s(:if,
              s(:lvar, :match), nil,
              s(:begin,
                s(:if,
                  s(:and,
                    s(:send,
                      s(:send,
                        s(:lvar, :dep), :type), :==,
                      s(:sym, :development)),
                    s(:ivar, :@development_shallow)),
                  s(:next), nil),
                s(:if,
                  s(:ivar, :@soft_missing),
                  s(:next), nil),
                s(:send, nil, :raise,
                  s(:const,
                    s(:const, nil, :Gem), :DependencyError),
                  s(:dstr,
                    s(:str, "Unresolved dependency found during sorting - "),
                    s(:begin,
                      s(:lvar, :dep)),
                    s(:str, " (requested by "),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :node), :spec), :full_name)),
                    s(:str, ")"))))),
            s(:yield,
              s(:lvar, :match))))))),
  s(:send, nil, :require,
    s(:str, "rubygems/request_set/gem_dependency_api")),
  s(:send, nil, :require,
    s(:str, "rubygems/request_set/lockfile")),
  s(:send, nil, :require,
    s(:str, "rubygems/request_set/lockfile/tokenizer")))
