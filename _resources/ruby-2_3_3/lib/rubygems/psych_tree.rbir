s(:module,
  s(:const, nil, :Gem),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const,
          s(:cbase), :Psych), :Visitors)),
    s(:class,
      s(:const, nil, :NoAliasYAMLTree),
      s(:const,
        s(:const,
          s(:const, nil, :Psych), :Visitors), :YAMLTree),
      s(:begin,
        s(:if,
          s(:send, nil, :respond_to?,
            s(:sym, :create)), nil,
          s(:defs,
            s(:self), :create,
            s(:args),
            s(:send, nil, :new,
              s(:hash)))),
        s(:def, :visit_String,
          s(:args,
            s(:arg, :str)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :str), :==,
                s(:str, "=")), nil,
              s(:return,
                s(:zsuper))),
            s(:lvasgn, :quote,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Psych), :Nodes), :Scalar), :SINGLE_QUOTED)),
            s(:send,
              s(:ivar, :@emitter), :scalar,
              s(:lvar, :str),
              s(:nil),
              s(:nil),
              s(:false),
              s(:true),
              s(:lvar, :quote)))),
        s(:def, :register,
          s(:args,
            s(:arg, :target),
            s(:arg, :obj)), nil),
        s(:def, :format_time,
          s(:args,
            s(:arg, :time)),
          s(:if,
            s(:send,
              s(:lvar, :time), :utc?),
            s(:send,
              s(:lvar, :time), :strftime,
              s(:str, "%Y-%m-%d %H:%M:%S.%9N Z")),
            s(:send,
              s(:lvar, :time), :strftime,
              s(:str, "%Y-%m-%d %H:%M:%S.%9N %:z")))),
        s(:send, nil, :private,
          s(:sym, :format_time)))), nil))
