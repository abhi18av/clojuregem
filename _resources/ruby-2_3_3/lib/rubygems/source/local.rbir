s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :Gem), :Source), :Local),
  s(:const,
    s(:const, nil, :Gem), :Source),
  s(:begin,
    s(:def, :initialize,
      s(:args),
      s(:begin,
        s(:ivasgn, :@specs,
          s(:nil)),
        s(:ivasgn, :@api_uri,
          s(:nil)),
        s(:ivasgn, :@uri,
          s(:nil)))),
    s(:def, :<=>,
      s(:args,
        s(:arg, :other)),
      s(:case,
        s(:lvar, :other),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :Source), :Installed),
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :Source), :Lock),
          s(:int, -1)),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :Source), :Local),
          s(:int, 0)),
        s(:when,
          s(:const,
            s(:const, nil, :Gem), :Source),
          s(:int, 1)),
        s(:nil))),
    s(:def, :inspect,
      s(:args),
      s(:begin,
        s(:lvasgn, :keys,
          s(:if,
            s(:ivar, :@specs),
            s(:send,
              s(:send,
                s(:ivar, :@specs), :keys), :sort),
            s(:str, "NOT LOADED"))),
        s(:send,
          s(:str, "#<%s specs: %p>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:lvar, :keys))))),
    s(:def, :load_specs,
      s(:args,
        s(:arg, :type)),
      s(:begin,
        s(:lvasgn, :names,
          s(:array)),
        s(:ivasgn, :@specs,
          s(:hash)),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Dir), :[],
              s(:str, "*.gem")), :each),
          s(:args,
            s(:arg, :file)),
          s(:kwbegin,
            s(:rescue,
              s(:lvasgn, :pkg,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :new,
                  s(:lvar, :file))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :SystemCallError),
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Package), :FormatError)), nil, nil),
              s(:begin,
                s(:lvasgn, :tup,
                  s(:send,
                    s(:send,
                      s(:lvar, :pkg), :spec), :name_tuple)),
                s(:send,
                  s(:ivar, :@specs), :[]=,
                  s(:lvar, :tup),
                  s(:array,
                    s(:send,
                      s(:const, nil, :File), :expand_path,
                      s(:lvar, :file)),
                    s(:lvar, :pkg))),
                s(:case,
                  s(:lvar, :type),
                  s(:when,
                    s(:sym, :released),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :pkg), :spec), :version), :prerelease?), nil,
                      s(:send,
                        s(:lvar, :names), :<<,
                        s(:send,
                          s(:send,
                            s(:lvar, :pkg), :spec), :name_tuple)))),
                  s(:when,
                    s(:sym, :prerelease),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :pkg), :spec), :version), :prerelease?),
                      s(:send,
                        s(:lvar, :names), :<<,
                        s(:send,
                          s(:send,
                            s(:lvar, :pkg), :spec), :name_tuple)), nil)),
                  s(:when,
                    s(:sym, :latest),
                    s(:begin,
                      s(:lvasgn, :tup,
                        s(:send,
                          s(:send,
                            s(:lvar, :pkg), :spec), :name_tuple)),
                      s(:lvasgn, :cur,
                        s(:block,
                          s(:send,
                            s(:lvar, :names), :find),
                          s(:args,
                            s(:arg, :x)),
                          s(:send,
                            s(:send,
                              s(:lvar, :x), :name), :==,
                            s(:send,
                              s(:lvar, :tup), :name)))),
                      s(:if,
                        s(:send,
                          s(:lvar, :cur), :!),
                        s(:send,
                          s(:lvar, :names), :<<,
                          s(:lvar, :tup)),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :cur), :version), :<,
                            s(:send,
                              s(:lvar, :tup), :version)),
                          s(:begin,
                            s(:send,
                              s(:lvar, :names), :delete,
                              s(:lvar, :cur)),
                            s(:send,
                              s(:lvar, :names), :<<,
                              s(:lvar, :tup))), nil)))),
                  s(:send,
                    s(:lvar, :names), :<<,
                    s(:send,
                      s(:send,
                        s(:lvar, :pkg), :spec), :name_tuple))))))),
        s(:lvar, :names))),
    s(:def, :find_gem,
      s(:args,
        s(:arg, :gem_name),
        s(:optarg, :version,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Requirement), :default)),
        s(:optarg, :prerelease,
          s(:false))),
      s(:begin,
        s(:send, nil, :load_specs,
          s(:sym, :complete)),
        s(:lvasgn, :found,
          s(:array)),
        s(:block,
          s(:send,
            s(:ivar, :@specs), :each),
          s(:args,
            s(:arg, :n),
            s(:arg, :data)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :n), :name), :==,
              s(:lvar, :gem_name)),
            s(:begin,
              s(:lvasgn, :s,
                s(:send,
                  s(:send,
                    s(:lvar, :data), :[],
                    s(:int, 1)), :spec)),
              s(:if,
                s(:send,
                  s(:lvar, :version), :satisfied_by?,
                  s(:send,
                    s(:lvar, :s), :version)),
                s(:if,
                  s(:lvar, :prerelease),
                  s(:send,
                    s(:lvar, :found), :<<,
                    s(:lvar, :s)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :version), :prerelease?), :!),
                    s(:send,
                      s(:lvar, :found), :<<,
                      s(:lvar, :s)), nil)), nil)), nil)),
        s(:block,
          s(:send,
            s(:lvar, :found), :max_by),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :version)))),
    s(:def, :fetch_spec,
      s(:args,
        s(:arg, :name)),
      s(:begin,
        s(:send, nil, :load_specs,
          s(:sym, :complete)),
        s(:if,
          s(:lvasgn, :data,
            s(:send,
              s(:ivar, :@specs), :[],
              s(:lvar, :name))),
          s(:send,
            s(:send,
              s(:lvar, :data), :last), :spec),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :Gem), :Exception),
            s(:dstr,
              s(:str, "Unable to find spec for "),
              s(:begin,
                s(:send,
                  s(:lvar, :name), :inspect))))))),
    s(:def, :download,
      s(:args,
        s(:arg, :spec),
        s(:optarg, :cache_dir,
          s(:nil))),
      s(:begin,
        s(:send, nil, :load_specs,
          s(:sym, :complete)),
        s(:block,
          s(:send,
            s(:ivar, :@specs), :each),
          s(:args,
            s(:arg, :name),
            s(:arg, :data)),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 1)), :spec), :==,
              s(:lvar, :spec)),
            s(:return,
              s(:send,
                s(:lvar, :data), :[],
                s(:int, 0))), nil)),
        s(:send, nil, :raise,
          s(:const,
            s(:const, nil, :Gem), :Exception),
          s(:dstr,
            s(:str, "Unable to find file for '"),
            s(:begin,
              s(:send,
                s(:lvar, :spec), :full_name)),
            s(:str, "'"))))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:str, "[Local gems:"),
          s(:str, "]")),
        s(:args),
        s(:begin,
          s(:send,
            s(:lvar, :q), :breakable),
          s(:block,
            s(:send,
              s(:lvar, :q), :seplist,
              s(:send,
                s(:ivar, :@specs), :keys)),
            s(:args,
              s(:arg, :v)),
            s(:send,
              s(:lvar, :q), :text,
              s(:send,
                s(:lvar, :v), :full_name))))))))
