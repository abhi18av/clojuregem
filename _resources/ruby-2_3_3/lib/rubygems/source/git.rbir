s(:begin,
  s(:send, nil, :require,
    s(:str, "digest")),
  s(:send, nil, :require,
    s(:str, "rubygems/util")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Source), :Git),
    s(:const,
      s(:const, nil, :Gem), :Source),
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :name)),
      s(:send, nil, :attr_reader,
        s(:sym, :reference)),
      s(:send, nil, :attr_accessor,
        s(:sym, :remote)),
      s(:send, nil, :attr_reader,
        s(:sym, :repository)),
      s(:send, nil, :attr_accessor,
        s(:sym, :root_dir)),
      s(:send, nil, :attr_reader,
        s(:sym, :need_submodules)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :name),
          s(:arg, :repository),
          s(:arg, :reference),
          s(:optarg, :submodules,
            s(:false))),
        s(:begin,
          s(:super,
            s(:lvar, :repository)),
          s(:ivasgn, :@name,
            s(:lvar, :name)),
          s(:ivasgn, :@repository,
            s(:lvar, :repository)),
          s(:ivasgn, :@reference,
            s(:lvar, :reference)),
          s(:ivasgn, :@need_submodules,
            s(:lvar, :submodules)),
          s(:ivasgn, :@remote,
            s(:true)),
          s(:ivasgn, :@root_dir,
            s(:send,
              s(:const, nil, :Gem), :dir)),
          s(:ivasgn, :@git,
            s(:or,
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "git")),
              s(:str, "git"))))),
      s(:def, :<=>,
        s(:args,
          s(:arg, :other)),
        s(:case,
          s(:lvar, :other),
          s(:when,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Git),
            s(:int, 0)),
          s(:when,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Vendor),
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Lock),
            s(:int, -1)),
          s(:when,
            s(:const,
              s(:const, nil, :Gem), :Source),
            s(:int, 1)),
          s(:nil))),
      s(:def, :==,
        s(:args,
          s(:arg, :other)),
        s(:and,
          s(:and,
            s(:and,
              s(:and,
                s(:zsuper),
                s(:send,
                  s(:ivar, :@name), :==,
                  s(:send,
                    s(:lvar, :other), :name))),
              s(:send,
                s(:ivar, :@repository), :==,
                s(:send,
                  s(:lvar, :other), :repository))),
            s(:send,
              s(:ivar, :@reference), :==,
              s(:send,
                s(:lvar, :other), :reference))),
          s(:send,
            s(:ivar, :@need_submodules), :==,
            s(:send,
              s(:lvar, :other), :need_submodules)))),
      s(:def, :checkout,
        s(:args),
        s(:begin,
          s(:send, nil, :cache),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send, nil, :repo_cache_dir)), nil,
            s(:return,
              s(:false))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send, nil, :install_dir)), nil,
            s(:send, nil, :system,
              s(:ivar, :@git),
              s(:str, "clone"),
              s(:str, "--quiet"),
              s(:str, "--no-checkout"),
              s(:send, nil, :repo_cache_dir),
              s(:send, nil, :install_dir))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send, nil, :install_dir)),
            s(:args),
            s(:begin,
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "fetch"),
                s(:str, "--quiet"),
                s(:str, "--force"),
                s(:str, "--tags"),
                s(:send, nil, :install_dir)),
              s(:lvasgn, :success,
                s(:send, nil, :system,
                  s(:ivar, :@git),
                  s(:str, "reset"),
                  s(:str, "--quiet"),
                  s(:str, "--hard"),
                  s(:send, nil, :rev_parse))),
              s(:if,
                s(:ivar, :@need_submodules),
                s(:and_asgn,
                  s(:lvasgn, :success),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Util), :silent_system,
                    s(:ivar, :@git),
                    s(:str, "submodule"),
                    s(:str, "update"),
                    s(:str, "--quiet"),
                    s(:str, "--init"),
                    s(:str, "--recursive"))), nil),
              s(:lvar, :success))))),
      s(:def, :cache,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@remote), nil,
            s(:return)),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send, nil, :repo_cache_dir)),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:send, nil, :repo_cache_dir)),
              s(:args),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "fetch"),
                s(:str, "--quiet"),
                s(:str, "--force"),
                s(:str, "--tags"),
                s(:ivar, :@repository),
                s(:str, "refs/heads/*:refs/heads/*"))),
            s(:send, nil, :system,
              s(:ivar, :@git),
              s(:str, "clone"),
              s(:str, "--quiet"),
              s(:str, "--bare"),
              s(:str, "--no-hardlinks"),
              s(:ivar, :@repository),
              s(:send, nil, :repo_cache_dir))))),
      s(:def, :base_dir,
        s(:args),
        s(:send,
          s(:const, nil, :File), :join,
          s(:ivar, :@root_dir),
          s(:str, "bundler"))),
      s(:def, :dir_shortref,
        s(:args),
        s(:send,
          s(:send, nil, :rev_parse), :[],
          s(:irange,
            s(:int, 0),
            s(:int, 11)))),
      s(:def, :download,
        s(:args,
          s(:arg, :full_spec),
          s(:arg, :path)), nil),
      s(:def, :install_dir,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send, nil, :repo_cache_dir)), nil,
            s(:return)),
          s(:send,
            s(:const, nil, :File), :join,
            s(:send, nil, :base_dir),
            s(:str, "gems"),
            s(:dstr,
              s(:begin,
                s(:ivar, :@name)),
              s(:str, "-"),
              s(:begin,
                s(:send, nil, :dir_shortref)))))),
      s(:def, :pretty_print,
        s(:args,
          s(:arg, :q)),
        s(:block,
          s(:send,
            s(:lvar, :q), :group,
            s(:int, 2),
            s(:str, "[Git: "),
            s(:str, "]")),
          s(:args),
          s(:begin,
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:ivar, :@repository)),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:ivar, :@reference))))),
      s(:def, :repo_cache_dir,
        s(:args),
        s(:send,
          s(:const, nil, :File), :join,
          s(:ivar, :@root_dir),
          s(:str, "cache"),
          s(:str, "bundler"),
          s(:str, "git"),
          s(:dstr,
            s(:begin,
              s(:ivar, :@name)),
            s(:str, "-"),
            s(:begin,
              s(:send, nil, :uri_hash))))),
      s(:def, :rev_parse,
        s(:args),
        s(:begin,
          s(:lvasgn, :hash,
            s(:nil)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send, nil, :repo_cache_dir)),
            s(:args),
            s(:lvasgn, :hash,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Util), :popen,
                  s(:ivar, :@git),
                  s(:str, "rev-parse"),
                  s(:ivar, :@reference)), :strip))),
          s(:if,
            s(:send,
              s(:gvar, :$?), :success?), nil,
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Gem), :Exception),
              s(:dstr,
                s(:str, "unable to find reference "),
                s(:begin,
                  s(:ivar, :@reference)),
                s(:str, " in "),
                s(:begin,
                  s(:ivar, :@repository))))),
          s(:lvar, :hash))),
      s(:def, :specs,
        s(:args),
        s(:begin,
          s(:send, nil, :checkout),
          s(:if,
            s(:send, nil, :install_dir), nil,
            s(:return,
              s(:array))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send, nil, :install_dir)),
            s(:args),
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :Dir), :[],
                    s(:str, "{,*,*/*}.gemspec")), :map),
                s(:args,
                  s(:arg, :spec_file)),
                s(:begin,
                  s(:lvasgn, :directory,
                    s(:send,
                      s(:const, nil, :File), :dirname,
                      s(:lvar, :spec_file))),
                  s(:lvasgn, :file,
                    s(:send,
                      s(:const, nil, :File), :basename,
                      s(:lvar, :spec_file))),
                  s(:block,
                    s(:send,
                      s(:const, nil, :Dir), :chdir,
                      s(:lvar, :directory)),
                    s(:args),
                    s(:begin,
                      s(:lvasgn, :spec,
                        s(:send,
                          s(:const,
                            s(:const, nil, :Gem), :Specification), :load,
                          s(:lvar, :file))),
                      s(:if,
                        s(:lvar, :spec),
                        s(:begin,
                          s(:send,
                            s(:lvar, :spec), :base_dir=,
                            s(:send, nil, :base_dir)),
                          s(:send,
                            s(:lvar, :spec), :extension_dir=,
                            s(:send,
                              s(:const, nil, :File), :join,
                              s(:send, nil, :base_dir),
                              s(:str, "extensions"),
                              s(:send,
                                s(:send,
                                  s(:const,
                                    s(:const, nil, :Gem), :Platform), :local), :to_s),
                              s(:send,
                                s(:const, nil, :Gem), :extension_api_version),
                              s(:dstr,
                                s(:begin,
                                  s(:send, nil, :name)),
                                s(:str, "-"),
                                s(:begin,
                                  s(:send, nil, :dir_shortref))))),
                          s(:if,
                            s(:lvar, :spec),
                            s(:send,
                              s(:lvar, :spec), :full_gem_path=,
                              s(:send,
                                s(:const, nil, :File), :dirname,
                                s(:send,
                                  s(:lvar, :spec), :loaded_from))), nil)), nil),
                      s(:lvar, :spec))))), :compact)))),
      s(:def, :uri_hash,
        s(:args),
        s(:begin,
          s(:lvasgn, :normalized,
            s(:if,
              s(:send,
                s(:ivar, :@repository), :=~,
                s(:regexp,
                  s(:str, "^\\w+://(\\w+@)?"),
                  s(:regopt))),
              s(:begin,
                s(:lvasgn, :uri,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send, nil, :URI,
                          s(:ivar, :@repository)), :normalize), :to_s), :sub,
                    s(:regexp,
                      s(:str, "/$"),
                      s(:regopt)),
                    s(:str, ""))),
                s(:block,
                  s(:send,
                    s(:lvar, :uri), :sub,
                    s(:regexp,
                      s(:str, "\\A(\\w+)"),
                      s(:regopt))),
                  s(:args),
                  s(:send,
                    s(:nth_ref, 1), :downcase))),
              s(:ivar, :@repository))),
          s(:send,
            s(:const,
              s(:const, nil, :Digest), :SHA1), :hexdigest,
            s(:lvar, :normalized)))))))
