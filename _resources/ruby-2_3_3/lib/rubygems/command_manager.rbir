s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :CommandManager), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:casgn, nil, :BUILTIN_COMMANDS,
        s(:array,
          s(:sym, :build),
          s(:sym, :cert),
          s(:sym, :check),
          s(:sym, :cleanup),
          s(:sym, :contents),
          s(:sym, :dependency),
          s(:sym, :environment),
          s(:sym, :fetch),
          s(:sym, :generate_index),
          s(:sym, :help),
          s(:sym, :install),
          s(:sym, :list),
          s(:sym, :lock),
          s(:sym, :mirror),
          s(:sym, :open),
          s(:sym, :outdated),
          s(:sym, :owner),
          s(:sym, :pristine),
          s(:sym, :push),
          s(:sym, :query),
          s(:sym, :rdoc),
          s(:sym, :search),
          s(:sym, :server),
          s(:sym, :sources),
          s(:sym, :specification),
          s(:sym, :stale),
          s(:sym, :uninstall),
          s(:sym, :unpack),
          s(:sym, :update),
          s(:sym, :which),
          s(:sym, :yank))),
      s(:defs,
        s(:self), :instance,
        s(:args),
        s(:or_asgn,
          s(:ivasgn, :@command_manager),
          s(:send, nil, :new))),
      s(:def, :instance,
        s(:args),
        s(:self)),
      s(:defs,
        s(:self), :reset,
        s(:args),
        s(:ivasgn, :@command_manager,
          s(:nil))),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:send, nil, :require,
            s(:str, "timeout")),
          s(:ivasgn, :@commands,
            s(:hash)),
          s(:block,
            s(:send,
              s(:const, nil, :BUILTIN_COMMANDS), :each),
            s(:args,
              s(:arg, :name)),
            s(:send, nil, :register_command,
              s(:lvar, :name))))),
      s(:def, :register_command,
        s(:args,
          s(:arg, :command),
          s(:optarg, :obj,
            s(:false))),
        s(:send,
          s(:ivar, :@commands), :[]=,
          s(:lvar, :command),
          s(:lvar, :obj))),
      s(:def, :unregister_command,
        s(:args,
          s(:arg, :command)),
        s(:send,
          s(:ivar, :@commands), :delete,
          s(:lvar, :command))),
      s(:def, :[],
        s(:args,
          s(:arg, :command_name)),
        s(:begin,
          s(:lvasgn, :command_name,
            s(:send,
              s(:lvar, :command_name), :intern)),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@commands), :[],
                s(:lvar, :command_name)), :nil?),
            s(:return,
              s(:nil)), nil),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@commands), :[],
              s(:lvar, :command_name)),
            s(:send, nil, :load_and_instantiate,
              s(:lvar, :command_name))))),
      s(:def, :command_names,
        s(:args),
        s(:send,
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@commands), :keys), :collect),
            s(:args,
              s(:arg, :key)),
            s(:send,
              s(:lvar, :key), :to_s)), :sort)),
      s(:def, :run,
        s(:args,
          s(:arg, :args),
          s(:optarg, :build_args,
            s(:nil))),
        s(:rescue,
          s(:send, nil, :process_args,
            s(:lvar, :args),
            s(:lvar, :build_args)),
          s(:resbody,
            s(:array,
              s(:const, nil, :StandardError),
              s(:const,
                s(:const, nil, :Timeout), :Error)),
            s(:lvasgn, :ex),
            s(:begin,
              s(:send, nil, :alert_error,
                s(:dstr,
                  s(:str, "While executing gem ... ("),
                  s(:begin,
                    s(:send,
                      s(:lvar, :ex), :class)),
                  s(:str, ")\n    "),
                  s(:begin,
                    s(:lvar, :ex)))),
              s(:send,
                s(:send, nil, :ui), :backtrace,
                s(:lvar, :ex)),
              s(:send, nil, :terminate_interaction,
                s(:int, 1)))),
          s(:resbody,
            s(:array,
              s(:const, nil, :Interrupt)), nil,
            s(:begin,
              s(:send, nil, :alert_error,
                s(:str, "Interrupted")),
              s(:send, nil, :terminate_interaction,
                s(:int, 1)))), nil)),
      s(:def, :process_args,
        s(:args,
          s(:arg, :args),
          s(:optarg, :build_args,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:begin,
              s(:send, nil, :say,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Command), :HELP)),
              s(:send, nil, :terminate_interaction,
                s(:int, 1))), nil),
          s(:case,
            s(:send,
              s(:lvar, :args), :first),
            s(:when,
              s(:str, "-h"),
              s(:str, "--help"),
              s(:begin,
                s(:send, nil, :say,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Command), :HELP)),
                s(:send, nil, :terminate_interaction,
                  s(:int, 0)))),
            s(:when,
              s(:str, "-v"),
              s(:str, "--version"),
              s(:begin,
                s(:send, nil, :say,
                  s(:const,
                    s(:const, nil, :Gem), :VERSION)),
                s(:send, nil, :terminate_interaction,
                  s(:int, 0)))),
            s(:when,
              s(:regexp,
                s(:str, "^-"),
                s(:regopt)),
              s(:begin,
                s(:send, nil, :alert_error,
                  s(:dstr,
                    s(:str, "Invalid option: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :args), :first)),
                    s(:str, ".  See 'gem --help'."))),
                s(:send, nil, :terminate_interaction,
                  s(:int, 1)))),
            s(:begin,
              s(:lvasgn, :cmd_name,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :shift), :downcase)),
              s(:lvasgn, :cmd,
                s(:send, nil, :find_command,
                  s(:lvar, :cmd_name))),
              s(:send,
                s(:lvar, :cmd), :invoke_with_build_args,
                s(:lvar, :args),
                s(:lvar, :build_args)))))),
      s(:def, :find_command,
        s(:args,
          s(:arg, :cmd_name)),
        s(:begin,
          s(:lvasgn, :possibilities,
            s(:send, nil, :find_command_possibilities,
              s(:lvar, :cmd_name))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :possibilities), :size), :>,
              s(:int, 1)),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Gem), :CommandLineError),
              s(:dstr,
                s(:str, "Ambiguous command "),
                s(:begin,
                  s(:lvar, :cmd_name)),
                s(:str, " matches ["),
                s(:begin,
                  s(:send,
                    s(:lvar, :possibilities), :join,
                    s(:str, ", "))),
                s(:str, "]"))),
            s(:if,
              s(:send,
                s(:lvar, :possibilities), :empty?),
              s(:send, nil, :raise,
                s(:const,
                  s(:const, nil, :Gem), :CommandLineError),
                s(:dstr,
                  s(:str, "Unknown command "),
                  s(:begin,
                    s(:lvar, :cmd_name)))), nil)),
          s(:send,
            s(:self), :[],
            s(:send,
              s(:lvar, :possibilities), :first)))),
      s(:def, :find_command_possibilities,
        s(:args,
          s(:arg, :cmd_name)),
        s(:begin,
          s(:lvasgn, :len,
            s(:send,
              s(:lvar, :cmd_name), :length)),
          s(:lvasgn, :found,
            s(:block,
              s(:send,
                s(:send, nil, :command_names), :select),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:lvar, :cmd_name), :==,
                s(:send,
                  s(:lvar, :name), :[],
                  s(:int, 0),
                  s(:lvar, :len))))),
          s(:lvasgn, :exact,
            s(:block,
              s(:send,
                s(:lvar, :found), :find),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:lvar, :name), :==,
                s(:lvar, :cmd_name)))),
          s(:if,
            s(:lvar, :exact),
            s(:array,
              s(:lvar, :exact)),
            s(:lvar, :found)))),
      s(:send, nil, :private),
      s(:def, :load_and_instantiate,
        s(:args,
          s(:arg, :command_name)),
        s(:begin,
          s(:lvasgn, :command_name,
            s(:send,
              s(:lvar, :command_name), :to_s)),
          s(:lvasgn, :const_name,
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :command_name), :capitalize), :gsub,
                  s(:regexp,
                    s(:str, "_(.)"),
                    s(:regopt))),
                s(:args),
                s(:send,
                  s(:nth_ref, 1), :upcase)), :<<,
              s(:str, "Command"))),
          s(:lvasgn, :load_error,
            s(:nil)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:kwbegin,
                  s(:rescue,
                    s(:send, nil, :require,
                      s(:dstr,
                        s(:str, "rubygems/commands/"),
                        s(:begin,
                          s(:lvar, :command_name)),
                        s(:str, "_command"))),
                    s(:resbody,
                      s(:array,
                        s(:const, nil, :LoadError)),
                      s(:lvasgn, :e),
                      s(:lvasgn, :load_error,
                        s(:lvar, :e))), nil)),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Commands), :const_get,
                    s(:lvar, :const_name)), :new)),
              s(:resbody,
                s(:array,
                  s(:const, nil, :Exception)),
                s(:lvasgn, :e),
                s(:begin,
                  s(:if,
                    s(:lvar, :load_error),
                    s(:lvasgn, :e,
                      s(:lvar, :load_error)), nil),
                  s(:send, nil, :alert_error,
                    s(:dstr,
                      s(:str, "Loading command: "),
                      s(:begin,
                        s(:lvar, :command_name)),
                      s(:str, " ("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :e), :class)),
                      s(:str, ")\n\t"),
                      s(:begin,
                        s(:lvar, :e)))),
                  s(:send,
                    s(:send, nil, :ui), :backtrace,
                    s(:lvar, :e)))), nil)))))))
