s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/remote_fetcher")),
  s(:module,
    s(:const,
      s(:const, nil, :Gem), :GemcutterUtilities),
    s(:begin,
      s(:block,
        s(:send,
          s(:const, nil, :OptionParser), :accept,
          s(:const, nil, :Symbol)),
        s(:args,
          s(:arg, :value)),
        s(:send,
          s(:lvar, :value), :to_sym)),
      s(:send, nil, :attr_writer,
        s(:sym, :host)),
      s(:def, :add_key_option,
        s(:args),
        s(:block,
          s(:send, nil, :add_option,
            s(:str, "-k"),
            s(:str, "--key KEYNAME"),
            s(:const, nil, :Symbol),
            s(:str, "Use the given API key"),
            s(:str, "from ~/.gem/credentials")),
          s(:args,
            s(:arg, :value),
            s(:arg, :options)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :key),
            s(:lvar, :value)))),
      s(:def, :api_key,
        s(:args),
        s(:if,
          s(:send,
            s(:send, nil, :options), :[],
            s(:sym, :key)),
          s(:send, nil, :verify_api_key,
            s(:send,
              s(:send, nil, :options), :[],
              s(:sym, :key))),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :api_keys), :key?,
              s(:send, nil, :host)),
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :api_keys), :[],
              s(:send, nil, :host)),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :rubygems_api_key)))),
      s(:def, :host,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :disable_default_gem_server), nil,
            s(:lvasgn, :configured_host,
              s(:send,
                s(:const, nil, :Gem), :host))),
          s(:or_asgn,
            s(:ivasgn, :@host),
            s(:kwbegin,
              s(:lvasgn, :env_rubygems_host,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "RUBYGEMS_HOST"))),
              s(:if,
                s(:and,
                  s(:lvar, :env_rubygems_host),
                  s(:send,
                    s(:lvar, :env_rubygems_host), :empty?)),
                s(:lvasgn, :env_rubygems_host,
                  s(:nil)), nil),
              s(:or,
                s(:lvar, :env_rubygems_host),
                s(:lvar, :configured_host)))))),
      s(:def, :rubygems_api_request,
        s(:args,
          s(:arg, :method),
          s(:arg, :path),
          s(:optarg, :host,
            s(:nil)),
          s(:optarg, :allowed_push_host,
            s(:nil)),
          s(:blockarg, :block)),
        s(:begin,
          s(:send, nil, :require,
            s(:str, "net/http")),
          s(:if,
            s(:lvar, :host),
            s(:send,
              s(:self), :host=,
              s(:lvar, :host)), nil),
          s(:if,
            s(:send,
              s(:self), :host), nil,
            s(:begin,
              s(:send, nil, :alert_error,
                s(:str, "You must specify a gem server")),
              s(:send, nil, :terminate_interaction,
                s(:int, 1)))),
          s(:if,
            s(:lvar, :allowed_push_host),
            s(:begin,
              s(:lvasgn, :allowed_host_uri,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:lvar, :allowed_push_host))),
              s(:lvasgn, :host_uri,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:send,
                    s(:self), :host))),
              s(:if,
                s(:and,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :host_uri), :scheme), :==,
                      s(:send,
                        s(:lvar, :allowed_host_uri), :scheme))),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :host_uri), :host), :==,
                      s(:send,
                        s(:lvar, :allowed_host_uri), :host)))), nil,
                s(:begin,
                  s(:send, nil, :alert_error,
                    s(:dstr,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:self), :host), :inspect)),
                      s(:str, " is not allowed by the gemspec, which only allows "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :allowed_push_host), :inspect)))),
                  s(:send, nil, :terminate_interaction,
                    s(:int, 1))))), nil),
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:self), :host)),
                s(:str, "/"),
                s(:begin,
                  s(:lvar, :path))))),
          s(:lvasgn, :request_method,
            s(:send,
              s(:const,
                s(:const, nil, :Net), :HTTP), :const_get,
              s(:send,
                s(:send,
                  s(:lvar, :method), :to_s), :capitalize))),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RemoteFetcher), :fetcher), :request,
            s(:lvar, :uri),
            s(:lvar, :request_method),
            s(:block_pass,
              s(:lvar, :block))))),
      s(:def, :sign_in,
        s(:args,
          s(:optarg, :sign_in_host,
            s(:nil))),
        s(:begin,
          s(:or_asgn,
            s(:lvasgn, :sign_in_host),
            s(:send,
              s(:self), :host)),
          s(:if,
            s(:send, nil, :api_key),
            s(:return), nil),
          s(:lvasgn, :pretty_host,
            s(:if,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :DEFAULT_HOST), :==,
                s(:lvar, :sign_in_host)),
              s(:str, "RubyGems.org"),
              s(:lvar, :sign_in_host))),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Enter your "),
              s(:begin,
                s(:lvar, :pretty_host)),
              s(:str, " credentials."))),
          s(:send, nil, :say,
            s(:send,
              s(:str, "Don't have an account yet? "), :+,
              s(:dstr,
                s(:str, "Create one at "),
                s(:begin,
                  s(:lvar, :sign_in_host)),
                s(:str, "/sign_up")))),
          s(:lvasgn, :email,
            s(:send, nil, :ask,
              s(:str, "   Email: "))),
          s(:lvasgn, :password,
            s(:send, nil, :ask_for_password,
              s(:str, "Password: "))),
          s(:send, nil, :say,
            s(:str, "\n")),
          s(:lvasgn, :response,
            s(:block,
              s(:send, nil, :rubygems_api_request,
                s(:sym, :get),
                s(:str, "api/v1/api_key"),
                s(:lvar, :sign_in_host)),
              s(:args,
                s(:arg, :request)),
              s(:send,
                s(:lvar, :request), :basic_auth,
                s(:lvar, :email),
                s(:lvar, :password)))),
          s(:block,
            s(:send, nil, :with_response,
              s(:lvar, :response)),
            s(:args,
              s(:arg, :resp)),
            s(:begin,
              s(:send, nil, :say,
                s(:str, "Signed in.")),
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :rubygems_api_key=,
                s(:send,
                  s(:lvar, :resp), :body)))))),
      s(:def, :verify_api_key,
        s(:args,
          s(:arg, :key)),
        s(:if,
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :api_keys), :key?,
            s(:lvar, :key)),
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :api_keys), :[],
            s(:lvar, :key)),
          s(:begin,
            s(:send, nil, :alert_error,
              s(:str, "No such API key. Please add it to your configuration (done automatically on initial `gem push`).")),
            s(:send, nil, :terminate_interaction,
              s(:int, 1))))),
      s(:def, :with_response,
        s(:args,
          s(:arg, :response),
          s(:optarg, :error_prefix,
            s(:nil))),
        s(:case,
          s(:lvar, :response),
          s(:when,
            s(:const,
              s(:const, nil, :Net), :HTTPSuccess),
            s(:if,
              s(:send, nil, :block_given?),
              s(:yield,
                s(:lvar, :response)),
              s(:send, nil, :say,
                s(:send,
                  s(:lvar, :response), :body)))),
          s(:begin,
            s(:lvasgn, :message,
              s(:send,
                s(:lvar, :response), :body)),
            s(:if,
              s(:lvar, :error_prefix),
              s(:lvasgn, :message,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :error_prefix)),
                  s(:str, ": "),
                  s(:begin,
                    s(:lvar, :message)))), nil),
            s(:send, nil, :say,
              s(:lvar, :message)),
            s(:send, nil, :terminate_interaction,
              s(:int, 1))))))))
