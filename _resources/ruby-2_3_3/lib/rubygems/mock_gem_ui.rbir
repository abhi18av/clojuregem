s(:begin,
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :MockGemUi),
    s(:const,
      s(:const, nil, :Gem), :StreamUI),
    s(:begin,
      s(:class,
        s(:const, nil, :InputEOFError),
        s(:const, nil, :RuntimeError),
        s(:def, :initialize,
          s(:args,
            s(:arg, :question)),
          s(:super,
            s(:dstr,
              s(:str, "Out of input for MockGemUi on "),
              s(:begin,
                s(:send,
                  s(:lvar, :question), :inspect)))))),
      s(:class,
        s(:const, nil, :TermError),
        s(:const, nil, :RuntimeError),
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :exit_code)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :exit_code)),
            s(:begin,
              s(:zsuper),
              s(:ivasgn, :@exit_code,
                s(:lvar, :exit_code)))))),
      s(:class,
        s(:const, nil, :SystemExitException),
        s(:const, nil, :RuntimeError), nil),
      s(:module,
        s(:const, nil, :TTY),
        s(:begin,
          s(:send, nil, :attr_accessor,
            s(:sym, :tty)),
          s(:def, :tty?,
            s(:args),
            s(:begin,
              s(:if,
                s(:defined?,
                  s(:ivar, :@tty)), nil,
                s(:ivasgn, :@tty,
                  s(:true))),
              s(:ivar, :@tty))),
          s(:def, :noecho,
            s(:args),
            s(:yield,
              s(:self))))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :input,
            s(:str, ""))),
        s(:begin,
          s(:lvasgn, :ins,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:lvar, :input))),
          s(:lvasgn, :outs,
            s(:send,
              s(:const, nil, :StringIO), :new)),
          s(:lvasgn, :errs,
            s(:send,
              s(:const, nil, :StringIO), :new)),
          s(:send,
            s(:lvar, :ins), :extend,
            s(:const, nil, :TTY)),
          s(:send,
            s(:lvar, :outs), :extend,
            s(:const, nil, :TTY)),
          s(:send,
            s(:lvar, :errs), :extend,
            s(:const, nil, :TTY)),
          s(:super,
            s(:lvar, :ins),
            s(:lvar, :outs),
            s(:lvar, :errs),
            s(:true)),
          s(:ivasgn, :@terminated,
            s(:false)))),
      s(:def, :ask,
        s(:args,
          s(:arg, :question)),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@ins), :eof?),
            s(:send, nil, :raise,
              s(:const, nil, :InputEOFError),
              s(:lvar, :question)), nil),
          s(:zsuper))),
      s(:def, :input,
        s(:args),
        s(:send,
          s(:ivar, :@ins), :string)),
      s(:def, :output,
        s(:args),
        s(:send,
          s(:ivar, :@outs), :string)),
      s(:def, :error,
        s(:args),
        s(:send,
          s(:ivar, :@errs), :string)),
      s(:def, :terminated?,
        s(:args),
        s(:ivar, :@terminated)),
      s(:def, :terminate_interaction,
        s(:args,
          s(:optarg, :status,
            s(:int, 0))),
        s(:begin,
          s(:ivasgn, :@terminated,
            s(:true)),
          s(:if,
            s(:send,
              s(:lvar, :status), :!=,
              s(:int, 0)),
            s(:send, nil, :raise,
              s(:const, nil, :TermError),
              s(:lvar, :status)), nil),
          s(:send, nil, :raise,
            s(:const, nil, :SystemExitException)))))))
