s(:module,
  s(:const, nil, :Gem),
  s(:begin,
    s(:class,
      s(:const, nil, :LoadError),
      s(:const,
        s(:cbase), :LoadError),
      s(:begin,
        s(:send, nil, :attr_accessor,
          s(:sym, :name)),
        s(:send, nil, :attr_accessor,
          s(:sym, :requirement)))),
    s(:class,
      s(:const, nil, :ConflictError),
      s(:const, nil, :LoadError),
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :conflicts)),
        s(:send, nil, :attr_reader,
          s(:sym, :target)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :target),
            s(:arg, :conflicts)),
          s(:begin,
            s(:ivasgn, :@target,
              s(:lvar, :target)),
            s(:ivasgn, :@conflicts,
              s(:lvar, :conflicts)),
            s(:ivasgn, :@name,
              s(:send,
                s(:lvar, :target), :name)),
            s(:lvasgn, :reason,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :conflicts), :map),
                  s(:args,
                    s(:arg, :act),
                    s(:arg, :dependencies)),
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :act), :full_name)),
                    s(:str, " conflicts with "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :dependencies), :join,
                        s(:str, ", "))))), :join,
                s(:str, ", "))),
            s(:super,
              s(:dstr,
                s(:str, "Unable to activate "),
                s(:begin,
                  s(:send,
                    s(:lvar, :target), :full_name)),
                s(:str, ", because "),
                s(:begin,
                  s(:lvar, :reason)))))))),
    s(:class,
      s(:const, nil, :ErrorReason), nil, nil),
    s(:class,
      s(:const, nil, :PlatformMismatch),
      s(:const, nil, :ErrorReason),
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :name)),
        s(:send, nil, :attr_reader,
          s(:sym, :version)),
        s(:send, nil, :attr_reader,
          s(:sym, :platforms)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :name),
            s(:arg, :version)),
          s(:begin,
            s(:ivasgn, :@name,
              s(:lvar, :name)),
            s(:ivasgn, :@version,
              s(:lvar, :version)),
            s(:ivasgn, :@platforms,
              s(:array)))),
        s(:def, :add_platform,
          s(:args,
            s(:arg, :platform)),
          s(:send,
            s(:ivar, :@platforms), :<<,
            s(:lvar, :platform))),
        s(:def, :wordy,
          s(:args),
          s(:send,
            s(:str, "Found %s (%s), but was for platform%s %s"), :%,
            s(:array,
              s(:ivar, :@name),
              s(:ivar, :@version),
              s(:if,
                s(:send,
                  s(:send,
                    s(:ivar, :@platforms), :size), :==,
                  s(:int, 1)),
                s(:str, ""),
                s(:str, "s")),
              s(:send,
                s(:ivar, :@platforms), :join,
                s(:str, " ,"))))))),
    s(:class,
      s(:const, nil, :SourceFetchProblem),
      s(:const, nil, :ErrorReason),
      s(:begin,
        s(:def, :initialize,
          s(:args,
            s(:arg, :source),
            s(:arg, :error)),
          s(:begin,
            s(:ivasgn, :@source,
              s(:lvar, :source)),
            s(:ivasgn, :@error,
              s(:lvar, :error)))),
        s(:send, nil, :attr_reader,
          s(:sym, :source)),
        s(:send, nil, :attr_reader,
          s(:sym, :error)),
        s(:def, :wordy,
          s(:args),
          s(:dstr,
            s(:str, "Unable to download data from "),
            s(:begin,
              s(:send,
                s(:ivar, :@source), :uri)),
            s(:str, " - "),
            s(:begin,
              s(:send,
                s(:ivar, :@error), :message)))),
        s(:alias,
          s(:sym, :exception),
          s(:sym, :error))))))
