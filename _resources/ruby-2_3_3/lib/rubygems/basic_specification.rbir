s(:class,
  s(:const,
    s(:const, nil, :Gem), :BasicSpecification), nil,
  s(:begin,
    s(:send, nil, :attr_writer,
      s(:sym, :base_dir)),
    s(:send, nil, :attr_writer,
      s(:sym, :extension_dir)),
    s(:send, nil, :attr_writer,
      s(:sym, :ignored)),
    s(:send, nil, :attr_accessor,
      s(:sym, :loaded_from)),
    s(:send, nil, :attr_writer,
      s(:sym, :full_gem_path)),
    s(:def, :initialize,
      s(:args),
      s(:send, nil, :internal_init)),
    s(:defs,
      s(:self), :default_specifications_dir,
      s(:args),
      s(:send,
        s(:const, nil, :File), :join,
        s(:send,
          s(:const, nil, :Gem), :default_dir),
        s(:str, "specifications"),
        s(:str, "default"))),
    s(:def, :gem_build_complete_path,
      s(:args),
      s(:send,
        s(:const, nil, :File), :join,
        s(:send, nil, :extension_dir),
        s(:str, "gem.build_complete"))),
    s(:def, :activated?,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :base_dir,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :contains_requirable_file?,
      s(:args,
        s(:arg, :file)),
      s(:begin,
        s(:if,
          s(:ivar, :@ignored),
          s(:return,
            s(:false)),
          s(:if,
            s(:send, nil, :missing_extensions?),
            s(:begin,
              s(:ivasgn, :@ignored,
                s(:true)),
              s(:send, nil, :warn,
                s(:send,
                  s(:dstr,
                    s(:str, "Ignoring "),
                    s(:begin,
                      s(:send, nil, :full_name)),
                    s(:str, " because its extensions are not built.  ")), :+,
                  s(:dstr,
                    s(:str, "Try: gem pristine "),
                    s(:begin,
                      s(:send, nil, :name)),
                    s(:str, " --version "),
                    s(:begin,
                      s(:send, nil, :version))))),
              s(:return,
                s(:false))), nil)),
        s(:send, nil, :have_file?,
          s(:lvar, :file),
          s(:send,
            s(:const, nil, :Gem), :suffixes)))),
    s(:def, :default_gem?,
      s(:args),
      s(:and,
        s(:send, nil, :loaded_from),
        s(:send,
          s(:send,
            s(:const, nil, :File), :dirname,
            s(:send, nil, :loaded_from)), :==,
          s(:send,
            s(:send,
              s(:self), :class), :default_specifications_dir)))),
    s(:def, :extension_dir,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@extension_dir),
        s(:send,
          s(:send,
            s(:const, nil, :File), :expand_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send, nil, :extensions_dir),
              s(:send, nil, :full_name))), :untaint))),
    s(:def, :extensions_dir,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@extensions_dir),
        s(:or,
          s(:send,
            s(:const, nil, :Gem), :default_ext_dir_for,
            s(:send, nil, :base_dir)),
          s(:send,
            s(:const, nil, :File), :join,
            s(:send, nil, :base_dir),
            s(:str, "extensions"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :local), :to_s),
            s(:send,
              s(:const, nil, :Gem), :extension_api_version))))),
    s(:def, :find_full_gem_path,
      s(:args),
      s(:begin,
        s(:lvasgn, :path,
          s(:send,
            s(:const, nil, :File), :expand_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send, nil, :gems_dir),
              s(:send, nil, :full_name)))),
        s(:send,
          s(:lvar, :path), :untaint),
        s(:lvar, :path))),
    s(:send, nil, :private,
      s(:sym, :find_full_gem_path)),
    s(:def, :full_gem_path,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@full_gem_path),
        s(:send, nil, :find_full_gem_path))),
    s(:def, :full_name,
      s(:args),
      s(:if,
        s(:or,
          s(:send,
            s(:send, nil, :platform), :==,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY)),
          s(:send,
            s(:send, nil, :platform), :nil?)),
        s(:send,
          s(:send,
            s(:dstr,
              s(:begin,
                s(:send, nil, :name)),
              s(:str, "-"),
              s(:begin,
                s(:send, nil, :version))), :dup), :untaint),
        s(:send,
          s(:send,
            s(:dstr,
              s(:begin,
                s(:send, nil, :name)),
              s(:str, "-"),
              s(:begin,
                s(:send, nil, :version)),
              s(:str, "-"),
              s(:begin,
                s(:send, nil, :platform))), :dup), :untaint))),
    s(:def, :full_require_paths,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@full_require_paths),
        s(:kwbegin,
          s(:lvasgn, :full_paths,
            s(:block,
              s(:send,
                s(:send, nil, :raw_require_paths), :map),
              s(:args,
                s(:arg, :path)),
              s(:send,
                s(:const, nil, :File), :join,
                s(:send, nil, :full_gem_path),
                s(:send,
                  s(:lvar, :path), :untaint)))),
          s(:if,
            s(:send, nil, :have_extensions?),
            s(:send,
              s(:lvar, :full_paths), :<<,
              s(:send, nil, :extension_dir)), nil),
          s(:lvar, :full_paths)))),
    s(:def, :datadir,
      s(:args),
      s(:send,
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:send,
            s(:const, nil, :File), :join,
            s(:send, nil, :gems_dir),
            s(:send, nil, :full_name),
            s(:str, "data"),
            s(:send, nil, :name))), :untaint)),
    s(:def, :to_fullpath,
      s(:args,
        s(:arg, :path)),
      s(:if,
        s(:send, nil, :activated?),
        s(:begin,
          s(:or_asgn,
            s(:ivasgn, :@paths_map),
            s(:hash)),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@paths_map), :[],
              s(:lvar, :path)),
            s(:kwbegin,
              s(:lvasgn, :fullpath,
                s(:nil)),
              s(:lvasgn, :suffixes,
                s(:send,
                  s(:const, nil, :Gem), :suffixes)),
              s(:if,
                s(:block,
                  s(:send,
                    s(:lvar, :suffixes), :find),
                  s(:args,
                    s(:arg, :suf)),
                  s(:block,
                    s(:send,
                      s(:send, nil, :full_require_paths), :find),
                    s(:args,
                      s(:arg, :dir)),
                    s(:send,
                      s(:const, nil, :File), :file?,
                      s(:lvasgn, :fullpath,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :dir)),
                          s(:str, "/"),
                          s(:begin,
                            s(:lvar, :path)),
                          s(:begin,
                            s(:lvar, :suf))))))),
                s(:lvar, :fullpath),
                s(:nil))))),
        s(:nil))),
    s(:def, :gem_dir,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@gem_dir),
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:send,
            s(:const, nil, :File), :join,
            s(:send, nil, :gems_dir),
            s(:send, nil, :full_name))))),
    s(:def, :gems_dir,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :internal_init,
      s(:args),
      s(:begin,
        s(:ivasgn, :@extension_dir,
          s(:nil)),
        s(:ivasgn, :@extensions_dir,
          s(:nil)),
        s(:ivasgn, :@full_gem_path,
          s(:nil)),
        s(:ivasgn, :@gem_dir,
          s(:nil)),
        s(:ivasgn, :@ignored,
          s(:nil)))),
    s(:def, :name,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :platform,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :raw_require_paths,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :require_paths,
      s(:args),
      s(:begin,
        s(:if,
          s(:send, nil, :have_extensions?), nil,
          s(:return,
            s(:send, nil, :raw_require_paths))),
        s(:send,
          s(:array,
            s(:send, nil, :extension_dir)), :concat,
          s(:send, nil, :raw_require_paths)))),
    s(:def, :source_paths,
      s(:args),
      s(:begin,
        s(:lvasgn, :paths,
          s(:send,
            s(:send, nil, :raw_require_paths), :dup)),
        s(:if,
          s(:send, nil, :have_extensions?),
          s(:begin,
            s(:lvasgn, :ext_dirs,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send, nil, :extensions), :map),
                  s(:args,
                    s(:arg, :extension)),
                  s(:send,
                    s(:send,
                      s(:lvar, :extension), :split,
                      s(:const,
                        s(:const, nil, :File), :SEPARATOR),
                      s(:int, 2)), :first)), :uniq)),
            s(:send,
              s(:lvar, :paths), :concat,
              s(:lvar, :ext_dirs))), nil),
        s(:send,
          s(:lvar, :paths), :uniq))),
    s(:def, :matches_for_glob,
      s(:args,
        s(:arg, :glob)),
      s(:begin,
        s(:lvasgn, :glob,
          s(:send,
            s(:const, nil, :File), :join,
            s(:send,
              s(:self), :lib_dirs_glob),
            s(:lvar, :glob))),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Dir), :[],
              s(:lvar, :glob)), :map),
          s(:args,
            s(:arg, :f)),
          s(:send,
            s(:lvar, :f), :untaint)))),
    s(:def, :lib_dirs_glob,
      s(:args),
      s(:begin,
        s(:lvasgn, :dirs,
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:self), :require_paths), :size), :>,
              s(:int, 1)),
            s(:dstr,
              s(:str, "{"),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:self), :require_paths), :join,
                  s(:str, ","))),
              s(:str, "}")),
            s(:send,
              s(:send,
                s(:self), :require_paths), :first))),
        s(:send,
          s(:send,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:self), :full_gem_path)),
              s(:str, "/"),
              s(:begin,
                s(:lvar, :dirs))), :dup), :untaint))),
    s(:def, :to_spec,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :version,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:def, :stubbed?,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError))),
    s(:send, nil, :private),
    s(:def, :have_extensions?,
      s(:args),
      s(:send,
        s(:send,
          s(:send, nil, :extensions), :empty?), :!)),
    s(:def, :have_file?,
      s(:args,
        s(:arg, :file),
        s(:arg, :suffixes)),
      s(:begin,
        s(:if,
          s(:block,
            s(:send,
              s(:send, nil, :raw_require_paths), :any?),
            s(:args,
              s(:arg, :path)),
            s(:begin,
              s(:lvasgn, :base,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:send, nil, :gems_dir),
                    s(:send, nil, :full_name),
                    s(:send,
                      s(:lvar, :path), :untaint),
                    s(:lvar, :file)), :untaint)),
              s(:block,
                s(:send,
                  s(:lvar, :suffixes), :any?),
                s(:args,
                  s(:arg, :suf)),
                s(:send,
                  s(:const, nil, :File), :file?,
                  s(:send,
                    s(:lvar, :base), :+,
                    s(:lvar, :suf)))))),
          s(:return,
            s(:true)), nil),
        s(:if,
          s(:send, nil, :have_extensions?),
          s(:begin,
            s(:lvasgn, :base,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send, nil, :extension_dir),
                s(:lvar, :file))),
            s(:block,
              s(:send,
                s(:lvar, :suffixes), :any?),
              s(:args,
                s(:arg, :suf)),
              s(:send,
                s(:const, nil, :File), :file?,
                s(:send,
                  s(:lvar, :base), :+,
                  s(:lvar, :suf))))),
          s(:false))))))
