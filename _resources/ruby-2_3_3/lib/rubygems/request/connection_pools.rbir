s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Request), :ConnectionPools), nil,
    s(:begin,
      s(:ivasgn, :@client,
        s(:const,
          s(:const, nil, :Net), :HTTP)),
      s(:sclass,
        s(:self),
        s(:send, nil, :attr_accessor,
          s(:sym, :client))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :proxy_uri),
          s(:arg, :cert_files)),
        s(:begin,
          s(:ivasgn, :@proxy_uri,
            s(:lvar, :proxy_uri)),
          s(:ivasgn, :@cert_files,
            s(:lvar, :cert_files)),
          s(:ivasgn, :@pools,
            s(:hash)),
          s(:ivasgn, :@pool_mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)))),
      s(:def, :pool_for,
        s(:args,
          s(:arg, :uri)),
        s(:begin,
          s(:lvasgn, :http_args,
            s(:send, nil, :net_http_args,
              s(:lvar, :uri),
              s(:ivar, :@proxy_uri))),
          s(:lvasgn, :key,
            s(:send,
              s(:lvar, :http_args), :+,
              s(:array,
                s(:send, nil, :https?,
                  s(:lvar, :uri))))),
          s(:block,
            s(:send,
              s(:ivar, :@pool_mutex), :synchronize),
            s(:args),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@pools), :[],
                s(:lvar, :key)),
              s(:if,
                s(:send, nil, :https?,
                  s(:lvar, :uri)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Request), :HTTPSPool), :new,
                  s(:lvar, :http_args),
                  s(:ivar, :@cert_files),
                  s(:ivar, :@proxy_uri)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Request), :HTTPPool), :new,
                  s(:lvar, :http_args),
                  s(:ivar, :@cert_files),
                  s(:ivar, :@proxy_uri))))))),
      s(:def, :close_all,
        s(:args),
        s(:block,
          s(:send,
            s(:ivar, :@pools), :each_value),
          s(:args,
            s(:arg, :pool)),
          s(:send,
            s(:lvar, :pool), :close_all))),
      s(:send, nil, :private),
      s(:def, :get_no_proxy_from_env,
        s(:args),
        s(:begin,
          s(:lvasgn, :env_no_proxy,
            s(:or,
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "no_proxy")),
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "NO_PROXY")))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :env_no_proxy), :nil?),
              s(:send,
                s(:lvar, :env_no_proxy), :empty?)),
            s(:return,
              s(:array)), nil),
          s(:send,
            s(:lvar, :env_no_proxy), :split,
            s(:regexp,
              s(:str, "\\s*,\\s*"),
              s(:regopt))))),
      s(:def, :https?,
        s(:args,
          s(:arg, :uri)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :uri), :scheme), :downcase), :==,
          s(:str, "https"))),
      s(:def, :no_proxy?,
        s(:args,
          s(:arg, :host),
          s(:arg, :env_no_proxy)),
        s(:begin,
          s(:lvasgn, :host,
            s(:send,
              s(:lvar, :host), :downcase)),
          s(:block,
            s(:send,
              s(:lvar, :env_no_proxy), :any?),
            s(:args,
              s(:arg, :pattern)),
            s(:begin,
              s(:lvasgn, :pattern,
                s(:send,
                  s(:lvar, :pattern), :downcase)),
              s(:or,
                s(:send,
                  s(:send,
                    s(:lvar, :host), :[],
                    s(:send,
                      s(:send,
                        s(:lvar, :pattern), :length), :-@),
                    s(:send,
                      s(:lvar, :pattern), :length)), :==,
                  s(:lvar, :pattern)),
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :pattern), :start_with?,
                      s(:str, ".")),
                    s(:send,
                      s(:send,
                        s(:lvar, :pattern), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1))), :==,
                      s(:lvar, :host))))))))),
      s(:def, :net_http_args,
        s(:args,
          s(:arg, :uri),
          s(:arg, :proxy_uri)),
        s(:begin,
          s(:lvasgn, :hostname,
            s(:if,
              s(:send,
                s(:lvar, :uri), :respond_to?,
                s(:sym, :hostname)),
              s(:send,
                s(:lvar, :uri), :hostname),
              s(:send,
                s(:lvar, :uri), :host))),
          s(:lvasgn, :net_http_args,
            s(:array,
              s(:lvar, :hostname),
              s(:send,
                s(:lvar, :uri), :port))),
          s(:lvasgn, :no_proxy,
            s(:send, nil, :get_no_proxy_from_env)),
          s(:if,
            s(:and,
              s(:lvar, :proxy_uri),
              s(:send,
                s(:send, nil, :no_proxy?,
                  s(:lvar, :hostname),
                  s(:lvar, :no_proxy)), :!)),
            s(:begin,
              s(:lvasgn, :proxy_hostname,
                s(:if,
                  s(:send,
                    s(:lvar, :proxy_uri), :respond_to?,
                    s(:sym, :hostname)),
                  s(:send,
                    s(:lvar, :proxy_uri), :hostname),
                  s(:send,
                    s(:lvar, :proxy_uri), :host))),
              s(:send,
                s(:lvar, :net_http_args), :+,
                s(:array,
                  s(:lvar, :proxy_hostname),
                  s(:send,
                    s(:lvar, :proxy_uri), :port),
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :UriFormatter), :new,
                      s(:send,
                        s(:lvar, :proxy_uri), :user)), :unescape),
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :UriFormatter), :new,
                      s(:send,
                        s(:lvar, :proxy_uri), :password)), :unescape)))),
            s(:if,
              s(:send, nil, :no_proxy?,
                s(:lvar, :hostname),
                s(:lvar, :no_proxy)),
              s(:send,
                s(:lvar, :net_http_args), :+,
                s(:array,
                  s(:nil),
                  s(:nil))),
              s(:lvar, :net_http_args))))))))
