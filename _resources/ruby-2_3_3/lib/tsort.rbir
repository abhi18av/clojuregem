s(:module,
  s(:const, nil, :TSort),
  s(:begin,
    s(:class,
      s(:const, nil, :Cyclic),
      s(:const, nil, :StandardError), nil),
    s(:def, :tsort,
      s(:args),
      s(:begin,
        s(:lvasgn, :each_node,
          s(:send, nil, :method,
            s(:sym, :tsort_each_node))),
        s(:lvasgn, :each_child,
          s(:send, nil, :method,
            s(:sym, :tsort_each_child))),
        s(:send,
          s(:const, nil, :TSort), :tsort,
          s(:lvar, :each_node),
          s(:lvar, :each_child)))),
    s(:defs,
      s(:const, nil, :TSort), :tsort,
      s(:args,
        s(:arg, :each_node),
        s(:arg, :each_child)),
      s(:send,
        s(:send,
          s(:const, nil, :TSort), :tsort_each,
          s(:lvar, :each_node),
          s(:lvar, :each_child)), :to_a)),
    s(:def, :tsort_each,
      s(:args,
        s(:blockarg, :block)),
      s(:begin,
        s(:lvasgn, :each_node,
          s(:send, nil, :method,
            s(:sym, :tsort_each_node))),
        s(:lvasgn, :each_child,
          s(:send, nil, :method,
            s(:sym, :tsort_each_child))),
        s(:send,
          s(:const, nil, :TSort), :tsort_each,
          s(:lvar, :each_node),
          s(:lvar, :each_child),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:defs,
      s(:const, nil, :TSort), :tsort_each,
      s(:args,
        s(:arg, :each_node),
        s(:arg, :each_child)),
      s(:begin,
        s(:if,
          s(:send, nil, :block_given?), nil,
          s(:return,
            s(:send, nil, :to_enum,
              s(:send, nil, :__method__),
              s(:lvar, :each_node),
              s(:lvar, :each_child)))),
        s(:block,
          s(:send,
            s(:const, nil, :TSort), :each_strongly_connected_component,
            s(:lvar, :each_node),
            s(:lvar, :each_child)),
          s(:args,
            s(:arg, :component)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :component), :size), :==,
              s(:int, 1)),
            s(:yield,
              s(:send,
                s(:lvar, :component), :first)),
            s(:send, nil, :raise,
              s(:send,
                s(:const, nil, :Cyclic), :new,
                s(:dstr,
                  s(:str, "topological sort failed: "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :component), :inspect))))))))),
    s(:def, :strongly_connected_components,
      s(:args),
      s(:begin,
        s(:lvasgn, :each_node,
          s(:send, nil, :method,
            s(:sym, :tsort_each_node))),
        s(:lvasgn, :each_child,
          s(:send, nil, :method,
            s(:sym, :tsort_each_child))),
        s(:send,
          s(:const, nil, :TSort), :strongly_connected_components,
          s(:lvar, :each_node),
          s(:lvar, :each_child)))),
    s(:defs,
      s(:const, nil, :TSort), :strongly_connected_components,
      s(:args,
        s(:arg, :each_node),
        s(:arg, :each_child)),
      s(:send,
        s(:send,
          s(:const, nil, :TSort), :each_strongly_connected_component,
          s(:lvar, :each_node),
          s(:lvar, :each_child)), :to_a)),
    s(:def, :each_strongly_connected_component,
      s(:args,
        s(:blockarg, :block)),
      s(:begin,
        s(:lvasgn, :each_node,
          s(:send, nil, :method,
            s(:sym, :tsort_each_node))),
        s(:lvasgn, :each_child,
          s(:send, nil, :method,
            s(:sym, :tsort_each_child))),
        s(:send,
          s(:const, nil, :TSort), :each_strongly_connected_component,
          s(:lvar, :each_node),
          s(:lvar, :each_child),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:defs,
      s(:const, nil, :TSort), :each_strongly_connected_component,
      s(:args,
        s(:arg, :each_node),
        s(:arg, :each_child)),
      s(:begin,
        s(:if,
          s(:send, nil, :block_given?), nil,
          s(:return,
            s(:send, nil, :to_enum,
              s(:send, nil, :__method__),
              s(:lvar, :each_node),
              s(:lvar, :each_child)))),
        s(:lvasgn, :id_map,
          s(:hash)),
        s(:lvasgn, :stack,
          s(:array)),
        s(:block,
          s(:send,
            s(:lvar, :each_node), :call),
          s(:args,
            s(:arg, :node)),
          s(:if,
            s(:send,
              s(:lvar, :id_map), :include?,
              s(:lvar, :node)), nil,
            s(:block,
              s(:send,
                s(:const, nil, :TSort), :each_strongly_connected_component_from,
                s(:lvar, :node),
                s(:lvar, :each_child),
                s(:lvar, :id_map),
                s(:lvar, :stack)),
              s(:args,
                s(:arg, :c)),
              s(:yield,
                s(:lvar, :c))))),
        s(:nil))),
    s(:def, :each_strongly_connected_component_from,
      s(:args,
        s(:arg, :node),
        s(:optarg, :id_map,
          s(:hash)),
        s(:optarg, :stack,
          s(:array)),
        s(:blockarg, :block)),
      s(:send,
        s(:const, nil, :TSort), :each_strongly_connected_component_from,
        s(:lvar, :node),
        s(:send, nil, :method,
          s(:sym, :tsort_each_child)),
        s(:lvar, :id_map),
        s(:lvar, :stack),
        s(:block_pass,
          s(:lvar, :block)))),
    s(:defs,
      s(:const, nil, :TSort), :each_strongly_connected_component_from,
      s(:args,
        s(:arg, :node),
        s(:arg, :each_child),
        s(:optarg, :id_map,
          s(:hash)),
        s(:optarg, :stack,
          s(:array))),
      s(:begin,
        s(:if,
          s(:send, nil, :block_given?), nil,
          s(:return,
            s(:send, nil, :to_enum,
              s(:send, nil, :__method__),
              s(:lvar, :node),
              s(:lvar, :each_child),
              s(:lvar, :id_map),
              s(:lvar, :stack)))),
        s(:lvasgn, :minimum_id,
          s(:lvasgn, :node_id,
            s(:send,
              s(:lvar, :id_map), :[]=,
              s(:lvar, :node),
              s(:send,
                s(:lvar, :id_map), :size)))),
        s(:lvasgn, :stack_length,
          s(:send,
            s(:lvar, :stack), :length)),
        s(:send,
          s(:lvar, :stack), :<<,
          s(:lvar, :node)),
        s(:block,
          s(:send,
            s(:lvar, :each_child), :call,
            s(:lvar, :node)),
          s(:args,
            s(:arg, :child)),
          s(:if,
            s(:send,
              s(:lvar, :id_map), :include?,
              s(:lvar, :child)),
            s(:begin,
              s(:lvasgn, :child_id,
                s(:send,
                  s(:lvar, :id_map), :[],
                  s(:lvar, :child))),
              s(:if,
                s(:and,
                  s(:lvar, :child_id),
                  s(:send,
                    s(:lvar, :child_id), :<,
                    s(:lvar, :minimum_id))),
                s(:lvasgn, :minimum_id,
                  s(:lvar, :child_id)), nil)),
            s(:begin,
              s(:lvasgn, :sub_minimum_id,
                s(:block,
                  s(:send,
                    s(:const, nil, :TSort), :each_strongly_connected_component_from,
                    s(:lvar, :child),
                    s(:lvar, :each_child),
                    s(:lvar, :id_map),
                    s(:lvar, :stack)),
                  s(:args,
                    s(:arg, :c)),
                  s(:yield,
                    s(:lvar, :c)))),
              s(:if,
                s(:send,
                  s(:lvar, :sub_minimum_id), :<,
                  s(:lvar, :minimum_id)),
                s(:lvasgn, :minimum_id,
                  s(:lvar, :sub_minimum_id)), nil)))),
        s(:if,
          s(:send,
            s(:lvar, :node_id), :==,
            s(:lvar, :minimum_id)),
          s(:begin,
            s(:lvasgn, :component,
              s(:send,
                s(:lvar, :stack), :slice!,
                s(:irange,
                  s(:lvar, :stack_length),
                  s(:int, -1)))),
            s(:block,
              s(:send,
                s(:lvar, :component), :each),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:lvar, :id_map), :[]=,
                s(:lvar, :n),
                s(:nil))),
            s(:yield,
              s(:lvar, :component))), nil),
        s(:lvar, :minimum_id))),
    s(:def, :tsort_each_node,
      s(:args),
      s(:send, nil, :raise,
        s(:send,
          s(:const, nil, :NotImplementedError), :new))),
    s(:def, :tsort_each_child,
      s(:args,
        s(:arg, :node)),
      s(:send, nil, :raise,
        s(:send,
          s(:const, nil, :NotImplementedError), :new)))))
