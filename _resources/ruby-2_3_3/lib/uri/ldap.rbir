s(:begin,
  s(:send, nil, :require,
    s(:str, "uri/generic")),
  s(:module,
    s(:const, nil, :URI),
    s(:begin,
      s(:class,
        s(:const, nil, :LDAP),
        s(:const, nil, :Generic),
        s(:begin,
          s(:casgn, nil, :DEFAULT_PORT,
            s(:int, 389)),
          s(:casgn, nil, :COMPONENT,
            s(:send,
              s(:array,
                s(:sym, :scheme),
                s(:sym, :host),
                s(:sym, :port),
                s(:sym, :dn),
                s(:sym, :attributes),
                s(:sym, :scope),
                s(:sym, :filter),
                s(:sym, :extensions)), :freeze)),
          s(:casgn, nil, :SCOPE,
            s(:send,
              s(:array,
                s(:casgn, nil, :SCOPE_ONE,
                  s(:str, "one")),
                s(:casgn, nil, :SCOPE_SUB,
                  s(:str, "sub")),
                s(:casgn, nil, :SCOPE_BASE,
                  s(:str, "base"))), :freeze)),
          s(:defs,
            s(:self), :build,
            s(:args,
              s(:arg, :args)),
            s(:begin,
              s(:lvasgn, :tmp,
                s(:send,
                  s(:const, nil, :Util), :make_components_hash,
                  s(:self),
                  s(:lvar, :args))),
              s(:if,
                s(:send,
                  s(:lvar, :tmp), :[],
                  s(:sym, :dn)),
                s(:send,
                  s(:lvar, :tmp), :[]=,
                  s(:sym, :path),
                  s(:send,
                    s(:lvar, :tmp), :[],
                    s(:sym, :dn))), nil),
              s(:lvasgn, :query,
                s(:array)),
              s(:block,
                s(:send,
                  s(:array,
                    s(:sym, :extensions),
                    s(:sym, :filter),
                    s(:sym, :scope),
                    s(:sym, :attributes)), :collect),
                s(:args,
                  s(:arg, :x)),
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:send,
                          s(:lvar, :tmp), :[],
                          s(:lvar, :x)), :!),
                      s(:send,
                        s(:send,
                          s(:lvar, :query), :size), :==,
                        s(:int, 0))),
                    s(:next), nil),
                  s(:send,
                    s(:lvar, :query), :unshift,
                    s(:send,
                      s(:lvar, :tmp), :[],
                      s(:lvar, :x))))),
              s(:send,
                s(:lvar, :tmp), :[]=,
                s(:sym, :query),
                s(:send,
                  s(:lvar, :query), :join,
                  s(:str, "?"))),
              s(:return,
                s(:super,
                  s(:lvar, :tmp))))),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :arg)),
            s(:begin,
              s(:super,
                s(:splat,
                  s(:lvar, :arg))),
              s(:if,
                s(:ivar, :@fragment),
                s(:send, nil, :raise,
                  s(:const, nil, :InvalidURIError),
                  s(:str, "bad LDAP URL")), nil),
              s(:send, nil, :parse_dn),
              s(:send, nil, :parse_query))),
          s(:def, :parse_dn,
            s(:args),
            s(:ivasgn, :@dn,
              s(:send,
                s(:ivar, :@path), :[],
                s(:irange,
                  s(:int, 1),
                  s(:int, -1))))),
          s(:send, nil, :private,
            s(:sym, :parse_dn)),
          s(:def, :parse_query,
            s(:args),
            s(:begin,
              s(:ivasgn, :@attributes,
                s(:nil)),
              s(:ivasgn, :@scope,
                s(:nil)),
              s(:ivasgn, :@filter,
                s(:nil)),
              s(:ivasgn, :@extensions,
                s(:nil)),
              s(:if,
                s(:ivar, :@query),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :attrs),
                      s(:lvasgn, :scope),
                      s(:lvasgn, :filter),
                      s(:lvasgn, :extensions)),
                    s(:send,
                      s(:ivar, :@query), :split,
                      s(:str, "?"))),
                  s(:if,
                    s(:and,
                      s(:lvar, :attrs),
                      s(:send,
                        s(:send,
                          s(:lvar, :attrs), :size), :>,
                        s(:int, 0))),
                    s(:ivasgn, :@attributes,
                      s(:lvar, :attrs)), nil),
                  s(:if,
                    s(:and,
                      s(:lvar, :scope),
                      s(:send,
                        s(:send,
                          s(:lvar, :scope), :size), :>,
                        s(:int, 0))),
                    s(:ivasgn, :@scope,
                      s(:lvar, :scope)), nil),
                  s(:if,
                    s(:and,
                      s(:lvar, :filter),
                      s(:send,
                        s(:send,
                          s(:lvar, :filter), :size), :>,
                        s(:int, 0))),
                    s(:ivasgn, :@filter,
                      s(:lvar, :filter)), nil),
                  s(:if,
                    s(:and,
                      s(:lvar, :extensions),
                      s(:send,
                        s(:send,
                          s(:lvar, :extensions), :size), :>,
                        s(:int, 0))),
                    s(:ivasgn, :@extensions,
                      s(:lvar, :extensions)), nil)), nil))),
          s(:send, nil, :private,
            s(:sym, :parse_query)),
          s(:def, :build_path_query,
            s(:args),
            s(:begin,
              s(:ivasgn, :@path,
                s(:send,
                  s(:str, "/"), :+,
                  s(:ivar, :@dn))),
              s(:lvasgn, :query,
                s(:array)),
              s(:block,
                s(:send,
                  s(:array,
                    s(:ivar, :@extensions),
                    s(:ivar, :@filter),
                    s(:ivar, :@scope),
                    s(:ivar, :@attributes)), :each),
                s(:args,
                  s(:arg, :x)),
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:lvar, :x), :!),
                      s(:send,
                        s(:send,
                          s(:lvar, :query), :size), :==,
                        s(:int, 0))),
                    s(:next), nil),
                  s(:send,
                    s(:lvar, :query), :unshift,
                    s(:lvar, :x)))),
              s(:ivasgn, :@query,
                s(:send,
                  s(:lvar, :query), :join,
                  s(:str, "?"))))),
          s(:send, nil, :private,
            s(:sym, :build_path_query)),
          s(:def, :dn,
            s(:args),
            s(:ivar, :@dn)),
          s(:def, :set_dn,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:ivasgn, :@dn,
                s(:lvar, :val)),
              s(:send, nil, :build_path_query),
              s(:ivar, :@dn))),
          s(:send, nil, :protected,
            s(:sym, :set_dn)),
          s(:def, :dn=,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:send, nil, :set_dn,
                s(:lvar, :val)),
              s(:lvar, :val))),
          s(:def, :attributes,
            s(:args),
            s(:ivar, :@attributes)),
          s(:def, :set_attributes,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:ivasgn, :@attributes,
                s(:lvar, :val)),
              s(:send, nil, :build_path_query),
              s(:ivar, :@attributes))),
          s(:send, nil, :protected,
            s(:sym, :set_attributes)),
          s(:def, :attributes=,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:send, nil, :set_attributes,
                s(:lvar, :val)),
              s(:lvar, :val))),
          s(:def, :scope,
            s(:args),
            s(:ivar, :@scope)),
          s(:def, :set_scope,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:ivasgn, :@scope,
                s(:lvar, :val)),
              s(:send, nil, :build_path_query),
              s(:ivar, :@scope))),
          s(:send, nil, :protected,
            s(:sym, :set_scope)),
          s(:def, :scope=,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:send, nil, :set_scope,
                s(:lvar, :val)),
              s(:lvar, :val))),
          s(:def, :filter,
            s(:args),
            s(:ivar, :@filter)),
          s(:def, :set_filter,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:ivasgn, :@filter,
                s(:lvar, :val)),
              s(:send, nil, :build_path_query),
              s(:ivar, :@filter))),
          s(:send, nil, :protected,
            s(:sym, :set_filter)),
          s(:def, :filter=,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:send, nil, :set_filter,
                s(:lvar, :val)),
              s(:lvar, :val))),
          s(:def, :extensions,
            s(:args),
            s(:ivar, :@extensions)),
          s(:def, :set_extensions,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:ivasgn, :@extensions,
                s(:lvar, :val)),
              s(:send, nil, :build_path_query),
              s(:ivar, :@extensions))),
          s(:send, nil, :protected,
            s(:sym, :set_extensions)),
          s(:def, :extensions=,
            s(:args,
              s(:arg, :val)),
            s(:begin,
              s(:send, nil, :set_extensions,
                s(:lvar, :val)),
              s(:lvar, :val))),
          s(:def, :hierarchical?,
            s(:args),
            s(:false)))),
      s(:send,
        s(:cvar, :@@schemes), :[]=,
        s(:str, "LDAP"),
        s(:const, nil, :LDAP)))))
