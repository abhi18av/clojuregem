s(:begin,
  s(:send, nil, :require,
    s(:str, "uri/generic")),
  s(:module,
    s(:const, nil, :URI),
    s(:begin,
      s(:class,
        s(:const, nil, :HTTP),
        s(:const, nil, :Generic),
        s(:begin,
          s(:casgn, nil, :DEFAULT_PORT,
            s(:int, 80)),
          s(:casgn, nil, :COMPONENT,
            s(:send,
              s(:array,
                s(:sym, :scheme),
                s(:sym, :userinfo),
                s(:sym, :host),
                s(:sym, :port),
                s(:sym, :path),
                s(:sym, :query),
                s(:sym, :fragment)), :freeze)),
          s(:defs,
            s(:self), :build,
            s(:args,
              s(:arg, :args)),
            s(:begin,
              s(:lvasgn, :tmp,
                s(:send,
                  s(:const, nil, :Util), :make_components_hash,
                  s(:self),
                  s(:lvar, :args))),
              s(:return,
                s(:super,
                  s(:lvar, :tmp))))),
          s(:def, :request_uri,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@path), nil,
                s(:return,
                  s(:nil))),
              s(:if,
                s(:send,
                  s(:ivar, :@path), :start_with?,
                  s(:send,
                    s(:str, "/"), :freeze)),
                s(:if,
                  s(:ivar, :@query),
                  s(:dstr,
                    s(:ivar, :@path),
                    s(:str, "?"),
                    s(:ivar, :@query)),
                  s(:send,
                    s(:ivar, :@path), :dup)),
                s(:if,
                  s(:ivar, :@query),
                  s(:dstr,
                    s(:str, "/"),
                    s(:ivar, :@path),
                    s(:str, "?"),
                    s(:ivar, :@query)),
                  s(:dstr,
                    s(:str, "/"),
                    s(:ivar, :@path)))))))),
      s(:send,
        s(:cvar, :@@schemes), :[]=,
        s(:str, "HTTP"),
        s(:const, nil, :HTTP)))))
