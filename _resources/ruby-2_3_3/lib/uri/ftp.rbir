s(:begin,
  s(:send, nil, :require,
    s(:str, "uri/generic")),
  s(:module,
    s(:const, nil, :URI),
    s(:begin,
      s(:class,
        s(:const, nil, :FTP),
        s(:const, nil, :Generic),
        s(:begin,
          s(:casgn, nil, :DEFAULT_PORT,
            s(:int, 21)),
          s(:casgn, nil, :COMPONENT,
            s(:send,
              s(:array,
                s(:sym, :scheme),
                s(:sym, :userinfo),
                s(:sym, :host),
                s(:sym, :port),
                s(:sym, :path),
                s(:sym, :typecode)), :freeze)),
          s(:casgn, nil, :TYPECODE,
            s(:send,
              s(:array,
                s(:str, "a"),
                s(:str, "i"),
                s(:str, "d")), :freeze)),
          s(:casgn, nil, :TYPECODE_PREFIX,
            s(:send,
              s(:str, ";type="), :freeze)),
          s(:defs,
            s(:self), :new2,
            s(:args,
              s(:arg, :user),
              s(:arg, :password),
              s(:arg, :host),
              s(:arg, :port),
              s(:arg, :path),
              s(:optarg, :typecode,
                s(:nil)),
              s(:optarg, :arg_check,
                s(:true))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :typecode), :size), :==,
                  s(:int, 0)),
                s(:lvasgn, :typecode,
                  s(:nil)), nil),
              s(:if,
                s(:and,
                  s(:lvar, :typecode),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TYPECODE), :include?,
                      s(:lvar, :typecode)), :!)),
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "bad typecode is specified: "),
                    s(:begin,
                      s(:lvar, :typecode)))), nil),
              s(:send,
                s(:self), :new,
                s(:str, "ftp"),
                s(:array,
                  s(:lvar, :user),
                  s(:lvar, :password)),
                s(:lvar, :host),
                s(:lvar, :port),
                s(:nil),
                s(:if,
                  s(:lvar, :typecode),
                  s(:send,
                    s(:send,
                      s(:lvar, :path), :+,
                      s(:const, nil, :TYPECODE_PREFIX)), :+,
                    s(:lvar, :typecode)),
                  s(:lvar, :path)),
                s(:nil),
                s(:nil),
                s(:nil),
                s(:lvar, :arg_check)))),
          s(:defs,
            s(:self), :build,
            s(:args,
              s(:arg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :args), :kind_of?,
                  s(:const, nil, :Array)),
                s(:send,
                  s(:lvar, :args), :[]=,
                  s(:int, 3),
                  s(:send,
                    s(:str, "/"), :+,
                    s(:send,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 3)), :sub,
                      s(:regexp,
                        s(:str, "^/"),
                        s(:regopt)),
                      s(:str, "%2F")))),
                s(:send,
                  s(:lvar, :args), :[]=,
                  s(:sym, :path),
                  s(:send,
                    s(:str, "/"), :+,
                    s(:send,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:sym, :path)), :sub,
                      s(:regexp,
                        s(:str, "^/"),
                        s(:regopt)),
                      s(:str, "%2F"))))),
              s(:lvasgn, :tmp,
                s(:send,
                  s(:const, nil, :Util), :make_components_hash,
                  s(:self),
                  s(:lvar, :args))),
              s(:if,
                s(:send,
                  s(:lvar, :tmp), :[],
                  s(:sym, :typecode)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :tmp), :[],
                          s(:sym, :typecode)), :size), :==,
                      s(:int, 1)),
                    s(:send,
                      s(:lvar, :tmp), :[]=,
                      s(:sym, :typecode),
                      s(:send,
                        s(:const, nil, :TYPECODE_PREFIX), :+,
                        s(:send,
                          s(:lvar, :tmp), :[],
                          s(:sym, :typecode)))), nil),
                  s(:send,
                    s(:send,
                      s(:lvar, :tmp), :[],
                      s(:sym, :path)), :<<,
                    s(:send,
                      s(:lvar, :tmp), :[],
                      s(:sym, :typecode)))), nil),
              s(:return,
                s(:super,
                  s(:lvar, :tmp))))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :scheme),
              s(:arg, :userinfo),
              s(:arg, :host),
              s(:arg, :port),
              s(:arg, :registry),
              s(:arg, :path),
              s(:arg, :opaque),
              s(:arg, :query),
              s(:arg, :fragment),
              s(:optarg, :parser,
                s(:nil)),
              s(:optarg, :arg_check,
                s(:false))),
            s(:begin,
              s(:if,
                s(:lvar, :path), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :InvalidURIError))),
              s(:lvasgn, :path,
                s(:send,
                  s(:lvar, :path), :sub,
                  s(:regexp,
                    s(:str, "^/"),
                    s(:regopt)),
                  s(:str, ""))),
              s(:send,
                s(:lvar, :path), :sub!,
                s(:regexp,
                  s(:str, "^%2F"),
                  s(:regopt)),
                s(:str, "/")),
              s(:super,
                s(:lvar, :scheme),
                s(:lvar, :userinfo),
                s(:lvar, :host),
                s(:lvar, :port),
                s(:lvar, :registry),
                s(:lvar, :path),
                s(:lvar, :opaque),
                s(:lvar, :query),
                s(:lvar, :fragment),
                s(:lvar, :parser),
                s(:lvar, :arg_check)),
              s(:ivasgn, :@typecode,
                s(:nil)),
              s(:if,
                s(:lvasgn, :tmp,
                  s(:send,
                    s(:ivar, :@path), :index,
                    s(:const, nil, :TYPECODE_PREFIX))),
                s(:begin,
                  s(:lvasgn, :typecode,
                    s(:send,
                      s(:ivar, :@path), :[],
                      s(:irange,
                        s(:send,
                          s(:lvar, :tmp), :+,
                          s(:send,
                            s(:const, nil, :TYPECODE_PREFIX), :size)),
                        s(:int, -1)))),
                  s(:ivasgn, :@path,
                    s(:send,
                      s(:ivar, :@path), :[],
                      s(:irange,
                        s(:int, 0),
                        s(:send,
                          s(:lvar, :tmp), :-,
                          s(:int, 1))))),
                  s(:if,
                    s(:lvar, :arg_check),
                    s(:send,
                      s(:self), :typecode=,
                      s(:lvar, :typecode)),
                    s(:send,
                      s(:self), :set_typecode,
                      s(:lvar, :typecode)))), nil))),
          s(:send, nil, :attr_reader,
            s(:sym, :typecode)),
          s(:def, :check_typecode,
            s(:args,
              s(:arg, :v)),
            s(:if,
              s(:send,
                s(:const, nil, :TYPECODE), :include?,
                s(:lvar, :v)),
              s(:return,
                s(:true)),
              s(:send, nil, :raise,
                s(:const, nil, :InvalidComponentError),
                s(:dstr,
                  s(:str, "bad typecode(expected "),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :TYPECODE), :join,
                      s(:str, ", "))),
                  s(:str, "): "),
                  s(:begin,
                    s(:lvar, :v)))))),
          s(:send, nil, :private,
            s(:sym, :check_typecode)),
          s(:def, :set_typecode,
            s(:args,
              s(:arg, :v)),
            s(:ivasgn, :@typecode,
              s(:lvar, :v))),
          s(:send, nil, :protected,
            s(:sym, :set_typecode)),
          s(:def, :typecode=,
            s(:args,
              s(:arg, :typecode)),
            s(:begin,
              s(:send, nil, :check_typecode,
                s(:lvar, :typecode)),
              s(:send, nil, :set_typecode,
                s(:lvar, :typecode)),
              s(:lvar, :typecode))),
          s(:def, :merge,
            s(:args,
              s(:arg, :oth)),
            s(:begin,
              s(:lvasgn, :tmp,
                s(:super,
                  s(:lvar, :oth))),
              s(:if,
                s(:send,
                  s(:self), :!=,
                  s(:lvar, :tmp)),
                s(:send,
                  s(:lvar, :tmp), :set_typecode,
                  s(:send,
                    s(:lvar, :oth), :typecode)), nil),
              s(:return,
                s(:lvar, :tmp)))),
          s(:def, :path,
            s(:args),
            s(:return,
              s(:send,
                s(:send,
                  s(:ivar, :@path), :sub,
                  s(:regexp,
                    s(:str, "^/"),
                    s(:regopt)),
                  s(:str, "")), :sub,
                s(:regexp,
                  s(:str, "^%2F"),
                  s(:regopt)),
                s(:str, "/")))),
          s(:def, :set_path,
            s(:args,
              s(:arg, :v)),
            s(:super,
              s(:send,
                s(:str, "/"), :+,
                s(:send,
                  s(:lvar, :v), :sub,
                  s(:regexp,
                    s(:str, "^/"),
                    s(:regopt)),
                  s(:str, "%2F"))))),
          s(:send, nil, :protected,
            s(:sym, :set_path)),
          s(:def, :to_s,
            s(:args),
            s(:begin,
              s(:lvasgn, :save_path,
                s(:nil)),
              s(:if,
                s(:ivar, :@typecode),
                s(:begin,
                  s(:lvasgn, :save_path,
                    s(:ivar, :@path)),
                  s(:ivasgn, :@path,
                    s(:send,
                      s(:send,
                        s(:ivar, :@path), :+,
                        s(:const, nil, :TYPECODE_PREFIX)), :+,
                      s(:ivar, :@typecode)))), nil),
              s(:lvasgn, :str,
                s(:zsuper)),
              s(:if,
                s(:ivar, :@typecode),
                s(:ivasgn, :@path,
                  s(:lvar, :save_path)), nil),
              s(:return,
                s(:lvar, :str)))))),
      s(:send,
        s(:cvar, :@@schemes), :[]=,
        s(:str, "FTP"),
        s(:const, nil, :FTP)))))
