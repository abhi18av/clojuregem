s(:begin,
  s(:send, nil, :require,
    s(:str, "uri/rfc2396_parser")),
  s(:send, nil, :require,
    s(:str, "uri/rfc3986_parser")),
  s(:module,
    s(:const, nil, :URI),
    s(:begin,
      s(:casgn, nil, :REGEXP,
        s(:const, nil, :RFC2396_REGEXP)),
      s(:casgn, nil, :Parser,
        s(:const, nil, :RFC2396_Parser)),
      s(:casgn, nil, :RFC3986_PARSER,
        s(:send,
          s(:const, nil, :RFC3986_Parser), :new)),
      s(:casgn, nil, :DEFAULT_PARSER,
        s(:send,
          s(:const, nil, :Parser), :new)),
      s(:block,
        s(:send,
          s(:send,
            s(:const, nil, :DEFAULT_PARSER), :pattern), :each_pair),
        s(:args,
          s(:arg, :sym),
          s(:arg, :str)),
        s(:if,
          s(:send,
            s(:const,
              s(:const, nil, :REGEXP), :PATTERN), :const_defined?,
            s(:lvar, :sym)), nil,
          s(:send,
            s(:const,
              s(:const, nil, :REGEXP), :PATTERN), :const_set,
            s(:lvar, :sym),
            s(:lvar, :str)))),
      s(:block,
        s(:send,
          s(:send,
            s(:const, nil, :DEFAULT_PARSER), :regexp), :each_pair),
        s(:args,
          s(:arg, :sym),
          s(:arg, :str)),
        s(:send, nil, :const_set,
          s(:lvar, :sym),
          s(:lvar, :str))),
      s(:module,
        s(:const, nil, :Util),
        s(:begin,
          s(:def, :make_components_hash,
            s(:args,
              s(:arg, :klass),
              s(:arg, :array_hash)),
            s(:begin,
              s(:lvasgn, :tmp,
                s(:hash)),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :array_hash), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:send,
                    s(:send,
                      s(:lvar, :array_hash), :size), :==,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :klass), :component), :size), :-,
                      s(:int, 1)))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :klass), :component), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1))), :each_index),
                  s(:args,
                    s(:arg, :i)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:send,
                        s(:lvar, :tmp), :[]=,
                        s(:send,
                          s(:send,
                            s(:lvar, :klass), :component), :[],
                          s(:send,
                            s(:lvar, :i), :+,
                            s(:int, 1))),
                        s(:send,
                          s(:send,
                            s(:lvar, :array_hash), :[],
                            s(:lvar, :i)), :clone)),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :TypeError)), nil,
                        s(:send,
                          s(:lvar, :tmp), :[]=,
                          s(:send,
                            s(:send,
                              s(:lvar, :klass), :component), :[],
                            s(:send,
                              s(:lvar, :i), :+,
                              s(:int, 1))),
                          s(:send,
                            s(:lvar, :array_hash), :[],
                            s(:lvar, :i)))), nil))),
                s(:if,
                  s(:send,
                    s(:lvar, :array_hash), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:block,
                    s(:send,
                      s(:lvar, :array_hash), :each),
                    s(:args,
                      s(:arg, :key),
                      s(:arg, :value)),
                    s(:kwbegin,
                      s(:rescue,
                        s(:send,
                          s(:lvar, :tmp), :[]=,
                          s(:lvar, :key),
                          s(:send,
                            s(:lvar, :value), :clone)),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :TypeError)), nil,
                          s(:send,
                            s(:lvar, :tmp), :[]=,
                            s(:lvar, :key),
                            s(:lvar, :value))), nil))),
                  s(:send, nil, :raise,
                    s(:const, nil, :ArgumentError),
                    s(:dstr,
                      s(:str, "expected Array of or Hash of components of "),
                      s(:begin,
                        s(:lvar, :klass)),
                      s(:str, " ("),
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :klass), :component), :[],
                            s(:irange,
                              s(:int, 1),
                              s(:int, -1))), :join,
                          s(:str, ", "))),
                      s(:str, ")"))))),
              s(:send,
                s(:lvar, :tmp), :[]=,
                s(:sym, :scheme),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :klass), :to_s), :sub,
                    s(:regexp,
                      s(:str, "\\A.*::"),
                      s(:regopt)),
                    s(:str, "")), :downcase)),
              s(:return,
                s(:lvar, :tmp)))),
          s(:send, nil, :module_function,
            s(:sym, :make_components_hash)))),
      s(:module,
        s(:const, nil, :Escape),
        s(:begin,
          s(:def, :escape,
            s(:args,
              s(:restarg, :arg)),
            s(:begin,
              s(:if,
                s(:gvar, :$VERBOSE),
                s(:send, nil, :warn,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:send, nil, :caller,
                          s(:int, 1)), :[],
                        s(:int, 0))),
                    s(:str, ": warning: URI.escape is obsolete"))), nil),
              s(:send,
                s(:const, nil, :DEFAULT_PARSER), :escape,
                s(:splat,
                  s(:lvar, :arg))))),
          s(:alias,
            s(:sym, :encode),
            s(:sym, :escape)),
          s(:def, :unescape,
            s(:args,
              s(:restarg, :arg)),
            s(:begin,
              s(:if,
                s(:gvar, :$VERBOSE),
                s(:send, nil, :warn,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:send, nil, :caller,
                          s(:int, 1)), :[],
                        s(:int, 0))),
                    s(:str, ": warning: URI.unescape is obsolete"))), nil),
              s(:send,
                s(:const, nil, :DEFAULT_PARSER), :unescape,
                s(:splat,
                  s(:lvar, :arg))))),
          s(:alias,
            s(:sym, :decode),
            s(:sym, :unescape)))),
      s(:send, nil, :extend,
        s(:const, nil, :Escape)),
      s(:send, nil, :include,
        s(:const, nil, :REGEXP)),
      s(:cvasgn, :@@schemes,
        s(:hash)),
      s(:defs,
        s(:self), :scheme_list,
        s(:args),
        s(:cvar, :@@schemes)),
      s(:class,
        s(:const, nil, :Error),
        s(:const, nil, :StandardError), nil),
      s(:class,
        s(:const, nil, :InvalidURIError),
        s(:const, nil, :Error), nil),
      s(:class,
        s(:const, nil, :InvalidComponentError),
        s(:const, nil, :Error), nil),
      s(:class,
        s(:const, nil, :BadURIError),
        s(:const, nil, :Error), nil),
      s(:defs,
        s(:self), :split,
        s(:args,
          s(:arg, :uri)),
        s(:send,
          s(:const, nil, :RFC3986_PARSER), :split,
          s(:lvar, :uri))),
      s(:defs,
        s(:self), :parse,
        s(:args,
          s(:arg, :uri)),
        s(:send,
          s(:const, nil, :RFC3986_PARSER), :parse,
          s(:lvar, :uri))),
      s(:defs,
        s(:self), :join,
        s(:args,
          s(:restarg, :str)),
        s(:send,
          s(:const, nil, :RFC3986_PARSER), :join,
          s(:splat,
            s(:lvar, :str)))),
      s(:defs,
        s(:self), :extract,
        s(:args,
          s(:arg, :str),
          s(:optarg, :schemes,
            s(:nil)),
          s(:blockarg, :block)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller,
                      s(:int, 1)), :[],
                    s(:int, 0))),
                s(:str, ": warning: URI.extract is obsolete"))), nil),
          s(:send,
            s(:const, nil, :DEFAULT_PARSER), :extract,
            s(:lvar, :str),
            s(:lvar, :schemes),
            s(:block_pass,
              s(:lvar, :block))))),
      s(:defs,
        s(:self), :regexp,
        s(:args,
          s(:optarg, :schemes,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller,
                      s(:int, 1)), :[],
                    s(:int, 0))),
                s(:str, ": warning: URI.regexp is obsolete"))), nil),
          s(:send,
            s(:const, nil, :DEFAULT_PARSER), :make_regexp,
            s(:lvar, :schemes)))),
      s(:casgn, nil, :TBLENCWWWCOMP_,
        s(:hash)),
      s(:block,
        s(:send,
          s(:int, 256), :times),
        s(:args,
          s(:arg, :i)),
        s(:send,
          s(:const, nil, :TBLENCWWWCOMP_), :[]=,
          s(:send,
            s(:lvar, :i), :chr),
          s(:send,
            s(:str, "%%%02X"), :%,
            s(:lvar, :i)))),
      s(:send,
        s(:const, nil, :TBLENCWWWCOMP_), :[]=,
        s(:str, " "),
        s(:str, "+")),
      s(:send,
        s(:const, nil, :TBLENCWWWCOMP_), :freeze),
      s(:casgn, nil, :TBLDECWWWCOMP_,
        s(:hash)),
      s(:block,
        s(:send,
          s(:int, 256), :times),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :h),
              s(:lvasgn, :l)),
            s(:array,
              s(:send,
                s(:lvar, :i), :>>,
                s(:int, 4)),
              s(:send,
                s(:lvar, :i), :&,
                s(:int, 15)))),
          s(:send,
            s(:const, nil, :TBLDECWWWCOMP_), :[]=,
            s(:send,
              s(:str, "%%%X%X"), :%,
              s(:array,
                s(:lvar, :h),
                s(:lvar, :l))),
            s(:send,
              s(:lvar, :i), :chr)),
          s(:send,
            s(:const, nil, :TBLDECWWWCOMP_), :[]=,
            s(:send,
              s(:str, "%%%x%X"), :%,
              s(:array,
                s(:lvar, :h),
                s(:lvar, :l))),
            s(:send,
              s(:lvar, :i), :chr)),
          s(:send,
            s(:const, nil, :TBLDECWWWCOMP_), :[]=,
            s(:send,
              s(:str, "%%%X%x"), :%,
              s(:array,
                s(:lvar, :h),
                s(:lvar, :l))),
            s(:send,
              s(:lvar, :i), :chr)),
          s(:send,
            s(:const, nil, :TBLDECWWWCOMP_), :[]=,
            s(:send,
              s(:str, "%%%x%x"), :%,
              s(:array,
                s(:lvar, :h),
                s(:lvar, :l))),
            s(:send,
              s(:lvar, :i), :chr)))),
      s(:send,
        s(:const, nil, :TBLDECWWWCOMP_), :[]=,
        s(:str, "+"),
        s(:str, " ")),
      s(:send,
        s(:const, nil, :TBLDECWWWCOMP_), :freeze),
      s(:casgn, nil, :HTML5ASCIIINCOMPAT,
        s(:defined?,
          s(:if,
            s(:const,
              s(:const, nil, :Encoding), :UTF_7),
            s(:array,
              s(:const,
                s(:const, nil, :Encoding), :UTF_7),
              s(:const,
                s(:const, nil, :Encoding), :UTF_16BE),
              s(:const,
                s(:const, nil, :Encoding), :UTF_16LE),
              s(:const,
                s(:const, nil, :Encoding), :UTF_32BE),
              s(:const,
                s(:const, nil, :Encoding), :UTF_32LE)),
            s(:array)))),
      s(:defs,
        s(:self), :encode_www_form_component,
        s(:args,
          s(:arg, :str),
          s(:optarg, :enc,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:lvar, :str), :to_s), :dup)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :str), :encoding), :!=,
              s(:const,
                s(:const, nil, :Encoding), :ASCII_8BIT)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :enc),
                  s(:send,
                    s(:lvar, :enc), :!=,
                    s(:const,
                      s(:const, nil, :Encoding), :ASCII_8BIT))),
                s(:begin,
                  s(:send,
                    s(:lvar, :str), :encode!,
                    s(:const,
                      s(:const, nil, :Encoding), :UTF_8),
                    s(:hash,
                      s(:pair,
                        s(:sym, :invalid),
                        s(:sym, :replace)),
                      s(:pair,
                        s(:sym, :undef),
                        s(:sym, :replace)))),
                  s(:send,
                    s(:lvar, :str), :encode!,
                    s(:lvar, :enc),
                    s(:hash,
                      s(:pair,
                        s(:sym, :fallback),
                        s(:block,
                          s(:send, nil, :lambda),
                          s(:args,
                            s(:arg, :x)),
                          s(:dstr,
                            s(:str, "&"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :x), :ord)),
                            s(:str, ";"))))))), nil),
              s(:send,
                s(:lvar, :str), :force_encoding,
                s(:const,
                  s(:const, nil, :Encoding), :ASCII_8BIT))), nil),
          s(:send,
            s(:lvar, :str), :gsub!,
            s(:regexp,
              s(:str, "[^*\\-.0-9A-Z_a-z]"),
              s(:regopt)),
            s(:const, nil, :TBLENCWWWCOMP_)),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:const,
              s(:const, nil, :Encoding), :US_ASCII)))),
      s(:defs,
        s(:self), :decode_www_form_component,
        s(:args,
          s(:arg, :str),
          s(:optarg, :enc,
            s(:const,
              s(:const, nil, :Encoding), :UTF_8))),
        s(:begin,
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "%(?!\\h\\h)"),
                s(:regopt)),
              s(:lvar, :str)),
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:dstr,
                s(:str, "invalid %-encoding ("),
                s(:begin,
                  s(:lvar, :str)),
                s(:str, ")"))), nil),
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :str), :b), :gsub,
              s(:regexp,
                s(:str, "\\+|%\\h\\h"),
                s(:regopt)),
              s(:const, nil, :TBLDECWWWCOMP_)), :force_encoding,
            s(:lvar, :enc)))),
      s(:defs,
        s(:self), :encode_www_form,
        s(:args,
          s(:arg, :enum),
          s(:optarg, :enc,
            s(:nil))),
        s(:send,
          s(:block,
            s(:send,
              s(:lvar, :enum), :map),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:if,
              s(:send,
                s(:lvar, :v), :nil?),
              s(:send, nil, :encode_www_form_component,
                s(:lvar, :k),
                s(:lvar, :enc)),
              s(:if,
                s(:send,
                  s(:lvar, :v), :respond_to?,
                  s(:sym, :to_ary)),
                s(:send,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :v), :to_ary), :map),
                    s(:args,
                      s(:arg, :w)),
                    s(:begin,
                      s(:lvasgn, :str,
                        s(:send, nil, :encode_www_form_component,
                          s(:lvar, :k),
                          s(:lvar, :enc))),
                      s(:if,
                        s(:send,
                          s(:lvar, :w), :nil?), nil,
                        s(:begin,
                          s(:send,
                            s(:lvar, :str), :<<,
                            s(:str, "=")),
                          s(:send,
                            s(:lvar, :str), :<<,
                            s(:send, nil, :encode_www_form_component,
                              s(:lvar, :w),
                              s(:lvar, :enc))))))), :join,
                  s(:str, "&")),
                s(:begin,
                  s(:lvasgn, :str,
                    s(:send, nil, :encode_www_form_component,
                      s(:lvar, :k),
                      s(:lvar, :enc))),
                  s(:send,
                    s(:lvar, :str), :<<,
                    s(:str, "=")),
                  s(:send,
                    s(:lvar, :str), :<<,
                    s(:send, nil, :encode_www_form_component,
                      s(:lvar, :v),
                      s(:lvar, :enc))))))), :join,
          s(:str, "&"))),
      s(:defs,
        s(:self), :decode_www_form,
        s(:args,
          s(:arg, :str),
          s(:optarg, :enc,
            s(:const,
              s(:const, nil, :Encoding), :UTF_8)),
          s(:kwoptarg, :separator,
            s(:str, "&")),
          s(:kwoptarg, :use__charset_,
            s(:false)),
          s(:kwoptarg, :isindex,
            s(:false))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :str), :ascii_only?), nil,
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:dstr,
                s(:str, "the input of "),
                s(:begin,
                  s(:send,
                    s(:self), :name)),
                s(:str, "."),
                s(:begin,
                  s(:send, nil, :__method__)),
                s(:str, " must be ASCII only string")))),
          s(:lvasgn, :ary,
            s(:array)),
          s(:if,
            s(:send,
              s(:lvar, :str), :empty?),
            s(:return,
              s(:lvar, :ary)), nil),
          s(:lvasgn, :enc,
            s(:send,
              s(:const, nil, :Encoding), :find,
              s(:lvar, :enc))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :str), :b), :each_line,
              s(:lvar, :separator)),
            s(:args,
              s(:arg, :string)),
            s(:begin,
              s(:send,
                s(:lvar, :string), :chomp!,
                s(:lvar, :separator)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :key),
                  s(:lvasgn, :sep),
                  s(:lvasgn, :val)),
                s(:send,
                  s(:lvar, :string), :partition,
                  s(:str, "="))),
              s(:if,
                s(:lvar, :isindex),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :sep), :empty?),
                    s(:begin,
                      s(:lvasgn, :val,
                        s(:lvar, :key)),
                      s(:lvasgn, :key,
                        s(:str, ""))), nil),
                  s(:lvasgn, :isindex,
                    s(:false))), nil),
              s(:if,
                s(:and,
                  s(:and,
                    s(:lvar, :use__charset_),
                    s(:send,
                      s(:lvar, :key), :==,
                      s(:str, "_charset_"))),
                  s(:lvasgn, :e,
                    s(:send, nil, :get_encoding,
                      s(:lvar, :val)))),
                s(:begin,
                  s(:lvasgn, :enc,
                    s(:lvar, :e)),
                  s(:lvasgn, :use__charset_,
                    s(:false))), nil),
              s(:send,
                s(:lvar, :key), :gsub!,
                s(:regexp,
                  s(:str, "\\+|%\\h\\h"),
                  s(:regopt)),
                s(:const, nil, :TBLDECWWWCOMP_)),
              s(:if,
                s(:lvar, :val),
                s(:send,
                  s(:lvar, :val), :gsub!,
                  s(:regexp,
                    s(:str, "\\+|%\\h\\h"),
                    s(:regopt)),
                  s(:const, nil, :TBLDECWWWCOMP_)),
                s(:lvasgn, :val,
                  s(:str, ""))),
              s(:send,
                s(:lvar, :ary), :<<,
                s(:array,
                  s(:lvar, :key),
                  s(:lvar, :val))))),
          s(:block,
            s(:send,
              s(:lvar, :ary), :each),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:begin,
              s(:send,
                s(:lvar, :k), :force_encoding,
                s(:lvar, :enc)),
              s(:send,
                s(:lvar, :k), :scrub!),
              s(:send,
                s(:lvar, :v), :force_encoding,
                s(:lvar, :enc)),
              s(:send,
                s(:lvar, :v), :scrub!))),
          s(:lvar, :ary))),
      s(:send, nil, :private),
      s(:casgn, nil, :WEB_ENCODINGS_,
        s(:hash,
          s(:pair,
            s(:str, "unicode-1-1-utf-8"),
            s(:str, "utf-8")),
          s(:pair,
            s(:str, "utf-8"),
            s(:str, "utf-8")),
          s(:pair,
            s(:str, "utf8"),
            s(:str, "utf-8")),
          s(:pair,
            s(:str, "866"),
            s(:str, "ibm866")),
          s(:pair,
            s(:str, "cp866"),
            s(:str, "ibm866")),
          s(:pair,
            s(:str, "csibm866"),
            s(:str, "ibm866")),
          s(:pair,
            s(:str, "ibm866"),
            s(:str, "ibm866")),
          s(:pair,
            s(:str, "csisolatin2"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "iso-8859-2"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "iso-ir-101"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "iso8859-2"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "iso88592"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "iso_8859-2"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "iso_8859-2:1987"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "l2"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "latin2"),
            s(:str, "iso-8859-2")),
          s(:pair,
            s(:str, "csisolatin3"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "iso-8859-3"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "iso-ir-109"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "iso8859-3"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "iso88593"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "iso_8859-3"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "iso_8859-3:1988"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "l3"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "latin3"),
            s(:str, "iso-8859-3")),
          s(:pair,
            s(:str, "csisolatin4"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "iso-8859-4"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "iso-ir-110"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "iso8859-4"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "iso88594"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "iso_8859-4"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "iso_8859-4:1988"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "l4"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "latin4"),
            s(:str, "iso-8859-4")),
          s(:pair,
            s(:str, "csisolatincyrillic"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "cyrillic"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "iso-8859-5"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "iso-ir-144"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "iso8859-5"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "iso88595"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "iso_8859-5"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "iso_8859-5:1988"),
            s(:str, "iso-8859-5")),
          s(:pair,
            s(:str, "arabic"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "asmo-708"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "csiso88596e"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "csiso88596i"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "csisolatinarabic"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "ecma-114"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso-8859-6"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso-8859-6-e"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso-8859-6-i"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso-ir-127"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso8859-6"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso88596"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso_8859-6"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "iso_8859-6:1987"),
            s(:str, "iso-8859-6")),
          s(:pair,
            s(:str, "csisolatingreek"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "ecma-118"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "elot_928"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "greek"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "greek8"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "iso-8859-7"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "iso-ir-126"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "iso8859-7"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "iso88597"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "iso_8859-7"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "iso_8859-7:1987"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "sun_eu_greek"),
            s(:str, "iso-8859-7")),
          s(:pair,
            s(:str, "csiso88598e"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "csisolatinhebrew"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "hebrew"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso-8859-8"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso-8859-8-e"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso-ir-138"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso8859-8"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso88598"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso_8859-8"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "iso_8859-8:1988"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "visual"),
            s(:str, "iso-8859-8")),
          s(:pair,
            s(:str, "csisolatin6"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "iso-8859-10"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "iso-ir-157"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "iso8859-10"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "iso885910"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "l6"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "latin6"),
            s(:str, "iso-8859-10")),
          s(:pair,
            s(:str, "iso-8859-13"),
            s(:str, "iso-8859-13")),
          s(:pair,
            s(:str, "iso8859-13"),
            s(:str, "iso-8859-13")),
          s(:pair,
            s(:str, "iso885913"),
            s(:str, "iso-8859-13")),
          s(:pair,
            s(:str, "iso-8859-14"),
            s(:str, "iso-8859-14")),
          s(:pair,
            s(:str, "iso8859-14"),
            s(:str, "iso-8859-14")),
          s(:pair,
            s(:str, "iso885914"),
            s(:str, "iso-8859-14")),
          s(:pair,
            s(:str, "csisolatin9"),
            s(:str, "iso-8859-15")),
          s(:pair,
            s(:str, "iso-8859-15"),
            s(:str, "iso-8859-15")),
          s(:pair,
            s(:str, "iso8859-15"),
            s(:str, "iso-8859-15")),
          s(:pair,
            s(:str, "iso885915"),
            s(:str, "iso-8859-15")),
          s(:pair,
            s(:str, "iso_8859-15"),
            s(:str, "iso-8859-15")),
          s(:pair,
            s(:str, "l9"),
            s(:str, "iso-8859-15")),
          s(:pair,
            s(:str, "iso-8859-16"),
            s(:str, "iso-8859-16")),
          s(:pair,
            s(:str, "cskoi8r"),
            s(:str, "koi8-r")),
          s(:pair,
            s(:str, "koi"),
            s(:str, "koi8-r")),
          s(:pair,
            s(:str, "koi8"),
            s(:str, "koi8-r")),
          s(:pair,
            s(:str, "koi8-r"),
            s(:str, "koi8-r")),
          s(:pair,
            s(:str, "koi8_r"),
            s(:str, "koi8-r")),
          s(:pair,
            s(:str, "koi8-u"),
            s(:str, "koi8-u")),
          s(:pair,
            s(:str, "dos-874"),
            s(:str, "windows-874")),
          s(:pair,
            s(:str, "iso-8859-11"),
            s(:str, "windows-874")),
          s(:pair,
            s(:str, "iso8859-11"),
            s(:str, "windows-874")),
          s(:pair,
            s(:str, "iso885911"),
            s(:str, "windows-874")),
          s(:pair,
            s(:str, "tis-620"),
            s(:str, "windows-874")),
          s(:pair,
            s(:str, "windows-874"),
            s(:str, "windows-874")),
          s(:pair,
            s(:str, "cp1250"),
            s(:str, "windows-1250")),
          s(:pair,
            s(:str, "windows-1250"),
            s(:str, "windows-1250")),
          s(:pair,
            s(:str, "x-cp1250"),
            s(:str, "windows-1250")),
          s(:pair,
            s(:str, "cp1251"),
            s(:str, "windows-1251")),
          s(:pair,
            s(:str, "windows-1251"),
            s(:str, "windows-1251")),
          s(:pair,
            s(:str, "x-cp1251"),
            s(:str, "windows-1251")),
          s(:pair,
            s(:str, "ansi_x3.4-1968"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "ascii"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "cp1252"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "cp819"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "csisolatin1"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "ibm819"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "iso-8859-1"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "iso-ir-100"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "iso8859-1"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "iso88591"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "iso_8859-1"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "iso_8859-1:1987"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "l1"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "latin1"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "us-ascii"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "windows-1252"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "x-cp1252"),
            s(:str, "windows-1252")),
          s(:pair,
            s(:str, "cp1253"),
            s(:str, "windows-1253")),
          s(:pair,
            s(:str, "windows-1253"),
            s(:str, "windows-1253")),
          s(:pair,
            s(:str, "x-cp1253"),
            s(:str, "windows-1253")),
          s(:pair,
            s(:str, "cp1254"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "csisolatin5"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "iso-8859-9"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "iso-ir-148"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "iso8859-9"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "iso88599"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "iso_8859-9"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "iso_8859-9:1989"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "l5"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "latin5"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "windows-1254"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "x-cp1254"),
            s(:str, "windows-1254")),
          s(:pair,
            s(:str, "cp1255"),
            s(:str, "windows-1255")),
          s(:pair,
            s(:str, "windows-1255"),
            s(:str, "windows-1255")),
          s(:pair,
            s(:str, "x-cp1255"),
            s(:str, "windows-1255")),
          s(:pair,
            s(:str, "cp1256"),
            s(:str, "windows-1256")),
          s(:pair,
            s(:str, "windows-1256"),
            s(:str, "windows-1256")),
          s(:pair,
            s(:str, "x-cp1256"),
            s(:str, "windows-1256")),
          s(:pair,
            s(:str, "cp1257"),
            s(:str, "windows-1257")),
          s(:pair,
            s(:str, "windows-1257"),
            s(:str, "windows-1257")),
          s(:pair,
            s(:str, "x-cp1257"),
            s(:str, "windows-1257")),
          s(:pair,
            s(:str, "cp1258"),
            s(:str, "windows-1258")),
          s(:pair,
            s(:str, "windows-1258"),
            s(:str, "windows-1258")),
          s(:pair,
            s(:str, "x-cp1258"),
            s(:str, "windows-1258")),
          s(:pair,
            s(:str, "x-mac-cyrillic"),
            s(:str, "macCyrillic")),
          s(:pair,
            s(:str, "x-mac-ukrainian"),
            s(:str, "macCyrillic")),
          s(:pair,
            s(:str, "chinese"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "csgb2312"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "csiso58gb231280"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "gb2312"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "gb_2312"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "gb_2312-80"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "gbk"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "iso-ir-58"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "x-gbk"),
            s(:str, "gbk")),
          s(:pair,
            s(:str, "gb18030"),
            s(:str, "gb18030")),
          s(:pair,
            s(:str, "big5"),
            s(:str, "big5")),
          s(:pair,
            s(:str, "big5-hkscs"),
            s(:str, "big5")),
          s(:pair,
            s(:str, "cn-big5"),
            s(:str, "big5")),
          s(:pair,
            s(:str, "csbig5"),
            s(:str, "big5")),
          s(:pair,
            s(:str, "x-x-big5"),
            s(:str, "big5")),
          s(:pair,
            s(:str, "cseucpkdfmtjapanese"),
            s(:str, "cp51932")),
          s(:pair,
            s(:str, "euc-jp"),
            s(:str, "cp51932")),
          s(:pair,
            s(:str, "x-euc-jp"),
            s(:str, "cp51932")),
          s(:pair,
            s(:str, "csiso2022jp"),
            s(:str, "cp50221")),
          s(:pair,
            s(:str, "iso-2022-jp"),
            s(:str, "cp50221")),
          s(:pair,
            s(:str, "csshiftjis"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "ms_kanji"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "shift-jis"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "shift_jis"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "sjis"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "windows-31j"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "x-sjis"),
            s(:str, "Windows-31J")),
          s(:pair,
            s(:str, "cseuckr"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "csksc56011987"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "euc-kr"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "iso-ir-149"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "korean"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "ks_c_5601-1987"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "ks_c_5601-1989"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "ksc5601"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "ksc_5601"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "windows-949"),
            s(:str, "euc-kr")),
          s(:pair,
            s(:str, "utf-16be"),
            s(:str, "utf-16be")),
          s(:pair,
            s(:str, "utf-16"),
            s(:str, "utf-16le")),
          s(:pair,
            s(:str, "utf-16le"),
            s(:str, "utf-16le")))),
      s(:defs,
        s(:self), :get_encoding,
        s(:args,
          s(:arg, :label)),
        s(:rescue,
          s(:send,
            s(:const, nil, :Encoding), :find,
            s(:send,
              s(:const, nil, :WEB_ENCODINGS_), :[],
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :label), :to_str), :strip), :downcase))),
          s(:resbody, nil, nil,
            s(:nil)), nil)))),
  s(:module,
    s(:const, nil, :Kernel),
    s(:begin,
      s(:def, :URI,
        s(:args,
          s(:arg, :uri)),
        s(:if,
          s(:send,
            s(:lvar, :uri), :is_a?,
            s(:const,
              s(:const, nil, :URI), :Generic)),
          s(:lvar, :uri),
          s(:if,
            s(:lvasgn, :uri,
              s(:send,
                s(:const, nil, :String), :try_convert,
                s(:lvar, :uri))),
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:lvar, :uri)),
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:str, "bad argument (expected URI object or URI string)"))))),
      s(:send, nil, :module_function,
        s(:sym, :URI)))))
