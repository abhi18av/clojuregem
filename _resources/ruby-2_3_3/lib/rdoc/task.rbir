s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:if,
    s(:defined?,
      s(:const, nil, :RDoc)), nil,
    s(:kwbegin,
      s(:rescue,
        s(:send, nil, :gem,
          s(:str, "rdoc")),
        s(:resbody,
          s(:array,
            s(:const,
              s(:const, nil, :Gem), :LoadError)), nil, nil), nil))),
  s(:if,
    s(:defined?,
      s(:const, nil, :Rake)), nil,
    s(:kwbegin,
      s(:rescue,
        s(:send, nil, :gem,
          s(:str, "rake")),
        s(:resbody,
          s(:array,
            s(:const,
              s(:const, nil, :Gem), :LoadError)), nil, nil), nil))),
  s(:send, nil, :require,
    s(:str, "rdoc")),
  s(:send, nil, :require,
    s(:str, "rake")),
  s(:send, nil, :require,
    s(:str, "rake/tasklib")),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :Task),
    s(:const,
      s(:const, nil, :Rake), :TaskLib),
    s(:begin,
      s(:send, nil, :attr_accessor,
        s(:sym, :name)),
      s(:send, nil, :attr_accessor,
        s(:sym, :markup)),
      s(:send, nil, :attr_accessor,
        s(:sym, :rdoc_dir)),
      s(:send, nil, :attr_accessor,
        s(:sym, :title)),
      s(:send, nil, :attr_accessor,
        s(:sym, :main)),
      s(:send, nil, :attr_accessor,
        s(:sym, :template)),
      s(:send, nil, :attr_accessor,
        s(:sym, :generator)),
      s(:send, nil, :attr_accessor,
        s(:sym, :rdoc_files)),
      s(:send, nil, :attr_accessor,
        s(:sym, :options)),
      s(:send, nil, :attr_accessor,
        s(:sym, :external)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :name,
            s(:sym, :rdoc))),
        s(:begin,
          s(:send, nil, :defaults),
          s(:send, nil, :check_names,
            s(:lvar, :name)),
          s(:ivasgn, :@name,
            s(:lvar, :name)),
          s(:if,
            s(:send, nil, :block_given?),
            s(:yield,
              s(:self)), nil),
          s(:send, nil, :define))),
      s(:def, :check_names,
        s(:args,
          s(:arg, :names)),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Hash), :===,
              s(:lvar, :names)), nil,
            s(:return)),
          s(:lvasgn, :invalid_options,
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :names), :keys), :map),
                s(:args,
                  s(:arg, :k)),
                s(:send,
                  s(:lvar, :k), :to_sym)), :-,
              s(:array,
                s(:sym, :rdoc),
                s(:sym, :clobber_rdoc),
                s(:sym, :rerdoc)))),
          s(:if,
            s(:send,
              s(:lvar, :invalid_options), :empty?), nil,
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:dstr,
                s(:str, "invalid options: "),
                s(:begin,
                  s(:send,
                    s(:lvar, :invalid_options), :join,
                    s(:str, ", ")))))))),
      s(:def, :clobber_task_description,
        s(:args),
        s(:str, "Remove RDoc HTML files")),
      s(:def, :defaults,
        s(:args),
        s(:begin,
          s(:ivasgn, :@name,
            s(:sym, :rdoc)),
          s(:ivasgn, :@rdoc_files,
            s(:send,
              s(:const,
                s(:const, nil, :Rake), :FileList), :new)),
          s(:ivasgn, :@rdoc_dir,
            s(:str, "html")),
          s(:ivasgn, :@main,
            s(:nil)),
          s(:ivasgn, :@title,
            s(:nil)),
          s(:ivasgn, :@template,
            s(:nil)),
          s(:ivasgn, :@generator,
            s(:nil)),
          s(:ivasgn, :@options,
            s(:array)))),
      s(:def, :inline_source,
        s(:args),
        s(:begin,
          s(:send, nil, :warn,
            s(:str, "RDoc::Task#inline_source is deprecated")),
          s(:true))),
      s(:def, :inline_source=,
        s(:args,
          s(:arg, :value)),
        s(:send, nil, :warn,
          s(:str, "RDoc::Task#inline_source is deprecated"))),
      s(:def, :define,
        s(:args),
        s(:begin,
          s(:send, nil, :desc,
            s(:send, nil, :rdoc_task_description)),
          s(:send, nil, :task,
            s(:send, nil, :rdoc_task_name)),
          s(:send, nil, :desc,
            s(:send, nil, :rerdoc_task_description)),
          s(:send, nil, :task,
            s(:hash,
              s(:pair,
                s(:send, nil, :rerdoc_task_name),
                s(:array,
                  s(:send, nil, :clobber_task_name),
                  s(:send, nil, :rdoc_task_name))))),
          s(:send, nil, :desc,
            s(:send, nil, :clobber_task_description)),
          s(:block,
            s(:send, nil, :task,
              s(:send, nil, :clobber_task_name)),
            s(:args),
            s(:rescue,
              s(:send, nil, :rm_r,
                s(:ivar, :@rdoc_dir)),
              s(:resbody, nil, nil,
                s(:nil)), nil)),
          s(:send, nil, :task,
            s(:hash,
              s(:pair,
                s(:sym, :clobber),
                s(:array,
                  s(:send, nil, :clobber_task_name))))),
          s(:send, nil, :directory,
            s(:ivar, :@rdoc_dir)),
          s(:lvasgn, :rdoc_target_deps,
            s(:send,
              s(:send,
                s(:array,
                  s(:ivar, :@rdoc_files),
                  s(:send,
                    s(:send,
                      s(:const, nil, :Rake), :application), :rakefile)), :flatten), :compact)),
          s(:send, nil, :task,
            s(:hash,
              s(:pair,
                s(:send, nil, :rdoc_task_name),
                s(:array,
                  s(:send, nil, :rdoc_target))))),
          s(:block,
            s(:send, nil, :file,
              s(:hash,
                s(:pair,
                  s(:send, nil, :rdoc_target),
                  s(:lvar, :rdoc_target_deps)))),
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@before_running_rdoc),
                s(:send,
                  s(:ivar, :@before_running_rdoc), :call), nil),
              s(:lvasgn, :args,
                s(:send,
                  s(:send, nil, :option_list), :+,
                  s(:ivar, :@rdoc_files))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Rake), :application), :options), :trace),
                s(:send,
                  s(:gvar, :$stderr), :puts,
                  s(:dstr,
                    s(:str, "rdoc "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :args), :join,
                        s(:str, " "))))), nil),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :RDoc), :new), :document,
                s(:lvar, :args)))),
          s(:self))),
      s(:def, :option_list,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@options), :dup)),
          s(:send,
            s(:send,
              s(:lvar, :result), :<<,
              s(:str, "-o")), :<<,
            s(:ivar, :@rdoc_dir)),
          s(:if,
            s(:send, nil, :main),
            s(:send,
              s(:send,
                s(:lvar, :result), :<<,
                s(:str, "--main")), :<<,
              s(:send, nil, :main)), nil),
          s(:if,
            s(:send, nil, :markup),
            s(:send,
              s(:send,
                s(:lvar, :result), :<<,
                s(:str, "--markup")), :<<,
              s(:send, nil, :markup)), nil),
          s(:if,
            s(:send, nil, :title),
            s(:send,
              s(:send,
                s(:lvar, :result), :<<,
                s(:str, "--title")), :<<,
              s(:send, nil, :title)), nil),
          s(:if,
            s(:send, nil, :template),
            s(:send,
              s(:send,
                s(:lvar, :result), :<<,
                s(:str, "-T")), :<<,
              s(:send, nil, :template)), nil),
          s(:if,
            s(:send, nil, :generator),
            s(:send,
              s(:send,
                s(:lvar, :result), :<<,
                s(:str, "-f")), :<<,
              s(:send, nil, :generator)), nil),
          s(:lvar, :result))),
      s(:def, :before_running_rdoc,
        s(:args,
          s(:blockarg, :block)),
        s(:ivasgn, :@before_running_rdoc,
          s(:lvar, :block))),
      s(:def, :rdoc_task_description,
        s(:args),
        s(:str, "Build RDoc HTML files")),
      s(:def, :rerdoc_task_description,
        s(:args),
        s(:str, "Rebuild RDoc HTML files")),
      s(:send, nil, :private),
      s(:def, :rdoc_target,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send, nil, :rdoc_dir)),
          s(:str, "/created.rid"))),
      s(:def, :rdoc_task_name,
        s(:args),
        s(:case,
          s(:send, nil, :name),
          s(:when,
            s(:const, nil, :Hash),
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:send, nil, :name), :[],
                    s(:sym, :rdoc)),
                  s(:str, "rdoc"))), :to_s)),
          s(:send,
            s(:send, nil, :name), :to_s))),
      s(:def, :clobber_task_name,
        s(:args),
        s(:case,
          s(:send, nil, :name),
          s(:when,
            s(:const, nil, :Hash),
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:send, nil, :name), :[],
                    s(:sym, :clobber_rdoc)),
                  s(:str, "clobber_rdoc"))), :to_s)),
          s(:dstr,
            s(:str, "clobber_"),
            s(:begin,
              s(:send, nil, :name))))),
      s(:def, :rerdoc_task_name,
        s(:args),
        s(:case,
          s(:send, nil, :name),
          s(:when,
            s(:const, nil, :Hash),
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:send, nil, :name), :[],
                    s(:sym, :rerdoc)),
                  s(:str, "rerdoc"))), :to_s)),
          s(:dstr,
            s(:str, "re"),
            s(:begin,
              s(:send, nil, :name))))))),
  s(:module,
    s(:const, nil, :Rake),
    s(:casgn, nil, :RDocTask,
      s(:const,
        s(:const, nil, :RDoc), :Task))))
