s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send, nil, :require,
    s(:str, "rdoc")),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :RubygemsHook), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:send, nil, :extend,
        s(:const,
          s(:const, nil, :Gem), :UserInteraction)),
      s(:ivasgn, :@rdoc_version,
        s(:nil)),
      s(:ivasgn, :@specs,
        s(:array)),
      s(:send, nil, :attr_accessor,
        s(:sym, :force)),
      s(:send, nil, :attr_accessor,
        s(:sym, :generate_rdoc)),
      s(:send, nil, :attr_accessor,
        s(:sym, :generate_ri)),
      s(:sclass,
        s(:self),
        s(:send, nil, :attr_reader,
          s(:sym, :rdoc_version))),
      s(:defs,
        s(:self), :generation_hook,
        s(:args,
          s(:arg, :installer),
          s(:arg, :specs)),
        s(:begin,
          s(:lvasgn, :start,
            s(:send,
              s(:const, nil, :Time), :now)),
          s(:lvasgn, :types,
            s(:send,
              s(:lvar, :installer), :document)),
          s(:lvasgn, :generate_rdoc,
            s(:send,
              s(:lvar, :types), :include?,
              s(:str, "rdoc"))),
          s(:lvasgn, :generate_ri,
            s(:send,
              s(:lvar, :types), :include?,
              s(:str, "ri"))),
          s(:block,
            s(:send,
              s(:lvar, :specs), :each),
            s(:args,
              s(:arg, :spec)),
            s(:send,
              s(:send, nil, :new,
                s(:lvar, :spec),
                s(:lvar, :generate_rdoc),
                s(:lvar, :generate_ri)), :generate)),
          s(:if,
            s(:or,
              s(:lvar, :generate_rdoc),
              s(:lvar, :generate_ri)), nil,
            s(:return)),
          s(:lvasgn, :duration,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :-,
                  s(:lvar, :start))), :to_i)),
          s(:lvasgn, :names,
            s(:send,
              s(:send,
                s(:lvar, :specs), :map,
                s(:block_pass,
                  s(:sym, :name))), :join,
              s(:str, ", "))),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Done installing documentation for "),
              s(:begin,
                s(:lvar, :names)),
              s(:str, " after "),
              s(:begin,
                s(:lvar, :duration)),
              s(:str, " seconds"))))),
      s(:defs,
        s(:self), :load_rdoc,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@rdoc_version),
            s(:return), nil),
          s(:send, nil, :require,
            s(:str, "rdoc/rdoc")),
          s(:ivasgn, :@rdoc_version,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:const,
                s(:const,
                  s(:cbase), :RDoc), :VERSION))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :spec),
          s(:optarg, :generate_rdoc,
            s(:false)),
          s(:optarg, :generate_ri,
            s(:true))),
        s(:begin,
          s(:ivasgn, :@doc_dir,
            s(:send,
              s(:lvar, :spec), :doc_dir)),
          s(:ivasgn, :@force,
            s(:false)),
          s(:ivasgn, :@rdoc,
            s(:nil)),
          s(:ivasgn, :@spec,
            s(:lvar, :spec)),
          s(:ivasgn, :@generate_rdoc,
            s(:lvar, :generate_rdoc)),
          s(:ivasgn, :@generate_ri,
            s(:lvar, :generate_ri)),
          s(:ivasgn, :@rdoc_dir,
            s(:send,
              s(:lvar, :spec), :doc_dir,
              s(:str, "rdoc"))),
          s(:ivasgn, :@ri_dir,
            s(:send,
              s(:lvar, :spec), :doc_dir,
              s(:str, "ri"))))),
      s(:def, :delete_legacy_args,
        s(:args,
          s(:arg, :args)),
        s(:begin,
          s(:send,
            s(:lvar, :args), :delete,
            s(:str, "--inline-source")),
          s(:send,
            s(:lvar, :args), :delete,
            s(:str, "--promiscuous")),
          s(:send,
            s(:lvar, :args), :delete,
            s(:str, "-p")),
          s(:send,
            s(:lvar, :args), :delete,
            s(:str, "--one-file")))),
      s(:def, :document,
        s(:args,
          s(:arg, :generator),
          s(:arg, :options),
          s(:arg, :destination)),
        s(:begin,
          s(:lvasgn, :generator_name,
            s(:lvar, :generator)),
          s(:lvasgn, :options,
            s(:send,
              s(:lvar, :options), :dup)),
          s(:or_asgn,
            s(:send,
              s(:lvar, :options), :exclude),
            s(:array)),
          s(:send,
            s(:lvar, :options), :setup_generator,
            s(:lvar, :generator)),
          s(:send,
            s(:lvar, :options), :op_dir=,
            s(:lvar, :destination)),
          s(:send,
            s(:lvar, :options), :finish),
          s(:lvasgn, :generator,
            s(:send,
              s(:send,
                s(:lvar, :options), :generator), :new,
              s(:send,
                s(:ivar, :@rdoc), :store),
              s(:lvar, :options))),
          s(:send,
            s(:ivar, :@rdoc), :options=,
            s(:lvar, :options)),
          s(:send,
            s(:ivar, :@rdoc), :generator=,
            s(:lvar, :generator)),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Installing "),
              s(:begin,
                s(:lvar, :generator_name)),
              s(:str, " documentation for "),
              s(:begin,
                s(:send,
                  s(:ivar, :@spec), :full_name)))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:lvar, :options), :op_dir)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send,
                s(:lvar, :options), :op_dir)),
            s(:args),
            s(:kwbegin,
              s(:ensure,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@rdoc), :class), :current=,
                    s(:ivar, :@rdoc)),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rdoc), :generator), :generate)),
                s(:send,
                  s(:send,
                    s(:ivar, :@rdoc), :class), :current=,
                  s(:nil))))))),
      s(:def, :generate,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@spec), :default_gem?),
            s(:return), nil),
          s(:if,
            s(:or,
              s(:ivar, :@generate_ri),
              s(:ivar, :@generate_rdoc)), nil,
            s(:return)),
          s(:send, nil, :setup),
          s(:lvasgn, :options,
            s(:nil)),
          s(:lvasgn, :args,
            s(:send,
              s(:ivar, :@spec), :rdoc_options)),
          s(:if,
            s(:send,
              s(:ivar, :@spec), :respond_to?,
              s(:sym, :source_paths)),
            s(:send,
              s(:lvar, :args), :concat,
              s(:send,
                s(:ivar, :@spec), :source_paths)),
            s(:send,
              s(:lvar, :args), :concat,
              s(:send,
                s(:ivar, :@spec), :require_paths))),
          s(:send,
            s(:lvar, :args), :concat,
            s(:send,
              s(:ivar, :@spec), :extra_rdoc_files)),
          s(:case,
            s(:lvasgn, :config_args,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :[],
                s(:sym, :rdoc))),
            s(:when,
              s(:const, nil, :String),
              s(:lvasgn, :args,
                s(:send,
                  s(:lvar, :args), :concat,
                  s(:send,
                    s(:lvar, :config_args), :split)))),
            s(:when,
              s(:const, nil, :Array),
              s(:lvasgn, :args,
                s(:send,
                  s(:lvar, :args), :concat,
                  s(:lvar, :config_args)))), nil),
          s(:send, nil, :delete_legacy_args,
            s(:lvar, :args)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send,
                s(:ivar, :@spec), :full_gem_path)),
            s(:args),
            s(:begin,
              s(:lvasgn, :options,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RDoc), :Options), :new)),
              s(:send,
                s(:lvar, :options), :default_title=,
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:ivar, :@spec), :full_name)),
                  s(:str, " Documentation"))),
              s(:send,
                s(:lvar, :options), :parse,
                s(:lvar, :args)))),
          s(:send,
            s(:lvar, :options), :quiet=,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :really_verbose), :!)),
          s(:ivasgn, :@rdoc,
            s(:send, nil, :new_rdoc)),
          s(:send,
            s(:ivar, :@rdoc), :options=,
            s(:lvar, :options)),
          s(:lvasgn, :store,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Store), :new)),
          s(:if,
            s(:send,
              s(:lvar, :options), :respond_to?,
              s(:sym, :encoding)),
            s(:send,
              s(:lvar, :store), :encoding=,
              s(:send,
                s(:lvar, :options), :encoding)), nil),
          s(:send,
            s(:lvar, :store), :dry_run=,
            s(:send,
              s(:lvar, :options), :dry_run)),
          s(:send,
            s(:lvar, :store), :main=,
            s(:send,
              s(:lvar, :options), :main_page)),
          s(:send,
            s(:lvar, :store), :title=,
            s(:send,
              s(:lvar, :options), :title)),
          s(:send,
            s(:ivar, :@rdoc), :store=,
            s(:lvar, :store)),
          s(:send, nil, :say,
            s(:dstr,
              s(:str, "Parsing documentation for "),
              s(:begin,
                s(:send,
                  s(:ivar, :@spec), :full_name)))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send,
                s(:ivar, :@spec), :full_gem_path)),
            s(:args),
            s(:send,
              s(:ivar, :@rdoc), :parse_files,
              s(:send,
                s(:lvar, :options), :files))),
          s(:if,
            s(:and,
              s(:ivar, :@generate_ri),
              s(:begin,
                s(:or,
                  s(:ivar, :@force),
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :exist?,
                      s(:ivar, :@ri_dir)), :!)))),
            s(:send, nil, :document,
              s(:str, "ri"),
              s(:lvar, :options),
              s(:ivar, :@ri_dir)), nil),
          s(:if,
            s(:and,
              s(:ivar, :@generate_rdoc),
              s(:begin,
                s(:or,
                  s(:ivar, :@force),
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :exist?,
                      s(:ivar, :@rdoc_dir)), :!)))),
            s(:send, nil, :document,
              s(:str, "darkfish"),
              s(:lvar, :options),
              s(:ivar, :@rdoc_dir)), nil))),
      s(:def, :new_rdoc,
        s(:args),
        s(:send,
          s(:const,
            s(:const,
              s(:cbase), :RDoc), :RDoc), :new)),
      s(:def, :rdoc_installed?,
        s(:args),
        s(:send,
          s(:const, nil, :File), :exist?,
          s(:ivar, :@rdoc_dir))),
      s(:def, :remove,
        s(:args),
        s(:begin,
          s(:lvasgn, :base_dir,
            s(:send,
              s(:ivar, :@spec), :base_dir)),
          s(:if,
            s(:send,
              s(:const, nil, :File), :writable?,
              s(:lvar, :base_dir)), nil,
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Gem), :FilePermissionError),
              s(:lvar, :base_dir))),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:ivar, :@rdoc_dir)),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:ivar, :@ri_dir)))),
      s(:def, :ri_installed?,
        s(:args),
        s(:send,
          s(:const, nil, :File), :exist?,
          s(:ivar, :@ri_dir))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:self), :class), :load_rdoc),
          s(:if,
            s(:and,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:ivar, :@doc_dir)),
              s(:send,
                s(:send,
                  s(:const, nil, :File), :writable?,
                  s(:ivar, :@doc_dir)), :!)),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Gem), :FilePermissionError),
              s(:ivar, :@doc_dir)), nil),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:ivar, :@doc_dir)), nil,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:ivar, :@doc_dir))))))))
