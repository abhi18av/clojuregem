s(:begin,
  s(:send, nil, :require,
    s(:str, "racc/parser.rb")),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :RD), nil,
    s(:class,
      s(:const, nil, :BlockParser),
      s(:const,
        s(:const, nil, :Racc), :Parser),
      s(:begin,
        s(:casgn, nil, :TMPFILE,
          s(:array,
            s(:str, "rdtmp"),
            s(:gvar, :$$),
            s(:int, 0))),
        s(:casgn, nil, :MARK_TO_LEVEL,
          s(:hash,
            s(:pair,
              s(:str, "="),
              s(:int, 1)),
            s(:pair,
              s(:str, "=="),
              s(:int, 2)),
            s(:pair,
              s(:str, "==="),
              s(:int, 3)),
            s(:pair,
              s(:str, "===="),
              s(:int, 4)),
            s(:pair,
              s(:str, "+"),
              s(:int, 5)),
            s(:pair,
              s(:str, "++"),
              s(:int, 6)))),
        s(:send, nil, :attr_reader,
          s(:sym, :footnotes)),
        s(:send, nil, :attr_reader,
          s(:sym, :labels)),
        s(:send, nil, :attr_accessor,
          s(:sym, :include_path)),
        s(:def, :initialize,
          s(:args),
          s(:begin,
            s(:ivasgn, :@inline_parser,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RD), :InlineParser), :new,
                s(:self))),
            s(:ivasgn, :@include_path,
              s(:array)),
            s(:ivasgn, :@footnotes,
              s(:array)),
            s(:ivasgn, :@labels,
              s(:hash)))),
        s(:def, :parse,
          s(:args,
            s(:arg, :src)),
          s(:begin,
            s(:ivasgn, :@src,
              s(:lvar, :src)),
            s(:send,
              s(:ivar, :@src), :push,
              s(:false)),
            s(:ivasgn, :@footnotes,
              s(:array)),
            s(:ivasgn, :@labels,
              s(:hash)),
            s(:ivasgn, :@i,
              s(:int, 0)),
            s(:ivasgn, :@indent_stack,
              s(:array)),
            s(:ivasgn, :@current_indent,
              s(:send,
                s(:ivar, :@indent_stack), :join,
                s(:str, ""))),
            s(:ivasgn, :@subparser,
              s(:nil)),
            s(:ivasgn, :@in_part,
              s(:nil)),
            s(:ivasgn, :@part_content,
              s(:array)),
            s(:ivasgn, :@in_verbatim,
              s(:false)),
            s(:ivasgn, :@yydebug,
              s(:true)),
            s(:lvasgn, :document,
              s(:send, nil, :do_parse)),
            s(:if,
              s(:send,
                s(:ivar, :@footnotes), :empty?), nil,
              s(:begin,
                s(:lvasgn, :blankline,
                  s(:send,
                    s(:send,
                      s(:lvar, :document), :parts), :pop)),
                s(:send,
                  s(:send,
                    s(:lvar, :document), :parts), :<<,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :RDoc), :Markup), :Rule), :new,
                    s(:int, 1))),
                s(:send,
                  s(:send,
                    s(:lvar, :document), :parts), :concat,
                  s(:ivar, :@footnotes)),
                s(:send,
                  s(:send,
                    s(:lvar, :document), :parts), :push,
                  s(:lvar, :blankline)))),
            s(:lvar, :document))),
        s(:def, :next_token,
          s(:args),
          s(:begin,
            s(:while,
              s(:send,
                s(:ivar, :@in_part), :!=,
                s(:str, "rd")),
              s(:begin,
                s(:lvasgn, :line,
                  s(:send,
                    s(:ivar, :@src), :[],
                    s(:ivar, :@i))),
                s(:op_asgn,
                  s(:ivasgn, :@i), :+,
                  s(:int, 1)),
                s(:case,
                  s(:lvar, :line),
                  s(:when,
                    s(:false),
                    s(:return,
                      s(:array,
                        s(:false),
                        s(:false)))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^=begin\\s*(?:\\bRD\\b.*)?\\s*$"),
                      s(:regopt)),
                    s(:if,
                      s(:ivar, :@in_part),
                      s(:send,
                        s(:ivar, :@part_content), :push,
                        s(:lvar, :line)),
                      s(:begin,
                        s(:ivasgn, :@in_part,
                          s(:str, "rd")),
                        s(:return,
                          s(:array,
                            s(:sym, :WHITELINE),
                            s(:str, "=begin\n")))))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^=begin\\s+(\\w+)"),
                      s(:regopt)),
                    s(:begin,
                      s(:lvasgn, :part,
                        s(:nth_ref, 1)),
                      s(:if,
                        s(:ivar, :@in_part),
                        s(:send,
                          s(:ivar, :@part_content), :push,
                          s(:lvar, :line)),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:ivar, :@tree), :filter), :[],
                            s(:lvar, :part)),
                          s(:ivasgn, :@in_part,
                            s(:lvar, :part)), nil)))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^=end"),
                      s(:regopt)),
                    s(:if,
                      s(:ivar, :@in_part),
                      s(:begin,
                        s(:lvasgn, :part,
                          s(:send,
                            s(:const,
                              s(:const,
                                s(:const, nil, :RDoc), :RD), :Part), :new,
                            s(:send,
                              s(:ivar, :@part_content), :join,
                              s(:str, "")),
                            s(:ivar, :@tree),
                            s(:str, "r"))),
                        s(:send,
                          s(:ivar, :@part_content), :clear),
                        s(:lvasgn, :part_out,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:ivar, :@tree), :filter), :[],
                              s(:ivar, :@in_part)), :call,
                            s(:lvar, :part))),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@tree), :filter), :[],
                                s(:ivar, :@in_part)), :mode), :==,
                            s(:sym, :rd)),
                          s(:lvasgn, :subtree,
                            s(:send, nil, :parse_subtree,
                              s(:send,
                                s(:lvar, :part_out), :to_a))),
                          s(:begin,
                            s(:lvasgn, :basename,
                              s(:send,
                                s(:const, nil, :TMPFILE), :join,
                                s(:str, "."))),
                            s(:op_asgn,
                              s(:send,
                                s(:const, nil, :TMPFILE), :[],
                                s(:int, -1)), :+,
                              s(:int, 1)),
                            s(:lvasgn, :tmpfile,
                              s(:send, nil, :open,
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:send,
                                        s(:ivar, :@tree), :tmp_dir), :+,
                                      s(:str, "/")), :+,
                                    s(:lvar, :basename)), :+,
                                  s(:dstr,
                                    s(:str, "."),
                                    s(:begin,
                                      s(:ivar, :@in_part)))),
                                s(:str, "w"))),
                            s(:send,
                              s(:lvar, :tmpfile), :print,
                              s(:lvar, :part_out)),
                            s(:send,
                              s(:lvar, :tmpfile), :close),
                            s(:lvasgn, :subtree,
                              s(:send, nil, :parse_subtree,
                                s(:array,
                                  s(:str, "=begin\n"),
                                  s(:dstr,
                                    s(:str, "<<< "),
                                    s(:begin,
                                      s(:lvar, :basename)),
                                    s(:str, "\n")),
                                  s(:str, "=end\n")))))),
                        s(:ivasgn, :@in_part,
                          s(:nil)),
                        s(:return,
                          s(:array,
                            s(:sym, :SUBTREE),
                            s(:lvar, :subtree)))), nil)),
                  s(:if,
                    s(:ivar, :@in_part),
                    s(:send,
                      s(:ivar, :@part_content), :push,
                      s(:lvar, :line)), nil)))),
            s(:ivasgn, :@current_indent,
              s(:send,
                s(:ivar, :@indent_stack), :join,
                s(:str, ""))),
            s(:lvasgn, :line,
              s(:send,
                s(:ivar, :@src), :[],
                s(:ivar, :@i))),
            s(:case,
              s(:lvar, :line),
              s(:when,
                s(:false),
                s(:block,
                  s(:send, nil, :if_current_indent_equal,
                    s(:str, "")),
                  s(:args),
                  s(:array,
                    s(:false),
                    s(:false)))),
              s(:when,
                s(:regexp,
                  s(:str, "^=end"),
                  s(:regopt)),
                s(:block,
                  s(:send, nil, :if_current_indent_equal,
                    s(:str, "")),
                  s(:args),
                  s(:begin,
                    s(:ivasgn, :@in_part,
                      s(:nil)),
                    s(:array,
                      s(:sym, :WHITELINE),
                      s(:str, "=end"))))),
              s(:when,
                s(:regexp,
                  s(:str, "^\\s*$"),
                  s(:regopt)),
                s(:begin,
                  s(:op_asgn,
                    s(:ivasgn, :@i), :+,
                    s(:int, 1)),
                  s(:return,
                    s(:array,
                      s(:sym, :WHITELINE),
                      s(:str, ":WHITELINE"))))),
              s(:when,
                s(:regexp,
                  s(:str, "^\\#"),
                  s(:regopt)),
                s(:begin,
                  s(:op_asgn,
                    s(:ivasgn, :@i), :+,
                    s(:int, 1)),
                  s(:send,
                    s(:self), :next_token))),
              s(:when,
                s(:regexp,
                  s(:str, "^(={1,4})(?!=)\\s*(?=\\S)"),
                  s(:regopt)),
                s(:regexp,
                  s(:str, "^(\\+{1,2})(?!\\+)\\s*(?=\\S)"),
                  s(:regopt)),
                s(:begin,
                  s(:lvasgn, :rest,
                    s(:back_ref, :$')),
                  s(:send,
                    s(:lvar, :rest), :strip!),
                  s(:lvasgn, :mark,
                    s(:nth_ref, 1)),
                  s(:block,
                    s(:send, nil, :if_current_indent_equal,
                      s(:str, "")),
                    s(:args),
                    s(:return,
                      s(:array,
                        s(:sym, :HEADLINE),
                        s(:array,
                          s(:send,
                            s(:const, nil, :MARK_TO_LEVEL), :[],
                            s(:lvar, :mark)),
                          s(:lvar, :rest))))))),
              s(:when,
                s(:regexp,
                  s(:str, "^<<<\\s*(\\S+)"),
                  s(:regopt)),
                s(:begin,
                  s(:lvasgn, :file,
                    s(:nth_ref, 1)),
                  s(:block,
                    s(:send, nil, :if_current_indent_equal,
                      s(:str, "")),
                    s(:args),
                    s(:begin,
                      s(:lvasgn, :suffix,
                        s(:send,
                          s(:lvar, :file), :[],
                          s(:irange,
                            s(:int, -3),
                            s(:int, -1)))),
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :suffix), :==,
                            s(:str, ".rd")),
                          s(:send,
                            s(:lvar, :suffix), :==,
                            s(:str, ".rb"))),
                        s(:begin,
                          s(:lvasgn, :subtree,
                            s(:send, nil, :parse_subtree,
                              s(:send, nil, :get_included,
                                s(:lvar, :file)))),
                          s(:array,
                            s(:sym, :SUBTREE),
                            s(:lvar, :subtree))),
                        s(:array,
                          s(:sym, :INCLUDE),
                          s(:lvar, :file))))))),
              s(:when,
                s(:regexp,
                  s(:str, "^(\\s*)\\*(\\s*)"),
                  s(:regopt)),
                s(:begin,
                  s(:lvasgn, :rest,
                    s(:back_ref, :$')),
                  s(:lvasgn, :newIndent,
                    s(:nth_ref, 2)),
                  s(:block,
                    s(:send, nil, :if_current_indent_equal,
                      s(:nth_ref, 1)),
                    s(:args),
                    s(:if,
                      s(:ivar, :@in_verbatim),
                      s(:array,
                        s(:sym, :STRINGLINE),
                        s(:lvar, :line)),
                      s(:begin,
                        s(:send,
                          s(:ivar, :@indent_stack), :push,
                          s(:send,
                            s(:str, " "), :<<,
                            s(:lvar, :newIndent))),
                        s(:array,
                          s(:sym, :ITEMLISTLINE),
                          s(:lvar, :rest))))))),
              s(:when,
                s(:regexp,
                  s(:str, "^(\\s*)(\\(\\d+\\))(\\s*)"),
                  s(:regopt)),
                s(:begin,
                  s(:lvasgn, :rest,
                    s(:back_ref, :$')),
                  s(:lvasgn, :mark,
                    s(:nth_ref, 2)),
                  s(:lvasgn, :newIndent,
                    s(:nth_ref, 3)),
                  s(:block,
                    s(:send, nil, :if_current_indent_equal,
                      s(:nth_ref, 1)),
                    s(:args),
                    s(:if,
                      s(:ivar, :@in_verbatim),
                      s(:array,
                        s(:sym, :STRINGLINE),
                        s(:lvar, :line)),
                      s(:begin,
                        s(:send,
                          s(:ivar, :@indent_stack), :push,
                          s(:send,
                            s(:send,
                              s(:str, " "), :*,
                              s(:send,
                                s(:lvar, :mark), :size)), :<<,
                            s(:lvar, :newIndent))),
                        s(:array,
                          s(:sym, :ENUMLISTLINE),
                          s(:lvar, :rest))))))),
              s(:when,
                s(:regexp,
                  s(:str, "^(\\s*):(\\s*)"),
                  s(:regopt)),
                s(:begin,
                  s(:lvasgn, :rest,
                    s(:back_ref, :$')),
                  s(:lvasgn, :newIndent,
                    s(:nth_ref, 2)),
                  s(:block,
                    s(:send, nil, :if_current_indent_equal,
                      s(:nth_ref, 1)),
                    s(:args),
                    s(:if,
                      s(:ivar, :@in_verbatim),
                      s(:array,
                        s(:sym, :STRINGLINE),
                        s(:lvar, :line)),
                      s(:begin,
                        s(:send,
                          s(:ivar, :@indent_stack), :push,
                          s(:dstr,
                            s(:str, " "),
                            s(:begin,
                              s(:nth_ref, 2)))),
                        s(:array,
                          s(:sym, :DESCLISTLINE),
                          s(:lvar, :rest))))))),
              s(:when,
                s(:regexp,
                  s(:str, "^(\\s*)---(?!-|\\s*$)"),
                  s(:regopt)),
                s(:begin,
                  s(:lvasgn, :indent,
                    s(:nth_ref, 1)),
                  s(:lvasgn, :rest,
                    s(:back_ref, :$')),
                  s(:send,
                    s(:regexp,
                      s(:str, "\\s*"),
                      s(:regopt)), :===,
                    s(:lvar, :rest)),
                  s(:lvasgn, :term,
                    s(:back_ref, :$')),
                  s(:lvasgn, :new_indent,
                    s(:back_ref, :$&)),
                  s(:block,
                    s(:send, nil, :if_current_indent_equal,
                      s(:lvar, :indent)),
                    s(:args),
                    s(:if,
                      s(:ivar, :@in_verbatim),
                      s(:array,
                        s(:sym, :STRINGLINE),
                        s(:lvar, :line)),
                      s(:begin,
                        s(:send,
                          s(:ivar, :@indent_stack), :push,
                          s(:send,
                            s(:str, "   "), :+,
                            s(:lvar, :new_indent))),
                        s(:array,
                          s(:sym, :METHODLISTLINE),
                          s(:lvar, :term))))))),
              s(:when,
                s(:regexp,
                  s(:str, "^(\\s*)"),
                  s(:regopt)),
                s(:block,
                  s(:send, nil, :if_current_indent_equal,
                    s(:nth_ref, 1)),
                  s(:args),
                  s(:array,
                    s(:sym, :STRINGLINE),
                    s(:lvar, :line)))),
              s(:send, nil, :raise,
                s(:str, "[BUG] parsing error may occured."))))),
        s(:def, :if_current_indent_equal,
          s(:args,
            s(:arg, :indent)),
          s(:begin,
            s(:lvasgn, :indent,
              s(:send,
                s(:lvar, :indent), :sub,
                s(:regexp,
                  s(:str, "\\t"),
                  s(:regopt)),
                s(:send,
                  s(:str, " "), :*,
                  s(:int, 8)))),
            s(:if,
              s(:send,
                s(:ivar, :@current_indent), :==,
                s(:lvar, :indent)),
              s(:begin,
                s(:op_asgn,
                  s(:ivasgn, :@i), :+,
                  s(:int, 1)),
                s(:yield)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :indent), :index,
                    s(:ivar, :@current_indent)), :==,
                  s(:int, 0)),
                s(:begin,
                  s(:send,
                    s(:ivar, :@indent_stack), :push,
                    s(:send,
                      s(:lvar, :indent), :[],
                      s(:irange,
                        s(:send,
                          s(:ivar, :@current_indent), :size),
                        s(:int, -1)))),
                  s(:array,
                    s(:sym, :INDENT),
                    s(:str, ":INDENT"))),
                s(:begin,
                  s(:send,
                    s(:ivar, :@indent_stack), :pop),
                  s(:array,
                    s(:sym, :DEDENT),
                    s(:str, ":DEDENT"))))))),
        s(:send, nil, :private,
          s(:sym, :if_current_indent_equal)),
        s(:def, :cut_off,
          s(:args,
            s(:arg, :src)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:array)),
            s(:lvasgn, :whiteline_buf,
              s(:array)),
            s(:lvasgn, :line,
              s(:send,
                s(:lvar, :src), :shift)),
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "^\\s*"),
                s(:regopt)),
              s(:lvar, :line)),
            s(:lvasgn, :indent,
              s(:send,
                s(:const, nil, :Regexp), :quote,
                s(:back_ref, :$&))),
            s(:send,
              s(:lvar, :ret), :push,
              s(:back_ref, :$')),
            s(:while,
              s(:lvasgn, :line,
                s(:send,
                  s(:lvar, :src), :shift)),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^(\\s*)$"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:send,
                  s(:lvar, :whiteline_buf), :push,
                  s(:lvar, :line)),
                s(:if,
                  s(:send,
                    s(:regexp,
                      s(:str, "^"),
                      s(:begin,
                        s(:lvar, :indent)),
                      s(:regopt)), :=~,
                    s(:lvar, :line)),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :whiteline_buf), :empty?), nil,
                      s(:begin,
                        s(:send,
                          s(:lvar, :ret), :concat,
                          s(:lvar, :whiteline_buf)),
                        s(:send,
                          s(:lvar, :whiteline_buf), :clear))),
                    s(:send,
                      s(:lvar, :ret), :push,
                      s(:back_ref, :$'))),
                  s(:send, nil, :raise,
                    s(:str, "[BUG]: probably Parser Error while cutting off.\n"))))),
            s(:lvar, :ret))),
        s(:send, nil, :private,
          s(:sym, :cut_off)),
        s(:def, :set_term_to_element,
          s(:args,
            s(:arg, :parent),
            s(:arg, :term)),
          s(:send,
            s(:lvar, :parent), :set_term_without_document_struct,
            s(:lvar, :term))),
        s(:send, nil, :private,
          s(:sym, :set_term_to_element)),
        s(:def, :on_error,
          s(:args,
            s(:arg, :et),
            s(:arg, :ev),
            s(:arg, :_values)),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :prv),
                s(:lvasgn, :cur),
                s(:lvasgn, :nxt)),
              s(:send, nil, :format_line_num,
                s(:ivar, :@i),
                s(:send,
                  s(:ivar, :@i), :+,
                  s(:int, 1)),
                s(:send,
                  s(:ivar, :@i), :+,
                  s(:int, 2)))),
            s(:send, nil, :raise,
              s(:const, nil, :ParseError),
              s(:dstr,
                s(:str, "\n"),
                s(:str, "RD syntax error: line "),
                s(:begin,
                  s(:send,
                    s(:ivar, :@i), :+,
                    s(:int, 1))),
                s(:str, ":\n"),
                s(:str, "  "),
                s(:begin,
                  s(:lvar, :prv)),
                s(:str, "  |"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@src), :[],
                      s(:send,
                        s(:ivar, :@i), :-,
                        s(:int, 1))), :chomp)),
                s(:str, "\n"),
                s(:str, "  "),
                s(:begin,
                  s(:lvar, :cur)),
                s(:str, "=>|"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@src), :[],
                      s(:ivar, :@i)), :chomp)),
                s(:str, "\n"),
                s(:str, "  "),
                s(:begin,
                  s(:lvar, :nxt)),
                s(:str, "  |"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@src), :[],
                      s(:send,
                        s(:ivar, :@i), :+,
                        s(:int, 1))), :chomp)),
                s(:str, "\n"),
                s(:str, "\n"))))),
        s(:def, :line_index,
          s(:args),
          s(:ivar, :@i)),
        s(:def, :parse_subtree,
          s(:args,
            s(:arg, :src)),
          s(:begin,
            s(:or_asgn,
              s(:ivasgn, :@subparser),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RD), :BlockParser), :new)),
            s(:send,
              s(:ivar, :@subparser), :parse,
              s(:lvar, :src)))),
        s(:send, nil, :private,
          s(:sym, :parse_subtree)),
        s(:def, :get_included,
          s(:args,
            s(:arg, :file)),
          s(:begin,
            s(:lvasgn, :included,
              s(:array)),
            s(:block,
              s(:send,
                s(:ivar, :@include_path), :each),
              s(:args,
                s(:arg, :dir)),
              s(:begin,
                s(:lvasgn, :file_name,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:lvar, :dir),
                    s(:lvar, :file))),
                s(:if,
                  s(:send,
                    s(:const, nil, :File), :exist?,
                    s(:lvar, :file_name)),
                  s(:begin,
                    s(:lvasgn, :included,
                      s(:send,
                        s(:const, nil, :IO), :readlines,
                        s(:lvar, :file_name))),
                    s(:break)), nil))),
            s(:lvar, :included))),
        s(:send, nil, :private,
          s(:sym, :get_included)),
        s(:def, :format_line_num,
          s(:args,
            s(:restarg, :line_numbers)),
          s(:begin,
            s(:lvasgn, :width,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :line_numbers), :collect),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:send,
                      s(:lvar, :i), :to_s), :length)), :max)),
            s(:block,
              s(:send,
                s(:lvar, :line_numbers), :collect),
              s(:args,
                s(:arg, :i)),
              s(:send, nil, :sprintf,
                s(:dstr,
                  s(:str, "%"),
                  s(:begin,
                    s(:lvar, :width)),
                  s(:str, "d")),
                s(:lvar, :i))))),
        s(:send, nil, :private,
          s(:sym, :format_line_num)),
        s(:def, :content,
          s(:args,
            s(:arg, :values)),
          s(:send,
            s(:block,
              s(:send,
                s(:lvar, :values), :map),
              s(:args,
                s(:arg, :value)),
              s(:send,
                s(:lvar, :value), :content)), :join)),
        s(:def, :paragraph,
          s(:args,
            s(:arg, :value)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send,
                s(:send,
                  s(:send, nil, :cut_off,
                    s(:lvar, :value)), :join,
                  s(:str, " ")), :rstrip)),
            s(:lvasgn, :contents,
              s(:send,
                s(:ivar, :@inline_parser), :parse,
                s(:lvar, :content))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :Paragraph), :new,
              s(:splat,
                s(:lvar, :contents))))),
        s(:def, :add_footnote,
          s(:args,
            s(:arg, :content)),
          s(:begin,
            s(:lvasgn, :index,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@footnotes), :length), :/,
                  s(:int, 2)), :+,
                s(:int, 1))),
            s(:lvasgn, :footmark_link,
              s(:dstr,
                s(:str, "{^"),
                s(:begin,
                  s(:lvar, :index)),
                s(:str, "}[rdoc-label:footmark-"),
                s(:begin,
                  s(:lvar, :index)),
                s(:str, ":foottext-"),
                s(:begin,
                  s(:lvar, :index)),
                s(:str, "]"))),
            s(:send,
              s(:ivar, :@footnotes), :<<,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :Paragraph), :new,
                s(:lvar, :footmark_link),
                s(:str, " "),
                s(:splat,
                  s(:lvar, :content)))),
            s(:send,
              s(:ivar, :@footnotes), :<<,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :BlankLine), :new)),
            s(:lvar, :index))),
        s(:def, :add_label,
          s(:args,
            s(:arg, :label)),
          s(:begin,
            s(:send,
              s(:ivar, :@labels), :[]=,
              s(:lvar, :label),
              s(:true)),
            s(:lvar, :label))),
        s(:lvasgn, :racc_action_table,
          s(:array,
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 38),
            s(:int, 33),
            s(:int, 76),
            s(:int, 15),
            s(:int, 88),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 40),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 40),
            s(:int, 65),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 77),
            s(:int, 14),
            s(:int, 54),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 9),
            s(:int, 10),
            s(:int, 11),
            s(:int, 12),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 81),
            s(:int, 54),
            s(:int, 38),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 40),
            s(:int, 67),
            s(:int, 83),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 54),
            s(:int, 30),
            s(:int, 35),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 34),
            s(:int, 47),
            s(:int, 36),
            s(:int, 14),
            s(:int, 59),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 38),
            s(:nil),
            s(:nil),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:nil),
            s(:int, 47),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 9),
            s(:int, 10),
            s(:int, 11),
            s(:int, 12),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 15),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33),
            s(:int, 14),
            s(:int, 73),
            s(:int, 61),
            s(:int, 63),
            s(:nil),
            s(:int, 15),
            s(:nil),
            s(:int, 62),
            s(:int, 60),
            s(:int, 61),
            s(:int, 63),
            s(:int, 61),
            s(:int, 63),
            s(:int, 14),
            s(:int, 62),
            s(:int, 87),
            s(:int, 62),
            s(:nil),
            s(:int, 79),
            s(:int, 34),
            s(:int, 35),
            s(:int, 30),
            s(:int, 33))),
        s(:lvasgn, :racc_action_check,
          s(:array,
            s(:int, 86),
            s(:int, 86),
            s(:int, 86),
            s(:int, 86),
            s(:int, 86),
            s(:int, 86),
            s(:int, 57),
            s(:int, 31),
            s(:int, 49),
            s(:int, 86),
            s(:int, 86),
            s(:int, 41),
            s(:int, 41),
            s(:int, 41),
            s(:int, 41),
            s(:int, 41),
            s(:int, 15),
            s(:int, 15),
            s(:int, 15),
            s(:int, 15),
            s(:int, 15),
            s(:int, 41),
            s(:int, 45),
            s(:int, 45),
            s(:int, 45),
            s(:int, 45),
            s(:int, 45),
            s(:int, 45),
            s(:int, 51),
            s(:int, 34),
            s(:int, 54),
            s(:int, 45),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 0),
            s(:int, 85),
            s(:int, 85),
            s(:int, 85),
            s(:int, 85),
            s(:int, 85),
            s(:int, 85),
            s(:int, 56),
            s(:int, 33),
            s(:int, 58),
            s(:int, 85),
            s(:int, 79),
            s(:int, 79),
            s(:int, 79),
            s(:int, 79),
            s(:int, 79),
            s(:int, 79),
            s(:int, 62),
            s(:int, 44),
            s(:int, 66),
            s(:int, 79),
            s(:int, 78),
            s(:int, 78),
            s(:int, 78),
            s(:int, 78),
            s(:int, 78),
            s(:int, 78),
            s(:int, 30),
            s(:int, 28),
            s(:int, 25),
            s(:int, 78),
            s(:int, 24),
            s(:int, 24),
            s(:int, 24),
            s(:int, 24),
            s(:int, 22),
            s(:int, 24),
            s(:int, 1),
            s(:int, 35),
            s(:int, 36),
            s(:int, 24),
            s(:int, 75),
            s(:int, 75),
            s(:int, 75),
            s(:int, 75),
            s(:int, 75),
            s(:int, 75),
            s(:int, 13),
            s(:nil),
            s(:nil),
            s(:int, 75),
            s(:int, 27),
            s(:int, 27),
            s(:int, 27),
            s(:int, 27),
            s(:nil),
            s(:int, 27),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 27),
            s(:int, 74),
            s(:int, 74),
            s(:int, 74),
            s(:int, 74),
            s(:int, 74),
            s(:int, 74),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 74),
            s(:int, 68),
            s(:int, 68),
            s(:int, 68),
            s(:int, 68),
            s(:int, 68),
            s(:int, 68),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 68),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 2),
            s(:int, 46),
            s(:int, 46),
            s(:int, 46),
            s(:int, 46),
            s(:int, 46),
            s(:int, 46),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 46),
            s(:int, 47),
            s(:int, 47),
            s(:int, 47),
            s(:int, 47),
            s(:int, 47),
            s(:int, 47),
            s(:int, 39),
            s(:int, 39),
            s(:nil),
            s(:int, 47),
            s(:nil),
            s(:int, 39),
            s(:int, 39),
            s(:int, 82),
            s(:int, 82),
            s(:int, 64),
            s(:int, 64),
            s(:int, 52),
            s(:int, 82),
            s(:int, 82),
            s(:int, 64),
            s(:nil),
            s(:int, 52),
            s(:int, 20),
            s(:int, 20),
            s(:int, 20),
            s(:int, 20))),
        s(:lvasgn, :racc_action_pointer,
          s(:array,
            s(:int, 29),
            s(:int, 78),
            s(:int, 119),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 81),
            s(:nil),
            s(:int, 13),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 162),
            s(:nil),
            s(:int, 73),
            s(:nil),
            s(:int, 69),
            s(:int, 66),
            s(:nil),
            s(:int, 89),
            s(:int, 64),
            s(:nil),
            s(:int, 60),
            s(:int, 1),
            s(:nil),
            s(:int, 41),
            s(:int, 22),
            s(:int, 72),
            s(:int, 80),
            s(:nil),
            s(:nil),
            s(:int, 141),
            s(:nil),
            s(:int, 8),
            s(:nil),
            s(:nil),
            s(:int, 46),
            s(:int, 19),
            s(:int, 129),
            s(:int, 139),
            s(:nil),
            s(:int, -5),
            s(:nil),
            s(:int, 15),
            s(:int, 152),
            s(:nil),
            s(:int, 22),
            s(:nil),
            s(:int, 35),
            s(:int, -1),
            s(:int, 43),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 51),
            s(:nil),
            s(:int, 150),
            s(:nil),
            s(:int, 47),
            s(:nil),
            s(:int, 109),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 99),
            s(:int, 79),
            s(:nil),
            s(:nil),
            s(:int, 59),
            s(:int, 49),
            s(:nil),
            s(:nil),
            s(:int, 148),
            s(:nil),
            s(:nil),
            s(:int, 39),
            s(:int, -3),
            s(:nil),
            s(:nil))),
        s(:lvasgn, :racc_action_default,
          s(:array,
            s(:int, -2),
            s(:int, -73),
            s(:int, -1),
            s(:int, -4),
            s(:int, -5),
            s(:int, -6),
            s(:int, -7),
            s(:int, -8),
            s(:int, -9),
            s(:int, -10),
            s(:int, -11),
            s(:int, -12),
            s(:int, -13),
            s(:int, -14),
            s(:int, -16),
            s(:int, -73),
            s(:int, -23),
            s(:int, -24),
            s(:int, -25),
            s(:int, -26),
            s(:int, -27),
            s(:int, -31),
            s(:int, -32),
            s(:int, -34),
            s(:int, -72),
            s(:int, -36),
            s(:int, -38),
            s(:int, -72),
            s(:int, -40),
            s(:int, -42),
            s(:int, -59),
            s(:int, -44),
            s(:int, -46),
            s(:int, -59),
            s(:int, -63),
            s(:int, -65),
            s(:int, -73),
            s(:int, -3),
            s(:int, -15),
            s(:int, -73),
            s(:int, -22),
            s(:int, -73),
            s(:int, -30),
            s(:int, -33),
            s(:int, -73),
            s(:int, -69),
            s(:int, -70),
            s(:int, -71),
            s(:int, -37),
            s(:int, -73),
            s(:int, -41),
            s(:int, -73),
            s(:int, -51),
            s(:int, -58),
            s(:int, -61),
            s(:int, -45),
            s(:int, -73),
            s(:int, -62),
            s(:int, -64),
            s(:int, 89),
            s(:int, -17),
            s(:int, -19),
            s(:int, -73),
            s(:int, -21),
            s(:int, -18),
            s(:int, -28),
            s(:int, -73),
            s(:int, -35),
            s(:int, -66),
            s(:int, -53),
            s(:int, -54),
            s(:int, -55),
            s(:int, -56),
            s(:int, -57),
            s(:int, -67),
            s(:int, -68),
            s(:int, -39),
            s(:int, -43),
            s(:int, -49),
            s(:int, -73),
            s(:int, -60),
            s(:int, -47),
            s(:int, -73),
            s(:int, -29),
            s(:int, -52),
            s(:int, -48),
            s(:int, -73),
            s(:int, -20),
            s(:int, -50))),
        s(:lvasgn, :racc_goto_table,
          s(:array,
            s(:int, 4),
            s(:int, 39),
            s(:int, 4),
            s(:int, 68),
            s(:int, 74),
            s(:int, 75),
            s(:int, 5),
            s(:int, 6),
            s(:int, 5),
            s(:int, 6),
            s(:int, 51),
            s(:int, 42),
            s(:int, 44),
            s(:int, 56),
            s(:int, 3),
            s(:int, 49),
            s(:int, 37),
            s(:int, 57),
            s(:int, 58),
            s(:int, 41),
            s(:int, 43),
            s(:int, 48),
            s(:int, 84),
            s(:int, 50),
            s(:int, 66),
            s(:int, 55),
            s(:int, 1),
            s(:int, 64),
            s(:int, 84),
            s(:int, 84),
            s(:int, 45),
            s(:int, 46),
            s(:int, 42),
            s(:int, 45),
            s(:int, 46),
            s(:int, 2),
            s(:int, 85),
            s(:int, 86),
            s(:int, 80),
            s(:int, 84),
            s(:int, 84),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 82),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 78))),
        s(:lvasgn, :racc_goto_check,
          s(:array,
            s(:int, 4),
            s(:int, 10),
            s(:int, 4),
            s(:int, 31),
            s(:int, 31),
            s(:int, 31),
            s(:int, 5),
            s(:int, 6),
            s(:int, 5),
            s(:int, 6),
            s(:int, 27),
            s(:int, 12),
            s(:int, 21),
            s(:int, 27),
            s(:int, 3),
            s(:int, 21),
            s(:int, 3),
            s(:int, 9),
            s(:int, 9),
            s(:int, 17),
            s(:int, 19),
            s(:int, 23),
            s(:int, 32),
            s(:int, 26),
            s(:int, 11),
            s(:int, 29),
            s(:int, 1),
            s(:int, 10),
            s(:int, 32),
            s(:int, 32),
            s(:int, 5),
            s(:int, 6),
            s(:int, 12),
            s(:int, 5),
            s(:int, 6),
            s(:int, 2),
            s(:int, 31),
            s(:int, 31),
            s(:int, 33),
            s(:int, 32),
            s(:int, 32),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 10),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 4))),
        s(:lvasgn, :racc_goto_pointer,
          s(:array,
            s(:nil),
            s(:int, 26),
            s(:int, 35),
            s(:int, 14),
            s(:int, 0),
            s(:int, 6),
            s(:int, 7),
            s(:nil),
            s(:nil),
            s(:int, -17),
            s(:int, -14),
            s(:int, -17),
            s(:int, -9),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 4),
            s(:nil),
            s(:int, -2),
            s(:nil),
            s(:int, -12),
            s(:nil),
            s(:int, -4),
            s(:nil),
            s(:nil),
            s(:int, -5),
            s(:int, -20),
            s(:nil),
            s(:int, -6),
            s(:nil),
            s(:int, -42),
            s(:int, -46),
            s(:int, -16))),
        s(:lvasgn, :racc_goto_default,
          s(:array,
            s(:nil),
            s(:nil),
            s(:nil),
            s(:nil),
            s(:int, 70),
            s(:int, 71),
            s(:int, 72),
            s(:int, 7),
            s(:int, 8),
            s(:int, 13),
            s(:nil),
            s(:nil),
            s(:int, 21),
            s(:int, 16),
            s(:int, 17),
            s(:int, 18),
            s(:int, 19),
            s(:int, 20),
            s(:int, 22),
            s(:int, 23),
            s(:int, 24),
            s(:nil),
            s(:int, 25),
            s(:int, 26),
            s(:int, 27),
            s(:int, 28),
            s(:int, 29),
            s(:nil),
            s(:int, 31),
            s(:int, 32),
            s(:int, 52),
            s(:nil),
            s(:int, 69),
            s(:int, 53))),
        s(:lvasgn, :racc_reduce_table,
          s(:array,
            s(:int, 0),
            s(:int, 0),
            s(:sym, :racc_error),
            s(:int, 1),
            s(:int, 15),
            s(:sym, :_reduce_1),
            s(:int, 0),
            s(:int, 15),
            s(:sym, :_reduce_2),
            s(:int, 2),
            s(:int, 16),
            s(:sym, :_reduce_3),
            s(:int, 1),
            s(:int, 16),
            s(:sym, :_reduce_4),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_5),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_6),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_8),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_9),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_10),
            s(:int, 1),
            s(:int, 17),
            s(:sym, :_reduce_11),
            s(:int, 1),
            s(:int, 21),
            s(:sym, :_reduce_12),
            s(:int, 1),
            s(:int, 22),
            s(:sym, :_reduce_13),
            s(:int, 1),
            s(:int, 18),
            s(:sym, :_reduce_14),
            s(:int, 2),
            s(:int, 23),
            s(:sym, :_reduce_15),
            s(:int, 1),
            s(:int, 23),
            s(:sym, :_reduce_16),
            s(:int, 3),
            s(:int, 19),
            s(:sym, :_reduce_17),
            s(:int, 1),
            s(:int, 25),
            s(:sym, :_reduce_18),
            s(:int, 2),
            s(:int, 24),
            s(:sym, :_reduce_19),
            s(:int, 4),
            s(:int, 24),
            s(:sym, :_reduce_20),
            s(:int, 2),
            s(:int, 24),
            s(:sym, :_reduce_21),
            s(:int, 1),
            s(:int, 24),
            s(:sym, :_reduce_22),
            s(:int, 1),
            s(:int, 26),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 26),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 26),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 26),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 20),
            s(:sym, :_reduce_27),
            s(:int, 3),
            s(:int, 20),
            s(:sym, :_reduce_28),
            s(:int, 4),
            s(:int, 20),
            s(:sym, :_reduce_29),
            s(:int, 2),
            s(:int, 31),
            s(:sym, :_reduce_30),
            s(:int, 1),
            s(:int, 31),
            s(:sym, :_reduce_31),
            s(:int, 1),
            s(:int, 27),
            s(:sym, :_reduce_32),
            s(:int, 2),
            s(:int, 32),
            s(:sym, :_reduce_33),
            s(:int, 1),
            s(:int, 32),
            s(:sym, :_reduce_34),
            s(:int, 3),
            s(:int, 33),
            s(:sym, :_reduce_35),
            s(:int, 1),
            s(:int, 28),
            s(:sym, :_reduce_36),
            s(:int, 2),
            s(:int, 36),
            s(:sym, :_reduce_37),
            s(:int, 1),
            s(:int, 36),
            s(:sym, :_reduce_38),
            s(:int, 3),
            s(:int, 37),
            s(:sym, :_reduce_39),
            s(:int, 1),
            s(:int, 29),
            s(:sym, :_reduce_40),
            s(:int, 2),
            s(:int, 39),
            s(:sym, :_reduce_41),
            s(:int, 1),
            s(:int, 39),
            s(:sym, :_reduce_42),
            s(:int, 3),
            s(:int, 40),
            s(:sym, :_reduce_43),
            s(:int, 1),
            s(:int, 30),
            s(:sym, :_reduce_44),
            s(:int, 2),
            s(:int, 42),
            s(:sym, :_reduce_45),
            s(:int, 1),
            s(:int, 42),
            s(:sym, :_reduce_46),
            s(:int, 3),
            s(:int, 43),
            s(:sym, :_reduce_47),
            s(:int, 3),
            s(:int, 41),
            s(:sym, :_reduce_48),
            s(:int, 2),
            s(:int, 41),
            s(:sym, :_reduce_49),
            s(:int, 4),
            s(:int, 41),
            s(:sym, :_reduce_50),
            s(:int, 1),
            s(:int, 41),
            s(:sym, :_reduce_51),
            s(:int, 2),
            s(:int, 45),
            s(:sym, :_reduce_52),
            s(:int, 1),
            s(:int, 45),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 46),
            s(:sym, :_reduce_54),
            s(:int, 1),
            s(:int, 46),
            s(:sym, :_reduce_55),
            s(:int, 1),
            s(:int, 46),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 46),
            s(:sym, :_reduce_57),
            s(:int, 1),
            s(:int, 44),
            s(:sym, :_reduce_none),
            s(:int, 0),
            s(:int, 44),
            s(:sym, :_reduce_none),
            s(:int, 2),
            s(:int, 47),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 47),
            s(:sym, :_reduce_none),
            s(:int, 2),
            s(:int, 34),
            s(:sym, :_reduce_62),
            s(:int, 1),
            s(:int, 34),
            s(:sym, :_reduce_63),
            s(:int, 2),
            s(:int, 38),
            s(:sym, :_reduce_64),
            s(:int, 1),
            s(:int, 38),
            s(:sym, :_reduce_65),
            s(:int, 2),
            s(:int, 35),
            s(:sym, :_reduce_66),
            s(:int, 2),
            s(:int, 35),
            s(:sym, :_reduce_67),
            s(:int, 2),
            s(:int, 35),
            s(:sym, :_reduce_68),
            s(:int, 1),
            s(:int, 35),
            s(:sym, :_reduce_69),
            s(:int, 1),
            s(:int, 35),
            s(:sym, :_reduce_none),
            s(:int, 1),
            s(:int, 35),
            s(:sym, :_reduce_71),
            s(:int, 0),
            s(:int, 35),
            s(:sym, :_reduce_72))),
        s(:lvasgn, :racc_reduce_n,
          s(:int, 73)),
        s(:lvasgn, :racc_shift_n,
          s(:int, 89)),
        s(:lvasgn, :racc_token_table,
          s(:hash,
            s(:pair,
              s(:false),
              s(:int, 0)),
            s(:pair,
              s(:sym, :error),
              s(:int, 1)),
            s(:pair,
              s(:sym, :DUMMY),
              s(:int, 2)),
            s(:pair,
              s(:sym, :ITEMLISTLINE),
              s(:int, 3)),
            s(:pair,
              s(:sym, :ENUMLISTLINE),
              s(:int, 4)),
            s(:pair,
              s(:sym, :DESCLISTLINE),
              s(:int, 5)),
            s(:pair,
              s(:sym, :METHODLISTLINE),
              s(:int, 6)),
            s(:pair,
              s(:sym, :STRINGLINE),
              s(:int, 7)),
            s(:pair,
              s(:sym, :WHITELINE),
              s(:int, 8)),
            s(:pair,
              s(:sym, :SUBTREE),
              s(:int, 9)),
            s(:pair,
              s(:sym, :HEADLINE),
              s(:int, 10)),
            s(:pair,
              s(:sym, :INCLUDE),
              s(:int, 11)),
            s(:pair,
              s(:sym, :INDENT),
              s(:int, 12)),
            s(:pair,
              s(:sym, :DEDENT),
              s(:int, 13)))),
        s(:lvasgn, :racc_nt_base,
          s(:int, 14)),
        s(:lvasgn, :racc_use_result_var,
          s(:true)),
        s(:casgn, nil, :Racc_arg,
          s(:array,
            s(:lvar, :racc_action_table),
            s(:lvar, :racc_action_check),
            s(:lvar, :racc_action_default),
            s(:lvar, :racc_action_pointer),
            s(:lvar, :racc_goto_table),
            s(:lvar, :racc_goto_check),
            s(:lvar, :racc_goto_default),
            s(:lvar, :racc_goto_pointer),
            s(:lvar, :racc_nt_base),
            s(:lvar, :racc_reduce_table),
            s(:lvar, :racc_token_table),
            s(:lvar, :racc_shift_n),
            s(:lvar, :racc_reduce_n),
            s(:lvar, :racc_use_result_var))),
        s(:casgn, nil, :Racc_token_to_s_table,
          s(:array,
            s(:str, "$end"),
            s(:str, "error"),
            s(:str, "DUMMY"),
            s(:str, "ITEMLISTLINE"),
            s(:str, "ENUMLISTLINE"),
            s(:str, "DESCLISTLINE"),
            s(:str, "METHODLISTLINE"),
            s(:str, "STRINGLINE"),
            s(:str, "WHITELINE"),
            s(:str, "SUBTREE"),
            s(:str, "HEADLINE"),
            s(:str, "INCLUDE"),
            s(:str, "INDENT"),
            s(:str, "DEDENT"),
            s(:str, "$start"),
            s(:str, "document"),
            s(:str, "blocks"),
            s(:str, "block"),
            s(:str, "textblock"),
            s(:str, "verbatim"),
            s(:str, "lists"),
            s(:str, "headline"),
            s(:str, "include"),
            s(:str, "textblockcontent"),
            s(:str, "verbatimcontent"),
            s(:str, "verbatim_after_lists"),
            s(:str, "list"),
            s(:str, "itemlist"),
            s(:str, "enumlist"),
            s(:str, "desclist"),
            s(:str, "methodlist"),
            s(:str, "lists2"),
            s(:str, "itemlistitems"),
            s(:str, "itemlistitem"),
            s(:str, "first_textblock_in_itemlist"),
            s(:str, "other_blocks_in_list"),
            s(:str, "enumlistitems"),
            s(:str, "enumlistitem"),
            s(:str, "first_textblock_in_enumlist"),
            s(:str, "desclistitems"),
            s(:str, "desclistitem"),
            s(:str, "description_part"),
            s(:str, "methodlistitems"),
            s(:str, "methodlistitem"),
            s(:str, "whitelines"),
            s(:str, "blocks_in_list"),
            s(:str, "block_in_list"),
            s(:str, "whitelines2"))),
        s(:casgn, nil, :Racc_debug_parser,
          s(:false)),
        s(:def, :_reduce_1,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :Document), :new,
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_2,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send, nil, :raise,
              s(:const, nil, :ParseError),
              s(:str, "file empty")),
            s(:lvar, :result))),
        s(:def, :_reduce_3,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)), :concat,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)))),
            s(:lvar, :result))),
        s(:def, :_reduce_4,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 0))),
            s(:lvar, :result))),
        s(:def, :_reduce_5,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_6,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_8,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_9,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_10,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :RDoc), :Markup), :BlankLine), :new))),
            s(:lvar, :result))),
        s(:def, :_reduce_11,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)), :parts)),
            s(:lvar, :result))),
        s(:def, :_reduce_12,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :title,
              s(:send,
                s(:ivar, :@inline_parser), :parse,
                s(:send,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0)), :[],
                  s(:int, 1)))),
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :Heading), :new,
                s(:send,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0)), :[],
                  s(:int, 0)),
                s(:lvar, :title))),
            s(:lvar, :result))),
        s(:def, :_reduce_13,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :Include), :new,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)),
                s(:ivar, :@include_path))),
            s(:lvar, :result))),
        s(:def, :_reduce_14,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send, nil, :paragraph,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)))),
            s(:lvar, :result))),
        s(:def, :_reduce_15,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :<<,
              s(:send,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)), :rstrip)),
            s(:lvar, :result))),
        s(:def, :_reduce_16,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array,
                s(:send,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0)), :rstrip))),
            s(:lvar, :result))),
        s(:def, :_reduce_17,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :cut_off,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)))),
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :Verbatim), :new,
                s(:splat,
                  s(:lvar, :content)))),
            s(:ivasgn, :@in_verbatim,
              s(:false)),
            s(:lvar, :result))),
        s(:def, :_reduce_18,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :cut_off,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)))),
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :Verbatim), :new,
                s(:splat,
                  s(:lvar, :content)))),
            s(:ivasgn, :@in_verbatim,
              s(:false)),
            s(:lvar, :result))),
        s(:def, :_reduce_19,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :<<,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_20,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :concat,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 2))),
            s(:lvar, :result))),
        s(:def, :_reduce_21,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :<<,
              s(:str, "\n")),
            s(:lvar, :result))),
        s(:def, :_reduce_22,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:ivasgn, :@in_verbatim,
              s(:true)),
            s(:lvar, :result))),
        s(:def, :_reduce_27,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 0))),
            s(:lvar, :result))),
        s(:def, :_reduce_28,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_29,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)), :push,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 2)))),
            s(:lvar, :result))),
        s(:def, :_reduce_30,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)), :<<,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)))),
            s(:lvar, :result))),
        s(:def, :_reduce_31,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)))),
            s(:lvar, :result))),
        s(:def, :_reduce_32,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :List), :new,
                s(:sym, :BULLET),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_33,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :push,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_34,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_35,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))))),
            s(:lvar, :result))),
        s(:def, :_reduce_36,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :List), :new,
                s(:sym, :NUMBER),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_37,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :push,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_38,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_39,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 0)),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))))),
            s(:lvar, :result))),
        s(:def, :_reduce_40,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :List), :new,
                s(:sym, :NOTE),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_41,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :push,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_42,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_43,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :term,
              s(:send,
                s(:ivar, :@inline_parser), :parse,
                s(:send,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0)), :strip))),
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :ListItem), :new,
                s(:lvar, :term),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))))),
            s(:lvar, :result))),
        s(:def, :_reduce_44,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :List), :new,
                s(:sym, :LABEL),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_45,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :push,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_46,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_47,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :Markup), :ListItem), :new,
                s(:dstr,
                  s(:str, "<tt>"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :val), :[],
                        s(:int, 0)), :strip)),
                  s(:str, "</tt>")),
                s(:splat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))))),
            s(:lvar, :result))),
        s(:def, :_reduce_48,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:array,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))), :concat,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 2)))),
            s(:lvar, :result))),
        s(:def, :_reduce_49,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)))),
            s(:lvar, :result))),
        s(:def, :_reduce_50,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 2))),
            s(:lvar, :result))),
        s(:def, :_reduce_51,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array)),
            s(:lvar, :result))),
        s(:def, :_reduce_52,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :concat,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_54,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_55,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_57,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array)),
            s(:lvar, :result))),
        s(:def, :_reduce_62,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send, nil, :paragraph,
                s(:send,
                  s(:array,
                    s(:send,
                      s(:lvar, :val), :[],
                      s(:int, 0))), :concat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))))),
            s(:lvar, :result))),
        s(:def, :_reduce_63,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send, nil, :paragraph,
                s(:array,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_64,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send, nil, :paragraph,
                s(:send,
                  s(:array,
                    s(:send,
                      s(:lvar, :val), :[],
                      s(:int, 0))), :concat,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 1))))),
            s(:lvar, :result))),
        s(:def, :_reduce_65,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send, nil, :paragraph,
                s(:array,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))))),
            s(:lvar, :result))),
        s(:def, :_reduce_66,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:array,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0))), :concat,
                s(:send,
                  s(:lvar, :val), :[],
                  s(:int, 1)))),
            s(:lvar, :result))),
        s(:def, :_reduce_67,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:send,
              s(:lvar, :result), :concat,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_68,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:send,
                s(:lvar, :val), :[],
                s(:int, 1))),
            s(:lvar, :result))),
        s(:def, :_reduce_69,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:lvar, :val)),
            s(:lvar, :result))),
        s(:def, :_reduce_71,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array)),
            s(:lvar, :result))),
        s(:def, :_reduce_72,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array)),
            s(:lvar, :result))),
        s(:def, :_reduce_none,
          s(:args,
            s(:arg, :val),
            s(:arg, :_values),
            s(:arg, :result)),
          s(:send,
            s(:lvar, :val), :[],
            s(:int, 0)))))))
