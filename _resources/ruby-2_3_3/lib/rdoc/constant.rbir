s(:class,
  s(:const,
    s(:const, nil, :RDoc), :Constant),
  s(:const,
    s(:const, nil, :RDoc), :CodeObject),
  s(:begin,
    s(:casgn, nil, :MARSHAL_VERSION,
      s(:int, 0)),
    s(:send, nil, :attr_writer,
      s(:sym, :is_alias_for)),
    s(:send, nil, :attr_accessor,
      s(:sym, :name)),
    s(:send, nil, :attr_accessor,
      s(:sym, :value)),
    s(:send, nil, :attr_accessor,
      s(:sym, :visibility)),
    s(:def, :initialize,
      s(:args,
        s(:arg, :name),
        s(:arg, :value),
        s(:arg, :comment)),
      s(:begin,
        s(:super),
        s(:ivasgn, :@name,
          s(:lvar, :name)),
        s(:ivasgn, :@value,
          s(:lvar, :value)),
        s(:ivasgn, :@is_alias_for,
          s(:nil)),
        s(:ivasgn, :@visibility,
          s(:nil)),
        s(:send,
          s(:self), :comment=,
          s(:lvar, :comment)))),
    s(:def, :<=>,
      s(:args,
        s(:arg, :other)),
      s(:begin,
        s(:if,
          s(:send,
            s(:send,
              s(:self), :class), :===,
            s(:lvar, :other)), nil,
          s(:return)),
        s(:send,
          s(:array,
            s(:send, nil, :parent_name),
            s(:send, nil, :name)), :<=>,
          s(:array,
            s(:send,
              s(:lvar, :other), :parent_name),
            s(:send,
              s(:lvar, :other), :name))))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:and,
          s(:send,
            s(:send,
              s(:self), :class), :==,
            s(:send,
              s(:lvar, :other), :class)),
          s(:send,
            s(:ivar, :@parent), :==,
            s(:send,
              s(:lvar, :other), :parent))),
        s(:send,
          s(:ivar, :@name), :==,
          s(:send,
            s(:lvar, :other), :name)))),
    s(:def, :documented?,
      s(:args),
      s(:begin,
        s(:if,
          s(:zsuper),
          s(:return,
            s(:true)), nil),
        s(:if,
          s(:ivar, :@is_alias_for), nil,
          s(:return,
            s(:false))),
        s(:case,
          s(:ivar, :@is_alias_for),
          s(:when,
            s(:const, nil, :String),
            s(:begin,
              s(:lvasgn, :found,
                s(:send,
                  s(:ivar, :@store), :find_class_or_module,
                  s(:ivar, :@is_alias_for))),
              s(:if,
                s(:lvar, :found), nil,
                s(:return,
                  s(:false))),
              s(:ivasgn, :@is_alias_for,
                s(:lvar, :found)))), nil),
        s(:send,
          s(:ivar, :@is_alias_for), :documented?))),
    s(:def, :full_name,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@full_name),
        s(:dstr,
          s(:begin,
            s(:send, nil, :parent_name)),
          s(:str, "::"),
          s(:begin,
            s(:ivar, :@name))))),
    s(:def, :is_alias_for,
      s(:args),
      s(:case,
        s(:ivar, :@is_alias_for),
        s(:when,
          s(:const, nil, :String),
          s(:begin,
            s(:lvasgn, :found,
              s(:send,
                s(:ivar, :@store), :find_class_or_module,
                s(:ivar, :@is_alias_for))),
            s(:if,
              s(:lvar, :found),
              s(:ivasgn, :@is_alias_for,
                s(:lvar, :found)), nil),
            s(:ivar, :@is_alias_for))),
        s(:ivar, :@is_alias_for))),
    s(:def, :inspect,
      s(:args),
      s(:send,
        s(:str, "#<%s:0x%x %s::%s>"), :%,
        s(:array,
          s(:send,
            s(:self), :class),
          s(:send, nil, :object_id),
          s(:send, nil, :parent_name),
          s(:ivar, :@name)))),
    s(:def, :marshal_dump,
      s(:args),
      s(:begin,
        s(:lvasgn, :alias_name,
          s(:case,
            s(:lvasgn, :found,
              s(:send, nil, :is_alias_for)),
            s(:when,
              s(:const,
                s(:const, nil, :RDoc), :CodeObject),
              s(:send,
                s(:lvar, :found), :full_name)),
            s(:lvar, :found))),
        s(:array,
          s(:const, nil, :MARSHAL_VERSION),
          s(:ivar, :@name),
          s(:send, nil, :full_name),
          s(:ivar, :@visibility),
          s(:lvar, :alias_name),
          s(:send, nil, :parse,
            s(:ivar, :@comment)),
          s(:send,
            s(:ivar, :@file), :relative_name),
          s(:send,
            s(:send, nil, :parent), :name),
          s(:send,
            s(:send, nil, :parent), :class),
          s(:send,
            s(:send, nil, :section), :title)))),
    s(:def, :marshal_load,
      s(:args,
        s(:arg, :array)),
      s(:begin,
        s(:send, nil, :initialize,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 1)),
          s(:nil),
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 5))),
        s(:ivasgn, :@full_name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 2))),
        s(:ivasgn, :@visibility,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 3))),
        s(:ivasgn, :@is_alias_for,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 4))),
        s(:ivasgn, :@parent_name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 7))),
        s(:ivasgn, :@parent_class,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 8))),
        s(:ivasgn, :@section_title,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 9))),
        s(:ivasgn, :@file,
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :TopLevel), :new,
            s(:send,
              s(:lvar, :array), :[],
              s(:int, 6)))))),
    s(:def, :path,
      s(:args),
      s(:dstr,
        s(:begin,
          s(:send,
            s(:ivar, :@parent), :path)),
        s(:str, "#"),
        s(:begin,
          s(:ivar, :@name)))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:dstr,
            s(:str, "["),
            s(:begin,
              s(:send,
                s(:send,
                  s(:self), :class), :name)),
            s(:str, " "),
            s(:begin,
              s(:send, nil, :full_name))),
          s(:str, "]")),
        s(:args),
        s(:if,
          s(:send,
            s(:send, nil, :comment), :empty?), nil,
          s(:begin,
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "comment:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :pp,
              s(:ivar, :@comment)))))),
    s(:def, :store=,
      s(:args,
        s(:arg, :store)),
      s(:begin,
        s(:zsuper),
        s(:if,
          s(:ivar, :@file),
          s(:ivasgn, :@file,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:send,
                s(:ivar, :@file), :full_name))), nil))),
    s(:def, :to_s,
      s(:args),
      s(:begin,
        s(:lvasgn, :parent_name,
          s(:if,
            s(:send, nil, :parent),
            s(:send,
              s(:send, nil, :parent), :full_name),
            s(:str, "(unknown)"))),
        s(:if,
          s(:send, nil, :is_alias_for),
          s(:dstr,
            s(:str, "constant "),
            s(:begin,
              s(:lvar, :parent_name)),
            s(:str, "::"),
            s(:ivar, :@name),
            s(:str, " -> "),
            s(:begin,
              s(:send, nil, :is_alias_for))),
          s(:dstr,
            s(:str, "constant "),
            s(:begin,
              s(:lvar, :parent_name)),
            s(:str, "::"),
            s(:ivar, :@name)))))))
