s(:module,
  s(:const,
    s(:const, nil, :RDoc), :Encoding),
  s(:begin,
    s(:defs,
      s(:self), :read_file,
      s(:args,
        s(:arg, :filename),
        s(:arg, :encoding),
        s(:optarg, :force_transcode,
          s(:false))),
      s(:rescue,
        s(:begin,
          s(:lvasgn, :content,
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :filename),
                s(:str, "rb")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :read))),
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_PLATFORM), :=~,
              s(:regexp,
                s(:str, "mswin|mingw"),
                s(:regopt))),
            s(:send,
              s(:lvar, :content), :gsub!,
              s(:str, "\r\n"),
              s(:str, "\n")), nil),
          s(:lvasgn, :utf8,
            s(:send,
              s(:lvar, :content), :sub!,
              s(:regexp,
                s(:str, "\\A\\xef\\xbb\\xbf"),
                s(:regopt)),
              s(:str, ""))),
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :Encoding), :set_encoding,
            s(:lvar, :content)),
          s(:if,
            s(:send,
              s(:const, nil, :Object), :const_defined?,
              s(:sym, :Encoding)),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:or_asgn,
                    s(:lvasgn, :encoding),
                    s(:send,
                      s(:const, nil, :Encoding), :default_external)),
                  s(:lvasgn, :orig_encoding,
                    s(:send,
                      s(:lvar, :content), :encoding)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :orig_encoding), :ascii_compatible?), :!),
                    s(:send,
                      s(:lvar, :content), :encode!,
                      s(:lvar, :encoding)),
                    s(:if,
                      s(:lvar, :utf8),
                      s(:begin,
                        s(:send,
                          s(:lvar, :content), :force_encoding,
                          s(:const,
                            s(:const, nil, :Encoding), :UTF_8)),
                        s(:send,
                          s(:lvar, :content), :encode!,
                          s(:lvar, :encoding))),
                      s(:send,
                        s(:lvar, :content), :force_encoding,
                        s(:lvar, :encoding)))),
                  s(:if,
                    s(:send,
                      s(:lvar, :content), :valid_encoding?), nil,
                    s(:begin,
                      s(:send,
                        s(:lvar, :content), :force_encoding,
                        s(:lvar, :orig_encoding)),
                      s(:send,
                        s(:lvar, :content), :encode!,
                        s(:lvar, :encoding)))),
                  s(:if,
                    s(:send,
                      s(:lvar, :content), :valid_encoding?), nil,
                    s(:begin,
                      s(:send, nil, :warn,
                        s(:dstr,
                          s(:str, "unable to convert "),
                          s(:begin,
                            s(:lvar, :filename)),
                          s(:str, " to "),
                          s(:begin,
                            s(:lvar, :encoding)),
                          s(:str, ", skipping"))),
                      s(:lvasgn, :content,
                        s(:nil))))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :Encoding), :InvalidByteSequenceError),
                    s(:const,
                      s(:const, nil, :Encoding), :UndefinedConversionError)),
                  s(:lvasgn, :e),
                  s(:if,
                    s(:lvar, :force_transcode),
                    s(:begin,
                      s(:send,
                        s(:lvar, :content), :force_encoding,
                        s(:lvar, :orig_encoding)),
                      s(:send,
                        s(:lvar, :content), :encode!,
                        s(:lvar, :encoding),
                        s(:hash,
                          s(:pair,
                            s(:sym, :invalid),
                            s(:sym, :replace)),
                          s(:pair,
                            s(:sym, :undef),
                            s(:sym, :replace)),
                          s(:pair,
                            s(:sym, :replace),
                            s(:str, "?")))),
                      s(:return,
                        s(:lvar, :content))),
                    s(:begin,
                      s(:send, nil, :warn,
                        s(:dstr,
                          s(:str, "unable to convert "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :e), :message)),
                          s(:str, " for "),
                          s(:begin,
                            s(:lvar, :filename)),
                          s(:str, ", skipping"))),
                      s(:return,
                        s(:nil))))), nil)), nil),
          s(:lvar, :content)),
        s(:resbody,
          s(:array,
            s(:const, nil, :ArgumentError)),
          s(:lvasgn, :e),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :e), :message), :=~,
                s(:regexp,
                  s(:str, "unknown encoding name - (.*)"),
                  s(:regopt))), nil,
              s(:send, nil, :raise)),
            s(:send, nil, :warn,
              s(:dstr,
                s(:str, "unknown encoding name \""),
                s(:begin,
                  s(:nth_ref, 1)),
                s(:str, "\" for "),
                s(:begin,
                  s(:lvar, :filename)),
                s(:str, ", skipping"))),
            s(:nil))),
        s(:resbody,
          s(:array,
            s(:const,
              s(:const, nil, :Errno), :EISDIR),
            s(:const,
              s(:const, nil, :Errno), :ENOENT)), nil,
          s(:nil)), nil)),
    s(:defs,
      s(:self), :set_encoding,
      s(:args,
        s(:arg, :string)),
      s(:begin,
        s(:send,
          s(:lvar, :string), :=~,
          s(:regexp,
            s(:str, "\\A(?:#!.*\\n)?(.*\\n)"),
            s(:regopt))),
        s(:lvasgn, :first_line,
          s(:nth_ref, 1)),
        s(:lvasgn, :name,
          s(:case,
            s(:lvar, :first_line),
            s(:when,
              s(:regexp,
                s(:str, "^<\\?xml[^?]*encoding=([\"'])(.*?)\\1"),
                s(:regopt)),
              s(:nth_ref, 2)),
            s(:when,
              s(:regexp,
                s(:str, "\\b(?:en)?coding[=:]\\s*([^\\s;]+)"),
                s(:regopt, :i)),
              s(:nth_ref, 1)),
            s(:return))),
        s(:send,
          s(:lvar, :string), :sub!,
          s(:lvar, :first_line),
          s(:str, "")),
        s(:if,
          s(:send,
            s(:const, nil, :Object), :const_defined?,
            s(:sym, :Encoding)), nil,
          s(:return)),
        s(:lvasgn, :enc,
          s(:send,
            s(:const, nil, :Encoding), :find,
            s(:lvar, :name))),
        s(:if,
          s(:lvar, :enc),
          s(:send,
            s(:lvar, :string), :force_encoding,
            s(:lvar, :enc)), nil)))))
