s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Parser), :Simple),
  s(:const,
    s(:const, nil, :RDoc), :Parser),
  s(:begin,
    s(:send, nil, :include,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :Parser), :Text)),
    s(:send, nil, :parse_files_matching,
      s(:regexp,
        s(:regopt))),
    s(:send, nil, :attr_reader,
      s(:sym, :content)),
    s(:def, :initialize,
      s(:args,
        s(:arg, :top_level),
        s(:arg, :file_name),
        s(:arg, :content),
        s(:arg, :options),
        s(:arg, :stats)),
      s(:begin,
        s(:zsuper),
        s(:lvasgn, :preprocess,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :PreProcess), :new,
            s(:ivar, :@file_name),
            s(:send,
              s(:ivar, :@options), :rdoc_include))),
        s(:send,
          s(:lvar, :preprocess), :handle,
          s(:ivar, :@content),
          s(:ivar, :@top_level)))),
    s(:def, :scan,
      s(:args),
      s(:begin,
        s(:lvasgn, :comment,
          s(:send, nil, :remove_coding_comment,
            s(:ivar, :@content))),
        s(:lvasgn, :comment,
          s(:send, nil, :remove_private_comment,
            s(:lvar, :comment))),
        s(:lvasgn, :comment,
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :Comment), :new,
            s(:lvar, :comment),
            s(:ivar, :@top_level))),
        s(:send,
          s(:ivar, :@top_level), :comment=,
          s(:lvar, :comment)),
        s(:ivar, :@top_level))),
    s(:def, :remove_coding_comment,
      s(:args,
        s(:arg, :text)),
      s(:send,
        s(:lvar, :text), :sub,
        s(:regexp,
          s(:str, "\\A# .*coding[=:].*$"),
          s(:regopt)),
        s(:str, ""))),
    s(:def, :remove_private_comment,
      s(:args,
        s(:arg, :comment)),
      s(:begin,
        s(:lvasgn, :empty,
          s(:str, "")),
        s(:if,
          s(:send,
            s(:const, nil, :Object), :const_defined?,
            s(:sym, :Encoding)),
          s(:send,
            s(:lvar, :empty), :force_encoding,
            s(:send,
              s(:lvar, :comment), :encoding)), nil),
        s(:lvasgn, :comment,
          s(:send,
            s(:lvar, :comment), :gsub,
            s(:regexp,
              s(:str, "^--\\n.*?^\\+\\+\\n?"),
              s(:regopt, :m)),
            s(:lvar, :empty))),
        s(:send,
          s(:lvar, :comment), :sub,
          s(:regexp,
            s(:str, "^--\\n.*"),
            s(:regopt, :m)),
          s(:lvar, :empty))))))
