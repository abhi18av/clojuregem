s(:module,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Parser), :RubyTools),
  s(:begin,
    s(:send, nil, :include,
      s(:const,
        s(:const, nil, :RDoc), :RubyToken)),
    s(:def, :add_token_listener,
      s(:args,
        s(:arg, :obj)),
      s(:begin,
        s(:or_asgn,
          s(:ivasgn, :@token_listeners),
          s(:array)),
        s(:send,
          s(:ivar, :@token_listeners), :<<,
          s(:lvar, :obj)))),
    s(:def, :get_tk,
      s(:args),
      s(:begin,
        s(:lvasgn, :tk,
          s(:nil)),
        s(:if,
          s(:send,
            s(:ivar, :@tokens), :empty?),
          s(:begin,
            s(:lvasgn, :tk,
              s(:send,
                s(:ivar, :@scanner), :token)),
            s(:send,
              s(:ivar, :@read), :push,
              s(:send,
                s(:ivar, :@scanner), :get_readed)),
            s(:if,
              s(:gvar, :$TOKEN_DEBUG),
              s(:send, nil, :puts,
                s(:dstr,
                  s(:str, "get_tk1 => "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :tk), :inspect)))), nil)),
          s(:begin,
            s(:send,
              s(:ivar, :@read), :push,
              s(:send,
                s(:ivar, :@unget_read), :shift)),
            s(:lvasgn, :tk,
              s(:send,
                s(:ivar, :@tokens), :shift)),
            s(:if,
              s(:gvar, :$TOKEN_DEBUG),
              s(:send, nil, :puts,
                s(:dstr,
                  s(:str, "get_tk2 => "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :tk), :inspect)))), nil))),
        s(:if,
          s(:send,
            s(:const, nil, :TkEND_OF_SCRIPT), :===,
            s(:lvar, :tk)),
          s(:lvasgn, :tk,
            s(:nil)), nil),
        s(:if,
          s(:send,
            s(:const, nil, :TkSYMBEG), :===,
            s(:lvar, :tk)),
          s(:begin,
            s(:send, nil, :set_token_position,
              s(:send,
                s(:lvar, :tk), :line_no),
              s(:send,
                s(:lvar, :tk), :char_no)),
            s(:case,
              s(:lvasgn, :tk1,
                s(:send, nil, :get_tk)),
              s(:when,
                s(:const, nil, :TkId),
                s(:const, nil, :TkOp),
                s(:const, nil, :TkSTRING),
                s(:const, nil, :TkDSTRING),
                s(:const, nil, :TkSTAR),
                s(:const, nil, :TkAMPER),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :tk1), :respond_to?,
                      s(:sym, :name)),
                    s(:lvasgn, :tk,
                      s(:send,
                        s(:send, nil, :Token,
                          s(:const, nil, :TkSYMBOL)), :set_text,
                        s(:send,
                          s(:str, ":"), :+,
                          s(:send,
                            s(:lvar, :tk1), :name)))),
                    s(:lvasgn, :tk,
                      s(:send,
                        s(:send, nil, :Token,
                          s(:const, nil, :TkSYMBOL)), :set_text,
                        s(:send,
                          s(:str, ":"), :+,
                          s(:send,
                            s(:lvar, :tk1), :text))))),
                  s(:if,
                    s(:ivar, :@token_listeners),
                    s(:block,
                      s(:send,
                        s(:ivar, :@token_listeners), :each),
                      s(:args,
                        s(:arg, :obj)),
                      s(:send,
                        s(:lvar, :obj), :pop_token)), nil))),
              s(:lvasgn, :tk,
                s(:lvar, :tk1)))), nil),
        s(:if,
          s(:ivar, :@token_listeners),
          s(:block,
            s(:send,
              s(:ivar, :@token_listeners), :each),
            s(:args,
              s(:arg, :obj)),
            s(:send,
              s(:lvar, :obj), :add_token,
              s(:lvar, :tk))), nil),
        s(:lvar, :tk))),
    s(:def, :get_tk_until,
      s(:args,
        s(:restarg, :tokens)),
      s(:begin,
        s(:lvasgn, :read,
          s(:array)),
        s(:block,
          s(:send, nil, :loop),
          s(:args),
          s(:begin,
            s(:lvasgn, :tk,
              s(:send, nil, :get_tk)),
            s(:case,
              s(:lvar, :tk),
              s(:when,
                s(:splat,
                  s(:lvar, :tokens)),
                s(:begin,
                  s(:send, nil, :unget_tk,
                    s(:lvar, :tk)),
                  s(:break))), nil),
            s(:send,
              s(:lvar, :read), :<<,
              s(:lvar, :tk)))),
        s(:lvar, :read))),
    s(:def, :get_tkread,
      s(:args),
      s(:begin,
        s(:lvasgn, :read,
          s(:send,
            s(:ivar, :@read), :join,
            s(:str, ""))),
        s(:ivasgn, :@read,
          s(:array)),
        s(:lvar, :read))),
    s(:def, :peek_read,
      s(:args),
      s(:send,
        s(:ivar, :@read), :join,
        s(:str, ""))),
    s(:def, :peek_tk,
      s(:args),
      s(:begin,
        s(:send, nil, :unget_tk,
          s(:lvasgn, :tk,
            s(:send, nil, :get_tk))),
        s(:lvar, :tk))),
    s(:def, :remove_token_listener,
      s(:args,
        s(:arg, :obj)),
      s(:send,
        s(:ivar, :@token_listeners), :delete,
        s(:lvar, :obj))),
    s(:def, :reset,
      s(:args),
      s(:begin,
        s(:ivasgn, :@read,
          s(:array)),
        s(:ivasgn, :@tokens,
          s(:array)),
        s(:ivasgn, :@unget_read,
          s(:array)),
        s(:ivasgn, :@nest,
          s(:int, 0)))),
    s(:def, :skip_tkspace,
      s(:args,
        s(:optarg, :skip_nl,
          s(:true))),
      s(:begin,
        s(:lvasgn, :tokens,
          s(:array)),
        s(:while,
          s(:or,
            s(:send,
              s(:const, nil, :TkSPACE), :===,
              s(:begin,
                s(:lvasgn, :tk,
                  s(:send, nil, :get_tk)))),
            s(:begin,
              s(:and,
                s(:lvar, :skip_nl),
                s(:send,
                  s(:const, nil, :TkNL), :===,
                  s(:lvar, :tk))))),
          s(:send,
            s(:lvar, :tokens), :push,
            s(:lvar, :tk))),
        s(:send, nil, :unget_tk,
          s(:lvar, :tk)),
        s(:lvar, :tokens))),
    s(:def, :token_listener,
      s(:args,
        s(:arg, :obj)),
      s(:ensure,
        s(:begin,
          s(:send, nil, :add_token_listener,
            s(:lvar, :obj)),
          s(:yield)),
        s(:send, nil, :remove_token_listener,
          s(:lvar, :obj)))),
    s(:def, :unget_tk,
      s(:args,
        s(:arg, :tk)),
      s(:begin,
        s(:send,
          s(:ivar, :@tokens), :unshift,
          s(:lvar, :tk)),
        s(:send,
          s(:ivar, :@unget_read), :unshift,
          s(:send,
            s(:ivar, :@read), :pop)),
        s(:if,
          s(:ivar, :@token_listeners),
          s(:block,
            s(:send,
              s(:ivar, :@token_listeners), :each),
            s(:args,
              s(:arg, :obj)),
            s(:send,
              s(:lvar, :obj), :pop_token)), nil),
        s(:nil)))))
