s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :Document), nil,
  s(:begin,
    s(:send, nil, :include,
      s(:const, nil, :Enumerable)),
    s(:send, nil, :attr_reader,
      s(:sym, :file)),
    s(:send, nil, :attr_accessor,
      s(:sym, :omit_headings_below)),
    s(:send, nil, :attr_reader,
      s(:sym, :parts)),
    s(:def, :initialize,
      s(:args,
        s(:restarg, :parts)),
      s(:begin,
        s(:ivasgn, :@parts,
          s(:array)),
        s(:send,
          s(:ivar, :@parts), :concat,
          s(:lvar, :parts)),
        s(:ivasgn, :@file,
          s(:nil)),
        s(:ivasgn, :@omit_headings_from_table_of_contents_below,
          s(:nil)))),
    s(:def, :<<,
      s(:args,
        s(:arg, :part)),
      s(:case,
        s(:lvar, :part),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Document),
          s(:if,
            s(:send,
              s(:lvar, :part), :empty?), nil,
            s(:begin,
              s(:send,
                s(:send, nil, :parts), :concat,
                s(:send,
                  s(:lvar, :part), :parts)),
              s(:send,
                s(:send, nil, :parts), :<<,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :RDoc), :Markup), :BlankLine), :new))))),
        s(:when,
          s(:const, nil, :String),
          s(:if,
            s(:send,
              s(:lvar, :part), :empty?), nil,
            s(:send, nil, :raise,
              s(:const, nil, :ArgumentError),
              s(:str, "expected RDoc::Markup::Document and friends, got String")))),
        s(:send,
          s(:send, nil, :parts), :<<,
          s(:lvar, :part)))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:and,
          s(:send,
            s(:send,
              s(:self), :class), :==,
            s(:send,
              s(:lvar, :other), :class)),
          s(:send,
            s(:ivar, :@file), :==,
            s(:send,
              s(:lvar, :other), :file))),
        s(:send,
          s(:ivar, :@parts), :==,
          s(:send,
            s(:lvar, :other), :parts)))),
    s(:def, :accept,
      s(:args,
        s(:arg, :visitor)),
      s(:begin,
        s(:send,
          s(:lvar, :visitor), :start_accepting),
        s(:send,
          s(:lvar, :visitor), :accept_document,
          s(:self)),
        s(:send,
          s(:lvar, :visitor), :end_accepting))),
    s(:def, :concat,
      s(:args,
        s(:arg, :parts)),
      s(:send,
        s(:send,
          s(:self), :parts), :concat,
        s(:lvar, :parts))),
    s(:def, :each,
      s(:args,
        s(:blockarg, :block)),
      s(:send,
        s(:ivar, :@parts), :each,
        s(:block_pass,
          s(:lvar, :block)))),
    s(:def, :empty?,
      s(:args),
      s(:or,
        s(:send,
          s(:ivar, :@parts), :empty?),
        s(:begin,
          s(:and,
            s(:and,
              s(:send,
                s(:send,
                  s(:ivar, :@parts), :length), :==,
                s(:int, 1)),
              s(:send, nil, :merged?)),
            s(:send,
              s(:send,
                s(:ivar, :@parts), :first), :empty?))))),
    s(:def, :file=,
      s(:args,
        s(:arg, :location)),
      s(:ivasgn, :@file,
        s(:case,
          s(:lvar, :location),
          s(:when,
            s(:const,
              s(:const, nil, :RDoc), :TopLevel),
            s(:send,
              s(:lvar, :location), :relative_name)),
          s(:lvar, :location)))),
    s(:def, :merge,
      s(:args,
        s(:arg, :other)),
      s(:begin,
        s(:if,
          s(:send, nil, :empty?),
          s(:begin,
            s(:ivasgn, :@parts,
              s(:send,
                s(:lvar, :other), :parts)),
            s(:return,
              s(:self))), nil),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :other), :parts), :each),
          s(:args,
            s(:arg, :other_part)),
          s(:begin,
            s(:block,
              s(:send,
                s(:send,
                  s(:self), :parts), :delete_if),
              s(:args,
                s(:arg, :self_part)),
              s(:and,
                s(:send,
                  s(:lvar, :self_part), :file),
                s(:send,
                  s(:send,
                    s(:lvar, :self_part), :file), :==,
                  s(:send,
                    s(:lvar, :other_part), :file)))),
            s(:send,
              s(:send,
                s(:self), :parts), :<<,
              s(:lvar, :other_part)))),
        s(:self))),
    s(:def, :merged?,
      s(:args),
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :RDoc), :Markup), :Document), :===,
        s(:send,
          s(:ivar, :@parts), :first))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:begin,
        s(:lvasgn, :start,
          s(:if,
            s(:ivar, :@file),
            s(:dstr,
              s(:str, "[doc ("),
              s(:begin,
                s(:ivar, :@file)),
              s(:str, "): ")),
            s(:str, "[doc: "))),
        s(:block,
          s(:send,
            s(:lvar, :q), :group,
            s(:int, 2),
            s(:lvar, :start),
            s(:str, "]")),
          s(:args),
          s(:block,
            s(:send,
              s(:lvar, :q), :seplist,
              s(:ivar, :@parts)),
            s(:args,
              s(:arg, :part)),
            s(:send,
              s(:lvar, :q), :pp,
              s(:lvar, :part)))))),
    s(:def, :push,
      s(:args,
        s(:restarg, :parts)),
      s(:send,
        s(:send,
          s(:self), :parts), :concat,
        s(:lvar, :parts))),
    s(:def, :table_of_contents,
      s(:args),
      s(:send, nil, :accept,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :ToTableOfContents), :to_toc)))))
