s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :AttributeManager), nil,
  s(:begin,
    s(:casgn, nil, :NULL,
      s(:send,
        s(:str, "\u0000"), :freeze)),
    s(:casgn, nil, :A_PROTECT,
      s(:int, 4)),
    s(:casgn, nil, :PROTECT_ATTR,
      s(:send,
        s(:const, nil, :A_PROTECT), :chr)),
    s(:send, nil, :attr_reader,
      s(:sym, :attributes)),
    s(:send, nil, :attr_reader,
      s(:sym, :matching_word_pairs)),
    s(:send, nil, :attr_reader,
      s(:sym, :word_pair_map)),
    s(:send, nil, :attr_reader,
      s(:sym, :html_tags)),
    s(:send, nil, :attr_reader,
      s(:sym, :protectable)),
    s(:send, nil, :attr_reader,
      s(:sym, :special)),
    s(:def, :initialize,
      s(:args),
      s(:begin,
        s(:ivasgn, :@html_tags,
          s(:hash)),
        s(:ivasgn, :@matching_word_pairs,
          s(:hash)),
        s(:ivasgn, :@protectable,
          s(:array,
            s(:str, "<"))),
        s(:ivasgn, :@special,
          s(:array)),
        s(:ivasgn, :@word_pair_map,
          s(:hash)),
        s(:ivasgn, :@attributes,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :Attributes), :new)),
        s(:send, nil, :add_word_pair,
          s(:str, "*"),
          s(:str, "*"),
          s(:sym, :BOLD)),
        s(:send, nil, :add_word_pair,
          s(:str, "_"),
          s(:str, "_"),
          s(:sym, :EM)),
        s(:send, nil, :add_word_pair,
          s(:str, "+"),
          s(:str, "+"),
          s(:sym, :TT)),
        s(:send, nil, :add_html,
          s(:str, "em"),
          s(:sym, :EM)),
        s(:send, nil, :add_html,
          s(:str, "i"),
          s(:sym, :EM)),
        s(:send, nil, :add_html,
          s(:str, "b"),
          s(:sym, :BOLD)),
        s(:send, nil, :add_html,
          s(:str, "tt"),
          s(:sym, :TT)),
        s(:send, nil, :add_html,
          s(:str, "code"),
          s(:sym, :TT)))),
    s(:def, :attribute,
      s(:args,
        s(:arg, :turn_on),
        s(:arg, :turn_off)),
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :RDoc), :Markup), :AttrChanger), :new,
        s(:lvar, :turn_on),
        s(:lvar, :turn_off))),
    s(:def, :change_attribute,
      s(:args,
        s(:arg, :current),
        s(:arg, :new)),
      s(:begin,
        s(:lvasgn, :diff,
          s(:send,
            s(:lvar, :current), :^,
            s(:lvar, :new))),
        s(:send, nil, :attribute,
          s(:send,
            s(:lvar, :new), :&,
            s(:lvar, :diff)),
          s(:send,
            s(:lvar, :current), :&,
            s(:lvar, :diff))))),
    s(:def, :changed_attribute_by_name,
      s(:args,
        s(:arg, :current_set),
        s(:arg, :new_set)),
      s(:begin,
        s(:lvasgn, :current,
          s(:lvasgn, :new,
            s(:int, 0))),
        s(:block,
          s(:send,
            s(:lvar, :current_set), :each),
          s(:args,
            s(:arg, :name)),
          s(:op_asgn,
            s(:lvasgn, :current), :|,
            s(:send,
              s(:ivar, :@attributes), :bitmap_for,
              s(:lvar, :name)))),
        s(:block,
          s(:send,
            s(:lvar, :new_set), :each),
          s(:args,
            s(:arg, :name)),
          s(:op_asgn,
            s(:lvasgn, :new), :|,
            s(:send,
              s(:ivar, :@attributes), :bitmap_for,
              s(:lvar, :name)))),
        s(:send, nil, :change_attribute,
          s(:lvar, :current),
          s(:lvar, :new)))),
    s(:def, :copy_string,
      s(:args,
        s(:arg, :start_pos),
        s(:arg, :end_pos)),
      s(:begin,
        s(:lvasgn, :res,
          s(:send,
            s(:ivar, :@str), :[],
            s(:erange,
              s(:lvar, :start_pos),
              s(:lvar, :end_pos)))),
        s(:send,
          s(:lvar, :res), :gsub!,
          s(:regexp,
            s(:str, "\\000"),
            s(:regopt)),
          s(:str, "")),
        s(:lvar, :res))),
    s(:def, :convert_attrs,
      s(:args,
        s(:arg, :str),
        s(:arg, :attrs)),
      s(:begin,
        s(:lvasgn, :tags,
          s(:send,
            s(:send,
              s(:ivar, :@matching_word_pairs), :keys), :join,
            s(:str, ""))),
        s(:lvasgn, :re,
          s(:regexp,
            s(:str, "(^|\\W)(["),
            s(:begin,
              s(:lvar, :tags)),
            s(:str, "])([#\\\\]?[\\w:./-]+?\\S?)\\2(\\W|$)"),
            s(:regopt))),
        s(:while,
          s(:block,
            s(:send,
              s(:lvar, :str), :gsub!,
              s(:lvar, :re)),
            s(:args),
            s(:begin,
              s(:lvasgn, :attr,
                s(:send,
                  s(:ivar, :@matching_word_pairs), :[],
                  s(:nth_ref, 2))),
              s(:send,
                s(:lvar, :attrs), :set_attrs,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:back_ref, :$`), :length), :+,
                    s(:send,
                      s(:nth_ref, 1), :length)), :+,
                  s(:send,
                    s(:nth_ref, 2), :length)),
                s(:send,
                  s(:nth_ref, 3), :length),
                s(:lvar, :attr)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:nth_ref, 1), :+,
                      s(:send,
                        s(:const, nil, :NULL), :*,
                        s(:send,
                          s(:nth_ref, 2), :length))), :+,
                    s(:nth_ref, 3)), :+,
                  s(:send,
                    s(:const, nil, :NULL), :*,
                    s(:send,
                      s(:nth_ref, 2), :length))), :+,
                s(:nth_ref, 4)))),
          s(:int, 1)),
        s(:if,
          s(:send,
            s(:ivar, :@word_pair_map), :empty?), nil,
          s(:block,
            s(:send,
              s(:ivar, :@word_pair_map), :each),
            s(:args,
              s(:arg, :regexp),
              s(:arg, :attr)),
            s(:block,
              s(:send,
                s(:lvar, :str), :gsub!,
                s(:lvar, :regexp)),
              s(:args),
              s(:begin,
                s(:send,
                  s(:lvar, :attrs), :set_attrs,
                  s(:send,
                    s(:send,
                      s(:back_ref, :$`), :length), :+,
                    s(:send,
                      s(:nth_ref, 1), :length)),
                  s(:send,
                    s(:nth_ref, 2), :length),
                  s(:lvar, :attr)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:const, nil, :NULL), :*,
                      s(:send,
                        s(:nth_ref, 1), :length)), :+,
                    s(:nth_ref, 2)), :+,
                  s(:send,
                    s(:const, nil, :NULL), :*,
                    s(:send,
                      s(:nth_ref, 3), :length))))))))),
    s(:def, :convert_html,
      s(:args,
        s(:arg, :str),
        s(:arg, :attrs)),
      s(:begin,
        s(:lvasgn, :tags,
          s(:send,
            s(:send,
              s(:ivar, :@html_tags), :keys), :join,
            s(:str, "|"))),
        s(:while,
          s(:block,
            s(:send,
              s(:lvar, :str), :gsub!,
              s(:regexp,
                s(:str, "<("),
                s(:begin,
                  s(:lvar, :tags)),
                s(:str, ")>(.*?)</\\1>"),
                s(:regopt, :i))),
            s(:args),
            s(:begin,
              s(:lvasgn, :attr,
                s(:send,
                  s(:ivar, :@html_tags), :[],
                  s(:send,
                    s(:nth_ref, 1), :downcase))),
              s(:lvasgn, :html_length,
                s(:send,
                  s(:send,
                    s(:nth_ref, 1), :length), :+,
                  s(:int, 2))),
              s(:lvasgn, :seq,
                s(:send,
                  s(:const, nil, :NULL), :*,
                  s(:lvar, :html_length))),
              s(:send,
                s(:lvar, :attrs), :set_attrs,
                s(:send,
                  s(:send,
                    s(:back_ref, :$`), :length), :+,
                  s(:lvar, :html_length)),
                s(:send,
                  s(:nth_ref, 2), :length),
                s(:lvar, :attr)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :seq), :+,
                    s(:nth_ref, 2)), :+,
                  s(:lvar, :seq)), :+,
                s(:const, nil, :NULL)))),
          s(:int, 1)))),
    s(:def, :convert_specials,
      s(:args,
        s(:arg, :str),
        s(:arg, :attrs)),
      s(:block,
        s(:send,
          s(:ivar, :@special), :each),
        s(:args,
          s(:arg, :regexp),
          s(:arg, :attribute)),
        s(:block,
          s(:send,
            s(:lvar, :str), :scan,
            s(:lvar, :regexp)),
          s(:args),
          s(:begin,
            s(:lvasgn, :capture,
              s(:if,
                s(:send,
                  s(:send,
                    s(:gvar, :$~), :size), :==,
                  s(:int, 1)),
                s(:int, 0),
                s(:int, 1))),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :s),
                s(:lvasgn, :e)),
              s(:send,
                s(:gvar, :$~), :offset,
                s(:lvar, :capture))),
            s(:send,
              s(:lvar, :attrs), :set_attrs,
              s(:lvar, :s),
              s(:send,
                s(:lvar, :e), :-,
                s(:lvar, :s)),
              s(:send,
                s(:lvar, :attribute), :|,
                s(:send,
                  s(:ivar, :@attributes), :special))))))),
    s(:def, :mask_protected_sequences,
      s(:args),
      s(:begin,
        s(:send,
          s(:ivar, :@str), :gsub!,
          s(:regexp,
            s(:str, "__([a-z]+)__"),
            s(:regopt, :i)),
          s(:dstr,
            s(:str, "_"),
            s(:begin,
              s(:const, nil, :PROTECT_ATTR)),
            s(:str, "_"),
            s(:begin,
              s(:const, nil, :PROTECT_ATTR)),
            s(:str, "\\1_"),
            s(:begin,
              s(:const, nil, :PROTECT_ATTR)),
            s(:str, "_"),
            s(:begin,
              s(:const, nil, :PROTECT_ATTR)))),
        s(:send,
          s(:ivar, :@str), :gsub!,
          s(:regexp,
            s(:str, "(\\A|[^\\\\])\\\\(["),
            s(:begin,
              s(:send,
                s(:const, nil, :Regexp), :escape,
                s(:send,
                  s(:ivar, :@protectable), :join))),
            s(:str, "])"),
            s(:regopt, :m)),
          s(:dstr,
            s(:str, "\\1\\2"),
            s(:begin,
              s(:const, nil, :PROTECT_ATTR)))),
        s(:send,
          s(:ivar, :@str), :gsub!,
          s(:regexp,
            s(:str, "\\\\(\\\\["),
            s(:begin,
              s(:send,
                s(:const, nil, :Regexp), :escape,
                s(:send,
                  s(:ivar, :@protectable), :join))),
            s(:str, "])"),
            s(:regopt, :m)),
          s(:str, "\\1")))),
    s(:def, :unmask_protected_sequences,
      s(:args),
      s(:send,
        s(:ivar, :@str), :gsub!,
        s(:regexp,
          s(:str, "(.)"),
          s(:begin,
            s(:const, nil, :PROTECT_ATTR)),
          s(:regopt)),
        s(:str, "\\1\u0000"))),
    s(:def, :add_word_pair,
      s(:args,
        s(:arg, :start),
        s(:arg, :stop),
        s(:arg, :name)),
      s(:begin,
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :start), :[],
              s(:int, 0),
              s(:int, 1)), :==,
            s(:str, "<")),
          s(:send, nil, :raise,
            s(:const, nil, :ArgumentError),
            s(:str, "Word flags may not start with '<'")), nil),
        s(:lvasgn, :bitmap,
          s(:send,
            s(:ivar, :@attributes), :bitmap_for,
            s(:lvar, :name))),
        s(:if,
          s(:send,
            s(:lvar, :start), :==,
            s(:lvar, :stop)),
          s(:send,
            s(:ivar, :@matching_word_pairs), :[]=,
            s(:lvar, :start),
            s(:lvar, :bitmap)),
          s(:begin,
            s(:lvasgn, :pattern,
              s(:regexp,
                s(:str, "("),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Regexp), :escape,
                    s(:lvar, :start))),
                s(:str, ")(\\S+)("),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Regexp), :escape,
                    s(:lvar, :stop))),
                s(:str, ")"),
                s(:regopt))),
            s(:send,
              s(:ivar, :@word_pair_map), :[]=,
              s(:lvar, :pattern),
              s(:lvar, :bitmap)))),
        s(:send,
          s(:ivar, :@protectable), :<<,
          s(:send,
            s(:lvar, :start), :[],
            s(:int, 0),
            s(:int, 1))),
        s(:send,
          s(:ivar, :@protectable), :uniq!))),
    s(:def, :add_html,
      s(:args,
        s(:arg, :tag),
        s(:arg, :name)),
      s(:send,
        s(:ivar, :@html_tags), :[]=,
        s(:send,
          s(:lvar, :tag), :downcase),
        s(:send,
          s(:ivar, :@attributes), :bitmap_for,
          s(:lvar, :name)))),
    s(:def, :add_special,
      s(:args,
        s(:arg, :pattern),
        s(:arg, :name)),
      s(:send,
        s(:ivar, :@special), :<<,
        s(:array,
          s(:lvar, :pattern),
          s(:send,
            s(:ivar, :@attributes), :bitmap_for,
            s(:lvar, :name))))),
    s(:def, :flow,
      s(:args,
        s(:arg, :str)),
      s(:begin,
        s(:ivasgn, :@str,
          s(:lvar, :str)),
        s(:send, nil, :mask_protected_sequences),
        s(:ivasgn, :@attrs,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :AttrSpan), :new,
            s(:send,
              s(:ivar, :@str), :length))),
        s(:send, nil, :convert_attrs,
          s(:ivar, :@str),
          s(:ivar, :@attrs)),
        s(:send, nil, :convert_html,
          s(:ivar, :@str),
          s(:ivar, :@attrs)),
        s(:send, nil, :convert_specials,
          s(:ivar, :@str),
          s(:ivar, :@attrs)),
        s(:send, nil, :unmask_protected_sequences),
        s(:send, nil, :split_into_flow))),
    s(:def, :display_attributes,
      s(:args),
      s(:begin,
        s(:send, nil, :puts),
        s(:send, nil, :puts,
          s(:send,
            s(:ivar, :@str), :tr,
            s(:const, nil, :NULL),
            s(:str, "!"))),
        s(:lvasgn, :bit,
          s(:int, 1)),
        s(:block,
          s(:send,
            s(:int, 16), :times),
          s(:args,
            s(:arg, :bno)),
          s(:begin,
            s(:lvasgn, :line,
              s(:str, "")),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@str), :length), :times),
              s(:args,
                s(:arg, :i)),
              s(:if,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@attrs), :[],
                        s(:lvar, :i)), :&,
                      s(:lvar, :bit))), :==,
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :line), :<<,
                  s(:str, " ")),
                s(:if,
                  s(:send,
                    s(:lvar, :bno), :zero?),
                  s(:send,
                    s(:lvar, :line), :<<,
                    s(:str, "S")),
                  s(:send,
                    s(:lvar, :line), :<<,
                    s(:begin,
                      s(:send,
                        s(:str, "%d"), :%,
                        s(:begin,
                          s(:send,
                            s(:lvar, :bno), :+,
                            s(:int, 1))))))))),
            s(:if,
              s(:send,
                s(:lvar, :line), :=~,
                s(:regexp,
                  s(:str, "^ *$"),
                  s(:regopt))), nil,
              s(:send, nil, :puts,
                s(:lvar, :line))),
            s(:op_asgn,
              s(:lvasgn, :bit), :<<,
              s(:int, 1)))))),
    s(:def, :split_into_flow,
      s(:args),
      s(:begin,
        s(:lvasgn, :res,
          s(:array)),
        s(:lvasgn, :current_attr,
          s(:int, 0)),
        s(:lvasgn, :str_len,
          s(:send,
            s(:ivar, :@str), :length)),
        s(:lvasgn, :i,
          s(:int, 0)),
        s(:while,
          s(:and,
            s(:send,
              s(:lvar, :i), :<,
              s(:lvar, :str_len)),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@str), :[],
                  s(:lvar, :i)), :chr), :==,
              s(:str, "\u0000"))),
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1))),
        s(:lvasgn, :start_pos,
          s(:lvar, :i)),
        s(:while,
          s(:send,
            s(:lvar, :i), :<,
            s(:lvar, :str_len)),
          s(:begin,
            s(:lvasgn, :new_attr,
              s(:send,
                s(:ivar, :@attrs), :[],
                s(:lvar, :i))),
            s(:if,
              s(:send,
                s(:lvar, :new_attr), :!=,
                s(:lvar, :current_attr)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :i), :>,
                    s(:lvar, :start_pos)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :res), :<<,
                      s(:send, nil, :copy_string,
                        s(:lvar, :start_pos),
                        s(:lvar, :i))),
                    s(:lvasgn, :start_pos,
                      s(:lvar, :i))), nil),
                s(:send,
                  s(:lvar, :res), :<<,
                  s(:send, nil, :change_attribute,
                    s(:lvar, :current_attr),
                    s(:lvar, :new_attr))),
                s(:lvasgn, :current_attr,
                  s(:lvar, :new_attr)),
                s(:if,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :current_attr), :&,
                        s(:send,
                          s(:ivar, :@attributes), :special))), :!=,
                    s(:int, 0)),
                  s(:begin,
                    s(:while,
                      s(:and,
                        s(:send,
                          s(:lvar, :i), :<,
                          s(:lvar, :str_len)),
                        s(:send,
                          s(:begin,
                            s(:send,
                              s(:send,
                                s(:ivar, :@attrs), :[],
                                s(:lvar, :i)), :&,
                              s(:send,
                                s(:ivar, :@attributes), :special))), :!=,
                          s(:int, 0))),
                      s(:op_asgn,
                        s(:lvasgn, :i), :+,
                        s(:int, 1))),
                    s(:send,
                      s(:lvar, :res), :<<,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :RDoc), :Markup), :Special), :new,
                        s(:lvar, :current_attr),
                        s(:send, nil, :copy_string,
                          s(:lvar, :start_pos),
                          s(:lvar, :i)))),
                    s(:lvasgn, :start_pos,
                      s(:lvar, :i)),
                    s(:next)), nil)), nil),
            s(:while_post,
              s(:and,
                s(:send,
                  s(:lvar, :i), :<,
                  s(:lvar, :str_len)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@str), :[],
                      s(:lvar, :i)), :chr), :==,
                  s(:str, "\u0000"))),
              s(:kwbegin,
                s(:op_asgn,
                  s(:lvasgn, :i), :+,
                  s(:int, 1)))))),
        s(:if,
          s(:send,
            s(:lvar, :start_pos), :<,
            s(:lvar, :str_len)),
          s(:send,
            s(:lvar, :res), :<<,
            s(:send, nil, :copy_string,
              s(:lvar, :start_pos),
              s(:lvar, :str_len))), nil),
        s(:if,
          s(:send,
            s(:lvar, :current_attr), :!=,
            s(:int, 0)),
          s(:send,
            s(:lvar, :res), :<<,
            s(:send, nil, :change_attribute,
              s(:lvar, :current_attr),
              s(:int, 0))), nil),
        s(:lvar, :res)))))
