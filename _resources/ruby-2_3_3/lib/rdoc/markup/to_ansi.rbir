s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToAnsi),
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToRdoc),
  s(:begin,
    s(:def, :initialize,
      s(:args,
        s(:optarg, :markup,
          s(:nil))),
      s(:begin,
        s(:zsuper),
        s(:send,
          s(:ivar, :@headings), :clear),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 1),
          s(:array,
            s(:str, "\e[1;32m"),
            s(:str, "\e[m"))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 2),
          s(:array,
            s(:str, "\e[4;32m"),
            s(:str, "\e[m"))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 3),
          s(:array,
            s(:str, "\e[32m"),
            s(:str, "\e[m"))))),
    s(:def, :init_tags,
      s(:args),
      s(:begin,
        s(:send, nil, :add_tag,
          s(:sym, :BOLD),
          s(:str, "\e[1m"),
          s(:str, "\e[m")),
        s(:send, nil, :add_tag,
          s(:sym, :TT),
          s(:str, "\e[7m"),
          s(:str, "\e[m")),
        s(:send, nil, :add_tag,
          s(:sym, :EM),
          s(:str, "\e[4m"),
          s(:str, "\e[m")))),
    s(:def, :accept_list_item_end,
      s(:args,
        s(:arg, :list_item)),
      s(:begin,
        s(:lvasgn, :width,
          s(:case,
            s(:send,
              s(:ivar, :@list_type), :last),
            s(:when,
              s(:sym, :BULLET),
              s(:int, 2)),
            s(:when,
              s(:sym, :NOTE),
              s(:sym, :LABEL),
              s(:begin,
                s(:if,
                  s(:ivar, :@prefix),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@res), :<<,
                      s(:send,
                        s(:ivar, :@prefix), :strip)),
                    s(:ivasgn, :@prefix,
                      s(:nil))), nil),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send, nil, :res), :length), :==,
                    s(:int, 1)), nil,
                  s(:send,
                    s(:ivar, :@res), :<<,
                    s(:str, "\n"))),
                s(:int, 2))),
            s(:begin,
              s(:lvasgn, :bullet,
                s(:send,
                  s(:send,
                    s(:ivar, :@list_index), :last), :to_s)),
              s(:send,
                s(:ivar, :@list_index), :[]=,
                s(:int, -1),
                s(:send,
                  s(:send,
                    s(:ivar, :@list_index), :last), :succ)),
              s(:send,
                s(:send,
                  s(:lvar, :bullet), :length), :+,
                s(:int, 2))))),
        s(:op_asgn,
          s(:ivasgn, :@indent), :-,
          s(:lvar, :width)))),
    s(:def, :accept_list_item_start,
      s(:args,
        s(:arg, :list_item)),
      s(:begin,
        s(:lvasgn, :bullet,
          s(:case,
            s(:send,
              s(:ivar, :@list_type), :last),
            s(:when,
              s(:sym, :BULLET),
              s(:str, "*")),
            s(:when,
              s(:sym, :NOTE),
              s(:sym, :LABEL),
              s(:begin,
                s(:lvasgn, :labels,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:send, nil, :Array,
                          s(:send,
                            s(:lvar, :list_item), :label)), :map),
                      s(:args,
                        s(:arg, :label)),
                      s(:send,
                        s(:send, nil, :attributes,
                          s(:lvar, :label)), :strip)), :join,
                    s(:str, "\n"))),
                s(:if,
                  s(:send,
                    s(:lvar, :labels), :empty?), nil,
                  s(:send,
                    s(:lvar, :labels), :<<,
                    s(:str, ":\n"))),
                s(:lvar, :labels))),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@list_index), :last), :to_s), :+,
              s(:str, ".")))),
        s(:case,
          s(:send,
            s(:ivar, :@list_type), :last),
          s(:when,
            s(:sym, :NOTE),
            s(:sym, :LABEL),
            s(:begin,
              s(:op_asgn,
                s(:ivasgn, :@indent), :+,
                s(:int, 2)),
              s(:ivasgn, :@prefix,
                s(:send,
                  s(:lvar, :bullet), :+,
                  s(:begin,
                    s(:send,
                      s(:str, " "), :*,
                      s(:ivar, :@indent))))))),
          s(:begin,
            s(:ivasgn, :@prefix,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:str, " "), :*,
                    s(:ivar, :@indent))), :+,
                s(:send,
                  s(:lvar, :bullet), :ljust,
                  s(:send,
                    s(:send,
                      s(:lvar, :bullet), :length), :+,
                    s(:int, 1))))),
            s(:lvasgn, :width,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :bullet), :gsub,
                    s(:regexp,
                      s(:str, "\\e\\[[\\d;]*m"),
                      s(:regopt)),
                    s(:str, "")), :length), :+,
                s(:int, 1))),
            s(:op_asgn,
              s(:ivasgn, :@indent), :+,
              s(:lvar, :width)))))),
    s(:def, :start_accepting,
      s(:args),
      s(:begin,
        s(:zsuper),
        s(:ivasgn, :@res,
          s(:array,
            s(:str, "\e[0m")))))))
