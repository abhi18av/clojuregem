s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref),
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToHtml),
  s(:begin,
    s(:casgn, nil, :ALL_CROSSREF_REGEXP,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :CrossReference), :ALL_CROSSREF_REGEXP)),
    s(:casgn, nil, :CLASS_REGEXP_STR,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :CrossReference), :CLASS_REGEXP_STR)),
    s(:casgn, nil, :CROSSREF_REGEXP,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :CrossReference), :CROSSREF_REGEXP)),
    s(:casgn, nil, :METHOD_REGEXP_STR,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :CrossReference), :METHOD_REGEXP_STR)),
    s(:send, nil, :attr_accessor,
      s(:sym, :context)),
    s(:send, nil, :attr_accessor,
      s(:sym, :show_hash)),
    s(:def, :initialize,
      s(:args,
        s(:arg, :options),
        s(:arg, :from_path),
        s(:arg, :context),
        s(:optarg, :markup,
          s(:nil))),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :from_path), :nil?),
          s(:send, nil, :raise,
            s(:const, nil, :ArgumentError),
            s(:str, "from_path cannot be nil")), nil),
        s(:super,
          s(:lvar, :options),
          s(:lvar, :markup)),
        s(:ivasgn, :@context,
          s(:lvar, :context)),
        s(:ivasgn, :@from_path,
          s(:lvar, :from_path)),
        s(:ivasgn, :@hyperlink_all,
          s(:send,
            s(:ivar, :@options), :hyperlink_all)),
        s(:ivasgn, :@show_hash,
          s(:send,
            s(:ivar, :@options), :show_hash)),
        s(:lvasgn, :crossref_re,
          s(:if,
            s(:ivar, :@hyperlink_all),
            s(:const, nil, :ALL_CROSSREF_REGEXP),
            s(:const, nil, :CROSSREF_REGEXP))),
        s(:send,
          s(:ivar, :@markup), :add_special,
          s(:lvar, :crossref_re),
          s(:sym, :CROSSREF)),
        s(:ivasgn, :@cross_reference,
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :CrossReference), :new,
            s(:ivar, :@context))))),
    s(:def, :cross_reference,
      s(:args,
        s(:arg, :name),
        s(:optarg, :text,
          s(:nil))),
      s(:begin,
        s(:lvasgn, :lookup,
          s(:lvar, :name)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :name), :[],
              s(:int, 0),
              s(:int, 1)), :==,
            s(:str, "#")),
          s(:if,
            s(:ivar, :@show_hash), nil,
            s(:lvasgn, :name,
              s(:send,
                s(:lvar, :name), :[],
                s(:irange,
                  s(:int, 1),
                  s(:int, -1))))), nil),
        s(:if,
          s(:send,
            s(:lvar, :name), :=~,
            s(:regexp,
              s(:str, "(.*[^#:])@"),
              s(:regopt))),
          s(:lvasgn, :name,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :CGI), :unescape,
                  s(:back_ref, :$'))),
              s(:str, " at "),
              s(:begin,
                s(:nth_ref, 1)))), nil),
        s(:if,
          s(:lvar, :text), nil,
          s(:lvasgn, :text,
            s(:lvar, :name))),
        s(:send, nil, :link,
          s(:lvar, :lookup),
          s(:lvar, :text)))),
    s(:def, :handle_special_CROSSREF,
      s(:args,
        s(:arg, :special)),
      s(:begin,
        s(:lvasgn, :name,
          s(:send,
            s(:lvar, :special), :text)),
        s(:if,
          s(:send,
            s(:lvar, :name), :=~,
            s(:regexp,
              s(:str, "@[\\w-]+\\.[\\w-]"),
              s(:regopt))),
          s(:return,
            s(:lvar, :name)), nil),
        s(:if,
          s(:ivar, :@hyperlink_all), nil,
          s(:if,
            s(:send,
              s(:lvar, :name), :=~,
              s(:regexp,
                s(:str, "\\A[a-z]*\\z"),
                s(:regopt))),
            s(:return,
              s(:lvar, :name)), nil)),
        s(:send, nil, :cross_reference,
          s(:lvar, :name)))),
    s(:def, :handle_special_HYPERLINK,
      s(:args,
        s(:arg, :special)),
      s(:begin,
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :special), :text), :=~,
            s(:regexp,
              s(:str, "\\Ardoc-ref:"),
              s(:regopt))),
          s(:return,
            s(:send, nil, :cross_reference,
              s(:back_ref, :$'))), nil),
        s(:zsuper))),
    s(:def, :handle_special_RDOCLINK,
      s(:args,
        s(:arg, :special)),
      s(:begin,
        s(:lvasgn, :url,
          s(:send,
            s(:lvar, :special), :text)),
        s(:case,
          s(:lvar, :url),
          s(:when,
            s(:regexp,
              s(:str, "\\Ardoc-ref:"),
              s(:regopt)),
            s(:send, nil, :cross_reference,
              s(:back_ref, :$'))),
          s(:zsuper)))),
    s(:def, :gen_url,
      s(:args,
        s(:arg, :url),
        s(:arg, :text)),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :url), :=~,
            s(:regexp,
              s(:str, "\\Ardoc-ref:"),
              s(:regopt))), nil,
          s(:return,
            s(:zsuper))),
        s(:send, nil, :cross_reference,
          s(:back_ref, :$'),
          s(:lvar, :text)))),
    s(:def, :link,
      s(:args,
        s(:arg, :name),
        s(:arg, :text)),
      s(:begin,
        s(:lvasgn, :original_name,
          s(:lvar, :name)),
        s(:if,
          s(:send,
            s(:lvar, :name), :=~,
            s(:regexp,
              s(:str, "(.*[^#:])@"),
              s(:regopt))),
          s(:begin,
            s(:lvasgn, :name,
              s(:nth_ref, 1)),
            s(:lvasgn, :label,
              s(:back_ref, :$'))), nil),
        s(:lvasgn, :ref,
          s(:send,
            s(:ivar, :@cross_reference), :resolve,
            s(:lvar, :name),
            s(:lvar, :text))),
        s(:if,
          s(:and,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :MethodAttr), :===,
              s(:lvar, :ref)),
            s(:send,
              s(:lvar, :text), :==,
              s(:lvar, :original_name))),
          s(:lvasgn, :text,
            s(:send,
              s(:lvar, :ref), :output_name,
              s(:ivar, :@context))), nil),
        s(:case,
          s(:lvar, :ref),
          s(:when,
            s(:const, nil, :String),
            s(:lvar, :ref)),
          s(:begin,
            s(:lvasgn, :path,
              s(:send,
                s(:lvar, :ref), :as_href,
                s(:ivar, :@from_path))),
            s(:if,
              s(:lvar, :label),
              s(:if,
                s(:send,
                  s(:lvar, :path), :=~,
                  s(:regexp,
                    s(:str, "#"),
                    s(:regopt))),
                s(:send,
                  s(:lvar, :path), :<<,
                  s(:dstr,
                    s(:str, "-label-"),
                    s(:begin,
                      s(:lvar, :label)))),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:lvar, :ref), :sections),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :ref), :sections), :any?),
                      s(:args,
                        s(:arg, :section)),
                      s(:send,
                        s(:lvar, :label), :==,
                        s(:send,
                          s(:lvar, :section), :title)))),
                  s(:send,
                    s(:lvar, :path), :<<,
                    s(:dstr,
                      s(:str, "#"),
                      s(:begin,
                        s(:lvar, :label)))),
                  s(:send,
                    s(:lvar, :path), :<<,
                    s(:dstr,
                      s(:str, "#label-"),
                      s(:begin,
                        s(:lvar, :label)))))), nil),
            s(:dstr,
              s(:str, "<a href=\""),
              s(:begin,
                s(:lvar, :path)),
              s(:str, "\">"),
              s(:begin,
                s(:lvar, :text)),
              s(:str, "</a>"))))))))
