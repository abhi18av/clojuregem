s(:begin,
  s(:send, nil, :require,
    s(:str, "minitest/unit")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Markup), :FormatterTestCase),
    s(:const,
      s(:const, nil, :RDoc), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@options,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Options), :new)),
          s(:ivasgn, :@m,
            s(:send,
              s(:ivar, :@RM), :new)),
          s(:ivasgn, :@bullet_list,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :List), :new,
              s(:sym, :BULLET),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l1"))),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l2"))))),
          s(:ivasgn, :@label_list,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :List), :new,
              s(:sym, :LABEL),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:str, "cat"),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "cats are cool"))),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:str, "dog"),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "dogs are cool too"))))),
          s(:ivasgn, :@lalpha_list,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :List), :new,
              s(:sym, :LALPHA),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l1"))),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l2"))))),
          s(:ivasgn, :@note_list,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :List), :new,
              s(:sym, :NOTE),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:str, "cat"),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "cats are cool"))),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:str, "dog"),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "dogs are cool too"))))),
          s(:ivasgn, :@number_list,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :List), :new,
              s(:sym, :NUMBER),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l1"))),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l2"))))),
          s(:ivasgn, :@ualpha_list,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :List), :new,
              s(:sym, :UALPHA),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l1"))),
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :ListItem), :new,
                s(:nil),
                s(:send,
                  s(:const,
                    s(:ivar, :@RM), :Paragraph), :new,
                  s(:str, "l2"))))))),
      s(:defs,
        s(:self), :add_visitor_tests,
        s(:args),
        s(:block,
          s(:send, nil, :class_eval),
          s(:args),
          s(:begin,
            s(:def, :test_start_accepting,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send, nil, :start_accepting))),
            s(:def, :test_end_accepting,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:send,
                    s(:ivar, :@to), :res), :<<,
                  s(:str, "hi")),
                s(:send, nil, :end_accepting))),
            s(:def, :test_accept_blank_line,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_blank_line,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :BlankLine), :new)),
                s(:send, nil, :accept_blank_line))),
            s(:def, :test_accept_block_quote,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_block_quote,
                  s(:send, nil, :block,
                    s(:send, nil, :para,
                      s(:str, "quote")))),
                s(:send, nil, :accept_block_quote))),
            s(:def, :test_accept_document,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_document,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Document), :new,
                    s(:send,
                      s(:const,
                        s(:ivar, :@RM), :Paragraph), :new,
                      s(:str, "hello")))),
                s(:send, nil, :accept_document))),
            s(:def, :test_accept_heading,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 5),
                    s(:str, "Hello"))),
                s(:send, nil, :accept_heading))),
            s(:def, :test_accept_heading_1,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 1),
                    s(:str, "Hello"))),
                s(:send, nil, :accept_heading_1))),
            s(:def, :test_accept_heading_2,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 2),
                    s(:str, "Hello"))),
                s(:send, nil, :accept_heading_2))),
            s(:def, :test_accept_heading_3,
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:str, ""), :respond_to?,
                    s(:sym, :chars)), nil,
                  s(:send, nil, :skip,
                    s(:str, "No String#chars, upgrade your ruby"))),
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 3),
                    s(:str, "Hello"))),
                s(:send, nil, :accept_heading_3))),
            s(:def, :test_accept_heading_4,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 4),
                    s(:str, "Hello"))),
                s(:send, nil, :accept_heading_4))),
            s(:def, :test_accept_heading_b,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 1),
                    s(:str, "*Hello*"))),
                s(:send, nil, :accept_heading_b))),
            s(:def, :test_accept_heading_suppressed_crossref,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_heading,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Heading), :new,
                    s(:int, 1),
                    s(:str, "\\Hello"))),
                s(:send, nil, :accept_heading_suppressed_crossref))),
            s(:def, :test_accept_paragraph,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Paragraph), :new,
                    s(:str, "hi"))),
                s(:send, nil, :accept_paragraph))),
            s(:def, :test_accept_paragraph_b,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Paragraph), :new,
                    s(:str, "reg <b>bold words</b> reg"))),
                s(:send, nil, :accept_paragraph_b))),
            s(:def, :test_accept_paragraph_br,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send, nil, :para,
                    s(:str, "one<br>two"))),
                s(:send, nil, :accept_paragraph_br))),
            s(:def, :test_accept_paragraph_break,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send, nil, :para,
                    s(:str, "hello"),
                    s(:send, nil, :hard_break),
                    s(:str, "world"))),
                s(:send, nil, :accept_paragraph_break))),
            s(:def, :test_accept_paragraph_i,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Paragraph), :new,
                    s(:str, "reg <em>italic words</em> reg"))),
                s(:send, nil, :accept_paragraph_i))),
            s(:def, :test_accept_paragraph_plus,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Paragraph), :new,
                    s(:str, "reg +teletype+ reg"))),
                s(:send, nil, :accept_paragraph_plus))),
            s(:def, :test_accept_paragraph_star,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Paragraph), :new,
                    s(:str, "reg *bold* reg"))),
                s(:send, nil, :accept_paragraph_star))),
            s(:def, :test_accept_paragraph_underscore,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_paragraph,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Paragraph), :new,
                    s(:str, "reg _italic_ reg"))),
                s(:send, nil, :accept_paragraph_underscore))),
            s(:def, :test_accept_verbatim,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_verbatim,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Verbatim), :new,
                    s(:str, "hi\n"),
                    s(:str, "  world\n"))),
                s(:send, nil, :accept_verbatim))),
            s(:def, :test_accept_raw,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_raw,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Raw), :new,
                    s(:str, "<table>"),
                    s(:str, "<tr><th>Name<th>Count"),
                    s(:str, "<tr><td>a<td>1"),
                    s(:str, "<tr><td>b<td>2"),
                    s(:str, "</table>"))),
                s(:send, nil, :accept_raw))),
            s(:def, :test_accept_rule,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_rule,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Rule), :new,
                    s(:int, 4))),
                s(:send, nil, :accept_rule))),
            s(:def, :test_accept_list_item_start_bullet,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@bullet_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@bullet_list), :items), :first)),
                s(:send, nil, :accept_list_item_start_bullet))),
            s(:def, :test_accept_list_item_start_label,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@label_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@label_list), :items), :first)),
                s(:send, nil, :accept_list_item_start_label))),
            s(:def, :test_accept_list_item_start_lalpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@lalpha_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@lalpha_list), :items), :first)),
                s(:send, nil, :accept_list_item_start_lalpha))),
            s(:def, :test_accept_list_item_start_note,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@note_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@note_list), :items), :first)),
                s(:send, nil, :accept_list_item_start_note))),
            s(:def, :test_accept_list_item_start_note_2,
              s(:args),
              s(:begin,
                s(:lvasgn, :list,
                  s(:send, nil, :list,
                    s(:sym, :NOTE),
                    s(:send, nil, :item,
                      s(:str, "<tt>teletype</tt>"),
                      s(:send, nil, :para,
                        s(:str, "teletype description"))))),
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:lvar, :list), :accept,
                  s(:ivar, :@to)),
                s(:send,
                  s(:ivar, :@to), :end_accepting),
                s(:send, nil, :accept_list_item_start_note_2))),
            s(:def, :test_accept_list_item_start_note_multi_description,
              s(:args),
              s(:begin,
                s(:lvasgn, :list,
                  s(:send, nil, :list,
                    s(:sym, :NOTE),
                    s(:send, nil, :item,
                      s(:array,
                        s(:str, "label")),
                      s(:send, nil, :para,
                        s(:str, "description one"))),
                    s(:send, nil, :item,
                      s(:nil),
                      s(:send, nil, :para,
                        s(:str, "description two"))))),
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:lvar, :list), :accept,
                  s(:ivar, :@to)),
                s(:send,
                  s(:ivar, :@to), :end_accepting),
                s(:send, nil, :accept_list_item_start_note_multi_description))),
            s(:def, :test_accept_list_item_start_note_multi_label,
              s(:args),
              s(:begin,
                s(:lvasgn, :list,
                  s(:send, nil, :list,
                    s(:sym, :NOTE),
                    s(:send, nil, :item,
                      s(:array,
                        s(:str, "one"),
                        s(:str, "two")),
                      s(:send, nil, :para,
                        s(:str, "two headers"))))),
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:lvar, :list), :accept,
                  s(:ivar, :@to)),
                s(:send,
                  s(:ivar, :@to), :end_accepting),
                s(:send, nil, :accept_list_item_start_note_multi_label))),
            s(:def, :test_accept_list_item_start_number,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@number_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@number_list), :items), :first)),
                s(:send, nil, :accept_list_item_start_number))),
            s(:def, :test_accept_list_item_start_ualpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@ualpha_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@ualpha_list), :items), :first)),
                s(:send, nil, :accept_list_item_start_ualpha))),
            s(:def, :test_accept_list_item_end_bullet,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@bullet_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@bullet_list), :items), :first)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_end,
                  s(:send,
                    s(:send,
                      s(:ivar, :@bullet_list), :items), :first)),
                s(:send, nil, :accept_list_item_end_bullet))),
            s(:def, :test_accept_list_item_end_label,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@label_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@label_list), :items), :first)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_end,
                  s(:send,
                    s(:send,
                      s(:ivar, :@label_list), :items), :first)),
                s(:send, nil, :accept_list_item_end_label))),
            s(:def, :test_accept_list_item_end_lalpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@lalpha_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@lalpha_list), :items), :first)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_end,
                  s(:send,
                    s(:send,
                      s(:ivar, :@lalpha_list), :items), :first)),
                s(:send, nil, :accept_list_item_end_lalpha))),
            s(:def, :test_accept_list_item_end_note,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@note_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@note_list), :items), :first)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_end,
                  s(:send,
                    s(:send,
                      s(:ivar, :@note_list), :items), :first)),
                s(:send, nil, :accept_list_item_end_note))),
            s(:def, :test_accept_list_item_end_number,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@number_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@number_list), :items), :first)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_end,
                  s(:send,
                    s(:send,
                      s(:ivar, :@number_list), :items), :first)),
                s(:send, nil, :accept_list_item_end_number))),
            s(:def, :test_accept_list_item_end_ualpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@ualpha_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_start,
                  s(:send,
                    s(:send,
                      s(:ivar, :@ualpha_list), :items), :first)),
                s(:send,
                  s(:ivar, :@to), :accept_list_item_end,
                  s(:send,
                    s(:send,
                      s(:ivar, :@ualpha_list), :items), :first)),
                s(:send, nil, :accept_list_item_end_ualpha))),
            s(:def, :test_accept_list_start_bullet,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@bullet_list)),
                s(:send, nil, :accept_list_start_bullet))),
            s(:def, :test_accept_list_start_label,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@label_list)),
                s(:send, nil, :accept_list_start_label))),
            s(:def, :test_accept_list_start_lalpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@lalpha_list)),
                s(:send, nil, :accept_list_start_lalpha))),
            s(:def, :test_accept_list_start_note,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@note_list)),
                s(:send, nil, :accept_list_start_note))),
            s(:def, :test_accept_list_start_number,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@number_list)),
                s(:send, nil, :accept_list_start_number))),
            s(:def, :test_accept_list_start_ualpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@ualpha_list)),
                s(:send, nil, :accept_list_start_ualpha))),
            s(:def, :test_accept_list_end_bullet,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@bullet_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_end,
                  s(:ivar, :@bullet_list)),
                s(:send, nil, :accept_list_end_bullet))),
            s(:def, :test_accept_list_end_label,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@label_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_end,
                  s(:ivar, :@label_list)),
                s(:send, nil, :accept_list_end_label))),
            s(:def, :test_accept_list_end_lalpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@lalpha_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_end,
                  s(:ivar, :@lalpha_list)),
                s(:send, nil, :accept_list_end_lalpha))),
            s(:def, :test_accept_list_end_number,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@number_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_end,
                  s(:ivar, :@number_list)),
                s(:send, nil, :accept_list_end_number))),
            s(:def, :test_accept_list_end_note,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@note_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_end,
                  s(:ivar, :@note_list)),
                s(:send, nil, :accept_list_end_note))),
            s(:def, :test_accept_list_end_ualpha,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@to), :start_accepting),
                s(:send,
                  s(:ivar, :@to), :accept_list_start,
                  s(:ivar, :@ualpha_list)),
                s(:send,
                  s(:ivar, :@to), :accept_list_end,
                  s(:ivar, :@ualpha_list)),
                s(:send, nil, :accept_list_end_ualpha))),
            s(:def, :test_list_nested,
              s(:args),
              s(:begin,
                s(:lvasgn, :doc,
                  s(:send,
                    s(:const,
                      s(:ivar, :@RM), :Document), :new,
                    s(:send,
                      s(:const,
                        s(:ivar, :@RM), :List), :new,
                      s(:sym, :BULLET),
                      s(:send,
                        s(:const,
                          s(:ivar, :@RM), :ListItem), :new,
                        s(:nil),
                        s(:send,
                          s(:const,
                            s(:ivar, :@RM), :Paragraph), :new,
                          s(:str, "l1")),
                        s(:send,
                          s(:const,
                            s(:ivar, :@RM), :List), :new,
                          s(:sym, :BULLET),
                          s(:send,
                            s(:const,
                              s(:ivar, :@RM), :ListItem), :new,
                            s(:nil),
                            s(:send,
                              s(:const,
                                s(:ivar, :@RM), :Paragraph), :new,
                              s(:str, "l1.1"))))),
                      s(:send,
                        s(:const,
                          s(:ivar, :@RM), :ListItem), :new,
                        s(:nil),
                        s(:send,
                          s(:const,
                            s(:ivar, :@RM), :Paragraph), :new,
                          s(:str, "l2")))))),
                s(:send,
                  s(:lvar, :doc), :accept,
                  s(:ivar, :@to)),
                s(:send, nil, :list_nested))),
            s(:def, :test_list_verbatim,
              s(:args),
              s(:begin,
                s(:lvasgn, :doc,
                  s(:send, nil, :doc,
                    s(:send, nil, :list,
                      s(:sym, :BULLET),
                      s(:send, nil, :item,
                        s(:nil),
                        s(:send, nil, :para,
                          s(:str, "list stuff")),
                        s(:send, nil, :blank_line),
                        s(:send, nil, :verb,
                          s(:str, "* list\n"),
                          s(:str, "  with\n"),
                          s(:str, "\n"),
                          s(:str, "  second\n"),
                          s(:str, "\n"),
                          s(:str, "  1. indented\n"),
                          s(:str, "  2. numbered\n"),
                          s(:str, "\n"),
                          s(:str, "  third\n"),
                          s(:str, "\n"),
                          s(:str, "* second\n")))))),
                s(:send,
                  s(:lvar, :doc), :accept,
                  s(:ivar, :@to)),
                s(:send, nil, :list_verbatim)))))))))
