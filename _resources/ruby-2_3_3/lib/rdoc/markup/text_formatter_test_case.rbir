s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :TextFormatterTestCase),
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :FormatterTestCase),
  s(:defs,
    s(:self), :add_text_tests,
    s(:args),
    s(:block,
      s(:send,
        s(:self), :class_eval),
      s(:args),
      s(:begin,
        s(:def, :test_accept_heading_indent,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@to), :start_accepting),
            s(:send,
              s(:ivar, :@to), :indent=,
              s(:int, 3)),
            s(:send,
              s(:ivar, :@to), :accept_heading,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Heading), :new,
                s(:int, 1),
                s(:str, "Hello"))),
            s(:send, nil, :accept_heading_indent))),
        s(:def, :test_accept_rule_indent,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@to), :start_accepting),
            s(:send,
              s(:ivar, :@to), :indent=,
              s(:int, 3)),
            s(:send,
              s(:ivar, :@to), :accept_rule,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Rule), :new,
                s(:int, 1))),
            s(:send, nil, :accept_rule_indent))),
        s(:def, :test_accept_verbatim_indent,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@to), :start_accepting),
            s(:send,
              s(:ivar, :@to), :indent=,
              s(:int, 2)),
            s(:send,
              s(:ivar, :@to), :accept_verbatim,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Verbatim), :new,
                s(:str, "hi\n"),
                s(:str, " world\n"))),
            s(:send, nil, :accept_verbatim_indent))),
        s(:def, :test_accept_verbatim_big_indent,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@to), :start_accepting),
            s(:send,
              s(:ivar, :@to), :indent=,
              s(:int, 2)),
            s(:send,
              s(:ivar, :@to), :accept_verbatim,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Verbatim), :new,
                s(:str, "hi\n"),
                s(:str, "world\n"))),
            s(:send, nil, :accept_verbatim_big_indent))),
        s(:def, :test_accept_paragraph_indent,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@to), :start_accepting),
            s(:send,
              s(:ivar, :@to), :indent=,
              s(:int, 3)),
            s(:send,
              s(:ivar, :@to), :accept_paragraph,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Paragraph), :new,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:str, "words "), :*,
                      s(:int, 30))), :strip))),
            s(:send, nil, :accept_paragraph_indent))),
        s(:def, :test_accept_paragraph_wrap,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@to), :start_accepting),
            s(:send,
              s(:ivar, :@to), :accept_paragraph,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Paragraph), :new,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:str, "words "), :*,
                      s(:int, 30))), :strip))),
            s(:send, nil, :accept_paragraph_wrap))),
        s(:def, :test_attributes,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Dog"),
            s(:send,
              s(:ivar, :@to), :attributes,
              s(:str, "\\Dog"))))))))
