s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToTtOnly),
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :Formatter),
  s(:begin,
    s(:send, nil, :attr_reader,
      s(:sym, :list_type)),
    s(:send, nil, :attr_reader,
      s(:sym, :res)),
    s(:def, :initialize,
      s(:args,
        s(:optarg, :markup,
          s(:nil))),
      s(:begin,
        s(:super,
          s(:nil),
          s(:lvar, :markup)),
        s(:send, nil, :add_tag,
          s(:sym, :TT),
          s(:nil),
          s(:nil)))),
    s(:def, :accept_block_quote,
      s(:args,
        s(:arg, :block_quote)),
      s(:send, nil, :tt_sections,
        s(:send,
          s(:lvar, :block_quote), :text))),
    s(:def, :accept_list_end,
      s(:args,
        s(:arg, :list)),
      s(:send,
        s(:ivar, :@list_type), :pop)),
    s(:def, :accept_list_start,
      s(:args,
        s(:arg, :list)),
      s(:send,
        s(:ivar, :@list_type), :<<,
        s(:send,
          s(:lvar, :list), :type))),
    s(:def, :accept_list_item_start,
      s(:args,
        s(:arg, :list_item)),
      s(:case,
        s(:send,
          s(:ivar, :@list_type), :last),
        s(:when,
          s(:sym, :NOTE),
          s(:sym, :LABEL),
          s(:send,
            s(:block,
              s(:send,
                s(:send, nil, :Array,
                  s(:send,
                    s(:lvar, :list_item), :label)), :map),
              s(:args,
                s(:arg, :label)),
              s(:send, nil, :tt_sections,
                s(:lvar, :label))), :flatten)), nil)),
    s(:def, :accept_paragraph,
      s(:args,
        s(:arg, :paragraph)),
      s(:send, nil, :tt_sections,
        s(:send,
          s(:lvar, :paragraph), :text))),
    s(:def, :do_nothing,
      s(:args,
        s(:arg, :markup_item)), nil),
    s(:alias,
      s(:sym, :accept_blank_line),
      s(:sym, :do_nothing)),
    s(:alias,
      s(:sym, :accept_heading),
      s(:sym, :do_nothing)),
    s(:alias,
      s(:sym, :accept_list_item_end),
      s(:sym, :do_nothing)),
    s(:alias,
      s(:sym, :accept_raw),
      s(:sym, :do_nothing)),
    s(:alias,
      s(:sym, :accept_rule),
      s(:sym, :do_nothing)),
    s(:alias,
      s(:sym, :accept_verbatim),
      s(:sym, :do_nothing)),
    s(:def, :tt_sections,
      s(:args,
        s(:arg, :text)),
      s(:begin,
        s(:lvasgn, :flow,
          s(:send,
            s(:ivar, :@am), :flow,
            s(:send,
              s(:lvar, :text), :dup))),
        s(:block,
          s(:send,
            s(:lvar, :flow), :each),
          s(:args,
            s(:arg, :item)),
          s(:case,
            s(:lvar, :item),
            s(:when,
              s(:const, nil, :String),
              s(:if,
                s(:send, nil, :in_tt?),
                s(:send,
                  s(:ivar, :@res), :<<,
                  s(:lvar, :item)), nil)),
            s(:when,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :AttrChanger),
              s(:begin,
                s(:send, nil, :off_tags,
                  s(:send, nil, :res),
                  s(:lvar, :item)),
                s(:send, nil, :on_tags,
                  s(:send, nil, :res),
                  s(:lvar, :item)))),
            s(:when,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :Special),
              s(:if,
                s(:send, nil, :in_tt?),
                s(:send,
                  s(:ivar, :@res), :<<,
                  s(:send, nil, :convert_special,
                    s(:lvar, :item))), nil)),
            s(:send, nil, :raise,
              s(:dstr,
                s(:str, "Unknown flow element: "),
                s(:begin,
                  s(:send,
                    s(:lvar, :item), :inspect)))))),
        s(:send, nil, :res))),
    s(:def, :end_accepting,
      s(:args),
      s(:send,
        s(:ivar, :@res), :compact)),
    s(:def, :start_accepting,
      s(:args),
      s(:begin,
        s(:ivasgn, :@res,
          s(:array)),
        s(:ivasgn, :@list_type,
          s(:array))))))
