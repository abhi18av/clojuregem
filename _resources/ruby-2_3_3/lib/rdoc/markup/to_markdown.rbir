s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToMarkdown),
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :ToRdoc),
  s(:begin,
    s(:def, :initialize,
      s(:args,
        s(:optarg, :markup,
          s(:nil))),
      s(:begin,
        s(:zsuper),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 1),
          s(:array,
            s(:str, "# "),
            s(:str, ""))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 2),
          s(:array,
            s(:str, "## "),
            s(:str, ""))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 3),
          s(:array,
            s(:str, "### "),
            s(:str, ""))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 4),
          s(:array,
            s(:str, "#### "),
            s(:str, ""))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 5),
          s(:array,
            s(:str, "##### "),
            s(:str, ""))),
        s(:send,
          s(:ivar, :@headings), :[]=,
          s(:int, 6),
          s(:array,
            s(:str, "###### "),
            s(:str, ""))),
        s(:send, nil, :add_special_RDOCLINK),
        s(:send, nil, :add_special_TIDYLINK),
        s(:ivasgn, :@hard_break,
          s(:str, "  \n")))),
    s(:def, :init_tags,
      s(:args),
      s(:begin,
        s(:send, nil, :add_tag,
          s(:sym, :BOLD),
          s(:str, "**"),
          s(:str, "**")),
        s(:send, nil, :add_tag,
          s(:sym, :EM),
          s(:str, "*"),
          s(:str, "*")),
        s(:send, nil, :add_tag,
          s(:sym, :TT),
          s(:str, "`"),
          s(:str, "`")))),
    s(:def, :handle_special_HARD_BREAK,
      s(:args,
        s(:arg, :special)),
      s(:str, "  \n")),
    s(:def, :accept_list_end,
      s(:args,
        s(:arg, :list)),
      s(:begin,
        s(:send,
          s(:ivar, :@res), :<<,
          s(:str, "\n")),
        s(:zsuper))),
    s(:def, :accept_list_item_end,
      s(:args,
        s(:arg, :list_item)),
      s(:begin,
        s(:lvasgn, :width,
          s(:case,
            s(:send,
              s(:ivar, :@list_type), :last),
            s(:when,
              s(:sym, :BULLET),
              s(:int, 4)),
            s(:when,
              s(:sym, :NOTE),
              s(:sym, :LABEL),
              s(:begin,
                s(:send, nil, :use_prefix),
                s(:int, 4))),
            s(:begin,
              s(:send,
                s(:ivar, :@list_index), :[]=,
                s(:int, -1),
                s(:send,
                  s(:send,
                    s(:ivar, :@list_index), :last), :succ)),
              s(:int, 4)))),
        s(:op_asgn,
          s(:ivasgn, :@indent), :-,
          s(:lvar, :width)))),
    s(:def, :accept_list_item_start,
      s(:args,
        s(:arg, :list_item)),
      s(:begin,
        s(:lvasgn, :type,
          s(:send,
            s(:ivar, :@list_type), :last)),
        s(:case,
          s(:lvar, :type),
          s(:when,
            s(:sym, :NOTE),
            s(:sym, :LABEL),
            s(:begin,
              s(:lvasgn, :bullets,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:send, nil, :Array,
                        s(:send,
                          s(:lvar, :list_item), :label)), :map),
                    s(:args,
                      s(:arg, :label)),
                    s(:send,
                      s(:send, nil, :attributes,
                        s(:lvar, :label)), :strip)), :join,
                  s(:str, "\n"))),
              s(:send,
                s(:lvar, :bullets), :<<,
                s(:str, "\n:")),
              s(:ivasgn, :@prefix,
                s(:send,
                  s(:str, " "), :*,
                  s(:ivar, :@indent))),
              s(:op_asgn,
                s(:ivasgn, :@indent), :+,
                s(:int, 4)),
              s(:send,
                s(:ivar, :@prefix), :<<,
                s(:send,
                  s(:lvar, :bullets), :+,
                  s(:begin,
                    s(:send,
                      s(:str, " "), :*,
                      s(:begin,
                        s(:send,
                          s(:ivar, :@indent), :-,
                          s(:int, 1))))))))),
          s(:begin,
            s(:lvasgn, :bullet,
              s(:if,
                s(:send,
                  s(:lvar, :type), :==,
                  s(:sym, :BULLET)),
                s(:str, "*"),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@list_index), :last), :to_s), :+,
                  s(:str, ".")))),
            s(:ivasgn, :@prefix,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:str, " "), :*,
                    s(:ivar, :@indent))), :+,
                s(:send,
                  s(:lvar, :bullet), :ljust,
                  s(:int, 4)))),
            s(:op_asgn,
              s(:ivasgn, :@indent), :+,
              s(:int, 4)))))),
    s(:def, :accept_list_start,
      s(:args,
        s(:arg, :list)),
      s(:begin,
        s(:case,
          s(:send,
            s(:lvar, :list), :type),
          s(:when,
            s(:sym, :BULLET),
            s(:sym, :LABEL),
            s(:sym, :NOTE),
            s(:send,
              s(:ivar, :@list_index), :<<,
              s(:nil))),
          s(:when,
            s(:sym, :LALPHA),
            s(:sym, :NUMBER),
            s(:sym, :UALPHA),
            s(:send,
              s(:ivar, :@list_index), :<<,
              s(:int, 1))),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :RDoc), :Error),
            s(:dstr,
              s(:str, "invalid list type "),
              s(:begin,
                s(:send,
                  s(:lvar, :list), :type))))),
        s(:send,
          s(:ivar, :@list_width), :<<,
          s(:int, 4)),
        s(:send,
          s(:ivar, :@list_type), :<<,
          s(:send,
            s(:lvar, :list), :type)))),
    s(:def, :accept_rule,
      s(:args,
        s(:arg, :rule)),
      s(:begin,
        s(:or,
          s(:send, nil, :use_prefix),
          s(:send,
            s(:ivar, :@res), :<<,
            s(:send,
              s(:str, " "), :*,
              s(:ivar, :@indent)))),
        s(:send,
          s(:ivar, :@res), :<<,
          s(:send,
            s(:str, "-"), :*,
            s(:int, 3))),
        s(:send,
          s(:ivar, :@res), :<<,
          s(:str, "\n")))),
    s(:def, :accept_verbatim,
      s(:args,
        s(:arg, :verbatim)),
      s(:begin,
        s(:lvasgn, :indent,
          s(:send,
            s(:str, " "), :*,
            s(:begin,
              s(:send,
                s(:ivar, :@indent), :+,
                s(:int, 4))))),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :verbatim), :parts), :each),
          s(:args,
            s(:arg, :part)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :part), :==,
                s(:str, "\n")), nil,
              s(:send,
                s(:ivar, :@res), :<<,
                s(:lvar, :indent))),
            s(:send,
              s(:ivar, :@res), :<<,
              s(:lvar, :part)))),
        s(:if,
          s(:send,
            s(:ivar, :@res), :=~,
            s(:regexp,
              s(:str, "\\n\\z"),
              s(:regopt))), nil,
          s(:send,
            s(:ivar, :@res), :<<,
            s(:str, "\n"))))),
    s(:def, :gen_url,
      s(:args,
        s(:arg, :url),
        s(:arg, :text)),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :scheme),
            s(:lvasgn, :url)),
          s(:send, nil, :parse_url,
            s(:lvar, :url))),
        s(:dstr,
          s(:str, "["),
          s(:begin,
            s(:send,
              s(:lvar, :text), :sub,
              s(:regexp,
                s(:str, "^"),
                s(:begin,
                  s(:lvar, :scheme)),
                s(:str, ":/*"),
                s(:regopt, :i)),
              s(:str, ""))),
          s(:str, "]("),
          s(:begin,
            s(:lvar, :url)),
          s(:str, ")")))),
    s(:def, :handle_rdoc_link,
      s(:args,
        s(:arg, :url)),
      s(:case,
        s(:lvar, :url),
        s(:when,
          s(:regexp,
            s(:str, "^rdoc-ref:"),
            s(:regopt)),
          s(:back_ref, :$')),
        s(:when,
          s(:regexp,
            s(:str, "^rdoc-label:footmark-(\\d+)"),
            s(:regopt)),
          s(:dstr,
            s(:str, "[^"),
            s(:begin,
              s(:nth_ref, 1)),
            s(:str, "]:"))),
        s(:when,
          s(:regexp,
            s(:str, "^rdoc-label:foottext-(\\d+)"),
            s(:regopt)),
          s(:dstr,
            s(:str, "[^"),
            s(:begin,
              s(:nth_ref, 1)),
            s(:str, "]"))),
        s(:when,
          s(:regexp,
            s(:str, "^rdoc-label:label-"),
            s(:regopt)),
          s(:send, nil, :gen_url,
            s(:lvar, :url),
            s(:back_ref, :$'))),
        s(:when,
          s(:regexp,
            s(:str, "^rdoc-image:"),
            s(:regopt)),
          s(:dstr,
            s(:str, "![]("),
            s(:begin,
              s(:back_ref, :$')),
            s(:str, ")"))),
        s(:when,
          s(:regexp,
            s(:str, "^rdoc-[a-z]+:"),
            s(:regopt)),
          s(:back_ref, :$')), nil)),
    s(:def, :handle_special_TIDYLINK,
      s(:args,
        s(:arg, :special)),
      s(:begin,
        s(:lvasgn, :text,
          s(:send,
            s(:lvar, :special), :text)),
        s(:if,
          s(:or,
            s(:send,
              s(:lvar, :text), :=~,
              s(:regexp,
                s(:str, "\\{(.*?)\\}\\[(.*?)\\]"),
                s(:regopt))),
            s(:send,
              s(:lvar, :text), :=~,
              s(:regexp,
                s(:str, "(\\S+)\\[(.*?)\\]"),
                s(:regopt)))), nil,
          s(:return,
            s(:lvar, :text))),
        s(:lvasgn, :label,
          s(:nth_ref, 1)),
        s(:lvasgn, :url,
          s(:nth_ref, 2)),
        s(:if,
          s(:send,
            s(:lvar, :url), :=~,
            s(:regexp,
              s(:str, "^rdoc-label:foot"),
              s(:regopt))),
          s(:send, nil, :handle_rdoc_link,
            s(:lvar, :url)),
          s(:send, nil, :gen_url,
            s(:lvar, :url),
            s(:lvar, :label))))),
    s(:def, :handle_special_RDOCLINK,
      s(:args,
        s(:arg, :special)),
      s(:send, nil, :handle_rdoc_link,
        s(:send,
          s(:lvar, :special), :text)))))
