s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :Verbatim),
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Markup), :Raw),
  s(:begin,
    s(:send, nil, :attr_accessor,
      s(:sym, :format)),
    s(:def, :initialize,
      s(:args,
        s(:restarg, :parts)),
      s(:begin,
        s(:zsuper),
        s(:ivasgn, :@format,
          s(:nil)))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:zsuper),
        s(:send,
          s(:ivar, :@format), :==,
          s(:send,
            s(:lvar, :other), :format)))),
    s(:def, :accept,
      s(:args,
        s(:arg, :visitor)),
      s(:send,
        s(:lvar, :visitor), :accept_verbatim,
        s(:self))),
    s(:def, :normalize,
      s(:args),
      s(:begin,
        s(:lvasgn, :parts,
          s(:array)),
        s(:lvasgn, :newlines,
          s(:int, 0)),
        s(:block,
          s(:send,
            s(:ivar, :@parts), :each),
          s(:args,
            s(:arg, :part)),
          s(:case,
            s(:lvar, :part),
            s(:when,
              s(:regexp,
                s(:str, "^\\s*\\n"),
                s(:regopt)),
              s(:begin,
                s(:op_asgn,
                  s(:lvasgn, :newlines), :+,
                  s(:int, 1)),
                s(:if,
                  s(:send,
                    s(:lvar, :newlines), :==,
                    s(:int, 1)),
                  s(:send,
                    s(:lvar, :parts), :<<,
                    s(:lvar, :part)), nil))),
            s(:begin,
              s(:lvasgn, :newlines,
                s(:int, 0)),
              s(:send,
                s(:lvar, :parts), :<<,
                s(:lvar, :part))))),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :parts), :last), :=~,
            s(:regexp,
              s(:str, "\\A\\r?\\n\\z"),
              s(:regopt))),
          s(:send,
            s(:lvar, :parts), :pop), nil),
        s(:ivasgn, :@parts,
          s(:lvar, :parts)))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:begin,
        s(:send,
          s(:send,
            s(:send,
              s(:self), :class), :name), :=~,
          s(:regexp,
            s(:str, ".*::(\\w{1,4})"),
            s(:regopt, :i))),
        s(:block,
          s(:send,
            s(:lvar, :q), :group,
            s(:int, 2),
            s(:dstr,
              s(:str, "["),
              s(:begin,
                s(:send,
                  s(:nth_ref, 1), :downcase)),
              s(:str, ": ")),
            s(:str, "]")),
          s(:args),
          s(:begin,
            s(:if,
              s(:ivar, :@format),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :text,
                  s(:dstr,
                    s(:str, "format: "),
                    s(:begin,
                      s(:ivar, :@format)))),
                s(:send,
                  s(:lvar, :q), :breakable)), nil),
            s(:block,
              s(:send,
                s(:lvar, :q), :seplist,
                s(:ivar, :@parts)),
              s(:args,
                s(:arg, :part)),
              s(:send,
                s(:lvar, :q), :pp,
                s(:lvar, :part))))))),
    s(:def, :ruby?,
      s(:args),
      s(:begin,
        s(:or_asgn,
          s(:ivasgn, :@format),
          s(:nil)),
        s(:send,
          s(:ivar, :@format), :==,
          s(:sym, :ruby)))),
    s(:def, :text,
      s(:args),
      s(:send,
        s(:ivar, :@parts), :join))))
