s(:begin,
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :Store), nil,
    s(:begin,
      s(:class,
        s(:const, nil, :Error),
        s(:const,
          s(:const, nil, :RDoc), :Error), nil),
      s(:class,
        s(:const, nil, :MissingFileError),
        s(:const, nil, :Error),
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :store)),
          s(:send, nil, :attr_reader,
            s(:sym, :file)),
          s(:send, nil, :attr_reader,
            s(:sym, :name)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :store),
              s(:arg, :file),
              s(:arg, :name)),
            s(:begin,
              s(:ivasgn, :@store,
                s(:lvar, :store)),
              s(:ivasgn, :@file,
                s(:lvar, :file)),
              s(:ivasgn, :@name,
                s(:lvar, :name)))),
          s(:def, :message,
            s(:args),
            s(:dstr,
              s(:str, "store at "),
              s(:begin,
                s(:send,
                  s(:ivar, :@store), :path)),
              s(:str, " missing file "),
              s(:begin,
                s(:ivar, :@file)),
              s(:str, " for "),
              s(:begin,
                s(:ivar, :@name)))))),
      s(:send, nil, :attr_reader,
        s(:sym, :c_enclosure_classes)),
      s(:send, nil, :attr_reader,
        s(:sym, :c_enclosure_names)),
      s(:send, nil, :attr_reader,
        s(:sym, :c_class_variables)),
      s(:send, nil, :attr_reader,
        s(:sym, :c_singleton_class_variables)),
      s(:send, nil, :attr_accessor,
        s(:sym, :dry_run)),
      s(:send, nil, :attr_accessor,
        s(:sym, :path)),
      s(:send, nil, :attr_accessor,
        s(:sym, :rdoc)),
      s(:send, nil, :attr_accessor,
        s(:sym, :type)),
      s(:send, nil, :attr_reader,
        s(:sym, :cache)),
      s(:send, nil, :attr_accessor,
        s(:sym, :encoding)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :path,
            s(:nil)),
          s(:optarg, :type,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@dry_run,
            s(:false)),
          s(:ivasgn, :@encoding,
            s(:nil)),
          s(:ivasgn, :@path,
            s(:lvar, :path)),
          s(:ivasgn, :@rdoc,
            s(:nil)),
          s(:ivasgn, :@type,
            s(:lvar, :type)),
          s(:ivasgn, :@cache,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:hash)),
              s(:pair,
                s(:sym, :attributes),
                s(:hash)),
              s(:pair,
                s(:sym, :class_methods),
                s(:hash)),
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :encoding),
                s(:ivar, :@encoding)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:hash)),
              s(:pair,
                s(:sym, :main),
                s(:nil)),
              s(:pair,
                s(:sym, :modules),
                s(:array)),
              s(:pair,
                s(:sym, :pages),
                s(:array)),
              s(:pair,
                s(:sym, :title),
                s(:nil)))),
          s(:ivasgn, :@classes_hash,
            s(:hash)),
          s(:ivasgn, :@modules_hash,
            s(:hash)),
          s(:ivasgn, :@files_hash,
            s(:hash)),
          s(:ivasgn, :@c_enclosure_classes,
            s(:hash)),
          s(:ivasgn, :@c_enclosure_names,
            s(:hash)),
          s(:ivasgn, :@c_class_variables,
            s(:hash)),
          s(:ivasgn, :@c_singleton_class_variables,
            s(:hash)),
          s(:ivasgn, :@unique_classes,
            s(:nil)),
          s(:ivasgn, :@unique_modules,
            s(:nil)))),
      s(:def, :add_c_enclosure,
        s(:args,
          s(:arg, :variable),
          s(:arg, :namespace)),
        s(:send,
          s(:ivar, :@c_enclosure_classes), :[]=,
          s(:lvar, :variable),
          s(:lvar, :namespace))),
      s(:def, :add_c_variables,
        s(:args,
          s(:arg, :c_parser)),
        s(:begin,
          s(:lvasgn, :filename,
            s(:send,
              s(:send,
                s(:lvar, :c_parser), :top_level), :relative_name)),
          s(:send,
            s(:ivar, :@c_class_variables), :[]=,
            s(:lvar, :filename),
            s(:send, nil, :make_variable_map,
              s(:send,
                s(:lvar, :c_parser), :classes))),
          s(:send,
            s(:ivar, :@c_singleton_class_variables), :[]=,
            s(:lvar, :filename),
            s(:send,
              s(:lvar, :c_parser), :singleton_classes)))),
      s(:def, :add_file,
        s(:args,
          s(:arg, :absolute_name),
          s(:optarg, :relative_name,
            s(:lvar, :absolute_name))),
        s(:begin,
          s(:if,
            s(:lvasgn, :top_level,
              s(:send,
                s(:ivar, :@files_hash), :[],
                s(:lvar, :relative_name))), nil,
            s(:begin,
              s(:lvasgn, :top_level,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :TopLevel), :new,
                  s(:lvar, :absolute_name),
                  s(:lvar, :relative_name))),
              s(:send,
                s(:lvar, :top_level), :store=,
                s(:self)),
              s(:send,
                s(:ivar, :@files_hash), :[]=,
                s(:lvar, :relative_name),
                s(:lvar, :top_level)))),
          s(:lvar, :top_level))),
      s(:def, :all_classes,
        s(:args),
        s(:send,
          s(:ivar, :@classes_hash), :values)),
      s(:def, :all_classes_and_modules,
        s(:args),
        s(:send,
          s(:send,
            s(:ivar, :@classes_hash), :values), :+,
          s(:send,
            s(:ivar, :@modules_hash), :values))),
      s(:def, :all_files,
        s(:args),
        s(:send,
          s(:ivar, :@files_hash), :values)),
      s(:def, :all_modules,
        s(:args),
        s(:send,
          s(:send, nil, :modules_hash), :values)),
      s(:def, :ancestors,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :ancestors))),
      s(:def, :attributes,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :attributes))),
      s(:def, :cache_path,
        s(:args),
        s(:send,
          s(:const, nil, :File), :join,
          s(:ivar, :@path),
          s(:str, "cache.ri"))),
      s(:def, :class_file,
        s(:args,
          s(:arg, :klass_name)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:send,
                s(:lvar, :klass_name), :split,
                s(:str, "::")), :last)),
          s(:send,
            s(:const, nil, :File), :join,
            s(:send, nil, :class_path,
              s(:lvar, :klass_name)),
            s(:dstr,
              s(:str, "cdesc-"),
              s(:begin,
                s(:lvar, :name)),
              s(:str, ".ri"))))),
      s(:def, :class_methods,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :class_methods))),
      s(:def, :class_path,
        s(:args,
          s(:arg, :klass_name)),
        s(:send,
          s(:const, nil, :File), :join,
          s(:ivar, :@path),
          s(:splat,
            s(:send,
              s(:lvar, :klass_name), :split,
              s(:str, "::"))))),
      s(:def, :classes_hash,
        s(:args),
        s(:ivar, :@classes_hash)),
      s(:def, :clean_cache_collection,
        s(:args,
          s(:arg, :collection)),
        s(:block,
          s(:send,
            s(:lvar, :collection), :each),
          s(:args,
            s(:arg, :name),
            s(:arg, :item)),
          s(:if,
            s(:send,
              s(:lvar, :item), :empty?),
            s(:send,
              s(:lvar, :collection), :delete,
              s(:lvar, :name)),
            s(:begin,
              s(:send,
                s(:lvar, :item), :uniq!),
              s(:send,
                s(:lvar, :item), :sort!))))),
      s(:def, :complete,
        s(:args,
          s(:arg, :min_visibility)),
        s(:begin,
          s(:send, nil, :fix_basic_object_inheritance),
          s(:block,
            s(:send,
              s(:send, nil, :all_classes_and_modules), :each),
            s(:args,
              s(:arg, :cm)),
            s(:send,
              s(:lvar, :cm), :ancestors)),
          s(:if,
            s(:send,
              s(:lvar, :min_visibility), :==,
              s(:sym, :nodoc)), nil,
            s(:begin,
              s(:send, nil, :remove_nodoc,
                s(:ivar, :@classes_hash)),
              s(:send, nil, :remove_nodoc,
                s(:ivar, :@modules_hash)))),
          s(:ivasgn, :@unique_classes,
            s(:send, nil, :find_unique,
              s(:ivar, :@classes_hash))),
          s(:ivasgn, :@unique_modules,
            s(:send, nil, :find_unique,
              s(:ivar, :@modules_hash))),
          s(:block,
            s(:send,
              s(:send, nil, :unique_classes_and_modules), :each),
            s(:args,
              s(:arg, :cm)),
            s(:send,
              s(:lvar, :cm), :complete,
              s(:lvar, :min_visibility))),
          s(:block,
            s(:send,
              s(:ivar, :@files_hash), :each_key),
            s(:args,
              s(:arg, :file_name)),
            s(:begin,
              s(:lvasgn, :tl,
                s(:send,
                  s(:ivar, :@files_hash), :[],
                  s(:lvar, :file_name))),
              s(:if,
                s(:send,
                  s(:lvar, :tl), :text?), nil,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :tl), :modules_hash), :clear),
                  s(:send,
                    s(:send,
                      s(:lvar, :tl), :classes_hash), :clear),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :tl), :classes_or_modules), :each),
                    s(:args,
                      s(:arg, :cm)),
                    s(:begin,
                      s(:lvasgn, :name,
                        s(:send,
                          s(:lvar, :cm), :full_name)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :cm), :type), :==,
                          s(:str, "class")),
                        s(:if,
                          s(:send,
                            s(:ivar, :@classes_hash), :[],
                            s(:lvar, :name)),
                          s(:send,
                            s(:send,
                              s(:lvar, :tl), :classes_hash), :[]=,
                            s(:lvar, :name),
                            s(:lvar, :cm)), nil),
                        s(:if,
                          s(:send,
                            s(:ivar, :@modules_hash), :[],
                            s(:lvar, :name)),
                          s(:send,
                            s(:send,
                              s(:lvar, :tl), :modules_hash), :[]=,
                            s(:lvar, :name),
                            s(:lvar, :cm)), nil)))))))))),
      s(:def, :files_hash,
        s(:args),
        s(:ivar, :@files_hash)),
      s(:def, :find_c_enclosure,
        s(:args,
          s(:arg, :variable)),
        s(:block,
          s(:send,
            s(:ivar, :@c_enclosure_classes), :fetch,
            s(:lvar, :variable)),
          s(:args),
          s(:begin,
            s(:if,
              s(:lvasgn, :name,
                s(:send,
                  s(:ivar, :@c_enclosure_names), :[],
                  s(:lvar, :variable))), nil,
              s(:break)),
            s(:lvasgn, :mod,
              s(:send, nil, :find_class_or_module,
                s(:lvar, :name))),
            s(:if,
              s(:lvar, :mod), nil,
              s(:begin,
                s(:lvasgn, :loaded_mod,
                  s(:send, nil, :load_class_data,
                    s(:lvar, :name))),
                s(:lvasgn, :file,
                  s(:send,
                    s(:send,
                      s(:lvar, :loaded_mod), :in_files), :first)),
                s(:if,
                  s(:lvar, :file), nil,
                  s(:return)),
                s(:send,
                  s(:lvar, :file), :store=,
                  s(:self)),
                s(:lvasgn, :mod,
                  s(:send,
                    s(:lvar, :file), :add_module,
                    s(:const,
                      s(:const, nil, :RDoc), :NormalModule),
                    s(:lvar, :name))))),
            s(:send,
              s(:ivar, :@c_enclosure_classes), :[]=,
              s(:lvar, :variable),
              s(:lvar, :mod))))),
      s(:def, :find_class_named,
        s(:args,
          s(:arg, :name)),
        s(:send,
          s(:ivar, :@classes_hash), :[],
          s(:lvar, :name))),
      s(:def, :find_class_named_from,
        s(:args,
          s(:arg, :name),
          s(:arg, :from)),
        s(:begin,
          s(:if,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Context), :===,
              s(:lvar, :from)), nil,
            s(:lvasgn, :from,
              s(:send, nil, :find_class_named,
                s(:lvar, :from)))),
          s(:until,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :TopLevel), :===,
              s(:lvar, :from)),
            s(:begin,
              s(:if,
                s(:lvar, :from), nil,
                s(:return,
                  s(:nil))),
              s(:lvasgn, :klass,
                s(:send,
                  s(:lvar, :from), :find_class_named,
                  s(:lvar, :name))),
              s(:if,
                s(:lvar, :klass),
                s(:return,
                  s(:lvar, :klass)), nil),
              s(:lvasgn, :from,
                s(:send,
                  s(:lvar, :from), :parent)))),
          s(:send, nil, :find_class_named,
            s(:lvar, :name)))),
      s(:def, :find_class_or_module,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :name), :=~,
              s(:regexp,
                s(:str, "^::"),
                s(:regopt))),
            s(:lvasgn, :name,
              s(:back_ref, :$')), nil),
          s(:or,
            s(:send,
              s(:ivar, :@classes_hash), :[],
              s(:lvar, :name)),
            s(:send,
              s(:ivar, :@modules_hash), :[],
              s(:lvar, :name))))),
      s(:def, :find_file_named,
        s(:args,
          s(:arg, :name)),
        s(:send,
          s(:ivar, :@files_hash), :[],
          s(:lvar, :name))),
      s(:def, :find_module_named,
        s(:args,
          s(:arg, :name)),
        s(:send,
          s(:ivar, :@modules_hash), :[],
          s(:lvar, :name))),
      s(:def, :find_text_page,
        s(:args,
          s(:arg, :file_name)),
        s(:block,
          s(:send,
            s(:send,
              s(:ivar, :@files_hash), :each_value), :find),
          s(:args,
            s(:arg, :file)),
          s(:and,
            s(:send,
              s(:lvar, :file), :text?),
            s(:send,
              s(:send,
                s(:lvar, :file), :full_name), :==,
              s(:lvar, :file_name))))),
      s(:def, :find_unique,
        s(:args,
          s(:arg, :all_hash)),
        s(:begin,
          s(:lvasgn, :unique,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :all_hash), :each_pair),
            s(:args,
              s(:arg, :full_name),
              s(:arg, :cm)),
            s(:if,
              s(:send,
                s(:lvar, :full_name), :==,
                s(:send,
                  s(:lvar, :cm), :full_name)),
              s(:send,
                s(:lvar, :unique), :<<,
                s(:lvar, :cm)), nil)),
          s(:lvar, :unique))),
      s(:def, :fix_basic_object_inheritance,
        s(:args),
        s(:begin,
          s(:lvasgn, :basic,
            s(:send,
              s(:send, nil, :classes_hash), :[],
              s(:str, "BasicObject"))),
          s(:if,
            s(:lvar, :basic), nil,
            s(:return)),
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>=,
              s(:str, "1.9")),
            s(:send,
              s(:lvar, :basic), :superclass=,
              s(:nil)),
            s(:if,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :basic), :in_files), :any?),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:lvar, :f), :full_name)), :==,
                  s(:str, "object.c"))),
              s(:send,
                s(:lvar, :basic), :superclass=,
                s(:nil)), nil)))),
      s(:def, :friendly_path,
        s(:args),
        s(:case,
          s(:send, nil, :type),
          s(:when,
            s(:sym, :gem),
            s(:begin,
              s(:lvasgn, :parent,
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, ".."),
                  s(:ivar, :@path))),
              s(:dstr,
                s(:str, "gem "),
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:lvar, :parent)))))),
          s(:when,
            s(:sym, :home),
            s(:str, "~/.rdoc")),
          s(:when,
            s(:sym, :site),
            s(:str, "ruby site")),
          s(:when,
            s(:sym, :system),
            s(:str, "ruby core")),
          s(:ivar, :@path))),
      s(:def, :inspect,
        s(:args),
        s(:send,
          s(:str, "#<%s:0x%x %s %p>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:send, nil, :object_id),
            s(:ivar, :@path),
            s(:send,
              s(:send, nil, :module_names), :sort)))),
      s(:def, :instance_methods,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :instance_methods))),
      s(:def, :load_all,
        s(:args),
        s(:begin,
          s(:send, nil, :load_cache),
          s(:block,
            s(:send,
              s(:send, nil, :module_names), :each),
            s(:args,
              s(:arg, :module_name)),
            s(:begin,
              s(:lvasgn, :mod,
                s(:or,
                  s(:send, nil, :find_class_or_module,
                    s(:lvar, :module_name)),
                  s(:send, nil, :load_class,
                    s(:lvar, :module_name)))),
              s(:lvasgn, :loaded_methods,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :mod), :method_list), :map),
                  s(:args,
                    s(:arg, :method)),
                  s(:send, nil, :load_method,
                    s(:lvar, :module_name),
                    s(:send,
                      s(:lvar, :method), :full_name)))),
              s(:send,
                s(:send,
                  s(:lvar, :mod), :method_list), :replace,
                s(:lvar, :loaded_methods)),
              s(:lvasgn, :loaded_attributes,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :mod), :attributes), :map),
                  s(:args,
                    s(:arg, :attribute)),
                  s(:send, nil, :load_method,
                    s(:lvar, :module_name),
                    s(:send,
                      s(:lvar, :attribute), :full_name)))),
              s(:send,
                s(:send,
                  s(:lvar, :mod), :attributes), :replace,
                s(:lvar, :loaded_attributes)))),
          s(:block,
            s(:send,
              s(:send, nil, :all_classes_and_modules), :each),
            s(:args,
              s(:arg, :mod)),
            s(:begin,
              s(:lvasgn, :descendent_re,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :mod), :full_name)),
                  s(:str, "::[^:]+$"),
                  s(:regopt))),
              s(:block,
                s(:send,
                  s(:send, nil, :module_names), :each),
                s(:args,
                  s(:arg, :name)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :name), :=~,
                      s(:lvar, :descendent_re)), nil,
                    s(:next)),
                  s(:lvasgn, :descendent,
                    s(:send, nil, :find_class_or_module,
                      s(:lvar, :name))),
                  s(:case,
                    s(:lvar, :descendent),
                    s(:when,
                      s(:const,
                        s(:const, nil, :RDoc), :NormalClass),
                      s(:send,
                        s(:send,
                          s(:lvar, :mod), :classes_hash), :[]=,
                        s(:lvar, :name),
                        s(:lvar, :descendent))),
                    s(:when,
                      s(:const,
                        s(:const, nil, :RDoc), :NormalModule),
                      s(:send,
                        s(:send,
                          s(:lvar, :mod), :modules_hash), :[]=,
                        s(:lvar, :name),
                        s(:lvar, :descendent))), nil))))),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :pages)), :each),
            s(:args,
              s(:arg, :page_name)),
            s(:begin,
              s(:lvasgn, :page,
                s(:send, nil, :load_page,
                  s(:lvar, :page_name))),
              s(:send,
                s(:ivar, :@files_hash), :[]=,
                s(:lvar, :page_name),
                s(:lvar, :page)))))),
      s(:def, :load_cache,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:block,
              s(:send, nil, :open,
                s(:send, nil, :cache_path),
                s(:str, "rb")),
              s(:args,
                s(:arg, :io)),
              s(:ivasgn, :@cache,
                s(:send,
                  s(:const, nil, :Marshal), :load,
                  s(:send,
                    s(:lvar, :io), :read)))),
            s(:lvasgn, :load_enc,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :encoding))),
            s(:if,
              s(:ivar, :@encoding), nil,
              s(:ivasgn, :@encoding,
                s(:lvar, :load_enc))),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :pages)),
              s(:array)),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :main)),
              s(:nil)),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :c_class_variables)),
              s(:hash)),
            s(:or_asgn,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :c_singleton_class_variables)),
              s(:hash)),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@cache), :[],
                  s(:sym, :c_class_variables)), :each),
              s(:args,
                s(:arg, :_),
                s(:arg, :map)),
              s(:block,
                s(:send,
                  s(:lvar, :map), :each),
                s(:args,
                  s(:arg, :variable),
                  s(:arg, :name)),
                s(:send,
                  s(:ivar, :@c_enclosure_names), :[]=,
                  s(:lvar, :variable),
                  s(:lvar, :name)))),
            s(:ivar, :@cache)),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)), nil, nil), nil)),
      s(:def, :load_class,
        s(:args,
          s(:arg, :klass_name)),
        s(:begin,
          s(:lvasgn, :obj,
            s(:send, nil, :load_class_data,
              s(:lvar, :klass_name))),
          s(:send,
            s(:lvar, :obj), :store=,
            s(:self)),
          s(:case,
            s(:lvar, :obj),
            s(:when,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:send,
                s(:ivar, :@classes_hash), :[]=,
                s(:lvar, :klass_name),
                s(:lvar, :obj))),
            s(:when,
              s(:const,
                s(:const, nil, :RDoc), :NormalModule),
              s(:send,
                s(:ivar, :@modules_hash), :[]=,
                s(:lvar, :klass_name),
                s(:lvar, :obj))), nil))),
      s(:def, :load_class_data,
        s(:args,
          s(:arg, :klass_name)),
        s(:rescue,
          s(:begin,
            s(:lvasgn, :file,
              s(:send, nil, :class_file,
                s(:lvar, :klass_name))),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :file),
                s(:str, "rb")),
              s(:args,
                s(:arg, :io)),
              s(:send,
                s(:const, nil, :Marshal), :load,
                s(:send,
                  s(:lvar, :io), :read)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)),
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const, nil, :MissingFileError), :new,
                  s(:self),
                  s(:lvar, :file),
                  s(:lvar, :klass_name))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :load_method,
        s(:args,
          s(:arg, :klass_name),
          s(:arg, :method_name)),
        s(:rescue,
          s(:begin,
            s(:lvasgn, :file,
              s(:send, nil, :method_file,
                s(:lvar, :klass_name),
                s(:lvar, :method_name))),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :file),
                s(:str, "rb")),
              s(:args,
                s(:arg, :io)),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:const, nil, :Marshal), :load,
                    s(:send,
                      s(:lvar, :io), :read))),
                s(:send,
                  s(:lvar, :obj), :store=,
                  s(:self)),
                s(:if,
                  s(:send,
                    s(:lvar, :obj), :parent), nil,
                  s(:send,
                    s(:lvar, :obj), :parent=,
                    s(:or,
                      s(:send, nil, :find_class_or_module,
                        s(:lvar, :klass_name)),
                      s(:send, nil, :load_class,
                        s(:lvar, :klass_name))))),
                s(:lvar, :obj)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)),
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const, nil, :MissingFileError), :new,
                  s(:self),
                  s(:lvar, :file),
                  s(:send,
                    s(:lvar, :klass_name), :+,
                    s(:lvar, :method_name)))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :load_page,
        s(:args,
          s(:arg, :page_name)),
        s(:rescue,
          s(:begin,
            s(:lvasgn, :file,
              s(:send, nil, :page_file,
                s(:lvar, :page_name))),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :file),
                s(:str, "rb")),
              s(:args,
                s(:arg, :io)),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:const, nil, :Marshal), :load,
                    s(:send,
                      s(:lvar, :io), :read))),
                s(:send,
                  s(:lvar, :obj), :store=,
                  s(:self)),
                s(:lvar, :obj)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)),
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const, nil, :MissingFileError), :new,
                  s(:self),
                  s(:lvar, :file),
                  s(:lvar, :page_name))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :main,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :main))),
      s(:def, :main=,
        s(:args,
          s(:arg, :page)),
        s(:send,
          s(:ivar, :@cache), :[]=,
          s(:sym, :main),
          s(:lvar, :page))),
      s(:def, :make_variable_map,
        s(:args,
          s(:arg, :variables)),
        s(:begin,
          s(:lvasgn, :map,
            s(:hash)),
          s(:block,
            s(:send,
              s(:lvar, :variables), :each),
            s(:args,
              s(:arg, :variable),
              s(:arg, :class_module)),
            s(:send,
              s(:lvar, :map), :[]=,
              s(:lvar, :variable),
              s(:send,
                s(:lvar, :class_module), :full_name))),
          s(:lvar, :map))),
      s(:def, :method_file,
        s(:args,
          s(:arg, :klass_name),
          s(:arg, :method_name)),
        s(:begin,
          s(:lvasgn, :method_name,
            s(:send,
              s(:send,
                s(:lvar, :method_name), :split,
                s(:str, "::")), :last)),
          s(:send,
            s(:lvar, :method_name), :=~,
            s(:regexp,
              s(:str, "#(.*)"),
              s(:regopt))),
          s(:lvasgn, :method_type,
            s(:if,
              s(:nth_ref, 1),
              s(:str, "i"),
              s(:str, "c"))),
          s(:if,
            s(:nth_ref, 1),
            s(:lvasgn, :method_name,
              s(:nth_ref, 1)), nil),
          s(:lvasgn, :method_name,
            s(:if,
              s(:send,
                s(:str, ""), :respond_to?,
                s(:sym, :ord)),
              s(:block,
                s(:send,
                  s(:lvar, :method_name), :gsub,
                  s(:regexp,
                    s(:str, "\\W"),
                    s(:regopt))),
                s(:args),
                s(:send,
                  s(:str, "%%%02x"), :%,
                  s(:send,
                    s(:send,
                      s(:back_ref, :$&), :[],
                      s(:int, 0)), :ord))),
              s(:block,
                s(:send,
                  s(:lvar, :method_name), :gsub,
                  s(:regexp,
                    s(:str, "\\W"),
                    s(:regopt))),
                s(:args),
                s(:send,
                  s(:str, "%%%02x"), :%,
                  s(:send,
                    s(:back_ref, :$&), :[],
                    s(:int, 0)))))),
          s(:send,
            s(:const, nil, :File), :join,
            s(:send, nil, :class_path,
              s(:lvar, :klass_name)),
            s(:dstr,
              s(:begin,
                s(:lvar, :method_name)),
              s(:str, "-"),
              s(:begin,
                s(:lvar, :method_type)),
              s(:str, ".ri"))))),
      s(:def, :module_names,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :modules))),
      s(:def, :modules_hash,
        s(:args),
        s(:ivar, :@modules_hash)),
      s(:def, :page,
        s(:args,
          s(:arg, :name)),
        s(:block,
          s(:send,
            s(:send,
              s(:ivar, :@files_hash), :each_value), :find),
          s(:args,
            s(:arg, :file)),
          s(:and,
            s(:send,
              s(:lvar, :file), :text?),
            s(:send,
              s(:send,
                s(:lvar, :file), :page_name), :==,
              s(:lvar, :name))))),
      s(:def, :page_file,
        s(:args,
          s(:arg, :page_name)),
        s(:begin,
          s(:lvasgn, :file_name,
            s(:send,
              s(:send,
                s(:const, nil, :File), :basename,
                s(:lvar, :page_name)), :gsub,
              s(:str, "."),
              s(:str, "_"))),
          s(:send,
            s(:const, nil, :File), :join,
            s(:ivar, :@path),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:lvar, :page_name)),
            s(:dstr,
              s(:str, "page-"),
              s(:begin,
                s(:lvar, :file_name)),
              s(:str, ".ri"))))),
      s(:def, :remove_nodoc,
        s(:args,
          s(:arg, :all_hash)),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :all_hash), :keys), :each),
          s(:args,
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :context,
              s(:send,
                s(:lvar, :all_hash), :[],
                s(:lvar, :name))),
            s(:if,
              s(:send,
                s(:lvar, :context), :remove_from_documentation?),
              s(:send,
                s(:lvar, :all_hash), :delete,
                s(:lvar, :name)), nil)))),
      s(:def, :save,
        s(:args),
        s(:begin,
          s(:send, nil, :load_cache),
          s(:block,
            s(:send,
              s(:send, nil, :all_classes_and_modules), :each),
            s(:args,
              s(:arg, :klass)),
            s(:begin,
              s(:send, nil, :save_class,
                s(:lvar, :klass)),
              s(:block,
                s(:send,
                  s(:lvar, :klass), :each_method),
                s(:args,
                  s(:arg, :method)),
                s(:send, nil, :save_method,
                  s(:lvar, :klass),
                  s(:lvar, :method))),
              s(:block,
                s(:send,
                  s(:lvar, :klass), :each_attribute),
                s(:args,
                  s(:arg, :attribute)),
                s(:send, nil, :save_method,
                  s(:lvar, :klass),
                  s(:lvar, :attribute))))),
          s(:block,
            s(:send,
              s(:send, nil, :all_files), :each),
            s(:args,
              s(:arg, :file)),
            s(:send, nil, :save_page,
              s(:lvar, :file))),
          s(:send, nil, :save_cache))),
      s(:def, :save_cache,
        s(:args),
        s(:begin,
          s(:send, nil, :clean_cache_collection,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :ancestors))),
          s(:send, nil, :clean_cache_collection,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :attributes))),
          s(:send, nil, :clean_cache_collection,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :class_methods))),
          s(:send, nil, :clean_cache_collection,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :instance_methods))),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :modules)), :uniq!),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :modules)), :sort!),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :pages)), :uniq!),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :pages)), :sort!),
          s(:send,
            s(:ivar, :@cache), :[]=,
            s(:sym, :encoding),
            s(:ivar, :@encoding)),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :c_class_variables)), :merge!,
            s(:ivar, :@c_class_variables)),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :c_singleton_class_variables)), :merge!,
            s(:ivar, :@c_singleton_class_variables)),
          s(:if,
            s(:ivar, :@dry_run),
            s(:return), nil),
          s(:lvasgn, :marshal,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:ivar, :@cache))),
          s(:block,
            s(:send, nil, :open,
              s(:send, nil, :cache_path),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:lvar, :marshal))))),
      s(:def, :save_class,
        s(:args,
          s(:arg, :klass)),
        s(:begin,
          s(:lvasgn, :full_name,
            s(:send,
              s(:lvar, :klass), :full_name)),
          s(:if,
            s(:ivar, :@dry_run), nil,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send, nil, :class_path,
                s(:lvar, :full_name)))),
          s(:send,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:sym, :modules)), :<<,
            s(:lvar, :full_name)),
          s(:lvasgn, :path,
            s(:send, nil, :class_file,
              s(:lvar, :full_name))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :disk_klass,
                  s(:send, nil, :load_class,
                    s(:lvar, :full_name))),
                s(:lvasgn, :klass,
                  s(:send,
                    s(:lvar, :disk_klass), :merge,
                    s(:lvar, :klass)))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :MissingFileError)), nil, nil), nil)),
          s(:lvasgn, :ancestors,
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :klass), :direct_ancestors), :compact), :map),
              s(:args,
                s(:arg, :ancestor)),
              s(:if,
                s(:send,
                  s(:const, nil, :String), :===,
                  s(:lvar, :ancestor)),
                s(:lvar, :ancestor),
                s(:send,
                  s(:lvar, :ancestor), :full_name)))),
          s(:or_asgn,
            s(:send,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :ancestors)), :[],
              s(:lvar, :full_name)),
            s(:array)),
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :ancestors)), :[],
              s(:lvar, :full_name)), :concat,
            s(:lvar, :ancestors)),
          s(:lvasgn, :attribute_definitions,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :klass), :attributes), :map),
              s(:args,
                s(:arg, :attribute)),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :attribute), :definition)),
                s(:str, " "),
                s(:begin,
                  s(:send,
                    s(:lvar, :attribute), :name))))),
          s(:if,
            s(:send,
              s(:lvar, :attribute_definitions), :empty?), nil,
            s(:begin,
              s(:or_asgn,
                s(:send,
                  s(:send,
                    s(:ivar, :@cache), :[],
                    s(:sym, :attributes)), :[],
                  s(:lvar, :full_name)),
                s(:array)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@cache), :[],
                    s(:sym, :attributes)), :[],
                  s(:lvar, :full_name)), :concat,
                s(:lvar, :attribute_definitions)))),
          s(:lvasgn, :to_delete,
            s(:array)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :klass), :method_list), :empty?), nil,
            s(:begin,
              s(:or_asgn,
                s(:send,
                  s(:send,
                    s(:ivar, :@cache), :[],
                    s(:sym, :class_methods)), :[],
                  s(:lvar, :full_name)),
                s(:array)),
              s(:or_asgn,
                s(:send,
                  s(:send,
                    s(:ivar, :@cache), :[],
                    s(:sym, :instance_methods)), :[],
                  s(:lvar, :full_name)),
                s(:array)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :class_methods),
                  s(:lvasgn, :instance_methods)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :klass), :method_list), :partition),
                  s(:args,
                    s(:arg, :meth)),
                  s(:send,
                    s(:lvar, :meth), :singleton))),
              s(:lvasgn, :class_methods,
                s(:block,
                  s(:send,
                    s(:lvar, :class_methods), :map),
                  s(:args,
                    s(:arg, :method)),
                  s(:send,
                    s(:lvar, :method), :name))),
              s(:lvasgn, :instance_methods,
                s(:block,
                  s(:send,
                    s(:lvar, :instance_methods), :map),
                  s(:args,
                    s(:arg, :method)),
                  s(:send,
                    s(:lvar, :method), :name))),
              s(:lvasgn, :attribute_names,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :klass), :attributes), :map),
                  s(:args,
                    s(:arg, :attr)),
                  s(:send,
                    s(:lvar, :attr), :name))),
              s(:lvasgn, :old,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@cache), :[],
                      s(:sym, :class_methods)), :[],
                    s(:lvar, :full_name)), :-,
                  s(:lvar, :class_methods))),
              s(:send,
                s(:lvar, :to_delete), :concat,
                s(:block,
                  s(:send,
                    s(:lvar, :old), :map),
                  s(:args,
                    s(:arg, :method)),
                  s(:send, nil, :method_file,
                    s(:lvar, :full_name),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :full_name)),
                      s(:str, "::"),
                      s(:begin,
                        s(:lvar, :method)))))),
              s(:lvasgn, :old,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@cache), :[],
                        s(:sym, :instance_methods)), :[],
                      s(:lvar, :full_name)), :-,
                    s(:lvar, :instance_methods)), :-,
                  s(:lvar, :attribute_names))),
              s(:send,
                s(:lvar, :to_delete), :concat,
                s(:block,
                  s(:send,
                    s(:lvar, :old), :map),
                  s(:args,
                    s(:arg, :method)),
                  s(:send, nil, :method_file,
                    s(:lvar, :full_name),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :full_name)),
                      s(:str, "#"),
                      s(:begin,
                        s(:lvar, :method)))))),
              s(:send,
                s(:send,
                  s(:ivar, :@cache), :[],
                  s(:sym, :class_methods)), :[]=,
                s(:lvar, :full_name),
                s(:lvar, :class_methods)),
              s(:send,
                s(:send,
                  s(:ivar, :@cache), :[],
                  s(:sym, :instance_methods)), :[]=,
                s(:lvar, :full_name),
                s(:lvar, :instance_methods)))),
          s(:if,
            s(:ivar, :@dry_run),
            s(:return), nil),
          s(:send,
            s(:const, nil, :FileUtils), :rm_f,
            s(:lvar, :to_delete)),
          s(:lvasgn, :marshal,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :klass))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :path),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:lvar, :marshal))))),
      s(:def, :save_method,
        s(:args,
          s(:arg, :klass),
          s(:arg, :method)),
        s(:begin,
          s(:lvasgn, :full_name,
            s(:send,
              s(:lvar, :klass), :full_name)),
          s(:if,
            s(:ivar, :@dry_run), nil,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send, nil, :class_path,
                s(:lvar, :full_name)))),
          s(:lvasgn, :cache,
            s(:if,
              s(:send,
                s(:lvar, :method), :singleton),
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :class_methods)),
              s(:send,
                s(:ivar, :@cache), :[],
                s(:sym, :instance_methods)))),
          s(:or_asgn,
            s(:send,
              s(:lvar, :cache), :[],
              s(:lvar, :full_name)),
            s(:array)),
          s(:send,
            s(:send,
              s(:lvar, :cache), :[],
              s(:lvar, :full_name)), :<<,
            s(:send,
              s(:lvar, :method), :name)),
          s(:if,
            s(:ivar, :@dry_run),
            s(:return), nil),
          s(:lvasgn, :marshal,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :method))),
          s(:block,
            s(:send, nil, :open,
              s(:send, nil, :method_file,
                s(:lvar, :full_name),
                s(:send,
                  s(:lvar, :method), :full_name)),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:lvar, :marshal))))),
      s(:def, :save_page,
        s(:args,
          s(:arg, :page)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :page), :text?), nil,
            s(:return)),
          s(:lvasgn, :path,
            s(:send, nil, :page_file,
              s(:send,
                s(:lvar, :page), :full_name))),
          s(:if,
            s(:ivar, :@dry_run), nil,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :dirname,
                s(:lvar, :path)))),
          s(:or_asgn,
            s(:send,
              s(:send, nil, :cache), :[],
              s(:sym, :pages)),
            s(:array)),
          s(:send,
            s(:send,
              s(:send, nil, :cache), :[],
              s(:sym, :pages)), :<<,
            s(:send,
              s(:lvar, :page), :full_name)),
          s(:if,
            s(:ivar, :@dry_run),
            s(:return), nil),
          s(:lvasgn, :marshal,
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :page))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :path),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:lvar, :marshal))))),
      s(:def, :source,
        s(:args),
        s(:case,
          s(:send, nil, :type),
          s(:when,
            s(:sym, :gem),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, ".."),
                s(:ivar, :@path)))),
          s(:when,
            s(:sym, :home),
            s(:str, "home")),
          s(:when,
            s(:sym, :site),
            s(:str, "site")),
          s(:when,
            s(:sym, :system),
            s(:str, "ruby")),
          s(:ivar, :@path))),
      s(:def, :title,
        s(:args),
        s(:send,
          s(:ivar, :@cache), :[],
          s(:sym, :title))),
      s(:def, :title=,
        s(:args,
          s(:arg, :title)),
        s(:send,
          s(:ivar, :@cache), :[]=,
          s(:sym, :title),
          s(:lvar, :title))),
      s(:def, :unique_classes,
        s(:args),
        s(:ivar, :@unique_classes)),
      s(:def, :unique_classes_and_modules,
        s(:args),
        s(:send,
          s(:ivar, :@unique_classes), :+,
          s(:ivar, :@unique_modules))),
      s(:def, :unique_modules,
        s(:args),
        s(:ivar, :@unique_modules)))))
