s(:class,
  s(:const,
    s(:const,
      s(:const, nil, :RDoc), :Context), :Section), nil,
  s(:begin,
    s(:send, nil, :include,
      s(:const,
        s(:const, nil, :RDoc), :Text)),
    s(:casgn, nil, :MARSHAL_VERSION,
      s(:int, 0)),
    s(:send, nil, :attr_reader,
      s(:sym, :comment)),
    s(:send, nil, :attr_reader,
      s(:sym, :comments)),
    s(:send, nil, :attr_reader,
      s(:sym, :parent)),
    s(:send, nil, :attr_reader,
      s(:sym, :title)),
    s(:cvasgn, :@@sequence,
      s(:str, "SEC00000")),
    s(:def, :initialize,
      s(:args,
        s(:arg, :parent),
        s(:arg, :title),
        s(:arg, :comment)),
      s(:begin,
        s(:ivasgn, :@parent,
          s(:lvar, :parent)),
        s(:ivasgn, :@title,
          s(:if,
            s(:lvar, :title),
            s(:send,
              s(:lvar, :title), :strip),
            s(:lvar, :title))),
        s(:send,
          s(:cvar, :@@sequence), :succ!),
        s(:ivasgn, :@sequence,
          s(:send,
            s(:cvar, :@@sequence), :dup)),
        s(:ivasgn, :@comments,
          s(:array)),
        s(:send, nil, :add_comment,
          s(:lvar, :comment)))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:send,
          s(:send,
            s(:self), :class), :===,
          s(:lvar, :other)),
        s(:send,
          s(:ivar, :@title), :==,
          s(:send,
            s(:lvar, :other), :title)))),
    s(:def, :add_comment,
      s(:args,
        s(:arg, :comment)),
      s(:begin,
        s(:lvasgn, :comment,
          s(:send, nil, :extract_comment,
            s(:lvar, :comment))),
        s(:if,
          s(:send,
            s(:lvar, :comment), :empty?),
          s(:return), nil),
        s(:case,
          s(:lvar, :comment),
          s(:when,
            s(:const,
              s(:const, nil, :RDoc), :Comment),
            s(:send,
              s(:ivar, :@comments), :<<,
              s(:lvar, :comment))),
          s(:when,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :Document),
            s(:send,
              s(:ivar, :@comments), :concat,
              s(:send,
                s(:lvar, :comment), :parts))),
          s(:when,
            s(:const, nil, :Array),
            s(:send,
              s(:ivar, :@comments), :concat,
              s(:lvar, :comment))),
          s(:send, nil, :raise,
            s(:const, nil, :TypeError),
            s(:dstr,
              s(:str, "unknown comment type: "),
              s(:begin,
                s(:send,
                  s(:lvar, :comment), :inspect))))))),
    s(:def, :aref,
      s(:args),
      s(:begin,
        s(:lvasgn, :title,
          s(:or,
            s(:ivar, :@title),
            s(:str, "[untitled]"))),
        s(:send,
          s(:send,
            s(:send,
              s(:const, nil, :CGI), :escape,
              s(:lvar, :title)), :gsub,
            s(:str, "%"),
            s(:str, "-")), :sub,
          s(:regexp,
            s(:str, "^-"),
            s(:regopt)),
          s(:str, "")))),
    s(:def, :extract_comment,
      s(:args,
        s(:arg, :comment)),
      s(:case,
        s(:lvar, :comment),
        s(:when,
          s(:const, nil, :Array),
          s(:block,
            s(:send,
              s(:lvar, :comment), :map),
            s(:args,
              s(:arg, :c)),
            s(:send, nil, :extract_comment,
              s(:lvar, :c)))),
        s(:when,
          s(:nil),
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :Comment), :new,
            s(:str, ""))),
        s(:when,
          s(:const,
            s(:const, nil, :RDoc), :Comment),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :comment), :text), :=~,
                s(:regexp,
                  s(:str, "^#[ \\t]*:section:.*\\n"),
                  s(:regopt))),
              s(:begin,
                s(:lvasgn, :start,
                  s(:back_ref, :$`)),
                s(:lvasgn, :rest,
                  s(:back_ref, :$')),
                s(:send,
                  s(:lvar, :comment), :text=,
                  s(:if,
                    s(:send,
                      s(:lvar, :start), :empty?),
                    s(:lvar, :rest),
                    s(:send,
                      s(:lvar, :rest), :sub,
                      s(:regexp,
                        s(:begin,
                          s(:send,
                            s(:lvar, :start), :chomp)),
                        s(:str, "\\Z"),
                        s(:regopt)),
                      s(:str, ""))))), nil),
            s(:lvar, :comment))),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Document),
          s(:lvar, :comment)),
        s(:send, nil, :raise,
          s(:const, nil, :TypeError),
          s(:dstr,
            s(:str, "unknown comment "),
            s(:begin,
              s(:send,
                s(:lvar, :comment), :inspect)))))),
    s(:def, :inspect,
      s(:args),
      s(:send,
        s(:str, "#<%s:0x%x %p>"), :%,
        s(:array,
          s(:send,
            s(:self), :class),
          s(:send, nil, :object_id),
          s(:send, nil, :title)))),
    s(:def, :in_files,
      s(:args),
      s(:begin,
        s(:if,
          s(:send,
            s(:ivar, :@comments), :empty?),
          s(:return,
            s(:array)), nil),
        s(:case,
          s(:ivar, :@comments),
          s(:when,
            s(:const, nil, :Array),
            s(:block,
              s(:send,
                s(:ivar, :@comments), :map),
              s(:args,
                s(:arg, :comment)),
              s(:send,
                s(:lvar, :comment), :file))),
          s(:when,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :Document),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@comment), :parts), :map),
              s(:args,
                s(:arg, :document)),
              s(:send,
                s(:lvar, :document), :file))),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :RDoc), :Error),
            s(:dstr,
              s(:str, "BUG: unknown comment class "),
              s(:begin,
                s(:send,
                  s(:ivar, :@comments), :class))))))),
    s(:def, :marshal_dump,
      s(:args),
      s(:array,
        s(:const, nil, :MARSHAL_VERSION),
        s(:ivar, :@title),
        s(:send, nil, :parse))),
    s(:def, :marshal_load,
      s(:args,
        s(:arg, :array)),
      s(:begin,
        s(:ivasgn, :@parent,
          s(:nil)),
        s(:ivasgn, :@title,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 1))),
        s(:ivasgn, :@comments,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 2))))),
    s(:def, :parse,
      s(:args),
      s(:case,
        s(:ivar, :@comments),
        s(:when,
          s(:const, nil, :String),
          s(:zsuper)),
        s(:when,
          s(:const, nil, :Array),
          s(:begin,
            s(:lvasgn, :docs,
              s(:block,
                s(:send,
                  s(:ivar, :@comments), :map),
                s(:args,
                  s(:arg, :comment),
                  s(:arg, :location)),
                s(:begin,
                  s(:lvasgn, :doc,
                    s(:super,
                      s(:lvar, :comment))),
                  s(:if,
                    s(:lvar, :location),
                    s(:send,
                      s(:lvar, :doc), :file=,
                      s(:lvar, :location)), nil),
                  s(:lvar, :doc)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :Document), :new,
              s(:splat,
                s(:lvar, :docs))))),
        s(:when,
          s(:const,
            s(:const, nil, :RDoc), :Comment),
          s(:begin,
            s(:lvasgn, :doc,
              s(:super,
                s(:send,
                  s(:ivar, :@comments), :text),
                s(:send,
                  s(:send, nil, :comments), :format))),
            s(:send,
              s(:lvar, :doc), :file=,
              s(:send,
                s(:ivar, :@comments), :location)),
            s(:lvar, :doc))),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Document),
          s(:return,
            s(:ivar, :@comments))),
        s(:send, nil, :raise,
          s(:const, nil, :ArgumentError),
          s(:dstr,
            s(:str, "unknown comment class "),
            s(:begin,
              s(:send,
                s(:send, nil, :comments), :class)))))),
    s(:def, :plain_html,
      s(:args),
      s(:or,
        s(:ivar, :@title),
        s(:str, "Top Section"))),
    s(:def, :remove_comment,
      s(:args,
        s(:arg, :comment)),
      s(:begin,
        s(:if,
          s(:send,
            s(:ivar, :@comments), :empty?),
          s(:return), nil),
        s(:case,
          s(:ivar, :@comments),
          s(:when,
            s(:const, nil, :Array),
            s(:block,
              s(:send,
                s(:ivar, :@comments), :delete_if),
              s(:args,
                s(:arg, :my_comment)),
              s(:send,
                s(:send,
                  s(:lvar, :my_comment), :file), :==,
                s(:send,
                  s(:lvar, :comment), :file)))),
          s(:when,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :Document),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@comments), :parts), :delete_if),
              s(:args,
                s(:arg, :document)),
              s(:send,
                s(:send,
                  s(:lvar, :document), :file), :==,
                s(:send,
                  s(:send,
                    s(:lvar, :comment), :file), :name)))),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :RDoc), :Error),
            s(:dstr,
              s(:str, "BUG: unknown comment class "),
              s(:begin,
                s(:send,
                  s(:ivar, :@comments), :class))))))),
    s(:def, :sequence,
      s(:args),
      s(:begin,
        s(:send, nil, :warn,
          s(:str, "RDoc::Context::Section#sequence is deprecated, use #aref")),
        s(:ivar, :@sequence)))))
