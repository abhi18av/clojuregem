s(:class,
  s(:const,
    s(:const, nil, :RDoc), :Attr),
  s(:const,
    s(:const, nil, :RDoc), :MethodAttr),
  s(:begin,
    s(:casgn, nil, :MARSHAL_VERSION,
      s(:int, 3)),
    s(:send, nil, :attr_accessor,
      s(:sym, :rw)),
    s(:def, :initialize,
      s(:args,
        s(:arg, :text),
        s(:arg, :name),
        s(:arg, :rw),
        s(:arg, :comment),
        s(:optarg, :singleton,
          s(:false))),
      s(:begin,
        s(:super,
          s(:lvar, :text),
          s(:lvar, :name)),
        s(:ivasgn, :@rw,
          s(:lvar, :rw)),
        s(:ivasgn, :@singleton,
          s(:lvar, :singleton)),
        s(:send,
          s(:self), :comment=,
          s(:lvar, :comment)))),
    s(:def, :==,
      s(:args,
        s(:arg, :other)),
      s(:and,
        s(:and,
          s(:and,
            s(:send,
              s(:send,
                s(:self), :class), :==,
              s(:send,
                s(:lvar, :other), :class)),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:send,
                s(:lvar, :other), :name))),
          s(:send,
            s(:send,
              s(:self), :rw), :==,
            s(:send,
              s(:lvar, :other), :rw))),
        s(:send,
          s(:send,
            s(:self), :singleton), :==,
          s(:send,
            s(:lvar, :other), :singleton)))),
    s(:def, :add_alias,
      s(:args,
        s(:arg, :an_alias),
        s(:arg, :context)),
      s(:begin,
        s(:lvasgn, :new_attr,
          s(:send,
            s(:send,
              s(:self), :class), :new,
            s(:send,
              s(:self), :text),
            s(:send,
              s(:lvar, :an_alias), :new_name),
            s(:send,
              s(:self), :rw),
            s(:send,
              s(:self), :comment),
            s(:send,
              s(:self), :singleton))),
        s(:send,
          s(:lvar, :new_attr), :record_location,
          s(:send,
            s(:lvar, :an_alias), :file)),
        s(:send,
          s(:lvar, :new_attr), :visibility=,
          s(:send,
            s(:self), :visibility)),
        s(:send,
          s(:lvar, :new_attr), :is_alias_for=,
          s(:self)),
        s(:send,
          s(:ivar, :@aliases), :<<,
          s(:lvar, :new_attr)),
        s(:send,
          s(:lvar, :context), :add_attribute,
          s(:lvar, :new_attr)),
        s(:lvar, :new_attr))),
    s(:def, :aref_prefix,
      s(:args),
      s(:str, "attribute")),
    s(:def, :calls_super,
      s(:args),
      s(:false)),
    s(:def, :definition,
      s(:args),
      s(:case,
        s(:ivar, :@rw),
        s(:when,
          s(:str, "RW"),
          s(:str, "attr_accessor")),
        s(:when,
          s(:str, "R"),
          s(:str, "attr_reader")),
        s(:when,
          s(:str, "W"),
          s(:str, "attr_writer")), nil)),
    s(:def, :inspect,
      s(:args),
      s(:begin,
        s(:lvasgn, :alias_for,
          s(:if,
            s(:ivar, :@is_alias_for),
            s(:dstr,
              s(:str, " (alias for "),
              s(:begin,
                s(:send,
                  s(:ivar, :@is_alias_for), :name)),
              s(:str, ")")),
            s(:nil))),
        s(:lvasgn, :visibility,
          s(:send,
            s(:self), :visibility)),
        s(:if,
          s(:send, nil, :force_documentation),
          s(:lvasgn, :visibility,
            s(:dstr,
              s(:str, "forced "),
              s(:begin,
                s(:lvar, :visibility)))), nil),
        s(:send,
          s(:str, "#<%s:0x%x %s %s (%s)%s>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:send, nil, :object_id),
            s(:send, nil, :full_name),
            s(:send, nil, :rw),
            s(:lvar, :visibility),
            s(:lvar, :alias_for))))),
    s(:def, :marshal_dump,
      s(:args),
      s(:array,
        s(:const, nil, :MARSHAL_VERSION),
        s(:ivar, :@name),
        s(:send, nil, :full_name),
        s(:ivar, :@rw),
        s(:ivar, :@visibility),
        s(:send, nil, :parse,
          s(:ivar, :@comment)),
        s(:send, nil, :singleton),
        s(:send,
          s(:ivar, :@file), :relative_name),
        s(:send,
          s(:ivar, :@parent), :full_name),
        s(:send,
          s(:ivar, :@parent), :class),
        s(:send,
          s(:ivar, :@section), :title))),
    s(:def, :marshal_load,
      s(:args,
        s(:arg, :array)),
      s(:begin,
        s(:send, nil, :initialize_visibility),
        s(:ivasgn, :@aliases,
          s(:array)),
        s(:ivasgn, :@parent,
          s(:nil)),
        s(:ivasgn, :@parent_name,
          s(:nil)),
        s(:ivasgn, :@parent_class,
          s(:nil)),
        s(:ivasgn, :@section,
          s(:nil)),
        s(:ivasgn, :@file,
          s(:nil)),
        s(:lvasgn, :version,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 0))),
        s(:ivasgn, :@name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 1))),
        s(:ivasgn, :@full_name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 2))),
        s(:ivasgn, :@rw,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 3))),
        s(:ivasgn, :@visibility,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 4))),
        s(:ivasgn, :@comment,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 5))),
        s(:ivasgn, :@singleton,
          s(:or,
            s(:send,
              s(:lvar, :array), :[],
              s(:int, 6)),
            s(:false))),
        s(:ivasgn, :@parent_name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 8))),
        s(:ivasgn, :@parent_class,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 9))),
        s(:ivasgn, :@section_title,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 10))),
        s(:if,
          s(:send,
            s(:lvar, :version), :>,
            s(:int, 1)),
          s(:ivasgn, :@file,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :TopLevel), :new,
              s(:send,
                s(:lvar, :array), :[],
                s(:int, 7)))), nil),
        s(:or_asgn,
          s(:ivasgn, :@parent_name),
          s(:send,
            s(:send,
              s(:ivar, :@full_name), :split,
              s(:str, "#"),
              s(:int, 2)), :first)))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:block,
        s(:send,
          s(:lvar, :q), :group,
          s(:int, 2),
          s(:dstr,
            s(:str, "["),
            s(:begin,
              s(:send,
                s(:send,
                  s(:self), :class), :name)),
            s(:str, " "),
            s(:begin,
              s(:send, nil, :full_name)),
            s(:str, " "),
            s(:begin,
              s(:send, nil, :rw)),
            s(:str, " "),
            s(:begin,
              s(:send, nil, :visibility))),
          s(:str, "]")),
        s(:args),
        s(:if,
          s(:send,
            s(:send, nil, :comment), :empty?), nil,
          s(:begin,
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "comment:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :pp,
              s(:ivar, :@comment)))))),
    s(:def, :to_s,
      s(:args),
      s(:dstr,
        s(:begin,
          s(:send, nil, :definition)),
        s(:str, " "),
        s(:begin,
          s(:send, nil, :name)),
        s(:str, " in: "),
        s(:begin,
          s(:send, nil, :parent)))),
    s(:def, :token_stream,
      s(:args), nil)))
