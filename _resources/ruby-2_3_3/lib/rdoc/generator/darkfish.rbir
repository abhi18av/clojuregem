s(:begin,
  s(:send, nil, :require,
    s(:str, "erb")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send, nil, :require,
    s(:str, "pathname")),
  s(:send, nil, :require,
    s(:str, "rdoc/generator/markup")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Generator), :Darkfish), nil,
    s(:begin,
      s(:send,
        s(:const,
          s(:const, nil, :RDoc), :RDoc), :add_generator,
        s(:self)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :ERB), :Util)),
      s(:casgn, nil, :BUILTIN_STYLE_ITEMS,
        s(:array,
          s(:str, "css/fonts.css"),
          s(:str, "fonts/Lato-Light.ttf"),
          s(:str, "fonts/Lato-LightItalic.ttf"),
          s(:str, "fonts/Lato-Regular.ttf"),
          s(:str, "fonts/Lato-RegularItalic.ttf"),
          s(:str, "fonts/SourceCodePro-Bold.ttf"),
          s(:str, "fonts/SourceCodePro-Regular.ttf"),
          s(:str, "css/rdoc.css"))),
      s(:casgn, nil, :GENERATOR_DIR,
        s(:send,
          s(:const, nil, :File), :join,
          s(:str, "rdoc"),
          s(:str, "generator"))),
      s(:casgn, nil, :VERSION,
        s(:str, "3")),
      s(:casgn, nil, :DESCRIPTION,
        s(:str, "HTML generator, written by Michael Granger")),
      s(:send, nil, :attr_accessor,
        s(:sym, :asset_rel_path)),
      s(:send, nil, :attr_reader,
        s(:sym, :base_dir)),
      s(:send, nil, :attr_reader,
        s(:sym, :classes)),
      s(:send, nil, :attr_accessor,
        s(:sym, :dry_run)),
      s(:send, nil, :attr_accessor,
        s(:sym, :file_output)),
      s(:send, nil, :attr_reader,
        s(:sym, :files)),
      s(:send, nil, :attr_reader,
        s(:sym, :json_index)),
      s(:send, nil, :attr_reader,
        s(:sym, :methods)),
      s(:send, nil, :attr_reader,
        s(:sym, :modsort)),
      s(:send, nil, :attr_reader,
        s(:sym, :store)),
      s(:send, nil, :attr_reader,
        s(:sym, :template_dir)),
      s(:send, nil, :attr_reader,
        s(:sym, :outputdir)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :store),
          s(:arg, :options)),
        s(:begin,
          s(:ivasgn, :@store,
            s(:lvar, :store)),
          s(:ivasgn, :@options,
            s(:lvar, :options)),
          s(:ivasgn, :@asset_rel_path,
            s(:str, "")),
          s(:ivasgn, :@base_dir,
            s(:send,
              s(:send,
                s(:const, nil, :Pathname), :pwd), :expand_path)),
          s(:ivasgn, :@dry_run,
            s(:send,
              s(:ivar, :@options), :dry_run)),
          s(:ivasgn, :@file_output,
            s(:true)),
          s(:ivasgn, :@template_dir,
            s(:send,
              s(:const, nil, :Pathname), :new,
              s(:send,
                s(:lvar, :options), :template_dir))),
          s(:ivasgn, :@template_cache,
            s(:hash)),
          s(:ivasgn, :@classes,
            s(:nil)),
          s(:ivasgn, :@context,
            s(:nil)),
          s(:ivasgn, :@files,
            s(:nil)),
          s(:ivasgn, :@methods,
            s(:nil)),
          s(:ivasgn, :@modsort,
            s(:nil)),
          s(:ivasgn, :@json_index,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Generator), :JsonIndex), :new,
              s(:self),
              s(:lvar, :options))))),
      s(:def, :debug_msg,
        s(:args,
          s(:restarg, :msg)),
        s(:begin,
          s(:if,
            s(:gvar, :$DEBUG_RDOC), nil,
            s(:return)),
          s(:send,
            s(:gvar, :$stderr), :puts,
            s(:splat,
              s(:lvar, :msg))))),
      s(:def, :class_dir,
        s(:args),
        s(:nil)),
      s(:def, :file_dir,
        s(:args),
        s(:nil)),
      s(:def, :gen_sub_directories,
        s(:args),
        s(:send,
          s(:ivar, :@outputdir), :mkpath)),
      s(:def, :write_style_sheet,
        s(:args),
        s(:begin,
          s(:send, nil, :debug_msg,
            s(:str, "Copying static files")),
          s(:lvasgn, :options,
            s(:hash,
              s(:pair,
                s(:sym, :verbose),
                s(:gvar, :$DEBUG_RDOC)),
              s(:pair,
                s(:sym, :noop),
                s(:ivar, :@dry_run)))),
          s(:block,
            s(:send,
              s(:const, nil, :BUILTIN_STYLE_ITEMS), :each),
            s(:args,
              s(:arg, :item)),
            s(:send, nil, :install_rdoc_static_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:lvar, :item)),
              s(:dstr,
                s(:str, "./"),
                s(:begin,
                  s(:lvar, :item))),
              s(:lvar, :options))),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@options), :template_stylesheets), :each),
            s(:args,
              s(:arg, :stylesheet)),
            s(:send,
              s(:const, nil, :FileUtils), :cp,
              s(:lvar, :stylesheet),
              s(:str, "."),
              s(:lvar, :options))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Dir), :[],
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:ivar, :@template_dir), :+,
                      s(:str, "{js,images}/**/*"))), :to_s)), :each),
            s(:args,
              s(:arg, :path)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :File), :directory?,
                  s(:lvar, :path)),
                s(:next), nil),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:lvar, :path)), :=~,
                  s(:regexp,
                    s(:str, "^\\."),
                    s(:regopt))),
                s(:next), nil),
              s(:lvasgn, :dst,
                s(:send,
                  s(:send,
                    s(:const, nil, :Pathname), :new,
                    s(:lvar, :path)), :relative_path_from,
                  s(:ivar, :@template_dir))),
              s(:send, nil, :install_rdoc_static_file,
                s(:send,
                  s(:ivar, :@template_dir), :+,
                  s(:lvar, :path)),
                s(:lvar, :dst),
                s(:lvar, :options)))))),
      s(:def, :generate,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:send, nil, :write_style_sheet),
            s(:send, nil, :generate_index),
            s(:send, nil, :generate_class_files),
            s(:send, nil, :generate_file_files),
            s(:send, nil, :generate_table_of_contents),
            s(:send,
              s(:ivar, :@json_index), :generate),
            s(:send,
              s(:ivar, :@json_index), :generate_gzipped),
            s(:send, nil, :copy_static)),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:send, nil, :debug_msg,
                s(:send,
                  s(:str, "%s: %s\n  %s"), :%,
                  s(:array,
                    s(:send,
                      s(:send,
                        s(:lvar, :e), :class), :name),
                    s(:send,
                      s(:lvar, :e), :message),
                    s(:send,
                      s(:send,
                        s(:lvar, :e), :backtrace), :join,
                      s(:str, "\n  "))))),
              s(:send, nil, :raise))), nil)),
      s(:def, :copy_static,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@options), :static_path), :empty?),
            s(:return), nil),
          s(:lvasgn, :fu_options,
            s(:hash,
              s(:pair,
                s(:sym, :verbose),
                s(:gvar, :$DEBUG_RDOC)),
              s(:pair,
                s(:sym, :noop),
                s(:ivar, :@dry_run)))),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@options), :static_path), :each),
            s(:args,
              s(:arg, :path)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :File), :directory?,
                  s(:lvar, :path)), nil,
                s(:begin,
                  s(:send,
                    s(:const, nil, :FileUtils), :install,
                    s(:lvar, :path),
                    s(:ivar, :@outputdir),
                    s(:send,
                      s(:lvar, :fu_options), :merge,
                      s(:hash,
                        s(:pair,
                          s(:sym, :mode),
                          s(:int, 420))))),
                  s(:next))),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:lvar, :path)),
                s(:args),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Dir), :[],
                      s(:send,
                        s(:const, nil, :File), :join,
                        s(:str, "**"),
                        s(:str, "*"))), :each),
                  s(:args,
                    s(:arg, :entry)),
                  s(:begin,
                    s(:lvasgn, :dest_file,
                      s(:send,
                        s(:ivar, :@outputdir), :+,
                        s(:lvar, :entry))),
                    s(:if,
                      s(:send,
                        s(:const, nil, :File), :directory?,
                        s(:lvar, :entry)),
                      s(:send,
                        s(:const, nil, :FileUtils), :mkdir_p,
                        s(:lvar, :entry),
                        s(:lvar, :fu_options)),
                      s(:send,
                        s(:const, nil, :FileUtils), :install,
                        s(:lvar, :entry),
                        s(:lvar, :dest_file),
                        s(:send,
                          s(:lvar, :fu_options), :merge,
                          s(:hash,
                            s(:pair,
                              s(:sym, :mode),
                              s(:int, 420))))))))))))),
      s(:def, :get_sorted_module_list,
        s(:args,
          s(:arg, :classes)),
        s(:send,
          s(:block,
            s(:send,
              s(:lvar, :classes), :select),
            s(:args,
              s(:arg, :klass)),
            s(:send,
              s(:lvar, :klass), :display?)), :sort)),
      s(:def, :generate_index,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:lvasgn, :template_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "index.rhtml"))),
            s(:if,
              s(:send,
                s(:lvar, :template_file), :exist?), nil,
              s(:return)),
            s(:send, nil, :debug_msg,
              s(:str, "Rendering the index page...")),
            s(:lvasgn, :out_file,
              s(:send,
                s(:send,
                  s(:ivar, :@base_dir), :+,
                  s(:send,
                    s(:ivar, :@options), :op_dir)), :+,
                s(:str, "index.html"))),
            s(:lvasgn, :rel_prefix,
              s(:send,
                s(:ivar, :@outputdir), :relative_path_from,
                s(:send,
                  s(:lvar, :out_file), :dirname))),
            s(:lvasgn, :search_index_rel_prefix,
              s(:lvar, :rel_prefix)),
            s(:if,
              s(:ivar, :@file_output),
              s(:op_asgn,
                s(:lvasgn, :search_index_rel_prefix), :+,
                s(:ivar, :@asset_rel_path)), nil),
            s(:lvasgn, :asset_rel_prefix,
              s(:lvasgn, :asset_rel_prefix,
                s(:send,
                  s(:lvar, :rel_prefix), :+,
                  s(:ivar, :@asset_rel_path)))),
            s(:ivasgn, :@title,
              s(:send,
                s(:ivar, :@options), :title)),
            s(:block,
              s(:send, nil, :render_template,
                s(:lvar, :template_file),
                s(:lvar, :out_file)),
              s(:args,
                s(:arg, :io)),
              s(:send, nil, :binding))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Error), :new,
                  s(:dstr,
                    s(:str, "error generating index.html: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :generate_class,
        s(:args,
          s(:arg, :klass),
          s(:optarg, :template_file,
            s(:nil))),
        s(:begin,
          s(:send, nil, :setup),
          s(:lvasgn, :current,
            s(:lvar, :klass)),
          s(:or_asgn,
            s(:lvasgn, :template_file),
            s(:send,
              s(:ivar, :@template_dir), :+,
              s(:str, "class.rhtml"))),
          s(:send, nil, :debug_msg,
            s(:send,
              s(:str, "  working on %s (%s)"), :%,
              s(:array,
                s(:send,
                  s(:lvar, :klass), :full_name),
                s(:send,
                  s(:lvar, :klass), :path)))),
          s(:lvasgn, :out_file,
            s(:send,
              s(:ivar, :@outputdir), :+,
              s(:send,
                s(:lvar, :klass), :path))),
          s(:lvasgn, :rel_prefix,
            s(:send,
              s(:ivar, :@outputdir), :relative_path_from,
              s(:send,
                s(:lvar, :out_file), :dirname))),
          s(:lvasgn, :search_index_rel_prefix,
            s(:lvar, :rel_prefix)),
          s(:if,
            s(:ivar, :@file_output),
            s(:op_asgn,
              s(:lvasgn, :search_index_rel_prefix), :+,
              s(:ivar, :@asset_rel_path)), nil),
          s(:lvasgn, :asset_rel_prefix,
            s(:lvasgn, :asset_rel_prefix,
              s(:send,
                s(:lvar, :rel_prefix), :+,
                s(:ivar, :@asset_rel_path)))),
          s(:lvasgn, :svninfo,
            s(:lvasgn, :svninfo,
              s(:send, nil, :get_svninfo,
                s(:lvar, :current)))),
          s(:ivasgn, :@title,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :klass), :type)),
              s(:str, " "),
              s(:begin,
                s(:send,
                  s(:lvar, :klass), :full_name)),
              s(:str, " - "),
              s(:begin,
                s(:send,
                  s(:ivar, :@options), :title)))),
          s(:send, nil, :debug_msg,
            s(:dstr,
              s(:str, "  rendering "),
              s(:begin,
                s(:lvar, :out_file)))),
          s(:block,
            s(:send, nil, :render_template,
              s(:lvar, :template_file),
              s(:lvar, :out_file)),
            s(:args,
              s(:arg, :io)),
            s(:send, nil, :binding)))),
      s(:def, :generate_class_files,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:lvasgn, :template_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "class.rhtml"))),
            s(:if,
              s(:send,
                s(:lvar, :template_file), :exist?), nil,
              s(:lvasgn, :template_file,
                s(:send,
                  s(:ivar, :@template_dir), :+,
                  s(:str, "classpage.rhtml")))),
            s(:if,
              s(:send,
                s(:lvar, :template_file), :exist?), nil,
              s(:return)),
            s(:send, nil, :debug_msg,
              s(:dstr,
                s(:str, "Generating class documentation in "),
                s(:begin,
                  s(:ivar, :@outputdir)))),
            s(:lvasgn, :current,
              s(:nil)),
            s(:block,
              s(:send,
                s(:ivar, :@classes), :each),
              s(:args,
                s(:arg, :klass)),
              s(:begin,
                s(:lvasgn, :current,
                  s(:lvar, :klass)),
                s(:send, nil, :generate_class,
                  s(:lvar, :klass),
                  s(:lvar, :template_file))))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Error), :new,
                  s(:dstr,
                    s(:str, "error generating "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :current), :path)),
                    s(:str, ": "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :generate_file_files,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:lvasgn, :page_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "page.rhtml"))),
            s(:lvasgn, :fileinfo_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "fileinfo.rhtml"))),
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :page_file), :exist?),
                s(:send,
                  s(:lvar, :fileinfo_file), :exist?)), nil,
              s(:lvasgn, :filepage_file,
                s(:send,
                  s(:ivar, :@template_dir), :+,
                  s(:str, "filepage.rhtml")))),
            s(:if,
              s(:or,
                s(:or,
                  s(:send,
                    s(:lvar, :page_file), :exist?),
                  s(:send,
                    s(:lvar, :fileinfo_file), :exist?)),
                s(:send,
                  s(:lvar, :filepage_file), :exist?)), nil,
              s(:return)),
            s(:send, nil, :debug_msg,
              s(:dstr,
                s(:str, "Generating file documentation in "),
                s(:begin,
                  s(:ivar, :@outputdir)))),
            s(:lvasgn, :out_file,
              s(:nil)),
            s(:lvasgn, :current,
              s(:nil)),
            s(:block,
              s(:send,
                s(:ivar, :@files), :each),
              s(:args,
                s(:arg, :file)),
              s(:begin,
                s(:lvasgn, :current,
                  s(:lvar, :file)),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:lvar, :file), :text?),
                    s(:send,
                      s(:lvar, :page_file), :exist?)),
                  s(:begin,
                    s(:send, nil, :generate_page,
                      s(:lvar, :file)),
                    s(:next)), nil),
                s(:lvasgn, :template_file,
                  s(:nil)),
                s(:lvasgn, :out_file,
                  s(:send,
                    s(:ivar, :@outputdir), :+,
                    s(:send,
                      s(:lvar, :file), :path))),
                s(:send, nil, :debug_msg,
                  s(:send,
                    s(:str, "  working on %s (%s)"), :%,
                    s(:array,
                      s(:send,
                        s(:lvar, :file), :full_name),
                      s(:lvar, :out_file)))),
                s(:lvasgn, :rel_prefix,
                  s(:send,
                    s(:ivar, :@outputdir), :relative_path_from,
                    s(:send,
                      s(:lvar, :out_file), :dirname))),
                s(:lvasgn, :search_index_rel_prefix,
                  s(:lvar, :rel_prefix)),
                s(:if,
                  s(:ivar, :@file_output),
                  s(:op_asgn,
                    s(:lvasgn, :search_index_rel_prefix), :+,
                    s(:ivar, :@asset_rel_path)), nil),
                s(:lvasgn, :asset_rel_prefix,
                  s(:lvasgn, :asset_rel_prefix,
                    s(:send,
                      s(:lvar, :rel_prefix), :+,
                      s(:ivar, :@asset_rel_path)))),
                s(:if,
                  s(:lvar, :filepage_file), nil,
                  s(:if,
                    s(:send,
                      s(:lvar, :file), :text?),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:lvar, :page_file), :exist?), nil,
                        s(:next)),
                      s(:lvasgn, :template_file,
                        s(:lvar, :page_file)),
                      s(:ivasgn, :@title,
                        s(:send,
                          s(:lvar, :file), :page_name))),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:lvar, :fileinfo_file), :exist?), nil,
                        s(:next)),
                      s(:lvasgn, :template_file,
                        s(:lvar, :fileinfo_file)),
                      s(:ivasgn, :@title,
                        s(:dstr,
                          s(:str, "File: "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :file), :base_name))))))),
                s(:op_asgn,
                  s(:ivasgn, :@title), :+,
                  s(:dstr,
                    s(:str, " - "),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@options), :title)))),
                s(:or_asgn,
                  s(:lvasgn, :template_file),
                  s(:lvar, :filepage_file)),
                s(:block,
                  s(:send, nil, :render_template,
                    s(:lvar, :template_file),
                    s(:lvar, :out_file)),
                  s(:args,
                    s(:arg, :io)),
                  s(:send, nil, :binding))))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Error), :new,
                  s(:dstr,
                    s(:str, "error generating "),
                    s(:begin,
                      s(:lvar, :out_file)),
                    s(:str, ": "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :generate_page,
        s(:args,
          s(:arg, :file)),
        s(:begin,
          s(:send, nil, :setup),
          s(:lvasgn, :template_file,
            s(:send,
              s(:ivar, :@template_dir), :+,
              s(:str, "page.rhtml"))),
          s(:lvasgn, :out_file,
            s(:send,
              s(:ivar, :@outputdir), :+,
              s(:send,
                s(:lvar, :file), :path))),
          s(:send, nil, :debug_msg,
            s(:send,
              s(:str, "  working on %s (%s)"), :%,
              s(:array,
                s(:send,
                  s(:lvar, :file), :full_name),
                s(:lvar, :out_file)))),
          s(:lvasgn, :rel_prefix,
            s(:send,
              s(:ivar, :@outputdir), :relative_path_from,
              s(:send,
                s(:lvar, :out_file), :dirname))),
          s(:lvasgn, :search_index_rel_prefix,
            s(:lvar, :rel_prefix)),
          s(:if,
            s(:ivar, :@file_output),
            s(:op_asgn,
              s(:lvasgn, :search_index_rel_prefix), :+,
              s(:ivar, :@asset_rel_path)), nil),
          s(:lvasgn, :current,
            s(:lvasgn, :current,
              s(:lvar, :file))),
          s(:lvasgn, :asset_rel_prefix,
            s(:lvasgn, :asset_rel_prefix,
              s(:send,
                s(:lvar, :rel_prefix), :+,
                s(:ivar, :@asset_rel_path)))),
          s(:ivasgn, :@title,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :file), :page_name)),
              s(:str, " - "),
              s(:begin,
                s(:send,
                  s(:ivar, :@options), :title)))),
          s(:send, nil, :debug_msg,
            s(:dstr,
              s(:str, "  rendering "),
              s(:begin,
                s(:lvar, :out_file)))),
          s(:block,
            s(:send, nil, :render_template,
              s(:lvar, :template_file),
              s(:lvar, :out_file)),
            s(:args,
              s(:arg, :io)),
            s(:send, nil, :binding)))),
      s(:def, :generate_servlet_not_found,
        s(:args,
          s(:arg, :message)),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:lvasgn, :template_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "servlet_not_found.rhtml"))),
            s(:if,
              s(:send,
                s(:lvar, :template_file), :exist?), nil,
              s(:return)),
            s(:send, nil, :debug_msg,
              s(:str, "Rendering the servlet 404 Not Found page...")),
            s(:lvasgn, :rel_prefix,
              s(:lvasgn, :rel_prefix,
                s(:str, ""))),
            s(:lvasgn, :search_index_rel_prefix,
              s(:lvar, :rel_prefix)),
            s(:if,
              s(:ivar, :@file_output),
              s(:op_asgn,
                s(:lvasgn, :search_index_rel_prefix), :+,
                s(:ivar, :@asset_rel_path)), nil),
            s(:lvasgn, :asset_rel_prefix,
              s(:lvasgn, :asset_rel_prefix,
                s(:str, ""))),
            s(:ivasgn, :@title,
              s(:str, "Not Found")),
            s(:block,
              s(:send, nil, :render_template,
                s(:lvar, :template_file)),
              s(:args,
                s(:arg, :io)),
              s(:send, nil, :binding))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Error), :new,
                  s(:dstr,
                    s(:str, "error generating servlet_not_found: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :generate_servlet_root,
        s(:args,
          s(:arg, :installed)),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:lvasgn, :template_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "servlet_root.rhtml"))),
            s(:if,
              s(:send,
                s(:lvar, :template_file), :exist?), nil,
              s(:return)),
            s(:send, nil, :debug_msg,
              s(:str, "Rendering the servlet root page...")),
            s(:lvasgn, :rel_prefix,
              s(:str, ".")),
            s(:lvasgn, :asset_rel_prefix,
              s(:lvar, :rel_prefix)),
            s(:lvasgn, :search_index_rel_prefix,
              s(:lvar, :asset_rel_prefix)),
            s(:if,
              s(:ivar, :@file_output),
              s(:op_asgn,
                s(:lvasgn, :search_index_rel_prefix), :+,
                s(:ivar, :@asset_rel_path)), nil),
            s(:ivasgn, :@title,
              s(:str, "Local RDoc Documentation")),
            s(:block,
              s(:send, nil, :render_template,
                s(:lvar, :template_file)),
              s(:args,
                s(:arg, :io)),
              s(:send, nil, :binding))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Error), :new,
                  s(:dstr,
                    s(:str, "error generating servlet_root: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :generate_table_of_contents,
        s(:args),
        s(:rescue,
          s(:begin,
            s(:send, nil, :setup),
            s(:lvasgn, :template_file,
              s(:send,
                s(:ivar, :@template_dir), :+,
                s(:str, "table_of_contents.rhtml"))),
            s(:if,
              s(:send,
                s(:lvar, :template_file), :exist?), nil,
              s(:return)),
            s(:send, nil, :debug_msg,
              s(:str, "Rendering the Table of Contents...")),
            s(:lvasgn, :out_file,
              s(:send,
                s(:ivar, :@outputdir), :+,
                s(:str, "table_of_contents.html"))),
            s(:lvasgn, :rel_prefix,
              s(:send,
                s(:ivar, :@outputdir), :relative_path_from,
                s(:send,
                  s(:lvar, :out_file), :dirname))),
            s(:lvasgn, :search_index_rel_prefix,
              s(:lvar, :rel_prefix)),
            s(:if,
              s(:ivar, :@file_output),
              s(:op_asgn,
                s(:lvasgn, :search_index_rel_prefix), :+,
                s(:ivar, :@asset_rel_path)), nil),
            s(:lvasgn, :asset_rel_prefix,
              s(:lvasgn, :asset_rel_prefix,
                s(:send,
                  s(:lvar, :rel_prefix), :+,
                  s(:ivar, :@asset_rel_path)))),
            s(:ivasgn, :@title,
              s(:dstr,
                s(:str, "Table of Contents - "),
                s(:begin,
                  s(:send,
                    s(:ivar, :@options), :title)))),
            s(:block,
              s(:send, nil, :render_template,
                s(:lvar, :template_file),
                s(:lvar, :out_file)),
              s(:args,
                s(:arg, :io)),
              s(:send, nil, :binding))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:begin,
              s(:lvasgn, :error,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Error), :new,
                  s(:dstr,
                    s(:str, "error generating table_of_contents.html: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :class)),
                    s(:str, ")")))),
              s(:send,
                s(:lvar, :error), :set_backtrace,
                s(:send,
                  s(:lvar, :e), :backtrace)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil)),
      s(:def, :install_rdoc_static_file,
        s(:args,
          s(:arg, :source),
          s(:arg, :destination),
          s(:arg, :options)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :source), :exist?), nil,
            s(:return)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send,
                  s(:const, nil, :FileUtils), :mkdir_p,
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:lvar, :destination)),
                  s(:lvar, :options)),
                s(:kwbegin,
                  s(:rescue,
                    s(:send,
                      s(:const, nil, :FileUtils), :ln,
                      s(:lvar, :source),
                      s(:lvar, :destination),
                      s(:lvar, :options)),
                    s(:resbody,
                      s(:array,
                        s(:const,
                          s(:const, nil, :Errno), :EEXIST)), nil,
                      s(:begin,
                        s(:send,
                          s(:const, nil, :FileUtils), :rm,
                          s(:lvar, :destination)),
                        s(:retry))), nil))),
              s(:resbody, nil, nil,
                s(:send,
                  s(:const, nil, :FileUtils), :cp,
                  s(:lvar, :source),
                  s(:lvar, :destination),
                  s(:lvar, :options))), nil)))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:if,
            s(:send, nil, :instance_variable_defined?,
              s(:sym, :@outputdir)),
            s(:return), nil),
          s(:ivasgn, :@outputdir,
            s(:send,
              s(:send,
                s(:const, nil, :Pathname), :new,
                s(:send,
                  s(:ivar, :@options), :op_dir)), :expand_path,
              s(:ivar, :@base_dir))),
          s(:if,
            s(:ivar, :@store), nil,
            s(:return)),
          s(:ivasgn, :@classes,
            s(:send,
              s(:send,
                s(:ivar, :@store), :all_classes_and_modules), :sort)),
          s(:ivasgn, :@files,
            s(:send,
              s(:send,
                s(:ivar, :@store), :all_files), :sort)),
          s(:ivasgn, :@methods,
            s(:send,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@classes), :map),
                  s(:args,
                    s(:arg, :m)),
                  s(:send,
                    s(:lvar, :m), :method_list)), :flatten), :sort)),
          s(:ivasgn, :@modsort,
            s(:send, nil, :get_sorted_module_list,
              s(:ivar, :@classes))))),
      s(:def, :time_delta_string,
        s(:args,
          s(:arg, :seconds)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 60)),
            s(:return,
              s(:str, "less than a minute")), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 3000)),
            s(:return,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :seconds), :/,
                    s(:int, 60))),
                s(:str, " minute"),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :seconds), :/,
                        s(:int, 60)), :==,
                      s(:int, 1)),
                    s(:str, ""),
                    s(:str, "s"))))), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 5400)),
            s(:return,
              s(:str, "about one hour")), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 64800)),
            s(:return,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :seconds), :/,
                    s(:int, 3600))),
                s(:str, " hours"))), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 86400)),
            s(:return,
              s(:str, "one day")), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 172800)),
            s(:return,
              s(:str, "about one day")), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 604800)),
            s(:return,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :seconds), :/,
                    s(:int, 86400))),
                s(:str, " days"))), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 1209600)),
            s(:return,
              s(:str, "about one week")), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 7257600)),
            s(:return,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :seconds), :/,
                    s(:int, 604800))),
                s(:str, " weeks"))), nil),
          s(:if,
            s(:send,
              s(:lvar, :seconds), :<,
              s(:int, 31536000)),
            s(:return,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :seconds), :/,
                    s(:int, 2419200))),
                s(:str, " months"))), nil),
          s(:return,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :seconds), :/,
                  s(:int, 31536000))),
              s(:str, " years"))))),
      s(:casgn, nil, :SVNID_PATTERN,
        s(:regexp,
          s(:str, "\n"),
          s(:str, "    \\$Id:\\s\n"),
          s(:str, "    (\\S+)\\s                # filename\n"),
          s(:str, "    (\\d+)\\s                # rev\n"),
          s(:str, "    (\\d{4}-\\d{2}-\\d{2})\\s  # Date (YYYY-MM-DD)\n"),
          s(:str, "    (\\d{2}:\\d{2}:\\d{2}Z)\\s # Time (HH:MM:SSZ)\n"),
          s(:str, "    (\\w+)\\s                # committer\n"),
          s(:str, "    \\$$\n"),
          s(:str, "  "),
          s(:regopt, :x))),
      s(:def, :get_svninfo,
        s(:args,
          s(:arg, :klass)),
        s(:begin,
          s(:or,
            s(:lvasgn, :constants,
              s(:send,
                s(:lvar, :klass), :constants)),
            s(:return,
              s(:hash))),
          s(:or,
            s(:block,
              s(:send,
                s(:lvar, :constants), :find),
              s(:args,
                s(:arg, :c)),
              s(:send,
                s(:send,
                  s(:lvar, :c), :value), :=~,
                s(:const, nil, :SVNID_PATTERN))),
            s(:return,
              s(:hash))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :filename),
              s(:lvasgn, :rev),
              s(:lvasgn, :date),
              s(:lvasgn, :time),
              s(:lvasgn, :committer)),
            s(:send,
              s(:gvar, :$~), :captures)),
          s(:lvasgn, :commitdate,
            s(:send,
              s(:const, nil, :Time), :parse,
              s(:dstr,
                s(:begin,
                  s(:lvar, :date)),
                s(:str, " "),
                s(:begin,
                  s(:lvar, :time))))),
          s(:return,
            s(:hash,
              s(:pair,
                s(:sym, :filename),
                s(:lvar, :filename)),
              s(:pair,
                s(:sym, :rev),
                s(:send, nil, :Integer,
                  s(:lvar, :rev))),
              s(:pair,
                s(:sym, :commitdate),
                s(:lvar, :commitdate)),
              s(:pair,
                s(:sym, :commitdelta),
                s(:send, nil, :time_delta_string,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Time), :now), :-,
                    s(:lvar, :commitdate)))),
              s(:pair,
                s(:sym, :committer),
                s(:lvar, :committer)))))),
      s(:def, :assemble_template,
        s(:args,
          s(:arg, :body_file)),
        s(:begin,
          s(:lvasgn, :body,
            s(:send,
              s(:lvar, :body_file), :read)),
          s(:if,
            s(:send,
              s(:lvar, :body), :=~,
              s(:regexp,
                s(:str, "<html"),
                s(:regopt))),
            s(:return,
              s(:lvar, :body)), nil),
          s(:lvasgn, :head_file,
            s(:send,
              s(:ivar, :@template_dir), :+,
              s(:str, "_head.rhtml"))),
          s(:lvasgn, :footer_file,
            s(:send,
              s(:ivar, :@template_dir), :+,
              s(:str, "_footer.rhtml"))),
          s(:dstr,
            s(:str, "<!DOCTYPE html>\n"),
            s(:str, "\n"),
            s(:str, "<html>\n"),
            s(:str, "<head>\n"),
            s(:begin,
              s(:send,
                s(:lvar, :head_file), :read)),
            s(:str, "\n"),
            s(:str, "\n"),
            s(:begin,
              s(:lvar, :body)),
            s(:str, "\n"),
            s(:str, "\n"),
            s(:begin,
              s(:send,
                s(:lvar, :footer_file), :read)),
            s(:str, "\n")))),
      s(:def, :render,
        s(:args,
          s(:arg, :file_name)),
        s(:begin,
          s(:lvasgn, :template_file,
            s(:send,
              s(:ivar, :@template_dir), :+,
              s(:lvar, :file_name))),
          s(:lvasgn, :template,
            s(:send, nil, :template_for,
              s(:lvar, :template_file),
              s(:false),
              s(:const,
                s(:const, nil, :RDoc), :ERBPartial))),
          s(:send,
            s(:lvar, :template), :filename=,
            s(:send,
              s(:lvar, :template_file), :to_s)),
          s(:send,
            s(:lvar, :template), :result,
            s(:ivar, :@context)))),
      s(:def, :render_template,
        s(:args,
          s(:arg, :template_file),
          s(:optarg, :out_file,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :io_output,
            s(:and,
              s(:and,
                s(:lvar, :out_file),
                s(:send,
                  s(:ivar, :@dry_run), :!)),
              s(:ivar, :@file_output))),
          s(:lvasgn, :erb_klass,
            s(:if,
              s(:lvar, :io_output),
              s(:const,
                s(:const, nil, :RDoc), :ERBIO),
              s(:const, nil, :ERB))),
          s(:lvasgn, :template,
            s(:send, nil, :template_for,
              s(:lvar, :template_file),
              s(:true),
              s(:lvar, :erb_klass))),
          s(:if,
            s(:lvar, :io_output),
            s(:begin,
              s(:send, nil, :debug_msg,
                s(:send,
                  s(:str, "Outputting to %s"), :%,
                  s(:array,
                    s(:send,
                      s(:lvar, :out_file), :expand_path)))),
              s(:send,
                s(:send,
                  s(:lvar, :out_file), :dirname), :mkpath),
              s(:block,
                s(:send,
                  s(:lvar, :out_file), :open,
                  s(:str, "w"),
                  s(:int, 420)),
                s(:args,
                  s(:arg, :io)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:const, nil, :Object), :const_defined?,
                      s(:sym, :Encoding)),
                    s(:send,
                      s(:lvar, :io), :set_encoding,
                      s(:send,
                        s(:ivar, :@options), :encoding)), nil),
                  s(:ivasgn, :@context,
                    s(:yield,
                      s(:lvar, :io))),
                  s(:send, nil, :template_result,
                    s(:lvar, :template),
                    s(:ivar, :@context),
                    s(:lvar, :template_file))))),
            s(:begin,
              s(:ivasgn, :@context,
                s(:yield,
                  s(:nil))),
              s(:lvasgn, :output,
                s(:send, nil, :template_result,
                  s(:lvar, :template),
                  s(:ivar, :@context),
                  s(:lvar, :template_file))),
              s(:if,
                s(:ivar, :@dry_run),
                s(:send, nil, :debug_msg,
                  s(:send,
                    s(:str, "  would have written %d characters to %s"), :%,
                    s(:array,
                      s(:send,
                        s(:lvar, :output), :length),
                      s(:send,
                        s(:lvar, :out_file), :expand_path)))), nil),
              s(:lvar, :output))))),
      s(:def, :template_result,
        s(:args,
          s(:arg, :template),
          s(:arg, :context),
          s(:arg, :template_file)),
        s(:rescue,
          s(:begin,
            s(:send,
              s(:lvar, :template), :filename=,
              s(:send,
                s(:lvar, :template_file), :to_s)),
            s(:send,
              s(:lvar, :template), :result,
              s(:lvar, :context))),
          s(:resbody,
            s(:array,
              s(:const, nil, :NoMethodError)),
            s(:lvasgn, :e),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :RDoc), :Error),
              s(:send,
                s(:str, "Error while evaluating %s: %s"), :%,
                s(:array,
                  s(:send,
                    s(:lvar, :template_file), :expand_path),
                  s(:send,
                    s(:lvar, :e), :message))),
              s(:send,
                s(:lvar, :e), :backtrace))), nil)),
      s(:def, :template_for,
        s(:args,
          s(:arg, :file),
          s(:optarg, :page,
            s(:true)),
          s(:optarg, :klass,
            s(:const, nil, :ERB))),
        s(:begin,
          s(:lvasgn, :template,
            s(:send,
              s(:ivar, :@template_cache), :[],
              s(:lvar, :file))),
          s(:if,
            s(:lvar, :template),
            s(:return,
              s(:lvar, :template)), nil),
          s(:if,
            s(:lvar, :page),
            s(:begin,
              s(:lvasgn, :template,
                s(:send, nil, :assemble_template,
                  s(:lvar, :file))),
              s(:lvasgn, :erbout,
                s(:str, "io"))),
            s(:begin,
              s(:lvasgn, :template,
                s(:send,
                  s(:lvar, :file), :read)),
              s(:if,
                s(:send,
                  s(:const, nil, :Object), :const_defined?,
                  s(:sym, :Encoding)),
                s(:lvasgn, :template,
                  s(:send,
                    s(:lvar, :template), :encode,
                    s(:send,
                      s(:ivar, :@options), :encoding))), nil),
              s(:lvasgn, :file_var,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:lvar, :file)), :sub,
                  s(:regexp,
                    s(:str, "\\..*"),
                    s(:regopt)),
                  s(:str, ""))),
              s(:lvasgn, :erbout,
                s(:dstr,
                  s(:str, "_erbout_"),
                  s(:begin,
                    s(:lvar, :file_var)))))),
          s(:lvasgn, :template,
            s(:send,
              s(:lvar, :klass), :new,
              s(:lvar, :template),
              s(:nil),
              s(:str, "<>"),
              s(:lvar, :erbout))),
          s(:send,
            s(:ivar, :@template_cache), :[]=,
            s(:lvar, :file),
            s(:lvar, :template)),
          s(:lvar, :template))))))
