s(:class,
  s(:const,
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Generator), :POT), :PO), nil,
  s(:begin,
    s(:def, :initialize,
      s(:args),
      s(:begin,
        s(:ivasgn, :@entries,
          s(:hash)),
        s(:send, nil, :add_header))),
    s(:def, :add,
      s(:args,
        s(:arg, :entry)),
      s(:begin,
        s(:lvasgn, :existing_entry,
          s(:send,
            s(:ivar, :@entries), :[],
            s(:send,
              s(:lvar, :entry), :msgid))),
        s(:if,
          s(:lvar, :existing_entry),
          s(:lvasgn, :entry,
            s(:send,
              s(:lvar, :existing_entry), :merge,
              s(:lvar, :entry))), nil),
        s(:send,
          s(:ivar, :@entries), :[]=,
          s(:send,
            s(:lvar, :entry), :msgid),
          s(:lvar, :entry)))),
    s(:def, :to_s,
      s(:args),
      s(:begin,
        s(:lvasgn, :po,
          s(:str, "")),
        s(:block,
          s(:send,
            s(:send, nil, :sort_entries), :each),
          s(:args,
            s(:arg, :entry)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :po), :empty?), nil,
              s(:send,
                s(:lvar, :po), :<<,
                s(:str, "\n"))),
            s(:send,
              s(:lvar, :po), :<<,
              s(:send,
                s(:lvar, :entry), :to_s)))),
        s(:lvar, :po))),
    s(:send, nil, :private),
    s(:def, :add_header,
      s(:args),
      s(:send, nil, :add,
        s(:send, nil, :header_entry))),
    s(:def, :header_entry,
      s(:args),
      s(:begin,
        s(:lvasgn, :comment,
          s(:dstr,
            s(:str, "SOME DESCRIPTIVE TITLE.\n"),
            s(:str, "Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER\n"),
            s(:str, "This file is distributed under the same license as the PACKAGE package.\n"),
            s(:str, "FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\n"))),
        s(:lvasgn, :content,
          s(:dstr,
            s(:str, "Project-Id-Version: PACKAGE VERSEION\n"),
            s(:str, "Report-Msgid-Bugs-To:\n"),
            s(:str, "PO-Revision-Date: YEAR-MO_DA HO:MI+ZONE\n"),
            s(:str, "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"),
            s(:str, "Language-Team: LANGUAGE <LL@li.org>\n"),
            s(:str, "Language:\n"),
            s(:str, "MIME-Version: 1.0\n"),
            s(:str, "Content-Type: text/plain; charset=CHARSET\n"),
            s(:str, "Content-Transfer-Encoding: 8bit\n"),
            s(:str, "Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"))),
        s(:lvasgn, :options,
          s(:hash,
            s(:pair,
              s(:sym, :msgstr),
              s(:lvar, :content)),
            s(:pair,
              s(:sym, :translator_comment),
              s(:lvar, :comment)),
            s(:pair,
              s(:sym, :flags),
              s(:array,
                s(:str, "fuzzy"))))),
        s(:send,
          s(:const,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Generator), :POT), :POEntry), :new,
          s(:str, ""),
          s(:lvar, :options)))),
    s(:def, :sort_entries,
      s(:args),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :headers),
            s(:lvasgn, :messages)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@entries), :values), :partition),
            s(:args,
              s(:arg, :entry)),
            s(:send,
              s(:send,
                s(:lvar, :entry), :msgid), :empty?))),
        s(:lvasgn, :sorted_messages,
          s(:block,
            s(:send,
              s(:lvar, :messages), :sort_by),
            s(:args,
              s(:arg, :entry)),
            s(:send,
              s(:lvar, :entry), :msgid))),
        s(:send,
          s(:lvar, :headers), :+,
          s(:lvar, :sorted_messages))))))
