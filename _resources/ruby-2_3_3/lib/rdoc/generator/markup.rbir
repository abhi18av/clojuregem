s(:begin,
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Generator), :Markup),
    s(:begin,
      s(:def, :aref_to,
        s(:args,
          s(:arg, :target_path)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :ToHtml), :gen_relative_url,
          s(:send, nil, :path),
          s(:lvar, :target_path))),
      s(:def, :as_href,
        s(:args,
          s(:arg, :from_path)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :ToHtml), :gen_relative_url,
          s(:lvar, :from_path),
          s(:send, nil, :path))),
      s(:def, :description,
        s(:args),
        s(:send, nil, :markup,
          s(:ivar, :@comment))),
      s(:def, :formatter,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:ivar, :@formatter)),
            s(:return,
              s(:ivar, :@formatter)), nil),
          s(:lvasgn, :options,
            s(:send,
              s(:send,
                s(:ivar, :@store), :rdoc), :options)),
          s(:lvasgn, :this,
            s(:if,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :Context), :===,
                s(:self)),
              s(:self),
              s(:ivar, :@parent))),
          s(:ivasgn, :@formatter,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref), :new,
              s(:lvar, :options),
              s(:send,
                s(:lvar, :this), :path),
              s(:lvar, :this))),
          s(:send,
            s(:ivar, :@formatter), :code_object=,
            s(:self)),
          s(:ivar, :@formatter))),
      s(:def, :cvs_url,
        s(:args,
          s(:arg, :url),
          s(:arg, :full_path)),
        s(:if,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "%s"),
              s(:regopt)),
            s(:lvar, :url)),
          s(:send, nil, :sprintf,
            s(:lvar, :url),
            s(:lvar, :full_path)),
          s(:send,
            s(:lvar, :url), :+,
            s(:lvar, :full_path)))))),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :CodeObject), nil,
    s(:send, nil, :include,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :Generator), :Markup))),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :MethodAttr), nil,
    s(:begin,
      s(:ivasgn, :@add_line_numbers,
        s(:false)),
      s(:sclass,
        s(:self),
        s(:send, nil, :attr_accessor,
          s(:sym, :add_line_numbers))),
      s(:def, :add_line_numbers,
        s(:args,
          s(:arg, :src)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :src), :sub!,
              s(:regexp,
                s(:str, "\\A(.*)(, line (\\d+))"),
                s(:regopt)),
              s(:str, "\\1")), nil,
            s(:return)),
          s(:lvasgn, :first,
            s(:send,
              s(:send,
                s(:nth_ref, 3), :to_i), :-,
              s(:int, 1))),
          s(:lvasgn, :last,
            s(:send,
              s(:lvar, :first), :+,
              s(:send,
                s(:lvar, :src), :count,
                s(:str, "\n")))),
          s(:lvasgn, :size,
            s(:send,
              s(:send,
                s(:lvar, :last), :to_s), :length)),
          s(:lvasgn, :line,
            s(:lvar, :first)),
          s(:block,
            s(:send,
              s(:lvar, :src), :gsub!,
              s(:regexp,
                s(:str, "^"),
                s(:regopt))),
            s(:args),
            s(:begin,
              s(:lvasgn, :res,
                s(:if,
                  s(:send,
                    s(:lvar, :line), :==,
                    s(:lvar, :first)),
                  s(:send,
                    s(:str, " "), :*,
                    s(:begin,
                      s(:send,
                        s(:lvar, :size), :+,
                        s(:int, 1)))),
                  s(:send,
                    s(:str, "<span class=\"line-num\">%2$*1$d</span> "), :%,
                    s(:array,
                      s(:lvar, :size),
                      s(:lvar, :line))))),
              s(:op_asgn,
                s(:lvasgn, :line), :+,
                s(:int, 1)),
              s(:lvar, :res))))),
      s(:def, :markup_code,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@token_stream), nil,
            s(:return,
              s(:str, ""))),
          s(:lvasgn, :src,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :TokenStream), :to_html,
              s(:ivar, :@token_stream))),
          s(:lvasgn, :indent,
            s(:send,
              s(:lvar, :src), :length)),
          s(:lvasgn, :lines,
            s(:send,
              s(:send,
                s(:lvar, :src), :lines), :to_a)),
          s(:if,
            s(:send,
              s(:lvar, :src), :=~,
              s(:regexp,
                s(:str, "\\A.*#\\ *File"),
                s(:regopt, :i))),
            s(:send,
              s(:lvar, :lines), :shift), nil),
          s(:block,
            s(:send,
              s(:lvar, :lines), :each),
            s(:args,
              s(:arg, :line)),
            s(:if,
              s(:send,
                s(:lvar, :line), :=~,
                s(:regexp,
                  s(:str, "^ *(?=\\S)"),
                  s(:regopt))),
              s(:begin,
                s(:lvasgn, :n,
                  s(:send,
                    s(:back_ref, :$&), :length)),
                s(:if,
                  s(:send,
                    s(:lvar, :n), :<,
                    s(:lvar, :indent)),
                  s(:lvasgn, :indent,
                    s(:lvar, :n)), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :n), :==,
                    s(:int, 0)),
                  s(:break), nil)), nil)),
          s(:if,
            s(:send,
              s(:lvar, :indent), :>,
              s(:int, 0)),
            s(:send,
              s(:lvar, :src), :gsub!,
              s(:regexp,
                s(:str, "^"),
                s(:begin,
                  s(:send,
                    s(:str, " "), :*,
                    s(:lvar, :indent))),
                s(:regopt)),
              s(:str, "")), nil),
          s(:if,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :MethodAttr), :add_line_numbers),
            s(:send, nil, :add_line_numbers,
              s(:lvar, :src)), nil),
          s(:lvar, :src))))),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :ClassModule), nil,
    s(:def, :description,
      s(:args),
      s(:send, nil, :markup,
        s(:ivar, :@comment_location)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Context), :Section), nil,
    s(:send, nil, :include,
      s(:const,
        s(:const,
          s(:const, nil, :RDoc), :Generator), :Markup))),
  s(:class,
    s(:const,
      s(:const, nil, :RDoc), :TopLevel), nil,
    s(:def, :cvs_url,
      s(:args),
      s(:begin,
        s(:lvasgn, :url,
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@store), :rdoc), :options), :webcvs)),
        s(:if,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "%s"),
              s(:regopt)),
            s(:lvar, :url)),
          s(:send,
            s(:lvar, :url), :%,
            s(:ivar, :@relative_name)),
          s(:send,
            s(:lvar, :url), :+,
            s(:ivar, :@relative_name)))))))
