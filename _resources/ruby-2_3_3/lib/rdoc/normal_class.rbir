s(:class,
  s(:const,
    s(:const, nil, :RDoc), :NormalClass),
  s(:const,
    s(:const, nil, :RDoc), :ClassModule),
  s(:begin,
    s(:def, :ancestors,
      s(:args),
      s(:if,
        s(:send,
          s(:const, nil, :String), :===,
          s(:send, nil, :superclass)),
        s(:send,
          s(:zsuper), :<<,
          s(:send, nil, :superclass)),
        s(:if,
          s(:send, nil, :superclass),
          s(:begin,
            s(:lvasgn, :ancestors,
              s(:zsuper)),
            s(:send,
              s(:lvar, :ancestors), :<<,
              s(:send, nil, :superclass)),
            s(:send,
              s(:lvar, :ancestors), :concat,
              s(:send,
                s(:send, nil, :superclass), :ancestors))),
          s(:zsuper)))),
    s(:def, :aref_prefix,
      s(:args),
      s(:str, "class")),
    s(:def, :definition,
      s(:args),
      s(:dstr,
        s(:str, "class "),
        s(:begin,
          s(:send, nil, :full_name)))),
    s(:def, :direct_ancestors,
      s(:args),
      s(:if,
        s(:send, nil, :superclass),
        s(:send,
          s(:zsuper), :+,
          s(:array,
            s(:send, nil, :superclass))),
        s(:zsuper))),
    s(:def, :inspect,
      s(:args),
      s(:begin,
        s(:lvasgn, :superclass,
          s(:if,
            s(:ivar, :@superclass),
            s(:dstr,
              s(:str, " < "),
              s(:begin,
                s(:ivar, :@superclass))),
            s(:nil))),
        s(:send,
          s(:str, "<%s:0x%x class %s%s includes: %p extends: %p attributes: %p methods: %p aliases: %p>"), :%,
          s(:array,
            s(:send,
              s(:self), :class),
            s(:send, nil, :object_id),
            s(:send, nil, :full_name),
            s(:lvar, :superclass),
            s(:ivar, :@includes),
            s(:ivar, :@extends),
            s(:ivar, :@attributes),
            s(:ivar, :@method_list),
            s(:ivar, :@aliases))))),
    s(:def, :to_s,
      s(:args),
      s(:begin,
        s(:lvasgn, :display,
          s(:dstr,
            s(:begin,
              s(:send,
                s(:send,
                  s(:self), :class), :name)),
            s(:str, " "),
            s(:begin,
              s(:send,
                s(:self), :full_name)))),
        s(:if,
          s(:send, nil, :superclass),
          s(:send,
            s(:send,
              s(:lvar, :display), :<<,
              s(:str, " < ")), :<<,
            s(:begin,
              s(:if,
                s(:send,
                  s(:send, nil, :superclass), :is_a?,
                  s(:const, nil, :String)),
                s(:send, nil, :superclass),
                s(:send,
                  s(:send, nil, :superclass), :full_name)))), nil),
        s(:if,
          s(:send, nil, :is_alias_for),
          s(:send,
            s(:send,
              s(:lvar, :display), :<<,
              s(:str, " -> ")), :<<,
            s(:send,
              s(:send, nil, :is_alias_for), :to_s)), nil),
        s(:lvar, :display))),
    s(:def, :pretty_print,
      s(:args,
        s(:arg, :q)),
      s(:begin,
        s(:lvasgn, :superclass,
          s(:if,
            s(:ivar, :@superclass),
            s(:dstr,
              s(:str, " < "),
              s(:begin,
                s(:ivar, :@superclass))),
            s(:nil))),
        s(:block,
          s(:send,
            s(:lvar, :q), :group,
            s(:int, 2),
            s(:dstr,
              s(:str, "[class "),
              s(:begin,
                s(:send, nil, :full_name)),
              s(:begin,
                s(:lvar, :superclass)),
              s(:str, " ")),
            s(:str, "]")),
          s(:args),
          s(:begin,
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "includes:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:block,
              s(:send,
                s(:lvar, :q), :seplist,
                s(:ivar, :@includes)),
              s(:args,
                s(:arg, :inc)),
              s(:send,
                s(:lvar, :q), :pp,
                s(:lvar, :inc))),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "constants:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:block,
              s(:send,
                s(:lvar, :q), :seplist,
                s(:ivar, :@constants)),
              s(:args,
                s(:arg, :const)),
              s(:send,
                s(:lvar, :q), :pp,
                s(:lvar, :const))),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "attributes:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:block,
              s(:send,
                s(:lvar, :q), :seplist,
                s(:ivar, :@attributes)),
              s(:args,
                s(:arg, :attr)),
              s(:send,
                s(:lvar, :q), :pp,
                s(:lvar, :attr))),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "methods:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:block,
              s(:send,
                s(:lvar, :q), :seplist,
                s(:ivar, :@method_list)),
              s(:args,
                s(:arg, :meth)),
              s(:send,
                s(:lvar, :q), :pp,
                s(:lvar, :meth))),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "aliases:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:block,
              s(:send,
                s(:lvar, :q), :seplist,
                s(:ivar, :@aliases)),
              s(:args,
                s(:arg, :aliaz)),
              s(:send,
                s(:lvar, :q), :pp,
                s(:lvar, :aliaz))),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :text,
              s(:str, "comment:")),
            s(:send,
              s(:lvar, :q), :breakable),
            s(:send,
              s(:lvar, :q), :pp,
              s(:send, nil, :comment))))))))
