s(:class,
  s(:const,
    s(:const, nil, :RDoc), :ClassModule),
  s(:const,
    s(:const, nil, :RDoc), :Context),
  s(:begin,
    s(:casgn, nil, :MARSHAL_VERSION,
      s(:int, 3)),
    s(:send, nil, :attr_accessor,
      s(:sym, :constant_aliases)),
    s(:send, nil, :attr_accessor,
      s(:sym, :comment_location)),
    s(:send, nil, :attr_accessor,
      s(:sym, :diagram)),
    s(:send, nil, :attr_accessor,
      s(:sym, :is_alias_for)),
    s(:defs,
      s(:self), :from_module,
      s(:args,
        s(:arg, :class_type),
        s(:arg, :mod)),
      s(:begin,
        s(:lvasgn, :klass,
          s(:send,
            s(:lvar, :class_type), :new,
            s(:send,
              s(:lvar, :mod), :name))),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :mod), :comment_location), :each),
          s(:args,
            s(:arg, :comment),
            s(:arg, :location)),
          s(:send,
            s(:lvar, :klass), :add_comment,
            s(:lvar, :comment),
            s(:lvar, :location))),
        s(:send,
          s(:lvar, :klass), :parent=,
          s(:send,
            s(:lvar, :mod), :parent)),
        s(:send,
          s(:lvar, :klass), :section=,
          s(:send,
            s(:lvar, :mod), :section)),
        s(:send,
          s(:lvar, :klass), :viewer=,
          s(:send,
            s(:lvar, :mod), :viewer)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :attributes), :concat,
          s(:send,
            s(:lvar, :mod), :attributes)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :method_list), :concat,
          s(:send,
            s(:lvar, :mod), :method_list)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :aliases), :concat,
          s(:send,
            s(:lvar, :mod), :aliases)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :external_aliases), :concat,
          s(:send,
            s(:lvar, :mod), :external_aliases)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :constants), :concat,
          s(:send,
            s(:lvar, :mod), :constants)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :includes), :concat,
          s(:send,
            s(:lvar, :mod), :includes)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :extends), :concat,
          s(:send,
            s(:lvar, :mod), :extends)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :methods_hash), :update,
          s(:send,
            s(:lvar, :mod), :methods_hash)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :constants_hash), :update,
          s(:send,
            s(:lvar, :mod), :constants_hash)),
        s(:send,
          s(:lvar, :klass), :current_section=,
          s(:send,
            s(:lvar, :mod), :current_section)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :in_files), :concat,
          s(:send,
            s(:lvar, :mod), :in_files)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :sections), :concat,
          s(:send,
            s(:lvar, :mod), :sections)),
        s(:send,
          s(:lvar, :klass), :unmatched_alias_lists=,
          s(:send,
            s(:lvar, :mod), :unmatched_alias_lists)),
        s(:send,
          s(:lvar, :klass), :current_section=,
          s(:send,
            s(:lvar, :mod), :current_section)),
        s(:send,
          s(:lvar, :klass), :visibility=,
          s(:send,
            s(:lvar, :mod), :visibility)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :classes_hash), :update,
          s(:send,
            s(:lvar, :mod), :classes_hash)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :modules_hash), :update,
          s(:send,
            s(:lvar, :mod), :modules_hash)),
        s(:send,
          s(:send,
            s(:lvar, :klass), :metadata), :update,
          s(:send,
            s(:lvar, :mod), :metadata)),
        s(:send,
          s(:lvar, :klass), :document_self=,
          s(:if,
            s(:send,
              s(:lvar, :mod), :received_nodoc),
            s(:nil),
            s(:send,
              s(:lvar, :mod), :document_self))),
        s(:send,
          s(:lvar, :klass), :document_children=,
          s(:send,
            s(:lvar, :mod), :document_children)),
        s(:send,
          s(:lvar, :klass), :force_documentation=,
          s(:send,
            s(:lvar, :mod), :force_documentation)),
        s(:send,
          s(:lvar, :klass), :done_documenting=,
          s(:send,
            s(:lvar, :mod), :done_documenting)),
        s(:block,
          s(:send,
            s(:begin,
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :klass), :attributes), :+,
                              s(:send,
                                s(:lvar, :klass), :method_list)), :+,
                            s(:send,
                              s(:lvar, :klass), :aliases)), :+,
                          s(:send,
                            s(:lvar, :klass), :external_aliases)), :+,
                        s(:send,
                          s(:lvar, :klass), :constants)), :+,
                      s(:send,
                        s(:lvar, :klass), :includes)), :+,
                    s(:send,
                      s(:lvar, :klass), :extends)), :+,
                  s(:send,
                    s(:lvar, :klass), :classes)), :+,
                s(:send,
                  s(:lvar, :klass), :modules))), :each),
          s(:args,
            s(:arg, :obj)),
          s(:begin,
            s(:send,
              s(:lvar, :obj), :parent=,
              s(:lvar, :klass)),
            s(:send,
              s(:lvar, :obj), :full_name=,
              s(:nil)))),
        s(:lvar, :klass))),
    s(:def, :initialize,
      s(:args,
        s(:arg, :name),
        s(:optarg, :superclass,
          s(:nil))),
      s(:begin,
        s(:ivasgn, :@constant_aliases,
          s(:array)),
        s(:ivasgn, :@diagram,
          s(:nil)),
        s(:ivasgn, :@is_alias_for,
          s(:nil)),
        s(:ivasgn, :@name,
          s(:lvar, :name)),
        s(:ivasgn, :@superclass,
          s(:lvar, :superclass)),
        s(:ivasgn, :@comment_location,
          s(:array)),
        s(:super))),
    s(:def, :add_comment,
      s(:args,
        s(:arg, :comment),
        s(:arg, :location)),
      s(:begin,
        s(:if,
          s(:send, nil, :document_self), nil,
          s(:return)),
        s(:lvasgn, :original,
          s(:lvar, :comment)),
        s(:lvasgn, :comment,
          s(:case,
            s(:lvar, :comment),
            s(:when,
              s(:const,
                s(:const, nil, :RDoc), :Comment),
              s(:send,
                s(:lvar, :comment), :normalize)),
            s(:send, nil, :normalize_comment,
              s(:lvar, :comment)))),
        s(:block,
          s(:send,
            s(:ivar, :@comment_location), :delete_if),
          s(:args,
            s(:mlhs,
              s(:arg, :_),
              s(:arg, :l))),
          s(:send,
            s(:lvar, :l), :==,
            s(:lvar, :location))),
        s(:send,
          s(:ivar, :@comment_location), :<<,
          s(:array,
            s(:lvar, :comment),
            s(:lvar, :location))),
        s(:send,
          s(:self), :comment=,
          s(:lvar, :original)))),
    s(:def, :add_things,
      s(:args,
        s(:arg, :my_things),
        s(:arg, :other_things)),
      s(:block,
        s(:send,
          s(:lvar, :other_things), :each),
        s(:args,
          s(:arg, :group),
          s(:arg, :things)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :my_things), :include?,
              s(:lvar, :group)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :my_things), :[],
                  s(:lvar, :group)), :each),
              s(:args,
                s(:arg, :thing)),
              s(:yield,
                s(:false),
                s(:lvar, :thing))), nil),
          s(:block,
            s(:send,
              s(:lvar, :things), :each),
            s(:args,
              s(:arg, :thing)),
            s(:yield,
              s(:true),
              s(:lvar, :thing)))))),
    s(:def, :ancestors,
      s(:args),
      s(:send,
        s(:block,
          s(:send,
            s(:send, nil, :includes), :map),
          s(:args,
            s(:arg, :i)),
          s(:send,
            s(:lvar, :i), :module)), :reverse)),
    s(:def, :aref_prefix,
      s(:args),
      s(:send, nil, :raise,
        s(:const, nil, :NotImplementedError),
        s(:dstr,
          s(:str, "missing aref_prefix for "),
          s(:begin,
            s(:send,
              s(:self), :class))))),
    s(:def, :aref,
      s(:args),
      s(:dstr,
        s(:begin,
          s(:send, nil, :aref_prefix)),
        s(:str, "-"),
        s(:begin,
          s(:send, nil, :full_name)))),
    s(:alias,
      s(:sym, :direct_ancestors),
      s(:sym, :ancestors)),
    s(:def, :clear_comment,
      s(:args),
      s(:ivasgn, :@comment,
        s(:str, ""))),
    s(:def, :comment=,
      s(:args,
        s(:arg, :comment)),
      s(:begin,
        s(:lvasgn, :comment,
          s(:case,
            s(:lvar, :comment),
            s(:when,
              s(:const,
                s(:const, nil, :RDoc), :Comment),
              s(:send,
                s(:lvar, :comment), :normalize)),
            s(:send, nil, :normalize_comment,
              s(:lvar, :comment)))),
        s(:if,
          s(:send,
            s(:ivar, :@comment), :empty?), nil,
          s(:lvasgn, :comment,
            s(:dstr,
              s(:begin,
                s(:ivar, :@comment)),
              s(:str, "\n---\n"),
              s(:begin,
                s(:lvar, :comment))))),
        s(:super,
          s(:lvar, :comment)))),
    s(:def, :complete,
      s(:args,
        s(:arg, :min_visibility)),
      s(:begin,
        s(:send, nil, :update_aliases),
        s(:send, nil, :remove_nodoc_children),
        s(:send, nil, :update_includes),
        s(:send, nil, :remove_invisible,
          s(:lvar, :min_visibility)))),
    s(:def, :document_self_or_methods,
      s(:args),
      s(:or,
        s(:send, nil, :document_self),
        s(:block,
          s(:send,
            s(:send, nil, :method_list), :any?),
          s(:args,
            s(:arg, :m)),
          s(:send,
            s(:lvar, :m), :document_self)))),
    s(:def, :documented?,
      s(:args),
      s(:begin,
        s(:if,
          s(:ivar, :@received_nodoc),
          s(:return,
            s(:true)), nil),
        s(:if,
          s(:send,
            s(:ivar, :@comment_location), :empty?),
          s(:return,
            s(:false)), nil),
        s(:block,
          s(:send,
            s(:ivar, :@comment_location), :any?),
          s(:args,
            s(:arg, :comment),
            s(:arg, :_)),
          s(:send,
            s(:send,
              s(:lvar, :comment), :empty?), :!)))),
    s(:def, :each_ancestor,
      s(:args),
      s(:begin,
        s(:if,
          s(:send, nil, :block_given?), nil,
          s(:return,
            s(:send, nil, :enum_for,
              s(:send, nil, :__method__)))),
        s(:block,
          s(:send,
            s(:send, nil, :ancestors), :each),
          s(:args,
            s(:arg, :mod)),
          s(:begin,
            s(:if,
              s(:send,
                s(:const, nil, :String), :===,
                s(:lvar, :mod)),
              s(:next), nil),
            s(:if,
              s(:send,
                s(:self), :==,
                s(:lvar, :mod)),
              s(:next), nil),
            s(:yield,
              s(:lvar, :mod)))))),
    s(:def, :find_ancestor_local_symbol,
      s(:args,
        s(:arg, :symbol)),
      s(:begin,
        s(:block,
          s(:send, nil, :each_ancestor),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :res,
              s(:send,
                s(:lvar, :m), :find_local_symbol,
                s(:lvar, :symbol))),
            s(:if,
              s(:lvar, :res),
              s(:return,
                s(:lvar, :res)), nil))),
        s(:nil))),
    s(:def, :find_class_named,
      s(:args,
        s(:arg, :name)),
      s(:begin,
        s(:if,
          s(:send,
            s(:send, nil, :full_name), :==,
            s(:lvar, :name)),
          s(:return,
            s(:self)), nil),
        s(:if,
          s(:send,
            s(:ivar, :@name), :==,
            s(:lvar, :name)),
          s(:return,
            s(:self)), nil),
        s(:block,
          s(:send,
            s(:send,
              s(:ivar, :@classes), :values), :find),
          s(:args,
            s(:arg, :klass)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :klass), :==,
                s(:self)),
              s(:next), nil),
            s(:send,
              s(:lvar, :klass), :find_class_named,
              s(:lvar, :name)))))),
    s(:def, :full_name,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@full_name),
        s(:if,
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :ClassModule), :===,
            s(:send, nil, :parent)),
          s(:dstr,
            s(:begin,
              s(:send,
                s(:send, nil, :parent), :full_name)),
            s(:str, "::"),
            s(:begin,
              s(:ivar, :@name))),
          s(:ivar, :@name)))),
    s(:def, :marshal_dump,
      s(:args),
      s(:begin,
        s(:lvasgn, :attrs,
          s(:send,
            s(:block,
              s(:send,
                s(:send,
                  s(:send, nil, :attributes), :sort), :map),
              s(:args,
                s(:arg, :attr)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :attr), :display?), nil,
                  s(:next)),
                s(:array,
                  s(:send,
                    s(:lvar, :attr), :name),
                  s(:send,
                    s(:lvar, :attr), :rw),
                  s(:send,
                    s(:lvar, :attr), :visibility),
                  s(:send,
                    s(:lvar, :attr), :singleton),
                  s(:send,
                    s(:lvar, :attr), :file_name)))), :compact)),
        s(:lvasgn, :method_types,
          s(:block,
            s(:send,
              s(:send, nil, :methods_by_type), :map),
            s(:args,
              s(:arg, :type),
              s(:arg, :visibilities)),
            s(:begin,
              s(:lvasgn, :visibilities,
                s(:block,
                  s(:send,
                    s(:lvar, :visibilities), :map),
                  s(:args,
                    s(:arg, :visibility),
                    s(:arg, :methods)),
                  s(:begin,
                    s(:lvasgn, :method_names,
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:lvar, :methods), :map),
                          s(:args,
                            s(:arg, :method)),
                          s(:begin,
                            s(:if,
                              s(:send,
                                s(:lvar, :method), :display?), nil,
                              s(:next)),
                            s(:array,
                              s(:send,
                                s(:lvar, :method), :name),
                              s(:send,
                                s(:lvar, :method), :file_name)))), :compact)),
                    s(:array,
                      s(:lvar, :visibility),
                      s(:send,
                        s(:lvar, :method_names), :uniq))))),
              s(:array,
                s(:lvar, :type),
                s(:lvar, :visibilities))))),
        s(:array,
          s(:const, nil, :MARSHAL_VERSION),
          s(:ivar, :@name),
          s(:send, nil, :full_name),
          s(:ivar, :@superclass),
          s(:send, nil, :parse,
            s(:ivar, :@comment_location)),
          s(:lvar, :attrs),
          s(:block,
            s(:send,
              s(:send, nil, :constants), :select),
            s(:args,
              s(:arg, :constant)),
            s(:send,
              s(:lvar, :constant), :display?)),
          s(:send,
            s(:block,
              s(:send,
                s(:send, nil, :includes), :map),
              s(:args,
                s(:arg, :incl)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :incl), :display?), nil,
                  s(:next)),
                s(:array,
                  s(:send,
                    s(:lvar, :incl), :name),
                  s(:send, nil, :parse,
                    s(:send,
                      s(:lvar, :incl), :comment)),
                  s(:send,
                    s(:lvar, :incl), :file_name)))), :compact),
          s(:lvar, :method_types),
          s(:send,
            s(:block,
              s(:send,
                s(:send, nil, :extends), :map),
              s(:args,
                s(:arg, :ext)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :ext), :display?), nil,
                  s(:next)),
                s(:array,
                  s(:send,
                    s(:lvar, :ext), :name),
                  s(:send, nil, :parse,
                    s(:send,
                      s(:lvar, :ext), :comment)),
                  s(:send,
                    s(:lvar, :ext), :file_name)))), :compact),
          s(:send,
            s(:ivar, :@sections), :values),
          s(:block,
            s(:send,
              s(:ivar, :@in_files), :map),
            s(:args,
              s(:arg, :tl)),
            s(:send,
              s(:lvar, :tl), :relative_name)),
          s(:send,
            s(:send, nil, :parent), :full_name),
          s(:send,
            s(:send, nil, :parent), :class)))),
    s(:def, :marshal_load,
      s(:args,
        s(:arg, :array)),
      s(:begin,
        s(:send, nil, :initialize_visibility),
        s(:send, nil, :initialize_methods_etc),
        s(:ivasgn, :@current_section,
          s(:nil)),
        s(:ivasgn, :@document_self,
          s(:true)),
        s(:ivasgn, :@done_documenting,
          s(:false)),
        s(:ivasgn, :@parent,
          s(:nil)),
        s(:ivasgn, :@temporary_section,
          s(:nil)),
        s(:ivasgn, :@visibility,
          s(:nil)),
        s(:ivasgn, :@classes,
          s(:hash)),
        s(:ivasgn, :@modules,
          s(:hash)),
        s(:ivasgn, :@name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 1))),
        s(:ivasgn, :@full_name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 2))),
        s(:ivasgn, :@superclass,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 3))),
        s(:ivasgn, :@comment,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 4))),
        s(:ivasgn, :@comment_location,
          s(:if,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :Document), :===,
              s(:send,
                s(:send,
                  s(:ivar, :@comment), :parts), :first)),
            s(:ivar, :@comment),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :Document), :new,
              s(:ivar, :@comment)))),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :array), :[],
              s(:int, 5)), :each),
          s(:args,
            s(:arg, :name),
            s(:arg, :rw),
            s(:arg, :visibility),
            s(:arg, :singleton),
            s(:arg, :file)),
          s(:begin,
            s(:or_asgn,
              s(:lvasgn, :singleton),
              s(:false)),
            s(:or_asgn,
              s(:lvasgn, :visibility),
              s(:sym, :public)),
            s(:lvasgn, :attr,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :Attr), :new,
                s(:nil),
                s(:lvar, :name),
                s(:lvar, :rw),
                s(:nil),
                s(:lvar, :singleton))),
            s(:send, nil, :add_attribute,
              s(:lvar, :attr)),
            s(:send,
              s(:lvar, :attr), :visibility=,
              s(:lvar, :visibility)),
            s(:send,
              s(:lvar, :attr), :record_location,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :TopLevel), :new,
                s(:lvar, :file))))),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :array), :[],
              s(:int, 6)), :each),
          s(:args,
            s(:arg, :constant),
            s(:arg, :comment),
            s(:arg, :file)),
          s(:case,
            s(:lvar, :constant),
            s(:when,
              s(:const,
                s(:const, nil, :RDoc), :Constant),
              s(:send, nil, :add_constant,
                s(:lvar, :constant))),
            s(:begin,
              s(:lvasgn, :constant,
                s(:send, nil, :add_constant,
                  s(:send,
                    s(:const,
                      s(:const, nil, :RDoc), :Constant), :new,
                    s(:lvar, :constant),
                    s(:nil),
                    s(:lvar, :comment)))),
              s(:send,
                s(:lvar, :constant), :record_location,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :TopLevel), :new,
                  s(:lvar, :file)))))),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :array), :[],
              s(:int, 7)), :each),
          s(:args,
            s(:arg, :name),
            s(:arg, :comment),
            s(:arg, :file)),
          s(:begin,
            s(:lvasgn, :incl,
              s(:send, nil, :add_include,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :Include), :new,
                  s(:lvar, :name),
                  s(:lvar, :comment)))),
            s(:send,
              s(:lvar, :incl), :record_location,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :TopLevel), :new,
                s(:lvar, :file))))),
        s(:block,
          s(:send,
            s(:send,
              s(:lvar, :array), :[],
              s(:int, 8)), :each),
          s(:args,
            s(:arg, :type),
            s(:arg, :visibilities)),
          s(:block,
            s(:send,
              s(:lvar, :visibilities), :each),
            s(:args,
              s(:arg, :visibility),
              s(:arg, :methods)),
            s(:begin,
              s(:ivasgn, :@visibility,
                s(:lvar, :visibility)),
              s(:block,
                s(:send,
                  s(:lvar, :methods), :each),
                s(:args,
                  s(:arg, :name),
                  s(:arg, :file)),
                s(:begin,
                  s(:lvasgn, :method,
                    s(:send,
                      s(:const,
                        s(:const, nil, :RDoc), :AnyMethod), :new,
                      s(:nil),
                      s(:lvar, :name))),
                  s(:if,
                    s(:send,
                      s(:lvar, :type), :==,
                      s(:str, "class")),
                    s(:send,
                      s(:lvar, :method), :singleton=,
                      s(:true)), nil),
                  s(:send,
                    s(:lvar, :method), :record_location,
                    s(:send,
                      s(:const,
                        s(:const, nil, :RDoc), :TopLevel), :new,
                      s(:lvar, :file))),
                  s(:send, nil, :add_method,
                    s(:lvar, :method))))))),
        s(:if,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 9)),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :array), :[],
                s(:int, 9)), :each),
            s(:args,
              s(:arg, :name),
              s(:arg, :comment),
              s(:arg, :file)),
            s(:begin,
              s(:lvasgn, :ext,
                s(:send, nil, :add_extend,
                  s(:send,
                    s(:const,
                      s(:const, nil, :RDoc), :Extend), :new,
                    s(:lvar, :name),
                    s(:lvar, :comment)))),
              s(:send,
                s(:lvar, :ext), :record_location,
                s(:send,
                  s(:const,
                    s(:const, nil, :RDoc), :TopLevel), :new,
                  s(:lvar, :file))))), nil),
        s(:lvasgn, :sections,
          s(:block,
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :array), :[],
                    s(:int, 10)),
                  s(:array))), :map),
            s(:args,
              s(:arg, :section)),
            s(:array,
              s(:send,
                s(:lvar, :section), :title),
              s(:lvar, :section)))),
        s(:ivasgn, :@sections,
          s(:send,
            s(:const, nil, :Hash), :[],
            s(:splat,
              s(:send,
                s(:lvar, :sections), :flatten)))),
        s(:ivasgn, :@current_section,
          s(:send, nil, :add_section,
            s(:nil))),
        s(:ivasgn, :@in_files,
          s(:array)),
        s(:block,
          s(:send,
            s(:begin,
              s(:or,
                s(:send,
                  s(:lvar, :array), :[],
                  s(:int, 11)),
                s(:array))), :each),
          s(:args,
            s(:arg, :filename)),
          s(:send, nil, :record_location,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :TopLevel), :new,
              s(:lvar, :filename)))),
        s(:ivasgn, :@parent_name,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 12))),
        s(:ivasgn, :@parent_class,
          s(:send,
            s(:lvar, :array), :[],
            s(:int, 13))))),
    s(:def, :merge,
      s(:args,
        s(:arg, :class_module)),
      s(:begin,
        s(:ivasgn, :@parent,
          s(:send,
            s(:lvar, :class_module), :parent)),
        s(:ivasgn, :@parent_name,
          s(:send,
            s(:lvar, :class_module), :parent_name)),
        s(:lvasgn, :other_document,
          s(:send, nil, :parse,
            s(:send,
              s(:lvar, :class_module), :comment_location))),
        s(:if,
          s(:lvar, :other_document),
          s(:begin,
            s(:lvasgn, :document,
              s(:send, nil, :parse,
                s(:ivar, :@comment_location))),
            s(:lvasgn, :document,
              s(:send,
                s(:lvar, :document), :merge,
                s(:lvar, :other_document))),
            s(:ivasgn, :@comment,
              s(:ivasgn, :@comment_location,
                s(:lvar, :document)))), nil),
        s(:lvasgn, :cm,
          s(:lvar, :class_module)),
        s(:lvasgn, :other_files,
          s(:send,
            s(:lvar, :cm), :in_files)),
        s(:block,
          s(:send, nil, :merge_collections,
            s(:send, nil, :attributes),
            s(:send,
              s(:lvar, :cm), :attributes),
            s(:lvar, :other_files)),
          s(:args,
            s(:arg, :add),
            s(:arg, :attr)),
          s(:if,
            s(:lvar, :add),
            s(:send, nil, :add_attribute,
              s(:lvar, :attr)),
            s(:begin,
              s(:send,
                s(:ivar, :@attributes), :delete,
                s(:lvar, :attr)),
              s(:send,
                s(:ivar, :@methods_hash), :delete,
                s(:send,
                  s(:lvar, :attr), :pretty_name))))),
        s(:block,
          s(:send, nil, :merge_collections,
            s(:send, nil, :constants),
            s(:send,
              s(:lvar, :cm), :constants),
            s(:lvar, :other_files)),
          s(:args,
            s(:arg, :add),
            s(:arg, :const)),
          s(:if,
            s(:lvar, :add),
            s(:send, nil, :add_constant,
              s(:lvar, :const)),
            s(:begin,
              s(:send,
                s(:ivar, :@constants), :delete,
                s(:lvar, :const)),
              s(:send,
                s(:ivar, :@constants_hash), :delete,
                s(:send,
                  s(:lvar, :const), :name))))),
        s(:block,
          s(:send, nil, :merge_collections,
            s(:send, nil, :includes),
            s(:send,
              s(:lvar, :cm), :includes),
            s(:lvar, :other_files)),
          s(:args,
            s(:arg, :add),
            s(:arg, :incl)),
          s(:if,
            s(:lvar, :add),
            s(:send, nil, :add_include,
              s(:lvar, :incl)),
            s(:send,
              s(:ivar, :@includes), :delete,
              s(:lvar, :incl)))),
        s(:send,
          s(:ivar, :@includes), :uniq!),
        s(:block,
          s(:send, nil, :merge_collections,
            s(:send, nil, :extends),
            s(:send,
              s(:lvar, :cm), :extends),
            s(:lvar, :other_files)),
          s(:args,
            s(:arg, :add),
            s(:arg, :ext)),
          s(:if,
            s(:lvar, :add),
            s(:send, nil, :add_extend,
              s(:lvar, :ext)),
            s(:send,
              s(:ivar, :@extends), :delete,
              s(:lvar, :ext)))),
        s(:send,
          s(:ivar, :@extends), :uniq!),
        s(:block,
          s(:send, nil, :merge_collections,
            s(:send, nil, :method_list),
            s(:send,
              s(:lvar, :cm), :method_list),
            s(:lvar, :other_files)),
          s(:args,
            s(:arg, :add),
            s(:arg, :meth)),
          s(:if,
            s(:lvar, :add),
            s(:send, nil, :add_method,
              s(:lvar, :meth)),
            s(:begin,
              s(:send,
                s(:ivar, :@method_list), :delete,
                s(:lvar, :meth)),
              s(:send,
                s(:ivar, :@methods_hash), :delete,
                s(:send,
                  s(:lvar, :meth), :pretty_name))))),
        s(:send, nil, :merge_sections,
          s(:lvar, :cm)),
        s(:self))),
    s(:def, :merge_collections,
      s(:args,
        s(:arg, :mine),
        s(:arg, :other),
        s(:arg, :other_files),
        s(:blockarg, :block)),
      s(:begin,
        s(:lvasgn, :my_things,
          s(:block,
            s(:send,
              s(:lvar, :mine), :group_by),
            s(:args,
              s(:arg, :thing)),
            s(:send,
              s(:lvar, :thing), :file))),
        s(:lvasgn, :other_things,
          s(:block,
            s(:send,
              s(:lvar, :other), :group_by),
            s(:args,
              s(:arg, :thing)),
            s(:send,
              s(:lvar, :thing), :file))),
        s(:send, nil, :remove_things,
          s(:lvar, :my_things),
          s(:lvar, :other_files),
          s(:block_pass,
            s(:lvar, :block))),
        s(:send, nil, :add_things,
          s(:lvar, :my_things),
          s(:lvar, :other_things),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:def, :merge_sections,
      s(:args,
        s(:arg, :cm)),
      s(:begin,
        s(:lvasgn, :my_sections,
          s(:block,
            s(:send,
              s(:send, nil, :sections), :group_by),
            s(:args,
              s(:arg, :section)),
            s(:send,
              s(:lvar, :section), :title))),
        s(:lvasgn, :other_sections,
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :cm), :sections), :group_by),
            s(:args,
              s(:arg, :section)),
            s(:send,
              s(:lvar, :section), :title))),
        s(:lvasgn, :other_files,
          s(:send,
            s(:lvar, :cm), :in_files)),
        s(:block,
          s(:send, nil, :remove_things,
            s(:lvar, :my_sections),
            s(:lvar, :other_files)),
          s(:args,
            s(:arg, :_),
            s(:arg, :section)),
          s(:send,
            s(:ivar, :@sections), :delete,
            s(:send,
              s(:lvar, :section), :title))),
        s(:block,
          s(:send,
            s(:lvar, :other_sections), :each),
          s(:args,
            s(:arg, :group),
            s(:arg, :sections)),
          s(:if,
            s(:send,
              s(:lvar, :my_sections), :include?,
              s(:lvar, :group)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :my_sections), :[],
                  s(:lvar, :group)), :each),
              s(:args,
                s(:arg, :my_section)),
              s(:begin,
                s(:lvasgn, :other_section,
                  s(:send,
                    s(:send,
                      s(:lvar, :cm), :sections_hash), :[],
                    s(:lvar, :group))),
                s(:lvasgn, :my_comments,
                  s(:send,
                    s(:lvar, :my_section), :comments)),
                s(:lvasgn, :other_comments,
                  s(:send,
                    s(:lvar, :other_section), :comments)),
                s(:lvasgn, :other_files,
                  s(:send,
                    s(:lvar, :other_section), :in_files)),
                s(:block,
                  s(:send, nil, :merge_collections,
                    s(:lvar, :my_comments),
                    s(:lvar, :other_comments),
                    s(:lvar, :other_files)),
                  s(:args,
                    s(:arg, :add),
                    s(:arg, :comment)),
                  s(:if,
                    s(:lvar, :add),
                    s(:send,
                      s(:lvar, :my_section), :add_comment,
                      s(:lvar, :comment)),
                    s(:send,
                      s(:lvar, :my_section), :remove_comment,
                      s(:lvar, :comment)))))),
            s(:block,
              s(:send,
                s(:lvar, :sections), :each),
              s(:args,
                s(:arg, :section)),
              s(:send, nil, :add_section,
                s(:lvar, :group),
                s(:send,
                  s(:lvar, :section), :comments))))))),
    s(:def, :module?,
      s(:args),
      s(:false)),
    s(:def, :name=,
      s(:args,
        s(:arg, :new_name)),
      s(:ivasgn, :@name,
        s(:lvar, :new_name))),
    s(:def, :parse,
      s(:args,
        s(:arg, :comment_location)),
      s(:case,
        s(:lvar, :comment_location),
        s(:when,
          s(:const, nil, :String),
          s(:zsuper)),
        s(:when,
          s(:const, nil, :Array),
          s(:begin,
            s(:lvasgn, :docs,
              s(:block,
                s(:send,
                  s(:lvar, :comment_location), :map),
                s(:args,
                  s(:arg, :comment),
                  s(:arg, :location)),
                s(:begin,
                  s(:lvasgn, :doc,
                    s(:super,
                      s(:lvar, :comment))),
                  s(:send,
                    s(:lvar, :doc), :file=,
                    s(:lvar, :location)),
                  s(:lvar, :doc)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :Document), :new,
              s(:splat,
                s(:lvar, :docs))))),
        s(:when,
          s(:const,
            s(:const, nil, :RDoc), :Comment),
          s(:begin,
            s(:lvasgn, :doc,
              s(:super,
                s(:send,
                  s(:lvar, :comment_location), :text),
                s(:send,
                  s(:lvar, :comment_location), :format))),
            s(:send,
              s(:lvar, :doc), :file=,
              s(:send,
                s(:lvar, :comment_location), :location)),
            s(:lvar, :doc))),
        s(:when,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Document),
          s(:return,
            s(:lvar, :comment_location))),
        s(:send, nil, :raise,
          s(:const, nil, :ArgumentError),
          s(:dstr,
            s(:str, "unknown comment class "),
            s(:begin,
              s(:send,
                s(:lvar, :comment_location), :class)))))),
    s(:def, :path,
      s(:args),
      s(:send, nil, :http_url,
        s(:send,
          s(:send,
            s(:send,
              s(:ivar, :@store), :rdoc), :generator), :class_dir))),
    s(:def, :name_for_path,
      s(:args),
      s(:if,
        s(:send, nil, :is_alias_for),
        s(:send,
          s(:send, nil, :is_alias_for), :full_name),
        s(:send, nil, :full_name))),
    s(:def, :non_aliases,
      s(:args),
      s(:or_asgn,
        s(:ivasgn, :@non_aliases),
        s(:block,
          s(:send,
            s(:send, nil, :classes_and_modules), :reject),
          s(:args,
            s(:arg, :cm)),
          s(:send,
            s(:lvar, :cm), :is_alias_for)))),
    s(:def, :remove_nodoc_children,
      s(:args),
      s(:begin,
        s(:lvasgn, :prefix,
          s(:send,
            s(:send,
              s(:self), :full_name), :+,
            s(:str, "::"))),
        s(:block,
          s(:send,
            s(:send, nil, :modules_hash), :each_key),
          s(:args,
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :full_name,
              s(:send,
                s(:lvar, :prefix), :+,
                s(:lvar, :name))),
            s(:if,
              s(:send,
                s(:send,
                  s(:ivar, :@store), :modules_hash), :[],
                s(:lvar, :full_name)), nil,
              s(:send,
                s(:send, nil, :modules_hash), :delete,
                s(:lvar, :name))))),
        s(:block,
          s(:send,
            s(:send, nil, :classes_hash), :each_key),
          s(:args,
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :full_name,
              s(:send,
                s(:lvar, :prefix), :+,
                s(:lvar, :name))),
            s(:if,
              s(:send,
                s(:send,
                  s(:ivar, :@store), :classes_hash), :[],
                s(:lvar, :full_name)), nil,
              s(:send,
                s(:send, nil, :classes_hash), :delete,
                s(:lvar, :name))))))),
    s(:def, :remove_things,
      s(:args,
        s(:arg, :my_things),
        s(:arg, :other_files)),
      s(:block,
        s(:send,
          s(:lvar, :my_things), :delete_if),
        s(:args,
          s(:arg, :file),
          s(:arg, :things)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :other_files), :include?,
              s(:lvar, :file)), nil,
            s(:next,
              s(:false))),
          s(:block,
            s(:send,
              s(:lvar, :things), :each),
            s(:args,
              s(:arg, :thing)),
            s(:yield,
              s(:false),
              s(:lvar, :thing))),
          s(:true)))),
    s(:def, :search_record,
      s(:args),
      s(:array,
        s(:send, nil, :name),
        s(:send, nil, :full_name),
        s(:send, nil, :full_name),
        s(:str, ""),
        s(:send, nil, :path),
        s(:str, ""),
        s(:send, nil, :snippet,
          s(:ivar, :@comment_location)))),
    s(:def, :store=,
      s(:args,
        s(:arg, :store)),
      s(:begin,
        s(:zsuper),
        s(:block,
          s(:send,
            s(:ivar, :@attributes), :each),
          s(:args,
            s(:arg, :attr)),
          s(:send,
            s(:lvar, :attr), :store=,
            s(:lvar, :store))),
        s(:block,
          s(:send,
            s(:ivar, :@constants), :each),
          s(:args,
            s(:arg, :const)),
          s(:send,
            s(:lvar, :const), :store=,
            s(:lvar, :store))),
        s(:block,
          s(:send,
            s(:ivar, :@includes), :each),
          s(:args,
            s(:arg, :incl)),
          s(:send,
            s(:lvar, :incl), :store=,
            s(:lvar, :store))),
        s(:block,
          s(:send,
            s(:ivar, :@extends), :each),
          s(:args,
            s(:arg, :ext)),
          s(:send,
            s(:lvar, :ext), :store=,
            s(:lvar, :store))),
        s(:block,
          s(:send,
            s(:ivar, :@method_list), :each),
          s(:args,
            s(:arg, :meth)),
          s(:send,
            s(:lvar, :meth), :store=,
            s(:lvar, :store))))),
    s(:def, :superclass,
      s(:args),
      s(:or,
        s(:send,
          s(:ivar, :@store), :find_class_named,
          s(:ivar, :@superclass)),
        s(:ivar, :@superclass))),
    s(:def, :superclass=,
      s(:args,
        s(:arg, :superclass)),
      s(:begin,
        s(:if,
          s(:send, nil, :module?),
          s(:send, nil, :raise,
            s(:const, nil, :NoMethodError),
            s(:dstr,
              s(:begin,
                s(:send, nil, :full_name)),
              s(:str, " is a module"))), nil),
        s(:ivasgn, :@superclass,
          s(:lvar, :superclass)))),
    s(:def, :to_s,
      s(:args),
      s(:if,
        s(:send, nil, :is_alias_for),
        s(:dstr,
          s(:begin,
            s(:send,
              s(:send,
                s(:self), :class), :name)),
          s(:str, " "),
          s(:begin,
            s(:send,
              s(:self), :full_name)),
          s(:str, " -> "),
          s(:begin,
            s(:send, nil, :is_alias_for))),
        s(:zsuper))),
    s(:def, :type,
      s(:args),
      s(:if,
        s(:send, nil, :module?),
        s(:str, "module"),
        s(:str, "class"))),
    s(:def, :update_aliases,
      s(:args),
      s(:block,
        s(:send,
          s(:send, nil, :constants), :each),
        s(:args,
          s(:arg, :const)),
        s(:begin,
          s(:if,
            s(:lvasgn, :cm,
              s(:send,
                s(:lvar, :const), :is_alias_for)), nil,
            s(:next)),
          s(:lvasgn, :cm_alias,
            s(:send,
              s(:lvar, :cm), :dup)),
          s(:send,
            s(:lvar, :cm_alias), :name=,
            s(:send,
              s(:lvar, :const), :name)),
          s(:if,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :TopLevel), :===,
              s(:send,
                s(:lvar, :cm_alias), :parent)), nil,
            s(:begin,
              s(:send,
                s(:lvar, :cm_alias), :parent=,
                s(:self)),
              s(:send,
                s(:lvar, :cm_alias), :full_name=,
                s(:nil)))),
          s(:send,
            s(:send,
              s(:lvar, :cm_alias), :aliases), :clear),
          s(:send,
            s(:lvar, :cm_alias), :is_alias_for=,
            s(:lvar, :cm)),
          s(:if,
            s(:send,
              s(:lvar, :cm), :module?),
            s(:begin,
              s(:send,
                s(:send,
                  s(:ivar, :@store), :modules_hash), :[]=,
                s(:send,
                  s(:lvar, :cm_alias), :full_name),
                s(:lvar, :cm_alias)),
              s(:send,
                s(:send, nil, :modules_hash), :[]=,
                s(:send,
                  s(:lvar, :const), :name),
                s(:lvar, :cm_alias))),
            s(:begin,
              s(:send,
                s(:send,
                  s(:ivar, :@store), :classes_hash), :[]=,
                s(:send,
                  s(:lvar, :cm_alias), :full_name),
                s(:lvar, :cm_alias)),
              s(:send,
                s(:send, nil, :classes_hash), :[]=,
                s(:send,
                  s(:lvar, :const), :name),
                s(:lvar, :cm_alias)))),
          s(:send,
            s(:send,
              s(:lvar, :cm), :aliases), :<<,
            s(:lvar, :cm_alias))))),
    s(:def, :update_includes,
      s(:args),
      s(:begin,
        s(:block,
          s(:send,
            s(:send, nil, :includes), :reject!),
          s(:args,
            s(:arg, :include)),
          s(:begin,
            s(:lvasgn, :mod,
              s(:send,
                s(:lvar, :include), :module)),
            s(:and,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:const, nil, :String), :===,
                    s(:lvar, :mod))), :!),
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@store), :modules_hash), :[],
                  s(:send,
                    s(:lvar, :mod), :full_name)), :nil?)))),
        s(:send,
          s(:send, nil, :includes), :uniq!))),
    s(:def, :update_extends,
      s(:args),
      s(:begin,
        s(:block,
          s(:send,
            s(:send, nil, :extends), :reject!),
          s(:args,
            s(:arg, :ext)),
          s(:begin,
            s(:lvasgn, :mod,
              s(:send,
                s(:lvar, :ext), :module)),
            s(:and,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:const, nil, :String), :===,
                    s(:lvar, :mod))), :!),
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@store), :modules_hash), :[],
                  s(:send,
                    s(:lvar, :mod), :full_name)), :nil?)))),
        s(:send,
          s(:send, nil, :extends), :uniq!)))))
