s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "io/console/size")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Stats), :Normal),
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Stats), :Quiet),
    s(:begin,
      s(:def, :begin_adding,
        s(:args),
        s(:begin,
          s(:send, nil, :puts,
            s(:str, "Parsing sources...")),
          s(:ivasgn, :@last_width,
            s(:int, 0)))),
      s(:def, :print_file,
        s(:args,
          s(:arg, :files_so_far),
          s(:arg, :filename)),
        s(:begin,
          s(:lvasgn, :progress_bar,
            s(:send, nil, :sprintf,
              s(:str, "%3d%% [%2d/%2d]  "),
              s(:send,
                s(:send,
                  s(:int, 100), :*,
                  s(:lvar, :files_so_far)), :/,
                s(:ivar, :@num_files)),
              s(:lvar, :files_so_far),
              s(:ivar, :@num_files))),
          s(:lvasgn, :terminal_width,
            s(:if,
              s(:and,
                s(:defined?,
                  s(:const, nil, :IO)),
                s(:send,
                  s(:const, nil, :IO), :respond_to?,
                  s(:sym, :console_size))),
              s(:or,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :IO), :console_size), :[],
                      s(:int, 1)), :to_i), :nonzero?),
                s(:int, 80)),
              s(:int, 80))),
          s(:lvasgn, :max_filename_size,
            s(:send,
              s(:lvar, :terminal_width), :-,
              s(:send,
                s(:lvar, :progress_bar), :size))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :filename), :size), :>,
              s(:lvar, :max_filename_size)),
            s(:begin,
              s(:lvasgn, :filename,
                s(:send,
                  s(:lvar, :filename), :[],
                  s(:irange,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :filename), :size), :-,
                        s(:lvar, :max_filename_size))),
                    s(:int, -1)))),
              s(:send,
                s(:lvar, :filename), :[]=,
                s(:irange,
                  s(:int, 0),
                  s(:int, 2)),
                s(:str, "..."))), nil),
          s(:lvasgn, :line,
            s(:dstr,
              s(:begin,
                s(:lvar, :progress_bar)),
              s(:begin,
                s(:lvar, :filename)))),
          s(:if,
            s(:send,
              s(:gvar, :$stdout), :tty?),
            s(:begin,
              s(:if,
                s(:and,
                  s(:ivar, :@last_width),
                  s(:send,
                    s(:ivar, :@last_width), :>,
                    s(:int, 0))),
                s(:send,
                  s(:gvar, :$stdout), :print,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:str, "\r"), :<<,
                        s(:begin,
                          s(:send,
                            s(:str, " "), :*,
                            s(:ivar, :@last_width)))), :<<,
                      s(:begin,
                        s(:send,
                          s(:str, "\b"), :*,
                          s(:ivar, :@last_width)))), :<<,
                    s(:str, "\r"))), nil),
              s(:ivasgn, :@last_width,
                s(:send,
                  s(:lvar, :line), :size)),
              s(:send,
                s(:gvar, :$stdout), :print,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :line)),
                  s(:str, "\r")))),
            s(:send,
              s(:gvar, :$stdout), :puts,
              s(:lvar, :line))),
          s(:send,
            s(:gvar, :$stdout), :flush))),
      s(:def, :done_adding,
        s(:args),
        s(:send, nil, :puts)))))
