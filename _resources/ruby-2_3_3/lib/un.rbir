s(:begin,
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:module,
    s(:const, nil, :FileUtils),
    s(:ivasgn, :@fileutils_output,
      s(:gvar, :$stdout))),
  s(:def, :setup,
    s(:args,
      s(:optarg, :options,
        s(:str, "")),
      s(:restarg, :long_options)),
    s(:begin,
      s(:lvasgn, :caller,
        s(:send,
          s(:send,
            s(:send, nil, :caller_locations,
              s(:int, 1),
              s(:int, 1)), :[],
            s(:int, 0)), :label)),
      s(:lvasgn, :opt_hash,
        s(:hash)),
      s(:lvasgn, :argv,
        s(:array)),
      s(:block,
        s(:send,
          s(:const, nil, :OptionParser), :new),
        s(:args,
          s(:arg, :o)),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :options), :scan,
              s(:regexp,
                s(:str, ".:?"),
                s(:regopt))),
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:lvasgn, :opt_name,
                s(:send,
                  s(:send,
                    s(:lvar, :s), :delete,
                    s(:str, ":")), :intern)),
              s(:block,
                s(:send,
                  s(:lvar, :o), :on,
                  s(:send,
                    s(:str, "-"), :+,
                    s(:send,
                      s(:lvar, :s), :tr,
                      s(:str, ":"),
                      s(:str, " ")))),
                s(:args,
                  s(:arg, :val)),
                s(:send,
                  s(:lvar, :opt_hash), :[]=,
                  s(:lvar, :opt_name),
                  s(:lvar, :val))))),
          s(:block,
            s(:send,
              s(:lvar, :long_options), :each),
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :opt_name),
                  s(:lvasgn, :arg_name)),
                s(:send,
                  s(:lvar, :s), :split,
                  s(:regexp,
                    s(:str, "(?=[\\s=])"),
                    s(:regopt)),
                  s(:int, 2))),
              s(:send,
                s(:lvar, :opt_name), :sub!,
                s(:regexp,
                  s(:str, "\\A--"),
                  s(:regopt)),
                s(:str, "")),
              s(:lvasgn, :s,
                s(:dstr,
                  s(:str, "--"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :opt_name), :gsub,
                        s(:regexp,
                          s(:str, "([A-Z]+|[a-z])([A-Z])"),
                          s(:regopt)),
                        s(:str, "\\1-\\2")), :downcase)),
                  s(:begin,
                    s(:lvar, :arg_name)))),
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :puts,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :opt_name)),
                    s(:str, "=>"),
                    s(:begin,
                      s(:lvar, :s)))), nil),
              s(:lvasgn, :opt_name,
                s(:send,
                  s(:lvar, :opt_name), :intern)),
              s(:block,
                s(:send,
                  s(:lvar, :o), :on,
                  s(:lvar, :s)),
                s(:args,
                  s(:arg, :val)),
                s(:send,
                  s(:lvar, :opt_hash), :[]=,
                  s(:lvar, :opt_name),
                  s(:lvar, :val))))),
          s(:block,
            s(:send,
              s(:lvar, :o), :on,
              s(:str, "-v")),
            s(:args),
            s(:send,
              s(:lvar, :opt_hash), :[]=,
              s(:sym, :verbose),
              s(:true))),
          s(:block,
            s(:send,
              s(:lvar, :o), :on,
              s(:str, "--help")),
            s(:args),
            s(:begin,
              s(:send,
                s(:const, nil, :UN), :help,
                s(:array,
                  s(:lvar, :caller))),
              s(:send, nil, :exit))),
          s(:block,
            s(:send,
              s(:lvar, :o), :order!,
              s(:const, nil, :ARGV)),
            s(:args,
              s(:arg, :x)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "[*?\\[{]"),
                  s(:regopt)),
                s(:lvar, :x)),
              s(:send,
                s(:lvar, :argv), :concat,
                s(:send,
                  s(:const, nil, :Dir), :[],
                  s(:lvar, :x))),
              s(:send,
                s(:lvar, :argv), :<<,
                s(:lvar, :x)))))),
      s(:yield,
        s(:lvar, :argv),
        s(:lvar, :opt_hash)))),
  s(:def, :cp,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "pr")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :cmd,
          s(:str, "cp")),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :r)),
          s(:op_asgn,
            s(:lvasgn, :cmd), :+,
            s(:str, "_r")), nil),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :p)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :preserve),
            s(:true)), nil),
        s(:lvasgn, :dest,
          s(:send,
            s(:lvar, :argv), :pop)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :argv), :size), :==,
            s(:int, 1)),
          s(:lvasgn, :argv,
            s(:send,
              s(:lvar, :argv), :[],
              s(:int, 0))), nil),
        s(:send,
          s(:const, nil, :FileUtils), :send,
          s(:lvar, :cmd),
          s(:lvar, :argv),
          s(:lvar, :dest),
          s(:lvar, :options))))),
  s(:def, :ln,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "sf")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :cmd,
          s(:str, "ln")),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :s)),
          s(:op_asgn,
            s(:lvasgn, :cmd), :+,
            s(:str, "_s")), nil),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :f)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :force),
            s(:true)), nil),
        s(:lvasgn, :dest,
          s(:send,
            s(:lvar, :argv), :pop)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :argv), :size), :==,
            s(:int, 1)),
          s(:lvasgn, :argv,
            s(:send,
              s(:lvar, :argv), :[],
              s(:int, 0))), nil),
        s(:send,
          s(:const, nil, :FileUtils), :send,
          s(:lvar, :cmd),
          s(:lvar, :argv),
          s(:lvar, :dest),
          s(:lvar, :options))))),
  s(:def, :mv,
    s(:args),
    s(:block,
      s(:send, nil, :setup),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :dest,
          s(:send,
            s(:lvar, :argv), :pop)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :argv), :size), :==,
            s(:int, 1)),
          s(:lvasgn, :argv,
            s(:send,
              s(:lvar, :argv), :[],
              s(:int, 0))), nil),
        s(:send,
          s(:const, nil, :FileUtils), :mv,
          s(:lvar, :argv),
          s(:lvar, :dest),
          s(:lvar, :options))))),
  s(:def, :rm,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "fr")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :cmd,
          s(:str, "rm")),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :r)),
          s(:op_asgn,
            s(:lvasgn, :cmd), :+,
            s(:str, "_r")), nil),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :f)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :force),
            s(:true)), nil),
        s(:send,
          s(:const, nil, :FileUtils), :send,
          s(:lvar, :cmd),
          s(:lvar, :argv),
          s(:lvar, :options))))),
  s(:def, :mkdir,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "p")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :cmd,
          s(:str, "mkdir")),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :p)),
          s(:op_asgn,
            s(:lvasgn, :cmd), :+,
            s(:str, "_p")), nil),
        s(:send,
          s(:const, nil, :FileUtils), :send,
          s(:lvar, :cmd),
          s(:lvar, :argv),
          s(:lvar, :options))))),
  s(:def, :rmdir,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "p")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :p)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :parents),
            s(:true)), nil),
        s(:send,
          s(:const, nil, :FileUtils), :rmdir,
          s(:lvar, :argv),
          s(:lvar, :options))))),
  s(:def, :install,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "pm:")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:send,
          s(:lvar, :options), :[]=,
          s(:sym, :mode),
          s(:if,
            s(:begin,
              s(:lvasgn, :mode,
                s(:send,
                  s(:lvar, :options), :delete,
                  s(:sym, :m)))),
            s(:send,
              s(:lvar, :mode), :oct),
            s(:int, 493))),
        s(:if,
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :p)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :preserve),
            s(:true)), nil),
        s(:lvasgn, :dest,
          s(:send,
            s(:lvar, :argv), :pop)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :argv), :size), :==,
            s(:int, 1)),
          s(:lvasgn, :argv,
            s(:send,
              s(:lvar, :argv), :[],
              s(:int, 0))), nil),
        s(:send,
          s(:const, nil, :FileUtils), :install,
          s(:lvar, :argv),
          s(:lvar, :dest),
          s(:lvar, :options))))),
  s(:def, :chmod,
    s(:args),
    s(:block,
      s(:send, nil, :setup),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :mode,
          s(:send,
            s(:send,
              s(:lvar, :argv), :shift), :oct)),
        s(:send,
          s(:const, nil, :FileUtils), :chmod,
          s(:lvar, :mode),
          s(:lvar, :argv),
          s(:lvar, :options))))),
  s(:def, :touch,
    s(:args),
    s(:block,
      s(:send, nil, :setup),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:send,
        s(:const, nil, :FileUtils), :touch,
        s(:lvar, :argv),
        s(:lvar, :options)))),
  s(:def, :wait_writable,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "n:w:v")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:lvasgn, :verbose,
          s(:send,
            s(:lvar, :options), :[],
            s(:sym, :verbose))),
        s(:and,
          s(:lvasgn, :n,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :n))),
          s(:lvasgn, :n,
            s(:send, nil, :Integer,
              s(:lvar, :n)))),
        s(:lvasgn, :wait,
          s(:if,
            s(:begin,
              s(:lvasgn, :wait,
                s(:send,
                  s(:lvar, :options), :[],
                  s(:sym, :w)))),
            s(:send, nil, :Float,
              s(:lvar, :wait)),
            s(:float, 0.2))),
        s(:block,
          s(:send,
            s(:lvar, :argv), :each),
          s(:args,
            s(:arg, :file)),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :open,
                s(:lvar, :file),
                s(:str, "r+b")),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :ENOENT)), nil,
                s(:break)),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :EACCES)),
                s(:lvasgn, :e),
                s(:begin,
                  s(:if,
                    s(:and,
                      s(:lvar, :n),
                      s(:send,
                        s(:begin,
                          s(:op_asgn,
                            s(:lvasgn, :n), :-,
                            s(:int, 1))), :<=,
                        s(:int, 0))),
                    s(:send, nil, :raise), nil),
                  s(:if,
                    s(:lvar, :verbose),
                    s(:begin,
                      s(:send, nil, :puts,
                        s(:lvar, :e)),
                      s(:send,
                        s(:const, nil, :STDOUT), :flush)), nil),
                  s(:send, nil, :sleep,
                    s(:lvar, :wait)),
                  s(:retry))), nil)))))),
  s(:def, :mkmf,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, "d:h:l:f:v:t:m:c:"),
        s(:str, "vendor")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "mkmf")),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :d))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :dir_config,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :h))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_header,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :l))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_library,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :f))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_func,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :v))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_var,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :t))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_type,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :m))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_macro,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :c))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :opt), :split,
                s(:regexp,
                  s(:str, ":"),
                  s(:regopt))), :each),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :have_const,
              s(:splat,
                s(:send,
                  s(:lvar, :n), :split,
                  s(:regexp,
                    s(:str, ","),
                    s(:regopt))))))),
        s(:if,
          s(:send,
            s(:lvar, :options), :[],
            s(:sym, :vendor)),
          s(:send,
            s(:gvar, :$configure_args), :[]=,
            s(:str, "--vendor"),
            s(:true)), nil),
        s(:send, nil, :create_makefile,
          s(:splat,
            s(:lvar, :argv)))))),
  s(:def, :httpd,
    s(:args),
    s(:block,
      s(:send, nil, :setup,
        s(:str, ""),
        s(:str, "BindAddress=ADDR"),
        s(:str, "Port=PORT"),
        s(:str, "MaxClients=NUM"),
        s(:str, "TempDir=DIR"),
        s(:str, "DoNotReverseLookup"),
        s(:str, "RequestTimeout=SECOND"),
        s(:str, "HTTPVersion=VERSION")),
      s(:args,
        s(:arg, :argv),
        s(:arg, :options)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "webrick")),
        s(:and,
          s(:lvasgn, :opt,
            s(:send,
              s(:lvar, :options), :[],
              s(:sym, :RequestTimeout))),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :RequestTimeout),
            s(:send,
              s(:lvar, :opt), :to_i))),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :Port),
              s(:sym, :MaxClients)), :each),
          s(:args,
            s(:arg, :name)),
          s(:rescue,
            s(:and,
              s(:lvasgn, :opt,
                s(:send,
                  s(:lvar, :options), :[],
                  s(:lvar, :name))),
              s(:begin,
                s(:send,
                  s(:lvar, :options), :[]=,
                  s(:lvar, :name),
                  s(:send, nil, :Integer,
                    s(:lvar, :opt))))),
            s(:resbody, nil, nil,
              s(:nil)), nil)),
        s(:or_asgn,
          s(:send,
            s(:lvar, :options), :[],
            s(:sym, :Port)),
          s(:int, 8080)),
        s(:send,
          s(:lvar, :options), :[]=,
          s(:sym, :DocumentRoot),
          s(:or,
            s(:send,
              s(:lvar, :argv), :shift),
            s(:str, "."))),
        s(:lvasgn, :s,
          s(:send,
            s(:const,
              s(:const, nil, :WEBrick), :HTTPServer), :new,
            s(:lvar, :options))),
        s(:lvasgn, :shut,
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:lvar, :s), :shutdown))),
        s(:lvasgn, :siglist,
          s(:array,
            s(:str, "TERM"),
            s(:str, "QUIT"))),
        s(:if,
          s(:send,
            s(:const, nil, :STDIN), :tty?),
          s(:send,
            s(:lvar, :siglist), :concat,
            s(:array,
              s(:str, "HUP"),
              s(:str, "INT"))), nil),
        s(:op_asgn,
          s(:lvasgn, :siglist), :&,
          s(:send,
            s(:send,
              s(:const, nil, :Signal), :list), :keys)),
        s(:block,
          s(:send,
            s(:lvar, :siglist), :each),
          s(:args,
            s(:arg, :sig)),
          s(:send,
            s(:const, nil, :Signal), :trap,
            s(:lvar, :sig),
            s(:lvar, :shut))),
        s(:send,
          s(:lvar, :s), :start)))),
  s(:def, :help,
    s(:args),
    s(:block,
      s(:send, nil, :setup),
      s(:args,
        s(:arg, :argv)),
      s(:send,
        s(:const, nil, :UN), :help,
        s(:lvar, :argv)))),
  s(:module,
    s(:const, nil, :UN),
    s(:begin,
      s(:send, nil, :module_function),
      s(:def, :help,
        s(:args,
          s(:arg, :argv),
          s(:kwoptarg, :output,
            s(:gvar, :$stdout))),
        s(:begin,
          s(:lvasgn, :all,
            s(:send,
              s(:lvar, :argv), :empty?)),
          s(:lvasgn, :cmd,
            s(:nil)),
          s(:if,
            s(:lvar, :all),
            s(:lvasgn, :store,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :msg)),
                s(:send,
                  s(:lvar, :output), :<<,
                  s(:lvar, :msg)))),
            s(:begin,
              s(:lvasgn, :messages,
                s(:hash)),
              s(:lvasgn, :store,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :msg)),
                  s(:send,
                    s(:lvar, :messages), :[]=,
                    s(:lvar, :cmd),
                    s(:lvar, :msg)))))),
          s(:block,
            s(:send, nil, :open,
              s(:str, "(string)")),
            s(:args,
              s(:arg, :me)),
            s(:while,
              s(:send,
                s(:lvar, :me), :gets,
                s(:str, "##\n")),
              s(:if,
                s(:lvasgn, :help,
                  s(:send,
                    s(:lvar, :me), :gets,
                    s(:str, "\n\n"))),
                s(:if,
                  s(:or,
                    s(:lvar, :all),
                    s(:send,
                      s(:lvar, :argv), :include?,
                      s(:lvasgn, :cmd,
                        s(:send,
                          s(:lvar, :help), :[],
                          s(:regexp,
                            s(:str, "^#\\s*ruby\\s.*-e\\s+(\\w+)"),
                            s(:regopt)),
                          s(:int, 1))))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :store), :[],
                      s(:send,
                        s(:lvar, :help), :gsub,
                        s(:regexp,
                          s(:str, "^# ?"),
                          s(:regopt)),
                        s(:str, ""))),
                    s(:if,
                      s(:or,
                        s(:lvar, :all),
                        s(:send,
                          s(:send,
                            s(:lvar, :argv), :size), :>,
                          s(:send,
                            s(:lvar, :messages), :size))), nil,
                      s(:break))), nil), nil))),
          s(:if,
            s(:lvar, :messages),
            s(:block,
              s(:send,
                s(:lvar, :argv), :each),
              s(:args,
                s(:arg, :arg)),
              s(:send,
                s(:lvar, :output), :<<,
                s(:send,
                  s(:lvar, :messages), :[],
                  s(:lvar, :arg)))), nil))))))
