s(:begin,
  s(:send, nil, :require,
    s(:str, "date")),
  s(:class,
    s(:const, nil, :Time), nil,
    s(:begin,
      s(:sclass,
        s(:const, nil, :Time),
        s(:begin,
          s(:casgn, nil, :ZoneOffset,
            s(:hash,
              s(:pair,
                s(:str, "UTC"),
                s(:int, 0)),
              s(:pair,
                s(:str, "Z"),
                s(:int, 0)),
              s(:pair,
                s(:str, "UT"),
                s(:int, 0)),
              s(:pair,
                s(:str, "GMT"),
                s(:int, 0)),
              s(:pair,
                s(:str, "EST"),
                s(:int, -5)),
              s(:pair,
                s(:str, "EDT"),
                s(:int, -4)),
              s(:pair,
                s(:str, "CST"),
                s(:int, -6)),
              s(:pair,
                s(:str, "CDT"),
                s(:int, -5)),
              s(:pair,
                s(:str, "MST"),
                s(:int, -7)),
              s(:pair,
                s(:str, "MDT"),
                s(:int, -6)),
              s(:pair,
                s(:str, "PST"),
                s(:int, -8)),
              s(:pair,
                s(:str, "PDT"),
                s(:int, -7)),
              s(:pair,
                s(:str, "A"),
                s(:int, 1)),
              s(:pair,
                s(:str, "B"),
                s(:int, 2)),
              s(:pair,
                s(:str, "C"),
                s(:int, 3)),
              s(:pair,
                s(:str, "D"),
                s(:int, 4)),
              s(:pair,
                s(:str, "E"),
                s(:int, 5)),
              s(:pair,
                s(:str, "F"),
                s(:int, 6)),
              s(:pair,
                s(:str, "G"),
                s(:int, 7)),
              s(:pair,
                s(:str, "H"),
                s(:int, 8)),
              s(:pair,
                s(:str, "I"),
                s(:int, 9)),
              s(:pair,
                s(:str, "K"),
                s(:int, 10)),
              s(:pair,
                s(:str, "L"),
                s(:int, 11)),
              s(:pair,
                s(:str, "M"),
                s(:int, 12)),
              s(:pair,
                s(:str, "N"),
                s(:int, -1)),
              s(:pair,
                s(:str, "O"),
                s(:int, -2)),
              s(:pair,
                s(:str, "P"),
                s(:int, -3)),
              s(:pair,
                s(:str, "Q"),
                s(:int, -4)),
              s(:pair,
                s(:str, "R"),
                s(:int, -5)),
              s(:pair,
                s(:str, "S"),
                s(:int, -6)),
              s(:pair,
                s(:str, "T"),
                s(:int, -7)),
              s(:pair,
                s(:str, "U"),
                s(:int, -8)),
              s(:pair,
                s(:str, "V"),
                s(:int, -9)),
              s(:pair,
                s(:str, "W"),
                s(:int, -10)),
              s(:pair,
                s(:str, "X"),
                s(:int, -11)),
              s(:pair,
                s(:str, "Y"),
                s(:int, -12)))),
          s(:def, :zone_offset,
            s(:args,
              s(:arg, :zone),
              s(:optarg, :year,
                s(:send,
                  s(:send,
                    s(:self), :now), :year))),
            s(:begin,
              s(:lvasgn, :off,
                s(:nil)),
              s(:lvasgn, :zone,
                s(:send,
                  s(:lvar, :zone), :upcase)),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\A([+-])(\\d\\d):?(\\d\\d)\\z"),
                    s(:regopt)),
                  s(:lvar, :zone)),
                s(:lvasgn, :off,
                  s(:send,
                    s(:send,
                      s(:begin,
                        s(:if,
                          s(:send,
                            s(:nth_ref, 1), :==,
                            s(:str, "-")),
                          s(:int, -1),
                          s(:int, 1))), :*,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:nth_ref, 2), :to_i), :*,
                            s(:int, 60)), :+,
                          s(:send,
                            s(:nth_ref, 3), :to_i)))), :*,
                    s(:int, 60))),
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "\\A[+-]\\d\\d\\z"),
                      s(:regopt)),
                    s(:lvar, :zone)),
                  s(:lvasgn, :off,
                    s(:send,
                      s(:send,
                        s(:lvar, :zone), :to_i), :*,
                      s(:int, 3600))),
                  s(:if,
                    s(:send,
                      s(:const, nil, :ZoneOffset), :include?,
                      s(:lvar, :zone)),
                    s(:lvasgn, :off,
                      s(:send,
                        s(:send,
                          s(:const, nil, :ZoneOffset), :[],
                          s(:lvar, :zone)), :*,
                        s(:int, 3600))),
                    s(:if,
                      s(:begin,
                        s(:rescue,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:begin,
                                  s(:lvasgn, :t,
                                    s(:send,
                                      s(:self), :local,
                                      s(:lvar, :year),
                                      s(:int, 1),
                                      s(:int, 1)))), :zone), :upcase), :==,
                            s(:lvar, :zone)),
                          s(:resbody, nil, nil,
                            s(:false)), nil)),
                      s(:lvasgn, :off,
                        s(:send,
                          s(:lvar, :t), :utc_offset)),
                      s(:if,
                        s(:begin,
                          s(:rescue,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:begin,
                                    s(:lvasgn, :t,
                                      s(:send,
                                        s(:self), :local,
                                        s(:lvar, :year),
                                        s(:int, 7),
                                        s(:int, 1)))), :zone), :upcase), :==,
                              s(:lvar, :zone)),
                            s(:resbody, nil, nil,
                              s(:false)), nil)),
                        s(:lvasgn, :off,
                          s(:send,
                            s(:lvar, :t), :utc_offset)), nil))))),
              s(:lvar, :off))),
          s(:def, :zone_utc?,
            s(:args,
              s(:arg, :zone)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\A(?:-00:00|-0000|-00|UTC|Z|UT)\\z"),
                  s(:regopt, :i)),
                s(:lvar, :zone)),
              s(:true),
              s(:false))),
          s(:send, nil, :private,
            s(:sym, :zone_utc?)),
          s(:def, :force_zone!,
            s(:args,
              s(:arg, :t),
              s(:arg, :zone),
              s(:optarg, :offset,
                s(:nil))),
            s(:if,
              s(:send, nil, :zone_utc?,
                s(:lvar, :zone)),
              s(:send,
                s(:lvar, :t), :utc),
              s(:if,
                s(:or_asgn,
                  s(:lvasgn, :offset),
                  s(:send, nil, :zone_offset,
                    s(:lvar, :zone))),
                s(:begin,
                  s(:send,
                    s(:lvar, :t), :localtime),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :t), :utc_offset), :!=,
                      s(:lvar, :offset)),
                    s(:send,
                      s(:lvar, :t), :localtime,
                      s(:lvar, :offset)), nil)),
                s(:send,
                  s(:lvar, :t), :localtime)))),
          s(:send, nil, :private,
            s(:sym, :force_zone!)),
          s(:casgn, nil, :LeapYearMonthDays,
            s(:array,
              s(:int, 31),
              s(:int, 29),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31))),
          s(:casgn, nil, :CommonYearMonthDays,
            s(:array,
              s(:int, 31),
              s(:int, 28),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31),
              s(:int, 30),
              s(:int, 31))),
          s(:def, :month_days,
            s(:args,
              s(:arg, :y),
              s(:arg, :m)),
            s(:if,
              s(:or,
                s(:begin,
                  s(:and,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :y), :%,
                          s(:int, 4)), :==,
                        s(:int, 0))),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :y), :%,
                          s(:int, 100)), :!=,
                        s(:int, 0))))),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :y), :%,
                      s(:int, 400)), :==,
                    s(:int, 0)))),
              s(:send,
                s(:const, nil, :LeapYearMonthDays), :[],
                s(:send,
                  s(:lvar, :m), :-,
                  s(:int, 1))),
              s(:send,
                s(:const, nil, :CommonYearMonthDays), :[],
                s(:send,
                  s(:lvar, :m), :-,
                  s(:int, 1))))),
          s(:send, nil, :private,
            s(:sym, :month_days)),
          s(:def, :apply_offset,
            s(:args,
              s(:arg, :year),
              s(:arg, :mon),
              s(:arg, :day),
              s(:arg, :hour),
              s(:arg, :min),
              s(:arg, :sec),
              s(:arg, :off)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :off), :<,
                  s(:int, 0)),
                s(:begin,
                  s(:lvasgn, :off,
                    s(:send,
                      s(:lvar, :off), :-@)),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :off),
                      s(:lvasgn, :o)),
                    s(:send,
                      s(:lvar, :off), :divmod,
                      s(:int, 60))),
                  s(:if,
                    s(:send,
                      s(:lvar, :o), :!=,
                      s(:int, 0)),
                    s(:begin,
                      s(:op_asgn,
                        s(:lvasgn, :sec), :+,
                        s(:lvar, :o)),
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :o),
                          s(:lvasgn, :sec)),
                        s(:send,
                          s(:lvar, :sec), :divmod,
                          s(:int, 60))),
                      s(:op_asgn,
                        s(:lvasgn, :off), :+,
                        s(:lvar, :o))), nil),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :off),
                      s(:lvasgn, :o)),
                    s(:send,
                      s(:lvar, :off), :divmod,
                      s(:int, 60))),
                  s(:if,
                    s(:send,
                      s(:lvar, :o), :!=,
                      s(:int, 0)),
                    s(:begin,
                      s(:op_asgn,
                        s(:lvasgn, :min), :+,
                        s(:lvar, :o)),
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :o),
                          s(:lvasgn, :min)),
                        s(:send,
                          s(:lvar, :min), :divmod,
                          s(:int, 60))),
                      s(:op_asgn,
                        s(:lvasgn, :off), :+,
                        s(:lvar, :o))), nil),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :off),
                      s(:lvasgn, :o)),
                    s(:send,
                      s(:lvar, :off), :divmod,
                      s(:int, 24))),
                  s(:if,
                    s(:send,
                      s(:lvar, :o), :!=,
                      s(:int, 0)),
                    s(:begin,
                      s(:op_asgn,
                        s(:lvasgn, :hour), :+,
                        s(:lvar, :o)),
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :o),
                          s(:lvasgn, :hour)),
                        s(:send,
                          s(:lvar, :hour), :divmod,
                          s(:int, 24))),
                      s(:op_asgn,
                        s(:lvasgn, :off), :+,
                        s(:lvar, :o))), nil),
                  s(:if,
                    s(:send,
                      s(:lvar, :off), :!=,
                      s(:int, 0)),
                    s(:begin,
                      s(:op_asgn,
                        s(:lvasgn, :day), :+,
                        s(:lvar, :off)),
                      s(:lvasgn, :days,
                        s(:send, nil, :month_days,
                          s(:lvar, :year),
                          s(:lvar, :mon))),
                      s(:if,
                        s(:and,
                          s(:lvar, :days),
                          s(:send,
                            s(:lvar, :days), :<,
                            s(:lvar, :day))),
                        s(:begin,
                          s(:op_asgn,
                            s(:lvasgn, :mon), :+,
                            s(:int, 1)),
                          s(:if,
                            s(:send,
                              s(:int, 12), :<,
                              s(:lvar, :mon)),
                            s(:begin,
                              s(:lvasgn, :mon,
                                s(:int, 1)),
                              s(:op_asgn,
                                s(:lvasgn, :year), :+,
                                s(:int, 1))), nil),
                          s(:lvasgn, :day,
                            s(:int, 1))), nil)), nil)),
                s(:if,
                  s(:send,
                    s(:int, 0), :<,
                    s(:lvar, :off)),
                  s(:begin,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :off),
                        s(:lvasgn, :o)),
                      s(:send,
                        s(:lvar, :off), :divmod,
                        s(:int, 60))),
                    s(:if,
                      s(:send,
                        s(:lvar, :o), :!=,
                        s(:int, 0)),
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :sec), :-,
                          s(:lvar, :o)),
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :o),
                            s(:lvasgn, :sec)),
                          s(:send,
                            s(:lvar, :sec), :divmod,
                            s(:int, 60))),
                        s(:op_asgn,
                          s(:lvasgn, :off), :-,
                          s(:lvar, :o))), nil),
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :off),
                        s(:lvasgn, :o)),
                      s(:send,
                        s(:lvar, :off), :divmod,
                        s(:int, 60))),
                    s(:if,
                      s(:send,
                        s(:lvar, :o), :!=,
                        s(:int, 0)),
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :min), :-,
                          s(:lvar, :o)),
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :o),
                            s(:lvasgn, :min)),
                          s(:send,
                            s(:lvar, :min), :divmod,
                            s(:int, 60))),
                        s(:op_asgn,
                          s(:lvasgn, :off), :-,
                          s(:lvar, :o))), nil),
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :off),
                        s(:lvasgn, :o)),
                      s(:send,
                        s(:lvar, :off), :divmod,
                        s(:int, 24))),
                    s(:if,
                      s(:send,
                        s(:lvar, :o), :!=,
                        s(:int, 0)),
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :hour), :-,
                          s(:lvar, :o)),
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :o),
                            s(:lvasgn, :hour)),
                          s(:send,
                            s(:lvar, :hour), :divmod,
                            s(:int, 24))),
                        s(:op_asgn,
                          s(:lvasgn, :off), :-,
                          s(:lvar, :o))), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :off), :!=,
                        s(:int, 0)),
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :day), :-,
                          s(:lvar, :off)),
                        s(:if,
                          s(:send,
                            s(:lvar, :day), :<,
                            s(:int, 1)),
                          s(:begin,
                            s(:op_asgn,
                              s(:lvasgn, :mon), :-,
                              s(:int, 1)),
                            s(:if,
                              s(:send,
                                s(:lvar, :mon), :<,
                                s(:int, 1)),
                              s(:begin,
                                s(:op_asgn,
                                  s(:lvasgn, :year), :-,
                                  s(:int, 1)),
                                s(:lvasgn, :mon,
                                  s(:int, 12))), nil),
                            s(:lvasgn, :day,
                              s(:send, nil, :month_days,
                                s(:lvar, :year),
                                s(:lvar, :mon)))), nil)), nil)), nil)),
              s(:return,
                s(:lvar, :year),
                s(:lvar, :mon),
                s(:lvar, :day),
                s(:lvar, :hour),
                s(:lvar, :min),
                s(:lvar, :sec)))),
          s(:send, nil, :private,
            s(:sym, :apply_offset)),
          s(:def, :make_time,
            s(:args,
              s(:arg, :date),
              s(:arg, :year),
              s(:arg, :mon),
              s(:arg, :day),
              s(:arg, :hour),
              s(:arg, :min),
              s(:arg, :sec),
              s(:arg, :sec_fraction),
              s(:arg, :zone),
              s(:arg, :now)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:and,
                    s(:and,
                      s(:and,
                        s(:and,
                          s(:and,
                            s(:send,
                              s(:lvar, :year), :!),
                            s(:send,
                              s(:lvar, :mon), :!)),
                          s(:send,
                            s(:lvar, :day), :!)),
                        s(:send,
                          s(:lvar, :hour), :!)),
                      s(:send,
                        s(:lvar, :min), :!)),
                    s(:send,
                      s(:lvar, :sec), :!)),
                  s(:send,
                    s(:lvar, :sec_fraction), :!)),
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "no time information in "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :date), :inspect)))), nil),
              s(:lvasgn, :off_year,
                s(:or,
                  s(:lvar, :year),
                  s(:send,
                    s(:lvar, :now), :year))),
              s(:lvasgn, :off,
                s(:nil)),
              s(:if,
                s(:lvar, :zone),
                s(:lvasgn, :off,
                  s(:send, nil, :zone_offset,
                    s(:lvar, :zone),
                    s(:lvar, :off_year))), nil),
              s(:if,
                s(:lvar, :off),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :now), :utc_offset), :!=,
                    s(:lvar, :off)),
                  s(:lvasgn, :now,
                    s(:send,
                      s(:lvar, :now), :getlocal,
                      s(:lvar, :off))), nil),
                s(:lvasgn, :now,
                  s(:send,
                    s(:lvar, :now), :getlocal))),
              s(:lvasgn, :usec,
                s(:nil)),
              s(:if,
                s(:lvar, :sec_fraction),
                s(:lvasgn, :usec,
                  s(:send,
                    s(:lvar, :sec_fraction), :*,
                    s(:int, 1000000))), nil),
              s(:if,
                s(:lvar, :now),
                s(:until_post,
                  s(:true),
                  s(:kwbegin,
                    s(:if,
                      s(:lvar, :year),
                      s(:break), nil),
                    s(:lvasgn, :year,
                      s(:send,
                        s(:lvar, :now), :year)),
                    s(:if,
                      s(:lvar, :mon),
                      s(:break), nil),
                    s(:lvasgn, :mon,
                      s(:send,
                        s(:lvar, :now), :mon)),
                    s(:if,
                      s(:lvar, :day),
                      s(:break), nil),
                    s(:lvasgn, :day,
                      s(:send,
                        s(:lvar, :now), :day)),
                    s(:if,
                      s(:lvar, :hour),
                      s(:break), nil),
                    s(:lvasgn, :hour,
                      s(:send,
                        s(:lvar, :now), :hour)),
                    s(:if,
                      s(:lvar, :min),
                      s(:break), nil),
                    s(:lvasgn, :min,
                      s(:send,
                        s(:lvar, :now), :min)),
                    s(:if,
                      s(:lvar, :sec),
                      s(:break), nil),
                    s(:lvasgn, :sec,
                      s(:send,
                        s(:lvar, :now), :sec)),
                    s(:if,
                      s(:lvar, :sec_fraction),
                      s(:break), nil),
                    s(:lvasgn, :usec,
                      s(:send,
                        s(:lvar, :now), :tv_usec)))), nil),
              s(:or_asgn,
                s(:lvasgn, :year),
                s(:int, 1970)),
              s(:or_asgn,
                s(:lvasgn, :mon),
                s(:int, 1)),
              s(:or_asgn,
                s(:lvasgn, :day),
                s(:int, 1)),
              s(:or_asgn,
                s(:lvasgn, :hour),
                s(:int, 0)),
              s(:or_asgn,
                s(:lvasgn, :min),
                s(:int, 0)),
              s(:or_asgn,
                s(:lvasgn, :sec),
                s(:int, 0)),
              s(:or_asgn,
                s(:lvasgn, :usec),
                s(:int, 0)),
              s(:if,
                s(:send,
                  s(:lvar, :year), :!=,
                  s(:lvar, :off_year)),
                s(:begin,
                  s(:lvasgn, :off,
                    s(:nil)),
                  s(:if,
                    s(:lvar, :zone),
                    s(:lvasgn, :off,
                      s(:send, nil, :zone_offset,
                        s(:lvar, :zone),
                        s(:lvar, :year))), nil)), nil),
              s(:if,
                s(:lvar, :off),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :year),
                      s(:lvasgn, :mon),
                      s(:lvasgn, :day),
                      s(:lvasgn, :hour),
                      s(:lvasgn, :min),
                      s(:lvasgn, :sec)),
                    s(:send, nil, :apply_offset,
                      s(:lvar, :year),
                      s(:lvar, :mon),
                      s(:lvar, :day),
                      s(:lvar, :hour),
                      s(:lvar, :min),
                      s(:lvar, :sec),
                      s(:lvar, :off))),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:self), :utc,
                      s(:lvar, :year),
                      s(:lvar, :mon),
                      s(:lvar, :day),
                      s(:lvar, :hour),
                      s(:lvar, :min),
                      s(:lvar, :sec),
                      s(:lvar, :usec))),
                  s(:send, nil, :force_zone!,
                    s(:lvar, :t),
                    s(:lvar, :zone),
                    s(:lvar, :off)),
                  s(:lvar, :t)),
                s(:send,
                  s(:self), :local,
                  s(:lvar, :year),
                  s(:lvar, :mon),
                  s(:lvar, :day),
                  s(:lvar, :hour),
                  s(:lvar, :min),
                  s(:lvar, :sec),
                  s(:lvar, :usec))))),
          s(:send, nil, :private,
            s(:sym, :make_time)),
          s(:def, :parse,
            s(:args,
              s(:arg, :date),
              s(:optarg, :now,
                s(:send,
                  s(:self), :now))),
            s(:begin,
              s(:lvasgn, :comp,
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :d,
                s(:send,
                  s(:const, nil, :Date), :_parse,
                  s(:lvar, :date),
                  s(:lvar, :comp))),
              s(:lvasgn, :year,
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :year))),
              s(:if,
                s(:and,
                  s(:lvar, :year),
                  s(:send,
                    s(:lvar, :comp), :!)),
                s(:lvasgn, :year,
                  s(:yield,
                    s(:lvar, :year))), nil),
              s(:send, nil, :make_time,
                s(:lvar, :date),
                s(:lvar, :year),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :mon)),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :mday)),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :hour)),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :min)),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :sec)),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :sec_fraction)),
                s(:send,
                  s(:lvar, :d), :[],
                  s(:sym, :zone)),
                s(:lvar, :now)))),
          s(:def, :strptime,
            s(:args,
              s(:arg, :date),
              s(:arg, :format),
              s(:optarg, :now,
                s(:send,
                  s(:self), :now))),
            s(:begin,
              s(:lvasgn, :d,
                s(:send,
                  s(:const, nil, :Date), :_strptime,
                  s(:lvar, :date),
                  s(:lvar, :format))),
              s(:if,
                s(:lvar, :d), nil,
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "invalid strptime format - `"),
                    s(:begin,
                      s(:lvar, :format)),
                    s(:str, "'")))),
              s(:if,
                s(:lvasgn, :seconds,
                  s(:send,
                    s(:lvar, :d), :[],
                    s(:sym, :seconds))),
                s(:begin,
                  s(:if,
                    s(:lvasgn, :sec_fraction,
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :sec_fraction))),
                    s(:begin,
                      s(:lvasgn, :usec,
                        s(:send,
                          s(:lvar, :sec_fraction), :*,
                          s(:int, 1000000))),
                      s(:if,
                        s(:send,
                          s(:lvar, :seconds), :<,
                          s(:int, 0)),
                        s(:op_asgn,
                          s(:lvasgn, :usec), :*,
                          s(:int, -1)), nil)),
                    s(:lvasgn, :usec,
                      s(:int, 0))),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:const, nil, :Time), :at,
                      s(:lvar, :seconds),
                      s(:lvar, :usec))),
                  s(:if,
                    s(:lvasgn, :zone,
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :zone))),
                    s(:send, nil, :force_zone!,
                      s(:lvar, :t),
                      s(:lvar, :zone)), nil)),
                s(:begin,
                  s(:lvasgn, :year,
                    s(:send,
                      s(:lvar, :d), :[],
                      s(:sym, :year))),
                  s(:if,
                    s(:and,
                      s(:lvar, :year),
                      s(:send, nil, :block_given?)),
                    s(:lvasgn, :year,
                      s(:yield,
                        s(:lvar, :year))), nil),
                  s(:lvasgn, :t,
                    s(:send, nil, :make_time,
                      s(:lvar, :date),
                      s(:lvar, :year),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :mon)),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :mday)),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :hour)),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :min)),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :sec)),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :sec_fraction)),
                      s(:send,
                        s(:lvar, :d), :[],
                        s(:sym, :zone)),
                      s(:lvar, :now))))),
              s(:lvar, :t))),
          s(:casgn, nil, :MonthValue,
            s(:hash,
              s(:pair,
                s(:str, "JAN"),
                s(:int, 1)),
              s(:pair,
                s(:str, "FEB"),
                s(:int, 2)),
              s(:pair,
                s(:str, "MAR"),
                s(:int, 3)),
              s(:pair,
                s(:str, "APR"),
                s(:int, 4)),
              s(:pair,
                s(:str, "MAY"),
                s(:int, 5)),
              s(:pair,
                s(:str, "JUN"),
                s(:int, 6)),
              s(:pair,
                s(:str, "JUL"),
                s(:int, 7)),
              s(:pair,
                s(:str, "AUG"),
                s(:int, 8)),
              s(:pair,
                s(:str, "SEP"),
                s(:int, 9)),
              s(:pair,
                s(:str, "OCT"),
                s(:int, 10)),
              s(:pair,
                s(:str, "NOV"),
                s(:int, 11)),
              s(:pair,
                s(:str, "DEC"),
                s(:int, 12)))),
          s(:def, :rfc2822,
            s(:args,
              s(:arg, :date)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\A\\s*\n"),
                  s(:str, "          (?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)\\s*,\\s*)?\n"),
                  s(:str, "          (\\d{1,2})\\s+\n"),
                  s(:str, "          (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s+\n"),
                  s(:str, "          (\\d{2,})\\s+\n"),
                  s(:str, "          (\\d{2})\\s*\n"),
                  s(:str, "          :\\s*(\\d{2})\\s*\n"),
                  s(:str, "          (?::\\s*(\\d{2}))?\\s+\n"),
                  s(:str, "          ([+-]\\d{4}|\n"),
                  s(:str, "           UT|GMT|EST|EDT|CST|CDT|MST|MDT|PST|PDT|[A-IK-Z])"),
                  s(:regopt, :i, :x)),
                s(:lvar, :date)),
              s(:begin,
                s(:lvasgn, :day,
                  s(:send,
                    s(:nth_ref, 1), :to_i)),
                s(:lvasgn, :mon,
                  s(:send,
                    s(:const, nil, :MonthValue), :[],
                    s(:send,
                      s(:nth_ref, 2), :upcase))),
                s(:lvasgn, :year,
                  s(:send,
                    s(:nth_ref, 3), :to_i)),
                s(:lvasgn, :short_year_p,
                  s(:send,
                    s(:send,
                      s(:nth_ref, 3), :length), :<=,
                    s(:int, 3))),
                s(:lvasgn, :hour,
                  s(:send,
                    s(:nth_ref, 4), :to_i)),
                s(:lvasgn, :min,
                  s(:send,
                    s(:nth_ref, 5), :to_i)),
                s(:lvasgn, :sec,
                  s(:if,
                    s(:nth_ref, 6),
                    s(:send,
                      s(:nth_ref, 6), :to_i),
                    s(:int, 0))),
                s(:lvasgn, :zone,
                  s(:nth_ref, 7)),
                s(:if,
                  s(:lvar, :short_year_p),
                  s(:lvasgn, :year,
                    s(:if,
                      s(:send,
                        s(:lvar, :year), :<,
                        s(:int, 50)),
                      s(:send,
                        s(:int, 2000), :+,
                        s(:lvar, :year)),
                      s(:send,
                        s(:int, 1900), :+,
                        s(:lvar, :year)))), nil),
                s(:lvasgn, :off,
                  s(:send, nil, :zone_offset,
                    s(:lvar, :zone))),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :year),
                    s(:lvasgn, :mon),
                    s(:lvasgn, :day),
                    s(:lvasgn, :hour),
                    s(:lvasgn, :min),
                    s(:lvasgn, :sec)),
                  s(:send, nil, :apply_offset,
                    s(:lvar, :year),
                    s(:lvar, :mon),
                    s(:lvar, :day),
                    s(:lvar, :hour),
                    s(:lvar, :min),
                    s(:lvar, :sec),
                    s(:lvar, :off))),
                s(:lvasgn, :t,
                  s(:send,
                    s(:self), :utc,
                    s(:lvar, :year),
                    s(:lvar, :mon),
                    s(:lvar, :day),
                    s(:lvar, :hour),
                    s(:lvar, :min),
                    s(:lvar, :sec))),
                s(:send, nil, :force_zone!,
                  s(:lvar, :t),
                  s(:lvar, :zone),
                  s(:lvar, :off)),
                s(:lvar, :t)),
              s(:send, nil, :raise,
                s(:send,
                  s(:const, nil, :ArgumentError), :new,
                  s(:dstr,
                    s(:str, "not RFC 2822 compliant date: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :date), :inspect))))))),
          s(:alias,
            s(:sym, :rfc822),
            s(:sym, :rfc2822)),
          s(:def, :httpdate,
            s(:args,
              s(:arg, :date)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\A\\s*\n"),
                  s(:str, "          (?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\x20\n"),
                  s(:str, "          (\\d{2})\\x20\n"),
                  s(:str, "          (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\x20\n"),
                  s(:str, "          (\\d{4})\\x20\n"),
                  s(:str, "          (\\d{2}):(\\d{2}):(\\d{2})\\x20\n"),
                  s(:str, "          GMT\n"),
                  s(:str, "          \\s*\\z"),
                  s(:regopt, :i, :x)),
                s(:lvar, :date)),
              s(:send,
                s(:send,
                  s(:self), :rfc2822,
                  s(:lvar, :date)), :utc),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\A\\s*\n"),
                    s(:str, "             (?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday),\\x20\n"),
                    s(:str, "             (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d)\\x20\n"),
                    s(:str, "             (\\d\\d):(\\d\\d):(\\d\\d)\\x20\n"),
                    s(:str, "             GMT\n"),
                    s(:str, "             \\s*\\z"),
                    s(:regopt, :i, :x)),
                  s(:lvar, :date)),
                s(:begin,
                  s(:lvasgn, :year,
                    s(:send,
                      s(:nth_ref, 3), :to_i)),
                  s(:if,
                    s(:send,
                      s(:lvar, :year), :<,
                      s(:int, 50)),
                    s(:op_asgn,
                      s(:lvasgn, :year), :+,
                      s(:int, 2000)),
                    s(:op_asgn,
                      s(:lvasgn, :year), :+,
                      s(:int, 1900))),
                  s(:send,
                    s(:self), :utc,
                    s(:lvar, :year),
                    s(:nth_ref, 2),
                    s(:send,
                      s(:nth_ref, 1), :to_i),
                    s(:send,
                      s(:nth_ref, 4), :to_i),
                    s(:send,
                      s(:nth_ref, 5), :to_i),
                    s(:send,
                      s(:nth_ref, 6), :to_i))),
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "\\A\\s*\n"),
                      s(:str, "             (?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)\\x20\n"),
                      s(:str, "             (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\x20\n"),
                      s(:str, "             (\\d\\d|\\x20\\d)\\x20\n"),
                      s(:str, "             (\\d\\d):(\\d\\d):(\\d\\d)\\x20\n"),
                      s(:str, "             (\\d{4})\n"),
                      s(:str, "             \\s*\\z"),
                      s(:regopt, :i, :x)),
                    s(:lvar, :date)),
                  s(:send,
                    s(:self), :utc,
                    s(:send,
                      s(:nth_ref, 6), :to_i),
                    s(:send,
                      s(:const, nil, :MonthValue), :[],
                      s(:send,
                        s(:nth_ref, 1), :upcase)),
                    s(:send,
                      s(:nth_ref, 2), :to_i),
                    s(:send,
                      s(:nth_ref, 3), :to_i),
                    s(:send,
                      s(:nth_ref, 4), :to_i),
                    s(:send,
                      s(:nth_ref, 5), :to_i)),
                  s(:send, nil, :raise,
                    s(:send,
                      s(:const, nil, :ArgumentError), :new,
                      s(:dstr,
                        s(:str, "not RFC 2616 compliant date: "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :date), :inspect))))))))),
          s(:def, :xmlschema,
            s(:args,
              s(:arg, :date)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\A\\s*\n"),
                  s(:str, "          (-?\\d+)-(\\d\\d)-(\\d\\d)\n"),
                  s(:str, "          T\n"),
                  s(:str, "          (\\d\\d):(\\d\\d):(\\d\\d)\n"),
                  s(:str, "          (\\.\\d+)?\n"),
                  s(:str, "          (Z|[+-]\\d\\d:\\d\\d)?\n"),
                  s(:str, "          \\s*\\z"),
                  s(:regopt, :i, :x)),
                s(:lvar, :date)),
              s(:begin,
                s(:lvasgn, :year,
                  s(:send,
                    s(:nth_ref, 1), :to_i)),
                s(:lvasgn, :mon,
                  s(:send,
                    s(:nth_ref, 2), :to_i)),
                s(:lvasgn, :day,
                  s(:send,
                    s(:nth_ref, 3), :to_i)),
                s(:lvasgn, :hour,
                  s(:send,
                    s(:nth_ref, 4), :to_i)),
                s(:lvasgn, :min,
                  s(:send,
                    s(:nth_ref, 5), :to_i)),
                s(:lvasgn, :sec,
                  s(:send,
                    s(:nth_ref, 6), :to_i)),
                s(:lvasgn, :usec,
                  s(:int, 0)),
                s(:if,
                  s(:nth_ref, 7),
                  s(:lvasgn, :usec,
                    s(:send,
                      s(:send, nil, :Rational,
                        s(:nth_ref, 7)), :*,
                      s(:int, 1000000))), nil),
                s(:if,
                  s(:nth_ref, 8),
                  s(:begin,
                    s(:lvasgn, :zone,
                      s(:nth_ref, 8)),
                    s(:lvasgn, :off,
                      s(:send, nil, :zone_offset,
                        s(:lvar, :zone))),
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :year),
                        s(:lvasgn, :mon),
                        s(:lvasgn, :day),
                        s(:lvasgn, :hour),
                        s(:lvasgn, :min),
                        s(:lvasgn, :sec)),
                      s(:send, nil, :apply_offset,
                        s(:lvar, :year),
                        s(:lvar, :mon),
                        s(:lvar, :day),
                        s(:lvar, :hour),
                        s(:lvar, :min),
                        s(:lvar, :sec),
                        s(:lvar, :off))),
                    s(:lvasgn, :t,
                      s(:send,
                        s(:self), :utc,
                        s(:lvar, :year),
                        s(:lvar, :mon),
                        s(:lvar, :day),
                        s(:lvar, :hour),
                        s(:lvar, :min),
                        s(:lvar, :sec),
                        s(:lvar, :usec))),
                    s(:send, nil, :force_zone!,
                      s(:lvar, :t),
                      s(:lvar, :zone),
                      s(:lvar, :off)),
                    s(:lvar, :t)),
                  s(:send,
                    s(:self), :local,
                    s(:lvar, :year),
                    s(:lvar, :mon),
                    s(:lvar, :day),
                    s(:lvar, :hour),
                    s(:lvar, :min),
                    s(:lvar, :sec),
                    s(:lvar, :usec)))),
              s(:send, nil, :raise,
                s(:send,
                  s(:const, nil, :ArgumentError), :new,
                  s(:dstr,
                    s(:str, "invalid date: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :date), :inspect))))))),
          s(:alias,
            s(:sym, :iso8601),
            s(:sym, :xmlschema)))),
      s(:def, :rfc2822,
        s(:args),
        s(:send,
          s(:send, nil, :sprintf,
            s(:str, "%s, %02d %s %0*d %02d:%02d:%02d "),
            s(:send,
              s(:const, nil, :RFC2822_DAY_NAME), :[],
              s(:send, nil, :wday)),
            s(:send, nil, :day),
            s(:send,
              s(:const, nil, :RFC2822_MONTH_NAME), :[],
              s(:send,
                s(:send, nil, :mon), :-,
                s(:int, 1))),
            s(:if,
              s(:send,
                s(:send, nil, :year), :<,
                s(:int, 0)),
              s(:int, 5),
              s(:int, 4)),
            s(:send, nil, :year),
            s(:send, nil, :hour),
            s(:send, nil, :min),
            s(:send, nil, :sec)), :<<,
          s(:if,
            s(:send, nil, :utc?),
            s(:str, "-0000"),
            s(:begin,
              s(:lvasgn, :off,
                s(:send, nil, :utc_offset)),
              s(:lvasgn, :sign,
                s(:if,
                  s(:send,
                    s(:lvar, :off), :<,
                    s(:int, 0)),
                  s(:str, "-"),
                  s(:str, "+"))),
              s(:send, nil, :sprintf,
                s(:str, "%s%02d%02d"),
                s(:lvar, :sign),
                s(:splat,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :off), :abs), :/,
                        s(:int, 60))), :divmod,
                    s(:int, 60)))))))),
      s(:alias,
        s(:sym, :rfc822),
        s(:sym, :rfc2822)),
      s(:casgn, nil, :RFC2822_DAY_NAME,
        s(:array,
          s(:str, "Sun"),
          s(:str, "Mon"),
          s(:str, "Tue"),
          s(:str, "Wed"),
          s(:str, "Thu"),
          s(:str, "Fri"),
          s(:str, "Sat"))),
      s(:casgn, nil, :RFC2822_MONTH_NAME,
        s(:array,
          s(:str, "Jan"),
          s(:str, "Feb"),
          s(:str, "Mar"),
          s(:str, "Apr"),
          s(:str, "May"),
          s(:str, "Jun"),
          s(:str, "Jul"),
          s(:str, "Aug"),
          s(:str, "Sep"),
          s(:str, "Oct"),
          s(:str, "Nov"),
          s(:str, "Dec"))),
      s(:def, :httpdate,
        s(:args),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:send, nil, :dup), :utc)),
          s(:send, nil, :sprintf,
            s(:str, "%s, %02d %s %0*d %02d:%02d:%02d GMT"),
            s(:send,
              s(:const, nil, :RFC2822_DAY_NAME), :[],
              s(:send,
                s(:lvar, :t), :wday)),
            s(:send,
              s(:lvar, :t), :day),
            s(:send,
              s(:const, nil, :RFC2822_MONTH_NAME), :[],
              s(:send,
                s(:send,
                  s(:lvar, :t), :mon), :-,
                s(:int, 1))),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :t), :year), :<,
                s(:int, 0)),
              s(:int, 5),
              s(:int, 4)),
            s(:send,
              s(:lvar, :t), :year),
            s(:send,
              s(:lvar, :t), :hour),
            s(:send,
              s(:lvar, :t), :min),
            s(:send,
              s(:lvar, :t), :sec)))),
      s(:def, :xmlschema,
        s(:args,
          s(:optarg, :fraction_digits,
            s(:int, 0))),
        s(:begin,
          s(:lvasgn, :fraction_digits,
            s(:send,
              s(:lvar, :fraction_digits), :to_i)),
          s(:lvasgn, :s,
            s(:send, nil, :strftime,
              s(:str, "%FT%T"))),
          s(:if,
            s(:send,
              s(:lvar, :fraction_digits), :>,
              s(:int, 0)),
            s(:send,
              s(:lvar, :s), :<<,
              s(:send, nil, :strftime,
                s(:dstr,
                  s(:str, ".%"),
                  s(:begin,
                    s(:lvar, :fraction_digits)),
                  s(:str, "N")))), nil),
          s(:send,
            s(:lvar, :s), :<<,
            s(:begin,
              s(:if,
                s(:send, nil, :utc?),
                s(:str, "Z"),
                s(:send, nil, :strftime,
                  s(:str, "%:z"))))))),
      s(:alias,
        s(:sym, :iso8601),
        s(:sym, :xmlschema)))))
