s(:begin,
  s(:send, nil, :require,
    s(:str, "unicode_normalize/tables.rb")),
  s(:module,
    s(:const, nil, :UnicodeNormalize),
    s(:begin,
      s(:casgn, nil, :MAX_HASH_LENGTH,
        s(:int, 18000)),
      s(:casgn, nil, :REGEXP_D,
        s(:send,
          s(:const, nil, :Regexp), :compile,
          s(:const, nil, :REGEXP_D_STRING),
          s(:const,
            s(:const, nil, :Regexp), :EXTENDED))),
      s(:casgn, nil, :REGEXP_C,
        s(:send,
          s(:const, nil, :Regexp), :compile,
          s(:const, nil, :REGEXP_C_STRING),
          s(:const,
            s(:const, nil, :Regexp), :EXTENDED))),
      s(:casgn, nil, :REGEXP_K,
        s(:send,
          s(:const, nil, :Regexp), :compile,
          s(:const, nil, :REGEXP_K_STRING),
          s(:const,
            s(:const, nil, :Regexp), :EXTENDED))),
      s(:casgn, nil, :NF_HASH_D,
        s(:block,
          s(:send,
            s(:const, nil, :Hash), :new),
          s(:args,
            s(:arg, :hash),
            s(:arg, :key)),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :hash), :length), :>,
                s(:const, nil, :MAX_HASH_LENGTH)),
              s(:send,
                s(:lvar, :hash), :shift), nil),
            s(:send,
              s(:lvar, :hash), :[]=,
              s(:lvar, :key),
              s(:send, nil, :nfd_one,
                s(:lvar, :key)))))),
      s(:casgn, nil, :NF_HASH_C,
        s(:block,
          s(:send,
            s(:const, nil, :Hash), :new),
          s(:args,
            s(:arg, :hash),
            s(:arg, :key)),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :hash), :length), :>,
                s(:const, nil, :MAX_HASH_LENGTH)),
              s(:send,
                s(:lvar, :hash), :shift), nil),
            s(:send,
              s(:lvar, :hash), :[]=,
              s(:lvar, :key),
              s(:send, nil, :nfc_one,
                s(:lvar, :key)))))),
      s(:casgn, nil, :SBASE,
        s(:int, 44032)),
      s(:casgn, nil, :LBASE,
        s(:int, 4352)),
      s(:casgn, nil, :VBASE,
        s(:int, 4449)),
      s(:casgn, nil, :TBASE,
        s(:int, 4519)),
      s(:casgn, nil, :LCOUNT,
        s(:int, 19)),
      s(:casgn, nil, :VCOUNT,
        s(:int, 21)),
      s(:casgn, nil, :TCOUNT,
        s(:int, 28)),
      s(:casgn, nil, :NCOUNT,
        s(:send,
          s(:const, nil, :VCOUNT), :*,
          s(:const, nil, :TCOUNT))),
      s(:casgn, nil, :SCOUNT,
        s(:send,
          s(:const, nil, :LCOUNT), :*,
          s(:const, nil, :NCOUNT))),
      s(:casgn, nil, :UNICODE_ENCODINGS,
        s(:array,
          s(:const,
            s(:const, nil, :Encoding), :UTF_16BE),
          s(:const,
            s(:const, nil, :Encoding), :UTF_16LE),
          s(:const,
            s(:const, nil, :Encoding), :UTF_32BE),
          s(:const,
            s(:const, nil, :Encoding), :UTF_32LE),
          s(:const,
            s(:const, nil, :Encoding), :GB18030),
          s(:const,
            s(:const, nil, :Encoding), :UCS_2BE),
          s(:const,
            s(:const, nil, :Encoding), :UCS_4BE))),
      s(:defs,
        s(:self), :hangul_decomp_one,
        s(:args,
          s(:arg, :target)),
        s(:begin,
          s(:lvasgn, :syllable_index,
            s(:send,
              s(:send,
                s(:lvar, :target), :ord), :-,
              s(:const, nil, :SBASE))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :syllable_index), :<,
                s(:int, 0)),
              s(:send,
                s(:lvar, :syllable_index), :>=,
                s(:const, nil, :SCOUNT))),
            s(:return,
              s(:lvar, :target)), nil),
          s(:lvasgn, :l,
            s(:send,
              s(:const, nil, :LBASE), :+,
              s(:send,
                s(:lvar, :syllable_index), :/,
                s(:const, nil, :NCOUNT)))),
          s(:lvasgn, :v,
            s(:send,
              s(:const, nil, :VBASE), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :syllable_index), :%,
                    s(:const, nil, :NCOUNT))), :/,
                s(:const, nil, :TCOUNT)))),
          s(:lvasgn, :t,
            s(:send,
              s(:const, nil, :TBASE), :+,
              s(:send,
                s(:lvar, :syllable_index), :%,
                s(:const, nil, :TCOUNT)))),
          s(:send,
            s(:send,
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :t), :==,
                    s(:const, nil, :TBASE)),
                  s(:array,
                    s(:lvar, :l),
                    s(:lvar, :v)),
                  s(:array,
                    s(:lvar, :l),
                    s(:lvar, :v),
                    s(:lvar, :t)))), :pack,
              s(:str, "U*")), :+,
            s(:send,
              s(:lvar, :target), :[],
              s(:irange,
                s(:int, 1),
                s(:int, -1)))))),
      s(:defs,
        s(:self), :hangul_comp_one,
        s(:args,
          s(:arg, :string)),
        s(:begin,
          s(:lvasgn, :length,
            s(:send,
              s(:lvar, :string), :length)),
          s(:if,
            s(:and,
              s(:and,
                s(:and,
                  s(:and,
                    s(:send,
                      s(:lvar, :length), :>,
                      s(:int, 1)),
                    s(:send,
                      s(:int, 0), :<=,
                      s(:begin,
                        s(:lvasgn, :lead,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :string), :[],
                                s(:int, 0)), :ord), :-,
                            s(:const, nil, :LBASE)))))),
                  s(:send,
                    s(:lvar, :lead), :<,
                    s(:const, nil, :LCOUNT))),
                s(:send,
                  s(:int, 0), :<=,
                  s(:begin,
                    s(:lvasgn, :vowel,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :string), :[],
                            s(:int, 1)), :ord), :-,
                        s(:const, nil, :VBASE)))))),
              s(:send,
                s(:lvar, :vowel), :<,
                s(:const, nil, :VCOUNT))),
            s(:begin,
              s(:lvasgn, :lead_vowel,
                s(:send,
                  s(:const, nil, :SBASE), :+,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:lvar, :lead), :*,
                          s(:const, nil, :VCOUNT)), :+,
                        s(:lvar, :vowel))), :*,
                    s(:const, nil, :TCOUNT)))),
              s(:if,
                s(:and,
                  s(:and,
                    s(:send,
                      s(:lvar, :length), :>,
                      s(:int, 2)),
                    s(:send,
                      s(:int, 0), :<=,
                      s(:begin,
                        s(:lvasgn, :trail,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :string), :[],
                                s(:int, 2)), :ord), :-,
                            s(:const, nil, :TBASE)))))),
                  s(:send,
                    s(:lvar, :trail), :<,
                    s(:const, nil, :TCOUNT))),
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :lead_vowel), :+,
                        s(:lvar, :trail))), :chr,
                    s(:const,
                      s(:const, nil, :Encoding), :UTF_8)), :+,
                  s(:send,
                    s(:lvar, :string), :[],
                    s(:irange,
                      s(:int, 3),
                      s(:int, -1)))),
                s(:send,
                  s(:send,
                    s(:lvar, :lead_vowel), :chr,
                    s(:const,
                      s(:const, nil, :Encoding), :UTF_8)), :+,
                  s(:send,
                    s(:lvar, :string), :[],
                    s(:irange,
                      s(:int, 2),
                      s(:int, -1)))))),
            s(:lvar, :string)))),
      s(:defs,
        s(:self), :canonical_ordering_one,
        s(:args,
          s(:arg, :string)),
        s(:begin,
          s(:lvasgn, :sorting,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :string), :each_char), :collect),
              s(:args,
                s(:arg, :c)),
              s(:array,
                s(:lvar, :c),
                s(:send,
                  s(:const, nil, :CLASS_TABLE), :[],
                  s(:lvar, :c))))),
          s(:block,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :sorting), :length), :-,
                  s(:int, 2))), :downto,
              s(:int, 0)),
            s(:args,
              s(:arg, :i)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:irange,
                    s(:int, 0),
                    s(:lvar, :i))), :each),
              s(:args,
                s(:arg, :j)),
              s(:begin,
                s(:lvasgn, :later_class,
                  s(:send,
                    s(:send,
                      s(:lvar, :sorting), :[],
                      s(:send,
                        s(:lvar, :j), :+,
                        s(:int, 1))), :last)),
                s(:if,
                  s(:and,
                    s(:send,
                      s(:int, 0), :<,
                      s(:lvar, :later_class)),
                    s(:send,
                      s(:lvar, :later_class), :<,
                      s(:send,
                        s(:send,
                          s(:lvar, :sorting), :[],
                          s(:lvar, :j)), :last))),
                  s(:masgn,
                    s(:mlhs,
                      s(:send,
                        s(:lvar, :sorting), :[]=,
                        s(:lvar, :j)),
                      s(:send,
                        s(:lvar, :sorting), :[]=,
                        s(:send,
                          s(:lvar, :j), :+,
                          s(:int, 1)))),
                    s(:array,
                      s(:send,
                        s(:lvar, :sorting), :[],
                        s(:send,
                          s(:lvar, :j), :+,
                          s(:int, 1))),
                      s(:send,
                        s(:lvar, :sorting), :[],
                        s(:lvar, :j)))), nil)))),
          s(:return,
            s(:send,
              s(:send,
                s(:lvar, :sorting), :collect,
                s(:block_pass,
                  s(:sym, :first))), :join,
              s(:str, ""))))),
      s(:defs,
        s(:self), :nfd_one,
        s(:args,
          s(:arg, :string)),
        s(:begin,
          s(:lvasgn, :string,
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :string), :chars), :map!),
                s(:args,
                  s(:arg, :c)),
                s(:or,
                  s(:send,
                    s(:const, nil, :DECOMPOSITION_TABLE), :[],
                    s(:lvar, :c)),
                  s(:lvar, :c))), :join,
              s(:str, ""))),
          s(:send, nil, :canonical_ordering_one,
            s(:send, nil, :hangul_decomp_one,
              s(:lvar, :string))))),
      s(:defs,
        s(:self), :nfc_one,
        s(:args,
          s(:arg, :string)),
        s(:begin,
          s(:lvasgn, :nfd_string,
            s(:send, nil, :nfd_one,
              s(:lvar, :string))),
          s(:lvasgn, :start,
            s(:send,
              s(:lvar, :nfd_string), :[],
              s(:int, 0))),
          s(:lvasgn, :last_class,
            s(:send,
              s(:send,
                s(:const, nil, :CLASS_TABLE), :[],
                s(:lvar, :start)), :-,
              s(:int, 1))),
          s(:lvasgn, :accents,
            s(:str, "")),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :nfd_string), :[],
                s(:irange,
                  s(:int, 1),
                  s(:int, -1))), :each_char),
            s(:args,
              s(:arg, :accent)),
            s(:begin,
              s(:lvasgn, :accent_class,
                s(:send,
                  s(:const, nil, :CLASS_TABLE), :[],
                  s(:lvar, :accent))),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :last_class), :<,
                    s(:lvar, :accent_class)),
                  s(:lvasgn, :composite,
                    s(:send,
                      s(:const, nil, :COMPOSITION_TABLE), :[],
                      s(:send,
                        s(:lvar, :start), :+,
                        s(:lvar, :accent))))),
                s(:lvasgn, :start,
                  s(:lvar, :composite)),
                s(:begin,
                  s(:send,
                    s(:lvar, :accents), :<<,
                    s(:lvar, :accent)),
                  s(:lvasgn, :last_class,
                    s(:lvar, :accent_class)))))),
          s(:send, nil, :hangul_comp_one,
            s(:send,
              s(:lvar, :start), :+,
              s(:lvar, :accents))))),
      s(:defs,
        s(:self), :normalize,
        s(:args,
          s(:arg, :string),
          s(:optarg, :form,
            s(:sym, :nfc))),
        s(:begin,
          s(:lvasgn, :encoding,
            s(:send,
              s(:lvar, :string), :encoding)),
          s(:case,
            s(:lvar, :encoding),
            s(:when,
              s(:const,
                s(:const, nil, :Encoding), :UTF_8),
              s(:case,
                s(:lvar, :form),
                s(:when,
                  s(:sym, :nfc),
                  s(:send,
                    s(:lvar, :string), :gsub,
                    s(:const, nil, :REGEXP_C),
                    s(:const, nil, :NF_HASH_C))),
                s(:when,
                  s(:sym, :nfd),
                  s(:send,
                    s(:lvar, :string), :gsub,
                    s(:const, nil, :REGEXP_D),
                    s(:const, nil, :NF_HASH_D))),
                s(:when,
                  s(:sym, :nfkc),
                  s(:send,
                    s(:send,
                      s(:lvar, :string), :gsub,
                      s(:const, nil, :REGEXP_K),
                      s(:const, nil, :KOMPATIBLE_TABLE)), :gsub,
                    s(:const, nil, :REGEXP_C),
                    s(:const, nil, :NF_HASH_C))),
                s(:when,
                  s(:sym, :nfkd),
                  s(:send,
                    s(:send,
                      s(:lvar, :string), :gsub,
                      s(:const, nil, :REGEXP_K),
                      s(:const, nil, :KOMPATIBLE_TABLE)), :gsub,
                    s(:const, nil, :REGEXP_D),
                    s(:const, nil, :NF_HASH_D))),
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "Invalid normalization form "),
                    s(:begin,
                      s(:lvar, :form)),
                    s(:str, "."))))),
            s(:when,
              s(:const,
                s(:const, nil, :Encoding), :US_ASCII),
              s(:lvar, :string)),
            s(:when,
              s(:splat,
                s(:const, nil, :UNICODE_ENCODINGS)),
              s(:send,
                s(:send, nil, :normalize,
                  s(:send,
                    s(:lvar, :string), :encode,
                    s(:const,
                      s(:const, nil, :Encoding), :UTF_8)),
                  s(:lvar, :form)), :encode,
                s(:lvar, :encoding))),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:dstr,
                s(:str, "Unicode Normalization not appropriate for "),
                s(:begin,
                  s(:lvar, :encoding))))))),
      s(:defs,
        s(:self), :normalized?,
        s(:args,
          s(:arg, :string),
          s(:optarg, :form,
            s(:sym, :nfc))),
        s(:begin,
          s(:lvasgn, :encoding,
            s(:send,
              s(:lvar, :string), :encoding)),
          s(:case,
            s(:lvar, :encoding),
            s(:when,
              s(:const,
                s(:const, nil, :Encoding), :UTF_8),
              s(:case,
                s(:lvar, :form),
                s(:when,
                  s(:sym, :nfc),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :string), :scan,
                        s(:const, nil, :REGEXP_C)),
                      s(:args,
                        s(:arg, :match)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:const, nil, :NF_HASH_C), :[],
                            s(:lvar, :match)), :!=,
                          s(:lvar, :match)),
                        s(:return,
                          s(:false)), nil)),
                    s(:true))),
                s(:when,
                  s(:sym, :nfd),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :string), :scan,
                        s(:const, nil, :REGEXP_D)),
                      s(:args,
                        s(:arg, :match)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:const, nil, :NF_HASH_D), :[],
                            s(:lvar, :match)), :!=,
                          s(:lvar, :match)),
                        s(:return,
                          s(:false)), nil)),
                    s(:true))),
                s(:when,
                  s(:sym, :nfkc),
                  s(:and,
                    s(:send, nil, :normalized?,
                      s(:lvar, :string),
                      s(:sym, :nfc)),
                    s(:send,
                      s(:lvar, :string), :!~,
                      s(:const, nil, :REGEXP_K)))),
                s(:when,
                  s(:sym, :nfkd),
                  s(:and,
                    s(:send, nil, :normalized?,
                      s(:lvar, :string),
                      s(:sym, :nfd)),
                    s(:send,
                      s(:lvar, :string), :!~,
                      s(:const, nil, :REGEXP_K)))),
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "Invalid normalization form "),
                    s(:begin,
                      s(:lvar, :form)),
                    s(:str, "."))))),
            s(:when,
              s(:const,
                s(:const, nil, :Encoding), :US_ASCII),
              s(:true)),
            s(:when,
              s(:splat,
                s(:const, nil, :UNICODE_ENCODINGS)),
              s(:send, nil, :normalized?,
                s(:send,
                  s(:lvar, :string), :encode,
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_8)),
                s(:lvar, :form))),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:dstr,
                s(:str, "Unicode Normalization not appropriate for "),
                s(:begin,
                  s(:lvar, :encoding))))))))))
