s(:module,
  s(:const, nil, :Profiler__),
  s(:begin,
    s(:class,
      s(:const, nil, :Wrapper),
      s(:send,
        s(:const, nil, :Struct), :new,
        s(:sym, :defined_class),
        s(:sym, :method_id),
        s(:sym, :hash)),
      s(:begin,
        s(:send, nil, :private,
          s(:sym, :defined_class=),
          s(:sym, :method_id=),
          s(:sym, :hash=)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :klass),
            s(:arg, :mid)),
          s(:begin,
            s(:super,
              s(:lvar, :klass),
              s(:lvar, :mid),
              s(:nil)),
            s(:send,
              s(:self), :hash=,
              s(:send,
                s(:send,
                  s(:send,
                    s(:const, nil, :Struct), :instance_method,
                    s(:sym, :hash)), :bind,
                  s(:self)), :call)))),
        s(:def, :to_s,
          s(:args),
          s(:send,
            s(:send,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :defined_class), :inspect)),
                s(:str, "#")), :sub,
              s(:regexp,
                s(:str, "\\A\\#<Class:(.*)>#\\z"),
                s(:regopt)),
              s(:str, "\\1.")), :<<,
            s(:send,
              s(:send, nil, :method_id), :to_s))),
        s(:alias,
          s(:sym, :inspect),
          s(:sym, :to_s)))),
    s(:cvasgn, :@@start,
      s(:nil)),
    s(:cvasgn, :@@stacks,
      s(:nil)),
    s(:cvasgn, :@@maps,
      s(:nil)),
    s(:casgn, nil, :PROFILE_CALL_PROC,
      s(:block,
        s(:send,
          s(:const, nil, :TracePoint), :new,
          s(:splat,
            s(:array,
              s(:sym, :call),
              s(:sym, :c_call),
              s(:sym, :b_call)))),
        s(:args,
          s(:arg, :tp)),
        s(:begin,
          s(:lvasgn, :now,
            s(:send,
              s(:send,
                s(:const, nil, :Process), :times), :[],
              s(:int, 0))),
          s(:lvasgn, :stack,
            s(:begin,
              s(:or_asgn,
                s(:send,
                  s(:cvar, :@@stacks), :[],
                  s(:send,
                    s(:const, nil, :Thread), :current)),
                s(:array)))),
          s(:send,
            s(:lvar, :stack), :push,
            s(:array,
              s(:lvar, :now),
              s(:float, 0.0)))))),
    s(:casgn, nil, :PROFILE_RETURN_PROC,
      s(:block,
        s(:send,
          s(:const, nil, :TracePoint), :new,
          s(:splat,
            s(:array,
              s(:sym, :return),
              s(:sym, :c_return),
              s(:sym, :b_return)))),
        s(:args,
          s(:arg, :tp)),
        s(:begin,
          s(:lvasgn, :now,
            s(:send,
              s(:send,
                s(:const, nil, :Process), :times), :[],
              s(:int, 0))),
          s(:lvasgn, :key,
            s(:send,
              s(:const, nil, :Wrapper), :new,
              s(:send,
                s(:lvar, :tp), :defined_class),
              s(:send,
                s(:lvar, :tp), :method_id))),
          s(:lvasgn, :stack,
            s(:begin,
              s(:or_asgn,
                s(:send,
                  s(:cvar, :@@stacks), :[],
                  s(:send,
                    s(:const, nil, :Thread), :current)),
                s(:array)))),
          s(:if,
            s(:lvasgn, :tick,
              s(:send,
                s(:lvar, :stack), :pop)),
            s(:begin,
              s(:lvasgn, :threadmap,
                s(:begin,
                  s(:or_asgn,
                    s(:send,
                      s(:cvar, :@@maps), :[],
                      s(:send,
                        s(:const, nil, :Thread), :current)),
                    s(:hash)))),
              s(:lvasgn, :data,
                s(:begin,
                  s(:or_asgn,
                    s(:send,
                      s(:lvar, :threadmap), :[],
                      s(:lvar, :key)),
                    s(:array,
                      s(:int, 0),
                      s(:float, 0.0),
                      s(:float, 0.0),
                      s(:lvar, :key))))),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 0)), :+,
                s(:int, 1)),
              s(:lvasgn, :cost,
                s(:send,
                  s(:lvar, :now), :-,
                  s(:send,
                    s(:lvar, :tick), :[],
                    s(:int, 0)))),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 1)), :+,
                s(:lvar, :cost)),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 2)), :+,
                s(:send,
                  s(:lvar, :cost), :-,
                  s(:send,
                    s(:lvar, :tick), :[],
                    s(:int, 1)))),
              s(:if,
                s(:send,
                  s(:lvar, :stack), :[],
                  s(:int, -1)),
                s(:op_asgn,
                  s(:send,
                    s(:send,
                      s(:lvar, :stack), :[],
                      s(:int, -1)), :[],
                    s(:int, 1)), :+,
                  s(:lvar, :cost)), nil)), nil)))),
    s(:send, nil, :module_function),
    s(:def, :start_profile,
      s(:args),
      s(:begin,
        s(:cvasgn, :@@start,
          s(:send,
            s(:send,
              s(:const, nil, :Process), :times), :[],
            s(:int, 0))),
        s(:cvasgn, :@@stacks,
          s(:hash)),
        s(:cvasgn, :@@maps,
          s(:hash)),
        s(:send,
          s(:const, nil, :PROFILE_CALL_PROC), :enable),
        s(:send,
          s(:const, nil, :PROFILE_RETURN_PROC), :enable))),
    s(:def, :stop_profile,
      s(:args),
      s(:begin,
        s(:send,
          s(:const, nil, :PROFILE_CALL_PROC), :disable),
        s(:send,
          s(:const, nil, :PROFILE_RETURN_PROC), :disable))),
    s(:def, :print_profile,
      s(:args,
        s(:arg, :f)),
      s(:begin,
        s(:send, nil, :stop_profile),
        s(:lvasgn, :total,
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :Process), :times), :[],
              s(:int, 0)), :-,
            s(:cvar, :@@start))),
        s(:if,
          s(:send,
            s(:lvar, :total), :==,
            s(:int, 0)),
          s(:lvasgn, :total,
            s(:float, 0.01)), nil),
        s(:lvasgn, :totals,
          s(:hash)),
        s(:block,
          s(:send,
            s(:send,
              s(:cvar, :@@maps), :values), :each),
          s(:args,
            s(:arg, :threadmap)),
          s(:block,
            s(:send,
              s(:lvar, :threadmap), :each),
            s(:args,
              s(:arg, :key),
              s(:arg, :data)),
            s(:begin,
              s(:lvasgn, :total_data,
                s(:begin,
                  s(:or_asgn,
                    s(:send,
                      s(:lvar, :totals), :[],
                      s(:lvar, :key)),
                    s(:array,
                      s(:int, 0),
                      s(:float, 0.0),
                      s(:float, 0.0),
                      s(:lvar, :key))))),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :total_data), :[],
                  s(:int, 0)), :+,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 0))),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :total_data), :[],
                  s(:int, 1)), :+,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 1))),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :total_data), :[],
                  s(:int, 2)), :+,
                s(:send,
                  s(:lvar, :data), :[],
                  s(:int, 2)))))),
        s(:lvasgn, :data,
          s(:send,
            s(:lvar, :totals), :values)),
        s(:lvasgn, :data,
          s(:block,
            s(:send,
              s(:lvar, :data), :sort_by),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:send,
                s(:lvar, :x), :[],
                s(:int, 2)), :-@))),
        s(:lvasgn, :sum,
          s(:int, 0)),
        s(:send,
          s(:lvar, :f), :printf,
          s(:str, "  %%   cumulative   self              self     total\n")),
        s(:send,
          s(:lvar, :f), :printf,
          s(:str, " time   seconds   seconds    calls  ms/call  ms/call  name\n")),
        s(:for,
          s(:lvasgn, :d),
          s(:lvar, :data),
          s(:begin,
            s(:op_asgn,
              s(:lvasgn, :sum), :+,
              s(:send,
                s(:lvar, :d), :[],
                s(:int, 2))),
            s(:send,
              s(:lvar, :f), :printf,
              s(:str, "%6.2f %8.2f  %8.2f %8d "),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :d), :[],
                    s(:int, 2)), :/,
                  s(:lvar, :total)), :*,
                s(:int, 100)),
              s(:lvar, :sum),
              s(:send,
                s(:lvar, :d), :[],
                s(:int, 2)),
              s(:send,
                s(:lvar, :d), :[],
                s(:int, 0))),
            s(:send,
              s(:lvar, :f), :printf,
              s(:str, "%8.2f %8.2f  %s\n"),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :d), :[],
                    s(:int, 2)), :*,
                  s(:int, 1000)), :/,
                s(:send,
                  s(:lvar, :d), :[],
                  s(:int, 0))),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :d), :[],
                    s(:int, 1)), :*,
                  s(:int, 1000)), :/,
                s(:send,
                  s(:lvar, :d), :[],
                  s(:int, 0))),
              s(:send,
                s(:lvar, :d), :[],
                s(:int, 3))))),
        s(:send,
          s(:lvar, :f), :printf,
          s(:str, "%6.2f %8.2f  %8.2f %8d "),
          s(:float, 0.0),
          s(:lvar, :total),
          s(:float, 0.0),
          s(:int, 1)),
        s(:send,
          s(:lvar, :f), :printf,
          s(:str, "%8.2f %8.2f  %s\n"),
          s(:float, 0.0),
          s(:send,
            s(:lvar, :total), :*,
            s(:int, 1000)),
          s(:str, "#toplevel"))))))
