s(:begin,
  s(:send, nil, :require,
    s(:str, "monitor")),
  s(:class,
    s(:const, nil, :Logger), nil,
    s(:begin,
      s(:casgn, nil, :VERSION,
        s(:str, "1.2.7")),
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :_),
          s(:lvasgn, :name),
          s(:lvasgn, :rev)),
        s(:array,
          s(:str, "Id"))),
      s(:if,
        s(:lvar, :name),
        s(:lvasgn, :name,
          s(:send,
            s(:lvar, :name), :chomp,
            s(:str, ",v"))),
        s(:lvasgn, :name,
          s(:send,
            s(:const, nil, :File), :basename,
            s(:str, "(string)")))),
      s(:or_asgn,
        s(:lvasgn, :rev),
        s(:dstr,
          s(:str, "v"),
          s(:begin,
            s(:const, nil, :VERSION)))),
      s(:casgn, nil, :ProgName,
        s(:send,
          s(:dstr,
            s(:begin,
              s(:lvar, :name)),
            s(:str, "/"),
            s(:begin,
              s(:lvar, :rev))), :freeze)),
      s(:class,
        s(:const, nil, :Error),
        s(:const, nil, :RuntimeError), nil),
      s(:class,
        s(:const, nil, :ShiftingError),
        s(:const, nil, :Error), nil),
      s(:module,
        s(:const, nil, :Severity),
        s(:begin,
          s(:casgn, nil, :DEBUG,
            s(:int, 0)),
          s(:casgn, nil, :INFO,
            s(:int, 1)),
          s(:casgn, nil, :WARN,
            s(:int, 2)),
          s(:casgn, nil, :ERROR,
            s(:int, 3)),
          s(:casgn, nil, :FATAL,
            s(:int, 4)),
          s(:casgn, nil, :UNKNOWN,
            s(:int, 5)))),
      s(:send, nil, :include,
        s(:const, nil, :Severity)),
      s(:send, nil, :attr_reader,
        s(:sym, :level)),
      s(:def, :level=,
        s(:args,
          s(:arg, :severity)),
        s(:if,
          s(:send,
            s(:lvar, :severity), :is_a?,
            s(:const, nil, :Integer)),
          s(:ivasgn, :@level,
            s(:lvar, :severity)),
          s(:begin,
            s(:lvasgn, :_severity,
              s(:send,
                s(:send,
                  s(:lvar, :severity), :to_s), :downcase)),
            s(:case,
              s(:lvar, :_severity),
              s(:when,
                s(:send,
                  s(:str, "debug"), :freeze),
                s(:ivasgn, :@level,
                  s(:const, nil, :DEBUG))),
              s(:when,
                s(:send,
                  s(:str, "info"), :freeze),
                s(:ivasgn, :@level,
                  s(:const, nil, :INFO))),
              s(:when,
                s(:send,
                  s(:str, "warn"), :freeze),
                s(:ivasgn, :@level,
                  s(:const, nil, :WARN))),
              s(:when,
                s(:send,
                  s(:str, "error"), :freeze),
                s(:ivasgn, :@level,
                  s(:const, nil, :ERROR))),
              s(:when,
                s(:send,
                  s(:str, "fatal"), :freeze),
                s(:ivasgn, :@level,
                  s(:const, nil, :FATAL))),
              s(:when,
                s(:send,
                  s(:str, "unknown"), :freeze),
                s(:ivasgn, :@level,
                  s(:const, nil, :UNKNOWN))),
              s(:send, nil, :raise,
                s(:const, nil, :ArgumentError),
                s(:dstr,
                  s(:str, "invalid log level: "),
                  s(:begin,
                    s(:lvar, :severity)))))))),
      s(:send, nil, :attr_accessor,
        s(:sym, :progname)),
      s(:def, :datetime_format=,
        s(:args,
          s(:arg, :datetime_format)),
        s(:send,
          s(:ivar, :@default_formatter), :datetime_format=,
          s(:lvar, :datetime_format))),
      s(:def, :datetime_format,
        s(:args),
        s(:send,
          s(:ivar, :@default_formatter), :datetime_format)),
      s(:send, nil, :attr_accessor,
        s(:sym, :formatter)),
      s(:alias,
        s(:sym, :sev_threshold),
        s(:sym, :level)),
      s(:alias,
        s(:sym, :sev_threshold=),
        s(:sym, :level=)),
      s(:def, :debug?,
        s(:args),
        s(:send,
          s(:ivar, :@level), :<=,
          s(:const, nil, :DEBUG))),
      s(:def, :info?,
        s(:args),
        s(:send,
          s(:ivar, :@level), :<=,
          s(:const, nil, :INFO))),
      s(:def, :warn?,
        s(:args),
        s(:send,
          s(:ivar, :@level), :<=,
          s(:const, nil, :WARN))),
      s(:def, :error?,
        s(:args),
        s(:send,
          s(:ivar, :@level), :<=,
          s(:const, nil, :ERROR))),
      s(:def, :fatal?,
        s(:args),
        s(:send,
          s(:ivar, :@level), :<=,
          s(:const, nil, :FATAL))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :logdev),
          s(:optarg, :shift_age,
            s(:int, 0)),
          s(:optarg, :shift_size,
            s(:int, 1048576))),
        s(:begin,
          s(:ivasgn, :@progname,
            s(:nil)),
          s(:ivasgn, :@level,
            s(:const, nil, :DEBUG)),
          s(:ivasgn, :@default_formatter,
            s(:send,
              s(:const, nil, :Formatter), :new)),
          s(:ivasgn, :@formatter,
            s(:nil)),
          s(:ivasgn, :@logdev,
            s(:nil)),
          s(:if,
            s(:lvar, :logdev),
            s(:ivasgn, :@logdev,
              s(:send,
                s(:const, nil, :LogDevice), :new,
                s(:lvar, :logdev),
                s(:hash,
                  s(:pair,
                    s(:sym, :shift_age),
                    s(:lvar, :shift_age)),
                  s(:pair,
                    s(:sym, :shift_size),
                    s(:lvar, :shift_size))))), nil))),
      s(:def, :reopen,
        s(:args,
          s(:optarg, :logdev,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:ivar, :@logdev), :reopen,
            s(:lvar, :logdev)),
          s(:self))),
      s(:def, :add,
        s(:args,
          s(:arg, :severity),
          s(:optarg, :message,
            s(:nil)),
          s(:optarg, :progname,
            s(:nil))),
        s(:begin,
          s(:or_asgn,
            s(:lvasgn, :severity),
            s(:const, nil, :UNKNOWN)),
          s(:if,
            s(:or,
              s(:send,
                s(:ivar, :@logdev), :nil?),
              s(:send,
                s(:lvar, :severity), :<,
                s(:ivar, :@level))),
            s(:return,
              s(:true)), nil),
          s(:or_asgn,
            s(:lvasgn, :progname),
            s(:ivar, :@progname)),
          s(:if,
            s(:send,
              s(:lvar, :message), :nil?),
            s(:if,
              s(:send, nil, :block_given?),
              s(:lvasgn, :message,
                s(:yield)),
              s(:begin,
                s(:lvasgn, :message,
                  s(:lvar, :progname)),
                s(:lvasgn, :progname,
                  s(:ivar, :@progname)))), nil),
          s(:send,
            s(:ivar, :@logdev), :write,
            s(:send, nil, :format_message,
              s(:send, nil, :format_severity,
                s(:lvar, :severity)),
              s(:send,
                s(:const, nil, :Time), :now),
              s(:lvar, :progname),
              s(:lvar, :message))),
          s(:true))),
      s(:alias,
        s(:sym, :log),
        s(:sym, :add)),
      s(:def, :<<,
        s(:args,
          s(:arg, :msg)),
        s(:if,
          s(:send,
            s(:ivar, :@logdev), :nil?), nil,
          s(:send,
            s(:ivar, :@logdev), :write,
            s(:lvar, :msg)))),
      s(:def, :debug,
        s(:args,
          s(:optarg, :progname,
            s(:nil)),
          s(:blockarg, :block)),
        s(:send, nil, :add,
          s(:const, nil, :DEBUG),
          s(:nil),
          s(:lvar, :progname),
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :info,
        s(:args,
          s(:optarg, :progname,
            s(:nil)),
          s(:blockarg, :block)),
        s(:send, nil, :add,
          s(:const, nil, :INFO),
          s(:nil),
          s(:lvar, :progname),
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :warn,
        s(:args,
          s(:optarg, :progname,
            s(:nil)),
          s(:blockarg, :block)),
        s(:send, nil, :add,
          s(:const, nil, :WARN),
          s(:nil),
          s(:lvar, :progname),
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :error,
        s(:args,
          s(:optarg, :progname,
            s(:nil)),
          s(:blockarg, :block)),
        s(:send, nil, :add,
          s(:const, nil, :ERROR),
          s(:nil),
          s(:lvar, :progname),
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :fatal,
        s(:args,
          s(:optarg, :progname,
            s(:nil)),
          s(:blockarg, :block)),
        s(:send, nil, :add,
          s(:const, nil, :FATAL),
          s(:nil),
          s(:lvar, :progname),
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :unknown,
        s(:args,
          s(:optarg, :progname,
            s(:nil)),
          s(:blockarg, :block)),
        s(:send, nil, :add,
          s(:const, nil, :UNKNOWN),
          s(:nil),
          s(:lvar, :progname),
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :close,
        s(:args),
        s(:if,
          s(:ivar, :@logdev),
          s(:send,
            s(:ivar, :@logdev), :close), nil)),
      s(:send, nil, :private),
      s(:casgn, nil, :SEV_LABEL,
        s(:send,
          s(:send,
            s(:array,
              s(:str, "DEBUG"),
              s(:str, "INFO"),
              s(:str, "WARN"),
              s(:str, "ERROR"),
              s(:str, "FATAL"),
              s(:str, "ANY")), :each,
            s(:block_pass,
              s(:sym, :freeze))), :freeze)),
      s(:def, :format_severity,
        s(:args,
          s(:arg, :severity)),
        s(:or,
          s(:send,
            s(:const, nil, :SEV_LABEL), :[],
            s(:lvar, :severity)),
          s(:str, "ANY"))),
      s(:def, :format_message,
        s(:args,
          s(:arg, :severity),
          s(:arg, :datetime),
          s(:arg, :progname),
          s(:arg, :msg)),
        s(:send,
          s(:begin,
            s(:or,
              s(:ivar, :@formatter),
              s(:ivar, :@default_formatter))), :call,
          s(:lvar, :severity),
          s(:lvar, :datetime),
          s(:lvar, :progname),
          s(:lvar, :msg))),
      s(:class,
        s(:const, nil, :Formatter), nil,
        s(:begin,
          s(:casgn, nil, :Format,
            s(:send,
              s(:str, "%s, [%s#%d] %5s -- %s: %s\n"), :freeze)),
          s(:send, nil, :attr_accessor,
            s(:sym, :datetime_format)),
          s(:def, :initialize,
            s(:args),
            s(:ivasgn, :@datetime_format,
              s(:nil))),
          s(:def, :call,
            s(:args,
              s(:arg, :severity),
              s(:arg, :time),
              s(:arg, :progname),
              s(:arg, :msg)),
            s(:send,
              s(:const, nil, :Format), :%,
              s(:array,
                s(:send,
                  s(:lvar, :severity), :[],
                  s(:irange,
                    s(:int, 0),
                    s(:int, 0))),
                s(:send, nil, :format_datetime,
                  s(:lvar, :time)),
                s(:gvar, :$$),
                s(:lvar, :severity),
                s(:lvar, :progname),
                s(:send, nil, :msg2str,
                  s(:lvar, :msg))))),
          s(:send, nil, :private),
          s(:def, :format_datetime,
            s(:args,
              s(:arg, :time)),
            s(:send,
              s(:lvar, :time), :strftime,
              s(:or,
                s(:ivar, :@datetime_format),
                s(:send,
                  s(:str, "%Y-%m-%dT%H:%M:%S.%6N "), :freeze)))),
          s(:def, :msg2str,
            s(:args,
              s(:arg, :msg)),
            s(:case,
              s(:lvar, :msg),
              s(:when,
                s(:const,
                  s(:cbase), :String),
                s(:lvar, :msg)),
              s(:when,
                s(:const,
                  s(:cbase), :Exception),
                s(:send,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :msg), :message)),
                    s(:str, " ("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :msg), :class)),
                    s(:str, ")\n")), :<<,
                  s(:send,
                    s(:begin,
                      s(:or,
                        s(:send,
                          s(:lvar, :msg), :backtrace),
                        s(:array))), :join,
                    s(:str, "\n")))),
              s(:send,
                s(:lvar, :msg), :inspect))))),
      s(:module,
        s(:const, nil, :Period),
        s(:begin,
          s(:send, nil, :module_function),
          s(:casgn, nil, :SiD,
            s(:send,
              s(:send,
                s(:int, 24), :*,
                s(:int, 60)), :*,
              s(:int, 60))),
          s(:def, :next_rotate_time,
            s(:args,
              s(:arg, :now),
              s(:arg, :shift_age)),
            s(:begin,
              s(:case,
                s(:lvar, :shift_age),
                s(:when,
                  s(:str, "daily"),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :mktime,
                        s(:send,
                          s(:lvar, :now), :year),
                        s(:send,
                          s(:lvar, :now), :month),
                        s(:send,
                          s(:lvar, :now), :mday)), :+,
                      s(:const, nil, :SiD)))),
                s(:when,
                  s(:str, "weekly"),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :mktime,
                        s(:send,
                          s(:lvar, :now), :year),
                        s(:send,
                          s(:lvar, :now), :month),
                        s(:send,
                          s(:lvar, :now), :mday)), :+,
                      s(:send,
                        s(:const, nil, :SiD), :*,
                        s(:begin,
                          s(:send,
                            s(:int, 7), :-,
                            s(:send,
                              s(:lvar, :now), :wday))))))),
                s(:when,
                  s(:str, "monthly"),
                  s(:begin,
                    s(:lvasgn, :t,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Time), :mktime,
                          s(:send,
                            s(:lvar, :now), :year),
                          s(:send,
                            s(:lvar, :now), :month),
                          s(:int, 1)), :+,
                        s(:send,
                          s(:const, nil, :SiD), :*,
                          s(:int, 32)))),
                    s(:return,
                      s(:send,
                        s(:const, nil, :Time), :mktime,
                        s(:send,
                          s(:lvar, :t), :year),
                        s(:send,
                          s(:lvar, :t), :month),
                        s(:int, 1))))),
                s(:return,
                  s(:lvar, :now))),
              s(:if,
                s(:or,
                  s(:or,
                    s(:send,
                      s(:send,
                        s(:lvar, :t), :hour), :nonzero?),
                    s(:send,
                      s(:send,
                        s(:lvar, :t), :min), :nonzero?)),
                  s(:send,
                    s(:send,
                      s(:lvar, :t), :sec), :nonzero?)),
                s(:begin,
                  s(:lvasgn, :hour,
                    s(:send,
                      s(:lvar, :t), :hour)),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:const, nil, :Time), :mktime,
                      s(:send,
                        s(:lvar, :t), :year),
                      s(:send,
                        s(:lvar, :t), :month),
                      s(:send,
                        s(:lvar, :t), :mday))),
                  s(:if,
                    s(:send,
                      s(:lvar, :hour), :>,
                      s(:int, 12)),
                    s(:op_asgn,
                      s(:lvasgn, :t), :+,
                      s(:const, nil, :SiD)), nil)), nil),
              s(:lvar, :t))),
          s(:def, :previous_period_end,
            s(:args,
              s(:arg, :now),
              s(:arg, :shift_age)),
            s(:begin,
              s(:case,
                s(:lvar, :shift_age),
                s(:when,
                  s(:str, "daily"),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :mktime,
                        s(:send,
                          s(:lvar, :now), :year),
                        s(:send,
                          s(:lvar, :now), :month),
                        s(:send,
                          s(:lvar, :now), :mday)), :-,
                      s(:send,
                        s(:const, nil, :SiD), :/,
                        s(:int, 2))))),
                s(:when,
                  s(:str, "weekly"),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :mktime,
                        s(:send,
                          s(:lvar, :now), :year),
                        s(:send,
                          s(:lvar, :now), :month),
                        s(:send,
                          s(:lvar, :now), :mday)), :-,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:const, nil, :SiD), :*,
                            s(:send,
                              s(:lvar, :now), :wday)), :+,
                          s(:send,
                            s(:const, nil, :SiD), :/,
                            s(:int, 2))))))),
                s(:when,
                  s(:str, "monthly"),
                  s(:lvasgn, :t,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :mktime,
                        s(:send,
                          s(:lvar, :now), :year),
                        s(:send,
                          s(:lvar, :now), :month),
                        s(:int, 1)), :-,
                      s(:send,
                        s(:const, nil, :SiD), :/,
                        s(:int, 2))))),
                s(:return,
                  s(:lvar, :now))),
              s(:send,
                s(:const, nil, :Time), :mktime,
                s(:send,
                  s(:lvar, :t), :year),
                s(:send,
                  s(:lvar, :t), :month),
                s(:send,
                  s(:lvar, :t), :mday),
                s(:int, 23),
                s(:int, 59),
                s(:int, 59)))))),
      s(:class,
        s(:const, nil, :LogDevice), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :Period)),
          s(:send, nil, :attr_reader,
            s(:sym, :dev)),
          s(:send, nil, :attr_reader,
            s(:sym, :filename)),
          s(:send, nil, :include,
            s(:const, nil, :MonitorMixin)),
          s(:def, :initialize,
            s(:args,
              s(:optarg, :log,
                s(:nil)),
              s(:optarg, :opt,
                s(:hash))),
            s(:begin,
              s(:ivasgn, :@dev,
                s(:ivasgn, :@filename,
                  s(:ivasgn, :@shift_age,
                    s(:ivasgn, :@shift_size,
                      s(:nil))))),
              s(:send, nil, :mon_initialize),
              s(:send, nil, :set_dev,
                s(:lvar, :log)),
              s(:if,
                s(:ivar, :@filename),
                s(:begin,
                  s(:ivasgn, :@shift_age,
                    s(:or,
                      s(:send,
                        s(:lvar, :opt), :[],
                        s(:sym, :shift_age)),
                      s(:int, 7))),
                  s(:ivasgn, :@shift_size,
                    s(:or,
                      s(:send,
                        s(:lvar, :opt), :[],
                        s(:sym, :shift_size)),
                      s(:int, 1048576))),
                  s(:if,
                    s(:send,
                      s(:ivar, :@shift_age), :is_a?,
                      s(:const, nil, :Integer)), nil,
                    s(:ivasgn, :@next_rotate_time,
                      s(:send, nil, :next_rotate_time,
                        s(:send,
                          s(:const, nil, :Time), :now),
                        s(:ivar, :@shift_age))))), nil))),
          s(:def, :write,
            s(:args,
              s(:arg, :message)),
            s(:kwbegin,
              s(:rescue,
                s(:block,
                  s(:send, nil, :synchronize),
                  s(:args),
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:ivar, :@shift_age),
                        s(:send,
                          s(:ivar, :@dev), :respond_to?,
                          s(:sym, :stat))),
                      s(:kwbegin,
                        s(:rescue,
                          s(:send, nil, :check_shift_log),
                          s(:resbody, nil, nil,
                            s(:send, nil, :warn,
                              s(:dstr,
                                s(:str, "log shifting failed. "),
                                s(:begin,
                                  s(:gvar, :$!))))), nil)), nil),
                    s(:kwbegin,
                      s(:rescue,
                        s(:send,
                          s(:ivar, :@dev), :write,
                          s(:lvar, :message)),
                        s(:resbody, nil, nil,
                          s(:send, nil, :warn,
                            s(:dstr,
                              s(:str, "log writing failed. "),
                              s(:begin,
                                s(:gvar, :$!))))), nil)))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :Exception)),
                  s(:lvasgn, :ignored),
                  s(:send, nil, :warn,
                    s(:dstr,
                      s(:str, "log writing failed. "),
                      s(:begin,
                        s(:lvar, :ignored))))), nil))),
          s(:def, :close,
            s(:args),
            s(:kwbegin,
              s(:rescue,
                s(:block,
                  s(:send, nil, :synchronize),
                  s(:args),
                  s(:rescue,
                    s(:send,
                      s(:ivar, :@dev), :close),
                    s(:resbody, nil, nil,
                      s(:nil)), nil)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :Exception)), nil,
                  s(:rescue,
                    s(:send,
                      s(:ivar, :@dev), :close),
                    s(:resbody, nil, nil,
                      s(:nil)), nil)), nil))),
          s(:def, :reopen,
            s(:args,
              s(:optarg, :log,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:ivar, :@filename),
                s(:or_asgn,
                  s(:lvasgn, :log),
                  s(:ivar, :@filename)), nil),
              s(:if,
                s(:lvar, :log),
                s(:block,
                  s(:send, nil, :synchronize),
                  s(:args),
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:ivar, :@filename),
                        s(:ivar, :@dev)),
                      s(:begin,
                        s(:rescue,
                          s(:send,
                            s(:ivar, :@dev), :close),
                          s(:resbody, nil, nil,
                            s(:nil)), nil),
                        s(:ivasgn, :@filename,
                          s(:nil))), nil),
                    s(:send, nil, :set_dev,
                      s(:lvar, :log)))), nil),
              s(:self))),
          s(:send, nil, :private),
          s(:def, :set_dev,
            s(:args,
              s(:arg, :log)),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :log), :respond_to?,
                  s(:sym, :write)),
                s(:send,
                  s(:lvar, :log), :respond_to?,
                  s(:sym, :close))),
              s(:ivasgn, :@dev,
                s(:lvar, :log)),
              s(:begin,
                s(:ivasgn, :@dev,
                  s(:send, nil, :open_logfile,
                    s(:lvar, :log))),
                s(:send,
                  s(:ivar, :@dev), :sync=,
                  s(:true)),
                s(:ivasgn, :@filename,
                  s(:lvar, :log))))),
          s(:def, :open_logfile,
            s(:args,
              s(:arg, :filename)),
            s(:kwbegin,
              s(:rescue,
                s(:send, nil, :open,
                  s(:lvar, :filename),
                  s(:begin,
                    s(:send,
                      s(:const,
                        s(:const, nil, :File), :WRONLY), :|,
                      s(:const,
                        s(:const, nil, :File), :APPEND)))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :Errno), :ENOENT)), nil,
                  s(:send, nil, :create_logfile,
                    s(:lvar, :filename))), nil))),
          s(:def, :create_logfile,
            s(:args,
              s(:arg, :filename)),
            s(:begin,
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:lvasgn, :logdev,
                      s(:send, nil, :open,
                        s(:lvar, :filename),
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:const,
                                  s(:const, nil, :File), :WRONLY), :|,
                                s(:const,
                                  s(:const, nil, :File), :APPEND)), :|,
                              s(:const,
                                s(:const, nil, :File), :CREAT)), :|,
                            s(:const,
                              s(:const, nil, :File), :EXCL))))),
                    s(:send,
                      s(:lvar, :logdev), :flock,
                      s(:const,
                        s(:const, nil, :File), :LOCK_EX)),
                    s(:send,
                      s(:lvar, :logdev), :sync=,
                      s(:true)),
                    s(:send, nil, :add_log_header,
                      s(:lvar, :logdev)),
                    s(:send,
                      s(:lvar, :logdev), :flock,
                      s(:const,
                        s(:const, nil, :File), :LOCK_UN))),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :Errno), :EEXIST)), nil,
                    s(:begin,
                      s(:lvasgn, :logdev,
                        s(:send, nil, :open_logfile,
                          s(:lvar, :filename))),
                      s(:send,
                        s(:lvar, :logdev), :sync=,
                        s(:true)))), nil)),
              s(:lvar, :logdev))),
          s(:def, :add_log_header,
            s(:args,
              s(:arg, :file)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :file), :size), :==,
                s(:int, 0)),
              s(:send,
                s(:lvar, :file), :write,
                s(:send,
                  s(:str, "# Logfile created on %s by %s\n"), :%,
                  s(:array,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :now), :to_s),
                    s(:const,
                      s(:const, nil, :Logger), :ProgName)))), nil)),
          s(:def, :check_shift_log,
            s(:args),
            s(:if,
              s(:send,
                s(:ivar, :@shift_age), :is_a?,
                s(:const, nil, :Integer)),
              s(:if,
                s(:and,
                  s(:and,
                    s(:ivar, :@filename),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@shift_age), :>,
                        s(:int, 0)))),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:ivar, :@dev), :stat), :size), :>,
                      s(:ivar, :@shift_size)))),
                s(:block,
                  s(:send, nil, :lock_shift_log),
                  s(:args),
                  s(:send, nil, :shift_log_age)), nil),
              s(:begin,
                s(:lvasgn, :now,
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:if,
                  s(:send,
                    s(:lvar, :now), :>=,
                    s(:ivar, :@next_rotate_time)),
                  s(:begin,
                    s(:ivasgn, :@next_rotate_time,
                      s(:send, nil, :next_rotate_time,
                        s(:lvar, :now),
                        s(:ivar, :@shift_age))),
                    s(:block,
                      s(:send, nil, :lock_shift_log),
                      s(:args),
                      s(:send, nil, :shift_log_period,
                        s(:send, nil, :previous_period_end,
                          s(:lvar, :now),
                          s(:ivar, :@shift_age))))), nil)))),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "mswin|mingw"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:def, :lock_shift_log,
              s(:args),
              s(:yield)),
            s(:def, :lock_shift_log,
              s(:args),
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :retry_limit,
                    s(:int, 8)),
                  s(:lvasgn, :retry_sleep,
                    s(:float, 0.1)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:block,
                        s(:send,
                          s(:const, nil, :File), :open,
                          s(:ivar, :@filename),
                          s(:send,
                            s(:const,
                              s(:const, nil, :File), :WRONLY), :|,
                            s(:const,
                              s(:const, nil, :File), :APPEND))),
                        s(:args,
                          s(:arg, :lock)),
                        s(:begin,
                          s(:send,
                            s(:lvar, :lock), :flock,
                            s(:const,
                              s(:const, nil, :File), :LOCK_EX)),
                          s(:if,
                            s(:and,
                              s(:send,
                                s(:const, nil, :File), :identical?,
                                s(:ivar, :@filename),
                                s(:lvar, :lock)),
                              s(:send,
                                s(:const, nil, :File), :identical?,
                                s(:lvar, :lock),
                                s(:ivar, :@dev))),
                            s(:yield),
                            s(:begin,
                              s(:rescue,
                                s(:send,
                                  s(:ivar, :@dev), :close),
                                s(:resbody, nil, nil,
                                  s(:nil)), nil),
                              s(:ivasgn, :@dev,
                                s(:send, nil, :open_logfile,
                                  s(:ivar, :@filename))),
                              s(:send,
                                s(:ivar, :@dev), :sync=,
                                s(:true)))))),
                      s(:resbody,
                        s(:array,
                          s(:const,
                            s(:const, nil, :Errno), :ENOENT)), nil,
                        s(:if,
                          s(:send,
                            s(:lvar, :retry_limit), :<=,
                            s(:int, 0)),
                          s(:send, nil, :warn,
                            s(:dstr,
                              s(:str, "log rotation inter-process lock failed. "),
                              s(:begin,
                                s(:gvar, :$!)))),
                          s(:begin,
                            s(:send, nil, :sleep,
                              s(:lvar, :retry_sleep)),
                            s(:op_asgn,
                              s(:lvasgn, :retry_limit), :-,
                              s(:int, 1)),
                            s(:op_asgn,
                              s(:lvasgn, :retry_sleep), :*,
                              s(:int, 2)),
                            s(:retry)))), nil))),
                s(:resbody, nil, nil,
                  s(:send, nil, :warn,
                    s(:dstr,
                      s(:str, "log rotation inter-process lock failed. "),
                      s(:begin,
                        s(:gvar, :$!))))), nil))),
          s(:def, :shift_log_age,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:ivar, :@shift_age), :-,
                      s(:int, 3))), :downto,
                  s(:int, 0)),
                s(:args,
                  s(:arg, :i)),
                s(:if,
                  s(:send,
                    s(:const, nil, :FileTest), :exist?,
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@filename)),
                      s(:str, "."),
                      s(:begin,
                        s(:lvar, :i)))),
                  s(:send,
                    s(:const, nil, :File), :rename,
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@filename)),
                      s(:str, "."),
                      s(:begin,
                        s(:lvar, :i))),
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@filename)),
                      s(:str, "."),
                      s(:begin,
                        s(:send,
                          s(:lvar, :i), :+,
                          s(:int, 1))))), nil)),
              s(:rescue,
                s(:send,
                  s(:ivar, :@dev), :close),
                s(:resbody, nil, nil,
                  s(:nil)), nil),
              s(:send,
                s(:const, nil, :File), :rename,
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@filename))),
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@filename)),
                  s(:str, ".0"))),
              s(:ivasgn, :@dev,
                s(:send, nil, :create_logfile,
                  s(:ivar, :@filename))),
              s(:return,
                s(:true)))),
          s(:def, :shift_log_period,
            s(:args,
              s(:arg, :period_end)),
            s(:begin,
              s(:lvasgn, :postfix,
                s(:send,
                  s(:lvar, :period_end), :strftime,
                  s(:str, "%Y%m%d"))),
              s(:lvasgn, :age_file,
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@filename)),
                  s(:str, "."),
                  s(:begin,
                    s(:lvar, :postfix)))),
              s(:if,
                s(:send,
                  s(:const, nil, :FileTest), :exist?,
                  s(:lvar, :age_file)),
                s(:begin,
                  s(:lvasgn, :idx,
                    s(:int, 0)),
                  s(:while,
                    s(:send,
                      s(:lvar, :idx), :<,
                      s(:int, 100)),
                    s(:begin,
                      s(:op_asgn,
                        s(:lvasgn, :idx), :+,
                        s(:int, 1)),
                      s(:lvasgn, :age_file,
                        s(:dstr,
                          s(:begin,
                            s(:ivar, :@filename)),
                          s(:str, "."),
                          s(:begin,
                            s(:lvar, :postfix)),
                          s(:str, "."),
                          s(:begin,
                            s(:lvar, :idx)))),
                      s(:if,
                        s(:send,
                          s(:const, nil, :FileTest), :exist?,
                          s(:lvar, :age_file)), nil,
                        s(:break))))), nil),
              s(:rescue,
                s(:send,
                  s(:ivar, :@dev), :close),
                s(:resbody, nil, nil,
                  s(:nil)), nil),
              s(:send,
                s(:const, nil, :File), :rename,
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@filename))),
                s(:lvar, :age_file)),
              s(:ivasgn, :@dev,
                s(:send, nil, :create_logfile,
                  s(:ivar, :@filename))),
              s(:return,
                s(:true)))))))))
