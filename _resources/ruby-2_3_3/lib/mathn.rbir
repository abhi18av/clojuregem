s(:begin,
  s(:if,
    s(:gvar, :$VERBOSE),
    s(:send, nil, :warn,
      s(:str, "lib/mathn.rb is deprecated")), nil),
  s(:class,
    s(:const, nil, :Numeric), nil, nil),
  s(:send, nil, :require,
    s(:str, "cmath.rb")),
  s(:send, nil, :require,
    s(:str, "matrix.rb")),
  s(:send, nil, :require,
    s(:str, "prime.rb")),
  s(:send, nil, :require,
    s(:str, "mathn/rational")),
  s(:send, nil, :require,
    s(:str, "mathn/complex")),
  s(:if,
    s(:defined?,
      s(:send,
        s(:const, nil, :Math), :exp!)), nil,
    s(:begin,
      s(:block,
        s(:send,
          s(:const, nil, :Object), :instance_eval),
        s(:args),
        s(:send, nil, :remove_const,
          s(:sym, :Math))),
      s(:casgn, nil, :Math,
        s(:const, nil, :CMath)))),
  s(:class,
    s(:const, nil, :Fixnum), nil,
    s(:begin,
      s(:send, nil, :remove_method,
        s(:sym, :/)),
      s(:alias,
        s(:sym, :/),
        s(:sym, :quo)))),
  s(:class,
    s(:const, nil, :Bignum), nil,
    s(:begin,
      s(:send, nil, :remove_method,
        s(:sym, :/)),
      s(:alias,
        s(:sym, :/),
        s(:sym, :quo)))),
  s(:module,
    s(:const, nil, :Math),
    s(:begin,
      s(:send, nil, :remove_method,
        s(:sym, :sqrt)),
      s(:def, :sqrt,
        s(:args,
          s(:arg, :a)),
        s(:if,
          s(:send,
            s(:lvar, :a), :kind_of?,
            s(:const, nil, :Complex)),
          s(:begin,
            s(:lvasgn, :abs,
              s(:send, nil, :sqrt,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :a), :real), :*,
                    s(:send,
                      s(:lvar, :a), :real)), :+,
                  s(:send,
                    s(:send,
                      s(:lvar, :a), :imag), :*,
                    s(:send,
                      s(:lvar, :a), :imag))))),
            s(:lvasgn, :x,
              s(:send, nil, :sqrt,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :a), :real), :+,
                      s(:lvar, :abs))), :/,
                  s(:send, nil, :Rational,
                    s(:int, 2))))),
            s(:lvasgn, :y,
              s(:send, nil, :sqrt,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :a), :real), :-@), :+,
                      s(:lvar, :abs))), :/,
                  s(:send, nil, :Rational,
                    s(:int, 2))))),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :a), :imag), :>=,
                s(:int, 0)),
              s(:send, nil, :Complex,
                s(:lvar, :x),
                s(:lvar, :y)),
              s(:send, nil, :Complex,
                s(:lvar, :x),
                s(:send,
                  s(:lvar, :y), :-@)))),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :a), :respond_to?,
                s(:sym, :nan?)),
              s(:send,
                s(:lvar, :a), :nan?)),
            s(:lvar, :a),
            s(:if,
              s(:send,
                s(:lvar, :a), :>=,
                s(:int, 0)),
              s(:send, nil, :rsqrt,
                s(:lvar, :a)),
              s(:send, nil, :Complex,
                s(:int, 0),
                s(:send, nil, :rsqrt,
                  s(:send,
                    s(:lvar, :a), :-@))))))),
      s(:def, :rsqrt,
        s(:args,
          s(:arg, :a)),
        s(:if,
          s(:send,
            s(:lvar, :a), :kind_of?,
            s(:const, nil, :Float)),
          s(:send, nil, :sqrt!,
            s(:lvar, :a)),
          s(:if,
            s(:send,
              s(:lvar, :a), :kind_of?,
              s(:const, nil, :Rational)),
            s(:send,
              s(:send, nil, :rsqrt,
                s(:send,
                  s(:lvar, :a), :numerator)), :/,
              s(:send, nil, :rsqrt,
                s(:send,
                  s(:lvar, :a), :denominator))),
            s(:begin,
              s(:lvasgn, :src,
                s(:lvar, :a)),
              s(:lvasgn, :max,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 32))),
              s(:lvasgn, :byte_a,
                s(:array,
                  s(:send,
                    s(:lvar, :src), :&,
                    s(:int, 4294967295)))),
              s(:while,
                s(:and,
                  s(:begin,
                    s(:send,
                      s(:lvar, :src), :>=,
                      s(:lvar, :max))),
                  s(:begin,
                    s(:op_asgn,
                      s(:lvasgn, :src), :>>,
                      s(:int, 32)))),
                s(:send,
                  s(:lvar, :byte_a), :unshift,
                  s(:send,
                    s(:lvar, :src), :&,
                    s(:int, 4294967295)))),
              s(:lvasgn, :answer,
                s(:int, 0)),
              s(:lvasgn, :main,
                s(:int, 0)),
              s(:lvasgn, :side,
                s(:int, 0)),
              s(:for,
                s(:lvasgn, :elm),
                s(:lvar, :byte_a),
                s(:begin,
                  s(:lvasgn, :main,
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :main), :<<,
                          s(:int, 32))), :+,
                      s(:lvar, :elm))),
                  s(:op_asgn,
                    s(:lvasgn, :side), :<<,
                    s(:int, 16)),
                  s(:if,
                    s(:send,
                      s(:lvar, :answer), :!=,
                      s(:int, 0)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :main), :*,
                          s(:int, 4)), :<,
                        s(:send,
                          s(:lvar, :side), :*,
                          s(:lvar, :side))),
                      s(:lvasgn, :applo,
                        s(:send,
                          s(:lvar, :main), :div,
                          s(:lvar, :side))),
                      s(:lvasgn, :applo,
                        s(:send,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:begin,
                                  s(:send,
                                    s(:send, nil, :sqrt!,
                                      s(:send,
                                        s(:send,
                                          s(:lvar, :side), :*,
                                          s(:lvar, :side)), :+,
                                        s(:send,
                                          s(:int, 4), :*,
                                          s(:lvar, :main)))), :-,
                                    s(:lvar, :side))), :/,
                                s(:float, 2.0))), :to_i), :+,
                          s(:int, 1)))),
                    s(:lvasgn, :applo,
                      s(:send,
                        s(:send,
                          s(:send, nil, :sqrt!,
                            s(:lvar, :main)), :to_i), :+,
                        s(:int, 1)))),
                  s(:while,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :x,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:lvar, :side), :+,
                                s(:lvar, :applo))), :*,
                            s(:lvar, :applo)))), :>,
                      s(:lvar, :main)),
                    s(:op_asgn,
                      s(:lvasgn, :applo), :-,
                      s(:int, 1))),
                  s(:op_asgn,
                    s(:lvasgn, :main), :-,
                    s(:lvar, :x)),
                  s(:lvasgn, :answer,
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :answer), :<<,
                          s(:int, 16))), :+,
                      s(:lvar, :applo))),
                  s(:op_asgn,
                    s(:lvasgn, :side), :+,
                    s(:send,
                      s(:lvar, :applo), :*,
                      s(:int, 2))))),
              s(:if,
                s(:send,
                  s(:lvar, :main), :==,
                  s(:int, 0)),
                s(:lvar, :answer),
                s(:send, nil, :sqrt!,
                  s(:lvar, :a))))))),
      s(:sclass,
        s(:self),
        s(:send, nil, :remove_method,
          s(:sym, :sqrt))),
      s(:send, nil, :module_function,
        s(:sym, :sqrt)),
      s(:send, nil, :module_function,
        s(:sym, :rsqrt)))))
