s(:begin,
  s(:gvasgn, :$DEBUG_RDOC,
    s(:nil)),
  s(:module,
    s(:const, nil, :RDoc),
    s(:begin,
      s(:class,
        s(:const, nil, :Error),
        s(:const, nil, :RuntimeError), nil),
      s(:casgn, nil, :VERSION,
        s(:str, "4.2.1")),
      s(:casgn, nil, :VISIBILITIES,
        s(:array,
          s(:sym, :public),
          s(:sym, :protected),
          s(:sym, :private))),
      s(:casgn, nil, :DOT_DOC_FILENAME,
        s(:str, ".document")),
      s(:casgn, nil, :GENERAL_MODIFIERS,
        s(:send,
          s(:array,
            s(:str, "nodoc")), :freeze)),
      s(:casgn, nil, :CLASS_MODIFIERS,
        s(:const, nil, :GENERAL_MODIFIERS)),
      s(:casgn, nil, :ATTR_MODIFIERS,
        s(:const, nil, :GENERAL_MODIFIERS)),
      s(:casgn, nil, :CONSTANT_MODIFIERS,
        s(:const, nil, :GENERAL_MODIFIERS)),
      s(:casgn, nil, :METHOD_MODIFIERS,
        s(:send,
          s(:const, nil, :GENERAL_MODIFIERS), :+,
          s(:array,
            s(:str, "arg"),
            s(:str, "args"),
            s(:str, "yield"),
            s(:str, "yields"),
            s(:str, "notnew"),
            s(:str, "not-new"),
            s(:str, "not_new"),
            s(:str, "doc")))),
      s(:defs,
        s(:self), :load_yaml,
        s(:args),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :gem,
                s(:str, "psych")),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NameError)),
                s(:lvasgn, :e),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :e), :name), :==,
                    s(:sym, :gem)), nil,
                  s(:send, nil, :raise))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Gem), :LoadError)), nil, nil), nil)),
          s(:kwbegin,
            s(:ensure,
              s(:rescue,
                s(:send, nil, :require,
                  s(:str, "psych")),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:cbase), :LoadError)), nil, nil), nil),
              s(:send, nil, :require,
                s(:str, "yaml")))))),
      s(:send, nil, :autoload,
        s(:sym, :RDoc),
        s(:str, "rdoc/rdoc")),
      s(:send, nil, :autoload,
        s(:sym, :TestCase),
        s(:str, "rdoc/test_case")),
      s(:send, nil, :autoload,
        s(:sym, :CrossReference),
        s(:str, "rdoc/cross_reference")),
      s(:send, nil, :autoload,
        s(:sym, :ERBIO),
        s(:str, "rdoc/erbio")),
      s(:send, nil, :autoload,
        s(:sym, :ERBPartial),
        s(:str, "rdoc/erb_partial")),
      s(:send, nil, :autoload,
        s(:sym, :Encoding),
        s(:str, "rdoc/encoding")),
      s(:send, nil, :autoload,
        s(:sym, :Generator),
        s(:str, "rdoc/generator")),
      s(:send, nil, :autoload,
        s(:sym, :Options),
        s(:str, "rdoc/options")),
      s(:send, nil, :autoload,
        s(:sym, :Parser),
        s(:str, "rdoc/parser")),
      s(:send, nil, :autoload,
        s(:sym, :Servlet),
        s(:str, "rdoc/servlet")),
      s(:send, nil, :autoload,
        s(:sym, :RI),
        s(:str, "rdoc/ri")),
      s(:send, nil, :autoload,
        s(:sym, :Stats),
        s(:str, "rdoc/stats")),
      s(:send, nil, :autoload,
        s(:sym, :Store),
        s(:str, "rdoc/store")),
      s(:send, nil, :autoload,
        s(:sym, :Task),
        s(:str, "rdoc/task")),
      s(:send, nil, :autoload,
        s(:sym, :Text),
        s(:str, "rdoc/text")),
      s(:send, nil, :autoload,
        s(:sym, :Markdown),
        s(:str, "rdoc/markdown")),
      s(:send, nil, :autoload,
        s(:sym, :Markup),
        s(:str, "rdoc/markup")),
      s(:send, nil, :autoload,
        s(:sym, :RD),
        s(:str, "rdoc/rd")),
      s(:send, nil, :autoload,
        s(:sym, :TomDoc),
        s(:str, "rdoc/tom_doc")),
      s(:send, nil, :autoload,
        s(:sym, :KNOWN_CLASSES),
        s(:str, "rdoc/known_classes")),
      s(:send, nil, :autoload,
        s(:sym, :RubyLex),
        s(:str, "rdoc/ruby_lex")),
      s(:send, nil, :autoload,
        s(:sym, :RubyToken),
        s(:str, "rdoc/ruby_token")),
      s(:send, nil, :autoload,
        s(:sym, :TokenStream),
        s(:str, "rdoc/token_stream")),
      s(:send, nil, :autoload,
        s(:sym, :Comment),
        s(:str, "rdoc/comment")),
      s(:send, nil, :autoload,
        s(:sym, :I18n),
        s(:str, "rdoc/i18n")),
      s(:send, nil, :autoload,
        s(:sym, :CodeObject),
        s(:str, "rdoc/code_object")),
      s(:send, nil, :autoload,
        s(:sym, :Context),
        s(:str, "rdoc/context")),
      s(:send, nil, :autoload,
        s(:sym, :TopLevel),
        s(:str, "rdoc/top_level")),
      s(:send, nil, :autoload,
        s(:sym, :AnonClass),
        s(:str, "rdoc/anon_class")),
      s(:send, nil, :autoload,
        s(:sym, :ClassModule),
        s(:str, "rdoc/class_module")),
      s(:send, nil, :autoload,
        s(:sym, :NormalClass),
        s(:str, "rdoc/normal_class")),
      s(:send, nil, :autoload,
        s(:sym, :NormalModule),
        s(:str, "rdoc/normal_module")),
      s(:send, nil, :autoload,
        s(:sym, :SingleClass),
        s(:str, "rdoc/single_class")),
      s(:send, nil, :autoload,
        s(:sym, :Alias),
        s(:str, "rdoc/alias")),
      s(:send, nil, :autoload,
        s(:sym, :AnyMethod),
        s(:str, "rdoc/any_method")),
      s(:send, nil, :autoload,
        s(:sym, :MethodAttr),
        s(:str, "rdoc/method_attr")),
      s(:send, nil, :autoload,
        s(:sym, :GhostMethod),
        s(:str, "rdoc/ghost_method")),
      s(:send, nil, :autoload,
        s(:sym, :MetaMethod),
        s(:str, "rdoc/meta_method")),
      s(:send, nil, :autoload,
        s(:sym, :Attr),
        s(:str, "rdoc/attr")),
      s(:send, nil, :autoload,
        s(:sym, :Constant),
        s(:str, "rdoc/constant")),
      s(:send, nil, :autoload,
        s(:sym, :Mixin),
        s(:str, "rdoc/mixin")),
      s(:send, nil, :autoload,
        s(:sym, :Include),
        s(:str, "rdoc/include")),
      s(:send, nil, :autoload,
        s(:sym, :Extend),
        s(:str, "rdoc/extend")),
      s(:send, nil, :autoload,
        s(:sym, :Require),
        s(:str, "rdoc/require")))))
