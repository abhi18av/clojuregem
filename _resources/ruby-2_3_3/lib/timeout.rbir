s(:begin,
  s(:module,
    s(:const, nil, :Timeout),
    s(:begin,
      s(:class,
        s(:const, nil, :Error),
        s(:const, nil, :RuntimeError),
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :thread)),
          s(:defs,
            s(:self), :catch,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:lvasgn, :exc,
                s(:send, nil, :new,
                  s(:splat,
                    s(:lvar, :args)))),
              s(:send,
                s(:lvar, :exc), :instance_variable_set,
                s(:sym, :@thread),
                s(:send,
                  s(:const, nil, :Thread), :current)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:cbase), :Kernel), :catch,
                  s(:lvar, :exc)),
                s(:args),
                s(:yield,
                  s(:lvar, :exc))))),
          s(:def, :exception,
            s(:args,
              s(:restarg)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:self), :thread), :==,
                  s(:send,
                    s(:const, nil, :Thread), :current)),
                s(:begin,
                  s(:lvasgn, :bt,
                    s(:send, nil, :caller)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:send, nil, :throw,
                        s(:self),
                        s(:lvar, :bt)),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :UncaughtThrowError)), nil, nil), nil))), nil),
              s(:self))))),
      s(:casgn, nil, :THIS_FILE,
        s(:regexp,
          s(:str, "\\A"),
          s(:begin,
            s(:send,
              s(:const, nil, :Regexp), :quote,
              s(:str, "(string)"))),
          s(:str, ":"),
          s(:regopt, :o))),
      s(:casgn, nil, :CALLER_OFFSET,
        s(:if,
          s(:begin,
            s(:and,
              s(:begin,
                s(:lvasgn, :c,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0)))),
              s(:send,
                s(:const, nil, :THIS_FILE), :=~,
                s(:lvar, :c)))),
          s(:int, 1),
          s(:int, 0))),
      s(:send, nil, :private_constant,
        s(:sym, :THIS_FILE),
        s(:sym, :CALLER_OFFSET)),
      s(:def, :timeout,
        s(:args,
          s(:arg, :sec),
          s(:optarg, :klass,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :sec), :==,
                s(:nil)),
              s(:send,
                s(:lvar, :sec), :zero?)),
            s(:return,
              s(:yield,
                s(:lvar, :sec))), nil),
          s(:lvasgn, :message,
            s(:send,
              s(:str, "execution expired"), :freeze)),
          s(:if,
            s(:gvar, :$DEBUG),
            s(:lvasgn, :from,
              s(:dstr,
                s(:str, "from "),
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller_locations,
                      s(:int, 1),
                      s(:int, 1)), :[],
                    s(:int, 0))))), nil),
          s(:lvasgn, :e,
            s(:const, nil, :Error)),
          s(:lvasgn, :bl,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :exception)),
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:lvasgn, :x,
                      s(:send,
                        s(:const, nil, :Thread), :current)),
                    s(:lvasgn, :y,
                      s(:block,
                        s(:send,
                          s(:const, nil, :Thread), :start),
                        s(:args),
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:const, nil, :Thread), :current), :name=,
                            s(:lvar, :from)),
                          s(:kwbegin,
                            s(:rescue,
                              s(:send, nil, :sleep,
                                s(:lvar, :sec)),
                              s(:resbody, nil,
                                s(:lvasgn, :e),
                                s(:send,
                                  s(:lvar, :x), :raise,
                                  s(:lvar, :e))),
                              s(:send,
                                s(:lvar, :x), :raise,
                                s(:lvar, :exception),
                                s(:lvar, :message))))))),
                    s(:return,
                      s(:yield,
                        s(:lvar, :sec)))),
                  s(:if,
                    s(:lvar, :y),
                    s(:begin,
                      s(:send,
                        s(:lvar, :y), :kill),
                      s(:send,
                        s(:lvar, :y), :join)), nil))))),
          s(:if,
            s(:lvar, :klass),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:lvar, :bl), :call,
                  s(:lvar, :klass)),
                s(:resbody,
                  s(:array,
                    s(:lvar, :klass)),
                  s(:lvasgn, :e),
                  s(:lvasgn, :bt,
                    s(:send,
                      s(:lvar, :e), :backtrace))), nil)),
            s(:lvasgn, :bt,
              s(:send,
                s(:const, nil, :Error), :catch,
                s(:lvar, :message),
                s(:block_pass,
                  s(:lvar, :bl))))),
          s(:lvasgn, :level,
            s(:send,
              s(:send,
                s(:send,
                  s(:send, nil, :caller,
                    s(:const, nil, :CALLER_OFFSET)), :size), :-@), :-,
              s(:int, 2))),
          s(:while,
            s(:send,
              s(:const, nil, :THIS_FILE), :=~,
              s(:send,
                s(:lvar, :bt), :[],
                s(:lvar, :level))),
            s(:send,
              s(:lvar, :bt), :delete_at,
              s(:lvar, :level))),
          s(:send, nil, :raise,
            s(:lvar, :e),
            s(:lvar, :message),
            s(:lvar, :bt)))),
      s(:send, nil, :module_function,
        s(:sym, :timeout)))),
  s(:def, :timeout,
    s(:args,
      s(:restarg, :args),
      s(:blockarg, :block)),
    s(:begin,
      s(:send, nil, :warn,
        s(:dstr,
          s(:begin,
            s(:send,
              s(:send, nil, :caller_locations,
                s(:int, 1),
                s(:int, 1)), :[],
              s(:int, 0))),
          s(:str, ": Object#"),
          s(:begin,
            s(:send, nil, :__method__)),
          s(:str, " is deprecated, use Timeout.timeout instead."))),
      s(:send,
        s(:const, nil, :Timeout), :timeout,
        s(:splat,
          s(:lvar, :args)),
        s(:block_pass,
          s(:lvar, :block))))),
  s(:casgn, nil, :TimeoutError,
    s(:const,
      s(:const, nil, :Timeout), :Error)),
  s(:class,
    s(:const, nil, :Object), nil,
    s(:send, nil, :deprecate_constant,
      s(:sym, :TimeoutError))))
