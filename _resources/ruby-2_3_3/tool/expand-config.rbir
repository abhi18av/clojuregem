s(:begin,
  s(:lvasgn, :config,
    s(:send,
      s(:const, nil, :File), :read,
      s(:lvasgn, :conffile,
        s(:gvar, :$config)))),
  s(:send,
    s(:lvar, :config), :sub!,
    s(:regexp,
      s(:str, "^(\\s*)RUBY_VERSION\\b.*(\\sor\\s*)$"),
      s(:regopt)),
    s(:str, "\\1true\\2")),
  s(:lvasgn, :rbconfig,
    s(:const,
      s(:block,
        s(:send,
          s(:const, nil, :Module), :new),
        s(:args),
        s(:send, nil, :module_eval,
          s(:lvar, :config),
          s(:lvar, :conffile))), :RbConfig)),
  s(:lvasgn, :config,
    s(:if,
      s(:gvar, :$expand),
      s(:const,
        s(:lvar, :rbconfig), :CONFIG),
      s(:const,
        s(:lvar, :rbconfig), :MAKEFILE_CONFIG))),
  s(:or_asgn,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "RUBY_RELEASE_DATE")),
    s(:send,
      s(:send,
        s(:const, nil, :File), :read,
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:str, "../../version.h"),
          s(:str, "(string)"))), :[],
      s(:regexp,
        s(:str, "^\\s*#\\s*define\\s+RUBY_RELEASE_DATE\\s+\"(.*)\""),
        s(:regopt)),
      s(:int, 1))),
  s(:while,
    s(:match_with_lvasgn,
      s(:regexp,
        s(:str, "\\A(\\w+)=(.*)"),
        s(:regopt)),
      s(:send,
        s(:const, nil, :ARGV), :[],
        s(:int, 0))),
    s(:begin,
      s(:send,
        s(:lvar, :config), :[]=,
        s(:nth_ref, 1),
        s(:nth_ref, 2)),
      s(:if,
        s(:const,
          s(:const, nil, :File), :ALT_SEPARATOR),
        s(:send,
          s(:send,
            s(:lvar, :config), :[],
            s(:nth_ref, 1)), :tr!,
          s(:const,
            s(:const, nil, :File), :ALT_SEPARATOR),
          s(:const,
            s(:const, nil, :File), :SEPARATOR)), nil),
      s(:send,
        s(:const, nil, :ARGV), :shift))),
  s(:lvasgn, :re,
    s(:regexp,
      s(:str, "@("),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :config), :keys), :map),
            s(:args,
              s(:arg, :k)),
            s(:send,
              s(:const, nil, :Regexp), :quote,
              s(:lvar, :k))), :join,
          s(:str, "|"))),
      s(:str, ")@"),
      s(:regopt))),
  s(:if,
    s(:gvar, :$output),
    s(:begin,
      s(:lvasgn, :output,
        s(:send, nil, :open,
          s(:gvar, :$output),
          s(:str, "wb"),
          s(:and_asgn,
            s(:gvasgn, :$mode),
            s(:send,
              s(:gvar, :$mode), :oct)))),
      s(:if,
        s(:gvar, :$mode),
        s(:send,
          s(:lvar, :output), :chmod,
          s(:gvar, :$mode)), nil)),
    s(:begin,
      s(:lvasgn, :output,
        s(:const, nil, :STDOUT)),
      s(:send,
        s(:lvar, :output), :binmode))),
  s(:block,
    s(:send,
      s(:const, nil, :ARGF), :each),
    s(:args,
      s(:arg, :line)),
    s(:begin,
      s(:block,
        s(:send,
          s(:lvar, :line), :gsub!,
          s(:regexp,
            s(:str, "@([a-z_]\\w*)@"),
            s(:regopt, :i))),
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:lvar, :config), :fetch,
              s(:nth_ref, 1),
              s(:if,
                s(:gvar, :$expand),
                s(:back_ref, :$&),
                s(:str, "")))),
          s(:if,
            s(:gvar, :$expand), nil,
            s(:lvasgn, :s,
              s(:send,
                s(:lvar, :s), :gsub,
                s(:regexp,
                  s(:str, "\\$\\((.+?)\\)"),
                  s(:regopt)),
                s(:str, "${\\1}")))),
          s(:lvar, :s))),
      s(:send,
        s(:lvar, :output), :puts,
        s(:lvar, :line)))))
