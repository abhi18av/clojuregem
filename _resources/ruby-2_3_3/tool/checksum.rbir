s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "vpath")),
  s(:class,
    s(:const, nil, :Checksum), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :vpath)),
        s(:ivasgn, :@vpath,
          s(:lvar, :vpath))),
      s(:send, nil, :attr_reader,
        s(:sym, :source),
        s(:sym, :target)),
      s(:def, :source=,
        s(:args,
          s(:arg, :source)),
        s(:begin,
          s(:ivasgn, :@source,
            s(:lvar, :source)),
          s(:ivasgn, :@checksum,
            s(:send,
              s(:send,
                s(:const, nil, :File), :basename,
                s(:lvar, :source),
                s(:str, ".*")), :+,
              s(:str, ".chksum"))))),
      s(:def, :target=,
        s(:args,
          s(:arg, :target)),
        s(:ivasgn, :@target,
          s(:lvar, :target))),
      s(:def, :update?,
        s(:args),
        s(:begin,
          s(:lvasgn, :src,
            s(:send,
              s(:ivar, :@vpath), :read,
              s(:ivar, :@source))),
          s(:ivasgn, :@len,
            s(:send,
              s(:lvar, :src), :length)),
          s(:ivasgn, :@sum,
            s(:send,
              s(:lvar, :src), :sum)),
          s(:if,
            s(:send,
              s(:ivar, :@vpath), :search,
              s(:send,
                s(:const, nil, :File), :method,
                s(:sym, :exist?)),
              s(:ivar, :@target)), nil,
            s(:return,
              s(:false))),
          s(:kwbegin,
            s(:rescue,
              s(:lvasgn, :data,
                s(:send,
                  s(:ivar, :@vpath), :read,
                  s(:ivar, :@checksum))),
              s(:resbody, nil, nil,
                s(:return,
                  s(:false))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :data), :[],
                      s(:regexp,
                        s(:str, "src=\"([0-9a-z_.-]+)\","),
                        s(:regopt)),
                      s(:int, 1)), :==,
                    s(:ivar, :@source)), nil,
                  s(:return,
                    s(:false))),
                s(:if,
                  s(:send,
                    s(:ivar, :@len), :==,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :[],
                        s(:regexp,
                          s(:str, "\\blen=(\\d+)"),
                          s(:regopt)),
                        s(:int, 1)), :to_i)), nil,
                  s(:return,
                    s(:false))),
                s(:if,
                  s(:send,
                    s(:ivar, :@sum), :==,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :[],
                        s(:regexp,
                          s(:str, "\\bchecksum=(\\d+)"),
                          s(:regopt)),
                        s(:int, 1)), :to_i)), nil,
                  s(:return,
                    s(:false))),
                s(:return,
                  s(:true))))))),
      s(:def, :update!,
        s(:args),
        s(:block,
          s(:send, nil, :open,
            s(:ivar, :@checksum),
            s(:str, "wb")),
          s(:args,
            s(:arg, :f)),
          s(:send,
            s(:lvar, :f), :puts,
            s(:dstr,
              s(:str, "src=\""),
              s(:begin,
                s(:ivar, :@source)),
              s(:str, "\", len="),
              s(:begin,
                s(:ivar, :@len)),
              s(:str, ", checksum="),
              s(:begin,
                s(:ivar, :@sum)))))),
      s(:def, :update,
        s(:args),
        s(:begin,
          s(:if,
            s(:send, nil, :update?),
            s(:return,
              s(:true)), nil),
          s(:if,
            s(:lvasgn, :ret,
              s(:yield,
                s(:self))),
            s(:send, nil, :update!), nil),
          s(:lvar, :ret))),
      s(:def, :copy,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@vpath), :open,
              s(:lvar, :name),
              s(:str, "rb")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:const, nil, :IO), :copy_stream,
              s(:lvar, :f),
              s(:lvar, :name))),
          s(:true))),
      s(:def, :make,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :system,
          s(:ivar, :@make),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :def_options,
        s(:args,
          s(:optarg, :opt,
            s(:begin,
              s(:send, nil, :require,
                s(:str, "optparse")),
              s(:send,
                s(:const, nil, :OptionParser), :new)))),
        s(:begin,
          s(:send,
            s(:ivar, :@vpath), :def_options,
            s(:lvar, :opt)),
          s(:block,
            s(:send,
              s(:lvar, :opt), :on,
              s(:str, "--make=PATH")),
            s(:args,
              s(:arg, :v)),
            s(:ivasgn, :@make,
              s(:lvar, :v))),
          s(:lvar, :opt))),
      s(:defs,
        s(:self), :update,
        s(:args,
          s(:arg, :argv)),
        s(:begin,
          s(:lvasgn, :k,
            s(:send, nil, :new,
              s(:send,
                s(:const, nil, :VPath), :new))),
          s(:masgn,
            s(:mlhs,
              s(:send,
                s(:lvar, :k), :source=),
              s(:send,
                s(:lvar, :k), :target=),
              s(:splat,
                s(:lvasgn, :argv))),
            s(:send,
              s(:send,
                s(:lvar, :k), :def_options), :parse,
              s(:splat,
                s(:lvar, :argv)))),
          s(:block,
            s(:send,
              s(:lvar, :k), :update),
            s(:args,
              s(:arg, :k)),
            s(:yield,
              s(:lvar, :k),
              s(:splat,
                s(:lvar, :argv)))))))))
