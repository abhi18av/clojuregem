s(:begin,
  s(:send, nil, :require,
    s(:str, "objspace")),
  s(:module,
    s(:const, nil, :ObjectSpace),
    s(:begin,
      s(:defs,
        s(:self), :object_id_of,
        s(:args,
          s(:arg, :obj)),
        s(:if,
          s(:send,
            s(:lvar, :obj), :kind_of?,
            s(:const,
              s(:const, nil, :ObjectSpace), :InternalObjectWrapper)),
          s(:send,
            s(:lvar, :obj), :internal_object_id),
          s(:send,
            s(:lvar, :obj), :object_id))),
      s(:casgn, nil, :T_ICLASS_NAME,
        s(:hash)),
      s(:defs,
        s(:self), :class_name_of,
        s(:args,
          s(:arg, :klass)),
        s(:case,
          s(:lvar, :klass),
          s(:when,
            s(:const, nil, :Class),
            s(:const, nil, :Module),
            s(:or,
              s(:send,
                s(:lvar, :klass), :name),
              s(:send,
                s(:lvar, :klass), :inspect))),
          s(:when,
            s(:const, nil, :InternalObjectWrapper),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :klass), :type), :==,
                s(:sym, :T_ICLASS)),
              s(:dstr,
                s(:str, "#<I:"),
                s(:begin,
                  s(:send, nil, :class_name_of,
                    s(:send,
                      s(:const, nil, :ObjectSpace), :internal_class_of,
                      s(:lvar, :klass)))),
                s(:str, ">")),
              s(:send,
                s(:lvar, :klass), :inspect))),
          s(:send,
            s(:lvar, :klass), :inspect))),
      s(:defs,
        s(:self), :module_refenreces,
        s(:args,
          s(:arg, :klass)),
        s(:begin,
          s(:lvasgn, :h,
            s(:hash)),
          s(:lvasgn, :stack,
            s(:array,
              s(:lvar, :klass))),
          s(:while,
            s(:lvasgn, :klass,
              s(:send,
                s(:lvar, :stack), :pop)),
            s(:begin,
              s(:lvasgn, :obj_id,
                s(:send,
                  s(:const, nil, :ObjectSpace), :object_id_of,
                  s(:lvar, :klass))),
              s(:if,
                s(:send,
                  s(:lvar, :h), :has_key?,
                  s(:lvar, :obj_id)),
                s(:next), nil),
              s(:lvasgn, :cls,
                s(:send,
                  s(:const, nil, :ObjectSpace), :internal_class_of,
                  s(:lvar, :klass))),
              s(:lvasgn, :sup,
                s(:send,
                  s(:const, nil, :ObjectSpace), :internal_super_of,
                  s(:lvar, :klass))),
              s(:if,
                s(:lvar, :cls),
                s(:send,
                  s(:lvar, :stack), :<<,
                  s(:lvar, :cls)), nil),
              s(:if,
                s(:lvar, :sup),
                s(:send,
                  s(:lvar, :stack), :<<,
                  s(:lvar, :sup)), nil),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :obj_id),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:lvar, :klass),
                      s(:lvar, :cls),
                      s(:lvar, :sup)), :map),
                  s(:args,
                    s(:arg, :e)),
                  s(:send,
                    s(:const, nil, :ObjectSpace), :class_name_of,
                    s(:lvar, :e)))))),
          s(:send,
            s(:lvar, :h), :values))),
      s(:defs,
        s(:self), :module_refenreces_dot,
        s(:args,
          s(:arg, :klass)),
        s(:begin,
          s(:lvasgn, :result,
            s(:array)),
          s(:lvasgn, :rank_set,
            s(:hash)),
          s(:send,
            s(:lvar, :result), :<<,
            s(:str, "digraph mod_h {")),
          s(:block,
            s(:send,
              s(:send, nil, :module_refenreces,
                s(:lvar, :klass)), :each),
            s(:args,
              s(:mlhs,
                s(:arg, :m),
                s(:arg, :k),
                s(:arg, :s))),
            s(:begin,
              s(:send,
                s(:lvar, :result), :<<,
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:lvar, :m), :dump)),
                  s(:str, " -> "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :s), :dump)),
                  s(:str, " [label=\"super\"];"))),
              s(:send,
                s(:lvar, :result), :<<,
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:lvar, :m), :dump)),
                  s(:str, " -> "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :k), :dump)),
                  s(:str, " [label=\"klass\"];"))),
              s(:if,
                s(:lvasgn, :rank,
                  s(:send,
                    s(:lvar, :rank_set), :[],
                    s(:lvar, :m))), nil,
                s(:lvasgn, :rank,
                  s(:send,
                    s(:lvar, :rank_set), :[]=,
                    s(:lvar, :m),
                    s(:int, 0)))),
              s(:if,
                s(:send,
                  s(:lvar, :rank_set), :[],
                  s(:lvar, :s)), nil,
                s(:send,
                  s(:lvar, :rank_set), :[]=,
                  s(:lvar, :s),
                  s(:send,
                    s(:lvar, :rank), :+,
                    s(:int, 1)))),
              s(:if,
                s(:send,
                  s(:lvar, :rank_set), :[],
                  s(:lvar, :k)), nil,
                s(:send,
                  s(:lvar, :rank_set), :[]=,
                  s(:lvar, :k),
                  s(:lvar, :rank))))),
          s(:lvasgn, :rs,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :rank_set), :each),
            s(:args,
              s(:arg, :m),
              s(:arg, :r)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :rs), :[],
                  s(:lvar, :r)), nil,
                s(:send,
                  s(:lvar, :rs), :[]=,
                  s(:lvar, :r),
                  s(:array))),
              s(:send,
                s(:send,
                  s(:lvar, :rs), :[],
                  s(:lvar, :r)), :<<,
                s(:lvar, :m)))),
          s(:block,
            s(:send,
              s(:lvar, :rs), :each),
            s(:args,
              s(:arg, :ms)),
            s(:send,
              s(:lvar, :result), :<<,
              s(:dstr,
                s(:str, "{rank = same; "),
                s(:begin,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:lvar, :ms), :map),
                      s(:args,
                        s(:arg, :m)),
                      s(:send,
                        s(:lvar, :m), :dump)), :join,
                    s(:str, ", "))),
                s(:str, "};")))),
          s(:send,
            s(:lvar, :result), :<<,
            s(:str, "}")),
          s(:send,
            s(:lvar, :result), :join,
            s(:str, "\n")))),
      s(:defs,
        s(:self), :module_refenreces_image,
        s(:args,
          s(:arg, :klass),
          s(:arg, :file)),
        s(:begin,
          s(:lvasgn, :dot,
            s(:send, nil, :module_refenreces_dot,
              s(:lvar, :klass))),
          s(:lvasgn, :img,
            s(:nil)),
          s(:block,
            s(:send,
              s(:const, nil, :IO), :popen,
              s(:str, "dot -Tpng"),
              s(:str, "r+")),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:send,
                s(:lvar, :io), :puts,
                s(:lvar, :dot)),
              s(:send,
                s(:lvar, :io), :close_write),
              s(:lvasgn, :img,
                s(:send,
                  s(:lvar, :io), :read)))),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:lvar, :file)),
              s(:str, "w+")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :puts,
              s(:lvar, :img))))))))
