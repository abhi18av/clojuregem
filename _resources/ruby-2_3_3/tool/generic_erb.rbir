s(:begin,
  s(:send, nil, :require,
    s(:str, "erb")),
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send,
    s(:gvar, :$:), :unshift,
    s(:send,
      s(:const, nil, :File), :dirname,
      s(:str, "(string)"))),
  s(:send, nil, :require,
    s(:str, "vpath")),
  s(:lvasgn, :vpath,
    s(:send,
      s(:const, nil, :VPath), :new)),
  s(:lvasgn, :timestamp,
    s(:nil)),
  s(:lvasgn, :output,
    s(:nil)),
  s(:lvasgn, :ifchange,
    s(:nil)),
  s(:lvasgn, :source,
    s(:false)),
  s(:lvasgn, :color,
    s(:nil)),
  s(:lvasgn, :opt,
    s(:block,
      s(:send,
        s(:const, nil, :OptionParser), :new),
      s(:args,
        s(:arg, :o)),
      s(:begin,
        s(:block,
          s(:send,
            s(:lvar, :o), :on,
            s(:str, "-t"),
            s(:str, "--timestamp[=PATH]")),
          s(:args,
            s(:arg, :v)),
          s(:lvasgn, :timestamp,
            s(:or,
              s(:lvar, :v),
              s(:true)))),
        s(:block,
          s(:send,
            s(:lvar, :o), :on,
            s(:str, "-o"),
            s(:str, "--output=PATH")),
          s(:args,
            s(:arg, :v)),
          s(:lvasgn, :output,
            s(:lvar, :v))),
        s(:block,
          s(:send,
            s(:lvar, :o), :on,
            s(:str, "-c"),
            s(:str, "--[no-]if-change")),
          s(:args,
            s(:arg, :v)),
          s(:lvasgn, :ifchange,
            s(:lvar, :v))),
        s(:block,
          s(:send,
            s(:lvar, :o), :on,
            s(:str, "-x"),
            s(:str, "--source")),
          s(:args),
          s(:lvasgn, :source,
            s(:true))),
        s(:block,
          s(:send,
            s(:lvar, :o), :on,
            s(:str, "--color")),
          s(:args),
          s(:lvasgn, :color,
            s(:true))),
        s(:send,
          s(:lvar, :vpath), :def_options,
          s(:lvar, :o)),
        s(:send,
          s(:lvar, :o), :order!,
          s(:const, nil, :ARGV))))),
  s(:lvasgn, :unchanged,
    s(:str, "unchanged")),
  s(:lvasgn, :updated,
    s(:str, "updated")),
  s(:if,
    s(:or,
      s(:lvar, :color),
      s(:begin,
        s(:and,
          s(:send,
            s(:lvar, :color), :==,
            s(:nil)),
          s(:send,
            s(:const, nil, :STDOUT), :tty?)))),
    s(:if,
      s(:begin,
        s(:rescue,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "\\A\\e\\[.*m\\z"),
              s(:regopt)),
            s(:send,
              s(:const, nil, :IO), :popen,
              s(:str, "tput smso"),
              s(:str, "r"),
              s(:hash,
                s(:pair,
                  s(:sym, :err),
                  s(:const,
                    s(:const, nil, :IO), :NULL))),
              s(:block_pass,
                s(:sym, :read)))),
          s(:resbody, nil, nil,
            s(:nil)), nil)),
      s(:begin,
        s(:lvasgn, :beg,
          s(:str, "\e[")),
        s(:lvasgn, :colors,
          s(:if,
            s(:begin,
              s(:lvasgn, :colors,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "TEST_COLORS")))),
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send,
                s(:lvar, :colors), :scan,
                s(:regexp,
                  s(:str, "(\\w+)=([^:\\n]*)"),
                  s(:regopt)))),
            s(:hash))),
        s(:lvasgn, :reset,
          s(:dstr,
            s(:begin,
              s(:lvar, :beg)),
            s(:str, "m"))),
        s(:lvasgn, :unchanged,
          s(:dstr,
            s(:begin,
              s(:lvar, :beg)),
            s(:begin,
              s(:or,
                s(:send,
                  s(:lvar, :colors), :[],
                  s(:str, "pass")),
                s(:str, "32;1"))),
            s(:str, "m"),
            s(:begin,
              s(:lvar, :unchanged)),
            s(:begin,
              s(:lvar, :reset)))),
        s(:lvasgn, :updated,
          s(:dstr,
            s(:begin,
              s(:lvar, :beg)),
            s(:begin,
              s(:or,
                s(:send,
                  s(:lvar, :colors), :[],
                  s(:str, "fail")),
                s(:str, "31;1"))),
            s(:str, "m"),
            s(:begin,
              s(:lvar, :updated)),
            s(:begin,
              s(:lvar, :reset))))), nil), nil),
  s(:or,
    s(:lvasgn, :template,
      s(:send,
        s(:const, nil, :ARGV), :shift)),
    s(:send, nil, :abort,
      s(:send,
        s(:lvar, :opt), :to_s))),
  s(:lvasgn, :erb,
    s(:send,
      s(:const, nil, :ERB), :new,
      s(:send,
        s(:const, nil, :File), :read,
        s(:lvar, :template)),
      s(:nil),
      s(:str, "%-"))),
  s(:send,
    s(:lvar, :erb), :filename=,
    s(:lvar, :template)),
  s(:lvasgn, :result,
    s(:if,
      s(:lvar, :source),
      s(:send,
        s(:lvar, :erb), :src),
      s(:send,
        s(:lvar, :erb), :result))),
  s(:if,
    s(:lvar, :output),
    s(:begin,
      s(:if,
        s(:and,
          s(:lvar, :ifchange),
          s(:send,
            s(:begin,
              s(:rescue,
                s(:block,
                  s(:send,
                    s(:lvar, :vpath), :open,
                    s(:lvar, :output),
                    s(:str, "rb")),
                  s(:args,
                    s(:arg, :f)),
                  s(:send,
                    s(:lvar, :f), :read)),
                s(:resbody, nil, nil,
                  s(:nil)), nil)), :==,
            s(:lvar, :result))),
        s(:send, nil, :puts,
          s(:dstr,
            s(:begin,
              s(:lvar, :output)),
            s(:str, " "),
            s(:begin,
              s(:lvar, :unchanged)))),
        s(:begin,
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :output),
              s(:str, "wb")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :print,
              s(:lvar, :result))),
          s(:send, nil, :puts,
            s(:dstr,
              s(:begin,
                s(:lvar, :output)),
              s(:str, " "),
              s(:begin,
                s(:lvar, :updated)))))),
      s(:if,
        s(:lvar, :timestamp),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :timestamp), :==,
              s(:true)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :dir),
                  s(:lvasgn, :base)),
                s(:send,
                  s(:const, nil, :File), :split,
                  s(:lvar, :output))),
              s(:lvasgn, :timestamp,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :dir),
                  s(:send,
                    s(:str, ".time."), :+,
                    s(:lvar, :base))))), nil),
          s(:send,
            s(:const, nil, :FileUtils), :touch,
            s(:lvar, :timestamp))), nil)),
    s(:send, nil, :print,
      s(:lvar, :result))))
