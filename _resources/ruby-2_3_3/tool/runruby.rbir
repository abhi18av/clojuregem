s(:begin,
  s(:lvasgn, :show,
    s(:false)),
  s(:lvasgn, :precommand,
    s(:array)),
  s(:while,
    s(:lvasgn, :arg,
      s(:send,
        s(:const, nil, :ARGV), :[],
        s(:int, 0))),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :arg), :==,
          s(:str, "--")),
        s(:break,
          s(:send,
            s(:const, nil, :ARGV), :shift)), nil),
      s(:or,
        s(:match_with_lvasgn,
          s(:regexp,
            s(:str, "\\A--([-\\w]+)(?:=(.*))?\\z"),
            s(:regopt)),
          s(:lvar, :arg)),
        s(:break)),
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :arg),
          s(:lvasgn, :value)),
        s(:array,
          s(:nth_ref, 1),
          s(:nth_ref, 2))),
      s(:lvasgn, :re,
        s(:send,
          s(:const, nil, :Regexp), :new,
          s(:send,
            s(:send,
              s(:str, "\\A"), :+,
              s(:send,
                s(:lvar, :arg), :gsub,
                s(:regexp,
                  s(:str, "\\w+\\b"),
                  s(:regopt)),
                s(:str, "\\&\\w*"))), :+,
            s(:str, "\\z")),
          s(:str, "i"))),
      s(:case, nil,
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "srcdir")),
          s(:lvasgn, :srcdir,
            s(:lvar, :value))),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "archdir")),
          s(:lvasgn, :archdir,
            s(:lvar, :value))),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "cpu")),
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :precommand), :<<,
                s(:str, "arch")), :<<,
              s(:str, "-arch")), :<<,
            s(:lvar, :value))),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "extout")),
          s(:lvasgn, :extout,
            s(:lvar, :value))),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "pure")), nil),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "debugger")),
          s(:begin,
            s(:send, nil, :require,
              s(:str, "shellwords")),
            s(:send,
              s(:lvar, :precommand), :concat,
              s(:if,
                s(:lvar, :value),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :value), :==,
                      s(:str, "no")), nil,
                    s(:send,
                      s(:const, nil, :Shellwords), :shellwords,
                      s(:lvar, :value)))),
                s(:array,
                  s(:str, "gdb"),
                  s(:str, "--args")))))),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "precommand")),
          s(:begin,
            s(:send, nil, :require,
              s(:str, "shellwords")),
            s(:send,
              s(:lvar, :precommand), :concat,
              s(:send,
                s(:const, nil, :Shellwords), :shellwords,
                s(:lvar, :value))))),
        s(:when,
          s(:send,
            s(:lvar, :re), :=~,
            s(:str, "show")),
          s(:lvasgn, :show,
            s(:true))),
        s(:break)),
      s(:send,
        s(:const, nil, :ARGV), :shift))),
  s(:if,
    s(:defined?,
      s(:send,
        s(:const, nil, :File), :realpath)), nil,
    s(:defs,
      s(:const, nil, :File), :realpath,
      s(:args,
        s(:restarg, :args)),
      s(:block,
        s(:send,
          s(:const, nil, :Dir), :chdir,
          s(:send, nil, :expand_path,
            s(:splat,
              s(:lvar, :args)))),
        s(:args),
        s(:send,
          s(:const, nil, :Dir), :pwd)))),
  s(:or_asgn,
    s(:lvasgn, :srcdir),
    s(:send,
      s(:const, nil, :File), :realpath,
      s(:str, ".."),
      s(:send,
        s(:const, nil, :File), :dirname,
        s(:str, "(string)")))),
  s(:or_asgn,
    s(:lvasgn, :archdir),
    s(:str, ".")),
  s(:lvasgn, :abs_archdir,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:lvar, :archdir))),
  s(:send,
    s(:gvar, :$:), :unshift,
    s(:lvar, :abs_archdir)),
  s(:lvasgn, :config,
    s(:send,
      s(:const, nil, :File), :read,
      s(:lvasgn, :conffile,
        s(:send,
          s(:const, nil, :File), :join,
          s(:lvar, :abs_archdir),
          s(:str, "rbconfig.rb"))))),
  s(:send,
    s(:lvar, :config), :sub!,
    s(:regexp,
      s(:str, "^(\\s*)RUBY_VERSION\\b.*(\\sor\\s*)\\n.*\\n"),
      s(:regopt)),
    s(:str, "")),
  s(:lvasgn, :config,
    s(:const,
      s(:const,
        s(:block,
          s(:send,
            s(:const, nil, :Module), :new),
          s(:args),
          s(:send, nil, :module_eval,
            s(:lvar, :config),
            s(:lvar, :conffile))), :RbConfig), :CONFIG)),
  s(:lvasgn, :ruby,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :archdir),
      s(:send,
        s(:send,
          s(:lvar, :config), :[],
          s(:str, "RUBY_INSTALL_NAME")), :+,
        s(:send,
          s(:lvar, :config), :[],
          s(:str, "EXEEXT"))))),
  s(:if,
    s(:send,
      s(:const, nil, :File), :exist?,
      s(:lvar, :ruby)), nil,
    s(:send, nil, :abort,
      s(:dstr,
        s(:begin,
          s(:lvar, :ruby)),
        s(:str, " is not found.\nTry `make' first, then `make test', please.\n")))),
  s(:lvasgn, :libs,
    s(:array,
      s(:lvar, :abs_archdir))),
  s(:or_asgn,
    s(:lvasgn, :extout),
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "EXTOUT"))),
  s(:if,
    s(:lvar, :extout),
    s(:begin,
      s(:lvasgn, :abs_extout,
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:lvar, :extout),
          s(:lvar, :abs_archdir))),
      s(:send,
        s(:send,
          s(:lvar, :libs), :<<,
          s(:send,
            s(:const, nil, :File), :expand_path,
            s(:str, "common"),
            s(:lvar, :abs_extout))), :<<,
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:send,
            s(:lvar, :config), :[],
            s(:str, "arch")),
          s(:lvar, :abs_extout)))), nil),
  s(:send,
    s(:lvar, :libs), :<<,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:str, "lib"),
      s(:lvar, :srcdir))),
  s(:send,
    s(:lvar, :config), :[]=,
    s(:str, "bindir"),
    s(:lvar, :abs_archdir)),
  s(:lvasgn, :env,
    s(:hash)),
  s(:lvasgn, :runner,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :abs_archdir),
      s(:dstr,
        s(:str, "ruby-runner"),
        s(:begin,
          s(:send,
            s(:lvar, :config), :[],
            s(:str, "EXEEXT")))))),
  s(:if,
    s(:send,
      s(:const, nil, :File), :exist?,
      s(:lvar, :runner)), nil,
    s(:lvasgn, :runner,
      s(:send,
        s(:const, nil, :File), :expand_path,
        s(:lvar, :ruby)))),
  s(:send,
    s(:lvar, :env), :[]=,
    s(:str, "RUBY"),
    s(:lvar, :runner)),
  s(:send,
    s(:lvar, :env), :[]=,
    s(:str, "PATH"),
    s(:send,
      s(:send,
        s(:array,
          s(:lvar, :abs_archdir),
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "PATH"))), :compact), :join,
      s(:const,
        s(:const, nil, :File), :PATH_SEPARATOR))),
  s(:if,
    s(:lvasgn, :e,
      s(:send,
        s(:const, nil, :ENV), :[],
        s(:str, "RUBYLIB"))),
    s(:op_asgn,
      s(:lvasgn, :libs), :|,
      s(:send,
        s(:lvar, :e), :split,
        s(:const,
          s(:const, nil, :File), :PATH_SEPARATOR))), nil),
  s(:send,
    s(:lvar, :env), :[]=,
    s(:str, "RUBYLIB"),
    s(:send,
      s(:send,
        s(:gvar, :$:), :replace,
        s(:lvar, :libs)), :join,
      s(:const,
        s(:const, nil, :File), :PATH_SEPARATOR))),
  s(:lvasgn, :libruby_so,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :abs_archdir),
      s(:send,
        s(:lvar, :config), :[],
        s(:str, "LIBRUBY_SO")))),
  s(:if,
    s(:send,
      s(:const, nil, :File), :file?,
      s(:lvar, :libruby_so)),
    s(:begin,
      s(:if,
        s(:and,
          s(:lvasgn, :e,
            s(:send,
              s(:lvar, :config), :[],
              s(:str, "LIBPATHENV"))),
          s(:send,
            s(:send,
              s(:lvar, :e), :empty?), :!)),
        s(:send,
          s(:lvar, :env), :[]=,
          s(:lvar, :e),
          s(:send,
            s(:send,
              s(:array,
                s(:lvar, :abs_archdir),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:lvar, :e))), :compact), :join,
            s(:const,
              s(:const, nil, :File), :PATH_SEPARATOR))), nil),
      s(:if,
        s(:lvasgn, :e,
          s(:send,
            s(:lvar, :config), :[],
            s(:str, "PRELOADENV"))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :e), :empty?),
            s(:lvasgn, :e,
              s(:nil)), nil),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "linux"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:or_asgn,
              s(:lvasgn, :e),
              s(:str, "LD_PRELOAD")), nil)), nil),
      s(:if,
        s(:lvar, :e),
        s(:send,
          s(:lvar, :env), :[]=,
          s(:lvar, :e),
          s(:send,
            s(:send,
              s(:array,
                s(:lvar, :libruby_so),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:lvar, :e))), :compact), :join,
            s(:const,
              s(:const, nil, :File), :PATH_SEPARATOR))), nil)), nil),
  s(:send,
    s(:const, nil, :ENV), :update,
    s(:lvar, :env)),
  s(:lvasgn, :cmd,
    s(:array,
      s(:lvar, :ruby))),
  s(:send,
    s(:lvar, :cmd), :concat,
    s(:const, nil, :ARGV)),
  s(:if,
    s(:send,
      s(:lvar, :precommand), :empty?), nil,
    s(:send,
      s(:lvar, :cmd), :unshift,
      s(:splat,
        s(:lvar, :precommand)))),
  s(:send,
    s(:lvar, :cmd), :push,
    s(:hash,
      s(:pair,
        s(:sym, :close_others),
        s(:false)))),
  s(:if,
    s(:lvar, :show),
    s(:begin,
      s(:send, nil, :require,
        s(:str, "shellwords")),
      s(:block,
        s(:send,
          s(:lvar, :env), :each),
        s(:args,
          s(:arg, :k),
          s(:arg, :v)),
        s(:send, nil, :puts,
          s(:dstr,
            s(:begin,
              s(:lvar, :k)),
            s(:str, "="),
            s(:begin,
              s(:lvar, :v))))),
      s(:send, nil, :puts,
        s(:send,
          s(:const, nil, :Shellwords), :join,
          s(:lvar, :cmd)))), nil),
  s(:send, nil, :exec,
    s(:splat,
      s(:lvar, :cmd))))
