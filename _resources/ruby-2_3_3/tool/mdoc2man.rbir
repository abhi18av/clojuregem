s(:begin,
  s(:class,
    s(:const, nil, :Mdoc2Man), nil,
    s(:begin,
      s(:casgn, nil, :ANGLE,
        s(:int, 1)),
      s(:casgn, nil, :OPTION,
        s(:int, 2)),
      s(:casgn, nil, :PAREN,
        s(:int, 3)),
      s(:casgn, nil, :RE_PUNCT,
        s(:regexp,
          s(:str, "^[!\"'),\\./:;>\\?\\]`]$"),
          s(:regopt))),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:ivasgn, :@name,
            s(:ivasgn, :@date,
              s(:ivasgn, :@id,
                s(:nil)))),
          s(:ivasgn, :@refauthors,
            s(:ivasgn, :@reftitle,
              s(:ivasgn, :@refissue,
                s(:ivasgn, :@refdate,
                  s(:ivasgn, :@refopt,
                    s(:nil)))))),
          s(:ivasgn, :@optlist,
            s(:int, 0)),
          s(:ivasgn, :@oldoptlist,
            s(:int, 0)),
          s(:ivasgn, :@nospace,
            s(:int, 0)),
          s(:ivasgn, :@enum,
            s(:int, 0)),
          s(:ivasgn, :@synopsis,
            s(:true)),
          s(:ivasgn, :@reference,
            s(:false)),
          s(:ivasgn, :@ext,
            s(:false)),
          s(:ivasgn, :@extopt,
            s(:false)),
          s(:ivasgn, :@literal,
            s(:false)))),
      s(:def, :mdoc2man,
        s(:args,
          s(:arg, :i),
          s(:arg, :o)),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :i), :each),
            s(:args,
              s(:arg, :line)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:regexp,
                    s(:str, "^\\."),
                    s(:regopt)), :!~,
                  s(:lvar, :line)),
                s(:begin,
                  s(:send,
                    s(:lvar, :o), :print,
                    s(:lvar, :line)),
                  s(:if,
                    s(:ivar, :@literal),
                    s(:send,
                      s(:lvar, :o), :print,
                      s(:str, ".br\n")), nil),
                  s(:next)), nil),
              s(:send,
                s(:lvar, :line), :slice!,
                s(:int, 0),
                s(:int, 1)),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\\\\""),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:next), nil),
              s(:and,
                s(:lvasgn, :line,
                  s(:send, nil, :parse_macro,
                    s(:lvar, :line))),
                s(:send,
                  s(:lvar, :o), :print,
                  s(:lvar, :line))))),
          s(:send, nil, :initialize))),
      s(:def, :parse_macro,
        s(:args,
          s(:arg, :line)),
        s(:begin,
          s(:lvasgn, :words,
            s(:send,
              s(:lvar, :line), :split)),
          s(:lvasgn, :retval,
            s(:str, "")),
          s(:lvasgn, :quote,
            s(:array)),
          s(:lvasgn, :dl,
            s(:false)),
          s(:while,
            s(:lvasgn, :word,
              s(:send,
                s(:lvar, :words), :shift)),
            s(:begin,
              s(:case,
                s(:lvar, :word),
                s(:when,
                  s(:const, nil, :RE_PUNCT),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:lvar, :word), :==,
                        s(:str, ":")),
                      s(:next,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:lvar, :word))), nil),
                    s(:while,
                      s(:lvasgn, :q,
                        s(:send,
                          s(:lvar, :quote), :pop)),
                      s(:case,
                        s(:lvar, :q),
                        s(:when,
                          s(:const, nil, :OPTION),
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:str, "]"))),
                        s(:when,
                          s(:const, nil, :PAREN),
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:str, ")"))),
                        s(:when,
                          s(:const, nil, :ANGLE),
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:str, ">"))), nil)),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:lvar, :word)),
                    s(:next))),
                s(:when,
                  s(:str, "Li"),
                  s(:str, "Pf"),
                  s(:begin,
                    s(:ivasgn, :@nospace,
                      s(:int, 1)),
                    s(:next))),
                s(:when,
                  s(:str, "Xo"),
                  s(:begin,
                    s(:ivasgn, :@ext,
                      s(:true)),
                    s(:if,
                      s(:or,
                        s(:send,
                          s(:lvar, :retval), :empty?),
                        s(:match_with_lvasgn,
                          s(:regexp,
                            s(:str, "[\\n ]\\z"),
                            s(:regopt)),
                          s(:lvar, :retval))), nil,
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, " "))),
                    s(:next))),
                s(:when,
                  s(:str, "Xc"),
                  s(:begin,
                    s(:ivasgn, :@ext,
                      s(:false)),
                    s(:if,
                      s(:ivar, :@extopt), nil,
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, "\n"))),
                    s(:break))),
                s(:when,
                  s(:str, "Bd"),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :words), :[],
                          s(:int, 0)), :==,
                        s(:str, "-literal")),
                      s(:ivasgn, :@literal,
                        s(:true)), nil),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\n")),
                    s(:break))),
                s(:when,
                  s(:str, "Ed"),
                  s(:begin,
                    s(:ivasgn, :@literal,
                      s(:false)),
                    s(:break))),
                s(:when,
                  s(:str, "Ns"),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:ivar, :@nospace), :==,
                        s(:int, 0)),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:send,
                      s(:lvar, :retval), :chomp!,
                      s(:str, " ")),
                    s(:next))),
                s(:when,
                  s(:str, "No"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :chomp!,
                      s(:str, " ")),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:send,
                        s(:lvar, :words), :shift)),
                    s(:next))),
                s(:when,
                  s(:str, "Dq"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "``")),
                    s(:until_post,
                      s(:or,
                        s(:send,
                          s(:lvar, :words), :empty?),
                        s(:send,
                          s(:const, nil, :RE_PUNCT), :=~,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:kwbegin,
                        s(:send,
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:send,
                              s(:lvar, :words), :shift)), :<<,
                          s(:str, " ")))),
                    s(:send,
                      s(:lvar, :retval), :chomp!,
                      s(:str, " ")),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "''")),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:ivar, :@nospace), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:const, nil, :RE_PUNCT), :=~,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:next))),
                s(:when,
                  s(:str, "Sq"),
                  s(:str, "Ql"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, "`")), :<<,
                        s(:send,
                          s(:lvar, :words), :shift)), :<<,
                      s(:str, "'")),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:ivar, :@nospace), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:const, nil, :RE_PUNCT), :=~,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:next))),
                s(:when,
                  s(:str, "Oo"),
                  s(:begin,
                    s(:ivasgn, :@extopt,
                      s(:true)),
                    s(:if,
                      s(:send,
                        s(:ivar, :@nospace), :==,
                        s(:int, 0)),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "[")),
                    s(:next))),
                s(:when,
                  s(:str, "Oc"),
                  s(:begin,
                    s(:ivasgn, :@extopt,
                      s(:false)),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "]")),
                    s(:next))),
                s(:when,
                  s(:str, "Ao"),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:ivar, :@nospace), :==,
                        s(:int, 0)),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "<")),
                    s(:next))),
                s(:when,
                  s(:str, "Ac"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, ">")),
                    s(:next))), nil),
              s(:if,
                s(:and,
                  s(:send,
                    s(:ivar, :@nospace), :==,
                    s(:int, 0)),
                  s(:send,
                    s(:begin,
                      s(:or,
                        s(:send,
                          s(:lvar, :retval), :empty?),
                        s(:match_with_lvasgn,
                          s(:regexp,
                            s(:str, "[\\n ]\\z"),
                            s(:regopt)),
                          s(:lvar, :retval)))), :!)),
                s(:send,
                  s(:lvar, :retval), :<<,
                  s(:str, " ")), nil),
              s(:if,
                s(:send,
                  s(:ivar, :@nospace), :==,
                  s(:int, 1)),
                s(:ivasgn, :@nospace,
                  s(:int, 0)), nil),
              s(:case,
                s(:lvar, :word),
                s(:when,
                  s(:str, "Dd"),
                  s(:begin,
                    s(:ivasgn, :@date,
                      s(:send,
                        s(:lvar, :words), :join,
                        s(:str, " "))),
                    s(:return,
                      s(:nil)))),
                s(:when,
                  s(:str, "Dt"),
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:and,
                          s(:send,
                            s(:send,
                              s(:lvar, :words), :size), :>=,
                            s(:int, 2)),
                          s(:send,
                            s(:send,
                              s(:lvar, :words), :[],
                              s(:int, 1)), :==,
                            s(:str, "\"\""))),
                        s(:match_with_lvasgn,
                          s(:regexp,
                            s(:str, "^(.*)\\(([0-9])\\)$"),
                            s(:regopt)),
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :words), :[]=,
                          s(:int, 0),
                          s(:nth_ref, 1)),
                        s(:send,
                          s(:lvar, :words), :[]=,
                          s(:int, 1),
                          s(:nth_ref, 2))), nil),
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:lvar, :words), :join,
                        s(:str, " "))),
                    s(:return,
                      s(:nil)))),
                s(:when,
                  s(:str, "Os"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:lvar, :retval), :<<,
                                  s(:str, ".TH ")), :<<,
                                s(:ivar, :@id)), :<<,
                              s(:str, " \"")), :<<,
                            s(:ivar, :@date)), :<<,
                          s(:str, "\" \"")), :<<,
                        s(:send,
                          s(:lvar, :words), :join,
                          s(:str, " "))), :<<,
                      s(:str, "\"")),
                    s(:break))),
                s(:when,
                  s(:str, "Sh"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, ".SH")),
                    s(:ivasgn, :@synopsis,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)), :==,
                          s(:str, "SYNOPSIS")))),
                    s(:next))),
                s(:when,
                  s(:str, "Xr"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :retval), :<<,
                                s(:str, "\\fB")), :<<,
                              s(:send,
                                s(:lvar, :words), :shift)), :<<,
                            s(:str, "\\fP(")), :<<,
                          s(:send,
                            s(:lvar, :words), :shift)), :<<,
                        s(:str, ")")), :<<,
                      s(:begin,
                        s(:or,
                          s(:send,
                            s(:lvar, :words), :shift),
                          s(:str, "")))),
                    s(:break))),
                s(:when,
                  s(:str, "Rs"),
                  s(:begin,
                    s(:ivasgn, :@refauthors,
                      s(:array)),
                    s(:ivasgn, :@reftitle,
                      s(:str, "")),
                    s(:ivasgn, :@refissue,
                      s(:str, "")),
                    s(:ivasgn, :@refdate,
                      s(:str, "")),
                    s(:ivasgn, :@refopt,
                      s(:str, "")),
                    s(:ivasgn, :@reference,
                      s(:true)),
                    s(:break))),
                s(:when,
                  s(:str, "Re"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\n")),
                    s(:while,
                      s(:send,
                        s(:send,
                          s(:ivar, :@refauthors), :size), :>,
                        s(:int, 1)),
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:send,
                            s(:ivar, :@refauthors), :shift)), :<<,
                        s(:str, ", "))),
                    s(:if,
                      s(:send,
                        s(:lvar, :retval), :empty?), nil,
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, "and "))),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:send,
                        s(:ivar, :@refauthors), :shift)),
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, ", \\fI")), :<<,
                        s(:ivar, :@reftitle)), :<<,
                      s(:str, "\\fP")),
                    s(:if,
                      s(:send,
                        s(:ivar, :@refissue), :empty?), nil,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, ", ")), :<<,
                        s(:ivar, :@refissue))),
                    s(:if,
                      s(:send,
                        s(:ivar, :@refdate), :empty?), nil,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, ", ")), :<<,
                        s(:ivar, :@refdate))),
                    s(:if,
                      s(:send,
                        s(:ivar, :@refopt), :empty?), nil,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, ", ")), :<<,
                        s(:ivar, :@refopt))),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, ".\n")),
                    s(:ivasgn, :@reference,
                      s(:false)),
                    s(:break))),
                s(:when,
                  s(:str, "An"),
                  s(:next)),
                s(:when,
                  s(:str, "Dl"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, ".nf\n")), :<<,
                      s(:str, "\\&  ")),
                    s(:lvasgn, :dl,
                      s(:true)),
                    s(:next))),
                s(:when,
                  s(:str, "Ux"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "UNIX")),
                    s(:next))),
                s(:when,
                  s(:str, "Bro"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "{")),
                    s(:if,
                      s(:send,
                        s(:ivar, :@nospace), :==,
                        s(:int, 0)),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:next))),
                s(:when,
                  s(:str, "Brc"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :sub!,
                      s(:regexp,
                        s(:str, " *\\z"),
                        s(:regopt)),
                      s(:str, "}")),
                    s(:next))), nil),
              s(:if,
                s(:ivar, :@reference),
                s(:case,
                  s(:lvar, :word),
                  s(:when,
                    s(:str, "%A"),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@refauthors), :unshift,
                        s(:send,
                          s(:lvar, :words), :join,
                          s(:str, " "))),
                      s(:break))),
                  s(:when,
                    s(:str, "%T"),
                    s(:begin,
                      s(:ivasgn, :@reftitle,
                        s(:send,
                          s(:lvar, :words), :join,
                          s(:str, " "))),
                      s(:send,
                        s(:ivar, :@reftitle), :sub!,
                        s(:regexp,
                          s(:str, "^\""),
                          s(:regopt)),
                        s(:str, "")),
                      s(:send,
                        s(:ivar, :@reftitle), :sub!,
                        s(:regexp,
                          s(:str, "\"$"),
                          s(:regopt)),
                        s(:str, "")),
                      s(:break))),
                  s(:when,
                    s(:str, "%N"),
                    s(:begin,
                      s(:ivasgn, :@refissue,
                        s(:send,
                          s(:lvar, :words), :join,
                          s(:str, " "))),
                      s(:break))),
                  s(:when,
                    s(:str, "%D"),
                    s(:begin,
                      s(:ivasgn, :@refdate,
                        s(:send,
                          s(:lvar, :words), :join,
                          s(:str, " "))),
                      s(:break))),
                  s(:when,
                    s(:str, "%O"),
                    s(:begin,
                      s(:ivasgn, :@refopt,
                        s(:send,
                          s(:lvar, :words), :join,
                          s(:str, " "))),
                      s(:break))), nil), nil),
              s(:case,
                s(:lvar, :word),
                s(:when,
                  s(:str, "Nm"),
                  s(:begin,
                    s(:lvasgn, :name,
                      s(:if,
                        s(:send,
                          s(:lvar, :words), :empty?),
                        s(:ivar, :@name),
                        s(:send,
                          s(:lvar, :words), :shift))),
                    s(:or_asgn,
                      s(:ivasgn, :@name),
                      s(:lvar, :name)),
                    s(:if,
                      s(:ivar, :@synopsis),
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, ".br\n")), nil),
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, "\\fB")), :<<,
                        s(:lvar, :name)), :<<,
                      s(:str, "\\fP")),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:ivar, :@nospace), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:const, nil, :RE_PUNCT), :=~,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:next))),
                s(:when,
                  s(:str, "Nd"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\\-")),
                    s(:next))),
                s(:when,
                  s(:str, "Fl"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, "\\fB\\-")), :<<,
                        s(:send,
                          s(:lvar, :words), :shift)), :<<,
                      s(:str, "\\fP")),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:ivar, :@nospace), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:const, nil, :RE_PUNCT), :=~,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:next))),
                s(:when,
                  s(:str, "Ar"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\\fI")),
                    s(:if,
                      s(:send,
                        s(:lvar, :words), :empty?),
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, "file ...\\fP")),
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:send,
                              s(:lvar, :words), :shift)), :<<,
                          s(:str, "\\fP")),
                        s(:while,
                          s(:send,
                            s(:send,
                              s(:lvar, :words), :[],
                              s(:int, 0)), :==,
                            s(:str, "|")),
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :retval), :<<,
                                    s(:str, " ")), :<<,
                                  s(:send,
                                    s(:lvar, :words), :shift)), :<<,
                                s(:str, " \\fI")), :<<,
                              s(:send,
                                s(:lvar, :words), :shift)), :<<,
                            s(:str, "\\fP"))),
                        s(:if,
                          s(:and,
                            s(:send,
                              s(:ivar, :@nospace), :==,
                              s(:int, 0)),
                            s(:send,
                              s(:const, nil, :RE_PUNCT), :=~,
                              s(:send,
                                s(:lvar, :words), :[],
                                s(:int, 0)))),
                          s(:ivasgn, :@nospace,
                            s(:int, 1)), nil),
                        s(:next))))),
                s(:when,
                  s(:str, "Cm"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, "\\fB")), :<<,
                        s(:send,
                          s(:lvar, :words), :shift)), :<<,
                      s(:str, "\\fP")),
                    s(:while,
                      s(:send,
                        s(:const, nil, :RE_PUNCT), :=~,
                        s(:send,
                          s(:lvar, :words), :[],
                          s(:int, 0))),
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:send,
                          s(:lvar, :words), :shift))),
                    s(:next))),
                s(:when,
                  s(:str, "Op"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :quote), :<<,
                      s(:const, nil, :OPTION)),
                    s(:if,
                      s(:send,
                        s(:ivar, :@nospace), :==,
                        s(:int, 0)),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "[")),
                    s(:next))),
                s(:when,
                  s(:str, "Aq"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :quote), :<<,
                      s(:const, nil, :ANGLE)),
                    s(:if,
                      s(:send,
                        s(:ivar, :@nospace), :==,
                        s(:int, 0)),
                      s(:ivasgn, :@nospace,
                        s(:int, 1)), nil),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "<")),
                    s(:next))),
                s(:when,
                  s(:str, "Pp"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\n")),
                    s(:next))),
                s(:when,
                  s(:str, "Ss"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, ".SS")),
                    s(:next))), nil),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :word), :==,
                    s(:str, "Pa")),
                  s(:send,
                    s(:send,
                      s(:lvar, :quote), :include?,
                      s(:const, nil, :OPTION)), :!)),
                s(:begin,
                  s(:send,
                    s(:lvar, :retval), :<<,
                    s(:str, "\\fI")),
                  s(:if,
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "^\\."),
                        s(:regopt)),
                      s(:send,
                        s(:lvar, :words), :[],
                        s(:int, 0))),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\\&")), nil),
                  s(:send,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:send,
                        s(:lvar, :words), :shift)), :<<,
                    s(:str, "\\fP")),
                  s(:while,
                    s(:send,
                      s(:const, nil, :RE_PUNCT), :=~,
                      s(:send,
                        s(:lvar, :words), :[],
                        s(:int, 0))),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:send,
                        s(:lvar, :words), :shift))),
                  s(:next)), nil),
              s(:case,
                s(:lvar, :word),
                s(:when,
                  s(:str, "Dv"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, ".BR")),
                    s(:next))),
                s(:when,
                  s(:str, "Em"),
                  s(:str, "Ev"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, ".IR")),
                    s(:next))),
                s(:when,
                  s(:str, "Pq"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "(")),
                    s(:ivasgn, :@nospace,
                      s(:int, 1)),
                    s(:send,
                      s(:lvar, :quote), :<<,
                      s(:const, nil, :PAREN)),
                    s(:next))),
                s(:when,
                  s(:str, "Sx"),
                  s(:str, "Sy"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, ".B ")), :<<,
                      s(:send,
                        s(:lvar, :words), :join,
                        s(:str, " "))),
                    s(:break))),
                s(:when,
                  s(:str, "Ic"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\\fB")),
                    s(:until,
                      s(:or,
                        s(:send,
                          s(:lvar, :words), :empty?),
                        s(:send,
                          s(:const, nil, :RE_PUNCT), :=~,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)))),
                      s(:begin,
                        s(:case,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)),
                          s(:when,
                            s(:str, "Op"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :words), :shift),
                              s(:send,
                                s(:lvar, :retval), :<<,
                                s(:str, "[")),
                              s(:send,
                                s(:lvar, :words), :push,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :words), :pop), :+,
                                  s(:str, "]"))),
                              s(:next))),
                          s(:when,
                            s(:str, "Aq"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :words), :shift),
                              s(:send,
                                s(:lvar, :retval), :<<,
                                s(:str, "<")),
                              s(:send,
                                s(:lvar, :words), :push,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :words), :pop), :+,
                                  s(:str, ">"))),
                              s(:next))),
                          s(:when,
                            s(:str, "Ar"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :words), :shift),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :retval), :<<,
                                    s(:str, "\\fI")), :<<,
                                  s(:send,
                                    s(:lvar, :words), :shift)), :<<,
                                s(:str, "\\fP")))),
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:send,
                              s(:lvar, :words), :shift))),
                        s(:if,
                          s(:send,
                            s(:ivar, :@nospace), :==,
                            s(:int, 0)),
                          s(:send,
                            s(:lvar, :retval), :<<,
                            s(:str, " ")), nil))),
                    s(:send,
                      s(:lvar, :retval), :chomp!,
                      s(:str, " ")),
                    s(:send,
                      s(:lvar, :retval), :<<,
                      s(:str, "\\fP")),
                    s(:if,
                      s(:send,
                        s(:lvar, :words), :empty?), nil,
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:send,
                          s(:lvar, :words), :shift))),
                    s(:break))),
                s(:when,
                  s(:str, "Bl"),
                  s(:begin,
                    s(:ivasgn, :@oldoptlist,
                      s(:ivar, :@optlist)),
                    s(:case,
                      s(:send,
                        s(:lvar, :words), :[],
                        s(:int, 0)),
                      s(:when,
                        s(:str, "-bullet"),
                        s(:ivasgn, :@optlist,
                          s(:int, 1))),
                      s(:when,
                        s(:str, "-enum"),
                        s(:begin,
                          s(:ivasgn, :@optlist,
                            s(:int, 2)),
                          s(:ivasgn, :@enum,
                            s(:int, 0)))),
                      s(:when,
                        s(:str, "-tag"),
                        s(:ivasgn, :@optlist,
                          s(:int, 3))),
                      s(:when,
                        s(:str, "-item"),
                        s(:ivasgn, :@optlist,
                          s(:int, 4))), nil),
                    s(:break))),
                s(:when,
                  s(:str, "El"),
                  s(:begin,
                    s(:ivasgn, :@optlist,
                      s(:ivar, :@oldoptlist)),
                    s(:next))), nil),
              s(:if,
                s(:and,
                  s(:send,
                    s(:ivar, :@optlist), :!=,
                    s(:int, 0)),
                  s(:send,
                    s(:lvar, :word), :==,
                    s(:str, "It"))),
                s(:begin,
                  s(:case,
                    s(:ivar, :@optlist),
                    s(:when,
                      s(:int, 1),
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, ".IP \\(bu"))),
                    s(:when,
                      s(:int, 2),
                      s(:begin,
                        s(:op_asgn,
                          s(:ivasgn, :@enum), :+,
                          s(:int, 1)),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :retval), :<<,
                              s(:str, ".IP ")), :<<,
                            s(:ivar, :@enum)), :<<,
                          s(:str, ".")))),
                    s(:when,
                      s(:int, 3),
                      s(:begin,
                        s(:send,
                          s(:lvar, :retval), :<<,
                          s(:str, ".TP\n")),
                        s(:case,
                          s(:send,
                            s(:lvar, :words), :[],
                            s(:int, 0)),
                          s(:when,
                            s(:str, "Pa"),
                            s(:str, "Ev"),
                            s(:begin,
                              s(:send,
                                s(:lvar, :words), :shift),
                              s(:send,
                                s(:lvar, :retval), :<<,
                                s(:str, ".B")))), nil))),
                    s(:when,
                      s(:int, 4),
                      s(:send,
                        s(:lvar, :retval), :<<,
                        s(:str, ".IP\n"))), nil),
                  s(:next)), nil),
              s(:case,
                s(:lvar, :word),
                s(:when,
                  s(:str, "Sm"),
                  s(:begin,
                    s(:case,
                      s(:send,
                        s(:lvar, :words), :[],
                        s(:int, 0)),
                      s(:when,
                        s(:str, "off"),
                        s(:ivasgn, :@nospace,
                          s(:int, 2))),
                      s(:when,
                        s(:str, "on"),
                        s(:ivasgn, :@nospace,
                          s(:int, 0))), nil),
                    s(:send,
                      s(:lvar, :words), :shift),
                    s(:next))), nil),
              s(:send,
                s(:lvar, :retval), :<<,
                s(:lvar, :word)))),
          s(:if,
            s(:send,
              s(:lvar, :retval), :==,
              s(:str, ".")),
            s(:return,
              s(:nil)), nil),
          s(:send,
            s(:lvar, :retval), :sub!,
            s(:regexp,
              s(:str, "\\A\\.([^a-zA-Z])"),
              s(:regopt)),
            s(:str, "\\1")),
          s(:while,
            s(:lvasgn, :q,
              s(:send,
                s(:lvar, :quote), :pop)),
            s(:case,
              s(:lvar, :q),
              s(:when,
                s(:const, nil, :OPTION),
                s(:send,
                  s(:lvar, :retval), :<<,
                  s(:str, "]"))),
              s(:when,
                s(:const, nil, :PAREN),
                s(:send,
                  s(:lvar, :retval), :<<,
                  s(:str, ")"))),
              s(:when,
                s(:const, nil, :ANGLE),
                s(:send,
                  s(:lvar, :retval), :<<,
                  s(:str, ">"))), nil)),
          s(:if,
            s(:or,
              s(:or,
                s(:send,
                  s(:ivar, :@ext), :!),
                s(:ivar, :@extopt)),
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, " $"),
                  s(:regopt)),
                s(:lvar, :retval))), nil,
            s(:send,
              s(:lvar, :retval), :<<,
              s(:str, " "))),
          s(:if,
            s(:or,
              s(:or,
                s(:or,
                  s(:ivar, :@ext),
                  s(:ivar, :@extopt)),
                s(:send,
                  s(:lvar, :retval), :empty?)),
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\n\\z"),
                  s(:regopt)),
                s(:lvar, :retval))), nil,
            s(:send,
              s(:lvar, :retval), :<<,
              s(:str, "\n"))),
          s(:if,
            s(:lvar, :dl),
            s(:send,
              s(:lvar, :retval), :<<,
              s(:str, ".fi\n")), nil),
          s(:return,
            s(:lvar, :retval)))),
      s(:defs,
        s(:self), :mdoc2man,
        s(:args,
          s(:arg, :i),
          s(:arg, :o)),
        s(:send,
          s(:send, nil, :new), :mdoc2man,
          s(:lvar, :i),
          s(:lvar, :o))))),
  s(:if,
    s(:send,
      s(:gvar, :$0), :==,
      s(:str, "(string)")),
    s(:send,
      s(:const, nil, :Mdoc2Man), :mdoc2man,
      s(:const, nil, :ARGF),
      s(:const, nil, :STDOUT)), nil))
