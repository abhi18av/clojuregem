s(:begin,
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send,
    s(:const, nil, :ENV), :delete,
    s(:str, "PWD")),
  s(:if,
    s(:send,
      s(:const, nil, :File), :respond_to?,
      s(:sym, :realpath)), nil,
    s(:begin,
      s(:send, nil, :require,
        s(:str, "pathname")),
      s(:defs,
        s(:const, nil, :File), :realpath,
        s(:args,
          s(:arg, :arg)),
        s(:send,
          s(:send,
            s(:send, nil, :Pathname,
              s(:lvar, :arg)), :realpath), :to_s)))),
  s(:defs,
    s(:const, nil, :IO), :pread,
    s(:args,
      s(:restarg, :args)),
    s(:begin,
      s(:if,
        s(:gvar, :$DEBUG),
        s(:send,
          s(:const, nil, :STDERR), :puts,
          s(:splat,
            s(:send,
              s(:lvar, :args), :inspect))), nil),
      s(:block,
        s(:send, nil, :popen,
          s(:splat,
            s(:lvar, :args))),
        s(:args,
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :read)))),
  s(:if,
    s(:send,
      s(:const, nil, :RUBY_VERSION), :<,
      s(:str, "2.0")),
    s(:class,
      s(:const, nil, :IO), nil,
      s(:begin,
        s(:ivasgn, :@orig_popen,
          s(:send, nil, :method,
            s(:sym, :popen))),
        s(:if,
          s(:defined?,
            s(:send, nil, :fork)),
          s(:defs,
            s(:self), :popen,
            s(:args,
              s(:arg, :command),
              s(:restarg, :rest),
              s(:blockarg, :block)),
            s(:begin,
              s(:lvasgn, :opts,
                s(:send,
                  s(:lvar, :rest), :last)),
              s(:if,
                s(:send,
                  s(:lvar, :opts), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:lvasgn, :dir,
                    s(:send,
                      s(:lvar, :opts), :delete,
                      s(:sym, :chdir))),
                  s(:if,
                    s(:send,
                      s(:lvar, :opts), :empty?),
                    s(:send,
                      s(:lvar, :rest), :pop), nil)), nil),
              s(:if,
                s(:lvar, :block),
                s(:block,
                  s(:send,
                    s(:ivar, :@orig_popen), :call,
                    s(:str, "-"),
                    s(:splat,
                      s(:lvar, :rest))),
                  s(:args,
                    s(:arg, :f)),
                  s(:if,
                    s(:lvar, :f),
                    s(:yield,
                      s(:lvar, :f)),
                    s(:begin,
                      s(:if,
                        s(:lvar, :dir),
                        s(:send,
                          s(:const, nil, :Dir), :chdir,
                          s(:lvar, :dir)), nil),
                      s(:send, nil, :exec,
                        s(:splat,
                          s(:lvar, :command)))))),
                s(:begin,
                  s(:lvasgn, :f,
                    s(:send,
                      s(:ivar, :@orig_popen), :call,
                      s(:str, "-"),
                      s(:splat,
                        s(:lvar, :rest)))),
                  s(:if,
                    s(:lvar, :f), nil,
                    s(:begin,
                      s(:if,
                        s(:lvar, :dir),
                        s(:send,
                          s(:const, nil, :Dir), :chdir,
                          s(:lvar, :dir)), nil),
                      s(:send, nil, :exec,
                        s(:splat,
                          s(:lvar, :command))))),
                  s(:lvar, :f))))),
          s(:begin,
            s(:send, nil, :require,
              s(:str, "shellwords")),
            s(:defs,
              s(:self), :popen,
              s(:args,
                s(:arg, :command),
                s(:restarg, :rest),
                s(:blockarg, :block)),
              s(:begin,
                s(:lvasgn, :opts,
                  s(:send,
                    s(:lvar, :rest), :last)),
                s(:if,
                  s(:send,
                    s(:lvar, :opts), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :dir,
                      s(:send,
                        s(:lvar, :opts), :delete,
                        s(:sym, :chdir))),
                    s(:if,
                      s(:send,
                        s(:lvar, :opts), :empty?),
                      s(:send,
                        s(:lvar, :rest), :pop), nil)), nil),
                s(:if,
                  s(:send,
                    s(:const, nil, :Array), :===,
                    s(:lvar, :command)),
                  s(:lvasgn, :command,
                    s(:send,
                      s(:lvar, :command), :shelljoin)), nil),
                s(:block,
                  s(:send,
                    s(:const, nil, :Dir), :chdir,
                    s(:or,
                      s(:lvar, :dir),
                      s(:str, "."))),
                  s(:args),
                  s(:send,
                    s(:ivar, :@orig_popen), :call,
                    s(:lvar, :command),
                    s(:splat,
                      s(:lvar, :rest)),
                    s(:block_pass,
                      s(:lvar, :block)))))))))), nil),
  s(:class,
    s(:const, nil, :VCS), nil,
    s(:begin,
      s(:class,
        s(:const, nil, :NotFoundError),
        s(:const, nil, :RuntimeError), nil),
      s(:cvasgn, :@@dirs,
        s(:array)),
      s(:defs,
        s(:self), :register,
        s(:args,
          s(:arg, :dir)),
        s(:send,
          s(:cvar, :@@dirs), :<<,
          s(:array,
            s(:lvar, :dir),
            s(:self)))),
      s(:defs,
        s(:self), :detect,
        s(:args,
          s(:arg, :path)),
        s(:begin,
          s(:block,
            s(:send,
              s(:cvar, :@@dirs), :each),
            s(:args,
              s(:arg, :dir),
              s(:arg, :klass)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :File), :directory?,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:lvar, :path),
                    s(:lvar, :dir))),
                s(:return,
                  s(:send,
                    s(:lvar, :klass), :new,
                    s(:lvar, :path))), nil),
              s(:lvasgn, :prev,
                s(:lvar, :path)),
              s(:block,
                s(:send, nil, :loop),
                s(:args),
                s(:begin,
                  s(:lvasgn, :curr,
                    s(:send,
                      s(:const, nil, :File), :realpath,
                      s(:send,
                        s(:const, nil, :File), :join,
                        s(:lvar, :prev),
                        s(:str, "..")))),
                  s(:if,
                    s(:send,
                      s(:lvar, :curr), :==,
                      s(:lvar, :prev)),
                    s(:break), nil),
                  s(:if,
                    s(:send,
                      s(:const, nil, :File), :directory?,
                      s(:send,
                        s(:const, nil, :File), :join,
                        s(:lvar, :curr),
                        s(:lvar, :dir))),
                    s(:return,
                      s(:send,
                        s(:lvar, :klass), :new,
                        s(:lvar, :path))), nil),
                  s(:lvasgn, :prev,
                    s(:lvar, :curr)))))),
          s(:send, nil, :raise,
            s(:const,
              s(:const, nil, :VCS), :NotFoundError),
            s(:dstr,
              s(:str, "does not seem to be under a vcs: "),
              s(:begin,
                s(:lvar, :path)))))),
      s(:defs,
        s(:self), :local_path?,
        s(:args,
          s(:arg, :path)),
        s(:or,
          s(:send,
            s(:const, nil, :String), :===,
            s(:lvar, :path)),
          s(:send,
            s(:lvar, :path), :respond_to?,
            s(:sym, :to_path)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :path)),
        s(:begin,
          s(:ivasgn, :@srcdir,
            s(:lvar, :path)),
          s(:super))),
      s(:casgn, nil, :NullDevice,
        s(:if,
          s(:defined?,
            s(:const,
              s(:const, nil, :IO), :NULL)),
          s(:const,
            s(:const, nil, :IO), :NULL),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "/dev/null"),
                s(:str, "NUL"),
                s(:str, "NIL:"),
                s(:str, "NL:")), :find),
            s(:args,
              s(:arg, :dev)),
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :dev))))),
      s(:def, :get_revisions,
        s(:args,
          s(:arg, :path)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:self), :class), :local_path?,
              s(:lvar, :path)),
            s(:lvasgn, :path,
              s(:send, nil, :relative_to,
                s(:lvar, :path))), nil),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :last),
              s(:lvasgn, :changed),
              s(:lvasgn, :modified),
              s(:splat,
                s(:lvasgn, :rest))),
            s(:begin,
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:if,
                      s(:const, nil, :NullDevice),
                      s(:begin,
                        s(:lvasgn, :save_stderr,
                          s(:send,
                            s(:const, nil, :STDERR), :dup)),
                        s(:send,
                          s(:const, nil, :STDERR), :reopen,
                          s(:const, nil, :NullDevice),
                          s(:str, "w"))), nil),
                    s(:send,
                      s(:send,
                        s(:self), :class), :get_revisions,
                      s(:lvar, :path),
                      s(:ivar, :@srcdir))),
                  s(:if,
                    s(:lvar, :save_stderr),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :STDERR), :reopen,
                        s(:lvar, :save_stderr)),
                      s(:send,
                        s(:lvar, :save_stderr), :close)), nil))))),
          s(:or,
            s(:lvar, :last),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :VCS), :NotFoundError),
              s(:str, "last revision not found"))),
          s(:or,
            s(:lvar, :changed),
            s(:send, nil, :raise,
              s(:const,
                s(:const, nil, :VCS), :NotFoundError),
              s(:str, "changed revision not found"))),
          s(:if,
            s(:lvar, :modified),
            s(:begin,
              s(:or,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\A(\\d+)-(\\d+)-(\\d+)\\D(\\d+):(\\d+):(\\d+(?:\\.\\d+)?)\\s*(?:Z|([-+]\\d\\d)(\\d\\d))\\z"),
                    s(:regopt)),
                  s(:lvar, :modified)),
                s(:send, nil, :raise,
                  s(:dstr,
                    s(:str, "unknown time format - "),
                    s(:begin,
                      s(:lvar, :modified))))),
              s(:lvasgn, :match,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:gvar, :$~), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, 6))), :map),
                  s(:args,
                    s(:arg, :x)),
                  s(:send,
                    s(:lvar, :x), :to_i))),
              s(:lvasgn, :off,
                s(:if,
                  s(:nth_ref, 7),
                  s(:dstr,
                    s(:begin,
                      s(:nth_ref, 7)),
                    s(:str, ":"),
                    s(:begin,
                      s(:nth_ref, 8))),
                  s(:str, "+00:00"))),
              s(:send,
                s(:lvar, :match), :<<,
                s(:lvar, :off)),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :modified,
                    s(:send,
                      s(:const, nil, :Time), :new,
                      s(:splat,
                        s(:lvar, :match)))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :ArgumentError)), nil,
                    s(:lvasgn, :modified,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Time), :utc,
                            s(:splat,
                              s(:send,
                                s(:gvar, :$~), :[],
                                s(:irange,
                                  s(:int, 1),
                                  s(:int, 6))))), :+,
                          s(:send,
                            s(:send,
                              s(:nth_ref, 7), :to_i), :*,
                            s(:int, 3600))), :+,
                        s(:send,
                          s(:send,
                            s(:nth_ref, 8), :to_i), :*,
                          s(:int, 60))))), nil))), nil),
          s(:return,
            s(:lvar, :last),
            s(:lvar, :changed),
            s(:lvar, :modified),
            s(:splat,
              s(:lvar, :rest))))),
      s(:def, :modified,
        s(:args,
          s(:arg, :path)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :last),
              s(:lvasgn, :changed),
              s(:lvasgn, :modified),
              s(:splat,
                s(:lvasgn, :rest))),
            s(:send, nil, :get_revisions,
              s(:lvar, :path))),
          s(:lvar, :modified))),
      s(:def, :relative_to,
        s(:args,
          s(:arg, :path)),
        s(:if,
          s(:lvar, :path),
          s(:begin,
            s(:lvasgn, :srcdir,
              s(:send,
                s(:const, nil, :File), :realpath,
                s(:ivar, :@srcdir))),
            s(:lvasgn, :path,
              s(:send,
                s(:const, nil, :File), :realdirpath,
                s(:lvar, :path))),
            s(:lvasgn, :list1,
              s(:send,
                s(:lvar, :srcdir), :split,
                s(:regexp,
                  s(:str, "/"),
                  s(:regopt)))),
            s(:lvasgn, :list2,
              s(:send,
                s(:lvar, :path), :split,
                s(:regexp,
                  s(:str, "/"),
                  s(:regopt)))),
            s(:while,
              s(:and,
                s(:and,
                  s(:send,
                    s(:send,
                      s(:lvar, :list1), :empty?), :!),
                  s(:send,
                    s(:send,
                      s(:lvar, :list2), :empty?), :!)),
                s(:send,
                  s(:send,
                    s(:lvar, :list1), :first), :==,
                  s(:send,
                    s(:lvar, :list2), :first))),
              s(:begin,
                s(:send,
                  s(:lvar, :list1), :shift),
                s(:send,
                  s(:lvar, :list2), :shift))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :list1), :empty?),
                s(:send,
                  s(:lvar, :list2), :empty?)),
              s(:str, "."),
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:array,
                        s(:str, "..")), :*,
                      s(:send,
                        s(:lvar, :list1), :length)), :+,
                    s(:lvar, :list2))), :join,
                s(:str, "/")))),
          s(:str, "."))),
      s(:def, :after_export,
        s(:args,
          s(:arg, :dir)), nil),
      s(:class,
        s(:const, nil, :SVN),
        s(:self),
        s(:begin,
          s(:send, nil, :register,
            s(:str, ".svn")),
          s(:defs,
            s(:self), :get_revisions,
            s(:args,
              s(:arg, :path),
              s(:optarg, :srcdir,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :srcdir),
                  s(:send, nil, :local_path?,
                    s(:lvar, :path))),
                s(:lvasgn, :path,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:lvar, :srcdir),
                    s(:lvar, :path))), nil),
              s(:if,
                s(:lvar, :srcdir),
                s(:begin,
                  s(:lvasgn, :info_xml,
                    s(:send,
                      s(:const, nil, :IO), :pread,
                      s(:array,
                        s(:str, "svn"),
                        s(:str, "info"),
                        s(:str, "--xml"),
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :srcdir)))))),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :info_xml), :[],
                        s(:regexp,
                          s(:str, "<url>(.*)</url>"),
                          s(:regopt)),
                        s(:int, 1)), :==,
                      s(:send,
                        s(:lvar, :path), :to_s)), nil,
                    s(:lvasgn, :info_xml,
                      s(:nil)))), nil),
              s(:or_asgn,
                s(:lvasgn, :info_xml),
                s(:send,
                  s(:const, nil, :IO), :pread,
                  s(:array,
                    s(:str, "svn"),
                    s(:str, "info"),
                    s(:str, "--xml"),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :path)))))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :_),
                  s(:lvasgn, :last),
                  s(:lvasgn, :_),
                  s(:lvasgn, :changed),
                  s(:lvasgn, :_)),
                s(:send,
                  s(:lvar, :info_xml), :split,
                  s(:regexp,
                    s(:str, "revision=\"(\\d+)\""),
                    s(:regopt)))),
              s(:lvasgn, :modified,
                s(:send,
                  s(:lvar, :info_xml), :[],
                  s(:regexp,
                    s(:str, "<date>([^<>]*)"),
                    s(:regopt)),
                  s(:int, 1))),
              s(:lvasgn, :branch,
                s(:send,
                  s(:lvar, :info_xml), :[],
                  s(:regexp,
                    s(:str, "<relative-url>\\^/(?:branches/|tags/)?([^<>]+)"),
                    s(:regopt)),
                  s(:int, 1))),
              s(:array,
                s(:lvar, :last),
                s(:lvar, :changed),
                s(:lvar, :modified),
                s(:lvar, :branch)))),
          s(:defs,
            s(:self), :search_root,
            s(:args,
              s(:arg, :path)),
            s(:begin,
              s(:if,
                s(:send, nil, :local_path?,
                  s(:lvar, :path)), nil,
                s(:return)),
              s(:lvasgn, :parent,
                s(:send,
                  s(:const, nil, :File), :realpath,
                  s(:lvar, :path))),
              s(:until_post,
                s(:send,
                  s(:lvar, :parent), :==,
                  s(:lvar, :wkdir)),
                s(:kwbegin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:const, nil, :File), :dirname,
                      s(:lvasgn, :wkdir,
                        s(:lvar, :parent)))),
                  s(:if,
                    s(:send,
                      s(:const, nil, :File), :directory?,
                      s(:send,
                        s(:lvar, :wkdir), :+,
                        s(:str, "/.svn"))),
                    s(:return,
                      s(:lvar, :wkdir)), nil))))),
          s(:def, :get_info,
            s(:args),
            s(:or_asgn,
              s(:ivasgn, :@info),
              s(:send,
                s(:const, nil, :IO), :pread,
                s(:array,
                  s(:str, "svn"),
                  s(:str, "info"),
                  s(:str, "--xml"),
                  s(:dstr,
                    s(:begin,
                      s(:ivar, :@srcdir))))))),
          s(:def, :url,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@url), nil,
                s(:begin,
                  s(:lvasgn, :url,
                    s(:send,
                      s(:send, nil, :get_info), :[],
                      s(:regexp,
                        s(:str, "<root>(.*)</root>"),
                        s(:regopt)),
                      s(:int, 1))),
                  s(:if,
                    s(:lvar, :url),
                    s(:ivasgn, :@url,
                      s(:send,
                        s(:const, nil, :URI), :parse,
                        s(:send,
                          s(:lvar, :url), :+,
                          s(:str, "/")))), nil))),
              s(:ivar, :@url))),
          s(:def, :wcroot,
            s(:args),
            s(:begin,
              s(:if,
                s(:ivar, :@wcroot), nil,
                s(:begin,
                  s(:lvasgn, :info,
                    s(:send, nil, :get_info)),
                  s(:ivasgn, :@wcroot,
                    s(:send,
                      s(:lvar, :info), :[],
                      s(:regexp,
                        s(:str, "<wcroot-abspath>(.*)</wcroot-abspath>"),
                        s(:regopt)),
                      s(:int, 1))),
                  s(:or_asgn,
                    s(:ivasgn, :@wcroot),
                    s(:send,
                      s(:send,
                        s(:self), :class), :search_root,
                      s(:ivar, :@srcdir))))),
              s(:ivar, :@wcroot))),
          s(:def, :branch,
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:send, nil, :url), :+,
              s(:dstr,
                s(:str, "branches/"),
                s(:begin,
                  s(:lvar, :name))))),
          s(:def, :tag,
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:send, nil, :url), :+,
              s(:dstr,
                s(:str, "tags/"),
                s(:begin,
                  s(:lvar, :name))))),
          s(:def, :trunk,
            s(:args),
            s(:send,
              s(:send, nil, :url), :+,
              s(:str, "trunk"))),
          s(:def, :branch_list,
            s(:args,
              s(:arg, :pat)),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :popen,
                s(:array,
                  s(:str, "svn"),
                  s(:str, "ls"),
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :branch,
                        s(:str, "")))))),
              s(:args,
                s(:arg, :f)),
              s(:block,
                s(:send,
                  s(:lvar, :f), :each),
                s(:args,
                  s(:arg, :line)),
                s(:begin,
                  s(:send,
                    s(:lvar, :line), :chomp!),
                  s(:send,
                    s(:lvar, :line), :chomp!,
                    s(:str, "/")),
                  s(:if,
                    s(:send,
                      s(:const, nil, :File), :fnmatch?,
                      s(:lvar, :pat),
                      s(:lvar, :line)),
                    s(:yield,
                      s(:lvar, :line)), nil))))),
          s(:def, :grep,
            s(:args,
              s(:arg, :pat),
              s(:arg, :tag),
              s(:restarg, :files),
              s(:blockarg, :block)),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:array,
                  s(:str, "svn"),
                  s(:str, "cat"))),
              s(:if,
                s(:lvar, :tag),
                s(:block,
                  s(:send,
                    s(:lvar, :files), :map!),
                  s(:args,
                    s(:arg, :n)),
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:lvar, :tag),
                    s(:lvar, :n))), nil),
              s(:lvasgn, :set,
                s(:send,
                  s(:send,
                    s(:lvar, :block), :binding), :eval,
                  s(:str, "proc {|match| $~ = match}"))),
              s(:block,
                s(:send,
                  s(:const, nil, :IO), :popen,
                  s(:array,
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :files)))),
                s(:args,
                  s(:arg, :f)),
                s(:block,
                  s(:send,
                    s(:lvar, :f), :grep,
                    s(:lvar, :pat)),
                  s(:args,
                    s(:arg, :s)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :set), :[],
                      s(:gvar, :$~)),
                    s(:yield,
                      s(:lvar, :s))))))),
          s(:def, :export,
            s(:args,
              s(:arg, :revision),
              s(:arg, :url),
              s(:arg, :dir),
              s(:optarg, :keep_temp,
                s(:false))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:ivar, :@srcdir),
                  s(:begin,
                    s(:lvasgn, :rootdir,
                      s(:send, nil, :wcroot)))),
                s(:begin,
                  s(:lvasgn, :srcdir,
                    s(:send,
                      s(:const, nil, :File), :realpath,
                      s(:ivar, :@srcdir))),
                  s(:send,
                    s(:lvar, :rootdir), :<<,
                    s(:str, "/")),
                  s(:if,
                    s(:send,
                      s(:lvar, :srcdir), :start_with?,
                      s(:lvar, :rootdir)),
                    s(:begin,
                      s(:lvasgn, :subdir,
                        s(:send,
                          s(:lvar, :srcdir), :[],
                          s(:irange,
                            s(:send,
                              s(:lvar, :rootdir), :size),
                            s(:int, -1)))),
                      s(:if,
                        s(:send,
                          s(:lvar, :subdir), :empty?),
                        s(:lvasgn, :subdir,
                          s(:nil)), nil),
                      s(:send,
                        s(:const, nil, :FileUtils), :mkdir_p,
                        s(:lvasgn, :svndir,
                          s(:send,
                            s(:lvar, :dir), :+,
                            s(:str, "/.svn")))),
                      s(:send,
                        s(:const, nil, :FileUtils), :ln_s,
                        s(:send,
                          s(:const, nil, :Dir), :glob,
                          s(:send,
                            s(:lvar, :rootdir), :+,
                            s(:str, "/.svn/*"))),
                        s(:lvar, :svndir)),
                      s(:or,
                        s(:send, nil, :system,
                          s(:str, "svn"),
                          s(:str, "-q"),
                          s(:str, "revert"),
                          s(:str, "-R"),
                          s(:or,
                            s(:lvar, :subdir),
                            s(:str, ".")),
                          s(:hash,
                            s(:pair,
                              s(:sym, :chdir),
                              s(:lvar, :dir)))),
                        s(:return,
                          s(:false))),
                      s(:if,
                        s(:lvar, :keep_temp), nil,
                        s(:send,
                          s(:const, nil, :FileUtils), :rm_rf,
                          s(:lvar, :svndir))),
                      s(:if,
                        s(:lvar, :subdir),
                        s(:begin,
                          s(:lvasgn, :tmpdir,
                            s(:send,
                              s(:const, nil, :Dir), :mktmpdir,
                              s(:str, "tmp-co."),
                              s(:dstr,
                                s(:begin,
                                  s(:lvar, :dir)),
                                s(:str, "/"),
                                s(:begin,
                                  s(:lvar, :subdir))))),
                          s(:send,
                            s(:const, nil, :File), :rename,
                            s(:lvar, :tmpdir),
                            s(:lvasgn, :tmpdir,
                              s(:dstr,
                                s(:begin,
                                  s(:lvar, :dir)),
                                s(:str, "/"),
                                s(:begin,
                                  s(:send,
                                    s(:const, nil, :File), :basename,
                                    s(:lvar, :tmpdir)))))),
                          s(:send,
                            s(:const, nil, :FileUtils), :mv,
                            s(:send,
                              s(:const, nil, :Dir), :glob,
                              s(:dstr,
                                s(:begin,
                                  s(:lvar, :dir)),
                                s(:str, "/"),
                                s(:begin,
                                  s(:lvar, :subdir)),
                                s(:str, "/{.[^.]*,..?*,*}"))),
                            s(:lvar, :tmpdir)),
                          s(:until_post,
                            s(:send,
                              s(:begin,
                                s(:lvasgn, :subdir,
                                  s(:send,
                                    s(:const, nil, :File), :dirname,
                                    s(:lvar, :subdir)))), :==,
                              s(:str, ".")),
                            s(:kwbegin,
                              s(:send,
                                s(:const, nil, :Dir), :rmdir,
                                s(:dstr,
                                  s(:begin,
                                    s(:lvar, :dir)),
                                  s(:str, "/"),
                                  s(:begin,
                                    s(:lvar, :subdir)))))),
                          s(:send,
                            s(:const, nil, :FileUtils), :mv,
                            s(:send,
                              s(:const, nil, :Dir), :glob,
                              s(:dstr,
                                s(:begin,
                                  s(:lvar, :tmpdir)),
                                s(:str, "/"),
                                s(:begin,
                                  s(:lvar, :subdir)),
                                s(:str, "/{.[^.]*,..?*,*}"))),
                            s(:lvar, :dir)),
                          s(:send,
                            s(:const, nil, :Dir), :rmdir,
                            s(:lvar, :tmpdir))), nil),
                      s(:return,
                        s(:true))), nil)), nil),
              s(:block,
                s(:send,
                  s(:const, nil, :IO), :popen,
                  s(:array,
                    s(:str, "svn"),
                    s(:str, "export"),
                    s(:str, "-r"),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :revision))),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :url))),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :dir))))),
                s(:args,
                  s(:arg, :pipe)),
                s(:block,
                  s(:send,
                    s(:lvar, :pipe), :each),
                  s(:args,
                    s(:arg, :line)),
                  s(:or,
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "^A"),
                        s(:regopt)),
                      s(:lvar, :line)),
                    s(:yield,
                      s(:lvar, :line))))),
              s(:send,
                s(:gvar, :$?), :success?))),
          s(:def, :after_export,
            s(:args,
              s(:arg, :dir)),
            s(:send,
              s(:const, nil, :FileUtils), :rm_rf,
              s(:send,
                s(:lvar, :dir), :+,
                s(:str, "/.svn")))))),
      s(:class,
        s(:const, nil, :GIT),
        s(:self),
        s(:begin,
          s(:send, nil, :register,
            s(:str, ".git")),
          s(:defs,
            s(:self), :get_revisions,
            s(:args,
              s(:arg, :path),
              s(:optarg, :srcdir,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :gitcmd,
                s(:array,
                  s(:str, "git"))),
              s(:lvasgn, :logcmd,
                s(:send,
                  s(:lvar, :gitcmd), :+,
                  s(:array,
                    s(:str, "log"),
                    s(:str, "-n1"),
                    s(:str, "--date=iso")))),
              s(:send,
                s(:lvar, :logcmd), :<<,
                s(:str, "--grep=^ *git-svn-id: .*@[0-9][0-9]*")),
              s(:lvasgn, :idpat,
                s(:regexp,
                  s(:str, "git-svn-id: .*?@(\\d+) \\S+\\Z"),
                  s(:regopt))),
              s(:lvasgn, :log,
                s(:send,
                  s(:const, nil, :IO), :pread,
                  s(:lvar, :logcmd),
                  s(:hash,
                    s(:pair,
                      s(:sym, :chdir),
                      s(:lvar, :srcdir))))),
              s(:lvasgn, :commit,
                s(:send,
                  s(:lvar, :log), :[],
                  s(:regexp,
                    s(:str, "\\Acommit (\\w+)"),
                    s(:regopt)),
                  s(:int, 1))),
              s(:lvasgn, :last,
                s(:send,
                  s(:lvar, :log), :[],
                  s(:lvar, :idpat),
                  s(:int, 1))),
              s(:if,
                s(:lvar, :path),
                s(:begin,
                  s(:lvasgn, :cmd,
                    s(:lvar, :logcmd)),
                  s(:if,
                    s(:send,
                      s(:lvar, :path), :==,
                      s(:str, ".")), nil,
                    s(:op_asgn,
                      s(:lvasgn, :cmd), :+,
                      s(:array,
                        s(:lvar, :path)))),
                  s(:lvasgn, :log,
                    s(:send,
                      s(:const, nil, :IO), :pread,
                      s(:lvar, :cmd),
                      s(:hash,
                        s(:pair,
                          s(:sym, :chdir),
                          s(:lvar, :srcdir))))),
                  s(:lvasgn, :changed,
                    s(:send,
                      s(:lvar, :log), :[],
                      s(:lvar, :idpat),
                      s(:int, 1)))),
                s(:lvasgn, :changed,
                  s(:lvar, :last))),
              s(:lvasgn, :modified,
                s(:send,
                  s(:lvar, :log), :[],
                  s(:regexp,
                    s(:str, "^Date:\\s+(.*)"),
                    s(:regopt)),
                  s(:int, 1))),
              s(:lvasgn, :branch,
                s(:send,
                  s(:send,
                    s(:const, nil, :IO), :pread,
                    s(:send,
                      s(:lvar, :gitcmd), :+,
                      s(:array,
                        s(:str, "symbolic-ref"),
                        s(:str, "HEAD"))),
                    s(:hash,
                      s(:pair,
                        s(:sym, :chdir),
                        s(:lvar, :srcdir)))), :[],
                  s(:regexp,
                    s(:str, "\\A(?:refs/heads/)?(.+)"),
                    s(:regopt)),
                  s(:int, 1))),
              s(:lvasgn, :title,
                s(:send,
                  s(:const, nil, :IO), :pread,
                  s(:send,
                    s(:lvar, :gitcmd), :+,
                    s(:array,
                      s(:str, "log"),
                      s(:str, "--format=%s"),
                      s(:str, "-n1"),
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :commit)),
                        s(:str, "..HEAD")))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :chdir),
                      s(:lvar, :srcdir))))),
              s(:if,
                s(:send,
                  s(:lvar, :title), :empty?),
                s(:lvasgn, :title,
                  s(:nil)), nil),
              s(:array,
                s(:lvar, :last),
                s(:lvar, :changed),
                s(:lvar, :modified),
                s(:lvar, :branch),
                s(:lvar, :title)))),
          s(:casgn, nil, :Branch,
            s(:send,
              s(:const, nil, :Struct), :new,
              s(:sym, :to_str))),
          s(:def, :branch,
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:const, nil, :Branch), :new,
              s(:lvar, :name))),
          s(:alias,
            s(:sym, :tag),
            s(:sym, :branch)),
          s(:def, :trunk,
            s(:args),
            s(:send, nil, :branch,
              s(:str, "trunk"))),
          s(:def, :stable,
            s(:args),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:array,
                  s(:str, "git"),
                  s(:str, "for-each-ref"),
                  s(:str, "--format=%(refname:short)"),
                  s(:str, "refs/heads/ruby_[0-9]*"))),
              s(:send, nil, :branch,
                s(:send,
                  s(:send,
                    s(:const, nil, :IO), :pread,
                    s(:lvar, :cmd),
                    s(:hash,
                      s(:pair,
                        s(:sym, :chdir),
                        s(:send, nil, :srcdir)))), :[],
                  s(:regexp,
                    s(:str, ".*^(ruby_\\d+_\\d+)$"),
                    s(:regopt, :m)),
                  s(:int, 1))))),
          s(:def, :branch_list,
            s(:args,
              s(:arg, :pat)),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:array,
                  s(:str, "git"),
                  s(:str, "for-each-ref"),
                  s(:str, "--format=%(refname:short)"),
                  s(:dstr,
                    s(:str, "refs/heads/"),
                    s(:begin,
                      s(:lvar, :pat))))),
              s(:block,
                s(:send,
                  s(:const, nil, :IO), :popen,
                  s(:lvar, :cmd),
                  s(:hash,
                    s(:pair,
                      s(:sym, :chdir),
                      s(:send, nil, :srcdir)))),
                s(:args,
                  s(:arg, :f)),
                s(:block,
                  s(:send,
                    s(:lvar, :f), :each),
                  s(:args,
                    s(:arg, :line)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :line), :chomp!),
                    s(:yield,
                      s(:lvar, :line))))))),
          s(:def, :grep,
            s(:args,
              s(:arg, :pat),
              s(:arg, :tag),
              s(:restarg, :files),
              s(:blockarg, :block)),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:array,
                  s(:str, "git"),
                  s(:str, "grep"),
                  s(:str, "-h"),
                  s(:str, "--perl-regexp"),
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :tag))),
                  s(:str, "--"))),
              s(:lvasgn, :set,
                s(:send,
                  s(:send,
                    s(:lvar, :block), :binding), :eval,
                  s(:str, "proc {|match| $~ = match}"))),
              s(:block,
                s(:send,
                  s(:const, nil, :IO), :popen,
                  s(:array,
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :files))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :chdir),
                      s(:send, nil, :srcdir)))),
                s(:args,
                  s(:arg, :f)),
                s(:block,
                  s(:send,
                    s(:lvar, :f), :grep,
                    s(:lvar, :pat)),
                  s(:args,
                    s(:arg, :s)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :set), :[],
                      s(:gvar, :$~)),
                    s(:yield,
                      s(:lvar, :s))))))),
          s(:def, :export,
            s(:args,
              s(:arg, :revision),
              s(:arg, :url),
              s(:arg, :dir),
              s(:optarg, :keep_temp,
                s(:false))),
            s(:begin,
              s(:lvasgn, :ret,
                s(:send, nil, :system,
                  s(:str, "git"),
                  s(:str, "clone"),
                  s(:str, "-s"),
                  s(:begin,
                    s(:or,
                      s(:ivar, :@srcdir),
                      s(:str, "."))),
                  s(:str, "-b"),
                  s(:lvar, :url),
                  s(:lvar, :dir))),
              s(:if,
                s(:and,
                  s(:lvar, :ret),
                  s(:send,
                    s(:lvar, :keep_temp), :!)),
                s(:send,
                  s(:const, nil, :FileUtils), :rm_rf,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :dir)),
                    s(:str, "/.git"))), nil),
              s(:lvar, :ret))),
          s(:def, :after_export,
            s(:args,
              s(:arg, :dir)),
            s(:send,
              s(:const, nil, :FileUtils), :rm_rf,
              s(:dstr,
                s(:begin,
                  s(:lvar, :dir)),
                s(:str, "/.git")))))))))
