s(:begin,
  s(:send, nil, :require,
    s(:str, "open-uri")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "net/https")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil,
        s(:lvasgn, :https,
          s(:str, "http"))),
      s(:begin,
        s(:lvasgn, :https,
          s(:str, "https")),
        s(:class,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :X509), :Store), nil,
          s(:begin,
            s(:alias,
              s(:sym, :orig_add_file),
              s(:sym, :add_file)),
            s(:def, :add_file,
              s(:args,
                s(:arg, :pems)),
              s(:block,
                s(:send,
                  s(:send, nil, :Array,
                    s(:lvar, :pems)), :each),
                s(:args,
                  s(:arg, :pem)),
                s(:if,
                  s(:send,
                    s(:const, nil, :File), :directory?,
                    s(:lvar, :pem)),
                  s(:send, nil, :add_path,
                    s(:lvar, :pem)),
                  s(:send, nil, :orig_add_file,
                    s(:lvar, :pem))))))),
        s(:sclass,
          s(:const, nil, :File),
          s(:begin,
            s(:alias,
              s(:sym, :orig_directory?),
              s(:sym, :directory?)),
            s(:defs,
              s(:const, nil, :File), :directory?,
              s(:args,
                s(:arg, :files)),
              s(:if,
                s(:send,
                  s(:lvar, :files), :is_a?,
                  s(:const, nil, :Array)),
                s(:false),
                s(:send, nil, :orig_directory?,
                  s(:lvar, :files))))))))),
  s(:class,
    s(:const, nil, :Downloader), nil,
    s(:begin,
      s(:defs,
        s(:self), :https,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:cvar, :@@https), :!=,
              s(:str, "https")),
            s(:send, nil, :warn,
              s(:str, "*** using http instead of https ***")), nil),
          s(:cvar, :@@https))),
      s(:class,
        s(:const, nil, :GNU),
        s(:self),
        s(:defs,
          s(:self), :download,
          s(:args,
            s(:arg, :name),
            s(:restarg, :rest)),
          s(:if,
            s(:send,
              s(:send, nil, :https), :==,
              s(:str, "https")),
            s(:super,
              s(:dstr,
                s(:str, "https://raw.githubusercontent.com/gcc-mirror/gcc/master/"),
                s(:begin,
                  s(:lvar, :name))),
              s(:lvar, :name),
              s(:splat,
                s(:lvar, :rest))),
            s(:super,
              s(:dstr,
                s(:str, "http://repo.or.cz/official-gcc.git/blob_plain/HEAD:/"),
                s(:begin,
                  s(:lvar, :name))),
              s(:lvar, :name),
              s(:splat,
                s(:lvar, :rest)))))),
      s(:class,
        s(:const, nil, :RubyGems),
        s(:self),
        s(:begin,
          s(:defs,
            s(:self), :download,
            s(:args,
              s(:arg, :name),
              s(:optarg, :dir,
                s(:nil)),
              s(:optarg, :ims,
                s(:true)),
              s(:optarg, :options,
                s(:hash))),
            s(:begin,
              s(:send, nil, :require,
                s(:str, "rubygems")),
              s(:send,
                s(:lvar, :options), :[]=,
                s(:sym, :ssl_ca_cert),
                s(:send,
                  s(:const, nil, :Dir), :glob,
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:str, "../lib/rubygems/ssl_certs/*.pem"),
                    s(:send,
                      s(:const, nil, :File), :dirname,
                      s(:str, "(string)"))))),
              s(:lvasgn, :file,
                s(:send, nil, :under,
                  s(:lvar, :dir),
                  s(:lvar, :name))),
              s(:or,
                s(:super,
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :https)),
                    s(:str, "://rubygems.org/downloads/"),
                    s(:begin,
                      s(:lvar, :name))),
                  s(:lvar, :file),
                  s(:nil),
                  s(:lvar, :ims),
                  s(:lvar, :options)),
                s(:return,
                  s(:false))))),
          s(:defs,
            s(:self), :verify,
            s(:args,
              s(:arg, :pkg)), nil))),
      s(:casgn, nil, :Gems,
        s(:const, nil, :RubyGems)),
      s(:class,
        s(:const, nil, :Unicode),
        s(:self),
        s(:defs,
          s(:self), :download,
          s(:args,
            s(:arg, :name),
            s(:restarg, :rest)),
          s(:super,
            s(:dstr,
              s(:str, "http://www.unicode.org/Public/"),
              s(:begin,
                s(:lvar, :name))),
            s(:lvar, :name),
            s(:splat,
              s(:lvar, :rest))))),
      s(:defs,
        s(:self), :mode_for,
        s(:args,
          s(:arg, :data)),
        s(:if,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "\\A#!"),
              s(:regopt)),
            s(:lvar, :data)),
          s(:int, 493),
          s(:int, 420))),
      s(:defs,
        s(:self), :http_options,
        s(:args,
          s(:arg, :file),
          s(:arg, :since)),
        s(:begin,
          s(:lvasgn, :options,
            s(:hash)),
          s(:if,
            s(:lvar, :since),
            s(:begin,
              s(:case,
                s(:lvar, :since),
                s(:when,
                  s(:true),
                  s(:lvasgn, :since,
                    s(:begin,
                      s(:rescue,
                        s(:send,
                          s(:send,
                            s(:const, nil, :File), :mtime,
                            s(:lvar, :file)), :httpdate),
                        s(:resbody, nil, nil,
                          s(:nil)), nil)))),
                s(:when,
                  s(:const, nil, :Time),
                  s(:lvasgn, :since,
                    s(:send,
                      s(:lvar, :since), :httpdate))), nil),
              s(:if,
                s(:lvar, :since),
                s(:send,
                  s(:lvar, :options), :[]=,
                  s(:str, "If-Modified-Since"),
                  s(:lvar, :since)), nil)), nil),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:str, "Accept-Encoding"),
            s(:str, "*")),
          s(:lvar, :options))),
      s(:defs,
        s(:self), :download,
        s(:args,
          s(:arg, :url),
          s(:arg, :name),
          s(:optarg, :dir,
            s(:nil)),
          s(:optarg, :ims,
            s(:true)),
          s(:optarg, :options,
            s(:hash))),
        s(:rescue,
          s(:begin,
            s(:lvasgn, :file,
              s(:send, nil, :under,
                s(:lvar, :dir),
                s(:lvar, :name))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :ims), :nil?),
                s(:send,
                  s(:const, nil, :File), :exist?,
                  s(:lvar, :file))),
              s(:begin,
                s(:if,
                  s(:gvar, :$VERBOSE),
                  s(:begin,
                    s(:send,
                      s(:gvar, :$stdout), :puts,
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, " already exists"))),
                    s(:send,
                      s(:gvar, :$stdout), :flush)), nil),
                s(:return,
                  s(:true))), nil),
            s(:lvasgn, :url,
              s(:send, nil, :URI,
                s(:lvar, :url))),
            s(:if,
              s(:gvar, :$VERBOSE),
              s(:begin,
                s(:send,
                  s(:gvar, :$stdout), :print,
                  s(:dstr,
                    s(:str, "downloading "),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, " ... "))),
                s(:send,
                  s(:gvar, :$stdout), :flush)), nil),
            s(:kwbegin,
              s(:rescue,
                s(:lvasgn, :data,
                  s(:send,
                    s(:lvar, :url), :read,
                    s(:send,
                      s(:lvar, :options), :merge,
                      s(:send, nil, :http_options,
                        s(:lvar, :file),
                        s(:if,
                          s(:send,
                            s(:lvar, :ims), :nil?),
                          s(:true),
                          s(:lvar, :ims)))))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :OpenURI), :HTTPError)),
                  s(:lvasgn, :http_error),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :http_error), :message), :=~,
                        s(:regexp,
                          s(:str, "^304 "),
                          s(:regopt))),
                      s(:begin,
                        s(:if,
                          s(:gvar, :$VERBOSE),
                          s(:begin,
                            s(:send,
                              s(:gvar, :$stdout), :puts,
                              s(:str, "not modified")),
                            s(:send,
                              s(:gvar, :$stdout), :flush)), nil),
                        s(:return,
                          s(:true))), nil),
                    s(:send, nil, :raise))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :Timeout), :Error)), nil,
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:lvar, :ims), :nil?),
                        s(:send,
                          s(:const, nil, :File), :exist?,
                          s(:lvar, :file))),
                      s(:begin,
                        s(:send, nil, :puts,
                          s(:dstr,
                            s(:str, "Request for "),
                            s(:begin,
                              s(:lvar, :url)),
                            s(:str, " timed out, using old version."))),
                        s(:return,
                          s(:true))), nil),
                    s(:send, nil, :raise))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :SocketError)), nil,
                  s(:begin,
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:lvar, :ims), :nil?),
                        s(:send,
                          s(:const, nil, :File), :exist?,
                          s(:lvar, :file))),
                      s(:begin,
                        s(:send, nil, :puts,
                          s(:dstr,
                            s(:str, "No network connection, unable to download "),
                            s(:begin,
                              s(:lvar, :url)),
                            s(:str, ", using old version."))),
                        s(:return,
                          s(:true))), nil),
                    s(:send, nil, :raise))), nil)),
            s(:lvasgn, :mtime,
              s(:nil)),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :file),
                s(:str, "wb"),
                s(:int, 384)),
              s(:args,
                s(:arg, :f)),
              s(:begin,
                s(:send,
                  s(:lvar, :f), :write,
                  s(:lvar, :data)),
                s(:send,
                  s(:lvar, :f), :chmod,
                  s(:send, nil, :mode_for,
                    s(:lvar, :data))),
                s(:lvasgn, :mtime,
                  s(:send,
                    s(:send,
                      s(:lvar, :data), :meta), :[],
                    s(:str, "last-modified"))))),
            s(:if,
              s(:lvar, :mtime),
              s(:begin,
                s(:lvasgn, :mtime,
                  s(:send,
                    s(:const, nil, :Time), :httpdate,
                    s(:lvar, :mtime))),
                s(:send,
                  s(:const, nil, :File), :utime,
                  s(:lvar, :mtime),
                  s(:lvar, :mtime),
                  s(:lvar, :file))), nil),
            s(:if,
              s(:gvar, :$VERBOSE),
              s(:begin,
                s(:send,
                  s(:gvar, :$stdout), :puts,
                  s(:str, "done")),
                s(:send,
                  s(:gvar, :$stdout), :flush)), nil),
            s(:true)),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:send, nil, :raise,
              s(:dstr,
                s(:str, "failed to download "),
                s(:begin,
                  s(:lvar, :name)),
                s(:str, "\n"),
                s(:begin,
                  s(:send,
                    s(:lvar, :e), :message)),
                s(:str, ": "),
                s(:begin,
                  s(:lvar, :url))))), nil)),
      s(:defs,
        s(:self), :under,
        s(:args,
          s(:arg, :dir),
          s(:arg, :name)),
        s(:if,
          s(:lvar, :dir),
          s(:send,
            s(:const, nil, :File), :join,
            s(:lvar, :dir),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:lvar, :name))),
          s(:lvar, :name))))),
  s(:send,
    s(:const, nil, :Downloader), :class_variable_set,
    s(:sym, :@@https),
    s(:send,
      s(:lvar, :https), :freeze)),
  s(:if,
    s(:send,
      s(:gvar, :$0), :==,
      s(:str, "(string)")),
    s(:begin,
      s(:lvasgn, :ims,
        s(:true)),
      s(:until,
        s(:send,
          s(:const, nil, :ARGV), :empty?),
        s(:begin,
          s(:case,
            s(:send,
              s(:const, nil, :ARGV), :[],
              s(:int, 0)),
            s(:when,
              s(:str, "-d"),
              s(:begin,
                s(:lvasgn, :destdir,
                  s(:send,
                    s(:const, nil, :ARGV), :[],
                    s(:int, 1))),
                s(:send,
                  s(:const, nil, :ARGV), :shift))),
            s(:when,
              s(:str, "-e"),
              s(:lvasgn, :ims,
                s(:nil))),
            s(:when,
              s(:str, "-a"),
              s(:lvasgn, :ims,
                s(:true))),
            s(:when,
              s(:regexp,
                s(:str, "\\A-"),
                s(:regopt)),
              s(:send, nil, :abort,
                s(:dstr,
                  s(:begin,
                    s(:gvar, :$0)),
                  s(:str, ": unknown option "),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :ARGV), :[],
                      s(:int, 0)))))),
            s(:break)),
          s(:send,
            s(:const, nil, :ARGV), :shift))),
      s(:if,
        s(:send,
          s(:const, nil, :ARGV), :empty?), nil,
        s(:lvasgn, :dl,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Downloader), :constants), :find),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :ARGV), :[],
                  s(:int, 0)), :casecmp,
                s(:send,
                  s(:lvar, :name), :to_s)), :==,
              s(:int, 0))))),
      s(:gvasgn, :$VERBOSE,
        s(:true)),
      s(:if,
        s(:lvar, :dl),
        s(:begin,
          s(:lvasgn, :dl,
            s(:send,
              s(:const, nil, :Downloader), :const_get,
              s(:lvar, :dl))),
          s(:send,
            s(:const, nil, :ARGV), :shift),
          s(:block,
            s(:send,
              s(:const, nil, :ARGV), :each),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:lvar, :dl), :download,
              s(:lvar, :name),
              s(:lvar, :destdir),
              s(:lvar, :ims)))),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :ARGV), :size), :==,
              s(:int, 2)), nil,
            s(:send, nil, :abort,
              s(:dstr,
                s(:str, "usage: "),
                s(:begin,
                  s(:gvar, :$0)),
                s(:str, " url name")))),
          s(:send,
            s(:const, nil, :Downloader), :download,
            s(:send,
              s(:const, nil, :ARGV), :[],
              s(:int, 0)),
            s(:send,
              s(:const, nil, :ARGV), :[],
              s(:int, 1)),
            s(:lvar, :destdir),
            s(:lvar, :ims))))), nil))
