s(:class,
  s(:const, nil, :VPath), nil,
  s(:begin,
    s(:send, nil, :attr_accessor,
      s(:sym, :separator)),
    s(:def, :initialize,
      s(:args,
        s(:restarg, :list)),
      s(:begin,
        s(:ivasgn, :@list,
          s(:lvar, :list)),
        s(:ivasgn, :@additional,
          s(:array)),
        s(:ivasgn, :@separator,
          s(:nil)))),
    s(:def, :inspect,
      s(:args),
      s(:send,
        s(:send, nil, :list), :inspect)),
    s(:def, :search,
      s(:args,
        s(:arg, :meth),
        s(:arg, :base),
        s(:restarg, :rest)),
      s(:kwbegin,
        s(:rescue,
          s(:send,
            s(:lvar, :meth), :call,
            s(:lvar, :base),
            s(:splat,
              s(:lvar, :rest))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :ENOENT)),
            s(:lvasgn, :error),
            s(:begin,
              s(:block,
                s(:send,
                  s(:send, nil, :list), :each),
                s(:args,
                  s(:arg, :dir)),
                s(:rescue,
                  s(:return,
                    s(:send,
                      s(:lvar, :meth), :call,
                      s(:send,
                        s(:const, nil, :File), :join,
                        s(:lvar, :dir),
                        s(:lvar, :base)),
                      s(:splat,
                        s(:lvar, :rest)))),
                  s(:resbody, nil, nil,
                    s(:nil)), nil)),
              s(:send, nil, :raise,
                s(:lvar, :error)))), nil))),
    s(:def, :process,
      s(:args,
        s(:restarg, :args),
        s(:blockarg, :block)),
      s(:send, nil, :search,
        s(:send,
          s(:const, nil, :File), :method,
          s(:send, nil, :__callee__)),
        s(:splat,
          s(:lvar, :args)),
        s(:block_pass,
          s(:lvar, :block)))),
    s(:alias,
      s(:sym, :stat),
      s(:sym, :process)),
    s(:alias,
      s(:sym, :lstat),
      s(:sym, :process)),
    s(:def, :open,
      s(:args,
        s(:restarg, :args)),
      s(:begin,
        s(:lvasgn, :f,
          s(:send, nil, :search,
            s(:send,
              s(:const, nil, :File), :method,
              s(:sym, :open)),
            s(:splat,
              s(:lvar, :args)))),
        s(:if,
          s(:send, nil, :block_given?),
          s(:kwbegin,
            s(:ensure,
              s(:yield,
                s(:lvar, :f)),
              s(:if,
                s(:send,
                  s(:lvar, :f), :closed?), nil,
                s(:send,
                  s(:lvar, :f), :close)))),
          s(:lvar, :f)))),
    s(:def, :read,
      s(:args,
        s(:restarg, :args)),
      s(:block,
        s(:send, nil, :open,
          s(:splat,
            s(:lvar, :args))),
        s(:args,
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :read))),
    s(:def, :foreach,
      s(:args,
        s(:arg, :file),
        s(:restarg, :args),
        s(:blockarg, :block)),
      s(:block,
        s(:send, nil, :open,
          s(:lvar, :file)),
        s(:args,
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :each,
          s(:splat,
            s(:lvar, :args)),
          s(:block_pass,
            s(:lvar, :block))))),
    s(:def, :def_options,
      s(:args,
        s(:arg, :opt)),
      s(:begin,
        s(:block,
          s(:send,
            s(:lvar, :opt), :on,
            s(:str, "-I"),
            s(:str, "--srcdir=DIR"),
            s(:str, "add a directory to search path")),
          s(:args,
            s(:arg, :dir)),
          s(:send,
            s(:ivar, :@additional), :<<,
            s(:lvar, :dir))),
        s(:block,
          s(:send,
            s(:lvar, :opt), :on,
            s(:str, "-L"),
            s(:str, "--vpath=PATH LIST"),
            s(:str, "add directories to search path")),
          s(:args,
            s(:arg, :dirs)),
          s(:send,
            s(:ivar, :@additional), :<<,
            s(:array,
              s(:lvar, :dirs)))),
        s(:block,
          s(:send,
            s(:lvar, :opt), :on,
            s(:str, "--path-separator=SEP"),
            s(:regexp,
              s(:str, "\\A(?:\\W\\z|\\.(\\W).+)"),
              s(:regopt)),
            s(:str, "separator for vpath")),
          s(:args,
            s(:arg, :sep),
            s(:arg, :vsep)),
          s(:ivasgn, :@separator,
            s(:or,
              s(:lvar, :vsep),
              s(:lvar, :sep)))))),
    s(:def, :list,
      s(:args),
      s(:begin,
        s(:block,
          s(:send,
            s(:ivar, :@additional), :reject!),
          s(:args,
            s(:arg, :dirs)),
          s(:begin,
            s(:case,
              s(:lvar, :dirs),
              s(:when,
                s(:const, nil, :String),
                s(:send,
                  s(:ivar, :@list), :<<,
                  s(:lvar, :dirs))),
              s(:when,
                s(:const, nil, :Array),
                s(:begin,
                  s(:if,
                    s(:ivar, :@separator), nil,
                    s(:send, nil, :raise,
                      s(:str, "--path-separator option is needed for vpath list"))),
                  s(:send,
                    s(:ivar, :@list), :concat,
                    s(:send,
                      s(:send,
                        s(:lvar, :dirs), :[],
                        s(:int, 0)), :split,
                      s(:ivar, :@separator))))), nil),
            s(:true))),
        s(:ivar, :@list))),
    s(:def, :strip,
      s(:args,
        s(:arg, :path)),
      s(:begin,
        s(:lvasgn, :prefix,
          s(:block,
            s(:send,
              s(:send, nil, :list), :map),
            s(:args,
              s(:arg, :dir)),
            s(:send,
              s(:const, nil, :Regexp), :quote,
              s(:lvar, :dir)))),
        s(:send,
          s(:lvar, :path), :sub,
          s(:regexp,
            s(:str, "\\A"),
            s(:begin,
              s(:send,
                s(:lvar, :prefix), :join,
                s(:str, "|"))),
            s(:str, "(?:/|\\z)"),
            s(:regopt)),
          s(:str, ""))))))
