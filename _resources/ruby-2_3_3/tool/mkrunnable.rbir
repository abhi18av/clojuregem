s(:begin,
  s(:send, nil, :require,
    s(:str, "./rbconfig")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:case,
    s(:send,
      s(:const, nil, :ARGV), :[],
      s(:int, 0)),
    s(:when,
      s(:str, "-n"),
      s(:begin,
        s(:send,
          s(:const, nil, :ARGV), :shift),
        s(:send, nil, :include,
          s(:const,
            s(:const, nil, :FileUtils), :DryRun)))),
    s(:when,
      s(:str, "-v"),
      s(:begin,
        s(:send,
          s(:const, nil, :ARGV), :shift),
        s(:send, nil, :include,
          s(:const,
            s(:const, nil, :FileUtils), :Verbose)))),
    s(:send, nil, :include,
      s(:const, nil, :FileUtils))),
  s(:module,
    s(:const, nil, :Mswin),
    s(:begin,
      s(:def, :ln_safe,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:restarg, :opt)),
        s(:begin,
          s(:lvasgn, :cmd,
            s(:array,
              s(:str, "mklink"),
              s(:send,
                s(:lvar, :dest), :tr,
                s(:str, "/"),
                s(:str, "\\")),
              s(:send,
                s(:lvar, :src), :tr,
                s(:str, "/"),
                s(:str, "\\")))),
          s(:send,
            s(:lvar, :cmd), :[]=,
            s(:int, 1),
            s(:int, 0),
            s(:lvar, :opt)),
          s(:if,
            s(:send, nil, :system,
              s(:str, "cmd"),
              s(:str, "/c"),
              s(:splat,
                s(:lvar, :cmd))),
            s(:return), nil),
          s(:send, nil, :puts,
            s(:send,
              s(:lvar, :cmd), :join,
              s(:str, " "))))),
      s(:def, :ln_dir_safe,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest)),
        s(:send, nil, :ln_safe,
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:str, "/d"))))),
  s(:def, :ln_safe,
    s(:args,
      s(:arg, :src),
      s(:arg, :dest)),
    s(:begin,
      s(:lvasgn, :link,
        s(:rescue,
          s(:send,
            s(:const, nil, :File), :readlink,
            s(:lvar, :dest)),
          s(:resbody, nil, nil,
            s(:nil)), nil)),
      s(:if,
        s(:send,
          s(:lvar, :link), :==,
          s(:lvar, :src)),
        s(:return), nil),
      s(:send, nil, :ln_sf,
        s(:lvar, :src),
        s(:lvar, :dest)))),
  s(:alias,
    s(:sym, :ln_dir_safe),
    s(:sym, :ln_safe)),
  s(:if,
    s(:match_with_lvasgn,
      s(:regexp,
        s(:str, "mingw|mswin"),
        s(:regopt)),
      s(:begin,
        s(:or,
          s(:const, nil, :CROSS_COMPILING),
          s(:const, nil, :RUBY_PLATFORM)))),
    s(:send, nil, :extend,
      s(:const, nil, :Mswin)), nil),
  s(:def, :clean_path,
    s(:args,
      s(:arg, :path)),
    s(:begin,
      s(:lvasgn, :path,
        s(:send,
          s(:send,
            s(:dstr,
              s(:begin,
                s(:lvar, :path)),
              s(:str, "/")), :gsub,
            s(:regexp,
              s(:str, "(\\A|/)(?:\\./)+"),
              s(:regopt)),
            s(:str, "\\1")), :tr_s,
          s(:str, "/"),
          s(:str, "/"))),
      s(:while,
        s(:send,
          s(:lvar, :path), :sub!,
          s(:regexp,
            s(:str, "[^/]+/\\.\\./"),
            s(:regopt)),
          s(:str, "")),
        s(:nil)),
      s(:lvar, :path))),
  s(:def, :relative_path_from,
    s(:args,
      s(:arg, :path),
      s(:arg, :base)),
    s(:begin,
      s(:lvasgn, :path,
        s(:send, nil, :clean_path,
          s(:lvar, :path))),
      s(:lvasgn, :base,
        s(:send, nil, :clean_path,
          s(:lvar, :base))),
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :path),
          s(:lvasgn, :base)),
        s(:block,
          s(:send,
            s(:array,
              s(:lvar, :path),
              s(:lvar, :base)), :map),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :split,
            s(:str, "/")))),
      s(:until,
        s(:or,
          s(:or,
            s(:send,
              s(:lvar, :path), :empty?),
            s(:send,
              s(:lvar, :base), :empty?)),
          s(:send,
            s(:send,
              s(:lvar, :path), :[],
              s(:int, 0)), :!=,
            s(:send,
              s(:lvar, :base), :[],
              s(:int, 0)))),
        s(:begin,
          s(:send,
            s(:lvar, :path), :shift),
          s(:send,
            s(:lvar, :base), :shift))),
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :path),
          s(:lvasgn, :base)),
        s(:block,
          s(:send,
            s(:array,
              s(:lvar, :path),
              s(:lvar, :base)), :map),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :join,
            s(:str, "/")))),
      s(:if,
        s(:match_with_lvasgn,
          s(:regexp,
            s(:str, "(\\A|/)\\.\\./"),
            s(:regopt)),
          s(:lvar, :base)),
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:lvar, :path)),
        s(:begin,
          s(:send,
            s(:lvar, :base), :gsub!,
            s(:regexp,
              s(:str, "[^/]+"),
              s(:regopt)),
            s(:str, "..")),
          s(:send,
            s(:const, nil, :File), :join,
            s(:lvar, :base),
            s(:lvar, :path)))))),
  s(:def, :ln_relative,
    s(:args,
      s(:arg, :src),
      s(:arg, :dest)),
    s(:begin,
      s(:if,
        s(:send,
          s(:const, nil, :File), :identical?,
          s(:lvar, :src),
          s(:lvar, :dest)),
        s(:return), nil),
      s(:lvasgn, :parent,
        s(:send,
          s(:const, nil, :File), :dirname,
          s(:lvar, :dest))),
      s(:or,
        s(:send,
          s(:const, nil, :File), :directory?,
          s(:lvar, :parent)),
        s(:send, nil, :mkdir_p,
          s(:lvar, :parent))),
      s(:send, nil, :ln_safe,
        s(:send, nil, :relative_path_from,
          s(:lvar, :src),
          s(:lvar, :parent)),
        s(:lvar, :dest)))),
  s(:def, :ln_dir_relative,
    s(:args,
      s(:arg, :src),
      s(:arg, :dest)),
    s(:begin,
      s(:if,
        s(:send,
          s(:const, nil, :File), :identical?,
          s(:lvar, :src),
          s(:lvar, :dest)),
        s(:return), nil),
      s(:lvasgn, :parent,
        s(:send,
          s(:const, nil, :File), :dirname,
          s(:lvar, :dest))),
      s(:or,
        s(:send,
          s(:const, nil, :File), :directory?,
          s(:lvar, :parent)),
        s(:send, nil, :mkdir_p,
          s(:lvar, :parent))),
      s(:send, nil, :ln_dir_safe,
        s(:send, nil, :relative_path_from,
          s(:lvar, :src),
          s(:lvar, :parent)),
        s(:lvar, :dest)))),
  s(:lvasgn, :config,
    s(:send,
      s(:const,
        s(:const, nil, :RbConfig), :MAKEFILE_CONFIG), :merge,
      s(:hash,
        s(:pair,
          s(:str, "prefix"),
          s(:str, ".")),
        s(:pair,
          s(:str, "exec_prefix"),
          s(:str, "."))))),
  s(:block,
    s(:send,
      s(:lvar, :config), :each_value),
    s(:args,
      s(:arg, :s)),
    s(:send,
      s(:const, nil, :RbConfig), :expand,
      s(:lvar, :s),
      s(:lvar, :config))),
  s(:lvasgn, :srcdir,
    s(:or_asgn,
      s(:send,
        s(:lvar, :config), :[],
        s(:str, "srcdir")),
      s(:send,
        s(:const, nil, :File), :dirname,
        s(:str, "(string)")))),
  s(:lvasgn, :top_srcdir,
    s(:or_asgn,
      s(:send,
        s(:lvar, :config), :[],
        s(:str, "top_srcdir")),
      s(:send,
        s(:const, nil, :File), :dirname,
        s(:lvar, :srcdir)))),
  s(:lvasgn, :extout,
    s(:or,
      s(:send,
        s(:const, nil, :ARGV), :[],
        s(:int, 0)),
      s(:send,
        s(:lvar, :config), :[],
        s(:str, "EXTOUT")))),
  s(:lvasgn, :version,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "ruby_version"))),
  s(:lvasgn, :arch,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "arch"))),
  s(:lvasgn, :bindir,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "bindir"))),
  s(:lvasgn, :libdirname,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "libdirname"))),
  s(:lvasgn, :libdir,
    s(:send,
      s(:lvar, :config), :[],
      s(:or,
        s(:lvar, :libdirname),
        s(:str, "libdir")))),
  s(:lvasgn, :vendordir,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "vendordir"))),
  s(:lvasgn, :rubylibdir,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "rubylibdir"))),
  s(:lvasgn, :rubyarchdir,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "rubyarchdir"))),
  s(:lvasgn, :archdir,
    s(:dstr,
      s(:begin,
        s(:lvar, :extout)),
      s(:str, "/"),
      s(:begin,
        s(:lvar, :arch)))),
  s(:lvasgn, :rubylibs,
    s(:array,
      s(:lvar, :vendordir),
      s(:lvar, :rubylibdir),
      s(:lvar, :rubyarchdir))),
  s(:block,
    s(:send,
      s(:send,
        s(:array,
          s(:lvar, :bindir),
          s(:lvar, :libdir),
          s(:lvar, :archdir)), :uniq), :each),
    s(:args,
      s(:arg, :dir)),
    s(:or,
      s(:send,
        s(:const, nil, :File), :directory?,
        s(:lvar, :dir)),
      s(:send, nil, :mkdir_p,
        s(:lvar, :dir)))),
  s(:lvasgn, :exeext,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "EXEEXT"))),
  s(:lvasgn, :ruby_install_name,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "ruby_install_name"))),
  s(:lvasgn, :rubyw_install_name,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "rubyw_install_name"))),
  s(:lvasgn, :goruby_install_name,
    s(:send,
      s(:str, "go"), :+,
      s(:lvar, :ruby_install_name))),
  s(:block,
    s(:send,
      s(:array,
        s(:lvar, :ruby_install_name),
        s(:lvar, :rubyw_install_name),
        s(:lvar, :goruby_install_name)), :map),
    s(:args,
      s(:arg, :ruby)),
    s(:begin,
      s(:op_asgn,
        s(:lvasgn, :ruby), :+,
        s(:lvar, :exeext)),
      s(:if,
        s(:and,
          s(:lvar, :ruby),
          s(:send,
            s(:send,
              s(:lvar, :ruby), :empty?), :!)),
        s(:send, nil, :ln_relative,
          s(:lvar, :ruby),
          s(:dstr,
            s(:begin,
              s(:lvar, :bindir)),
            s(:str, "/"),
            s(:begin,
              s(:lvar, :ruby)))), nil))),
  s(:lvasgn, :so,
    s(:send,
      s(:lvar, :config), :[],
      s(:str, "LIBRUBY_SO"))),
  s(:lvasgn, :libruby,
    s(:array,
      s(:send,
        s(:lvar, :config), :[],
        s(:str, "LIBRUBY_A")))),
  s(:if,
    s(:match_with_lvasgn,
      s(:regexp,
        s(:str, "\\.dll\\z"),
        s(:regopt, :i)),
      s(:lvar, :so)),
    s(:send, nil, :ln_relative,
      s(:lvar, :so),
      s(:dstr,
        s(:begin,
          s(:lvar, :bindir)),
        s(:str, "/"),
        s(:begin,
          s(:lvar, :so)))),
    s(:send,
      s(:lvar, :libruby), :<<,
      s(:lvar, :so))),
  s(:send,
    s(:lvar, :libruby), :concat,
    s(:send,
      s(:send,
        s(:lvar, :config), :[],
        s(:str, "LIBRUBY_ALIASES")), :split)),
  s(:block,
    s(:send,
      s(:lvar, :libruby), :each),
    s(:args,
      s(:arg, :lib)),
    s(:send, nil, :ln_relative,
      s(:lvar, :lib),
      s(:dstr,
        s(:begin,
          s(:lvar, :libdir)),
        s(:str, "/"),
        s(:begin,
          s(:lvar, :lib))))),
  s(:send, nil, :ln_dir_relative,
    s(:dstr,
      s(:begin,
        s(:lvar, :extout)),
      s(:str, "/common")),
    s(:lvar, :rubylibdir)),
  s(:send,
    s(:lvar, :rubyarchdir), :sub!,
    s(:lvar, :rubylibdir),
    s(:dstr,
      s(:begin,
        s(:lvar, :extout)),
      s(:str, "/common"))),
  s(:send,
    s(:lvar, :vendordir), :sub!,
    s(:lvar, :rubylibdir),
    s(:dstr,
      s(:begin,
        s(:lvar, :extout)),
      s(:str, "/common"))),
  s(:send, nil, :ln_dir_relative,
    s(:lvar, :archdir),
    s(:lvar, :rubyarchdir)),
  s(:send,
    s(:lvar, :vendordir), :sub!,
    s(:lvar, :rubyarchdir),
    s(:lvar, :archdir)),
  s(:send, nil, :ln_dir_relative,
    s(:dstr,
      s(:begin,
        s(:lvar, :top_srcdir)),
      s(:str, "/lib")),
    s(:lvar, :vendordir)),
  s(:send, nil, :ln_relative,
    s(:str, "rbconfig.rb"),
    s(:dstr,
      s(:begin,
        s(:lvar, :archdir)),
      s(:str, "/rbconfig.rb"))))
