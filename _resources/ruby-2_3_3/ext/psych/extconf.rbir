s(:begin,
  s(:send, nil, :require,
    s(:str, "mkmf")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send, nil, :dir_config,
    s(:str, "libyaml")),
  s(:if,
    s(:or,
      s(:send, nil, :enable_config,
        s(:str, "bundled-libyaml"),
        s(:false)),
      s(:send,
        s(:begin,
          s(:and,
            s(:send, nil, :find_header,
              s(:str, "yaml.h")),
            s(:send, nil, :find_library,
              s(:str, "yaml"),
              s(:str, "yaml_get_version")))), :!)),
    s(:begin,
      s(:send,
        s(:gvar, :$VPATH), :<<,
        s(:str, "$(srcdir)/yaml")),
      s(:send,
        s(:gvar, :$INCFLAGS), :<<,
        s(:str, " -I$(srcdir)/yaml")),
      s(:gvasgn, :$srcs,
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Dir), :glob,
              s(:dstr,
                s(:begin,
                  s(:gvar, :$srcdir)),
                s(:str, "/{,yaml/}*.c"))), :map),
          s(:args,
            s(:arg, :n)),
          s(:send,
            s(:const, nil, :File), :basename,
            s(:lvar, :n)))),
      s(:if,
        s(:send, nil, :have_macro,
          s(:str, "_WIN32")),
        s(:send,
          s(:gvar, :$CPPFLAGS), :<<,
          s(:str, " -DYAML_DECLARE_STATIC -DHAVE_CONFIG_H")), nil),
      s(:send, nil, :have_header,
        s(:str, "dlfcn.h")),
      s(:send, nil, :have_header,
        s(:str, "inttypes.h")),
      s(:send, nil, :have_header,
        s(:str, "memory.h")),
      s(:send, nil, :have_header,
        s(:str, "stdint.h")),
      s(:send, nil, :have_header,
        s(:str, "stdlib.h")),
      s(:send, nil, :have_header,
        s(:str, "strings.h")),
      s(:send, nil, :have_header,
        s(:str, "string.h")),
      s(:send, nil, :have_header,
        s(:str, "sys/stat.h")),
      s(:send, nil, :have_header,
        s(:str, "sys/types.h")),
      s(:send, nil, :have_header,
        s(:str, "unistd.h")),
      s(:send, nil, :find_header,
        s(:str, "yaml.h")),
      s(:send, nil, :have_header,
        s(:str, "config.h"))), nil),
  s(:send, nil, :create_makefile,
    s(:str, "psych")))
