s(:begin,
  s(:send, nil, :require,
    s(:str, "psych/exception")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :SyntaxError),
      s(:const,
        s(:const, nil, :Psych), :Exception),
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :file),
          s(:sym, :line),
          s(:sym, :column),
          s(:sym, :offset),
          s(:sym, :problem),
          s(:sym, :context)),
        s(:def, :initialize,
          s(:args,
            s(:arg, :file),
            s(:arg, :line),
            s(:arg, :col),
            s(:arg, :offset),
            s(:arg, :problem),
            s(:arg, :context)),
          s(:begin,
            s(:lvasgn, :err,
              s(:send,
                s(:send,
                  s(:array,
                    s(:lvar, :problem),
                    s(:lvar, :context)), :compact), :join,
                s(:str, " "))),
            s(:lvasgn, :filename,
              s(:or,
                s(:lvar, :file),
                s(:str, "<unknown>"))),
            s(:lvasgn, :message,
              s(:send,
                s(:str, "(%s): %s at line %d column %d"), :%,
                s(:array,
                  s(:lvar, :filename),
                  s(:lvar, :err),
                  s(:lvar, :line),
                  s(:lvar, :col)))),
            s(:ivasgn, :@file,
              s(:lvar, :file)),
            s(:ivasgn, :@line,
              s(:lvar, :line)),
            s(:ivasgn, :@column,
              s(:lvar, :col)),
            s(:ivasgn, :@offset,
              s(:lvar, :offset)),
            s(:ivasgn, :@problem,
              s(:lvar, :problem)),
            s(:ivasgn, :@context,
              s(:lvar, :context)),
            s(:super,
              s(:lvar, :message))))))))
