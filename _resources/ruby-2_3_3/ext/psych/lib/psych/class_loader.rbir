s(:begin,
  s(:send, nil, :require,
    s(:str, "psych/omap")),
  s(:send, nil, :require,
    s(:str, "psych/set")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :ClassLoader), nil,
      s(:begin,
        s(:casgn, nil, :BIG_DECIMAL,
          s(:str, "BigDecimal")),
        s(:casgn, nil, :COMPLEX,
          s(:str, "Complex")),
        s(:casgn, nil, :DATE,
          s(:str, "Date")),
        s(:casgn, nil, :DATE_TIME,
          s(:str, "DateTime")),
        s(:casgn, nil, :EXCEPTION,
          s(:str, "Exception")),
        s(:casgn, nil, :OBJECT,
          s(:str, "Object")),
        s(:casgn, nil, :PSYCH_OMAP,
          s(:str, "Psych::Omap")),
        s(:casgn, nil, :PSYCH_SET,
          s(:str, "Psych::Set")),
        s(:casgn, nil, :RANGE,
          s(:str, "Range")),
        s(:casgn, nil, :RATIONAL,
          s(:str, "Rational")),
        s(:casgn, nil, :REGEXP,
          s(:str, "Regexp")),
        s(:casgn, nil, :STRUCT,
          s(:str, "Struct")),
        s(:casgn, nil, :SYMBOL,
          s(:str, "Symbol")),
        s(:def, :initialize,
          s(:args),
          s(:ivasgn, :@cache,
            s(:send,
              s(:const, nil, :CACHE), :dup))),
        s(:def, :load,
          s(:args,
            s(:arg, :klassname)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :klassname), :!),
                s(:send,
                  s(:lvar, :klassname), :empty?)),
              s(:return,
                s(:nil)), nil),
            s(:send, nil, :find,
              s(:lvar, :klassname)))),
        s(:def, :symbolize,
          s(:args,
            s(:arg, :sym)),
          s(:begin,
            s(:send, nil, :symbol),
            s(:send,
              s(:lvar, :sym), :to_sym))),
        s(:block,
          s(:send,
            s(:send, nil, :constants), :each),
          s(:args,
            s(:arg, :const)),
          s(:begin,
            s(:lvasgn, :konst,
              s(:send, nil, :const_get,
                s(:lvar, :const))),
            s(:block,
              s(:send, nil, :define_method,
                s(:send,
                  s(:send,
                    s(:lvar, :const), :to_s), :downcase)),
              s(:args),
              s(:send, nil, :load,
                s(:lvar, :konst))))),
        s(:send, nil, :private),
        s(:def, :find,
          s(:args,
            s(:arg, :klassname)),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@cache), :[],
              s(:lvar, :klassname)),
            s(:send, nil, :resolve,
              s(:lvar, :klassname)))),
        s(:def, :resolve,
          s(:args,
            s(:arg, :klassname)),
          s(:begin,
            s(:lvasgn, :name,
              s(:lvar, :klassname)),
            s(:lvasgn, :retried,
              s(:false)),
            s(:kwbegin,
              s(:rescue,
                s(:send, nil, :path2class,
                  s(:lvar, :name)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :ArgumentError),
                    s(:const, nil, :NameError)),
                  s(:lvasgn, :ex),
                  s(:begin,
                    s(:if,
                      s(:lvar, :retried), nil,
                      s(:begin,
                        s(:lvasgn, :name,
                          s(:dstr,
                            s(:str, "Struct::"),
                            s(:begin,
                              s(:lvar, :name)))),
                        s(:lvasgn, :retried,
                          s(:lvar, :ex)),
                        s(:retry))),
                    s(:send, nil, :raise,
                      s(:lvar, :retried)))), nil)))),
        s(:casgn, nil, :CACHE,
          s(:send,
            s(:const, nil, :Hash), :[],
            s(:send,
              s(:block,
                s(:send,
                  s(:send, nil, :constants), :map),
                s(:args,
                  s(:arg, :const)),
                s(:begin,
                  s(:lvasgn, :val,
                    s(:send, nil, :const_get,
                      s(:lvar, :const))),
                  s(:kwbegin,
                    s(:rescue,
                      s(:array,
                        s(:lvar, :val),
                        s(:send,
                          s(:const,
                            s(:cbase), :Object), :const_get,
                          s(:lvar, :val))),
                      s(:resbody, nil, nil,
                        s(:nil)), nil)))), :compact))),
        s(:class,
          s(:const, nil, :Restricted),
          s(:const, nil, :ClassLoader),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :classes),
                s(:arg, :symbols)),
              s(:begin,
                s(:ivasgn, :@classes,
                  s(:lvar, :classes)),
                s(:ivasgn, :@symbols,
                  s(:lvar, :symbols)),
                s(:super))),
            s(:def, :symbolize,
              s(:args,
                s(:arg, :sym)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@symbols), :empty?),
                  s(:return,
                    s(:zsuper)), nil),
                s(:if,
                  s(:send,
                    s(:ivar, :@symbols), :include?,
                    s(:lvar, :sym)),
                  s(:zsuper),
                  s(:send, nil, :raise,
                    s(:const, nil, :DisallowedClass),
                    s(:str, "Symbol"))))),
            s(:send, nil, :private),
            s(:def, :find,
              s(:args,
                s(:arg, :klassname)),
              s(:if,
                s(:send,
                  s(:ivar, :@classes), :include?,
                  s(:lvar, :klassname)),
                s(:zsuper),
                s(:send, nil, :raise,
                  s(:const, nil, :DisallowedClass),
                  s(:lvar, :klassname))))))))))
