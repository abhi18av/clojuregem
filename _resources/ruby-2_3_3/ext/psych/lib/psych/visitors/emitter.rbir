s(:module,
  s(:const, nil, :Psych),
  s(:module,
    s(:const, nil, :Visitors),
    s(:class,
      s(:const, nil, :Emitter),
      s(:const,
        s(:const,
          s(:const, nil, :Psych), :Visitors), :Visitor),
      s(:begin,
        s(:def, :initialize,
          s(:args,
            s(:arg, :io),
            s(:optarg, :options,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :opts,
              s(:block,
                s(:send,
                  s(:array,
                    s(:sym, :indentation),
                    s(:sym, :canonical),
                    s(:sym, :line_width)), :find_all),
                s(:args,
                  s(:arg, :opt)),
                s(:send,
                  s(:lvar, :options), :key?,
                  s(:lvar, :opt)))),
            s(:if,
              s(:send,
                s(:lvar, :opts), :empty?),
              s(:ivasgn, :@handler,
                s(:send,
                  s(:const,
                    s(:const, nil, :Psych), :Emitter), :new,
                  s(:lvar, :io))),
              s(:begin,
                s(:lvasgn, :du,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Handler), :DumperOptions), :new)),
                s(:block,
                  s(:send,
                    s(:lvar, :opts), :each),
                  s(:args,
                    s(:arg, :option)),
                  s(:send,
                    s(:lvar, :du), :send,
                    s(:dsym,
                      s(:begin,
                        s(:lvar, :option)),
                      s(:str, "=")),
                    s(:send,
                      s(:lvar, :options), :[],
                      s(:lvar, :option)))),
                s(:ivasgn, :@handler,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Psych), :Emitter), :new,
                    s(:lvar, :io),
                    s(:lvar, :du))))))),
        s(:def, :visit_Psych_Nodes_Stream,
          s(:args,
            s(:arg, :o)),
          s(:begin,
            s(:send,
              s(:ivar, :@handler), :start_stream,
              s(:send,
                s(:lvar, :o), :encoding)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :o), :children), :each),
              s(:args,
                s(:arg, :c)),
              s(:send, nil, :accept,
                s(:lvar, :c))),
            s(:send,
              s(:ivar, :@handler), :end_stream))),
        s(:def, :visit_Psych_Nodes_Document,
          s(:args,
            s(:arg, :o)),
          s(:begin,
            s(:send,
              s(:ivar, :@handler), :start_document,
              s(:send,
                s(:lvar, :o), :version),
              s(:send,
                s(:lvar, :o), :tag_directives),
              s(:send,
                s(:lvar, :o), :implicit)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :o), :children), :each),
              s(:args,
                s(:arg, :c)),
              s(:send, nil, :accept,
                s(:lvar, :c))),
            s(:send,
              s(:ivar, :@handler), :end_document,
              s(:send,
                s(:lvar, :o), :implicit_end)))),
        s(:def, :visit_Psych_Nodes_Scalar,
          s(:args,
            s(:arg, :o)),
          s(:send,
            s(:ivar, :@handler), :scalar,
            s(:send,
              s(:lvar, :o), :value),
            s(:send,
              s(:lvar, :o), :anchor),
            s(:send,
              s(:lvar, :o), :tag),
            s(:send,
              s(:lvar, :o), :plain),
            s(:send,
              s(:lvar, :o), :quoted),
            s(:send,
              s(:lvar, :o), :style))),
        s(:def, :visit_Psych_Nodes_Sequence,
          s(:args,
            s(:arg, :o)),
          s(:begin,
            s(:send,
              s(:ivar, :@handler), :start_sequence,
              s(:send,
                s(:lvar, :o), :anchor),
              s(:send,
                s(:lvar, :o), :tag),
              s(:send,
                s(:lvar, :o), :implicit),
              s(:send,
                s(:lvar, :o), :style)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :o), :children), :each),
              s(:args,
                s(:arg, :c)),
              s(:send, nil, :accept,
                s(:lvar, :c))),
            s(:send,
              s(:ivar, :@handler), :end_sequence))),
        s(:def, :visit_Psych_Nodes_Mapping,
          s(:args,
            s(:arg, :o)),
          s(:begin,
            s(:send,
              s(:ivar, :@handler), :start_mapping,
              s(:send,
                s(:lvar, :o), :anchor),
              s(:send,
                s(:lvar, :o), :tag),
              s(:send,
                s(:lvar, :o), :implicit),
              s(:send,
                s(:lvar, :o), :style)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :o), :children), :each),
              s(:args,
                s(:arg, :c)),
              s(:send, nil, :accept,
                s(:lvar, :c))),
            s(:send,
              s(:ivar, :@handler), :end_mapping))),
        s(:def, :visit_Psych_Nodes_Alias,
          s(:args,
            s(:arg, :o)),
          s(:send,
            s(:ivar, :@handler), :alias,
            s(:send,
              s(:lvar, :o), :anchor)))))))
