s(:begin,
  s(:send, nil, :require,
    s(:str, "psych/json/ruby_events")),
  s(:module,
    s(:const, nil, :Psych),
    s(:module,
      s(:const, nil, :Visitors),
      s(:class,
        s(:const, nil, :JSONTree),
        s(:const, nil, :YAMLTree),
        s(:begin,
          s(:send, nil, :include,
            s(:const,
              s(:const,
                s(:const, nil, :Psych), :JSON), :RubyEvents)),
          s(:defs,
            s(:self), :create,
            s(:args,
              s(:optarg, :options,
                s(:hash))),
            s(:begin,
              s(:lvasgn, :emitter,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Psych), :JSON), :TreeBuilder), :new)),
              s(:lvasgn, :class_loader,
                s(:send,
                  s(:const, nil, :ClassLoader), :new)),
              s(:lvasgn, :ss,
                s(:send,
                  s(:const, nil, :ScalarScanner), :new,
                  s(:lvar, :class_loader))),
              s(:send, nil, :new,
                s(:lvar, :emitter),
                s(:lvar, :ss),
                s(:lvar, :options)))),
          s(:def, :accept,
            s(:args,
              s(:arg, :target)),
            s(:if,
              s(:send,
                s(:lvar, :target), :respond_to?,
                s(:sym, :encode_with)),
              s(:send, nil, :dump_coder,
                s(:lvar, :target)),
              s(:send, nil, :send,
                s(:send,
                  s(:ivar, :@dispatch_cache), :[],
                  s(:send,
                    s(:lvar, :target), :class)),
                s(:lvar, :target)))))))))
