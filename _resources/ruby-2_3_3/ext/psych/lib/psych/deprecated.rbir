s(:begin,
  s(:send, nil, :require,
    s(:str, "date")),
  s(:module,
    s(:const, nil, :Psych),
    s(:begin,
      s(:casgn, nil, :DEPRECATED,
        s(:str, "(string)")),
      s(:module,
        s(:const, nil, :DeprecatedMethods),
        s(:begin,
          s(:send, nil, :attr_accessor,
            s(:sym, :taguri)),
          s(:send, nil, :attr_accessor,
            s(:sym, :to_yaml_style)))),
      s(:defs,
        s(:self), :quick_emit,
        s(:args,
          s(:arg, :thing),
          s(:optarg, :opts,
            s(:hash)),
          s(:blockarg, :block)),
        s(:begin,
          s(:if,
            s(:and,
              s(:gvar, :$VERBOSE),
              s(:send,
                s(:send,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0)), :start_with?,
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:str, "(string)"))), :!)),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": YAML.quick_emit is deprecated"))), nil),
          s(:lvasgn, :target,
            s(:send, nil, :eval,
              s(:str, "self"),
              s(:send,
                s(:lvar, :block), :binding))),
          s(:send,
            s(:lvar, :target), :extend,
            s(:const, nil, :DeprecatedMethods)),
          s(:lvasgn, :metaclass,
            s(:sclass,
              s(:lvar, :target),
              s(:self))),
          s(:block,
            s(:send,
              s(:lvar, :metaclass), :send,
              s(:sym, :define_method),
              s(:sym, :encode_with)),
            s(:args,
              s(:arg, :coder)),
            s(:begin,
              s(:send,
                s(:lvar, :target), :taguri=,
                s(:send,
                  s(:lvar, :coder), :tag)),
              s(:send,
                s(:lvar, :target), :to_yaml_style=,
                s(:send,
                  s(:lvar, :coder), :style)),
              s(:send,
                s(:lvar, :block), :call,
                s(:lvar, :coder)))),
          s(:if,
            s(:send,
              s(:lvar, :opts), :[],
              s(:sym, :nodump)), nil,
            s(:send,
              s(:lvar, :target), :psych_to_yaml)))),
      s(:defs,
        s(:self), :load_documents,
        s(:args,
          s(:arg, :yaml),
          s(:blockarg, :block)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": load_documents is deprecated, use load_stream"))), nil),
          s(:lvasgn, :list,
            s(:send, nil, :load_stream,
              s(:lvar, :yaml))),
          s(:if,
            s(:send, nil, :block_given?), nil,
            s(:return,
              s(:lvar, :list))),
          s(:send,
            s(:lvar, :list), :each,
            s(:block_pass,
              s(:lvar, :block))))),
      s(:defs,
        s(:self), :detect_implicit,
        s(:args,
          s(:arg, :thing)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": detect_implicit is deprecated"))), nil),
          s(:if,
            s(:send,
              s(:const, nil, :String), :===,
              s(:lvar, :thing)), nil,
            s(:return,
              s(:str, ""))),
          s(:if,
            s(:send,
              s(:str, ""), :==,
              s(:lvar, :thing)),
            s(:return,
              s(:str, "null")), nil),
          s(:lvasgn, :ss,
            s(:send,
              s(:const, nil, :ScalarScanner), :new,
              s(:send,
                s(:const, nil, :ClassLoader), :new))),
          s(:send,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :ss), :tokenize,
                  s(:lvar, :thing)), :class), :name), :downcase))),
      s(:defs,
        s(:self), :add_ruby_type,
        s(:args,
          s(:arg, :type_tag),
          s(:blockarg, :block)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": add_ruby_type is deprecated, use add_domain_type"))), nil),
          s(:lvasgn, :domain,
            s(:str, "ruby.yaml.org,2002")),
          s(:lvasgn, :key,
            s(:send,
              s(:array,
                s(:str, "tag"),
                s(:lvar, :domain),
                s(:lvar, :type_tag)), :join,
              s(:str, ":"))),
          s(:send,
            s(:ivar, :@domain_types), :[]=,
            s(:lvar, :key),
            s(:array,
              s(:lvar, :key),
              s(:lvar, :block))))),
      s(:defs,
        s(:self), :add_private_type,
        s(:args,
          s(:arg, :type_tag),
          s(:blockarg, :block)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": add_private_type is deprecated, use add_domain_type"))), nil),
          s(:lvasgn, :domain,
            s(:str, "x-private")),
          s(:lvasgn, :key,
            s(:send,
              s(:array,
                s(:lvar, :domain),
                s(:lvar, :type_tag)), :join,
              s(:str, ":"))),
          s(:send,
            s(:ivar, :@domain_types), :[]=,
            s(:lvar, :key),
            s(:array,
              s(:lvar, :key),
              s(:lvar, :block))))),
      s(:defs,
        s(:self), :tagurize,
        s(:args,
          s(:arg, :thing)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": add_private_type is deprecated, use add_domain_type"))), nil),
          s(:if,
            s(:send,
              s(:const, nil, :String), :===,
              s(:lvar, :thing)), nil,
            s(:return,
              s(:lvar, :thing))),
          s(:dstr,
            s(:str, "tag:yaml.org,2002:"),
            s(:begin,
              s(:lvar, :thing))))),
      s(:defs,
        s(:self), :read_type_class,
        s(:args,
          s(:arg, :type),
          s(:arg, :reference)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": read_type_class is deprecated"))), nil),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :_),
              s(:lvasgn, :type),
              s(:lvasgn, :name)),
            s(:send,
              s(:lvar, :type), :split,
              s(:str, ":"),
              s(:int, 4))),
          s(:if,
            s(:lvar, :name),
            s(:lvasgn, :reference,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :name), :split,
                    s(:str, "::")), :inject,
                  s(:lvar, :reference)),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :n)),
                s(:send,
                  s(:lvar, :k), :const_get,
                  s(:send,
                    s(:lvar, :n), :to_sym)))), nil),
          s(:array,
            s(:lvar, :type),
            s(:lvar, :reference)))),
      s(:defs,
        s(:self), :object_maker,
        s(:args,
          s(:arg, :klass),
          s(:arg, :hash)),
        s(:begin,
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :[],
                    s(:int, 0))),
                s(:str, ": object_maker is deprecated"))), nil),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :klass), :allocate), :tap),
            s(:args,
              s(:arg, :obj)),
            s(:block,
              s(:send,
                s(:lvar, :hash), :each),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:send,
                s(:lvar, :obj), :instance_variable_set,
                s(:dsym,
                  s(:str, "@"),
                  s(:begin,
                    s(:lvar, :k))),
                s(:lvar, :v)))))))),
  s(:class,
    s(:const, nil, :Object), nil,
    s(:begin,
      s(:rescue,
        s(:undef,
          s(:sym, :to_yaml_properties)),
        s(:resbody, nil, nil,
          s(:nil)), nil),
      s(:def, :to_yaml_properties,
        s(:args),
        s(:send, nil, :instance_variables)))))
