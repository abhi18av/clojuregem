s(:begin,
  s(:send, nil, :require,
    s(:str, "psych/handler")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TreeBuilder),
      s(:const,
        s(:const, nil, :Psych), :Handler),
      s(:begin,
        s(:send, nil, :attr_reader,
          s(:sym, :root)),
        s(:def, :initialize,
          s(:args),
          s(:begin,
            s(:ivasgn, :@stack,
              s(:array)),
            s(:ivasgn, :@last,
              s(:nil)),
            s(:ivasgn, :@root,
              s(:nil)))),
        s(:block,
          s(:send,
            s(:array,
              s(:str, "Sequence"),
              s(:str, "Mapping")), :each),
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :class_eval,
            s(:dstr,
              s(:str, "\n"),
              s(:str, "        def start_"),
              s(:begin,
                s(:send,
                  s(:lvar, :node), :downcase)),
              s(:str, "(anchor, tag, implicit, style)\n"),
              s(:str, "          n = Nodes::"),
              s(:begin,
                s(:lvar, :node)),
              s(:str, ".new(anchor, tag, implicit, style)\n"),
              s(:str, "          @last.children << n\n"),
              s(:str, "          push n\n"),
              s(:str, "        end\n"),
              s(:str, "\n"),
              s(:str, "        def end_"),
              s(:begin,
                s(:send,
                  s(:lvar, :node), :downcase)),
              s(:str, "\n"),
              s(:str, "          pop\n"),
              s(:str, "        end\n"),
              s(:str, "      ")))),
        s(:def, :start_document,
          s(:args,
            s(:arg, :version),
            s(:arg, :tag_directives),
            s(:arg, :implicit)),
          s(:begin,
            s(:lvasgn, :n,
              s(:send,
                s(:const,
                  s(:const, nil, :Nodes), :Document), :new,
                s(:lvar, :version),
                s(:lvar, :tag_directives),
                s(:lvar, :implicit))),
            s(:send,
              s(:send,
                s(:ivar, :@last), :children), :<<,
              s(:lvar, :n)),
            s(:send, nil, :push,
              s(:lvar, :n)))),
        s(:def, :end_document,
          s(:args,
            s(:optarg, :implicit_end,
              s(:send,
                s(:send, nil, :streaming?), :!))),
          s(:begin,
            s(:send,
              s(:ivar, :@last), :implicit_end=,
              s(:lvar, :implicit_end)),
            s(:send, nil, :pop))),
        s(:def, :start_stream,
          s(:args,
            s(:arg, :encoding)),
          s(:begin,
            s(:ivasgn, :@root,
              s(:send,
                s(:const,
                  s(:const, nil, :Nodes), :Stream), :new,
                s(:lvar, :encoding))),
            s(:send, nil, :push,
              s(:ivar, :@root)))),
        s(:def, :end_stream,
          s(:args),
          s(:send, nil, :pop)),
        s(:def, :scalar,
          s(:args,
            s(:arg, :value),
            s(:arg, :anchor),
            s(:arg, :tag),
            s(:arg, :plain),
            s(:arg, :quoted),
            s(:arg, :style)),
          s(:begin,
            s(:lvasgn, :s,
              s(:send,
                s(:const,
                  s(:const, nil, :Nodes), :Scalar), :new,
                s(:lvar, :value),
                s(:lvar, :anchor),
                s(:lvar, :tag),
                s(:lvar, :plain),
                s(:lvar, :quoted),
                s(:lvar, :style))),
            s(:send,
              s(:send,
                s(:ivar, :@last), :children), :<<,
              s(:lvar, :s)),
            s(:lvar, :s))),
        s(:def, :alias,
          s(:args,
            s(:arg, :anchor)),
          s(:send,
            s(:send,
              s(:ivar, :@last), :children), :<<,
            s(:send,
              s(:const,
                s(:const, nil, :Nodes), :Alias), :new,
              s(:lvar, :anchor)))),
        s(:send, nil, :private),
        s(:def, :push,
          s(:args,
            s(:arg, :value)),
          s(:begin,
            s(:send,
              s(:ivar, :@stack), :push,
              s(:lvar, :value)),
            s(:ivasgn, :@last,
              s(:lvar, :value)))),
        s(:def, :pop,
          s(:args),
          s(:begin,
            s(:lvasgn, :x,
              s(:send,
                s(:ivar, :@stack), :pop)),
            s(:ivasgn, :@last,
              s(:send,
                s(:ivar, :@stack), :last)),
            s(:lvar, :x)))))))
