s(:begin,
  s(:send, nil, :require,
    s(:str, "fiddle")),
  s(:send, nil, :require,
    s(:str, "fiddle/value")),
  s(:send, nil, :require,
    s(:str, "fiddle/pack")),
  s(:module,
    s(:const, nil, :Fiddle),
    s(:begin,
      s(:class,
        s(:const, nil, :CStruct), nil,
        s(:defs,
          s(:const, nil, :CStruct), :entity_class,
          s(:args),
          s(:const, nil, :CStructEntity))),
      s(:class,
        s(:const, nil, :CUnion), nil,
        s(:defs,
          s(:const, nil, :CUnion), :entity_class,
          s(:args),
          s(:const, nil, :CUnionEntity))),
      s(:module,
        s(:const, nil, :CStructBuilder),
        s(:begin,
          s(:def, :create,
            s(:args,
              s(:arg, :klass),
              s(:arg, :types),
              s(:arg, :members)),
            s(:begin,
              s(:lvasgn, :new_class,
                s(:block,
                  s(:send,
                    s(:const, nil, :Class), :new,
                    s(:lvar, :klass)),
                  s(:args),
                  s(:begin,
                    s(:block,
                      s(:send, nil, :define_method,
                        s(:sym, :initialize)),
                      s(:args,
                        s(:arg, :addr)),
                      s(:begin,
                        s(:ivasgn, :@entity,
                          s(:send,
                            s(:send,
                              s(:lvar, :klass), :entity_class), :new,
                            s(:lvar, :addr),
                            s(:lvar, :types))),
                        s(:send,
                          s(:ivar, :@entity), :assign_names,
                          s(:lvar, :members)))),
                    s(:block,
                      s(:send, nil, :define_method,
                        s(:sym, :to_ptr)),
                      s(:args),
                      s(:ivar, :@entity)),
                    s(:block,
                      s(:send, nil, :define_method,
                        s(:sym, :to_i)),
                      s(:args),
                      s(:send,
                        s(:ivar, :@entity), :to_i)),
                    s(:block,
                      s(:send,
                        s(:lvar, :members), :each),
                      s(:args,
                        s(:arg, :name)),
                      s(:begin,
                        s(:block,
                          s(:send, nil, :define_method,
                            s(:lvar, :name)),
                          s(:args),
                          s(:send,
                            s(:ivar, :@entity), :[],
                            s(:lvar, :name))),
                        s(:block,
                          s(:send, nil, :define_method,
                            s(:send,
                              s(:lvar, :name), :+,
                              s(:str, "="))),
                          s(:args,
                            s(:arg, :val)),
                          s(:send,
                            s(:ivar, :@entity), :[]=,
                            s(:lvar, :name),
                            s(:lvar, :val)))))))),
              s(:lvasgn, :size,
                s(:send,
                  s(:send,
                    s(:lvar, :klass), :entity_class), :size,
                  s(:lvar, :types))),
              s(:send,
                s(:lvar, :new_class), :module_eval,
                s(:dstr,
                  s(:str, "        def new_class.size()\n"),
                  s(:str, "          "),
                  s(:begin,
                    s(:lvar, :size)),
                  s(:str, "\n"),
                  s(:str, "        end\n"),
                  s(:str, "        def new_class.malloc()\n"),
                  s(:str, "          addr = Fiddle.malloc("),
                  s(:begin,
                    s(:lvar, :size)),
                  s(:str, ")\n"),
                  s(:str, "          new(addr)\n"),
                  s(:str, "        end\n")),
                s(:str, "(string)"),
                s(:send,
                  s(:int, 65), :+,
                  s(:int, 1))),
              s(:return,
                s(:lvar, :new_class)))),
          s(:send, nil, :module_function,
            s(:sym, :create)))),
      s(:class,
        s(:const, nil, :CStructEntity),
        s(:const,
          s(:const, nil, :Fiddle), :Pointer),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :PackInfo)),
          s(:send, nil, :include,
            s(:const, nil, :ValueUtil)),
          s(:defs,
            s(:const, nil, :CStructEntity), :malloc,
            s(:args,
              s(:arg, :types),
              s(:optarg, :func,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :addr,
                s(:send,
                  s(:const, nil, :Fiddle), :malloc,
                  s(:send,
                    s(:const, nil, :CStructEntity), :size,
                    s(:lvar, :types)))),
              s(:send,
                s(:const, nil, :CStructEntity), :new,
                s(:lvar, :addr),
                s(:lvar, :types),
                s(:lvar, :func)))),
          s(:defs,
            s(:const, nil, :CStructEntity), :size,
            s(:args,
              s(:arg, :types)),
            s(:begin,
              s(:lvasgn, :offset,
                s(:int, 0)),
              s(:lvasgn, :max_align,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:lvar, :types), :map),
                    s(:args,
                      s(:arg, :type),
                      s(:optarg, :count,
                        s(:int, 1))),
                    s(:begin,
                      s(:lvasgn, :last_offset,
                        s(:lvar, :offset)),
                      s(:lvasgn, :align,
                        s(:send,
                          s(:const,
                            s(:const, nil, :PackInfo), :ALIGN_MAP), :[],
                          s(:lvar, :type))),
                      s(:lvasgn, :offset,
                        s(:send,
                          s(:send,
                            s(:const, nil, :PackInfo), :align,
                            s(:lvar, :last_offset),
                            s(:lvar, :align)), :+,
                          s(:begin,
                            s(:send,
                              s(:send,
                                s(:const,
                                  s(:const, nil, :PackInfo), :SIZE_MAP), :[],
                                s(:lvar, :type)), :*,
                              s(:lvar, :count))))),
                      s(:lvar, :align))), :max)),
              s(:send,
                s(:const, nil, :PackInfo), :align,
                s(:lvar, :offset),
                s(:lvar, :max_align)))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :addr),
              s(:arg, :types),
              s(:optarg, :func,
                s(:nil))),
            s(:begin,
              s(:send, nil, :set_ctypes,
                s(:lvar, :types)),
              s(:super,
                s(:lvar, :addr),
                s(:ivar, :@size),
                s(:lvar, :func)))),
          s(:def, :assign_names,
            s(:args,
              s(:arg, :members)),
            s(:ivasgn, :@members,
              s(:lvar, :members))),
          s(:def, :set_ctypes,
            s(:args,
              s(:arg, :types)),
            s(:begin,
              s(:ivasgn, :@ctypes,
                s(:lvar, :types)),
              s(:ivasgn, :@offset,
                s(:array)),
              s(:lvasgn, :offset,
                s(:int, 0)),
              s(:lvasgn, :max_align,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:lvar, :types), :map),
                    s(:args,
                      s(:arg, :type),
                      s(:optarg, :count,
                        s(:int, 1))),
                    s(:begin,
                      s(:lvasgn, :orig_offset,
                        s(:lvar, :offset)),
                      s(:lvasgn, :align,
                        s(:send,
                          s(:const, nil, :ALIGN_MAP), :[],
                          s(:lvar, :type))),
                      s(:lvasgn, :offset,
                        s(:send,
                          s(:const, nil, :PackInfo), :align,
                          s(:lvar, :orig_offset),
                          s(:lvar, :align))),
                      s(:send,
                        s(:ivar, :@offset), :<<,
                        s(:lvar, :offset)),
                      s(:op_asgn,
                        s(:lvasgn, :offset), :+,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:const, nil, :SIZE_MAP), :[],
                              s(:lvar, :type)), :*,
                            s(:lvar, :count)))),
                      s(:lvar, :align))), :max)),
              s(:ivasgn, :@size,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:lvar, :offset),
                  s(:lvar, :max_align))))),
          s(:def, :[],
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :idx,
                s(:send,
                  s(:ivar, :@members), :index,
                  s(:lvar, :name))),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :idx), :nil?)),
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "no such member: "),
                    s(:begin,
                      s(:lvar, :name)))), nil),
              s(:lvasgn, :ty,
                s(:send,
                  s(:ivar, :@ctypes), :[],
                  s(:lvar, :idx))),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :ty), :is_a?,
                    s(:const, nil, :Array))),
                s(:lvasgn, :r,
                  s(:super,
                    s(:send,
                      s(:ivar, :@offset), :[],
                      s(:lvar, :idx)),
                    s(:send,
                      s(:send,
                        s(:const, nil, :SIZE_MAP), :[],
                        s(:send,
                          s(:lvar, :ty), :[],
                          s(:int, 0))), :*,
                      s(:send,
                        s(:lvar, :ty), :[],
                        s(:int, 1))))),
                s(:lvasgn, :r,
                  s(:super,
                    s(:send,
                      s(:ivar, :@offset), :[],
                      s(:lvar, :idx)),
                    s(:send,
                      s(:const, nil, :SIZE_MAP), :[],
                      s(:send,
                        s(:lvar, :ty), :abs))))),
              s(:lvasgn, :packer,
                s(:send,
                  s(:const, nil, :Packer), :new,
                  s(:array,
                    s(:lvar, :ty)))),
              s(:lvasgn, :val,
                s(:send,
                  s(:lvar, :packer), :unpack,
                  s(:array,
                    s(:lvar, :r)))),
              s(:case,
                s(:lvar, :ty),
                s(:when,
                  s(:const, nil, :Array),
                  s(:case,
                    s(:send,
                      s(:lvar, :ty), :[],
                      s(:int, 0)),
                    s(:when,
                      s(:const, nil, :TYPE_VOIDP),
                      s(:lvasgn, :val,
                        s(:block,
                          s(:send,
                            s(:lvar, :val), :collect),
                          s(:args,
                            s(:arg, :v)),
                          s(:send,
                            s(:const, nil, :Pointer), :new,
                            s(:lvar, :v))))), nil)),
                s(:when,
                  s(:const, nil, :TYPE_VOIDP),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :Pointer), :new,
                      s(:send,
                        s(:lvar, :val), :[],
                        s(:int, 0))))),
                s(:lvasgn, :val,
                  s(:send,
                    s(:lvar, :val), :[],
                    s(:int, 0)))),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :ty), :is_a?,
                      s(:const, nil, :Integer)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :ty), :<,
                        s(:int, 0))))),
                s(:return,
                  s(:send, nil, :unsigned_value,
                    s(:lvar, :val),
                    s(:lvar, :ty))),
                s(:if,
                  s(:begin,
                    s(:and,
                      s(:send,
                        s(:lvar, :ty), :is_a?,
                        s(:const, nil, :Array)),
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :ty), :[],
                            s(:int, 0)), :<,
                          s(:int, 0))))),
                  s(:return,
                    s(:block,
                      s(:send,
                        s(:lvar, :val), :collect),
                      s(:args,
                        s(:arg, :v)),
                      s(:send, nil, :unsigned_value,
                        s(:lvar, :v),
                        s(:send,
                          s(:lvar, :ty), :[],
                          s(:int, 0))))),
                  s(:return,
                    s(:lvar, :val)))))),
          s(:def, :[]=,
            s(:args,
              s(:arg, :name),
              s(:arg, :val)),
            s(:begin,
              s(:lvasgn, :idx,
                s(:send,
                  s(:ivar, :@members), :index,
                  s(:lvar, :name))),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :idx), :nil?)),
                s(:send, nil, :raise,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "no such member: "),
                    s(:begin,
                      s(:lvar, :name)))), nil),
              s(:lvasgn, :ty,
                s(:send,
                  s(:ivar, :@ctypes), :[],
                  s(:lvar, :idx))),
              s(:lvasgn, :packer,
                s(:send,
                  s(:const, nil, :Packer), :new,
                  s(:array,
                    s(:lvar, :ty)))),
              s(:lvasgn, :val,
                s(:send, nil, :wrap_arg,
                  s(:lvar, :val),
                  s(:lvar, :ty),
                  s(:array))),
              s(:lvasgn, :buff,
                s(:send,
                  s(:lvar, :packer), :pack,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :flatten))),
              s(:super,
                s(:send,
                  s(:ivar, :@offset), :[],
                  s(:lvar, :idx)),
                s(:send,
                  s(:lvar, :buff), :size),
                s(:lvar, :buff)),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :ty), :is_a?,
                      s(:const, nil, :Integer)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :ty), :<,
                        s(:int, 0))))),
                s(:return,
                  s(:send, nil, :unsigned_value,
                    s(:lvar, :val),
                    s(:lvar, :ty))),
                s(:if,
                  s(:begin,
                    s(:and,
                      s(:send,
                        s(:lvar, :ty), :is_a?,
                        s(:const, nil, :Array)),
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :ty), :[],
                            s(:int, 0)), :<,
                          s(:int, 0))))),
                  s(:return,
                    s(:block,
                      s(:send,
                        s(:lvar, :val), :collect),
                      s(:args,
                        s(:arg, :v)),
                      s(:send, nil, :unsigned_value,
                        s(:lvar, :v),
                        s(:send,
                          s(:lvar, :ty), :[],
                          s(:int, 0))))),
                  s(:return,
                    s(:lvar, :val)))))),
          s(:def, :to_s,
            s(:args),
            s(:super,
              s(:ivar, :@size))))),
      s(:class,
        s(:const, nil, :CUnionEntity),
        s(:const, nil, :CStructEntity),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :PackInfo)),
          s(:defs,
            s(:const, nil, :CUnionEntity), :malloc,
            s(:args,
              s(:arg, :types),
              s(:optarg, :func,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :addr,
                s(:send,
                  s(:const, nil, :Fiddle), :malloc,
                  s(:send,
                    s(:const, nil, :CUnionEntity), :size,
                    s(:lvar, :types)))),
              s(:send,
                s(:const, nil, :CUnionEntity), :new,
                s(:lvar, :addr),
                s(:lvar, :types),
                s(:lvar, :func)))),
          s(:defs,
            s(:const, nil, :CUnionEntity), :size,
            s(:args,
              s(:arg, :types)),
            s(:send,
              s(:block,
                s(:send,
                  s(:lvar, :types), :map),
                s(:args,
                  s(:arg, :type),
                  s(:optarg, :count,
                    s(:int, 1))),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :PackInfo), :SIZE_MAP), :[],
                    s(:lvar, :type)), :*,
                  s(:lvar, :count))), :max)),
          s(:def, :set_ctypes,
            s(:args,
              s(:arg, :types)),
            s(:begin,
              s(:ivasgn, :@ctypes,
                s(:lvar, :types)),
              s(:ivasgn, :@offset,
                s(:send,
                  s(:const, nil, :Array), :new,
                  s(:send,
                    s(:lvar, :types), :length),
                  s(:int, 0))),
              s(:ivasgn, :@size,
                s(:send,
                  s(:send,
                    s(:self), :class), :size,
                  s(:lvar, :types))))))))))
