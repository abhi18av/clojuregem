s(:begin,
  s(:send, nil, :require,
    s(:str, "fiddle")),
  s(:module,
    s(:const, nil, :Fiddle),
    s(:module,
      s(:const, nil, :ValueUtil),
      s(:begin,
        s(:def, :unsigned_value,
          s(:args,
            s(:arg, :val),
            s(:arg, :ty)),
          s(:case,
            s(:send,
              s(:lvar, :ty), :abs),
            s(:when,
              s(:const, nil, :TYPE_CHAR),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "c")), :unpack,
                  s(:str, "C")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_SHORT),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "s!")), :unpack,
                  s(:str, "S!")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_INT),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "i!")), :unpack,
                  s(:str, "I!")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_LONG),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "l!")), :unpack,
                  s(:str, "L!")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_LONG_LONG),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "q")), :unpack,
                  s(:str, "Q")), :[],
                s(:int, 0))),
            s(:lvar, :val))),
        s(:def, :signed_value,
          s(:args,
            s(:arg, :val),
            s(:arg, :ty)),
          s(:case,
            s(:send,
              s(:lvar, :ty), :abs),
            s(:when,
              s(:const, nil, :TYPE_CHAR),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "C")), :unpack,
                  s(:str, "c")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_SHORT),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "S!")), :unpack,
                  s(:str, "s!")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_INT),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "I!")), :unpack,
                  s(:str, "i!")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_LONG),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "L!")), :unpack,
                  s(:str, "l!")), :[],
                s(:int, 0))),
            s(:when,
              s(:const, nil, :TYPE_LONG_LONG),
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :val)), :pack,
                    s(:str, "Q")), :unpack,
                  s(:str, "q")), :[],
                s(:int, 0))),
            s(:lvar, :val))),
        s(:def, :wrap_args,
          s(:args,
            s(:arg, :args),
            s(:arg, :tys),
            s(:arg, :funcs),
            s(:blockarg, :block)),
          s(:begin,
            s(:lvasgn, :result,
              s(:array)),
            s(:or_asgn,
              s(:lvasgn, :tys),
              s(:array)),
            s(:block,
              s(:send,
                s(:lvar, :args), :each_with_index),
              s(:args,
                s(:arg, :arg),
                s(:arg, :idx)),
              s(:send,
                s(:lvar, :result), :push,
                s(:send, nil, :wrap_arg,
                  s(:lvar, :arg),
                  s(:send,
                    s(:lvar, :tys), :[],
                    s(:lvar, :idx)),
                  s(:lvar, :funcs),
                  s(:block_pass,
                    s(:lvar, :block))))),
            s(:lvar, :result))),
        s(:def, :wrap_arg,
          s(:args,
            s(:arg, :arg),
            s(:arg, :ty),
            s(:optarg, :funcs,
              s(:array)),
            s(:blockarg, :block)),
          s(:begin,
            s(:or_asgn,
              s(:lvasgn, :funcs),
              s(:array)),
            s(:case,
              s(:lvar, :arg),
              s(:when,
                s(:nil),
                s(:return,
                  s(:int, 0))),
              s(:when,
                s(:const, nil, :Pointer),
                s(:return,
                  s(:send,
                    s(:lvar, :arg), :to_i))),
              s(:when,
                s(:const, nil, :IO),
                s(:case,
                  s(:lvar, :ty),
                  s(:when,
                    s(:const, nil, :TYPE_VOIDP),
                    s(:return,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Pointer), :[],
                          s(:lvar, :arg)), :to_i))),
                  s(:return,
                    s(:send,
                      s(:lvar, :arg), :to_i)))),
              s(:when,
                s(:const, nil, :Function),
                s(:begin,
                  s(:if,
                    s(:begin,
                      s(:lvar, :block)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :arg), :bind_at_call,
                        s(:block_pass,
                          s(:lvar, :block))),
                      s(:send,
                        s(:lvar, :funcs), :push,
                        s(:lvar, :arg))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :arg), :bound?), :!),
                      s(:send, nil, :raise,
                        s(:const, nil, :RuntimeError),
                        s(:str, "block must be given.")), nil)),
                  s(:return,
                    s(:send,
                      s(:lvar, :arg), :to_i)))),
              s(:when,
                s(:const, nil, :String),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :ty), :is_a?,
                      s(:const, nil, :Array))),
                  s(:return,
                    s(:send,
                      s(:lvar, :arg), :unpack,
                      s(:str, "C*"))),
                  s(:case,
                    s(:const, nil, :SIZEOF_VOIDP),
                    s(:when,
                      s(:const, nil, :SIZEOF_LONG),
                      s(:return,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:array,
                                s(:lvar, :arg)), :pack,
                              s(:str, "p")), :unpack,
                            s(:str, "l!")), :[],
                          s(:int, 0)))),
                    s(:when,
                      s(:const, nil, :SIZEOF_LONG_LONG),
                      s(:return,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:array,
                                s(:lvar, :arg)), :pack,
                              s(:str, "p")), :unpack,
                            s(:str, "q")), :[],
                          s(:int, 0)))),
                    s(:send, nil, :raise,
                      s(:const, nil, :RuntimeError),
                      s(:str, "sizeof(void*)?"))))),
              s(:when,
                s(:const, nil, :Float),
                s(:const, nil, :Integer),
                s(:return,
                  s(:lvar, :arg))),
              s(:when,
                s(:const, nil, :Array),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :ty), :is_a?,
                      s(:const, nil, :Array))),
                  s(:begin,
                    s(:case,
                      s(:send,
                        s(:lvar, :ty), :[],
                        s(:int, 0)),
                      s(:when,
                        s(:const, nil, :TYPE_VOIDP),
                        s(:return,
                          s(:block,
                            s(:send,
                              s(:lvar, :arg), :collect),
                            s(:args,
                              s(:arg, :v)),
                            s(:send, nil, :Integer,
                              s(:lvar, :v))))),
                      s(:when,
                        s(:const, nil, :TYPE_CHAR),
                        s(:if,
                          s(:begin,
                            s(:send,
                              s(:lvar, :arg), :is_a?,
                              s(:const, nil, :String))),
                          s(:return,
                            s(:send,
                              s(:send, nil, :val), :unpack,
                              s(:str, "C*"))), nil)), nil),
                    s(:return,
                      s(:lvar, :arg))),
                  s(:return,
                    s(:lvar, :arg)))),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :arg), :respond_to?,
                    s(:sym, :to_ptr))),
                s(:return,
                  s(:send,
                    s(:send,
                      s(:lvar, :arg), :to_ptr), :to_i)),
                s(:kwbegin,
                  s(:rescue,
                    s(:return,
                      s(:send, nil, :Integer,
                        s(:lvar, :arg))),
                    s(:resbody, nil, nil,
                      s(:send, nil, :raise,
                        s(:const, nil, :ArgumentError),
                        s(:dstr,
                          s(:str, "unknown argument type: "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :arg), :class))))), nil))))))))))
