s(:begin,
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:def, :main,
    s(:args),
    s(:begin,
      s(:lvasgn, :output,
        s(:nil)),
      s(:lvasgn, :parser,
        s(:send,
          s(:const, nil, :OptionParser), :new)),
      s(:send,
        s(:lvar, :parser), :banner=,
        s(:dstr,
          s(:str, "Usage: "),
          s(:begin,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:gvar, :$0))),
          s(:str, " [--output=PATH] <parse.y>"))),
      s(:block,
        s(:send,
          s(:lvar, :parser), :on,
          s(:str, "--output=PATH"),
          s(:str, "An output file.")),
        s(:args,
          s(:arg, :path)),
        s(:lvasgn, :output,
          s(:lvar, :path))),
      s(:block,
        s(:send,
          s(:lvar, :parser), :on,
          s(:str, "--help"),
          s(:str, "Prints this message and quit.")),
        s(:args),
        s(:begin,
          s(:send, nil, :puts,
            s(:send,
              s(:lvar, :parser), :help)),
          s(:send, nil, :exit,
            s(:true)))),
      s(:kwbegin,
        s(:rescue,
          s(:send,
            s(:lvar, :parser), :parse!),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :OptionParser), :ParseError)),
            s(:lvasgn, :err),
            s(:begin,
              s(:send,
                s(:gvar, :$stderr), :puts,
                s(:send,
                  s(:lvar, :err), :message)),
              s(:send,
                s(:gvar, :$stderr), :puts,
                s(:send,
                  s(:lvar, :parser), :help)),
              s(:send, nil, :exit,
                s(:false)))), nil)),
      s(:if,
        s(:send,
          s(:send,
            s(:const, nil, :ARGV), :size), :==,
          s(:int, 1)), nil,
        s(:send, nil, :abort,
          s(:dstr,
            s(:str, "wrong number of arguments ("),
            s(:begin,
              s(:send,
                s(:const, nil, :ARGV), :size)),
            s(:str, " for 1)")))),
      s(:lvasgn, :out,
        s(:str, "")),
      s(:block,
        s(:send,
          s(:const, nil, :File), :open,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 0))),
        s(:args,
          s(:arg, :f)),
        s(:begin,
          s(:send, nil, :prelude,
            s(:lvar, :f),
            s(:lvar, :out)),
          s(:send, nil, :grammar,
            s(:lvar, :f),
            s(:lvar, :out)),
          s(:send, nil, :usercode,
            s(:lvar, :f),
            s(:lvar, :out)))),
      s(:if,
        s(:lvar, :output),
        s(:block,
          s(:send,
            s(:const, nil, :File), :open,
            s(:lvar, :output),
            s(:str, "w")),
          s(:args,
            s(:arg, :f)),
          s(:send,
            s(:lvar, :f), :write,
            s(:lvar, :out))),
        s(:send, nil, :print,
          s(:lvar, :out))))),
  s(:def, :prelude,
    s(:args,
      s(:arg, :f),
      s(:arg, :out)),
    s(:while,
      s(:lvasgn, :line,
        s(:send,
          s(:lvar, :f), :gets)),
      s(:case,
        s(:lvar, :line),
        s(:when,
          s(:regexp,
            s(:str, "/\\*%%%\\*/"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :out), :<<,
              s(:str, "/*")), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "/\\*%"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :out), :<<,
              s(:str, "*/")), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "%\\*/"),
            s(:regopt)),
          s(:send,
            s(:lvar, :out), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "\\A%%"),
            s(:regopt)),
          s(:begin,
            s(:send,
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "%%")), :<<,
              s(:gvar, :$/)),
            s(:return))),
        s(:when,
          s(:regexp,
            s(:str, "\\A%token"),
            s(:regopt)),
          s(:send,
            s(:lvar, :out), :<<,
            s(:send,
              s(:lvar, :line), :sub,
              s(:regexp,
                s(:str, "<\\w+>"),
                s(:regopt)),
              s(:str, "<val>")))),
        s(:when,
          s(:regexp,
            s(:str, "\\A%type"),
            s(:regopt)),
          s(:send,
            s(:lvar, :out), :<<,
            s(:send,
              s(:lvar, :line), :sub,
              s(:regexp,
                s(:str, "<\\w+>"),
                s(:regopt)),
              s(:str, "<val>")))),
        s(:send,
          s(:lvar, :out), :<<,
          s(:lvar, :line))))),
  s(:def, :grammar,
    s(:args,
      s(:arg, :f),
      s(:arg, :out)),
    s(:while,
      s(:lvasgn, :line,
        s(:send,
          s(:lvar, :f), :gets)),
      s(:case,
        s(:lvar, :line),
        s(:when,
          s(:regexp,
            s(:str, "/\\*%%%\\*/"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :out), :<<,
              s(:str, "#if 0")), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "/\\*%c%\\*/"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :out), :<<,
              s(:str, "/*")), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "/\\*%c"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :out), :<<,
              s(:str, "*/")), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "/\\*%"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :out), :<<,
              s(:str, "#endif")), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "%\\*/"),
            s(:regopt)),
          s(:send,
            s(:lvar, :out), :<<,
            s(:gvar, :$/))),
        s(:when,
          s(:regexp,
            s(:str, "\\A%%"),
            s(:regopt)),
          s(:begin,
            s(:send,
              s(:send,
                s(:lvar, :out), :<<,
                s(:str, "%%")), :<<,
              s(:gvar, :$/)),
            s(:return))),
        s(:send,
          s(:lvar, :out), :<<,
          s(:lvar, :line))))),
  s(:def, :usercode,
    s(:args,
      s(:arg, :f),
      s(:arg, :out)),
    s(:while,
      s(:lvasgn, :line,
        s(:send,
          s(:lvar, :f), :gets)),
      s(:send,
        s(:lvar, :out), :<<,
        s(:lvar, :line)))),
  s(:send, nil, :main))
