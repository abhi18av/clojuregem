s(:begin,
  s(:lvasgn, :off,
    s(:true)),
  s(:block,
    s(:send,
      s(:const, nil, :ARGF), :each),
    s(:args,
      s(:arg, :line)),
    s(:case,
      s(:lvar, :line),
      s(:when,
        s(:regexp,
          s(:str, "RIPPER_PARAMS_DECL_BEGIN"),
          s(:regopt)),
        s(:lvasgn, :off,
          s(:false))),
      s(:when,
        s(:regexp,
          s(:str, "RIPPER_PARAMS_DECL_END"),
          s(:regopt)),
        s(:send, nil, :exit)),
      s(:when,
        s(:regexp,
          s(:str, "ripper"),
          s(:regopt)),
        s(:begin,
          s(:if,
            s(:lvar, :off),
            s(:next), nil),
          s(:or,
            s(:lvasgn, :var,
              s(:send,
                s(:send,
                  s(:lvar, :line), :scan,
                  s(:regexp,
                    s(:str, "\\w+"),
                    s(:regopt))), :last)),
            s(:next)),
          s(:lvasgn, :base,
            s(:send,
              s(:lvar, :var), :sub,
              s(:regexp,
                s(:str, "ripper_"),
                s(:regopt)),
              s(:str, ""))),
          s(:send, nil, :puts,
            s(:dstr,
              s(:str, "#define "),
              s(:begin,
                s(:lvar, :base)),
              s(:str, "\t\t(parser->ripper_"),
              s(:begin,
                s(:lvar, :base)),
              s(:str, ")"))))), nil)))
