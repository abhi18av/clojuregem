s(:module,
  s(:const,
    s(:const, nil, :OpenSSL), :Buffering),
  s(:begin,
    s(:send, nil, :include,
      s(:const, nil, :Enumerable)),
    s(:send, nil, :attr_accessor,
      s(:sym, :sync)),
    s(:casgn, nil, :BLOCK_SIZE,
      s(:send,
        s(:int, 1024), :*,
        s(:int, 16))),
    s(:def, :initialize,
      s(:args,
        s(:restarg)),
      s(:begin,
        s(:zsuper),
        s(:ivasgn, :@eof,
          s(:false)),
        s(:ivasgn, :@rbuffer,
          s(:str, "")),
        s(:ivasgn, :@sync,
          s(:send,
            s(:ivar, :@io), :sync)))),
    s(:send, nil, :private),
    s(:def, :fill_rbuff,
      s(:args),
      s(:kwbegin,
        s(:rescue,
          s(:send,
            s(:ivar, :@rbuffer), :<<,
            s(:send,
              s(:self), :sysread,
              s(:const, nil, :BLOCK_SIZE))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Errno), :EAGAIN)), nil,
            s(:retry)),
          s(:resbody,
            s(:array,
              s(:const, nil, :EOFError)), nil,
            s(:ivasgn, :@eof,
              s(:true))), nil))),
    s(:def, :consume_rbuff,
      s(:args,
        s(:optarg, :size,
          s(:nil))),
      s(:if,
        s(:send,
          s(:ivar, :@rbuffer), :empty?),
        s(:nil),
        s(:begin,
          s(:if,
            s(:lvar, :size), nil,
            s(:lvasgn, :size,
              s(:send,
                s(:ivar, :@rbuffer), :size))),
          s(:lvasgn, :ret,
            s(:send,
              s(:ivar, :@rbuffer), :[],
              s(:int, 0),
              s(:lvar, :size))),
          s(:send,
            s(:ivar, :@rbuffer), :[]=,
            s(:int, 0),
            s(:lvar, :size),
            s(:str, "")),
          s(:lvar, :ret)))),
    s(:send, nil, :public),
    s(:def, :read,
      s(:args,
        s(:optarg, :size,
          s(:nil)),
        s(:optarg, :buf,
          s(:nil))),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :size), :==,
            s(:int, 0)),
          s(:if,
            s(:lvar, :buf),
            s(:begin,
              s(:send,
                s(:lvar, :buf), :clear),
              s(:return,
                s(:lvar, :buf))),
            s(:return,
              s(:str, ""))), nil),
        s(:until,
          s(:ivar, :@eof),
          s(:begin,
            s(:if,
              s(:and,
                s(:lvar, :size),
                s(:send,
                  s(:lvar, :size), :<=,
                  s(:send,
                    s(:ivar, :@rbuffer), :size))),
              s(:break), nil),
            s(:send, nil, :fill_rbuff))),
        s(:lvasgn, :ret,
          s(:or,
            s(:send, nil, :consume_rbuff,
              s(:lvar, :size)),
            s(:str, ""))),
        s(:if,
          s(:lvar, :buf),
          s(:begin,
            s(:send,
              s(:lvar, :buf), :replace,
              s(:lvar, :ret)),
            s(:lvasgn, :ret,
              s(:lvar, :buf))), nil),
        s(:if,
          s(:begin,
            s(:and,
              s(:lvar, :size),
              s(:send,
                s(:lvar, :ret), :empty?))),
          s(:nil),
          s(:lvar, :ret)))),
    s(:def, :readpartial,
      s(:args,
        s(:arg, :maxlen),
        s(:optarg, :buf,
          s(:nil))),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :maxlen), :==,
            s(:int, 0)),
          s(:if,
            s(:lvar, :buf),
            s(:begin,
              s(:send,
                s(:lvar, :buf), :clear),
              s(:return,
                s(:lvar, :buf))),
            s(:return,
              s(:str, ""))), nil),
        s(:if,
          s(:send,
            s(:ivar, :@rbuffer), :empty?),
          s(:kwbegin,
            s(:rescue,
              s(:return,
                s(:send, nil, :sysread,
                  s(:lvar, :maxlen),
                  s(:lvar, :buf))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Errno), :EAGAIN)), nil,
                s(:retry)), nil)), nil),
        s(:lvasgn, :ret,
          s(:send, nil, :consume_rbuff,
            s(:lvar, :maxlen))),
        s(:if,
          s(:lvar, :buf),
          s(:begin,
            s(:send,
              s(:lvar, :buf), :replace,
              s(:lvar, :ret)),
            s(:lvasgn, :ret,
              s(:lvar, :buf))), nil),
        s(:if,
          s(:send,
            s(:lvar, :ret), :empty?),
          s(:send, nil, :raise,
            s(:const, nil, :EOFError)), nil),
        s(:lvar, :ret))),
    s(:def, :read_nonblock,
      s(:args,
        s(:arg, :maxlen),
        s(:optarg, :buf,
          s(:nil)),
        s(:kwoptarg, :exception,
          s(:true))),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :maxlen), :==,
            s(:int, 0)),
          s(:if,
            s(:lvar, :buf),
            s(:begin,
              s(:send,
                s(:lvar, :buf), :clear),
              s(:return,
                s(:lvar, :buf))),
            s(:return,
              s(:str, ""))), nil),
        s(:if,
          s(:send,
            s(:ivar, :@rbuffer), :empty?),
          s(:return,
            s(:send, nil, :sysread_nonblock,
              s(:lvar, :maxlen),
              s(:lvar, :buf),
              s(:hash,
                s(:pair,
                  s(:sym, :exception),
                  s(:lvar, :exception))))), nil),
        s(:lvasgn, :ret,
          s(:send, nil, :consume_rbuff,
            s(:lvar, :maxlen))),
        s(:if,
          s(:lvar, :buf),
          s(:begin,
            s(:send,
              s(:lvar, :buf), :replace,
              s(:lvar, :ret)),
            s(:lvasgn, :ret,
              s(:lvar, :buf))), nil),
        s(:if,
          s(:send,
            s(:lvar, :ret), :empty?),
          s(:send, nil, :raise,
            s(:const, nil, :EOFError)), nil),
        s(:lvar, :ret))),
    s(:def, :gets,
      s(:args,
        s(:optarg, :eol,
          s(:gvar, :$/)),
        s(:optarg, :limit,
          s(:nil))),
      s(:begin,
        s(:lvasgn, :idx,
          s(:send,
            s(:ivar, :@rbuffer), :index,
            s(:lvar, :eol))),
        s(:until,
          s(:ivar, :@eof),
          s(:begin,
            s(:if,
              s(:lvar, :idx),
              s(:break), nil),
            s(:send, nil, :fill_rbuff),
            s(:lvasgn, :idx,
              s(:send,
                s(:ivar, :@rbuffer), :index,
                s(:lvar, :eol))))),
        s(:if,
          s(:send,
            s(:lvar, :eol), :is_a?,
            s(:const, nil, :Regexp)),
          s(:lvasgn, :size,
            s(:if,
              s(:lvar, :idx),
              s(:send,
                s(:lvar, :idx), :+,
                s(:send,
                  s(:back_ref, :$&), :size)),
              s(:nil))),
          s(:lvasgn, :size,
            s(:if,
              s(:lvar, :idx),
              s(:send,
                s(:lvar, :idx), :+,
                s(:send,
                  s(:lvar, :eol), :size)),
              s(:nil)))),
        s(:if,
          s(:and,
            s(:and,
              s(:lvar, :size),
              s(:lvar, :limit)),
            s(:send,
              s(:lvar, :limit), :>=,
              s(:int, 0))),
          s(:lvasgn, :size,
            s(:send,
              s(:array,
                s(:lvar, :size),
                s(:lvar, :limit)), :min)), nil),
        s(:send, nil, :consume_rbuff,
          s(:lvar, :size)))),
    s(:def, :each,
      s(:args,
        s(:optarg, :eol,
          s(:gvar, :$/))),
      s(:while,
        s(:lvasgn, :line,
          s(:send,
            s(:self), :gets,
            s(:lvar, :eol))),
        s(:yield,
          s(:lvar, :line)))),
    s(:alias,
      s(:sym, :each_line),
      s(:sym, :each)),
    s(:def, :readlines,
      s(:args,
        s(:optarg, :eol,
          s(:gvar, :$/))),
      s(:begin,
        s(:lvasgn, :ary,
          s(:array)),
        s(:while,
          s(:lvasgn, :line,
            s(:send,
              s(:self), :gets,
              s(:lvar, :eol))),
          s(:send,
            s(:lvar, :ary), :<<,
            s(:lvar, :line))),
        s(:lvar, :ary))),
    s(:def, :readline,
      s(:args,
        s(:optarg, :eol,
          s(:gvar, :$/))),
      s(:begin,
        s(:if,
          s(:send, nil, :eof?),
          s(:send, nil, :raise,
            s(:const, nil, :EOFError)), nil),
        s(:send, nil, :gets,
          s(:lvar, :eol)))),
    s(:def, :getc,
      s(:args),
      s(:send, nil, :read,
        s(:int, 1))),
    s(:def, :each_byte,
      s(:args),
      s(:while,
        s(:lvasgn, :c,
          s(:send, nil, :getc)),
        s(:yield,
          s(:send,
            s(:lvar, :c), :ord)))),
    s(:def, :readchar,
      s(:args),
      s(:begin,
        s(:if,
          s(:send, nil, :eof?),
          s(:send, nil, :raise,
            s(:const, nil, :EOFError)), nil),
        s(:send, nil, :getc))),
    s(:def, :ungetc,
      s(:args,
        s(:arg, :c)),
      s(:send,
        s(:ivar, :@rbuffer), :[]=,
        s(:int, 0),
        s(:int, 0),
        s(:send,
          s(:lvar, :c), :chr))),
    s(:def, :eof?,
      s(:args),
      s(:begin,
        s(:if,
          s(:and,
            s(:send,
              s(:ivar, :@eof), :!),
            s(:send,
              s(:ivar, :@rbuffer), :empty?)),
          s(:send, nil, :fill_rbuff), nil),
        s(:and,
          s(:ivar, :@eof),
          s(:send,
            s(:ivar, :@rbuffer), :empty?)))),
    s(:alias,
      s(:sym, :eof),
      s(:sym, :eof?)),
    s(:send, nil, :private),
    s(:def, :do_write,
      s(:args,
        s(:arg, :s)),
      s(:begin,
        s(:if,
          s(:defined?,
            s(:ivar, :@wbuffer)), nil,
          s(:ivasgn, :@wbuffer,
            s(:str, ""))),
        s(:send,
          s(:ivar, :@wbuffer), :<<,
          s(:lvar, :s)),
        s(:send,
          s(:ivar, :@wbuffer), :force_encoding,
          s(:const,
            s(:const, nil, :Encoding), :BINARY)),
        s(:or_asgn,
          s(:ivasgn, :@sync),
          s(:false)),
        s(:if,
          s(:or,
            s(:or,
              s(:ivar, :@sync),
              s(:send,
                s(:send,
                  s(:ivar, :@wbuffer), :size), :>,
                s(:const, nil, :BLOCK_SIZE))),
            s(:lvasgn, :idx,
              s(:send,
                s(:ivar, :@wbuffer), :rindex,
                s(:gvar, :$/)))),
          s(:begin,
            s(:lvasgn, :remain,
              s(:if,
                s(:lvar, :idx),
                s(:send,
                  s(:lvar, :idx), :+,
                  s(:send,
                    s(:gvar, :$/), :size)),
                s(:send,
                  s(:ivar, :@wbuffer), :length))),
            s(:lvasgn, :nwritten,
              s(:int, 0)),
            s(:while,
              s(:send,
                s(:lvar, :remain), :>,
                s(:int, 0)),
              s(:begin,
                s(:lvasgn, :str,
                  s(:send,
                    s(:ivar, :@wbuffer), :[],
                    s(:lvar, :nwritten),
                    s(:lvar, :remain))),
                s(:kwbegin,
                  s(:rescue,
                    s(:lvasgn, :nwrote,
                      s(:send, nil, :syswrite,
                        s(:lvar, :str))),
                    s(:resbody,
                      s(:array,
                        s(:const,
                          s(:const, nil, :Errno), :EAGAIN)), nil,
                      s(:retry)), nil)),
                s(:op_asgn,
                  s(:lvasgn, :remain), :-,
                  s(:lvar, :nwrote)),
                s(:op_asgn,
                  s(:lvasgn, :nwritten), :+,
                  s(:lvar, :nwrote)))),
            s(:send,
              s(:ivar, :@wbuffer), :[]=,
              s(:int, 0),
              s(:lvar, :nwritten),
              s(:str, ""))), nil))),
    s(:send, nil, :public),
    s(:def, :write,
      s(:args,
        s(:arg, :s)),
      s(:begin,
        s(:send, nil, :do_write,
          s(:lvar, :s)),
        s(:send,
          s(:lvar, :s), :bytesize))),
    s(:def, :write_nonblock,
      s(:args,
        s(:arg, :s),
        s(:kwoptarg, :exception,
          s(:true))),
      s(:begin,
        s(:send, nil, :flush),
        s(:send, nil, :syswrite_nonblock,
          s(:lvar, :s),
          s(:hash,
            s(:pair,
              s(:sym, :exception),
              s(:lvar, :exception)))))),
    s(:def, :<<,
      s(:args,
        s(:arg, :s)),
      s(:begin,
        s(:send, nil, :do_write,
          s(:lvar, :s)),
        s(:self))),
    s(:def, :puts,
      s(:args,
        s(:restarg, :args)),
      s(:begin,
        s(:lvasgn, :s,
          s(:str, "")),
        s(:if,
          s(:send,
            s(:lvar, :args), :empty?),
          s(:send,
            s(:lvar, :s), :<<,
            s(:str, "\n")), nil),
        s(:block,
          s(:send,
            s(:lvar, :args), :each),
          s(:args,
            s(:arg, :arg)),
          s(:begin,
            s(:send,
              s(:lvar, :s), :<<,
              s(:send,
                s(:lvar, :arg), :to_s)),
            s(:if,
              s(:and,
                s(:gvar, :$/),
                s(:send,
                  s(:regexp,
                    s(:str, "\\n\\z"),
                    s(:regopt)), :!~,
                  s(:lvar, :s))),
              s(:send,
                s(:lvar, :s), :<<,
                s(:str, "\n")), nil))),
        s(:send, nil, :do_write,
          s(:lvar, :s)),
        s(:nil))),
    s(:def, :print,
      s(:args,
        s(:restarg, :args)),
      s(:begin,
        s(:lvasgn, :s,
          s(:str, "")),
        s(:block,
          s(:send,
            s(:lvar, :args), :each),
          s(:args,
            s(:arg, :arg)),
          s(:send,
            s(:lvar, :s), :<<,
            s(:send,
              s(:lvar, :arg), :to_s))),
        s(:send, nil, :do_write,
          s(:lvar, :s)),
        s(:nil))),
    s(:def, :printf,
      s(:args,
        s(:arg, :s),
        s(:restarg, :args)),
      s(:begin,
        s(:send, nil, :do_write,
          s(:send,
            s(:lvar, :s), :%,
            s(:lvar, :args))),
        s(:nil))),
    s(:def, :flush,
      s(:args),
      s(:ensure,
        s(:begin,
          s(:lvasgn, :osync,
            s(:ivar, :@sync)),
          s(:ivasgn, :@sync,
            s(:true)),
          s(:send, nil, :do_write,
            s(:str, "")),
          s(:return,
            s(:self))),
        s(:ivasgn, :@sync,
          s(:lvar, :osync)))),
    s(:def, :close,
      s(:args),
      s(:begin,
        s(:rescue,
          s(:send, nil, :flush),
          s(:resbody, nil, nil,
            s(:nil)), nil),
        s(:send, nil, :sysclose)))))
