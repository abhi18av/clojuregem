s(:module,
  s(:const, nil, :OpenSSL),
  s(:module,
    s(:const, nil, :X509),
    s(:begin,
      s(:class,
        s(:const, nil, :ExtensionFactory), nil,
        s(:begin,
          s(:def, :create_extension,
            s(:args,
              s(:restarg, :arg)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :arg), :size), :>,
                s(:int, 1)),
              s(:send, nil, :create_ext,
                s(:splat,
                  s(:lvar, :arg))),
              s(:send, nil, :send,
                s(:send,
                  s(:str, "create_ext_from_"), :+,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :arg), :[],
                          s(:int, 0)), :class), :name), :downcase)),
                s(:send,
                  s(:lvar, :arg), :[],
                  s(:int, 0))))),
          s(:def, :create_ext_from_array,
            s(:args,
              s(:arg, :ary)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :ary), :size), :>,
                  s(:int, 3)),
                s(:send, nil, :raise,
                  s(:const, nil, :ExtensionError),
                  s(:str, "unexpected array form")), nil),
              s(:send, nil, :create_ext,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2))))),
          s(:def, :create_ext_from_string,
            s(:args,
              s(:arg, :str)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :oid),
                  s(:lvasgn, :value)),
                s(:send,
                  s(:lvar, :str), :split,
                  s(:regexp,
                    s(:str, "="),
                    s(:regopt)),
                  s(:int, 2))),
              s(:send,
                s(:lvar, :oid), :strip!),
              s(:send,
                s(:lvar, :value), :strip!),
              s(:send, nil, :create_ext,
                s(:lvar, :oid),
                s(:lvar, :value)))),
          s(:def, :create_ext_from_hash,
            s(:args,
              s(:arg, :hash)),
            s(:send, nil, :create_ext,
              s(:send,
                s(:lvar, :hash), :[],
                s(:str, "oid")),
              s(:send,
                s(:lvar, :hash), :[],
                s(:str, "value")),
              s(:send,
                s(:lvar, :hash), :[],
                s(:str, "critical")))))),
      s(:class,
        s(:const, nil, :Extension), nil,
        s(:begin,
          s(:def, :to_s,
            s(:args),
            s(:begin,
              s(:lvasgn, :str,
                s(:send,
                  s(:self), :oid)),
              s(:send,
                s(:lvar, :str), :<<,
                s(:str, " = ")),
              s(:if,
                s(:send,
                  s(:self), :critical?),
                s(:send,
                  s(:lvar, :str), :<<,
                  s(:str, "critical, ")), nil),
              s(:send,
                s(:lvar, :str), :<<,
                s(:send,
                  s(:send,
                    s(:self), :value), :gsub,
                  s(:regexp,
                    s(:str, "\\n"),
                    s(:regopt)),
                  s(:str, ", "))))),
          s(:def, :to_h,
            s(:args),
            s(:hash,
              s(:pair,
                s(:str, "oid"),
                s(:send,
                  s(:self), :oid)),
              s(:pair,
                s(:str, "value"),
                s(:send,
                  s(:self), :value)),
              s(:pair,
                s(:str, "critical"),
                s(:send,
                  s(:self), :critical?)))),
          s(:def, :to_a,
            s(:args),
            s(:array,
              s(:send,
                s(:self), :oid),
              s(:send,
                s(:self), :value),
              s(:send,
                s(:self), :critical?))))),
      s(:class,
        s(:const, nil, :Name), nil,
        s(:begin,
          s(:module,
            s(:const, nil, :RFC2253DN),
            s(:begin,
              s(:casgn, nil, :Special,
                s(:str, ",=+<>#;")),
              s(:casgn, nil, :HexChar,
                s(:regexp,
                  s(:str, "[0-9a-fA-F]"),
                  s(:regopt))),
              s(:casgn, nil, :HexPair,
                s(:regexp,
                  s(:begin,
                    s(:const, nil, :HexChar)),
                  s(:begin,
                    s(:const, nil, :HexChar)),
                  s(:regopt))),
              s(:casgn, nil, :HexString,
                s(:regexp,
                  s(:begin,
                    s(:const, nil, :HexPair)),
                  s(:str, "+"),
                  s(:regopt))),
              s(:casgn, nil, :Pair,
                s(:regexp,
                  s(:str, "\\\\(?:["),
                  s(:begin,
                    s(:const, nil, :Special)),
                  s(:str, "]|\\\\|\"|"),
                  s(:begin,
                    s(:const, nil, :HexPair)),
                  s(:str, ")"),
                  s(:regopt))),
              s(:casgn, nil, :StringChar,
                s(:regexp,
                  s(:str, "[^\\\\\""),
                  s(:begin,
                    s(:const, nil, :Special)),
                  s(:str, "]"),
                  s(:regopt))),
              s(:casgn, nil, :QuoteChar,
                s(:regexp,
                  s(:str, "[^\\\\\"]"),
                  s(:regopt))),
              s(:casgn, nil, :AttributeType,
                s(:regexp,
                  s(:str, "[a-zA-Z][0-9a-zA-Z]*|[0-9]+(?:\\.[0-9]+)*"),
                  s(:regopt))),
              s(:casgn, nil, :AttributeValue,
                s(:regexp,
                  s(:str, "\n"),
                  s(:str, "          (?![\"#])((?:"),
                  s(:begin,
                    s(:const, nil, :StringChar)),
                  s(:str, "|"),
                  s(:begin,
                    s(:const, nil, :Pair)),
                  s(:str, ")*)|\n"),
                  s(:str, "          \\#("),
                  s(:begin,
                    s(:const, nil, :HexString)),
                  s(:str, ")|\n"),
                  s(:str, "          \"((?:"),
                  s(:begin,
                    s(:const, nil, :QuoteChar)),
                  s(:str, "|"),
                  s(:begin,
                    s(:const, nil, :Pair)),
                  s(:str, ")*)\"\n"),
                  s(:str, "        "),
                  s(:regopt, :x))),
              s(:casgn, nil, :TypeAndValue,
                s(:regexp,
                  s(:str, "\\A("),
                  s(:begin,
                    s(:const, nil, :AttributeType)),
                  s(:str, ")="),
                  s(:begin,
                    s(:const, nil, :AttributeValue)),
                  s(:regopt))),
              s(:send, nil, :module_function),
              s(:def, :expand_pair,
                s(:args,
                  s(:arg, :str)),
                s(:begin,
                  s(:if,
                    s(:lvar, :str), nil,
                    s(:return,
                      s(:nil))),
                  s(:return,
                    s(:block,
                      s(:send,
                        s(:lvar, :str), :gsub,
                        s(:const, nil, :Pair)),
                      s(:args),
                      s(:begin,
                        s(:lvasgn, :pair,
                          s(:back_ref, :$&)),
                        s(:case,
                          s(:send,
                            s(:lvar, :pair), :size),
                          s(:when,
                            s(:int, 2),
                            s(:send,
                              s(:lvar, :pair), :[],
                              s(:int, 1),
                              s(:int, 1))),
                          s(:when,
                            s(:int, 3),
                            s(:send,
                              s(:send, nil, :Integer,
                                s(:dstr,
                                  s(:str, "0x"),
                                  s(:begin,
                                    s(:send,
                                      s(:lvar, :pair), :[],
                                      s(:int, 1),
                                      s(:int, 2))))), :chr)),
                          s(:send, nil, :raise,
                            s(:const,
                              s(:const,
                                s(:const, nil, :OpenSSL), :X509), :NameError),
                            s(:dstr,
                              s(:str, "invalid pair: "),
                              s(:begin,
                                s(:lvar, :str)))))))))),
              s(:def, :expand_hexstring,
                s(:args,
                  s(:arg, :str)),
                s(:begin,
                  s(:if,
                    s(:lvar, :str), nil,
                    s(:return,
                      s(:nil))),
                  s(:lvasgn, :der,
                    s(:block,
                      s(:send,
                        s(:lvar, :str), :gsub,
                        s(:const, nil, :HexPair)),
                      s(:args),
                      s(:send,
                        s(:send,
                          s(:back_ref, :$&), :to_i,
                          s(:int, 16)), :chr))),
                  s(:lvasgn, :a1,
                    s(:send,
                      s(:const,
                        s(:const, nil, :OpenSSL), :ASN1), :decode,
                      s(:lvar, :der))),
                  s(:return,
                    s(:send,
                      s(:lvar, :a1), :value),
                    s(:send,
                      s(:lvar, :a1), :tag)))),
              s(:def, :expand_value,
                s(:args,
                  s(:arg, :str1),
                  s(:arg, :str2),
                  s(:arg, :str3)),
                s(:begin,
                  s(:lvasgn, :value,
                    s(:send, nil, :expand_pair,
                      s(:lvar, :str1))),
                  s(:if,
                    s(:lvar, :value), nil,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :value),
                        s(:lvasgn, :tag)),
                      s(:send, nil, :expand_hexstring,
                        s(:lvar, :str2)))),
                  s(:if,
                    s(:lvar, :value), nil,
                    s(:lvasgn, :value,
                      s(:send, nil, :expand_pair,
                        s(:lvar, :str3)))),
                  s(:return,
                    s(:lvar, :value),
                    s(:lvar, :tag)))),
              s(:def, :scan,
                s(:args,
                  s(:arg, :dn)),
                s(:begin,
                  s(:lvasgn, :str,
                    s(:lvar, :dn)),
                  s(:lvasgn, :ary,
                    s(:array)),
                  s(:while,
                    s(:true),
                    s(:begin,
                      s(:if,
                        s(:lvasgn, :md,
                          s(:send,
                            s(:const, nil, :TypeAndValue), :match,
                            s(:lvar, :str))),
                        s(:begin,
                          s(:lvasgn, :remain,
                            s(:send,
                              s(:lvar, :md), :post_match)),
                          s(:lvasgn, :type,
                            s(:send,
                              s(:lvar, :md), :[],
                              s(:int, 1))),
                          s(:rescue,
                            s(:masgn,
                              s(:mlhs,
                                s(:lvasgn, :value),
                                s(:lvasgn, :tag)),
                              s(:send, nil, :expand_value,
                                s(:send,
                                  s(:lvar, :md), :[],
                                  s(:int, 2)),
                                s(:send,
                                  s(:lvar, :md), :[],
                                  s(:int, 3)),
                                s(:send,
                                  s(:lvar, :md), :[],
                                  s(:int, 4)))),
                            s(:resbody, nil, nil,
                              s(:nil)), nil),
                          s(:if,
                            s(:lvar, :value),
                            s(:begin,
                              s(:lvasgn, :type_and_value,
                                s(:array,
                                  s(:lvar, :type),
                                  s(:lvar, :value))),
                              s(:if,
                                s(:lvar, :tag),
                                s(:send,
                                  s(:lvar, :type_and_value), :push,
                                  s(:lvar, :tag)), nil),
                              s(:send,
                                s(:lvar, :ary), :unshift,
                                s(:lvar, :type_and_value)),
                              s(:if,
                                s(:and,
                                  s(:send,
                                    s(:send,
                                      s(:lvar, :remain), :length), :>,
                                    s(:int, 2)),
                                  s(:send,
                                    s(:send,
                                      s(:lvar, :remain), :[],
                                      s(:int, 0)), :==,
                                    s(:str, ","))),
                                s(:begin,
                                  s(:lvasgn, :str,
                                    s(:send,
                                      s(:lvar, :remain), :[],
                                      s(:irange,
                                        s(:int, 1),
                                        s(:int, -1)))),
                                  s(:next)),
                                s(:if,
                                  s(:and,
                                    s(:send,
                                      s(:send,
                                        s(:lvar, :remain), :length), :>,
                                      s(:int, 2)),
                                    s(:send,
                                      s(:send,
                                        s(:lvar, :remain), :[],
                                        s(:int, 0)), :==,
                                      s(:str, "+"))),
                                  s(:send, nil, :raise,
                                    s(:const,
                                      s(:const,
                                        s(:const, nil, :OpenSSL), :X509), :NameError),
                                    s(:dstr,
                                      s(:str, "multi-valued RDN is not supported: "),
                                      s(:begin,
                                        s(:lvar, :dn)))),
                                  s(:if,
                                    s(:send,
                                      s(:lvar, :remain), :empty?),
                                    s(:break), nil)))), nil)), nil),
                      s(:lvasgn, :msg_dn,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :dn), :[],
                              s(:int, 0),
                              s(:send,
                                s(:send,
                                  s(:lvar, :dn), :length), :-,
                                s(:send,
                                  s(:lvar, :str), :length))), :+,
                            s(:str, " =>")), :+,
                          s(:lvar, :str))),
                      s(:send, nil, :raise,
                        s(:const,
                          s(:const,
                            s(:const, nil, :OpenSSL), :X509), :NameError),
                        s(:dstr,
                          s(:str, "malformed RDN: "),
                          s(:begin,
                            s(:lvar, :msg_dn)))))),
                  s(:return,
                    s(:lvar, :ary)))))),
          s(:sclass,
            s(:self),
            s(:begin,
              s(:def, :parse_rfc2253,
                s(:args,
                  s(:arg, :str),
                  s(:optarg, :template,
                    s(:const, nil, :OBJECT_TYPE_TEMPLATE))),
                s(:begin,
                  s(:lvasgn, :ary,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const, nil, :OpenSSL), :X509), :Name), :RFC2253DN), :scan,
                      s(:lvar, :str))),
                  s(:send,
                    s(:self), :new,
                    s(:lvar, :ary),
                    s(:lvar, :template)))),
              s(:def, :parse_openssl,
                s(:args,
                  s(:arg, :str),
                  s(:optarg, :template,
                    s(:const, nil, :OBJECT_TYPE_TEMPLATE))),
                s(:begin,
                  s(:lvasgn, :ary,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :str), :scan,
                          s(:regexp,
                            s(:str, "\\s*([^/,]+)\\s*"),
                            s(:regopt))), :collect),
                      s(:args,
                        s(:arg, :i)),
                      s(:send,
                        s(:send,
                          s(:lvar, :i), :[],
                          s(:int, 0)), :split,
                        s(:str, "="),
                        s(:int, 2)))),
                  s(:send,
                    s(:self), :new,
                    s(:lvar, :ary),
                    s(:lvar, :template)))),
              s(:alias,
                s(:sym, :parse),
                s(:sym, :parse_openssl)))),
          s(:def, :pretty_print,
            s(:args,
              s(:arg, :q)),
            s(:block,
              s(:send,
                s(:lvar, :q), :object_group,
                s(:self)),
              s(:args),
              s(:begin,
                s(:send,
                  s(:lvar, :q), :text,
                  s(:str, " ")),
                s(:send,
                  s(:lvar, :q), :text,
                  s(:send, nil, :to_s,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :X509), :Name), :RFC2253)))))))),
      s(:class,
        s(:const, nil, :StoreContext), nil,
        s(:def, :cleanup,
          s(:args),
          s(:if,
            s(:gvar, :$VERBOSE),
            s(:send, nil, :warn,
              s(:dstr,
                s(:str, "("),
                s(:begin,
                  s(:send,
                    s(:send, nil, :caller), :first)),
                s(:str, ") OpenSSL::X509::StoreContext#cleanup is deprecated with no replacement"))), nil))),
      s(:class,
        s(:const, nil, :Certificate), nil,
        s(:def, :pretty_print,
          s(:args,
            s(:arg, :q)),
          s(:block,
            s(:send,
              s(:lvar, :q), :object_group,
              s(:self)),
            s(:args),
            s(:begin,
              s(:send,
                s(:lvar, :q), :breakable),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, "subject=")),
              s(:send,
                s(:lvar, :q), :pp,
                s(:send,
                  s(:self), :subject)),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, ",")),
              s(:send,
                s(:lvar, :q), :breakable),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, "issuer=")),
              s(:send,
                s(:lvar, :q), :pp,
                s(:send,
                  s(:self), :issuer)),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, ",")),
              s(:send,
                s(:lvar, :q), :breakable),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, "serial=")),
              s(:send,
                s(:lvar, :q), :pp,
                s(:send,
                  s(:self), :serial)),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, ",")),
              s(:send,
                s(:lvar, :q), :breakable),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, "not_before=")),
              s(:send,
                s(:lvar, :q), :pp,
                s(:send,
                  s(:self), :not_before)),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, ",")),
              s(:send,
                s(:lvar, :q), :breakable),
              s(:send,
                s(:lvar, :q), :text,
                s(:str, "not_after=")),
              s(:send,
                s(:lvar, :q), :pp,
                s(:send,
                  s(:self), :not_after)))))))))
