s(:begin,
  s(:if,
    s(:gvar, :$VERBOSE),
    s(:send, nil, :warn,
      s(:dstr,
        s(:str, "Warning:"),
        s(:begin,
          s(:send,
            s(:send,
              s(:send, nil, :caller), :[],
              s(:int, 0)), :sub,
            s(:regexp,
              s(:str, ":in `.*'\\z"),
              s(:regopt)),
            s(:str, ""))),
        s(:str, ": Win32API is deprecated after Ruby 1.9.1; use fiddle directly instead"))), nil),
  s(:send, nil, :require,
    s(:str, "fiddle/import")),
  s(:class,
    s(:const, nil, :Win32API), nil,
    s(:begin,
      s(:casgn, nil, :DLL,
        s(:hash)),
      s(:casgn, nil, :TYPEMAP,
        s(:hash,
          s(:pair,
            s(:str, "0"),
            s(:const,
              s(:const, nil, :Fiddle), :TYPE_VOID)),
          s(:pair,
            s(:str, "S"),
            s(:const,
              s(:const, nil, :Fiddle), :TYPE_VOIDP)),
          s(:pair,
            s(:str, "I"),
            s(:const,
              s(:const, nil, :Fiddle), :TYPE_LONG)))),
      s(:casgn, nil, :POINTER_TYPE,
        s(:if,
          s(:send,
            s(:const,
              s(:const, nil, :Fiddle), :SIZEOF_VOIDP), :==,
            s(:const,
              s(:const, nil, :Fiddle), :SIZEOF_LONG_LONG)),
          s(:str, "q*"),
          s(:str, "l!*"))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :dllname),
          s(:arg, :func),
          s(:arg, :import),
          s(:optarg, :export,
            s(:str, "0")),
          s(:optarg, :calltype,
            s(:sym, :stdcall))),
        s(:rescue,
          s(:begin,
            s(:ivasgn, :@proto,
              s(:send,
                s(:send,
                  s(:send,
                    s(:array,
                      s(:lvar, :import)), :join), :tr,
                  s(:str, "VPpNnLlIi"),
                  s(:str, "0SSI")), :sub,
                s(:regexp,
                  s(:str, "^(.)0*$"),
                  s(:regopt)),
                s(:str, "\\1"))),
            s(:lvasgn, :handle,
              s(:or_asgn,
                s(:send,
                  s(:const, nil, :DLL), :[],
                  s(:lvar, :dllname)),
                s(:send,
                  s(:const, nil, :Fiddle), :dlopen,
                  s(:lvar, :dllname)))),
            s(:ivasgn, :@func,
              s(:send,
                s(:const,
                  s(:const, nil, :Fiddle), :Function), :new,
                s(:send,
                  s(:lvar, :handle), :[],
                  s(:lvar, :func)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@proto), :chars), :map),
                  s(:args,
                    s(:arg, :win_type)),
                  s(:send,
                    s(:const, nil, :TYPEMAP), :[],
                    s(:send,
                      s(:lvar, :win_type), :tr,
                      s(:str, "VPpNnLlIi"),
                      s(:str, "0SSI")))),
                s(:send,
                  s(:const, nil, :TYPEMAP), :[],
                  s(:send,
                    s(:lvar, :export), :tr,
                    s(:str, "VPpNnLlIi"),
                    s(:str, "0SSI"))),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Fiddle), :Importer), :const_get,
                    s(:sym, :CALL_TYPE_TO_ABI)), :[],
                  s(:lvar, :calltype))))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :Fiddle), :DLError)),
            s(:lvasgn, :e),
            s(:send, nil, :raise,
              s(:const, nil, :LoadError),
              s(:send,
                s(:lvar, :e), :message),
              s(:send,
                s(:lvar, :e), :backtrace))), nil)),
      s(:def, :call,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :import,
            s(:send,
              s(:ivar, :@proto), :split,
              s(:str, ""))),
          s(:block,
            s(:send,
              s(:lvar, :args), :each_with_index),
            s(:args,
              s(:arg, :x),
              s(:arg, :i)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :import), :[],
                    s(:lvar, :i)), :==,
                  s(:str, "S")),
                s(:masgn,
                  s(:mlhs,
                    s(:send,
                      s(:lvar, :args), :[]=,
                      s(:lvar, :i))),
                  s(:send,
                    s(:send,
                      s(:array,
                        s(:if,
                          s(:send,
                            s(:lvar, :x), :==,
                            s(:int, 0)),
                          s(:nil),
                          s(:lvar, :x))), :pack,
                      s(:str, "p")), :unpack,
                    s(:const, nil, :POINTER_TYPE))), nil),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :import), :[],
                    s(:lvar, :i)), :==,
                  s(:str, "I")),
                s(:masgn,
                  s(:mlhs,
                    s(:send,
                      s(:lvar, :args), :[]=,
                      s(:lvar, :i))),
                  s(:send,
                    s(:send,
                      s(:array,
                        s(:lvar, :x)), :pack,
                      s(:str, "I")), :unpack,
                    s(:str, "i"))), nil))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :ret)),
            s(:send,
              s(:ivar, :@func), :call,
              s(:splat,
                s(:lvar, :args)))),
          s(:return,
            s(:or,
              s(:lvar, :ret),
              s(:int, 0))))),
      s(:alias,
        s(:sym, :Call),
        s(:sym, :call)))))
