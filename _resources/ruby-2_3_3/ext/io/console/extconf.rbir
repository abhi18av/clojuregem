s(:begin,
  s(:send, nil, :require,
    s(:str, "mkmf")),
  s(:lvasgn, :ok,
    s(:true)),
  s(:lvasgn, :hdr,
    s(:nil)),
  s(:case, nil,
    s(:when,
      s(:send, nil, :macro_defined?,
        s(:str, "_WIN32"),
        s(:str, "")),
      s(:begin,
        s(:lvasgn, :vk_header,
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:dstr,
                s(:gvar, :$srcdir),
                s(:str, "/win32_vk.list"))),
            s(:str, "chksum"),
            s(:str, "inc"))),
        s(:lvasgn, :vk_header,
          s(:dstr,
            s(:begin,
              s(:if,
                s(:send,
                  s(:gvar, :$nmake), :==,
                  s(:str, "m")),
                s(:str, "{$(srcdir)}"), nil)),
            s(:str, "win32_vk."),
            s(:begin,
              s(:lvar, :vk_header)))))),
    s(:when,
      s(:lvasgn, :hdr,
        s(:block,
          s(:send,
            s(:array,
              s(:str, "termios.h"),
              s(:str, "termio.h")), :find),
          s(:args,
            s(:arg, :h)),
          s(:send, nil, :have_header,
            s(:lvar, :h)))),
      s(:send, nil, :have_func,
        s(:str, "cfmakeraw"),
        s(:lvar, :hdr))),
    s(:when,
      s(:send, nil, :have_header,
        s(:lvasgn, :hdr,
          s(:str, "sgtty.h"))),
      s(:block,
        s(:send,
          s(:array,
            s(:str, "stty"),
            s(:str, "gtty")), :each),
        s(:args,
          s(:arg, :f)),
        s(:send, nil, :have_func,
          s(:lvar, :f),
          s(:lvar, :hdr)))),
    s(:lvasgn, :ok,
      s(:false))),
  s(:if,
    s(:lvar, :ok),
    s(:begin,
      s(:if,
        s(:lvar, :hdr),
        s(:send, nil, :have_header,
          s(:str, "sys/ioctl.h")), nil),
      s(:send,
        s(:gvar, :$defs), :<<,
        s(:dstr,
          s(:str, "-D"),
          s(:str, "ENABLE_IO_GETPASS=1"))),
      s(:block,
        s(:send, nil, :create_makefile,
          s(:str, "io/console")),
        s(:args,
          s(:arg, :conf)),
        s(:send,
          s(:lvar, :conf), :<<,
          s(:dstr,
            s(:str, "\n"),
            s(:dstr,
              s(:str, "VK_HEADER = "),
              s(:begin,
                s(:lvar, :vk_header)),
              s(:str, "\n")))))), nil))
