s(:begin,
  s(:gvasgn, :$expect_verbose,
    s(:false)),
  s(:class,
    s(:const, nil, :IO), nil,
    s(:def, :expect,
      s(:args,
        s(:arg, :pat),
        s(:optarg, :timeout,
          s(:int, 9999999))),
      s(:begin,
        s(:lvasgn, :buf,
          s(:str, "")),
        s(:case,
          s(:lvar, :pat),
          s(:when,
            s(:const, nil, :String),
            s(:lvasgn, :e_pat,
              s(:send,
                s(:const, nil, :Regexp), :new,
                s(:send,
                  s(:const, nil, :Regexp), :quote,
                  s(:lvar, :pat))))),
          s(:when,
            s(:const, nil, :Regexp),
            s(:lvasgn, :e_pat,
              s(:lvar, :pat))),
          s(:send, nil, :raise,
            s(:const, nil, :TypeError),
            s(:dstr,
              s(:str, "unsupported pattern class: "),
              s(:begin,
                s(:send,
                  s(:lvar, :pat), :class))))),
        s(:or_asgn,
          s(:ivasgn, :@unusedBuf),
          s(:str, "")),
        s(:while,
          s(:true),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:ivar, :@unusedBuf), :empty?), :!),
              s(:lvasgn, :c,
                s(:send,
                  s(:send,
                    s(:ivar, :@unusedBuf), :slice!,
                    s(:int, 0)), :chr)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:send,
                      s(:const, nil, :IO), :select,
                      s(:array,
                        s(:self)),
                      s(:nil),
                      s(:nil),
                      s(:lvar, :timeout)), :!),
                  s(:send, nil, :eof?)),
                s(:begin,
                  s(:lvasgn, :result,
                    s(:nil)),
                  s(:ivasgn, :@unusedBuf,
                    s(:lvar, :buf)),
                  s(:break)),
                s(:lvasgn, :c,
                  s(:send,
                    s(:send, nil, :getc), :chr)))),
            s(:send,
              s(:lvar, :buf), :<<,
              s(:lvar, :c)),
            s(:if,
              s(:gvar, :$expect_verbose),
              s(:begin,
                s(:send,
                  s(:const, nil, :STDOUT), :print,
                  s(:lvar, :c)),
                s(:send,
                  s(:const, nil, :STDOUT), :flush)), nil),
            s(:if,
              s(:lvasgn, :mat,
                s(:send,
                  s(:lvar, :e_pat), :match,
                  s(:lvar, :buf))),
              s(:begin,
                s(:lvasgn, :result,
                  s(:array,
                    s(:lvar, :buf),
                    s(:splat,
                      s(:send,
                        s(:send,
                          s(:lvar, :mat), :to_a), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1)))))),
                s(:break)), nil))),
        s(:if,
          s(:send, nil, :block_given?),
          s(:yield,
            s(:lvar, :result)),
          s(:return,
            s(:lvar, :result))),
        s(:nil)))))
