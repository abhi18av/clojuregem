s(:begin,
  s(:send, nil, :require,
    s(:str, "bigdecimal")),
  s(:module,
    s(:const, nil, :LUSolve),
    s(:begin,
      s(:send, nil, :module_function),
      s(:def, :ludecomp,
        s(:args,
          s(:arg, :a),
          s(:arg, :n),
          s(:optarg, :zero,
            s(:int, 0)),
          s(:optarg, :one,
            s(:int, 1))),
        s(:begin,
          s(:lvasgn, :prec,
            s(:send,
              s(:const, nil, :BigDecimal), :limit,
              s(:nil))),
          s(:lvasgn, :ps,
            s(:array)),
          s(:lvasgn, :scales,
            s(:array)),
          s(:for,
            s(:lvasgn, :i),
            s(:erange,
              s(:int, 0),
              s(:lvar, :n)),
            s(:begin,
              s(:op_asgn,
                s(:lvasgn, :ps), :<<,
                s(:lvar, :i)),
              s(:lvasgn, :nrmrow,
                s(:lvar, :zero)),
              s(:lvasgn, :ixn,
                s(:send,
                  s(:lvar, :i), :*,
                  s(:lvar, :n))),
              s(:for,
                s(:lvasgn, :j),
                s(:erange,
                  s(:int, 0),
                  s(:lvar, :n)),
                s(:begin,
                  s(:lvasgn, :biggst,
                    s(:send,
                      s(:send,
                        s(:lvar, :a), :[],
                        s(:send,
                          s(:lvar, :ixn), :+,
                          s(:lvar, :j))), :abs)),
                  s(:if,
                    s(:send,
                      s(:lvar, :biggst), :>,
                      s(:lvar, :nrmrow)),
                    s(:lvasgn, :nrmrow,
                      s(:lvar, :biggst)), nil))),
              s(:if,
                s(:send,
                  s(:lvar, :nrmrow), :>,
                  s(:lvar, :zero)),
                s(:op_asgn,
                  s(:lvasgn, :scales), :<<,
                  s(:send,
                    s(:lvar, :one), :div,
                    s(:lvar, :nrmrow),
                    s(:lvar, :prec))),
                s(:send, nil, :raise,
                  s(:str, "Singular matrix"))))),
          s(:lvasgn, :n1,
            s(:send,
              s(:lvar, :n), :-,
              s(:int, 1))),
          s(:for,
            s(:lvasgn, :k),
            s(:erange,
              s(:int, 0),
              s(:lvar, :n1)),
            s(:begin,
              s(:lvasgn, :biggst,
                s(:lvar, :zero)),
              s(:for,
                s(:lvasgn, :i),
                s(:erange,
                  s(:lvar, :k),
                  s(:lvar, :n)),
                s(:begin,
                  s(:lvasgn, :size,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :a), :[],
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :ps), :[],
                                s(:lvar, :i)), :*,
                              s(:lvar, :n)), :+,
                            s(:lvar, :k))), :abs), :*,
                      s(:send,
                        s(:lvar, :scales), :[],
                        s(:send,
                          s(:lvar, :ps), :[],
                          s(:lvar, :i))))),
                  s(:if,
                    s(:send,
                      s(:lvar, :size), :>,
                      s(:lvar, :biggst)),
                    s(:begin,
                      s(:lvasgn, :biggst,
                        s(:lvar, :size)),
                      s(:lvasgn, :pividx,
                        s(:lvar, :i))), nil))),
              s(:if,
                s(:send,
                  s(:lvar, :biggst), :<=,
                  s(:lvar, :zero)),
                s(:send, nil, :raise,
                  s(:str, "Singular matrix")), nil),
              s(:if,
                s(:send,
                  s(:lvar, :pividx), :!=,
                  s(:lvar, :k)),
                s(:begin,
                  s(:lvasgn, :j,
                    s(:send,
                      s(:lvar, :ps), :[],
                      s(:lvar, :k))),
                  s(:send,
                    s(:lvar, :ps), :[]=,
                    s(:lvar, :k),
                    s(:send,
                      s(:lvar, :ps), :[],
                      s(:lvar, :pividx))),
                  s(:send,
                    s(:lvar, :ps), :[]=,
                    s(:lvar, :pividx),
                    s(:lvar, :j))), nil),
              s(:lvasgn, :pivot,
                s(:send,
                  s(:lvar, :a), :[],
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :ps), :[],
                        s(:lvar, :k)), :*,
                      s(:lvar, :n)), :+,
                    s(:lvar, :k)))),
              s(:for,
                s(:lvasgn, :i),
                s(:erange,
                  s(:begin,
                    s(:send,
                      s(:lvar, :k), :+,
                      s(:int, 1))),
                  s(:lvar, :n)),
                s(:begin,
                  s(:lvasgn, :psin,
                    s(:send,
                      s(:send,
                        s(:lvar, :ps), :[],
                        s(:lvar, :i)), :*,
                      s(:lvar, :n))),
                  s(:send,
                    s(:lvar, :a), :[]=,
                    s(:send,
                      s(:lvar, :psin), :+,
                      s(:lvar, :k)),
                    s(:lvasgn, :mult,
                      s(:send,
                        s(:send,
                          s(:lvar, :a), :[],
                          s(:send,
                            s(:lvar, :psin), :+,
                            s(:lvar, :k))), :div,
                        s(:lvar, :pivot),
                        s(:lvar, :prec)))),
                  s(:if,
                    s(:send,
                      s(:lvar, :mult), :!=,
                      s(:lvar, :zero)),
                    s(:begin,
                      s(:lvasgn, :pskn,
                        s(:send,
                          s(:send,
                            s(:lvar, :ps), :[],
                            s(:lvar, :k)), :*,
                          s(:lvar, :n))),
                      s(:for,
                        s(:lvasgn, :j),
                        s(:erange,
                          s(:begin,
                            s(:send,
                              s(:lvar, :k), :+,
                              s(:int, 1))),
                          s(:lvar, :n)),
                        s(:op_asgn,
                          s(:send,
                            s(:lvar, :a), :[],
                            s(:send,
                              s(:lvar, :psin), :+,
                              s(:lvar, :j))), :-,
                          s(:send,
                            s(:lvar, :mult), :mult,
                            s(:send,
                              s(:lvar, :a), :[],
                              s(:send,
                                s(:lvar, :pskn), :+,
                                s(:lvar, :j))),
                            s(:lvar, :prec))))), nil))))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :a), :[],
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :ps), :[],
                      s(:lvar, :n1)), :*,
                    s(:lvar, :n)), :+,
                  s(:lvar, :n1))), :==,
              s(:lvar, :zero)),
            s(:send, nil, :raise,
              s(:str, "Singular matrix")), nil),
          s(:lvar, :ps))),
      s(:def, :lusolve,
        s(:args,
          s(:arg, :a),
          s(:arg, :b),
          s(:arg, :ps),
          s(:optarg, :zero,
            s(:float, 0.0))),
        s(:begin,
          s(:lvasgn, :prec,
            s(:send,
              s(:const, nil, :BigDecimal), :limit,
              s(:nil))),
          s(:lvasgn, :n,
            s(:send,
              s(:lvar, :ps), :size)),
          s(:lvasgn, :x,
            s(:array)),
          s(:for,
            s(:lvasgn, :i),
            s(:erange,
              s(:int, 0),
              s(:lvar, :n)),
            s(:begin,
              s(:lvasgn, :dot,
                s(:lvar, :zero)),
              s(:lvasgn, :psin,
                s(:send,
                  s(:send,
                    s(:lvar, :ps), :[],
                    s(:lvar, :i)), :*,
                  s(:lvar, :n))),
              s(:for,
                s(:lvasgn, :j),
                s(:erange,
                  s(:int, 0),
                  s(:lvar, :i)),
                s(:lvasgn, :dot,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :a), :[],
                        s(:send,
                          s(:lvar, :psin), :+,
                          s(:lvar, :j))), :mult,
                      s(:send,
                        s(:lvar, :x), :[],
                        s(:lvar, :j)),
                      s(:lvar, :prec)), :+,
                    s(:lvar, :dot)))),
              s(:op_asgn,
                s(:lvasgn, :x), :<<,
                s(:send,
                  s(:send,
                    s(:lvar, :b), :[],
                    s(:send,
                      s(:lvar, :ps), :[],
                      s(:lvar, :i))), :-,
                  s(:lvar, :dot))))),
          s(:block,
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :n), :-,
                  s(:int, 1))), :downto,
              s(:int, 0)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:lvasgn, :dot,
                s(:lvar, :zero)),
              s(:lvasgn, :psin,
                s(:send,
                  s(:send,
                    s(:lvar, :ps), :[],
                    s(:lvar, :i)), :*,
                  s(:lvar, :n))),
              s(:for,
                s(:lvasgn, :j),
                s(:erange,
                  s(:begin,
                    s(:send,
                      s(:lvar, :i), :+,
                      s(:int, 1))),
                  s(:lvar, :n)),
                s(:lvasgn, :dot,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :a), :[],
                        s(:send,
                          s(:lvar, :psin), :+,
                          s(:lvar, :j))), :mult,
                      s(:send,
                        s(:lvar, :x), :[],
                        s(:lvar, :j)),
                      s(:lvar, :prec)), :+,
                    s(:lvar, :dot)))),
              s(:send,
                s(:lvar, :x), :[]=,
                s(:lvar, :i),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :x), :[],
                        s(:lvar, :i)), :-,
                      s(:lvar, :dot))), :div,
                  s(:send,
                    s(:lvar, :a), :[],
                    s(:send,
                      s(:lvar, :psin), :+,
                      s(:lvar, :i))),
                  s(:lvar, :prec))))),
          s(:lvar, :x))))))
