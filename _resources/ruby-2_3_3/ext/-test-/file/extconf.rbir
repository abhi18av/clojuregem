s(:begin,
  s(:send,
    s(:gvar, :$INCFLAGS), :<<,
    s(:str, " -I$(topdir) -I$(top_srcdir)")),
  s(:lvasgn, :headers,
    s(:block,
      s(:send,
        s(:array,
          s(:str, "sys/param.h"),
          s(:str, "sys/mount.h"),
          s(:str, "sys/vfs.h")), :select),
      s(:args,
        s(:arg, :h)),
      s(:send, nil, :have_header,
        s(:lvar, :h)))),
  s(:if,
    s(:send, nil, :have_type,
      s(:str, "struct statfs"),
      s(:lvar, :headers)),
    s(:begin,
      s(:send, nil, :have_struct_member,
        s(:str, "struct statfs"),
        s(:str, "f_fstypename"),
        s(:lvar, :headers)),
      s(:send, nil, :have_struct_member,
        s(:str, "struct statfs"),
        s(:str, "f_type"),
        s(:lvar, :headers)),
      s(:send, nil, :have_struct_member,
        s(:str, "struct statfs"),
        s(:str, "f_flags"),
        s(:lvar, :headers))), nil),
  s(:lvasgn, :headers,
    s(:block,
      s(:send,
        s(:array,
          s(:str, "sys/statvfs.h")), :select),
      s(:args,
        s(:arg, :h)),
      s(:send, nil, :have_header,
        s(:lvar, :h)))),
  s(:if,
    s(:send, nil, :have_type,
      s(:str, "struct statvfs"),
      s(:lvar, :headers)),
    s(:begin,
      s(:send, nil, :have_struct_member,
        s(:str, "struct statvfs"),
        s(:str, "f_fstypename"),
        s(:lvar, :headers)),
      s(:send, nil, :have_struct_member,
        s(:str, "struct statvfs"),
        s(:str, "f_basetype"),
        s(:lvar, :headers)),
      s(:send, nil, :have_struct_member,
        s(:str, "struct statvfs"),
        s(:str, "f_type"),
        s(:lvar, :headers))), nil),
  s(:gvasgn, :$srcs,
    s(:send,
      s(:const, nil, :Dir), :[],
      s(:send,
        s(:const, nil, :File), :join,
        s(:gvar, :$srcdir),
        s(:dstr,
          s(:str, "*.{"),
          s(:begin,
            s(:send,
              s(:const, nil, :SRC_EXT), :join,
              s(:str, ","))),
          s(:str, "}"))))),
  s(:lvasgn, :inits,
    s(:block,
      s(:send,
        s(:gvar, :$srcs), :map),
      s(:args,
        s(:arg, :s)),
      s(:send,
        s(:const, nil, :File), :basename,
        s(:lvar, :s),
        s(:str, ".*")))),
  s(:send,
    s(:lvar, :inits), :delete,
    s(:str, "init")),
  s(:block,
    s(:send,
      s(:lvar, :inits), :map!),
    s(:args,
      s(:arg, :s)),
    s(:dstr,
      s(:str, "X("),
      s(:begin,
        s(:lvar, :s)),
      s(:str, ")"))),
  s(:send,
    s(:gvar, :$defs), :<<,
    s(:dstr,
      s(:str, "-DTEST_INIT_FUNCS(X)=\""),
      s(:begin,
        s(:send,
          s(:lvar, :inits), :join,
          s(:str, " "))),
      s(:str, "\""))),
  s(:send, nil, :create_makefile,
    s(:str, "-test-/file")))
