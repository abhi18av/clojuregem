s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/setup.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget/setup.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "BWidget")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:begin,
        s(:send,
          s(:const,
            s(:const, nil, :TkComm), :TkExtlibAutoloadModule), :unshift,
          s(:self)),
        s(:send, nil, :extend,
          s(:const, nil, :TkCore)),
        s(:casgn, nil, :LIBRARY,
          s(:send, nil, :tk_call,
            s(:str, "set"),
            s(:str, "::BWIDGET::LIBRARY"))),
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "BWidget"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "BWidget")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:defs,
          s(:self), :XLFDfont,
          s(:args,
            s(:arg, :cmd),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, -1)), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send,
                    s(:lvar, :args), :pop)),
                s(:send,
                  s(:lvar, :args), :concat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys)))), nil),
            s(:send, nil, :tk_call,
              s(:str, "BWidget::XLFDfont"),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))))),
        s(:defs,
          s(:self), :assert,
          s(:args,
            s(:arg, :exp),
            s(:optarg, :msg,
              s(:const, nil, :None))),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::assert"),
            s(:lvar, :exp),
            s(:lvar, :msg))),
        s(:defs,
          s(:self), :badOptionString,
          s(:args,
            s(:arg, :type),
            s(:arg, :value),
            s(:arg, :list)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::badOptionString"),
            s(:lvar, :type),
            s(:lvar, :value),
            s(:lvar, :list))),
        s(:defs,
          s(:self), :bindMouseWheel,
          s(:args,
            s(:arg, :widget)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::bindMouseWheel"),
            s(:lvar, :widget))),
        s(:defs,
          s(:self), :classes,
          s(:args,
            s(:arg, :klass)),
          s(:send, nil, :list,
            s(:send, nil, :tk_call,
              s(:str, "BWidget::classes"),
              s(:lvar, :klass)))),
        s(:defs,
          s(:self), :clonename,
          s(:args,
            s(:arg, :menu)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::clonename"),
            s(:lvar, :menu))),
        s(:defs,
          s(:self), :focus,
          s(:args,
            s(:arg, :opt),
            s(:arg, :path)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::focus"),
            s(:lvar, :opt),
            s(:lvar, :path))),
        s(:defs,
          s(:self), :get3dcolor,
          s(:args,
            s(:arg, :path),
            s(:arg, :bgcolor)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::get3dcolor"),
            s(:lvar, :path),
            s(:lvar, :bgcolor))),
        s(:defs,
          s(:self), :getname,
          s(:args,
            s(:arg, :name)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::getname"),
            s(:lvar, :name))),
        s(:defs,
          s(:self), :grab,
          s(:args,
            s(:arg, :opt),
            s(:arg, :path)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::grab"),
            s(:lvar, :opt),
            s(:lvar, :path))),
        s(:defs,
          s(:self), :inuse,
          s(:args,
            s(:arg, :klass)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "BWidget::inuse"),
              s(:lvar, :klass)))),
        s(:defs,
          s(:self), :library,
          s(:args,
            s(:arg, :klass),
            s(:restarg, :klasses)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::library"),
            s(:lvar, :klass),
            s(:splat,
              s(:lvar, :klasses)))),
        s(:defs,
          s(:self), :lreorder,
          s(:args,
            s(:arg, :list),
            s(:arg, :neworder)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::lreorder"),
            s(:lvar, :list),
            s(:lvar, :neworder))),
        s(:defs,
          s(:self), :parsetext,
          s(:args,
            s(:arg, :text)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::parsetext"),
            s(:lvar, :text))),
        s(:defs,
          s(:self), :place,
          s(:args,
            s(:arg, :path),
            s(:arg, :w),
            s(:arg, :h),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, -1)), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send,
                    s(:lvar, :args), :pop)),
                s(:send,
                  s(:lvar, :args), :concat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys)))), nil),
            s(:send, nil, :tk_call,
              s(:str, "BWidget::place"),
              s(:lvar, :path),
              s(:lvar, :w),
              s(:lvar, :h),
              s(:splat,
                s(:begin,
                  s(:send,
                    s(:lvar, :args), :flatten)))))),
        s(:defs,
          s(:self), :write,
          s(:args,
            s(:arg, :file),
            s(:optarg, :mode,
              s(:const, nil, :None))),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::write"),
            s(:lvar, :file),
            s(:lvar, :mode))),
        s(:defs,
          s(:self), :wrongNumArgsString,
          s(:args,
            s(:arg, :str)),
          s(:send, nil, :tk_call,
            s(:str, "BWidget::wrongNumArgsString"),
            s(:lvar, :str))),
        s(:send, nil, :autoload,
          s(:sym, :ArrowButton),
          s(:str, "tkextlib/bwidget/arrowbutton")),
        s(:send, nil, :autoload,
          s(:sym, :Bitmap),
          s(:str, "tkextlib/bwidget/bitmap")),
        s(:send, nil, :autoload,
          s(:sym, :Button),
          s(:str, "tkextlib/bwidget/button")),
        s(:send, nil, :autoload,
          s(:sym, :ButtonBox),
          s(:str, "tkextlib/bwidget/buttonbox")),
        s(:send, nil, :autoload,
          s(:sym, :ComboBox),
          s(:str, "tkextlib/bwidget/combobox")),
        s(:send, nil, :autoload,
          s(:sym, :Dialog),
          s(:str, "tkextlib/bwidget/dialog")),
        s(:send, nil, :autoload,
          s(:sym, :DragSite),
          s(:str, "tkextlib/bwidget/dragsite")),
        s(:send, nil, :autoload,
          s(:sym, :DropSite),
          s(:str, "tkextlib/bwidget/dropsite")),
        s(:send, nil, :autoload,
          s(:sym, :DynamicHelp),
          s(:str, "tkextlib/bwidget/dynamichelp")),
        s(:send, nil, :autoload,
          s(:sym, :Entry),
          s(:str, "tkextlib/bwidget/entry")),
        s(:send, nil, :autoload,
          s(:sym, :Label),
          s(:str, "tkextlib/bwidget/label")),
        s(:send, nil, :autoload,
          s(:sym, :LabelEntry),
          s(:str, "tkextlib/bwidget/labelentry")),
        s(:send, nil, :autoload,
          s(:sym, :LabelFrame),
          s(:str, "tkextlib/bwidget/labelframe")),
        s(:send, nil, :autoload,
          s(:sym, :ListBox),
          s(:str, "tkextlib/bwidget/listbox")),
        s(:send, nil, :autoload,
          s(:sym, :MainFrame),
          s(:str, "tkextlib/bwidget/mainframe")),
        s(:send, nil, :autoload,
          s(:sym, :MessageDlg),
          s(:str, "tkextlib/bwidget/messagedlg")),
        s(:send, nil, :autoload,
          s(:sym, :NoteBook),
          s(:str, "tkextlib/bwidget/notebook")),
        s(:send, nil, :autoload,
          s(:sym, :PagesManager),
          s(:str, "tkextlib/bwidget/pagesmanager")),
        s(:send, nil, :autoload,
          s(:sym, :PanedWindow),
          s(:str, "tkextlib/bwidget/panedwindow")),
        s(:send, nil, :autoload,
          s(:sym, :PasswdDlg),
          s(:str, "tkextlib/bwidget/passwddlg")),
        s(:send, nil, :autoload,
          s(:sym, :ProgressBar),
          s(:str, "tkextlib/bwidget/progressbar")),
        s(:send, nil, :autoload,
          s(:sym, :ProgressDlg),
          s(:str, "tkextlib/bwidget/progressdlg")),
        s(:send, nil, :autoload,
          s(:sym, :ScrollableFrame),
          s(:str, "tkextlib/bwidget/scrollableframe")),
        s(:send, nil, :autoload,
          s(:sym, :ScrolledWindow),
          s(:str, "tkextlib/bwidget/scrolledwindow")),
        s(:send, nil, :autoload,
          s(:sym, :ScrollView),
          s(:str, "tkextlib/bwidget/scrollview")),
        s(:send, nil, :autoload,
          s(:sym, :SelectColor),
          s(:str, "tkextlib/bwidget/selectcolor")),
        s(:send, nil, :autoload,
          s(:sym, :SelectFont),
          s(:str, "tkextlib/bwidget/selectfont")),
        s(:send, nil, :autoload,
          s(:sym, :Separator),
          s(:str, "tkextlib/bwidget/separator")),
        s(:send, nil, :autoload,
          s(:sym, :SpinBox),
          s(:str, "tkextlib/bwidget/spinbox")),
        s(:send, nil, :autoload,
          s(:sym, :TitleFrame),
          s(:str, "tkextlib/bwidget/titleframe")),
        s(:send, nil, :autoload,
          s(:sym, :Tree),
          s(:str, "tkextlib/bwidget/tree")),
        s(:send, nil, :autoload,
          s(:sym, :Widget),
          s(:str, "tkextlib/bwidget/widget"))))))
