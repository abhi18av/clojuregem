s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/scrollbar")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Tcllib),
      s(:module,
        s(:const, nil, :Autoscroll),
        s(:begin,
          s(:casgn, nil, :PACKAGE_NAME,
            s(:send,
              s(:str, "autoscroll"), :freeze)),
          s(:defs,
            s(:self), :package_name,
            s(:args),
            s(:const, nil, :PACKAGE_NAME)),
          s(:defs,
            s(:self), :package_version,
            s(:args),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const, nil, :TkPackage), :require,
                  s(:str, "autoscroll")),
                s(:resbody, nil, nil,
                  s(:str, "")), nil))),
          s(:defs,
            s(:self), :not_available,
            s(:args),
            s(:send, nil, :fail,
              s(:const, nil, :RuntimeError),
              s(:str, "'tkextlib/tcllib/autoscroll' extension is not available on your current environment."))),
          s(:defs,
            s(:self), :autoscroll,
            s(:args,
              s(:arg, :win)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tcllib), :Autoscroll), :not_available)),
          s(:defs,
            s(:self), :unautoscroll,
            s(:args,
              s(:arg, :win)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tcllib), :Autoscroll), :not_available)))))),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Scrollable),
      s(:begin,
        s(:def, :autoscroll,
          s(:args,
            s(:optarg, :mode,
              s(:nil))),
          s(:begin,
            s(:case,
              s(:lvar, :mode),
              s(:when,
                s(:sym, :x),
                s(:str, "x"),
                s(:if,
                  s(:ivar, :@xscrollbar),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Autoscroll), :autoscroll,
                    s(:ivar, :@xscrollbar)), nil)),
              s(:when,
                s(:sym, :y),
                s(:str, "y"),
                s(:if,
                  s(:ivar, :@yscrollbar),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Autoscroll), :autoscroll,
                    s(:ivar, :@yscrollbar)), nil)),
              s(:when,
                s(:nil),
                s(:sym, :both),
                s(:str, "both"),
                s(:begin,
                  s(:if,
                    s(:ivar, :@xscrollbar),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Autoscroll), :autoscroll,
                      s(:ivar, :@xscrollbar)), nil),
                  s(:if,
                    s(:ivar, :@yscrollbar),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Autoscroll), :autoscroll,
                      s(:ivar, :@yscrollbar)), nil))),
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:str, "'x', 'y' or 'both' (String or Symbol) is expected"))),
            s(:self))),
        s(:def, :unautoscroll,
          s(:args,
            s(:optarg, :mode,
              s(:nil))),
          s(:begin,
            s(:case,
              s(:lvar, :mode),
              s(:when,
                s(:sym, :x),
                s(:str, "x"),
                s(:if,
                  s(:ivar, :@xscrollbar),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Autoscroll), :unautoscroll,
                    s(:ivar, :@xscrollbar)), nil)),
              s(:when,
                s(:sym, :y),
                s(:str, "y"),
                s(:if,
                  s(:ivar, :@yscrollbar),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Autoscroll), :unautoscroll,
                    s(:ivar, :@yscrollbar)), nil)),
              s(:when,
                s(:nil),
                s(:sym, :both),
                s(:str, "both"),
                s(:begin,
                  s(:if,
                    s(:ivar, :@xscrollbar),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Autoscroll), :unautoscroll,
                      s(:ivar, :@xscrollbar)), nil),
                  s(:if,
                    s(:ivar, :@yscrollbar),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Autoscroll), :unautoscroll,
                      s(:ivar, :@yscrollbar)), nil))),
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:str, "'x', 'y' or 'both' (String or Symbol) is expected"))),
            s(:self)))))),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Scrollbar), nil,
    s(:begin,
      s(:def, :autoscroll,
        s(:args),
        s(:begin,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tcllib), :Autoscroll), :autoscroll,
            s(:self)),
          s(:self))),
      s(:def, :unautoscroll,
        s(:args),
        s(:begin,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tcllib), :Autoscroll), :unautoscroll,
            s(:self)),
          s(:self))))),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "autoscroll")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Tcllib),
      s(:begin,
        s(:sclass,
          s(:const, nil, :Autoscroll),
          s(:undef,
            s(:sym, :not_available))),
        s(:module,
          s(:const, nil, :Autoscroll),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :TkCore)),
            s(:defs,
              s(:self), :autoscroll,
              s(:args,
                s(:arg, :win)),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::autoscroll::autoscroll"),
                s(:send,
                  s(:lvar, :win), :path))),
            s(:defs,
              s(:self), :unautoscroll,
              s(:args,
                s(:arg, :win)),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::autoscroll::unautoscroll"),
                s(:send,
                  s(:lvar, :win), :path))),
            s(:defs,
              s(:self), :wrap,
              s(:args),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::autoscroll::wrap"))),
            s(:defs,
              s(:self), :unwrap,
              s(:args),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::autoscroll::unwrap")))))))))
