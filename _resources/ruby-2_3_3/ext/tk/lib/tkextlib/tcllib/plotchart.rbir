s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "Plotchart")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Tcllib),
      s(:module,
        s(:const, nil, :Plotchart),
        s(:begin,
          s(:casgn, nil, :PACKAGE_NAME,
            s(:send,
              s(:str, "Plotchart"), :freeze)),
          s(:defs,
            s(:self), :package_name,
            s(:args),
            s(:const, nil, :PACKAGE_NAME)),
          s(:defs,
            s(:self), :package_version,
            s(:args),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const, nil, :TkPackage), :require,
                  s(:str, "Plotchart")),
                s(:resbody, nil, nil,
                  s(:str, "")), nil))))))),
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tcllib), :Plotchart),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :TkCore)),
      s(:defs,
        s(:self), :view_port,
        s(:args,
          s(:arg, :w),
          s(:restarg, :args)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "::Plotchart::viewPort"),
          s(:send,
            s(:lvar, :w), :path),
          s(:splat,
            s(:begin,
              s(:send,
                s(:lvar, :args), :flatten))))),
      s(:defs,
        s(:self), :world_coordinates,
        s(:args,
          s(:arg, :w),
          s(:restarg, :args)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "::Plotchart::worldCoordinates"),
          s(:send,
            s(:lvar, :w), :path),
          s(:splat,
            s(:begin,
              s(:send,
                s(:lvar, :args), :flatten))))),
      s(:defs,
        s(:self), :world_3D_coordinates,
        s(:args,
          s(:arg, :w),
          s(:restarg, :args)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "::Plotchart::world3DCoordinates"),
          s(:send,
            s(:lvar, :w), :path),
          s(:splat,
            s(:begin,
              s(:send,
                s(:lvar, :args), :flatten))))),
      s(:defs,
        s(:self), :coords_to_pixel,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::Plotchart::coordsToPixel"),
            s(:send,
              s(:lvar, :w), :path),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:defs,
        s(:self), :coords_3D_to_pixel,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :z)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::Plotchart::coords3DToPixel"),
            s(:send,
              s(:lvar, :w), :path),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:lvar, :z)))),
      s(:defs,
        s(:self), :plotconfig,
        s(:args,
          s(:restarg, :args)),
        s(:case,
          s(:send,
            s(:lvar, :args), :length),
          s(:when,
            s(:int, 0),
            s(:int, 1),
            s(:int, 2),
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_call,
                s(:str, "::Plotchart::plotconfig"),
                s(:splat,
                  s(:lvar, :args))))),
          s(:when,
            s(:int, 3),
            s(:send, nil, :tk_call,
              s(:str, "::Plotchart::plotconfig"),
              s(:splat,
                s(:lvar, :args)))),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::Plotchart::plotconfig"),
              s(:splat,
                s(:lvar, :args))),
            s(:nil)))),
      s(:defs,
        s(:self), :plotpack,
        s(:args,
          s(:arg, :w),
          s(:arg, :dir),
          s(:restarg, :plots)),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::Plotchart::plotpack"),
            s(:send,
              s(:lvar, :w), :path),
            s(:lvar, :dir),
            s(:splat,
              s(:lvar, :plots))),
          s(:lvar, :w))),
      s(:defs,
        s(:self), :polar_coordinates,
        s(:args,
          s(:arg, :w),
          s(:arg, :radmax)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "::Plotchart::polarCoordinates"),
          s(:send,
            s(:lvar, :w), :path),
          s(:lvar, :radmax))),
      s(:defs,
        s(:self), :polar_to_pixel,
        s(:args,
          s(:arg, :w),
          s(:arg, :rad),
          s(:arg, :phi)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::Plotchart::polarToPixel"),
            s(:send,
              s(:lvar, :w), :path),
            s(:lvar, :rad),
            s(:lvar, :phi)))),
      s(:defs,
        s(:self), :pixel_to_coords,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::Plotchart::pixelToCoords"),
            s(:send,
              s(:lvar, :w), :path),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:defs,
        s(:self), :determine_scale,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "::Plotchart::determineScale"),
          s(:splat,
            s(:lvar, :args)))),
      s(:defs,
        s(:self), :set_zoom_pan,
        s(:args,
          s(:arg, :w)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "::Plotchart::setZoomPan"),
          s(:send,
            s(:lvar, :w), :path))),
      s(:module,
        s(:const, nil, :ChartMethod),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :TkCore)),
          s(:def, :title,
            s(:args,
              s(:arg, :str)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "title"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :str))),
              s(:self))),
          s(:def, :save_plot,
            s(:args,
              s(:arg, :filename)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "saveplot"),
                s(:lvar, :filename)),
              s(:self))),
          s(:def, :xtext,
            s(:args,
              s(:arg, :str)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "xtext"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :str))),
              s(:self))),
          s(:def, :ytext,
            s(:args,
              s(:arg, :str)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "ytext"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :str))),
              s(:self))),
          s(:def, :xconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "xconfig"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "xconfig"),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))),
          s(:def, :yconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "yconfig"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "yconfig"),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))),
          s(:def, :background,
            s(:args,
              s(:arg, :part),
              s(:arg, :color_or_image),
              s(:arg, :dir)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "background"),
                s(:lvar, :part),
                s(:lvar, :color_or_image),
                s(:lvar, :dir)),
              s(:self))),
          s(:def, :xticklines,
            s(:args,
              s(:optarg, :color,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "xticklines"),
                s(:lvar, :color)),
              s(:self))),
          s(:def, :yticklines,
            s(:args,
              s(:optarg, :color,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "yticklines"),
                s(:lvar, :color)),
              s(:self))),
          s(:def, :legendconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "legendconfig"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "legendconfig"),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))),
          s(:def, :legend,
            s(:args,
              s(:arg, :series),
              s(:arg, :text)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "legend"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :text))),
              s(:self))),
          s(:def, :balloon,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :x),
                    s(:lvasgn, :y)),
                  s(:send,
                    s(:lvar, :args), :shift)),
                s(:begin,
                  s(:lvasgn, :x,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:lvasgn, :y,
                    s(:send,
                      s(:lvar, :args), :shift)))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :text),
                  s(:lvasgn, :dir)),
                s(:lvar, :args)),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "balloon"),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :text)),
                s(:lvar, :dir)),
              s(:self))),
          s(:def, :balloonconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:if,
              s(:send,
                s(:lvar, :key), :kind_of?,
                s(:const, nil, :Hash)),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "balloonconfig"),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :key),
                    s(:true)))),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "balloonconfig"),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :key))),
                s(:lvar, :value)))),
          s(:def, :plaintext,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :x),
                    s(:lvasgn, :y)),
                  s(:send,
                    s(:lvar, :args), :shift)),
                s(:begin,
                  s(:lvasgn, :x,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:lvasgn, :y,
                    s(:send,
                      s(:lvar, :args), :shift)))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :text),
                  s(:lvasgn, :dir)),
                s(:lvar, :args)),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plaintext"),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :text)),
                s(:lvar, :dir)),
              s(:self))),
          s(:def, :view_port,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::viewPort"),
                s(:ivar, :@path),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))),
          s(:def, :world_coordinates,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::worldCoordinates"),
                s(:ivar, :@path),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))),
          s(:def, :world_3D_coordinates,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::world3DCoordinates"),
                s(:ivar, :@path),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))),
          s(:def, :coords_to_pixel,
            s(:args,
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::coordsToPixel"),
                s(:ivar, :@path),
                s(:lvar, :x),
                s(:lvar, :y)))),
          s(:def, :coords_3D_to_pixel,
            s(:args,
              s(:arg, :x),
              s(:arg, :y),
              s(:arg, :z)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::coords3DToPixel"),
                s(:ivar, :@path),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:lvar, :z)))),
          s(:def, :plotpack,
            s(:args,
              s(:arg, :dir),
              s(:restarg, :plots)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::plotpack"),
                s(:ivar, :@path),
                s(:lvar, :dir),
                s(:splat,
                  s(:lvar, :plots))),
              s(:self))),
          s(:def, :polar_coordinates,
            s(:args,
              s(:arg, :radmax)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::polarCoordinates"),
                s(:ivar, :@path),
                s(:lvar, :radmax)),
              s(:self))),
          s(:def, :polar_to_pixel,
            s(:args,
              s(:arg, :rad),
              s(:arg, :phi)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::polarToPixel"),
                s(:ivar, :@path),
                s(:lvar, :rad),
                s(:lvar, :phi)))),
          s(:def, :pixel_to_coords,
            s(:args,
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::pixelToCoords"),
                s(:ivar, :@path),
                s(:lvar, :x),
                s(:lvar, :y)))),
          s(:def, :determine_scale,
            s(:args,
              s(:arg, :xmax),
              s(:arg, :ymax)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::determineScale"),
                s(:ivar, :@path),
                s(:lvar, :xmax),
                s(:lvar, :ymax)),
              s(:self))),
          s(:def, :set_zoom_pan,
            s(:args),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::Plotchart::setZoomPan"),
                s(:ivar, :@path)),
              s(:self))))),
      s(:class,
        s(:const, nil, :XYPlot),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createXYPlot"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@xaxis)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@yaxis))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :__destroy_hook__,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :delete,
                s(:ivar, :@path)))),
          s(:def, :plot,
            s(:args,
              s(:arg, :series),
              s(:arg, :x),
              s(:arg, :y)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :x),
                s(:lvar, :y)),
              s(:self))),
          s(:def, :contourlines,
            s(:args,
              s(:arg, :xcrd),
              s(:arg, :ycrd),
              s(:arg, :vals),
              s(:optarg, :clss,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :xcrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :xcrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :xcrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :ycrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :ycrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :ycrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :vals), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :vals,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :vals))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :clss), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :clss,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :clss))), nil),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "contourlines"),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd),
                s(:lvar, :vals),
                s(:lvar, :clss)),
              s(:self))),
          s(:def, :contourfill,
            s(:args,
              s(:arg, :xcrd),
              s(:arg, :ycrd),
              s(:arg, :vals),
              s(:optarg, :clss,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :xcrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :xcrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :xcrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :ycrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :ycrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :ycrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :vals), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :vals,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :vals))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :clss), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :clss,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :clss))), nil),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "contourfill"),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd),
                s(:lvar, :vals),
                s(:lvar, :clss)),
              s(:self))),
          s(:def, :contourbox,
            s(:args,
              s(:arg, :xcrd),
              s(:arg, :ycrd),
              s(:arg, :vals),
              s(:optarg, :clss,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :xcrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :xcrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :xcrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :ycrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :ycrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :ycrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :vals), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :vals,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :vals))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :clss), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :clss,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :clss))), nil),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "contourbox"),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd),
                s(:lvar, :vals),
                s(:lvar, :clss)),
              s(:self))),
          s(:def, :color_map,
            s(:args,
              s(:arg, :colors)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :colors), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :colors,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :colors))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "colorMap"),
                s(:lvar, :colors)),
              s(:self))),
          s(:def, :grid_cells,
            s(:args,
              s(:arg, :xcrd),
              s(:arg, :ycrd)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :xcrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :xcrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :xcrd))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :ycrd), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :ycrd,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :ycrd))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "grid"),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd)),
              s(:self))),
          s(:def, :dataconfig,
            s(:args,
              s(:arg, :series),
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:if,
              s(:send,
                s(:lvar, :key), :kind_of?,
                s(:const, nil, :Hash)),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "dataconfig"),
                s(:lvar, :series),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :key),
                    s(:true)))),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "dataconfig"),
                s(:lvar, :series),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :key))),
                s(:lvar, :value)))),
          s(:def, :rescale,
            s(:args,
              s(:arg, :xscale),
              s(:arg, :yscale)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "rescale"),
                s(:lvar, :xscale),
                s(:lvar, :yscale)),
              s(:self))),
          s(:def, :trend,
            s(:args,
              s(:arg, :series),
              s(:arg, :xcrd),
              s(:arg, :ycrd)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "trend"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd)),
              s(:self))),
          s(:def, :rchart,
            s(:args,
              s(:arg, :series),
              s(:arg, :xcrd),
              s(:arg, :ycrd)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "rchart"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd)),
              s(:self))),
          s(:def, :interval,
            s(:args,
              s(:arg, :series),
              s(:arg, :xcrd),
              s(:arg, :ymin),
              s(:arg, :ymax),
              s(:optarg, :ycenter,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "interval"),
                s(:lvar, :series),
                s(:lvar, :xcrd),
                s(:lvar, :ymin),
                s(:lvar, :ymax),
                s(:lvar, :ycenter)),
              s(:self))),
          s(:def, :box_and_whiskers,
            s(:args,
              s(:arg, :series),
              s(:arg, :xcrd),
              s(:arg, :ycrd)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "box-and-whiskers"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd)),
              s(:self))),
          s(:alias,
            s(:sym, :box_whiskers),
            s(:sym, :box_and_whiskers)),
          s(:def, :vectorconfig,
            s(:args,
              s(:arg, :series),
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "vectorconfig"),
                  s(:send, nil, :_get_eval_enc_str,
                    s(:lvar, :series)),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "vectorconfig"),
                  s(:lvar, :series),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))),
          s(:def, :vector,
            s(:args,
              s(:arg, :series),
              s(:arg, :xcrd),
              s(:arg, :ycrd),
              s(:arg, :ucmp),
              s(:arg, :vcmp)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "vector"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd),
                s(:lvar, :ucmp),
                s(:lvar, :vcmp)),
              s(:self))),
          s(:def, :dotconfig,
            s(:args,
              s(:arg, :series),
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "dotconfig"),
                  s(:send, nil, :_get_eval_enc_str,
                    s(:lvar, :series)),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "dotconfig"),
                  s(:lvar, :series),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))),
          s(:def, :dot,
            s(:args,
              s(:arg, :series),
              s(:arg, :xcrd),
              s(:arg, :ycrd),
              s(:arg, :value)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "dot"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :xcrd),
                s(:lvar, :ycrd),
                s(:lvar, :value)),
              s(:self))))),
      s(:class,
        s(:const, nil, :Stripchart),
        s(:const, nil, :XYPlot),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "canvas"), :freeze),
              s(:send,
                s(:str, "::Plotchart::createStripchart"), :freeze)), :freeze))),
      s(:class,
        s(:const, nil, :TXPlot),
        s(:const, nil, :XYPlot),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "canvas"), :freeze),
              s(:send,
                s(:str, "::Plotchart::createTXPlot"), :freeze)), :freeze))),
      s(:class,
        s(:const, nil, :XLogYPlot),
        s(:const, nil, :XYPlot),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "canvas"), :freeze),
              s(:send,
                s(:str, "::Plotchart::createXLogYPlot"), :freeze)), :freeze))),
      s(:class,
        s(:const, nil, :Histogram),
        s(:const, nil, :XYPlot),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "canvas"), :freeze),
              s(:send,
                s(:str, "::Plotchart::createHistogram"), :freeze)), :freeze))),
      s(:class,
        s(:const, nil, :PolarPlot),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createPolarplot"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@radius_data,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@radius_data,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@radius_data))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :__destroy_hook__,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :delete,
                s(:ivar, :@path)))),
          s(:def, :plot,
            s(:args,
              s(:arg, :series),
              s(:arg, :radius),
              s(:arg, :angle)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:lvar, :radius),
                s(:lvar, :angle)),
              s(:self))),
          s(:def, :dataconfig,
            s(:args,
              s(:arg, :series),
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:if,
              s(:send,
                s(:lvar, :key), :kind_of?,
                s(:const, nil, :Hash)),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "dataconfig"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :series)),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :key),
                    s(:true)))),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "dataconfig"),
                s(:lvar, :series),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :key))),
                s(:lvar, :value)))))),
      s(:casgn, nil, :Polarplot,
        s(:const, nil, :PolarPlot)),
      s(:class,
        s(:const, nil, :IsometricPlot),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createIsometricPlot"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0)), :kind_of?,
                      s(:const, nil, :Hash)),
                    s(:ivasgn, :@stepsize,
                      s(:sym, :noaxes)),
                    s(:ivasgn, :@stepsize,
                      s(:send,
                        s(:lvar, :args), :shift))),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0)), :kind_of?,
                      s(:const, nil, :Hash)),
                    s(:ivasgn, :@stepsize,
                      s(:sym, :noaxes)),
                    s(:ivasgn, :@stepsize,
                      s(:send,
                        s(:lvar, :args), :shift))),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@xaxis)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@yaxis)),
                s(:ivar, :@stepsize)))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :plot,
            s(:args,
              s(:arg, :type),
              s(:restarg, :args)),
            s(:send,
              s(:self), :__send__,
              s(:dstr,
                s(:str, "plot_"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :type), :to_s), :tr,
                    s(:str, "-"),
                    s(:str, "_")))),
              s(:splat,
                s(:lvar, :args)))),
          s(:def, :plot_rectangle,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:str, "rectangle"),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))),
          s(:def, :plot_filled_rectangle,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:str, "filled-rectangle"),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))),
          s(:def, :plot_circle,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:str, "circle"),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))),
          s(:def, :plot_filled_circle,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:str, "filled-circle"),
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:lvar, :args), :flatten)))),
              s(:self))))),
      s(:casgn, nil, :Isometricplot,
        s(:const, nil, :IsometricPlot)),
      s(:class,
        s(:const, nil, :Plot3D),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::create3DPlot"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@zaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@zaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@xaxis)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@yaxis)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@zaxis))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :plot_function,
            s(:args,
              s(:optarg, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:begin,
              s(:send,
                s(:const, nil, :Tk), :ip_eval,
                s(:dstr,
                  s(:str, "proc "),
                  s(:begin,
                    s(:ivar, :@path)),
                  s(:str, "_"),
                  s(:begin,
                    s(:ivar, :@chart)),
                  s(:str, " {x y} {"),
                  s(:begin,
                    s(:send, nil, :install_cmd,
                      s(:lvar, :cmd))),
                  s(:str, " $x $y}"))),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plotfunc"),
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@path)),
                  s(:str, "_"),
                  s(:begin,
                    s(:ivar, :@chart)))),
              s(:self))),
          s(:def, :plot_funcont,
            s(:args,
              s(:arg, :conts),
              s(:optarg, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :conts), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :conts,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :conts))), nil),
              s(:send,
                s(:const, nil, :Tk), :ip_eval,
                s(:dstr,
                  s(:str, "proc "),
                  s(:begin,
                    s(:ivar, :@path)),
                  s(:str, "_"),
                  s(:begin,
                    s(:ivar, :@chart)),
                  s(:str, " {x y} {"),
                  s(:begin,
                    s(:send, nil, :install_cmd,
                      s(:lvar, :cmd))),
                  s(:str, " $x $y}"))),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plotfuncont"),
                s(:dstr,
                  s(:begin,
                    s(:ivar, :@path)),
                  s(:str, "_"),
                  s(:begin,
                    s(:ivar, :@chart))),
                s(:lvar, :conts)),
              s(:self))),
          s(:def, :grid_size,
            s(:args,
              s(:arg, :nxcells),
              s(:arg, :nycells)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "gridsize"),
                s(:lvar, :nxcells),
                s(:lvar, :nycells)),
              s(:self))),
          s(:def, :plot_line,
            s(:args,
              s(:arg, :dat),
              s(:arg, :color)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plotline"),
                s(:lvar, :dat),
                s(:lvar, :color)),
              s(:self))),
          s(:def, :plot_data,
            s(:args,
              s(:arg, :dat)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plotdata"),
                s(:lvar, :dat)),
              s(:self))),
          s(:def, :zconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "zconfig"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "zconfig"),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))),
          s(:def, :colour,
            s(:args,
              s(:arg, :fill),
              s(:arg, :border)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "colour"),
                s(:lvar, :fill),
                s(:lvar, :border)),
              s(:self))),
          s(:alias,
            s(:sym, :colours),
            s(:sym, :colour)),
          s(:alias,
            s(:sym, :colors),
            s(:sym, :colour)),
          s(:alias,
            s(:sym, :color),
            s(:sym, :colour)))),
      s(:class,
        s(:const, nil, :Barchart3D),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::create3DBarchart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@nobars,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@nobars,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@yaxis)),
                s(:ivar, :@nobars)))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :plot,
            s(:args,
              s(:arg, :label),
              s(:arg, :yvalue),
              s(:arg, :color)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :label)),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :yvalue)),
                s(:lvar, :color)),
              s(:self))),
          s(:def, :config,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "config"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "config"),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))))),
      s(:class,
        s(:const, nil, :RibbonChart3D),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::create3DRibbonChart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@names,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@zaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@names,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@zaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@names)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@yaxis)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@zaxis))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :line,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:lvasgn, :color,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:lvasgn, :xypairs,
                s(:send,
                  s(:const, nil, :TkComm), :slice_ary,
                  s(:send,
                    s(:lvar, :args), :flatten),
                  s(:int, 2))),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "line"),
                s(:lvar, :xypairs),
                s(:lvar, :color)),
              s(:self))),
          s(:def, :area,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:lvasgn, :color,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:lvasgn, :xypairs,
                s(:send,
                  s(:const, nil, :TkComm), :slice_ary,
                  s(:send,
                    s(:lvar, :args), :flatten),
                  s(:int, 2))),
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "area"),
                s(:lvar, :xypairs),
                s(:lvar, :color)),
              s(:self))),
          s(:def, :zconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :key), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call_without_enc,
                  s(:ivar, :@chart),
                  s(:str, "zconfig"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :key),
                      s(:true)))),
                s(:send, nil, :tk_call,
                  s(:ivar, :@chart),
                  s(:str, "zconfig"),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key))),
                  s(:lvar, :value))),
              s(:self))))),
      s(:class,
        s(:const, nil, :Piechart),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createPiechart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const,
                    s(:const, nil, :Tk), :Canvas)),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@path,
                    s(:send,
                      s(:lvar, :parent), :path))),
                s(:super,
                  s(:splat,
                    s(:lvar, :args)))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path)))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :plot,
            s(:args,
              s(:restarg, :dat)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:send,
                  s(:lvar, :dat), :flatten)),
              s(:self))),
          s(:def, :colours,
            s(:args,
              s(:restarg, :list)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "colours"),
                s(:splat,
                  s(:lvar, :list))),
              s(:self))),
          s(:alias,
            s(:sym, :colors),
            s(:sym, :colours)))),
      s(:class,
        s(:const, nil, :Radialchart),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createRadialchart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@names,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@scale,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@style,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@names,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@scale,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@style,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@names)),
                s(:ivar, :@scale),
                s(:ivar, :@style)))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :__destroy_hook__,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :delete,
                s(:ivar, :@path)))),
          s(:def, :plot,
            s(:args,
              s(:arg, :data),
              s(:arg, :color),
              s(:arg, :thickness)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :data)),
                s(:lvar, :color),
                s(:lvar, :thickness)),
              s(:self))),
          s(:def, :colours,
            s(:args,
              s(:restarg, :list)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "colours"),
                s(:splat,
                  s(:lvar, :list))),
              s(:self))),
          s(:alias,
            s(:sym, :colors),
            s(:sym, :colours)))),
      s(:class,
        s(:const, nil, :Barchart),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createBarchart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@xlabels,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@ylabels,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0)), :kind_of?,
                      s(:const, nil, :Hash)),
                    s(:ivasgn, :@series_size,
                      s(:sym, :stacked)),
                    s(:ivasgn, :@series_size,
                      s(:send,
                        s(:lvar, :args), :shift))),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@xlabels,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@ylabels,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0)), :kind_of?,
                      s(:const, nil, :Hash)),
                    s(:ivasgn, :@series_size,
                      s(:sym, :stacked)),
                    s(:ivasgn, :@series_size,
                      s(:send,
                        s(:lvar, :args), :shift))),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@xlabels)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@ylabels)),
                s(:ivar, :@series_size)))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :__destroy_hook__,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :delete,
                s(:ivar, :@path)))),
          s(:def, :plot,
            s(:args,
              s(:arg, :series),
              s(:arg, :dat),
              s(:optarg, :col,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:lvar, :series),
                s(:lvar, :dat),
                s(:lvar, :col)),
              s(:self))),
          s(:def, :colours,
            s(:args,
              s(:restarg, :cols)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "colours"),
                s(:splat,
                  s(:lvar, :cols))),
              s(:self))),
          s(:alias,
            s(:sym, :colour),
            s(:sym, :colours)),
          s(:alias,
            s(:sym, :colors),
            s(:sym, :colours)),
          s(:alias,
            s(:sym, :color),
            s(:sym, :colours)))),
      s(:class,
        s(:const, nil, :HorizontalBarchart),
        s(:const, nil, :Barchart),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "canvas"), :freeze),
              s(:send,
                s(:str, "::Plotchart::createHorizontalBarchart"), :freeze)), :freeze))),
      s(:class,
        s(:const, nil, :Boxplot),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createBoxplot"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@ylabels,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@xaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@ylabels,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@xaxis)),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@ylabels))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :__destroy_hook__,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :delete,
                s(:ivar, :@path)))),
          s(:def, :plot,
            s(:args,
              s(:arg, :label),
              s(:restarg, :values)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "plot"),
                s(:lvar, :label),
                s(:send,
                  s(:lvar, :values), :flatten)),
              s(:self))))),
      s(:class,
        s(:const, nil, :RightAxis),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createRightAxis"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@yaxis,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:send, nil, :array2tk_list,
                  s(:ivar, :@yaxis))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :__destroy_hook__,
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Tcllib), :Plotchart), :PlotSeries), :SeriesID_TBL), :delete,
                s(:ivar, :@path)))))),
      s(:class,
        s(:const, nil, :Timechart),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createTimechart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :String)),
                s(:begin,
                  s(:ivasgn, :@time_begin,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@time_end,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@items,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@time_begin,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@time_end,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@items,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:ivar, :@time_begin),
                s(:ivar, :@time_end),
                s(:ivar, :@items)))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :period,
            s(:args,
              s(:arg, :txt),
              s(:arg, :time_begin),
              s(:arg, :time_end),
              s(:optarg, :col,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "period"),
                s(:lvar, :txt),
                s(:lvar, :time_begin),
                s(:lvar, :time_end),
                s(:lvar, :col)),
              s(:self))),
          s(:def, :milestone,
            s(:args,
              s(:arg, :txt),
              s(:arg, :time),
              s(:optarg, :col,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "milestone"),
                s(:lvar, :txt),
                s(:lvar, :time),
                s(:lvar, :col)),
              s(:self))),
          s(:def, :vertline,
            s(:args,
              s(:arg, :txt),
              s(:arg, :time)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "vertline"),
                s(:lvar, :txt),
                s(:lvar, :time)),
              s(:self))),
          s(:def, :hscroll=,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "hscroll"),
                s(:lvar, :scr)),
              s(:lvar, :scr))),
          s(:def, :hscroll,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "hscroll"),
                s(:lvar, :scr)),
              s(:self))),
          s(:def, :vscroll=,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "vscroll"),
                s(:lvar, :scr)),
              s(:lvar, :scr))),
          s(:def, :vscroll,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "vscroll"),
                s(:lvar, :scr)),
              s(:self))))),
      s(:class,
        s(:const, nil, :Ganttchart),
        s(:const,
          s(:const, nil, :Tk), :Canvas),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ChartMethod)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "canvas"), :freeze),
                s(:send,
                  s(:str, "::Plotchart::createGanttchart"), :freeze)), :freeze)),
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :String)),
                s(:begin,
                  s(:ivasgn, :@time_begin,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@time_end,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@args,
                    s(:lvar, :args)),
                  s(:super,
                    s(:splat,
                      s(:lvar, :args)))),
                s(:begin,
                  s(:lvasgn, :parent,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@time_begin,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@time_end,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:ivasgn, :@args,
                    s(:lvar, :args)),
                  s(:if,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const, nil, :Tk), :Canvas)),
                    s(:ivasgn, :@path,
                      s(:send,
                        s(:lvar, :parent), :path)),
                    s(:super,
                      s(:lvar, :parent),
                      s(:splat,
                        s(:lvar, :args)))))),
              s(:ivasgn, :@chart,
                s(:send, nil, :_create_chart)))),
          s(:def, :_create_chart,
            s(:args),
            s(:begin,
              s(:if,
                s(:gvar, :$DEBUG),
                s(:send, nil, :p,
                  s(:send,
                    s(:const,
                      s(:send,
                        s(:self), :class), :TkCommandNames), :[],
                    s(:int, 1))), nil),
              s(:send, nil, :tk_call,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 1)),
                s(:ivar, :@path),
                s(:ivar, :@time_begin),
                s(:ivar, :@time_end),
                s(:splat,
                  s(:send, nil, :args))))),
          s(:send, nil, :private,
            s(:sym, :_create_chart)),
          s(:def, :task,
            s(:args,
              s(:arg, :txt),
              s(:arg, :time_begin),
              s(:arg, :time_end),
              s(:optarg, :completed,
                s(:float, 0.0))),
            s(:block,
              s(:send,
                s(:send, nil, :list,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@chart),
                    s(:str, "task"),
                    s(:lvar, :txt),
                    s(:lvar, :time_begin),
                    s(:lvar, :time_end),
                    s(:lvar, :completed))), :collect!),
              s(:args,
                s(:arg, :id)),
              s(:send,
                s(:const, nil, :TkcItem), :id2obj,
                s(:self),
                s(:lvar, :id)))),
          s(:def, :milestone,
            s(:args,
              s(:arg, :txt),
              s(:arg, :time),
              s(:optarg, :col,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "milestone"),
                s(:lvar, :txt),
                s(:lvar, :time),
                s(:lvar, :col)),
              s(:self))),
          s(:def, :vertline,
            s(:args,
              s(:arg, :txt),
              s(:arg, :time)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "vertline"),
                s(:lvar, :txt),
                s(:lvar, :time)),
              s(:self))),
          s(:def, :connect,
            s(:args,
              s(:arg, :from_task),
              s(:arg, :to_task)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :from_task), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :from_task,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :from_task))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :to_task), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :to_task,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :to_task))), nil),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "connect"),
                s(:lvar, :from_task),
                s(:lvar, :to_task)),
              s(:self))),
          s(:def, :summary,
            s(:args,
              s(:arg, :txt),
              s(:arg, :tasks)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :tasks), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :tasks,
                  s(:send, nil, :array2tk_list,
                    s(:lvar, :tasks))), nil),
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "summary"),
                s(:lvar, :tasks)),
              s(:self))),
          s(:def, :color_of_part,
            s(:args,
              s(:arg, :keyword),
              s(:arg, :newcolor)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "color"),
                s(:lvar, :keyword),
                s(:lvar, :newcolor)),
              s(:self))),
          s(:def, :font_of_part,
            s(:args,
              s(:arg, :keyword),
              s(:arg, :newfont)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@chart),
                s(:str, "font"),
                s(:lvar, :keyword),
                s(:lvar, :newfont)),
              s(:self))),
          s(:def, :hscroll=,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "hscroll"),
                s(:lvar, :scr)),
              s(:lvar, :scr))),
          s(:def, :hscroll,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "hscroll"),
                s(:lvar, :scr)),
              s(:self))),
          s(:def, :vscroll=,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "vscroll"),
                s(:lvar, :scr)),
              s(:lvar, :scr))),
          s(:def, :vscroll,
            s(:args,
              s(:arg, :scr)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:ivar, :@chart),
                s(:str, "vscroll"),
                s(:lvar, :scr)),
              s(:self))))),
      s(:class,
        s(:const, nil, :PlotSeries),
        s(:const, nil, :TkObject),
        s(:begin,
          s(:casgn, nil, :SeriesID_TBL,
            s(:send,
              s(:const,
                s(:const, nil, :TkCore), :INTERP), :create_table)),
          s(:block,
            s(:send,
              s(:begin,
                s(:casgn, nil, :Series_ID,
                  s(:array,
                    s(:send,
                      s(:str, "series"), :freeze),
                    s(:send,
                      s(:const, nil, :TkUtil), :untrust,
                      s(:str, "00000"))))), :instance_eval),
            s(:args),
            s(:begin,
              s(:ivasgn, :@mutex,
                s(:send,
                  s(:const, nil, :Mutex), :new)),
              s(:def, :mutex,
                s(:args),
                s(:ivar, :@mutex)),
              s(:send, nil, :freeze))),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :TkCore), :INTERP), :init_ip_env),
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :SeriesID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const, nil, :SeriesID_TBL), :clear))),
          s(:defs,
            s(:self), :id2obj,
            s(:args,
              s(:arg, :chart),
              s(:arg, :id)),
            s(:begin,
              s(:lvasgn, :path,
                s(:send,
                  s(:lvar, :chart), :path)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :SeriesID_TBL), :mutex), :synchronize),
                s(:args),
                s(:if,
                  s(:send,
                    s(:const, nil, :SeriesID_TBL), :[],
                    s(:lvar, :path)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:const, nil, :SeriesID_TBL), :[],
                        s(:lvar, :path)), :[],
                      s(:lvar, :id)),
                    s(:send,
                      s(:send,
                        s(:const, nil, :SeriesID_TBL), :[],
                        s(:lvar, :path)), :[],
                      s(:lvar, :id)),
                    s(:lvar, :id)),
                  s(:lvar, :id))))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :chart),
              s(:optarg, :keys,
                s(:nil))),
            s(:begin,
              s(:ivasgn, :@parent,
                s(:ivasgn, :@chart_obj,
                  s(:lvar, :chart))),
              s(:ivasgn, :@ppath,
                s(:send,
                  s(:ivar, :@chart_obj), :path)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :Series_ID), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@path,
                    s(:ivasgn, :@series,
                      s(:ivasgn, :@id,
                        s(:send,
                          s(:const, nil, :Series_ID), :join,
                          s(:send,
                            s(:const,
                              s(:const, nil, :TkCore), :INTERP), :_ip_id_))))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :Series_ID), :[],
                      s(:int, 1)), :succ!))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :SeriesID_TBL), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:or_asgn,
                    s(:send,
                      s(:const, nil, :SeriesID_TBL), :[],
                      s(:ivar, :@ppath)),
                    s(:hash)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :SeriesID_TBL), :[],
                      s(:ivar, :@ppath)), :[]=,
                    s(:ivar, :@id),
                    s(:self)))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :dataconfig,
                  s(:lvar, :keys)), nil))),
          s(:def, :plot,
            s(:args,
              s(:restarg, :args)),
            s(:send,
              s(:ivar, :@chart_obj), :plot,
              s(:ivar, :@series),
              s(:splat,
                s(:lvar, :args)))),
          s(:def, :dataconfig,
            s(:args,
              s(:arg, :key),
              s(:optarg, :value,
                s(:const, nil, :None))),
            s(:send,
              s(:ivar, :@chart_obj), :dataconfig,
              s(:ivar, :@series),
              s(:lvar, :key),
              s(:lvar, :value))))))))
