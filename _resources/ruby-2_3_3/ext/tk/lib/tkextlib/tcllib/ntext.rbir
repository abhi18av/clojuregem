s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "ntext")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :Tcllib),
    s(:casgn, nil, :Ntext,
      s(:send,
        s(:const, nil, :TkBindTag), :new_by_name,
        s(:str, "Ntext")))),
  s(:block,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tcllib), :Ntext), :instance_eval),
    s(:args),
    s(:begin,
      s(:ivasgn, :@classicAnchor,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::classicAnchor"))),
      s(:ivasgn, :@classicExtras,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::classicExtras"))),
      s(:ivasgn, :@classicMouseSelect,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::classicMouseSelect"))),
      s(:ivasgn, :@classicWordBreak,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::classicWordBreak"))),
      s(:ivasgn, :@classicWrap,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::classicWrap"))),
      s(:ivasgn, :@overwrite,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::overwrite"))),
      s(:ivasgn, :@newWrapRegexp,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::newWrapRegexp"))),
      s(:ivasgn, :@tcl_match_wordBreakAfter,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::tcl_match_wordBreakAfter"))),
      s(:ivasgn, :@tcl_match_wordBreakBefore,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::tcl_match_wordBreakBefore"))),
      s(:ivasgn, :@tcl_match_endOfWord,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::tcl_match_endOfWord"))),
      s(:ivasgn, :@tcl_match_startOfNextWord,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::tcl_match_startOfNextWord"))),
      s(:ivasgn, :@tcl_match_startOfPreviousWord,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "::ntext::tcl_match_startOfPreviousWord"))))),
  s(:sclass,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tcllib), :Ntext),
    s(:begin,
      s(:def, :wrapIndent,
        s(:args,
          s(:arg, :txt),
          s(:restarg, :args)),
        s(:send,
          s(:const, nil, :TK), :tk_call,
          s(:str, "::next::wrapIndent"),
          s(:lvar, :txt),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :initializeMatchPatterns,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :TK), :tk_call,
            s(:str, "::next::initializeMatchPatterns")),
          s(:self))),
      s(:def, :createMatchPatterns,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:const, nil, :TK), :tk_call,
            s(:str, "::next::createMatchPatterns"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :classicAnchor,
        s(:args),
        s(:send,
          s(:ivar, :@classicAnchor), :bool)),
      s(:def, :classicAnchor=,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@classicAnchor), :bool=,
          s(:lvar, :mode))),
      s(:def, :classicExtras,
        s(:args),
        s(:send,
          s(:ivar, :@classicExtras), :bool)),
      s(:def, :classicExtras=,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@classicExtras), :bool=,
          s(:lvar, :mode))),
      s(:def, :classicMouseSelect,
        s(:args),
        s(:send,
          s(:ivar, :@classicMouseSelect), :bool)),
      s(:def, :classicMouseSelect=,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@classicMouseSelect), :bool=,
          s(:lvar, :mode))),
      s(:def, :classicWordBreak,
        s(:args),
        s(:send,
          s(:ivar, :@classicWordBreak), :bool)),
      s(:def, :classicWordBreak=,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@classicWordBreak), :bool=,
          s(:lvar, :mode))),
      s(:def, :classicWrap,
        s(:args),
        s(:send,
          s(:ivar, :@classicWrap), :bool)),
      s(:def, :classicWrap=,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@classicWrap), :bool=,
          s(:lvar, :mode))),
      s(:def, :overwrite,
        s(:args),
        s(:send,
          s(:ivar, :@overwrite), :bool)),
      s(:def, :overwrite=,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@classic), :bool=,
          s(:lvar, :mode))),
      s(:def, :newWrapRegexp,
        s(:args),
        s(:send,
          s(:ivar, :@newWrapRegexp), :value)),
      s(:def, :newWrapRegexp=,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:ivar, :@newWrapRegexp), :value=,
          s(:lvar, :val))),
      s(:def, :tcl_match_wordBreakAfter,
        s(:args),
        s(:send,
          s(:ivar, :@tcl_match_wordBreakAfter), :value)),
      s(:def, :tcl_match_wordBreakAfter=,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:ivar, :@tcl_match_wordBreakAfter), :value=,
          s(:lvar, :val))),
      s(:def, :tcl_match_wordBreakBefore,
        s(:args),
        s(:send,
          s(:ivar, :@tcl_match_wordBreakBefore), :value)),
      s(:def, :tcl_match_wordBreakBefore=,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:ivar, :@tcl_match_wordBreakBefore), :value=,
          s(:lvar, :val))),
      s(:def, :tcl_match_endOfWord,
        s(:args),
        s(:send,
          s(:ivar, :@tcl_match_endOfWord), :value)),
      s(:def, :tcl_match_endOfWord=,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:ivar, :@tcl_match_endOfWord), :value=,
          s(:lvar, :val))),
      s(:def, :tcl_match_startOfNextWord,
        s(:args),
        s(:send,
          s(:ivar, :@tcl_match_startOfNextWord), :value)),
      s(:def, :tcl_match_startOfNextWord=,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:ivar, :@tcl_match_startOfNextWord), :value=,
          s(:lvar, :val))),
      s(:def, :tcl_match_startOfPreviousWord,
        s(:args),
        s(:send,
          s(:ivar, :@tcl_match_startOfPreviousWord), :value)),
      s(:def, :tcl_match_startOfPreviousWord=,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:ivar, :@tcl_match_startOfPreviousWord), :value=,
          s(:lvar, :val))))))
