s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:begin,
      s(:module,
        s(:const, nil, :Tcllib),
        s(:module,
          s(:const, nil, :Cursor),
          s(:begin,
            s(:casgn, nil, :PACKAGE_NAME,
              s(:send,
                s(:str, "cursor"), :freeze)),
            s(:defs,
              s(:self), :package_name,
              s(:args),
              s(:const, nil, :PACKAGE_NAME)),
            s(:defs,
              s(:self), :package_version,
              s(:args),
              s(:kwbegin,
                s(:rescue,
                  s(:send,
                    s(:const, nil, :TkPackage), :require,
                    s(:str, "cursor")),
                  s(:resbody, nil, nil,
                    s(:str, "")), nil))),
            s(:defs,
              s(:self), :not_available,
              s(:args),
              s(:send, nil, :fail,
                s(:const, nil, :RuntimeError),
                s(:str, "'tkextlib/tcllib/cursor' extension is not available on your current environment."))),
            s(:defs,
              s(:self), :cursor_display,
              s(:args,
                s(:optarg, :win,
                  s(:const, nil, :None))),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Tcllib), :Cursor), :not_available)),
            s(:defs,
              s(:self), :cursor_propagate,
              s(:args,
                s(:arg, :win),
                s(:arg, :cursor)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Tcllib), :Cursor), :not_available)),
            s(:defs,
              s(:self), :cursor_restore,
              s(:args,
                s(:arg, :win),
                s(:optarg, :cursor,
                  s(:const, nil, :None))),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Tcllib), :Cursor), :not_available))))),
      s(:defs,
        s(:self), :cursor_display,
        s(:args,
          s(:optarg, :parent,
            s(:const, nil, :None))),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tcllib), :Cursor), :cursor_display,
          s(:lvar, :parent))))),
  s(:class,
    s(:const, nil, :TkWindow), nil,
    s(:begin,
      s(:def, :cursor_propagate,
        s(:args,
          s(:arg, :cursor)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tcllib), :Cursor), :cursor_propagate,
          s(:self),
          s(:lvar, :cursor))),
      s(:def, :cursor_restore,
        s(:args,
          s(:optarg, :cursor,
            s(:const, nil, :None))),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tcllib), :Cursor), :cursor_restore,
          s(:self),
          s(:lvar, :cursor))))),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "cursor")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Tcllib),
      s(:begin,
        s(:sclass,
          s(:const, nil, :Cursor),
          s(:undef,
            s(:sym, :not_available))),
        s(:module,
          s(:const, nil, :Cursor),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :TkCore)),
            s(:defs,
              s(:self), :cursor_display,
              s(:args,
                s(:optarg, :win,
                  s(:const, nil, :None))),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::cursor::display"),
                s(:send, nil, :_epath,
                  s(:lvar, :win)))),
            s(:defs,
              s(:self), :cursor_propagate,
              s(:args,
                s(:arg, :win),
                s(:arg, :cursor)),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::cursor::propagate"),
                s(:send, nil, :_epath,
                  s(:lvar, :win)),
                s(:lvar, :cursor))),
            s(:defs,
              s(:self), :cursor_restore,
              s(:args,
                s(:arg, :win),
                s(:optarg, :cursor,
                  s(:const, nil, :None))),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::cursor::restore"),
                s(:send, nil, :_epath,
                  s(:lvar, :win)),
                s(:lvar, :cursor)))))))))
