s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/canvas")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "tkpiechart")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Tcllib),
      s(:module,
        s(:const, nil, :Tkpiechart), nil))),
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tcllib), :Tkpiechart),
    s(:begin,
      s(:casgn, nil, :PACKAGE_NAME,
        s(:send,
          s(:str, "tkpiechart"), :freeze)),
      s(:defs,
        s(:self), :package_name,
        s(:args),
        s(:const, nil, :PACKAGE_NAME)),
      s(:defs,
        s(:self), :package_version,
        s(:args),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:const, nil, :TkPackage), :require,
              s(:str, "tkpiechart")),
            s(:resbody, nil, nil,
              s(:str, "")), nil))),
      s(:module,
        s(:const, nil, :ConfigMethod),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :TkConfigMethod)),
          s(:def, :__pathname,
            s(:args),
            s(:send,
              s(:send,
                s(:send,
                  s(:self), :path), :+,
                s(:str, ";")), :+,
              s(:send,
                s(:self), :tag))),
          s(:send, nil, :private,
            s(:sym, :__pathname)),
          s(:def, :__cget_cmd,
            s(:args),
            s(:array,
              s(:str, "::switched::cget"),
              s(:send,
                s(:self), :tag))),
          s(:def, :__config_cmd,
            s(:args),
            s(:array,
              s(:str, "::switched::configure"),
              s(:send,
                s(:self), :tag))),
          s(:send, nil, :private,
            s(:sym, :__config_cmd)),
          s(:def, :__configinfo_struct,
            s(:args),
            s(:hash,
              s(:pair,
                s(:sym, :key),
                s(:int, 0)),
              s(:pair,
                s(:sym, :alias),
                s(:nil)),
              s(:pair,
                s(:sym, :db_name),
                s(:nil)),
              s(:pair,
                s(:sym, :db_class),
                s(:nil)),
              s(:pair,
                s(:sym, :default_value),
                s(:int, 1)),
              s(:pair,
                s(:sym, :current_value),
                s(:int, 2)))),
          s(:send, nil, :private,
            s(:sym, :__configinfo_struct)),
          s(:def, :__boolval_optkeys,
            s(:args),
            s(:send,
              s(:send,
                s(:send,
                  s(:super), :<<,
                  s(:str, "select")), :<<,
                s(:str, "autoupdate")), :<<,
              s(:str, "selectable"))),
          s(:send, nil, :private,
            s(:sym, :__boolval_optkeys)),
          s(:def, :__strval_optkeys,
            s(:args),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:super), :<<,
                    s(:str, "bordercolor")), :<<,
                  s(:str, "textbackground")), :<<,
                s(:str, "widestvaluetext")), :<<,
              s(:str, "title"))),
          s(:send, nil, :private,
            s(:sym, :__strval_optkeys)),
          s(:def, :__listval_optkeys,
            s(:args),
            s(:send,
              s(:super), :<<,
              s(:str, "colors"))),
          s(:send, nil, :private,
            s(:sym, :__listval_optkeys)))),
      s(:class,
        s(:const, nil, :PieChartObj),
        s(:const, nil, :TkcItem),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ConfigMethod)),
          s(:def, :__font_optkeys,
            s(:args),
            s(:array,
              s(:str, "titlefont"))),
          s(:send, nil, :private,
            s(:sym, :__font_optkeys)))),
      s(:class,
        s(:const, nil, :Pie),
        s(:const, nil, :TkcItem),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ConfigMethod)),
          s(:def, :create_self,
            s(:args,
              s(:arg, :x),
              s(:arg, :y),
              s(:arg, :width),
              s(:arg, :height),
              s(:optarg, :keys,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :keys),
                  s(:send,
                    s(:lvar, :keys), :!=,
                    s(:const, nil, :None))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "pie"),
                    s(:ivar, :@c),
                    s(:lvar, :x),
                    s(:lvar, :y),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys),
                        s(:true))))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "pie"),
                    s(:ivar, :@c),
                    s(:lvar, :x),
                    s(:lvar, :y)))),
              s(:ivasgn, :@slice_tbl,
                s(:hash)),
              s(:lvasgn, :id,
                s(:dstr,
                  s(:str, "pie("),
                  s(:begin,
                    s(:ivar, :@tag_key)),
                  s(:str, ")"))),
              s(:ivasgn, :@tag,
                s(:ivasgn, :@tag_pie,
                  s(:send, nil, :TkcNamedTag,
                    s(:ivar, :@c),
                    s(:lvar, :id)))),
              s(:ivasgn, :@tag_slices,
                s(:send, nil, :TkcNamedTag,
                  s(:ivar, :@c),
                  s(:dstr,
                    s(:str, "pieSlices("),
                    s(:begin,
                      s(:ivar, :@tag_key)),
                    s(:str, ")")))),
              s(:lvar, :id))),
          s(:send, nil, :private,
            s(:sym, :create_self)),
          s(:def, :tag_key,
            s(:args),
            s(:ivar, :@tag_key)),
          s(:def, :tag,
            s(:args),
            s(:ivar, :@tag)),
          s(:def, :canvas,
            s(:args),
            s(:ivar, :@c)),
          s(:def, :_entry_slice,
            s(:args,
              s(:arg, :slice)),
            s(:send,
              s(:ivar, :@slice_tbl), :[]=,
              s(:send,
                s(:lvar, :slice), :to_eval),
              s(:lvar, :slice))),
          s(:def, :_delete_slice,
            s(:args,
              s(:arg, :slice)),
            s(:send,
              s(:ivar, :@slice_tbl), :delete,
              s(:send,
                s(:lvar, :slice), :to_eval))),
          s(:def, :delete,
            s(:args),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::stooop::delete"),
                s(:ivar, :@tag_key)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :CItemID_TBL), :mutex), :synchronize),
                s(:args),
                s(:if,
                  s(:send,
                    s(:const, nil, :CItemID_TBL), :[],
                    s(:ivar, :@path)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :CItemID_TBL), :[],
                      s(:ivar, :@path)), :delete,
                    s(:ivar, :@id)), nil)),
              s(:self))),
          s(:def, :new_slice,
            s(:args,
              s(:optarg, :text,
                s(:const, nil, :None))),
            s(:send,
              s(:const, nil, :Slice), :new,
              s(:self),
              s(:lvar, :text))),
          s(:def, :delete_slice,
            s(:args,
              s(:arg, :slice)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :slice), :kind_of?,
                  s(:const, nil, :Slice)), nil,
                s(:if,
                  s(:begin,
                    s(:lvasgn, :slice,
                      s(:send,
                        s(:ivar, :@slice_tbl), :[],
                        s(:lvar, :slice)))), nil,
                  s(:return,
                    s(:send, nil, :tk_call_without_enc,
                      s(:str, "pie::deleteSlice"),
                      s(:ivar, :@tag_key),
                      s(:lvar, :slice))))),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :slice), :kind_of?,
                    s(:const, nil, :Slice)),
                  s(:send,
                    s(:send,
                      s(:lvar, :slice), :pie), :==,
                    s(:self))), nil,
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "argument is not a slice of self"))),
              s(:send,
                s(:lvar, :slice), :delete))),
          s(:def, :selected_slices,
            s(:args),
            s(:block,
              s(:send,
                s(:send, nil, :tk_split_simplelist,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "pie::selectedSlices"),
                    s(:ivar, :@tag_key))), :collect),
              s(:args,
                s(:arg, :slice)),
              s(:or,
                s(:send,
                  s(:ivar, :@slice_tbl), :[],
                  s(:lvar, :slice)),
                s(:send,
                  s(:const, nil, :Slice), :new,
                  s(:sym, :no_create),
                  s(:self),
                  s(:lvar, :slice))))))),
      s(:class,
        s(:const, nil, :Slice),
        s(:const, nil, :TkcItem),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ConfigMethod)),
          s(:def, :__config_cmd,
            s(:args),
            s(:array,
              s(:str, "::switched::configure"),
              s(:send,
                s(:self), :tag))),
          s(:send, nil, :private,
            s(:sym, :__config_cmd)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :pie),
              s(:restarg, :args)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :pie), :kind_of?,
                    s(:const, nil, :Pie)),
                  s(:send,
                    s(:lvar, :pie), :!=,
                    s(:sym, :no_create))), nil,
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "expects TkPiechart::Pie for 1st argument"))),
              s(:if,
                s(:send,
                  s(:lvar, :pie), :==,
                  s(:sym, :no_create)),
                s(:masgn,
                  s(:mlhs,
                    s(:ivasgn, :@pie),
                    s(:ivasgn, :@tag_key)),
                  s(:lvar, :args)),
                s(:begin,
                  s(:lvasgn, :text,
                    s(:or,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0)),
                      s(:const, nil, :None))),
                  s(:ivasgn, :@pie,
                    s(:lvar, :pie)),
                  s(:ivasgn, :@tag_key,
                    s(:send, nil, :tk_call_without_enc,
                      s(:str, "pie::newSlice"),
                      s(:send,
                        s(:ivar, :@pie), :tag_key),
                      s(:lvar, :text))))),
              s(:ivasgn, :@parent,
                s(:ivasgn, :@c,
                  s(:send,
                    s(:ivar, :@pie), :canvas))),
              s(:ivasgn, :@path,
                s(:send,
                  s(:ivar, :@parent), :path)),
              s(:send,
                s(:ivar, :@pie), :_entry_slice,
                s(:self)),
              s(:ivasgn, :@id,
                s(:dstr,
                  s(:str, "slices("),
                  s(:begin,
                    s(:ivar, :@tag_key)),
                  s(:str, ")"))),
              s(:ivasgn, :@tag,
                s(:send,
                  s(:const, nil, :TkcNamedTag), :new,
                  s(:send,
                    s(:ivar, :@pie), :canvas),
                  s(:ivar, :@id))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :CItemID_TBL), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:const, nil, :CItemID_TBL), :[],
                      s(:ivar, :@path)), nil,
                    s(:send,
                      s(:const, nil, :CItemID_TBL), :[]=,
                      s(:ivar, :@path),
                      s(:hash))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :CItemID_TBL), :[],
                      s(:ivar, :@path)), :[]=,
                    s(:ivar, :@id),
                    s(:self)))))),
          s(:def, :tag_key,
            s(:args),
            s(:ivar, :@tag_key)),
          s(:def, :tag,
            s(:args),
            s(:ivar, :@tag)),
          s(:def, :pie,
            s(:args),
            s(:ivar, :@pie)),
          s(:def, :delete,
            s(:args),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "pie::deleteSlice"),
                s(:send,
                  s(:ivar, :@pie), :tag_key),
                s(:ivar, :@tag_key)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :CItemID_TBL), :mutex), :synchronize),
                s(:args),
                s(:if,
                  s(:send,
                    s(:const, nil, :CItemID_TBL), :[],
                    s(:ivar, :@path)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :CItemID_TBL), :[],
                      s(:ivar, :@path)), :delete,
                    s(:ivar, :@id)), nil)),
              s(:send,
                s(:ivar, :@pie), :_delete_slice,
                s(:self)),
              s(:self))),
          s(:def, :size,
            s(:args,
              s(:arg, :share),
              s(:optarg, :disp,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "pie::sizeSlice"),
                s(:send,
                  s(:ivar, :@pie), :tag_key),
                s(:ivar, :@tag_key),
                s(:lvar, :share),
                s(:lvar, :disp)),
              s(:self))),
          s(:def, :label,
            s(:args,
              s(:arg, :text)),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "pie::labelSlice"),
                s(:send,
                  s(:ivar, :@pie), :tag_key),
                s(:ivar, :@tag_key),
                s(:lvar, :text)),
              s(:self))))),
      s(:class,
        s(:const, nil, :BoxLabeler),
        s(:const, nil, :TkcItem),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ConfigMethod)),
          s(:def, :__config_cmd,
            s(:args),
            s(:array,
              s(:str, "::switched::configure"),
              s(:send,
                s(:self), :tag))),
          s(:send, nil, :private,
            s(:sym, :__config_cmd)),
          s(:def, :create_self,
            s(:args,
              s(:optarg, :keys,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :keys),
                  s(:send,
                    s(:lvar, :keys), :!=,
                    s(:const, nil, :None))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "pieBoxLabeler"),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys),
                        s(:true))))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "pieBoxLabeler")))),
              s(:lvasgn, :id,
                s(:dstr,
                  s(:str, "pieBoxLabeler("),
                  s(:begin,
                    s(:ivar, :@tag_key)),
                  s(:str, ")"))),
              s(:ivasgn, :@tag,
                s(:send, nil, :TkcNamedTag,
                  s(:ivar, :@c),
                  s(:lvar, :id))),
              s(:lvar, :id))),
          s(:send, nil, :private,
            s(:sym, :create_self)))),
      s(:class,
        s(:const, nil, :PeripheralLabeler),
        s(:const, nil, :TkcItem),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ConfigMethod)),
          s(:def, :__font_optkeys,
            s(:args),
            s(:array,
              s(:str, "font"),
              s(:str, "smallfont"))),
          s(:send, nil, :private,
            s(:sym, :__font_optkeys)),
          s(:def, :__config_cmd,
            s(:args),
            s(:array,
              s(:str, "::switched::configure"),
              s(:send,
                s(:self), :tag))),
          s(:send, nil, :private,
            s(:sym, :__config_cmd)),
          s(:def, :create_self,
            s(:args,
              s(:optarg, :keys,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :keys),
                  s(:send,
                    s(:lvar, :keys), :!=,
                    s(:const, nil, :None))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "piePeripheralLabeler"),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys),
                        s(:true))))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "piePeripheralLabeler")))),
              s(:lvasgn, :id,
                s(:dstr,
                  s(:str, "piePeripheralLabeler("),
                  s(:begin,
                    s(:ivar, :@tag_key)),
                  s(:str, ")"))),
              s(:ivasgn, :@tag,
                s(:send, nil, :TkcNamedTag,
                  s(:ivar, :@c),
                  s(:lvar, :id))),
              s(:lvar, :id))),
          s(:send, nil, :private,
            s(:sym, :create_self)))),
      s(:class,
        s(:const, nil, :Label),
        s(:const, nil, :TkcItem),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :ConfigMethod)),
          s(:def, :__config_cmd,
            s(:args),
            s(:array,
              s(:str, "::switched::configure"),
              s(:send,
                s(:self), :tag))),
          s(:send, nil, :private,
            s(:sym, :__config_cmd)),
          s(:def, :create_self,
            s(:args,
              s(:arg, :x),
              s(:arg, :y),
              s(:optarg, :keys,
                s(:const, nil, :None))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :keys),
                  s(:send,
                    s(:lvar, :keys), :!=,
                    s(:const, nil, :None))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "canvasLabel"),
                    s(:ivar, :@c),
                    s(:lvar, :x),
                    s(:lvar, :y),
                    s(:send, nil, :width),
                    s(:send, nil, :height),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys),
                        s(:true))))),
                s(:ivasgn, :@tag_key,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "::stooop::new"),
                    s(:str, "canvasLabel"),
                    s(:ivar, :@c),
                    s(:lvar, :x),
                    s(:lvar, :y),
                    s(:send, nil, :width),
                    s(:send, nil, :height)))),
              s(:lvasgn, :id,
                s(:dstr,
                  s(:str, "canvasLabel("),
                  s(:begin,
                    s(:ivar, :@tag_key)),
                  s(:str, ")"))),
              s(:ivasgn, :@tag,
                s(:send, nil, :TkcNamedTag,
                  s(:ivar, :@c),
                  s(:lvar, :id))),
              s(:lvar, :id))),
          s(:send, nil, :private,
            s(:sym, :create_self)))))))
