s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :Tcllib),
    s(:module,
      s(:const, nil, :Style),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "style"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "style")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:defs,
          s(:self), :not_available,
          s(:args),
          s(:send, nil, :fail,
            s(:const, nil, :RuntimeError),
            s(:str, "'tkextlib/tcllib/style' extension is not available on your current environment."))),
        s(:defs,
          s(:self), :names,
          s(:args),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tcllib), :Style), :not_available)),
        s(:defs,
          s(:self), :use,
          s(:args,
            s(:arg, :style)),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tcllib), :Style), :not_available))))),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "style")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :Tcllib),
    s(:begin,
      s(:sclass,
        s(:const, nil, :Style),
        s(:undef,
          s(:sym, :not_available))),
      s(:module,
        s(:const, nil, :Style),
        s(:begin,
          s(:send, nil, :extend,
            s(:const, nil, :TkCore)),
          s(:defs,
            s(:self), :names,
            s(:args),
            s(:send, nil, :tk_split_simplelist,
              s(:send, nil, :tk_call,
                s(:str, "style::names")))),
          s(:defs,
            s(:self), :use,
            s(:args,
              s(:arg, :style)),
            s(:send, nil, :tk_call,
              s(:str, "style::use"),
              s(:lvar, :style))))))))
