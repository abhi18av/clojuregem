s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "khim")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :Tcllib),
    s(:class,
      s(:const, nil, :KHIM),
      s(:const, nil, :TkToplevel),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "khim"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "khim")),
              s(:resbody, nil, nil,
                s(:str, "")), nil)))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tcllib), :KHIM), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "::khim::getOptions"), :freeze)), :freeze)),
      s(:defs,
        s(:self), :get_options,
        s(:args,
          s(:optarg, :parent,
            s(:str, ""))),
        s(:begin,
          s(:lvasgn, :path,
            s(:send,
              s(:lvar, :parent), :+,
              s(:str, ".tcllib_widget_khim_dialog"))),
          s(:send,
            s(:self), :new,
            s(:hash,
              s(:pair,
                s(:sym, :widgetname),
                s(:lvar, :path)))))),
      s(:defs,
        s(:self), :get_config,
        s(:args),
        s(:send,
          s(:const, nil, :Tk), :tk_call_without_enc,
          s(:str, "::khim::getConfig"))),
      s(:defs,
        s(:self), :set_config,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :args), :length), :==,
            s(:int, 1)),
          s(:send,
            s(:const, nil, :Tk), :ip_eval,
            s(:send, nil, :cmd_string)),
          s(:send,
            s(:const, nil, :Tk), :tk_call,
            s(:str, "::khim::setConfig"),
            s(:splat,
              s(:lvar, :args))))),
      s(:defs,
        s(:self), :showHelp,
        s(:args),
        s(:send,
          s(:const,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tcllib), :KHIM), :Help), :new)),
      s(:def, :create_self,
        s(:args,
          s(:optarg, :keys,
            s(:const, nil, :None))),
        s(:begin,
          s(:ivasgn, :@db_class,
            s(:ivasgn, :@classname,
              s(:nil))),
          s(:super,
            s(:const, nil, :None)))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tcllib), :KHIM), :Help),
    s(:const, nil, :TkToplevel),
    s(:casgn, nil, :TkCommandNames,
      s(:send,
        s(:array,
          s(:send,
            s(:str, "::khim::showHelp"), :freeze)), :freeze))))
