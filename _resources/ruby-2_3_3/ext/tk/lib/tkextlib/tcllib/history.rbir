s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/entry")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "history")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :Tcllib),
    s(:module,
      s(:const, nil, :History),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "history"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "history")),
              s(:resbody, nil, nil,
                s(:str, "")), nil)))))),
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tcllib), :History),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :TkCore)),
      s(:defs,
        s(:self), :init,
        s(:args,
          s(:arg, :entry),
          s(:optarg, :length,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::history::init"),
            s(:send,
              s(:lvar, :entry), :path),
            s(:lvar, :length)),
          s(:send,
            s(:lvar, :entry), :extend,
            s(:self)))),
      s(:defs,
        s(:self), :remove,
        s(:args,
          s(:arg, :entry)),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::history::remove"),
            s(:send,
              s(:lvar, :entry), :path)),
          s(:lvar, :entry))),
      s(:def, :history_remove,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::history::remove"),
            s(:ivar, :@path)),
          s(:self))),
      s(:def, :history_add,
        s(:args,
          s(:arg, :text)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "::history::add"),
            s(:ivar, :@path),
            s(:lvar, :text)),
          s(:self))),
      s(:def, :history_get,
        s(:args),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::history::get"),
            s(:ivar, :@path)))),
      s(:def, :history_clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "::history::clear"),
            s(:ivar, :@path)),
          s(:self))),
      s(:def, :history_configure,
        s(:args,
          s(:arg, :opt),
          s(:arg, :value)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "::history::configure"),
            s(:ivar, :@path),
            s(:lvar, :opt),
            s(:lvar, :value)),
          s(:self))),
      s(:def, :history_configinfo,
        s(:args,
          s(:arg, :opt)),
        s(:send, nil, :tk_call,
          s(:str, "::history::configure"),
          s(:ivar, :@path),
          s(:lvar, :opt))))))
