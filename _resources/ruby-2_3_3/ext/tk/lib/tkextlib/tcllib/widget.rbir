s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "widget")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :Tcllib),
    s(:module,
      s(:const, nil, :Widget),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "widget"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "widget")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:defs,
          s(:self), :isa,
          s(:args,
            s(:arg, :compare_as),
            s(:restarg, :args)),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:return,
                  s(:send,
                    s(:const, nil, :Tk), :tk_call,
                    s(:str, "::widget::isa"),
                    s(:lvar, :compare_as),
                    s(:splat,
                      s(:lvar, :args)))),
                s(:resbody, nil,
                  s(:lvasgn, :e),
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:const, nil, :TkComm), :bool,
                        s(:send,
                          s(:const, nil, :Tk), :tk_call,
                          s(:str, "info"),
                          s(:str, "command"),
                          s(:str, "::widget::isa"))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TkComm), :bool,
                          s(:send,
                            s(:const, nil, :Tk), :tk_call,
                            s(:str, "info"),
                            s(:str, "command"),
                            s(:str, "::widget::validate"))), :!)),
                    s(:send, nil, :fail,
                      s(:lvar, :e)), nil)), nil)),
            s(:send,
              s(:const, nil, :Tk), :tk_call,
              s(:str, "::widget::validate"),
              s(:lvar, :compare_as),
              s(:splat,
                s(:lvar, :args))))),
        s(:defs,
          s(:self), :validate,
          s(:args,
            s(:arg, :compare_as),
            s(:restarg, :args)),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:return,
                  s(:send,
                    s(:const, nil, :Tk), :tk_call,
                    s(:str, "::widget::validate"),
                    s(:lvar, :compare_as),
                    s(:splat,
                      s(:lvar, :args)))),
                s(:resbody, nil,
                  s(:lvasgn, :e),
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:const, nil, :TkComm), :bool,
                        s(:send,
                          s(:const, nil, :Tk), :tk_call,
                          s(:str, "info"),
                          s(:str, "command"),
                          s(:str, "::widget::validate"))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TkComm), :bool,
                          s(:send,
                            s(:const, nil, :Tk), :tk_call,
                            s(:str, "info"),
                            s(:str, "command"),
                            s(:str, "::widget::isa"))), :!)),
                    s(:send, nil, :fail,
                      s(:lvar, :e)), nil)), nil)),
            s(:send,
              s(:const, nil, :Tk), :tk_call,
              s(:str, "::widget::isa"),
              s(:lvar, :compare_as),
              s(:splat,
                s(:lvar, :args)))))))),
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tcllib), :Widget),
    s(:begin,
      s(:send,
        s(:const,
          s(:const, nil, :TkComm), :TkExtlibAutoloadModule), :unshift,
        s(:self)),
      s(:send, nil, :autoload,
        s(:sym, :Calendar),
        s(:str, "tkextlib/tcllib/calendar")),
      s(:send, nil, :autoload,
        s(:sym, :Canvas_Sqmap),
        s(:str, "tkextlib/tcllib/canvas_sqmap")),
      s(:send, nil, :autoload,
        s(:sym, :Canvas_Zoom),
        s(:str, "tkextlib/tcllib/canvas_zoom")),
      s(:send, nil, :autoload,
        s(:sym, :Dialog),
        s(:str, "tkextlib/tcllib/dialog")),
      s(:send, nil, :autoload,
        s(:sym, :Panelframe),
        s(:str, "tkextlib/tcllib/panelframe")),
      s(:send, nil, :autoload,
        s(:sym, :PanelFrame),
        s(:str, "tkextlib/tcllib/panelframe")),
      s(:send, nil, :autoload,
        s(:sym, :Ruler),
        s(:str, "tkextlib/tcllib/ruler")),
      s(:send, nil, :autoload,
        s(:sym, :Screenruler),
        s(:str, "tkextlib/tcllib/screenruler")),
      s(:send, nil, :autoload,
        s(:sym, :ScreenRuler),
        s(:str, "tkextlib/tcllib/screenruler")),
      s(:send, nil, :autoload,
        s(:sym, :Scrolledwindow),
        s(:str, "tkextlib/tcllib/scrollwin")),
      s(:send, nil, :autoload,
        s(:sym, :ScrolledWindow),
        s(:str, "tkextlib/tcllib/scrollwin")),
      s(:send, nil, :autoload,
        s(:sym, :Superframe),
        s(:str, "tkextlib/tcllib/superframe")),
      s(:send, nil, :autoload,
        s(:sym, :SuperFrame),
        s(:str, "tkextlib/tcllib/superframe")),
      s(:send, nil, :autoload,
        s(:sym, :Toolbar),
        s(:str, "tkextlib/tcllib/toolbar")),
      s(:send, nil, :autoload,
        s(:sym, :ToolbarItem),
        s(:str, "tkextlib/tcllib/toolbar")))))
