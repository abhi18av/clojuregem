s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/setup.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tkDND/setup.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "Shape")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :TkDND),
      s(:module,
        s(:const, nil, :Shape),
        s(:begin,
          s(:send, nil, :extend,
            s(:const, nil, :TkCore)),
          s(:casgn, nil, :PACKAGE_NAME,
            s(:send,
              s(:str, "Shape"), :freeze)),
          s(:defs,
            s(:self), :package_name,
            s(:args),
            s(:const, nil, :PACKAGE_NAME)),
          s(:sclass,
            s(:self),
            s(:begin,
              s(:def, :package_version,
                s(:args),
                s(:send,
                  s(:const, nil, :Tk), :tk_call,
                  s(:str, "set"),
                  s(:str, "shape_version"))),
              s(:alias,
                s(:sym, :shape_version),
                s(:sym, :package_version)),
              s(:def, :package_patchlevel,
                s(:args),
                s(:send,
                  s(:const, nil, :Tk), :tk_call,
                  s(:str, "set"),
                  s(:str, "shape_patchLevel"))),
              s(:alias,
                s(:sym, :shape_patchlevel),
                s(:sym, :package_patchlevel)),
              s(:def, :version,
                s(:args),
                s(:send, nil, :tk_call,
                  s(:str, "shape"),
                  s(:str, "version"))),
              s(:alias,
                s(:sym, :xshape_version),
                s(:sym, :version)))),
          s(:def, :shape_bounds,
            s(:args,
              s(:optarg, :kind,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:lvar, :kind),
                s(:lvasgn, :ret,
                  s(:send, nil, :tk_call,
                    s(:str, "shape"),
                    s(:str, "bounds"),
                    s(:ivar, :@path),
                    s(:dstr,
                      s(:str, "-"),
                      s(:begin,
                        s(:lvar, :kind))))),
                s(:lvasgn, :ret,
                  s(:send, nil, :tk_call,
                    s(:str, "shape"),
                    s(:str, "bounds"),
                    s(:ivar, :@path)))),
              s(:if,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "")),
                s(:nil),
                s(:send, nil, :list,
                  s(:lvar, :ret))))),
          s(:def, :shape_get,
            s(:args,
              s(:optarg, :kind,
                s(:nil))),
            s(:if,
              s(:lvar, :kind),
              s(:send, nil, :list,
                s(:send, nil, :tk_call,
                  s(:str, "shape"),
                  s(:str, "get"),
                  s(:ivar, :@path),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :kind))))),
              s(:send, nil, :list,
                s(:send, nil, :tk_call,
                  s(:str, "shape"),
                  s(:str, "get"),
                  s(:ivar, :@path))))),
          s(:def, :shape_offset,
            s(:args,
              s(:arg, :x),
              s(:arg, :y),
              s(:optarg, :kind,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:lvar, :kind),
                s(:send, nil, :tk_call,
                  s(:str, "shape"),
                  s(:str, "get"),
                  s(:ivar, :@path),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :kind))),
                  s(:lvar, :x),
                  s(:lvar, :y)),
                s(:send, nil, :tk_call,
                  s(:str, "shape"),
                  s(:str, "get"),
                  s(:ivar, :@path),
                  s(:lvar, :x),
                  s(:lvar, :y))),
              s(:self))),
          s(:def, :_parse_shapespec_param,
            s(:args,
              s(:arg, :args)),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:array)),
              s(:lvasgn, :kind_keys,
                s(:array,
                  s(:str, "bounding"),
                  s(:str, "clip"),
                  s(:str, "both"))),
              s(:lvasgn, :offset_keys,
                s(:array,
                  s(:str, "offset"))),
              s(:lvasgn, :srckind_keys,
                s(:array,
                  s(:str, "bitmap"),
                  s(:str, "rectangles"),
                  s(:str, "reset"),
                  s(:str, "test"),
                  s(:str, "window"))),
              s(:if,
                s(:send,
                  s(:lvar, :kind_keys), :member?,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0)), :to_s)),
                s(:send,
                  s(:lvar, :cmd), :<<,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :args), :shift)))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :offset_keys), :member?,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0)), :to_s)),
                s(:begin,
                  s(:send,
                    s(:lvar, :cmd), :<<,
                    s(:dstr,
                      s(:str, "-"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :args), :shift)))),
                  s(:send,
                    s(:lvar, :cmd), :<<,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:send,
                    s(:lvar, :cmd), :<<,
                    s(:send,
                      s(:lvar, :args), :shift))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :srckind_keys), :member?,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0)), :to_s)),
                s(:send,
                  s(:lvar, :cmd), :<<,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :args), :shift)))), nil),
              s(:send,
                s(:lvar, :cmd), :concat,
                s(:lvar, :args)),
              s(:lvar, :cmd))),
          s(:send, nil, :private,
            s(:sym, :_parse_shapespec_param)),
          s(:def, :shape_set,
            s(:args,
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:str, "shape"),
                s(:str, "set"),
                s(:ivar, :@path),
                s(:splat,
                  s(:begin,
                    s(:send, nil, :_parse_shapespec_param,
                      s(:lvar, :args))))),
              s(:self))),
          s(:def, :shape_update,
            s(:args,
              s(:arg, :op),
              s(:restarg, :args)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:str, "shape"),
                s(:str, "update"),
                s(:ivar, :@path),
                s(:lvar, :op),
                s(:splat,
                  s(:begin,
                    s(:send, nil, :_parse_shapespec_param,
                      s(:lvar, :args))))),
              s(:self))))))),
  s(:class,
    s(:const, nil, :TkWindow), nil,
    s(:send, nil, :include,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :TkDND), :Shape))))
