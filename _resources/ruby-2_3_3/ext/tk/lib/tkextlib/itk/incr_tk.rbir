s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/menuspec")),
  s(:send, nil, :require,
    s(:str, "tkextlib/itcl.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/itk.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "Itk")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Itk),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Tk)),
        s(:send, nil, :extend,
          s(:const, nil, :Tk)),
        s(:casgn, nil, :LIBRARY,
          s(:send,
            s(:const, nil, :TkVarAccess), :new,
            s(:str, "::itk::library"))),
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "Itk"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "Itk")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:defs,
          s(:self), :usual,
          s(:args,
            s(:arg, :arg),
            s(:restarg, :args)),
          s(:send, nil, :tk_call,
            s(:str, "::itk::usual"),
            s(:lvar, :arg),
            s(:splat,
              s(:lvar, :args)))),
        s(:defs,
          s(:self), :usual_names,
          s(:args),
          s(:send, nil, :list,
            s(:send, nil, :tk_call,
              s(:str, "::itk::usual")))),
        s(:class,
          s(:const, nil, :Archetype),
          s(:const, nil, :TkWindow),
          s(:begin,
            s(:casgn, nil, :TkCommandNames,
              s(:send,
                s(:array), :freeze)),
            s(:defs,
              s(:self), :to_eval,
              s(:args),
              s(:send,
                s(:str, "::itk::"), :<<,
                s(:const,
                  s(:self), :WidgetClassName))),
            s(:def, :__destroy_hook__,
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :Itk), :Component), :ComponentID_TBL), :delete,
                s(:send,
                  s(:self), :path))),
            s(:def, :component,
              s(:args),
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "component")))),
            s(:def, :component_path,
              s(:args,
                s(:arg, :name)),
              s(:send, nil, :window,
                s(:send, nil, :tk_send,
                  s(:str, "component"),
                  s(:lvar, :name)))),
            s(:alias,
              s(:sym, :component_widget),
              s(:sym, :component_path)),
            s(:def, :component_invoke,
              s(:args,
                s(:arg, :name),
                s(:arg, :cmd),
                s(:restarg, :args)),
              s(:send, nil, :window,
                s(:send, nil, :tk_send,
                  s(:str, "component"),
                  s(:lvar, :name),
                  s(:lvar, :cmd),
                  s(:splat,
                    s(:lvar, :args))))),
            s(:def, :component_obj,
              s(:args,
                s(:restarg, :names)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :names), :empty?),
                  s(:lvasgn, :names,
                    s(:send, nil, :component)), nil),
                s(:block,
                  s(:send,
                    s(:lvar, :names), :collect),
                  s(:args,
                    s(:arg, :name)),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Itk), :Component), :new,
                    s(:send,
                      s(:self), :path),
                    s(:lvar, :name))))))),
        s(:class,
          s(:const, nil, :Toplevel),
          s(:const, nil, :Archetype),
          s(:begin,
            s(:casgn, nil, :TkCommandNames,
              s(:send,
                s(:array,
                  s(:str, "::itk::Toplevel")), :freeze)),
            s(:casgn, nil, :WidgetClassName,
              s(:send,
                s(:str, "Toplevel"), :freeze)),
            s(:or_asgn,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName)),
              s(:self)),
            s(:send, nil, :include,
              s(:const, nil, :Wm)),
            s(:send, nil, :include,
              s(:const, nil, :TkMenuSpec)),
            s(:def, :__strval_optkeys,
              s(:args),
              s(:send,
                s(:super), :<<,
                s(:str, "title"))),
            s(:send, nil, :private,
              s(:sym, :__strval_optkeys)))),
        s(:class,
          s(:const, nil, :Widget),
          s(:const, nil, :Archetype),
          s(:begin,
            s(:casgn, nil, :TkCommandNames,
              s(:send,
                s(:array,
                  s(:str, "::itk::Widget")), :freeze)),
            s(:casgn, nil, :WidgetClassName,
              s(:send,
                s(:str, "Widget"), :freeze)),
            s(:or_asgn,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName)),
              s(:self)))),
        s(:class,
          s(:const, nil, :Component),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:def, :__cget_cmd,
              s(:args),
              s(:array,
                s(:send,
                  s(:self), :master),
                s(:str, "component"),
                s(:send,
                  s(:self), :name),
                s(:str, "cget"))),
            s(:send, nil, :private,
              s(:sym, :__cget_cmd)),
            s(:def, :__config_cmd,
              s(:args),
              s(:array,
                s(:send,
                  s(:self), :master),
                s(:str, "component"),
                s(:send,
                  s(:self), :name),
                s(:str, "configure"))),
            s(:send, nil, :private,
              s(:sym, :__config_cmd)),
            s(:casgn, nil, :ComponentID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :Itk_Component_ID,
                    s(:array,
                      s(:send,
                        s(:str, "itk:component"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :ComponentID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :ComponentID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :master),
                s(:arg, :id)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :master), :kind_of?,
                    s(:const, nil, :TkObject)),
                  s(:lvasgn, :master,
                    s(:send,
                      s(:lvar, :master), :path)),
                  s(:lvasgn, :master,
                    s(:send,
                      s(:lvar, :master), :to_s))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :key?,
                      s(:lvar, :master)),
                    s(:if,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:const, nil, :ComponentID_TBL), :[],
                            s(:lvar, :master)), :key?,
                          s(:lvar, :id))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :ComponentID_TBL), :[],
                          s(:lvar, :master)), :[],
                        s(:lvar, :id)),
                      s(:lvar, :id)),
                    s(:lvar, :id))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :master),
                s(:optarg, :component,
                  s(:nil))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :master), :kind_of?,
                    s(:const, nil, :TkObject)),
                  s(:lvasgn, :master,
                    s(:send,
                      s(:lvar, :master), :path)),
                  s(:lvasgn, :master,
                    s(:send,
                      s(:lvar, :master), :to_s))),
                s(:if,
                  s(:send,
                    s(:lvar, :component), :kind_of?,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :Itk), :Component)),
                  s(:lvasgn, :component,
                    s(:send,
                      s(:lvar, :component), :name)),
                  s(:if,
                    s(:lvar, :component),
                    s(:lvasgn, :component,
                      s(:send,
                        s(:lvar, :component), :to_s)),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Itk_Component_ID), :mutex), :synchronize),
                      s(:args),
                      s(:begin,
                        s(:lvasgn, :component,
                          s(:send,
                            s(:const, nil, :Itk_Component_ID), :join,
                            s(:send,
                              s(:const,
                                s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
                        s(:send,
                          s(:send,
                            s(:const, nil, :Itk_Component_ID), :[],
                            s(:int, 1)), :succ!))))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :key?,
                      s(:lvar, :master)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :ComponentID_TBL), :[],
                          s(:lvar, :master)), :key?,
                        s(:lvar, :component)),
                      s(:return,
                        s(:send,
                          s(:send,
                            s(:const, nil, :ComponentID_TBL), :[],
                            s(:lvar, :master)), :[],
                          s(:lvar, :component))), nil),
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :[]=,
                      s(:lvar, :master),
                      s(:hash)))),
                s(:super,
                  s(:lvar, :master),
                  s(:lvar, :component)))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :master),
                s(:arg, :component)),
              s(:begin,
                s(:ivasgn, :@master,
                  s(:lvar, :master)),
                s(:ivasgn, :@component,
                  s(:lvar, :component)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :ComponentID_TBL), :[],
                      s(:ivar, :@master)), :[]=,
                    s(:ivar, :@component),
                    s(:self))),
                s(:kwbegin,
                  s(:rescue,
                    s(:begin,
                      s(:ivasgn, :@widget,
                        s(:send, nil, :window,
                          s(:send, nil, :tk_call,
                            s(:ivar, :@master),
                            s(:str, "component"),
                            s(:ivar, :@component)))),
                      s(:ivasgn, :@path,
                        s(:send,
                          s(:ivar, :@widget), :path))),
                    s(:resbody, nil, nil,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:nil)),
                        s(:ivasgn, :@path,
                          s(:nil)))), nil)))),
            s(:def, :path,
              s(:args),
              s(:begin,
                s(:if,
                  s(:ivar, :@path), nil,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:send, nil, :window,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@master),
                              s(:str, "component"),
                              s(:ivar, :@component)))),
                        s(:ivasgn, :@path,
                          s(:send,
                            s(:ivar, :@widget), :path))),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:const, nil, :RuntimeError),
                          s(:str, "component is not assigned to a widget"))), nil))),
                s(:ivar, :@path))),
            s(:def, :epath,
              s(:args),
              s(:send, nil, :path)),
            s(:def, :to_eval,
              s(:args),
              s(:send, nil, :path)),
            s(:def, :master,
              s(:args),
              s(:ivar, :@master)),
            s(:def, :name,
              s(:args),
              s(:ivar, :@component)),
            s(:def, :widget,
              s(:args),
              s(:begin,
                s(:if,
                  s(:ivar, :@widget), nil,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:send, nil, :window,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@master),
                              s(:str, "component"),
                              s(:ivar, :@component)))),
                        s(:ivasgn, :@path,
                          s(:send,
                            s(:ivar, :@widget), :path))),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:const, nil, :RuntimeError),
                          s(:str, "component is not assigned to a widget"))), nil))),
                s(:ivar, :@widget))),
            s(:def, :widget_class,
              s(:args),
              s(:if,
                s(:ivar, :@widget), nil,
                s(:kwbegin,
                  s(:rescue,
                    s(:begin,
                      s(:ivasgn, :@widget,
                        s(:send, nil, :window,
                          s(:send, nil, :tk_call,
                            s(:ivar, :@master),
                            s(:str, "component"),
                            s(:ivar, :@component)))),
                      s(:ivasgn, :@path,
                        s(:send,
                          s(:ivar, :@widget), :path)),
                      s(:send,
                        s(:ivar, :@widget), :classname)),
                    s(:resbody, nil, nil,
                      s(:nil)), nil)))),
            s(:def, :method_missing,
              s(:args,
                s(:arg, :id),
                s(:restarg, :args)),
              s(:begin,
                s(:lvasgn, :name,
                  s(:send,
                    s(:lvar, :id), :id2name)),
                s(:kwbegin,
                  s(:rescue,
                    s(:return,
                      s(:send, nil, :tk_call,
                        s(:ivar, :@master),
                        s(:str, "component"),
                        s(:ivar, :@component),
                        s(:lvar, :name),
                        s(:splat,
                          s(:lvar, :args)))),
                    s(:resbody, nil, nil, nil), nil)),
                s(:lvasgn, :len,
                  s(:send,
                    s(:lvar, :args), :length)),
                s(:kwbegin,
                  s(:rescue,
                    s(:case,
                      s(:lvar, :len),
                      s(:when,
                        s(:int, 1),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :name), :[],
                              s(:int, -1)), :==,
                            s(:str, "=")),
                          s(:return,
                            s(:send, nil, :configure,
                              s(:send,
                                s(:lvar, :name), :[],
                                s(:irange,
                                  s(:int, 0),
                                  s(:int, -2))),
                              s(:send,
                                s(:lvar, :args), :[],
                                s(:int, 0)))),
                          s(:return,
                            s(:send, nil, :configure,
                              s(:lvar, :name),
                              s(:send,
                                s(:lvar, :args), :[],
                                s(:int, 0)))))),
                      s(:when,
                        s(:int, 0),
                        s(:return,
                          s(:send, nil, :cget,
                            s(:lvar, :name)))), nil),
                    s(:resbody, nil, nil, nil), nil)),
                s(:kwbegin,
                  s(:rescue,
                    s(:begin,
                      s(:if,
                        s(:ivar, :@widget), nil,
                        s(:begin,
                          s(:ivasgn, :@widget,
                            s(:send, nil, :window,
                              s(:send, nil, :tk_call,
                                s(:ivar, :@master),
                                s(:str, "component"),
                                s(:ivar, :@component)))),
                          s(:ivasgn, :@path,
                            s(:send,
                              s(:ivar, :@widget), :path)))),
                      s(:send,
                        s(:ivar, :@widget), :__send__,
                        s(:lvar, :id),
                        s(:splat,
                          s(:lvar, :args)))),
                    s(:resbody, nil, nil, nil), nil)),
                s(:super,
                  s(:lvar, :id),
                  s(:splat,
                    s(:lvar, :args))))),
            s(:def, :tk_send,
              s(:args,
                s(:arg, :cmd),
                s(:restarg, :rest)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@master),
                    s(:str, "component"),
                    s(:ivar, :@component),
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :rest))),
                  s(:resbody, nil, nil,
                    s(:begin,
                      s(:if,
                        s(:ivar, :@path), nil,
                        s(:kwbegin,
                          s(:rescue,
                            s(:begin,
                              s(:ivasgn, :@widget,
                                s(:send, nil, :window,
                                  s(:send, nil, :tk_call,
                                    s(:ivar, :@master),
                                    s(:str, "component"),
                                    s(:ivar, :@component)))),
                              s(:ivasgn, :@path,
                                s(:send,
                                  s(:ivar, :@widget), :path))),
                            s(:resbody, nil, nil,
                              s(:send, nil, :fail,
                                s(:const, nil, :RuntimeError),
                                s(:str, "component is not assigned to a widget"))), nil))),
                      s(:send, nil, :tk_call,
                        s(:ivar, :@path),
                        s(:lvar, :cmd),
                        s(:splat,
                          s(:lvar, :rest))))), nil))),
            s(:def, :tk_send_without_enc,
              s(:args,
                s(:arg, :cmd),
                s(:restarg, :rest)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call_without_enc,
                    s(:ivar, :@master),
                    s(:str, "component"),
                    s(:ivar, :@component),
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :rest))),
                  s(:resbody, nil, nil,
                    s(:begin,
                      s(:if,
                        s(:ivar, :@path), nil,
                        s(:kwbegin,
                          s(:rescue,
                            s(:begin,
                              s(:ivasgn, :@widget,
                                s(:send, nil, :window,
                                  s(:send, nil, :tk_call,
                                    s(:ivar, :@master),
                                    s(:str, "component"),
                                    s(:ivar, :@component)))),
                              s(:ivasgn, :@path,
                                s(:send,
                                  s(:ivar, :@widget), :path))),
                            s(:resbody, nil, nil,
                              s(:send, nil, :fail,
                                s(:const, nil, :RuntimeError),
                                s(:str, "component is not assigned to a widget"))), nil))),
                      s(:send, nil, :tk_call_without_enc,
                        s(:ivar, :@path),
                        s(:lvar, :cmd),
                        s(:splat,
                          s(:lvar, :rest))))), nil))),
            s(:def, :tk_send_with_enc,
              s(:args,
                s(:arg, :cmd),
                s(:restarg, :rest)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call_with_enc,
                    s(:ivar, :@master),
                    s(:str, "component"),
                    s(:ivar, :@component),
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :rest))),
                  s(:resbody, nil, nil,
                    s(:begin,
                      s(:if,
                        s(:ivar, :@path), nil,
                        s(:kwbegin,
                          s(:rescue,
                            s(:begin,
                              s(:ivasgn, :@widget,
                                s(:send, nil, :window,
                                  s(:send, nil, :tk_call,
                                    s(:ivar, :@master),
                                    s(:str, "component"),
                                    s(:ivar, :@component)))),
                              s(:ivasgn, :@path,
                                s(:send,
                                  s(:ivar, :@widget), :path))),
                            s(:resbody, nil, nil,
                              s(:send, nil, :fail,
                                s(:const, nil, :RuntimeError),
                                s(:str, "component is not assigned to a widget"))), nil))),
                      s(:send, nil, :tk_call_with_enc,
                        s(:ivar, :@path),
                        s(:lvar, :cmd),
                        s(:splat,
                          s(:lvar, :rest))))), nil))),
            s(:def, :bind,
              s(:args,
                s(:arg, :context),
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:ivar, :@widget), nil,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:send, nil, :window,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@master),
                              s(:str, "component"),
                              s(:ivar, :@component)))),
                        s(:ivasgn, :@path,
                          s(:send,
                            s(:ivar, :@widget), :path))),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:const, nil, :RuntimeError),
                          s(:str, "component is not assigned to a widget"))), nil))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:const, nil, :TkComm), :_callback_entry?,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0))),
                    s(:send,
                      s(:send, nil, :block_given?), :!)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:const, nil, :Proc), :new))),
                s(:send,
                  s(:ivar, :@widget), :bind,
                  s(:lvar, :context),
                  s(:lvar, :cmd),
                  s(:splat,
                    s(:lvar, :args))))),
            s(:def, :bind_append,
              s(:args,
                s(:arg, :context),
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:ivar, :@widget), nil,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:send, nil, :window,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@master),
                              s(:str, "component"),
                              s(:ivar, :@component)))),
                        s(:ivasgn, :@path,
                          s(:send,
                            s(:ivar, :@widget), :path))),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:const, nil, :RuntimeError),
                          s(:str, "component is not assigned to a widget"))), nil))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:const, nil, :TkComm), :_callback_entry?,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0))),
                    s(:send,
                      s(:send, nil, :block_given?), :!)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:const, nil, :Proc), :new))),
                s(:send,
                  s(:ivar, :@widget), :bind_append,
                  s(:lvar, :context),
                  s(:lvar, :cmd),
                  s(:splat,
                    s(:lvar, :args))))),
            s(:def, :bind_remove,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:ivar, :@widget), nil,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:send, nil, :window,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@master),
                              s(:str, "component"),
                              s(:ivar, :@component)))),
                        s(:ivasgn, :@path,
                          s(:send,
                            s(:ivar, :@widget), :path))),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:const, nil, :RuntimeError),
                          s(:str, "component is not assigned to a widget"))), nil))),
                s(:send,
                  s(:ivar, :@widget), :bind_remove,
                  s(:splat,
                    s(:lvar, :args))))),
            s(:def, :bindinfo,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:ivar, :@widget), nil,
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:ivasgn, :@widget,
                          s(:send, nil, :window,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@master),
                              s(:str, "component"),
                              s(:ivar, :@component)))),
                        s(:ivasgn, :@path,
                          s(:send,
                            s(:ivar, :@widget), :path))),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:const, nil, :RuntimeError),
                          s(:str, "component is not assigned to a widget"))), nil))),
                s(:send,
                  s(:ivar, :@widget), :bindinfo,
                  s(:splat,
                    s(:lvar, :args)))))))))))
