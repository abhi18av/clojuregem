s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/iwidgets.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Iwidgets),
      s(:class,
        s(:const, nil, :Panedwindow),
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Itk), :Widget), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Iwidgets), :Panedwindow), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "::iwidgets::panedwindow"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Panedwindow"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__item_cget_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:str, "panecget"),
          s(:lvar, :id))),
      s(:send, nil, :private,
        s(:sym, :__item_cget_cmd)),
      s(:def, :__item_config_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:str, "paneconfigure"),
          s(:lvar, :id))),
      s(:send, nil, :private,
        s(:sym, :__item_config_cmd)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tagOrId)),
        s(:if,
          s(:send,
            s(:lvar, :tagOrId), :kind_of?,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Itk), :Component)),
          s(:send,
            s(:lvar, :tagOrId), :name),
          s(:lvar, :tagOrId))),
      s(:alias,
        s(:sym, :panecget_tkstring),
        s(:sym, :itemcget_tkstring)),
      s(:alias,
        s(:sym, :panecget),
        s(:sym, :itemcget)),
      s(:alias,
        s(:sym, :panecget_strict),
        s(:sym, :itemcget_strict)),
      s(:alias,
        s(:sym, :paneconfigure),
        s(:sym, :itemconfigure)),
      s(:alias,
        s(:sym, :paneconfiginfo),
        s(:sym, :itemconfiginfo)),
      s(:alias,
        s(:sym, :current_paneconfiginfo),
        s(:sym, :current_itemconfiginfo)),
      s(:send, nil, :private,
        s(:sym, :itemcget_tkstring),
        s(:sym, :itemcget),
        s(:sym, :itemcget_strict)),
      s(:send, nil, :private,
        s(:sym, :itemconfigure),
        s(:sym, :itemconfiginfo),
        s(:sym, :current_itemconfiginfo)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "showhandle"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :add,
        s(:args,
          s(:optarg, :tag,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :tag)),
              s(:lvasgn, :tag,
                s(:nil))), nil),
          s(:if,
            s(:lvar, :tag),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self),
                s(:send, nil, :tagid,
                  s(:lvar, :tag)))),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self)))),
          s(:send, nil, :window,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "add"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys))))),
          s(:lvar, :tag))),
      s(:def, :child_site_list,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "childsite")))),
      s(:def, :child_site,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :window,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "childsite"),
            s(:send, nil, :index,
              s(:lvar, :idx))))),
      s(:def, :delete,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "delete"),
            s(:send, nil, :index,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :fraction,
        s(:args,
          s(:restarg, :percentages)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "fraction"),
            s(:splat,
              s(:lvar, :percentages))),
          s(:self))),
      s(:def, :hide,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "hide"),
            s(:send, nil, :index,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :insert,
        s(:args,
          s(:arg, :idx),
          s(:optarg, :tag,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :tag)),
              s(:lvasgn, :tag,
                s(:nil))), nil),
          s(:if,
            s(:lvar, :tag),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self),
                s(:send, nil, :tagid,
                  s(:lvar, :tag)))),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self)))),
          s(:send, nil, :window,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "insert"),
              s(:send, nil, :index,
                s(:lvar, :idx)),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys))))),
          s(:lvar, :tag))),
      s(:def, :invoke,
        s(:args,
          s(:optarg, :idx,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :idx),
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "invoke"),
              s(:send, nil, :index,
                s(:lvar, :idx))),
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "invoke"))),
          s(:self))),
      s(:def, :reset,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "reset")),
          s(:self))),
      s(:def, :show,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "show"),
            s(:send, nil, :index,
              s(:lvar, :idx))),
          s(:self))))))
