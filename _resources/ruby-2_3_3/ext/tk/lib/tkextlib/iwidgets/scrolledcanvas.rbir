s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/canvas")),
  s(:send, nil, :require,
    s(:str, "tkextlib/iwidgets.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Iwidgets),
      s(:class,
        s(:const, nil, :Scrolledcanvas),
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Iwidgets), :Scrolledwidget), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Iwidgets), :Scrolledcanvas), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "::iwidgets::scrolledcanvas"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Scrolledcanvas"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "autoresize"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "textbackground"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:ivasgn, :@canvas,
            s(:send, nil, :component_widget,
              s(:str, "canvas"))))),
      s(:def, :method_missing,
        s(:args,
          s(:arg, :id),
          s(:restarg, :args)),
        s(:if,
          s(:send,
            s(:ivar, :@canvas), :respond_to?,
            s(:lvar, :id)),
          s(:send,
            s(:ivar, :@canvas), :__send__,
            s(:lvar, :id),
            s(:splat,
              s(:lvar, :args))),
          s(:super,
            s(:lvar, :id),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :child_site,
        s(:args),
        s(:send, nil, :window,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "childsite")))),
      s(:def, :justify,
        s(:args,
          s(:arg, :dir)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "justify"),
            s(:lvar, :dir)),
          s(:self))),
      s(:send, nil, :include,
        s(:const, nil, :TkCanvasItemConfig)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:or,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :TkcItem)),
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :TkcTag))),
          s(:send,
            s(:lvar, :tag), :id),
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Itk), :Component)),
            s(:send,
              s(:lvar, :tag), :name),
            s(:lvar, :tag)))),
      s(:send, nil, :private,
        s(:sym, :tagid)),
      s(:def, :create,
        s(:args,
          s(:arg, :type),
          s(:restarg, :args)),
        s(:send,
          s(:lvar, :type), :create,
          s(:self),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :addtag,
        s(:args,
          s(:arg, :tag),
          s(:arg, :mode),
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "addtag"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:lvar, :mode),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :addtag_above,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :target)),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "above"),
          s(:send, nil, :tagid,
            s(:lvar, :target)))),
      s(:def, :addtag_all,
        s(:args,
          s(:arg, :tagOrId)),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "all"))),
      s(:def, :addtag_below,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :target)),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "below"),
          s(:send, nil, :tagid,
            s(:lvar, :target)))),
      s(:def, :addtag_closest,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :x),
          s(:arg, :y),
          s(:optarg, :halo,
            s(:const, nil, :None)),
          s(:optarg, :start,
            s(:const, nil, :None))),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "closest"),
          s(:lvar, :x),
          s(:lvar, :y),
          s(:lvar, :halo),
          s(:lvar, :start))),
      s(:def, :addtag_enclosed,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :x1),
          s(:arg, :y1),
          s(:arg, :x2),
          s(:arg, :y2)),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "enclosed"),
          s(:lvar, :x1),
          s(:lvar, :y1),
          s(:lvar, :x2),
          s(:lvar, :y2))),
      s(:def, :addtag_overlapping,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :x1),
          s(:arg, :y1),
          s(:arg, :x2),
          s(:arg, :y2)),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "overlapping"),
          s(:lvar, :x1),
          s(:lvar, :y1),
          s(:lvar, :x2),
          s(:lvar, :y2))),
      s(:def, :addtag_withtag,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :tag)),
        s(:send, nil, :addtag,
          s(:lvar, :tagOrId),
          s(:str, "withtag"),
          s(:send, nil, :tagid,
            s(:lvar, :tag)))),
      s(:def, :bbox,
        s(:args,
          s(:arg, :tagOrId),
          s(:restarg, :tags)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "bbox"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId)),
            s(:splat,
              s(:block,
                s(:send,
                  s(:lvar, :tags), :collect),
                s(:args,
                  s(:arg, :t)),
                s(:send, nil, :tagid,
                  s(:lvar, :t))))))),
      s(:def, :itembind,
        s(:args,
          s(:arg, :tag),
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :itembind_append,
        s(:args,
          s(:arg, :tag),
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :itembind_remove,
        s(:args,
          s(:arg, :tag),
          s(:arg, :context)),
        s(:begin,
          s(:send, nil, :_bind_remove,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :context)),
          s(:self))),
      s(:def, :itembindinfo,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :context,
            s(:nil))),
        s(:send, nil, :_bindinfo,
          s(:array,
            s(:send, nil, :path),
            s(:str, "bind"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:lvar, :context))),
      s(:def, :canvasx,
        s(:args,
          s(:arg, :screen_x),
          s(:restarg, :args)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "canvasx"),
            s(:lvar, :screen_x),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :canvasy,
        s(:args,
          s(:arg, :screen_y),
          s(:restarg, :args)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "canvasy"),
            s(:lvar, :screen_y),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :coords,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :args)),
        s(:if,
          s(:send,
            s(:lvar, :args), :==,
            s(:array)),
          s(:send, nil, :tk_split_list,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "coords"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)))),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "coords"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:splat,
                s(:begin,
                  s(:send,
                    s(:lvar, :args), :flatten)))),
            s(:self)))),
      s(:def, :dchars,
        s(:args,
          s(:arg, :tag),
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "dchars"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :first)),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :delete,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :tbl,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkcItem), :CItemID_TBL), :mutex), :synchronize),
            s(:args),
            s(:lvasgn, :tbl,
              s(:send,
                s(:const,
                  s(:const, nil, :TkcItem), :CItemID_TBL), :[],
                s(:send,
                  s(:self), :path)))),
          s(:if,
            s(:lvar, :tbl),
            s(:block,
              s(:send,
                s(:send, nil, :find,
                  s(:str, "withtag"),
                  s(:splat,
                    s(:lvar, :args))), :each),
              s(:args,
                s(:arg, :item)),
              s(:if,
                s(:send,
                  s(:lvar, :item), :kind_of?,
                  s(:const, nil, :TkcItem)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :TkcItem), :CItemID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:lvar, :tbl), :delete,
                    s(:send,
                      s(:lvar, :item), :id))), nil)), nil),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "delete"),
            s(:splat,
              s(:block,
                s(:send,
                  s(:lvar, :args), :collect),
                s(:args,
                  s(:arg, :t)),
                s(:send, nil, :tagid,
                  s(:lvar, :t))))),
          s(:self))),
      s(:alias,
        s(:sym, :remove),
        s(:sym, :delete)),
      s(:def, :dtag,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :tag_to_del,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "dtag"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:lvar, :tag_to_del)),
          s(:self))),
      s(:def, :find,
        s(:args,
          s(:arg, :mode),
          s(:restarg, :args)),
        s(:block,
          s(:send,
            s(:send, nil, :list,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "find"),
                s(:lvar, :mode),
                s(:splat,
                  s(:lvar, :args)))), :collect!),
          s(:args,
            s(:arg, :id)),
          s(:send,
            s(:const, nil, :TkcItem), :id2obj,
            s(:self),
            s(:lvar, :id)))),
      s(:def, :find_above,
        s(:args,
          s(:arg, :target)),
        s(:send, nil, :find,
          s(:str, "above"),
          s(:send, nil, :tagid,
            s(:lvar, :target)))),
      s(:def, :find_all,
        s(:args),
        s(:send, nil, :find,
          s(:str, "all"))),
      s(:def, :find_below,
        s(:args,
          s(:arg, :target)),
        s(:send, nil, :find,
          s(:str, "below"),
          s(:send, nil, :tagid,
            s(:lvar, :target)))),
      s(:def, :find_closest,
        s(:args,
          s(:arg, :x),
          s(:arg, :y),
          s(:optarg, :halo,
            s(:const, nil, :None)),
          s(:optarg, :start,
            s(:const, nil, :None))),
        s(:send, nil, :find,
          s(:str, "closest"),
          s(:lvar, :x),
          s(:lvar, :y),
          s(:lvar, :halo),
          s(:lvar, :start))),
      s(:def, :find_enclosed,
        s(:args,
          s(:arg, :x1),
          s(:arg, :y1),
          s(:arg, :x2),
          s(:arg, :y2)),
        s(:send, nil, :find,
          s(:str, "enclosed"),
          s(:lvar, :x1),
          s(:lvar, :y1),
          s(:lvar, :x2),
          s(:lvar, :y2))),
      s(:def, :find_overlapping,
        s(:args,
          s(:arg, :x1),
          s(:arg, :y1),
          s(:arg, :x2),
          s(:arg, :y2)),
        s(:send, nil, :find,
          s(:str, "overlapping"),
          s(:lvar, :x1),
          s(:lvar, :y1),
          s(:lvar, :x2),
          s(:lvar, :y2))),
      s(:def, :find_withtag,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :find,
          s(:str, "withtag"),
          s(:lvar, :tag))),
      s(:def, :itemfocus,
        s(:args,
          s(:optarg, :tagOrId,
            s(:nil))),
        s(:if,
          s(:lvar, :tagOrId),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "focus"),
              s(:send, nil, :tagid,
                s(:lvar, :tagOrId))),
            s(:self)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "focus"))),
            s(:if,
              s(:send,
                s(:lvar, :ret), :==,
                s(:str, "")),
              s(:nil),
              s(:send,
                s(:const, nil, :TkcItem), :id2obj,
                s(:self),
                s(:lvar, :ret)))))),
      s(:def, :gettags,
        s(:args,
          s(:arg, :tagOrId)),
        s(:block,
          s(:send,
            s(:send, nil, :list,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "gettags"),
                s(:send, nil, :tagid,
                  s(:lvar, :tagOrId)))), :collect),
          s(:args,
            s(:arg, :tag)),
          s(:send,
            s(:const, nil, :TkcTag), :id2obj,
            s(:self),
            s(:lvar, :tag)))),
      s(:def, :icursor,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "icursor"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId)),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId)),
            s(:lvar, :idx)))),
      s(:def, :insert,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :index),
          s(:arg, :string)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "insert"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId)),
            s(:lvar, :index),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :string))),
          s(:self))),
      s(:def, :lower,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :below,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :below),
            s(:send, nil, :tk_send_without_enc,
              s(:str, "lower"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:send, nil, :tagid,
                s(:lvar, :below))),
            s(:send, nil, :tk_send_without_enc,
              s(:str, "lower"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)))),
          s(:self))),
      s(:def, :move,
        s(:args,
          s(:arg, :tag),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :postscript,
        s(:args,
          s(:arg, :keys)),
        s(:send, nil, :tk_send,
          s(:str, "postscript"),
          s(:splat,
            s(:send, nil, :hash_kv,
              s(:lvar, :keys))))),
      s(:def, :raise,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :above,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :above),
            s(:send, nil, :tk_send_without_enc,
              s(:str, "raise"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:send, nil, :tagid,
                s(:lvar, :above))),
            s(:send, nil, :tk_send_without_enc,
              s(:str, "raise"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)))),
          s(:self))),
      s(:def, :scale,
        s(:args,
          s(:arg, :tag),
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :xs),
          s(:arg, :ys)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scale"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:lvar, :xs),
            s(:lvar, :ys)),
          s(:self))),
      s(:def, :scan_mark,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scan"),
            s(:str, "mark"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :scan_dragto,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scan"),
            s(:str, "dragto"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :select,
        s(:args,
          s(:arg, :mode),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :r,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "select"),
              s(:lvar, :mode),
              s(:splat,
                s(:lvar, :args)))),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :mode), :==,
                s(:str, "item"))),
            s(:send,
              s(:const, nil, :TkcItem), :id2obj,
              s(:self),
              s(:lvar, :r)),
            s(:self)))),
      s(:def, :select_adjust,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :index)),
        s(:send, nil, :select,
          s(:str, "adjust"),
          s(:send, nil, :tagid,
            s(:lvar, :tagOrId)),
          s(:lvar, :index))),
      s(:def, :select_clear,
        s(:args),
        s(:send, nil, :select,
          s(:str, "clear"))),
      s(:def, :select_from,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :index)),
        s(:send, nil, :select,
          s(:str, "from"),
          s(:send, nil, :tagid,
            s(:lvar, :tagOrId)),
          s(:lvar, :index))),
      s(:def, :select_item,
        s(:args),
        s(:send, nil, :select,
          s(:str, "item"))),
      s(:def, :select_to,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :index)),
        s(:send, nil, :select,
          s(:str, "to"),
          s(:send, nil, :tagid,
            s(:lvar, :tagOrId)),
          s(:lvar, :index))),
      s(:def, :itemtype,
        s(:args,
          s(:arg, :tag)),
        s(:send,
          s(:const, nil, :TkcItem), :type2class,
          s(:send, nil, :tk_send,
            s(:str, "type"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :xview,
        s(:args,
          s(:restarg, :index)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :index), :size), :==,
            s(:int, 0)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "xview"))),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "xview"),
              s(:splat,
                s(:lvar, :index))),
            s(:self)))),
      s(:def, :xview_moveto,
        s(:args,
          s(:restarg, :index)),
        s(:send, nil, :xview,
          s(:str, "moveto"),
          s(:splat,
            s(:lvar, :index)))),
      s(:def, :xview_scroll,
        s(:args,
          s(:restarg, :index)),
        s(:send, nil, :xview,
          s(:str, "scroll"),
          s(:splat,
            s(:lvar, :index)))),
      s(:def, :yview,
        s(:args,
          s(:restarg, :index)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :index), :size), :==,
            s(:int, 0)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "yview"))),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "yview"),
              s(:splat,
                s(:lvar, :index))),
            s(:self)))),
      s(:def, :yview_moveto,
        s(:args,
          s(:restarg, :index)),
        s(:send, nil, :yview,
          s(:str, "moveto"),
          s(:splat,
            s(:lvar, :index)))),
      s(:def, :yview_scroll,
        s(:args,
          s(:restarg, :index)),
        s(:send, nil, :yview,
          s(:str, "scroll"),
          s(:splat,
            s(:lvar, :index)))))))
