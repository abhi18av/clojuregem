s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/iwidgets.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Iwidgets),
      s(:class,
        s(:const, nil, :Menubar),
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Itk), :Widget), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Iwidgets), :Menubar), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "::iwidgets::menubar"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Menubar"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "menubuttons"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :__tkvariable_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "helpvariable"))),
      s(:send, nil, :private,
        s(:sym, :__tkvariable_optkeys)),
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__item_cget_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:str, "menucget"),
          s(:lvar, :id))),
      s(:send, nil, :private,
        s(:sym, :__item_cget_cmd)),
      s(:def, :__item_config_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:str, "menuconfigure"),
          s(:lvar, :id))),
      s(:send, nil, :private,
        s(:sym, :__item_config_cmd)),
      s(:def, :__item_strval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:super,
            s(:lvar, :id)), :<<,
          s(:str, "selectcolor"))),
      s(:send, nil, :private,
        s(:sym, :__item_strval_optkeys)),
      s(:def, :__item_tkvariable_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:super,
            s(:lvar, :id)), :<<,
          s(:str, "helpstr"))),
      s(:send, nil, :private,
        s(:sym, :__item_tkvariable_optkeys)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tagOrId)),
        s(:if,
          s(:send,
            s(:lvar, :tagOrId), :kind_of?,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Itk), :Component)),
          s(:send,
            s(:lvar, :tagOrId), :name),
          s(:lvar, :tagOrId))),
      s(:alias,
        s(:sym, :menucget_tkstring),
        s(:sym, :itemcget_tkstring)),
      s(:alias,
        s(:sym, :menucget),
        s(:sym, :itemcget)),
      s(:alias,
        s(:sym, :menucget_strict),
        s(:sym, :itemcget_strict)),
      s(:alias,
        s(:sym, :menuconfigure),
        s(:sym, :itemconfigure)),
      s(:alias,
        s(:sym, :menuconfiginfo),
        s(:sym, :itemconfiginfo)),
      s(:alias,
        s(:sym, :current_menuconfiginfo),
        s(:sym, :current_itemconfiginfo)),
      s(:send, nil, :private,
        s(:sym, :itemcget_tkstring),
        s(:sym, :itemcget),
        s(:sym, :itemcget_strict)),
      s(:send, nil, :private,
        s(:sym, :itemconfigure),
        s(:sym, :itemconfiginfo),
        s(:sym, :current_itemconfiginfo)),
      s(:def, :__methodcall_optkeys,
        s(:args),
        s(:hash,
          s(:pair,
            s(:str, "menubuttons"),
            s(:str, "menubuttons")))),
      s(:def, :menubuttons,
        s(:args,
          s(:optarg, :val,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :val), nil,
            s(:return,
              s(:send, nil, :tk_call,
                s(:ivar, :@path),
                s(:str, "cget"),
                s(:str, "-menubuttons")))),
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "configure"),
            s(:str, "-menubuttons"),
            s(:send, nil, :_parse_menu_spec,
              s(:lvar, :val))),
          s(:self))),
      s(:def, :_parse_menu_spec,
        s(:args,
          s(:arg, :menu_spec)),
        s(:begin,
          s(:lvasgn, :ret,
            s(:str, "")),
          s(:block,
            s(:send,
              s(:lvar, :menu_spec), :each),
            s(:args,
              s(:arg, :spec)),
            s(:begin,
              s(:if,
                s(:lvar, :spec), nil,
                s(:next)),
              s(:if,
                s(:send,
                  s(:lvar, :spec), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:lvasgn, :args,
                    s(:array,
                      s(:lvar, :spec))),
                  s(:lvasgn, :type,
                    s(:str, "options"))),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :type),
                    s(:splat,
                      s(:lvasgn, :args))),
                  s(:lvar, :spec))),
              s(:lvasgn, :type,
                s(:send,
                  s(:lvar, :type), :to_s)),
              s(:case,
                s(:lvar, :type),
                s(:when,
                  s(:str, "options"),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0))),
                    s(:lvasgn, :ary,
                      s(:array,
                        s(:lvar, :type))),
                    s(:send,
                      s(:lvar, :ary), :concat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys))),
                    s(:send,
                      s(:send,
                        s(:lvar, :ret), :<<,
                        s(:send, nil, :array2tk_list,
                          s(:lvar, :ary))), :<<,
                      s(:str, "\n")))),
                s(:when,
                  s(:str, "menubutton"),
                  s(:str, "cascade"),
                  s(:begin,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :name),
                        s(:lvasgn, :keys)),
                      s(:lvar, :args)),
                    s(:if,
                      s(:lvar, :keys),
                      s(:begin,
                        s(:lvasgn, :ary,
                          s(:array,
                            s(:lvar, :type),
                            s(:lvar, :name))),
                        s(:lvasgn, :keys,
                          s(:send, nil, :_symbolkey2str,
                            s(:lvar, :keys))),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :key?,
                            s(:str, "menu")),
                          s(:send,
                            s(:lvar, :keys), :[]=,
                            s(:str, "menu"),
                            s(:send, nil, :_parse_menu_spec,
                              s(:send,
                                s(:lvar, :keys), :[],
                                s(:str, "menu")))), nil),
                        s(:send,
                          s(:lvar, :ary), :concat,
                          s(:send, nil, :hash_kv,
                            s(:lvar, :keys))),
                        s(:send,
                          s(:send,
                            s(:lvar, :ret), :<<,
                            s(:send, nil, :array2tk_list,
                              s(:lvar, :ary))), :<<,
                          s(:str, "\n"))),
                      s(:send,
                        s(:send,
                          s(:lvar, :ret), :<<,
                          s(:send, nil, :array2tk_list,
                            s(:array,
                              s(:lvar, :type),
                              s(:lvar, :name)))), :<<,
                        s(:str, "\n"))))),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :name),
                      s(:lvasgn, :keys)),
                    s(:lvar, :args)),
                  s(:if,
                    s(:lvar, :keys),
                    s(:begin,
                      s(:lvasgn, :ary,
                        s(:array,
                          s(:lvar, :type),
                          s(:lvar, :name))),
                      s(:send,
                        s(:lvar, :ary), :concat,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :keys))),
                      s(:send,
                        s(:send,
                          s(:lvar, :ret), :<<,
                          s(:send, nil, :array2tk_list,
                            s(:lvar, :ary))), :<<,
                        s(:str, "\n"))),
                    s(:send,
                      s(:send,
                        s(:lvar, :ret), :<<,
                        s(:send, nil, :array2tk_list,
                          s(:array,
                            s(:lvar, :type),
                            s(:lvar, :name)))), :<<,
                      s(:str, "\n"))))))),
          s(:lvar, :ret))),
      s(:def, :add,
        s(:args,
          s(:arg, :type),
          s(:optarg, :tag,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :tag)),
              s(:lvasgn, :tag,
                s(:nil))), nil),
          s(:if,
            s(:lvar, :tag),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self),
                s(:send, nil, :tagid,
                  s(:lvar, :tag)))),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self)))),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :key?,
              s(:str, "menu")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "menu"),
              s(:send, nil, :_parse_menu_spec,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "menu")))), nil),
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "add"),
            s(:lvar, :type),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys)))),
          s(:lvar, :tag))),
      s(:def, :delete,
        s(:args,
          s(:arg, :path1),
          s(:optarg, :path2,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :path2), nil,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "delete"),
              s(:send, nil, :index,
                s(:send, nil, :idx)))),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :insert,
        s(:args,
          s(:arg, :idx),
          s(:arg, :type),
          s(:optarg, :tag,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :tag)),
              s(:lvasgn, :tag,
                s(:nil))), nil),
          s(:if,
            s(:lvar, :tag),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self),
                s(:send, nil, :tagid,
                  s(:lvar, :tag)))),
            s(:lvasgn, :tag,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itk), :Component), :new,
                s(:self)))),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :key?,
              s(:str, "menu")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "menu"),
              s(:send, nil, :_parse_menu_spec,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "menu")))), nil),
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "insert"),
            s(:send, nil, :index,
              s(:lvar, :idx)),
            s(:lvar, :type),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys)))),
          s(:lvar, :tag))),
      s(:def, :invoke,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "invoke"),
            s(:send, nil, :index,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :menupath,
        s(:args,
          s(:arg, :pat)),
        s(:begin,
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :win,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@path),
                    s(:str, "path"),
                    s(:lvar, :pat)))), :==,
              s(:str, "-1")),
            s(:return,
              s(:nil)), nil),
          s(:send, nil, :window,
            s(:lvar, :win)))),
      s(:def, :menupath_glob,
        s(:args,
          s(:arg, :pat)),
        s(:begin,
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :win,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@path),
                    s(:str, "path"),
                    s(:str, "-glob"),
                    s(:lvar, :pat)))), :==,
              s(:str, "-1")),
            s(:return,
              s(:nil)), nil),
          s(:send, nil, :window,
            s(:lvar, :win)))),
      s(:def, :menupath_tclregexp,
        s(:args,
          s(:arg, :pat)),
        s(:begin,
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :win,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@path),
                    s(:str, "path"),
                    s(:str, "-regexp"),
                    s(:lvar, :pat)))), :==,
              s(:str, "-1")),
            s(:return,
              s(:nil)), nil),
          s(:send, nil, :window,
            s(:lvar, :win)))),
      s(:def, :type,
        s(:args,
          s(:arg, :path)),
        s(:send, nil, :tk_call,
          s(:ivar, :@path),
          s(:str, "type"),
          s(:lvar, :path))),
      s(:def, :yposition,
        s(:args,
          s(:arg, :path)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call,
            s(:ivar, :@path),
            s(:str, "yposition"),
            s(:lvar, :path)))))))
