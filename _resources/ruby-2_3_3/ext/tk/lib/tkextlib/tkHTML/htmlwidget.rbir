s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/setup.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tkHTML/setup.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "Tkhtml")),
  s(:module,
    s(:const, nil, :Tk),
    s(:class,
      s(:const, nil, :HTML_Widget),
      s(:const, nil, :TkWindow),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "Tkhtml"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "Tkhtml")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:class,
          s(:const, nil, :ClippingWindow),
          s(:const, nil, :TkWindow), nil)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :HTML_Widget), :ClippingWindow), nil,
    s(:begin,
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "HtmlClip"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:casgn, nil, :HtmlClip_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :HtmlClip_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :HtmlClip_TBL), :clear))),
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :parent),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:const, nil, :TkComm), :_symbolkey2str,
                  s(:lvar, :parent))),
              s(:lvasgn, :parent,
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "parent")))), nil),
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :String)),
            s(:lvasgn, :ppath,
              s(:send,
                s(:lvar, :parent), :path)),
            s(:if,
              s(:lvar, :parent),
              s(:lvasgn, :ppath,
                s(:lvar, :parent)),
              s(:lvasgn, :ppath,
                s(:str, "")))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :HtmlClip_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :HtmlClip_TBL), :[],
                s(:lvar, :ppath)),
              s(:return,
                s(:send,
                  s(:const, nil, :HtmlClip_TBL), :[],
                  s(:lvar, :ppath))), nil)),
          s(:lvasgn, :widgetname,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "widgetname"))),
          s(:if,
            s(:send,
              s(:lvar, :widgetname), :=~,
              s(:regexp,
                s(:str, "^(.*)\\.[^.]+$"),
                s(:regopt))),
            s(:begin,
              s(:lvasgn, :ppath2,
                s(:nth_ref, 1)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :ppath2), :[],
                    s(:int, 0)), :!=,
                  s(:str, ".")),
                s(:lvasgn, :ppath2,
                  s(:send,
                    s(:send,
                      s(:lvar, :ppath), :+,
                      s(:str, ".")), :+,
                    s(:lvar, :ppath2))), nil),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :HtmlClip_TBL), :mutex), :synchronize),
                s(:args),
                s(:if,
                  s(:send,
                    s(:const, nil, :HtmlClip_TBL), :[],
                    s(:lvar, :ppath2)),
                  s(:return,
                    s(:send,
                      s(:const, nil, :HtmlClip_TBL), :[],
                      s(:lvar, :ppath2))), nil)),
              s(:lvasgn, :ppath,
                s(:lvar, :ppath2))), nil),
          s(:lvasgn, :parent,
            s(:send,
              s(:const, nil, :TkComm), :_genobj_for_tkwidget,
              s(:lvar, :ppath))),
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const,
                s(:const, nil, :Tk), :HTML_Widget)), nil,
            s(:send, nil, :fail,
              s(:const, nil, :ArgumentError),
              s(:str, "parent must be a Tk::HTML_Widget instance"))),
          s(:super,
            s(:lvar, :parent)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent)),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:lvar, :parent)),
          s(:ivasgn, :@ppath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:ivasgn, :@path,
            s(:ivasgn, :@id,
              s(:send,
                s(:ivar, :@ppath), :+,
                s(:str, ".x")))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :HtmlClip_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :HtmlClip_TBL), :[]=,
              s(:ivar, :@ppath),
              s(:self))))),
      s(:def, :method_missing,
        s(:args,
          s(:arg, :m),
          s(:restarg, :args),
          s(:blockarg, :b)),
        s(:send,
          s(:ivar, :@parent), :__send__,
          s(:lvar, :m),
          s(:splat,
            s(:lvar, :args)),
          s(:block_pass,
            s(:lvar, :b)))))),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :HTML_Widget), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Scrollable)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "html"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Html"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :create_self,
        s(:args,
          s(:arg, :keys)),
        s(:if,
          s(:and,
            s(:lvar, :keys),
            s(:send,
              s(:lvar, :keys), :!=,
              s(:const, nil, :None))),
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:const,
                s(:send,
                  s(:self), :class), :TkCommandNames), :[],
              s(:int, 0)),
            s(:ivar, :@path),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys),
                s(:true)))),
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:const,
                s(:send,
                  s(:self), :class), :TkCommandNames), :[],
              s(:int, 0)),
            s(:ivar, :@path)))),
      s(:send, nil, :private,
        s(:sym, :create_self)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:super), :<<,
                s(:str, "base")), :<<,
              s(:str, "selectioncolor")), :<<,
            s(:str, "unvisitedcolor")), :<<,
          s(:str, "visitedcolor"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:defs,
        s(:self), :reformat,
        s(:args,
          s(:arg, :src),
          s(:arg, :dst),
          s(:arg, :txt)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "reformat"),
          s(:lvar, :src),
          s(:lvar, :dst),
          s(:lvar, :txt))),
      s(:defs,
        s(:self), :url_join,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "urljoin"),
          s(:splat,
            s(:lvar, :args)))),
      s(:defs,
        s(:self), :url_split,
        s(:args,
          s(:arg, :uri)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "urlsplit"),
          s(:lvar, :uri))),
      s(:defs,
        s(:self), :lockcopy,
        s(:args,
          s(:arg, :src),
          s(:arg, :dst)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "lockcopy"),
          s(:lvar, :src),
          s(:lvar, :dst))),
      s(:defs,
        s(:self), :gzip_file,
        s(:args,
          s(:arg, :file),
          s(:arg, :dat)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "gzip"),
          s(:str, "file"),
          s(:lvar, :file),
          s(:lvar, :dat))),
      s(:defs,
        s(:self), :gunzip_file,
        s(:args,
          s(:arg, :file),
          s(:arg, :dat)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "gunzip"),
          s(:str, "file"),
          s(:send, nil, :filet))),
      s(:defs,
        s(:self), :gzip_data,
        s(:args,
          s(:arg, :dat)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "gzip"),
          s(:str, "data"),
          s(:send, nil, :file),
          s(:lvar, :dat))),
      s(:defs,
        s(:self), :gunzip_data,
        s(:args,
          s(:arg, :dat)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "gunzip"),
          s(:str, "data"),
          s(:send, nil, :filet))),
      s(:defs,
        s(:self), :base64_encode,
        s(:args,
          s(:arg, :dat)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "base64"),
          s(:str, "encode"),
          s(:lvar, :dat))),
      s(:defs,
        s(:self), :base64_decode,
        s(:args,
          s(:arg, :dat)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "base64"),
          s(:str, "encode"),
          s(:lvar, :dat))),
      s(:defs,
        s(:self), :text_format,
        s(:args,
          s(:arg, :dat),
          s(:arg, :len)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "text"),
          s(:str, "format"),
          s(:lvar, :dat),
          s(:lvar, :len))),
      s(:defs,
        s(:self), :xor,
        s(:args,
          s(:arg, :cmd),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "xor"),
          s(:lvar, :cmd),
          s(:splat,
            s(:lvar, :args)))),
      s(:defs,
        s(:self), :stdchan,
        s(:args,
          s(:arg, :cmd),
          s(:arg, :channel)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "stdchan"),
          s(:lvar, :cmd),
          s(:lvar, :channel))),
      s(:defs,
        s(:self), :crc32,
        s(:args,
          s(:arg, :data)),
        s(:send, nil, :tk_call,
          s(:str, "html"),
          s(:str, "crc32"),
          s(:lvar, :data))),
      s(:def, :clipping_window,
        s(:args),
        s(:send,
          s(:const, nil, :ClippingWindow), :new,
          s(:self))),
      s(:alias,
        s(:sym, :clipwin),
        s(:sym, :clipping_window)),
      s(:alias,
        s(:sym, :htmlclip),
        s(:sym, :clipping_window)),
      s(:def, :bgimage,
        s(:args,
          s(:arg, :image),
          s(:optarg, :tid,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "bgimage"),
            s(:lvar, :image),
            s(:lvar, :tid)),
          s(:self))),
      s(:def, :clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "clear")),
          s(:self))),
      s(:def, :coords,
        s(:args,
          s(:optarg, :index,
            s(:const, nil, :None)),
          s(:optarg, :percent,
            s(:const, nil, :None))),
        s(:send, nil, :tk_send,
          s(:str, "coords"),
          s(:lvar, :index),
          s(:lvar, :percent))),
      s(:def, :forminfo,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :tk_send,
          s(:str, "forminfo"),
          s(:splat,
            s(:lvar, :args)))),
      s(:alias,
        s(:sym, :form_info),
        s(:sym, :forminfo)),
      s(:def, :href,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "href"),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :image_add,
        s(:args,
          s(:arg, :id),
          s(:arg, :img)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "imageadd"),
            s(:lvar, :id),
            s(:lvar, :img)),
          s(:self))),
      s(:def, :image_at,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send,
          s(:str, "imageat"),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :images,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "images")))),
      s(:def, :image_set,
        s(:args,
          s(:arg, :id),
          s(:arg, :num)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "imageset"),
            s(:lvar, :id),
            s(:lvar, :num)),
          s(:self))),
      s(:def, :image_update,
        s(:args,
          s(:arg, :id),
          s(:arg, :imgs)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "imageupdate"),
            s(:lvar, :id),
            s(:lvar, :imgs)),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx),
          s(:optarg, :count,
            s(:const, nil, :None)),
          s(:optarg, :unit,
            s(:const, nil, :None))),
        s(:send, nil, :tk_send,
          s(:str, "index"),
          s(:lvar, :idx),
          s(:lvar, :count),
          s(:lvar, :unit))),
      s(:def, :insert_cursor,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "insert"),
          s(:lvar, :idx))),
      s(:def, :names,
        s(:args),
        s(:send, nil, :simple_list,
          s(:send, nil, :tk_send,
            s(:str, "names")))),
      s(:def, :on_screen,
        s(:args,
          s(:arg, :id),
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "onscreen"),
            s(:lvar, :id),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :over,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "over"),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :over_markup,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "over"),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:str, "-muponly")))),
      s(:def, :over_attr,
        s(:args,
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :attrs)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "overattr"),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:lvar, :attrs)))),
      s(:def, :parse,
        s(:args,
          s(:arg, :txt)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "parse"),
            s(:lvar, :txt)),
          s(:self))),
      s(:def, :resolver,
        s(:args,
          s(:restarg, :uri_args)),
        s(:send, nil, :tk_send,
          s(:str, "resolver"),
          s(:splat,
            s(:lvar, :uri_args)))),
      s(:def, :selection_clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "clear")),
          s(:self))),
      s(:def, :selection_set,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "set"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :refresh,
        s(:args,
          s(:restarg, :opts)),
        s(:send, nil, :tk_send,
          s(:str, "refresh"),
          s(:splat,
            s(:lvar, :opts)))),
      s(:def, :layout,
        s(:args),
        s(:send, nil, :tk_send,
          s(:str, "layout"))),
      s(:def, :sizewindow,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :tk_send,
          s(:str, "sizewindow"),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :postscript,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :tk_send,
          s(:str, "postscript"),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :source,
        s(:args),
        s(:send, nil, :tk_send,
          s(:str, "source"))),
      s(:def, :plain_text,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "ascii"),
          s(:lvar, :first),
          s(:lvar, :last))),
      s(:alias,
        s(:sym, :ascii_text),
        s(:sym, :plain_text)),
      s(:alias,
        s(:sym, :text_ascii),
        s(:sym, :plain_text)),
      s(:def, :text_delete,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "delete"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :html_text,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "html"),
          s(:lvar, :first),
          s(:lvar, :last))),
      s(:alias,
        s(:sym, :text_html),
        s(:sym, :html_text)),
      s(:def, :text_insert,
        s(:args,
          s(:arg, :idx),
          s(:arg, :txt)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "insert"),
            s(:lvar, :idx),
            s(:lvar, :txt)),
          s(:self))),
      s(:def, :break_text,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "break"),
          s(:lvar, :idx))),
      s(:alias,
        s(:sym, :text_break),
        s(:sym, :break_text)),
      s(:def, :text_find,
        s(:args,
          s(:arg, :txt),
          s(:restarg, :args)),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "find"),
          s(:lvar, :txt),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :text_table,
        s(:args,
          s(:arg, :idx),
          s(:optarg, :imgs,
            s(:const, nil, :None)),
          s(:optarg, :attrs,
            s(:const, nil, :None))),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "table"),
          s(:lvar, :idx),
          s(:lvar, :imgs),
          s(:lvar, :attrs))),
      s(:def, :token_append,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "append"),
            s(:lvar, :tag),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :token_delete,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "delete"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :token_define,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "defile"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :token_find,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :args)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "find"),
            s(:lvar, :tag),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :token_get,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "get"),
            s(:lvar, :first),
            s(:lvar, :last)))),
      s(:def, :token_list,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "list"),
            s(:lvar, :first),
            s(:lvar, :last)))),
      s(:def, :token_markup,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "markup"),
            s(:lvar, :first),
            s(:lvar, :last)))),
      s(:def, :token_DOM,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "domtokens"),
            s(:lvar, :first),
            s(:lvar, :last)))),
      s(:alias,
        s(:sym, :token_dom),
        s(:sym, :token_DOM)),
      s(:alias,
        s(:sym, :token_domtokens),
        s(:sym, :token_DOM)),
      s(:alias,
        s(:sym, :token_dom_tokens),
        s(:sym, :token_DOM)),
      s(:def, :token_get_end,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "token"),
          s(:str, "getend"),
          s(:lvar, :idx))),
      s(:alias,
        s(:sym, :token_getend),
        s(:sym, :token_get_end)),
      s(:def, :token_offset,
        s(:args,
          s(:arg, :start),
          s(:arg, :num1),
          s(:arg, :num2)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "offset"),
            s(:lvar, :start),
            s(:lvar, :num1),
            s(:lvar, :num2)))),
      s(:def, :token_get_attr,
        s(:args,
          s(:arg, :idx),
          s(:optarg, :name,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "attr"),
            s(:lvar, :idx),
            s(:lvar, :name)))),
      s(:def, :token_set_attr,
        s(:args,
          s(:arg, :idx),
          s(:optarg, :name,
            s(:const, nil, :None)),
          s(:optarg, :val,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "attr"),
            s(:lvar, :idx),
            s(:lvar, :name),
            s(:lvar, :val)),
          s(:self))),
      s(:def, :token_handler,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :cmd,
            s(:nil)),
          s(:blockarg, :b)),
        s(:begin,
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :cmd), :!),
              s(:lvar, :b)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:if,
            s(:lvar, :cmd),
            s(:begin,
              s(:send, nil, :tk_send,
                s(:str, "token"),
                s(:str, "handler"),
                s(:lvar, :tag),
                s(:lvar, :cmd)),
              s(:return,
                s(:self))),
            s(:return,
              s(:send, nil, :tk_send,
                s(:str, "token"),
                s(:str, "handler"),
                s(:lvar, :tag)))))),
      s(:def, :token_insert,
        s(:args,
          s(:arg, :idx),
          s(:arg, :tag),
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "insert"),
            s(:lvar, :idx),
            s(:lvar, :tag),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :token_attrs,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "attrs"),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :token_unique,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "unique"),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :token_on_events,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "token"),
            s(:str, "onEvents"),
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :dom_nameidx,
        s(:args,
          s(:arg, :tag),
          s(:arg, :name)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "dom"),
            s(:str, "nameidx"),
            s(:lvar, :tag),
            s(:lvar, :name)))),
      s(:alias,
        s(:sym, :dom_name_index),
        s(:sym, :dom_nameidx)),
      s(:def, :dom_radioidx,
        s(:args,
          s(:arg, :tag),
          s(:arg, :name)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "dom"),
            s(:str, "radioidx"),
            s(:lvar, :tag),
            s(:lvar, :name)))),
      s(:alias,
        s(:sym, :dom_radio_index),
        s(:sym, :dom_radioidx)),
      s(:def, :dom_id,
        s(:args,
          s(:restarg, :spec)),
        s(:send, nil, :tk_send,
          s(:str, "dom"),
          s(:str, "id"),
          s(:splat,
            s(:lvar, :spec)))),
      s(:def, :dom_ids,
        s(:args,
          s(:restarg, :spec)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "dom"),
            s(:str, "ids"),
            s(:splat,
              s(:lvar, :spec))))),
      s(:def, :dom_value,
        s(:args,
          s(:restarg, :spec)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "dom"),
            s(:str, "value"),
            s(:splat,
              s(:lvar, :spec))))),
      s(:def, :dom_attr,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "dom"),
          s(:str, "attr"),
          s(:lvar, :idx))),
      s(:def, :dom_formel,
        s(:args,
          s(:arg, :name)),
        s(:send, nil, :tk_send,
          s(:str, "dom"),
          s(:str, "formel"),
          s(:lvar, :name))),
      s(:alias,
        s(:sym, :dom_form_element),
        s(:sym, :dom_formel)),
      s(:def, :dom_tree,
        s(:args,
          s(:arg, :idx),
          s(:arg, :val)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "dom"),
            s(:str, "tree"),
            s(:lvar, :idx),
            s(:lvar, :val)))))))
