s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/itemconfig.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:module,
      s(:const, nil, :Table),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Tk)),
        s(:send, nil, :extend,
          s(:const, nil, :Tk)),
        s(:send, nil, :extend,
          s(:const, nil, :TkItemConfigMethod)),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::blt::table"), :freeze)), :freeze)),
        s(:module,
          s(:const, nil, :TableContainer),
          s(:begin,
            s(:def, :blt_table_add,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :add,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_arrange,
              s(:args),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :arrange,
                  s(:self)),
                s(:self))),
            s(:def, :blt_table_cget_tkstring,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :cget_tkstring,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_cget,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :cget,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_cget_strict,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :cget_strict,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_configure,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :configure,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_configinfo,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :configinfo,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_current_configinfo,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :current_configinfo,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_locate,
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :locate,
                s(:self),
                s(:lvar, :x),
                s(:lvar, :y))),
            s(:def, :blt_table_delete,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :delete,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_extents,
              s(:args,
                s(:arg, :item)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :extents,
                s(:self),
                s(:lvar, :item))),
            s(:def, :blt_table_insert,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :insert,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_insert_before,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :insert_before,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_insert_after,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :insert_after,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_join,
              s(:args,
                s(:arg, :first),
                s(:arg, :last)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :join,
                  s(:self),
                  s(:lvar, :first),
                  s(:lvar, :last)),
                s(:self))),
            s(:def, :blt_table_save,
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :save,
                s(:self))),
            s(:def, :blt_table_search,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :search,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_split,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :split,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_itemcget_tkstring,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :itemcget_tkstring,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_itemcget,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :itemcget,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_itemcget_strict,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :itemcget_strict,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_itemconfigure,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Table), :itemconfigure,
                  s(:self),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :blt_table_itemconfiginfo,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :itemconfiginfo,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_current_itemconfiginfo,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :current_itemconfiginfo,
                s(:self),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :blt_table_iteminfo,
              s(:args,
                s(:arg, :item)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Table), :iteminfo,
                s(:self),
                s(:lvar, :item)))))))),
  s(:sclass,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Table),
    s(:begin,
      s(:def, :__item_cget_cmd,
        s(:args,
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :win,
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :TkWindow))),
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :path),
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :to_s))),
          s(:array,
            s(:str, "::blt::table"),
            s(:str, "cget"),
            s(:lvar, :win),
            s(:send,
              s(:lvar, :id), :[],
              s(:int, 1))))),
      s(:send, nil, :private,
        s(:sym, :__item_cget_cmd)),
      s(:def, :__item_config_cmd,
        s(:args,
          s(:arg, :id)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :container),
              s(:splat,
                s(:lvasgn, :items))),
            s(:lvar, :id)),
          s(:lvasgn, :win,
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :container), :kind_of?,
                  s(:const, nil, :TkWindow))),
              s(:send,
                s(:lvar, :container), :path),
              s(:send,
                s(:lvar, :container), :to_s))),
          s(:array,
            s(:str, "::blt::table"),
            s(:str, "configure"),
            s(:lvar, :win),
            s(:splat,
              s(:lvar, :items))))),
      s(:send, nil, :private,
        s(:sym, :__item_config_cmd)),
      s(:def, :__item_pathname,
        s(:args,
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :win,
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :TkWindow))),
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :path),
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :to_s))),
          s(:send,
            s(:lvar, :win), :+,
            s(:str, ";")))),
      s(:send, nil, :private,
        s(:sym, :__item_pathname)),
      s(:alias,
        s(:sym, :__itemcget_tkstring),
        s(:sym, :itemcget_tkstring)),
      s(:alias,
        s(:sym, :__itemcget),
        s(:sym, :itemcget)),
      s(:alias,
        s(:sym, :__itemcget_strict),
        s(:sym, :itemcget_strict)),
      s(:alias,
        s(:sym, :__itemconfigure),
        s(:sym, :itemconfigure)),
      s(:alias,
        s(:sym, :__itemconfiginfo),
        s(:sym, :itemconfiginfo)),
      s(:alias,
        s(:sym, :__current_itemconfiginfo),
        s(:sym, :current_itemconfiginfo)),
      s(:send, nil, :private,
        s(:sym, :__itemcget_tkstring),
        s(:sym, :__itemcget),
        s(:sym, :__itemcget_strict)),
      s(:send, nil, :private,
        s(:sym, :__itemconfigure),
        s(:sym, :__itemconfiginfo),
        s(:sym, :__current_itemconfiginfo)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "propagate"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:send,
            s(:lvar, :tag), :kind_of?,
            s(:const, nil, :Array)),
          s(:case,
            s(:send,
              s(:lvar, :tag), :[],
              s(:int, 0)),
            s(:when,
              s(:const, nil, :Integer),
              s(:send,
                s(:lvar, :tag), :join,
                s(:str, ","))),
            s(:when,
              s(:sym, :c),
              s(:sym, :C),
              s(:str, "c"),
              s(:str, "C"),
              s(:sym, :r),
              s(:sym, :R),
              s(:str, "r"),
              s(:str, "R"),
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :tag), :collect),
                  s(:args,
                    s(:arg, :elem)),
                  s(:send,
                    s(:lvar, :elem), :to_s)), :join,
                s(:str, ""))),
            s(:lvar, :tag)),
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :TkWindow)),
            s(:send, nil, :_epath,
              s(:lvar, :tag)),
            s(:lvar, :tag)))),
      s(:def, :tagid2obj,
        s(:args,
          s(:arg, :tagid)),
        s(:lvar, :tagid)),
      s(:def, :cget_tkstring,
        s(:args,
          s(:arg, :container),
          s(:arg, :option)),
        s(:send, nil, :__itemcget_tkstring,
          s(:array,
            s(:lvar, :container)),
          s(:lvar, :option))),
      s(:def, :cget,
        s(:args,
          s(:arg, :container),
          s(:arg, :option)),
        s(:send, nil, :__itemcget,
          s(:array,
            s(:lvar, :container)),
          s(:lvar, :option))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :container),
          s(:arg, :option)),
        s(:send, nil, :__itemcget_strict,
          s(:array,
            s(:lvar, :container)),
          s(:lvar, :option))),
      s(:def, :configure,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :__itemconfigure,
          s(:array,
            s(:lvar, :container)),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :configinfo,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :__itemconfiginfo,
          s(:array,
            s(:lvar, :container)),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :current_configinfo,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :__current_itemconfiginfo,
          s(:array,
            s(:lvar, :container)),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :itemcget_tkstring,
        s(:args,
          s(:arg, :container),
          s(:arg, :item),
          s(:arg, :option)),
        s(:send, nil, :__itemcget_tkstring,
          s(:array,
            s(:lvar, :container),
            s(:send, nil, :tagid,
              s(:lvar, :item))),
          s(:lvar, :option))),
      s(:def, :itemcget,
        s(:args,
          s(:arg, :container),
          s(:arg, :item),
          s(:arg, :option)),
        s(:send, nil, :__itemcget,
          s(:array,
            s(:lvar, :container),
            s(:send, nil, :tagid,
              s(:lvar, :item))),
          s(:lvar, :option))),
      s(:def, :itemcget_strict,
        s(:args,
          s(:arg, :container),
          s(:arg, :item),
          s(:arg, :option)),
        s(:send, nil, :__itemcget_strict,
          s(:array,
            s(:lvar, :container),
            s(:send, nil, :tagid,
              s(:lvar, :item))),
          s(:lvar, :option))),
      s(:def, :itemconfigure,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:if,
                s(:send,
                  s(:lvar, :args), :empty?),
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "no item is given")), nil),
              s(:lvasgn, :id,
                s(:array,
                  s(:lvar, :container))),
              s(:block,
                s(:send,
                  s(:lvar, :args), :each),
                s(:args,
                  s(:arg, :item)),
                s(:send,
                  s(:lvar, :id), :<<,
                  s(:send, nil, :tagid,
                    s(:lvar, :item)))),
              s(:send, nil, :__itemconfigure,
                s(:lvar, :id),
                s(:lvar, :keys))),
            s(:begin,
              s(:lvasgn, :val,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:lvasgn, :opt,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:if,
                s(:send,
                  s(:lvar, :args), :empty?),
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "no item is given")), nil),
              s(:lvasgn, :id,
                s(:array,
                  s(:lvar, :container))),
              s(:block,
                s(:send,
                  s(:lvar, :args), :each),
                s(:args,
                  s(:arg, :item)),
                s(:send,
                  s(:lvar, :id), :<<,
                  s(:send, nil, :tagid,
                    s(:lvar, :item)))),
              s(:send, nil, :__itemconfigure,
                s(:lvar, :id),
                s(:lvar, :opt),
                s(:lvar, :val)))),
          s(:lvar, :container))),
      s(:def, :itemconfiginfo,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :slot,
            s(:send,
              s(:lvar, :args), :[],
              s(:int, -1))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :String)),
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Symbol))),
            s(:begin,
              s(:lvasgn, :slot,
                s(:send,
                  s(:lvar, :slot), :to_s)),
              s(:if,
                s(:or,
                  s(:or,
                    s(:send,
                      s(:send,
                        s(:lvar, :slot), :[],
                        s(:int, 0)), :==,
                      s(:str, ".")),
                    s(:send,
                      s(:lvar, :slot), :=~,
                      s(:regexp,
                        s(:str, "^\\d+,\\d+$"),
                        s(:regopt)))),
                  s(:send,
                    s(:lvar, :slot), :=~,
                    s(:regexp,
                      s(:str, "^(c|C|r|R)(\\*|\\d+)"),
                      s(:regopt)))),
                s(:lvasgn, :slot,
                  s(:nil)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :slot,
              s(:nil))),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:send, nil, :fail,
              s(:const, nil, :ArgumentError),
              s(:str, "no item is given")), nil),
          s(:lvasgn, :id,
            s(:array,
              s(:lvar, :container))),
          s(:block,
            s(:send,
              s(:lvar, :args), :each),
            s(:args,
              s(:arg, :item)),
            s(:send,
              s(:lvar, :id), :<<,
              s(:send, nil, :tagid,
                s(:lvar, :item)))),
          s(:send, nil, :__itemconfiginfo,
            s(:lvar, :id),
            s(:lvar, :slot)))),
      s(:def, :current_itemconfiginfo,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :slot,
            s(:send,
              s(:lvar, :args), :[],
              s(:int, -1))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :String)),
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Symbol))),
            s(:begin,
              s(:lvasgn, :slot,
                s(:send,
                  s(:lvar, :slot), :to_s)),
              s(:if,
                s(:or,
                  s(:or,
                    s(:send,
                      s(:send,
                        s(:lvar, :slot), :[],
                        s(:int, 0)), :==,
                      s(:str, ".")),
                    s(:send,
                      s(:lvar, :slot), :=~,
                      s(:regexp,
                        s(:str, "^\\d+,\\d+$"),
                        s(:regopt)))),
                  s(:send,
                    s(:lvar, :slot), :=~,
                    s(:regexp,
                      s(:str, "^(c|C|r|R)(\\*|\\d+)"),
                      s(:regopt)))),
                s(:lvasgn, :slot,
                  s(:nil)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :slot,
              s(:nil))),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:send, nil, :fail,
              s(:const, nil, :ArgumentError),
              s(:str, "no item is given")), nil),
          s(:lvasgn, :id,
            s(:array,
              s(:lvar, :container))),
          s(:block,
            s(:send,
              s(:lvar, :args), :each),
            s(:args,
              s(:arg, :item)),
            s(:send,
              s(:lvar, :id), :<<,
              s(:send, nil, :tagid,
                s(:lvar, :item)))),
          s(:send, nil, :__current_itemconfiginfo,
            s(:lvar, :id),
            s(:lvar, :slot)))),
      s(:def, :info,
        s(:args,
          s(:arg, :container)),
        s(:begin,
          s(:lvasgn, :ret,
            s(:hash)),
          s(:lvasgn, :inf,
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:str, "::blt::table"),
                s(:str, "info"),
                s(:lvar, :container)))),
          s(:until,
            s(:send,
              s(:lvar, :inf), :empty?),
            s(:begin,
              s(:lvasgn, :opt,
                s(:send,
                  s(:lvar, :inf), :slice!,
                  s(:irange,
                    s(:int, 0),
                    s(:int, 1)))),
              s(:send,
                s(:lvar, :ret), :[]=,
                s(:send,
                  s(:lvar, :opt), :[],
                  s(:irange,
                    s(:int, 1),
                    s(:int, -1))),
                s(:send,
                  s(:lvar, :opt), :[],
                  s(:int, 1))))),
          s(:lvar, :ret))),
      s(:def, :iteminfo,
        s(:args,
          s(:arg, :container),
          s(:arg, :item)),
        s(:begin,
          s(:lvasgn, :inf,
            s(:send, nil, :list,
              s(:send,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::table"),
                  s(:str, "info"),
                  s(:lvar, :container),
                  s(:send, nil, :tagid,
                    s(:lvar, :item))), :chomp))),
          s(:lvasgn, :ret,
            s(:array)),
          s(:until,
            s(:or,
              s(:send,
                s(:lvar, :inf), :empty?),
              s(:begin,
                s(:and,
                  s(:send,
                    s(:send,
                      s(:lvar, :inf), :[],
                      s(:int, 0)), :kind_of?,
                    s(:const, nil, :String)),
                  s(:send,
                    s(:send,
                      s(:lvar, :inf), :[],
                      s(:int, 0)), :=~,
                    s(:regexp,
                      s(:str, "^-"),
                      s(:regopt)))))),
            s(:send,
              s(:lvar, :ret), :<<,
              s(:send,
                s(:lvar, :inf), :shift))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :inf), :length), :>,
              s(:int, 1)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:hash)),
              s(:while,
                s(:send,
                  s(:send,
                    s(:lvar, :inf), :length), :>,
                  s(:int, 1)),
                s(:begin,
                  s(:lvasgn, :opt,
                    s(:send,
                      s(:lvar, :inf), :slice!,
                      s(:irange,
                        s(:int, 0),
                        s(:int, 1)))),
                  s(:send,
                    s(:lvar, :keys), :[]=,
                    s(:send,
                      s(:send,
                        s(:lvar, :opt), :[],
                        s(:int, 0)), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1))),
                    s(:send,
                      s(:lvar, :opt), :[],
                      s(:int, 1))))),
              s(:send,
                s(:lvar, :ret), :<<,
                s(:lvar, :keys))), nil),
          s(:lvar, :ret))),
      s(:def, :create_container,
        s(:args,
          s(:arg, :container)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:lvar, :container)),
          s(:kwbegin,
            s(:rescue,
              s(:sclass,
                s(:lvar, :container),
                s(:send, nil, :include,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Table), :TableContainer))),
              s(:resbody, nil, nil,
                s(:send, nil, :warn,
                  s(:str, "fail to include TableContainer methods (frozen object?)"))), nil)),
          s(:lvar, :container))),
      s(:def, :add,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:send, nil, :tk_call,
              s(:str, "::blt::table"),
              s(:lvar, :container)),
            s(:begin,
              s(:lvasgn, :args,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :arg)),
                  s(:if,
                    s(:send,
                      s(:lvar, :arg), :kind_of?,
                      s(:const, nil, :TkWindow)),
                    s(:send, nil, :_epath,
                      s(:lvar, :arg)),
                    s(:if,
                      s(:send,
                        s(:lvar, :arg), :kind_of?,
                        s(:const, nil, :Array)),
                      s(:send,
                        s(:lvar, :arg), :join,
                        s(:str, ",")),
                      s(:lvar, :arg))))),
              s(:send, nil, :tk_call,
                s(:str, "::blt::table"),
                s(:lvar, :container),
                s(:splat,
                  s(:lvar, :args))))),
          s(:lvar, :container))),
      s(:def, :arrange,
        s(:args,
          s(:arg, :container)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:str, "arrange"),
            s(:lvar, :container)),
          s(:lvar, :container))),
      s(:def, :delete,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "delete"),
          s(:lvar, :container),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :extents,
        s(:args,
          s(:arg, :container),
          s(:arg, :item)),
        s(:begin,
          s(:lvasgn, :ret,
            s(:array)),
          s(:lvasgn, :inf,
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:str, "::blt::table"),
                s(:str, "extents"),
                s(:lvar, :container),
                s(:lvar, :item)))),
          s(:until,
            s(:send,
              s(:lvar, :inf), :empty?),
            s(:send,
              s(:lvar, :ret), :<<,
              s(:send,
                s(:lvar, :inf), :slice!,
                s(:irange,
                  s(:int, 0),
                  s(:int, 4))))),
          s(:lvar, :ret))),
      s(:def, :forget,
        s(:args,
          s(:restarg, :wins)),
        s(:begin,
          s(:lvasgn, :wins,
            s(:block,
              s(:send,
                s(:lvar, :wins), :collect),
              s(:args,
                s(:arg, :win)),
              s(:send, nil, :_epath,
                s(:lvar, :win)))),
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:str, "forget"),
            s(:splat,
              s(:lvar, :wins))))),
      s(:def, :insert,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "insert"),
          s(:lvar, :container),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :insert_before,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "insert"),
          s(:lvar, :container),
          s(:str, "-before"),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :insert_after,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "insert"),
          s(:lvar, :container),
          s(:str, "-after"),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :join,
        s(:args,
          s(:arg, :container),
          s(:arg, :first),
          s(:arg, :last)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "join"),
          s(:lvar, :container),
          s(:lvar, :first),
          s(:lvar, :last))),
      s(:def, :locate,
        s(:args,
          s(:arg, :container),
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "locate"),
          s(:lvar, :container),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :containers,
        s(:args,
          s(:optarg, :arg,
            s(:hash))),
        s(:send, nil, :list,
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:str, "containers"),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :arg)))))),
      s(:def, :containers_pattern,
        s(:args,
          s(:arg, :pat)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:str, "containers"),
            s(:str, "-pattern"),
            s(:lvar, :pat)))),
      s(:def, :containers_slave,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:str, "containers"),
            s(:str, "-slave"),
            s(:lvar, :win)))),
      s(:def, :save,
        s(:args,
          s(:arg, :container)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "save"),
          s(:lvar, :container))),
      s(:def, :search,
        s(:args,
          s(:arg, :container),
          s(:optarg, :keys,
            s(:hash))),
        s(:send, nil, :list,
          s(:send, nil, :tk_call,
            s(:str, "::blt::table"),
            s(:str, "containers"),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys)))))),
      s(:def, :split,
        s(:args,
          s(:arg, :container),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::table"),
          s(:str, "split"),
          s(:lvar, :container),
          s(:splat,
            s(:lvar, :args)))))))
