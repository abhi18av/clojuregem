s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:send, nil, :require,
    s(:str, "tk/validation.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:begin,
      s(:class,
        s(:const, nil, :Treeview),
        s(:const, nil, :TkWindow),
        s(:begin,
          s(:module,
            s(:const, nil, :ConfigMethod), nil),
          s(:module,
            s(:const, nil, :TagOrID_Methods), nil),
          s(:class,
            s(:const, nil, :Node),
            s(:const, nil, :TkObject), nil),
          s(:class,
            s(:const, nil, :Tag),
            s(:const, nil, :TkObject), nil))),
      s(:class,
        s(:const, nil, :Hiertable),
        s(:const, nil, :Treeview), nil))),
  s(:module,
    s(:const,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :BLT), :Treeview), :ConfigMethod),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__item_boolval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:case,
          s(:lvar, :id),
          s(:when,
            s(:const, nil, :Array),
            s(:array,
              s(:str, "edit"),
              s(:str, "hide"))),
          s(:when,
            s(:str, "sort"),
            s(:array,
              s(:str, "decreasing"))),
          s(:array))),
      s(:send, nil, :private,
        s(:sym, :__item_boolval_optkeys)),
      s(:def, :__item_strval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:case,
          s(:lvar, :id),
          s(:when,
            s(:const, nil, :Array),
            s(:send,
              s(:send,
                s(:super), :<<,
                s(:str, "titleforeground")), :<<,
              s(:str, "titleshadow"))),
          s(:when,
            s(:str, "sort"),
            s(:array,
              s(:str, "decreasing"))),
          s(:array))),
      s(:send, nil, :private,
        s(:sym, :__item_strval_optkeys)),
      s(:def, :__item_listval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:case,
          s(:lvar, :id),
          s(:when,
            s(:str, "entry"),
            s(:array,
              s(:str, "bindtags"))),
          s(:array))),
      s(:send, nil, :private,
        s(:sym, :__item_listval_optkeys)),
      s(:def, :__item_cget_cmd,
        s(:args,
          s(:arg, :id)),
        s(:if,
          s(:send,
            s(:lvar, :id), :kind_of?,
            s(:const, nil, :Array)),
          s(:array,
            s(:send,
              s(:self), :path),
            s(:send,
              s(:lvar, :id), :[],
              s(:int, 0)),
            s(:str, "cget"),
            s(:send,
              s(:lvar, :id), :[],
              s(:int, 1))),
          s(:array,
            s(:send,
              s(:self), :path),
            s(:lvar, :id),
            s(:str, "cget")))),
      s(:send, nil, :private,
        s(:sym, :__item_cget_cmd)),
      s(:def, :__item_config_cmd,
        s(:args,
          s(:arg, :id)),
        s(:if,
          s(:send,
            s(:lvar, :id), :kind_of?,
            s(:const, nil, :Array)),
          s(:array,
            s(:send,
              s(:self), :path),
            s(:send,
              s(:lvar, :id), :[],
              s(:int, 0)),
            s(:str, "configure"),
            s(:send,
              s(:lvar, :id), :[],
              s(:int, 1))),
          s(:array,
            s(:send,
              s(:self), :path),
            s(:lvar, :id),
            s(:str, "configure")))),
      s(:send, nil, :private,
        s(:sym, :__item_config_cmd)),
      s(:def, :__item_pathname,
        s(:args,
          s(:arg, :id)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :id), :kind_of?,
              s(:const, nil, :Array)),
            s(:lvasgn, :id,
              s(:send, nil, :tagid,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 1)))), nil),
          s(:send,
            s(:array,
              s(:send,
                s(:self), :path),
              s(:lvar, :id)), :join,
            s(:str, ";")))),
      s(:send, nil, :private,
        s(:sym, :__item_pathname)),
      s(:def, :column_cget_tkstring,
        s(:args,
          s(:arg, :name),
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:array,
            s(:str, "column"),
            s(:lvar, :name)),
          s(:lvar, :option))),
      s(:def, :column_cget,
        s(:args,
          s(:arg, :name),
          s(:arg, :option)),
        s(:send, nil, :itemcget,
          s(:array,
            s(:str, "column"),
            s(:lvar, :name)),
          s(:lvar, :option))),
      s(:def, :column_cget_strict,
        s(:args,
          s(:arg, :name),
          s(:arg, :option)),
        s(:send, nil, :itemcget_strict,
          s(:array,
            s(:str, "column"),
            s(:lvar, :name)),
          s(:lvar, :option))),
      s(:def, :column_configure,
        s(:args,
          s(:arg, :name),
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:send, nil, :itemconfigure,
          s(:array,
            s(:str, "column"),
            s(:lvar, :name)),
          s(:lvar, :slot),
          s(:lvar, :value))),
      s(:def, :column_configinfo,
        s(:args,
          s(:arg, :name),
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :itemconfiginfo,
          s(:array,
            s(:str, "column"),
            s(:lvar, :name)),
          s(:lvar, :slot))),
      s(:def, :current_column_configinfo,
        s(:args,
          s(:arg, :name),
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_itemconfiginfo,
          s(:array,
            s(:str, "column"),
            s(:lvar, :name)),
          s(:lvar, :slot))),
      s(:def, :button_cget_tkstring,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:str, "button"),
          s(:lvar, :option))),
      s(:def, :button_cget,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget,
          s(:str, "button"),
          s(:lvar, :option))),
      s(:def, :button_cget_strict,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_strict,
          s(:str, "button"),
          s(:lvar, :option))),
      s(:def, :button_configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:send, nil, :itemconfigure,
          s(:str, "button"),
          s(:lvar, :slot),
          s(:lvar, :value))),
      s(:def, :button_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :itemconfiginfo,
          s(:str, "button"),
          s(:lvar, :slot))),
      s(:def, :current_button_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_itemconfiginfo,
          s(:str, "button"),
          s(:lvar, :slot))),
      s(:def, :entry_cget_tkstring,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:str, "entry"),
          s(:lvar, :option))),
      s(:def, :entry_cget,
        s(:args,
          s(:arg, :option)),
        s(:begin,
          s(:lvasgn, :ret,
            s(:send, nil, :itemcget,
              s(:str, "entry"),
              s(:lvar, :option))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :option), :==,
                s(:str, "bindtags")),
              s(:send,
                s(:lvar, :option), :==,
                s(:sym, :bindtags))),
            s(:block,
              s(:send,
                s(:lvar, :ret), :collect),
              s(:args,
                s(:arg, :tag)),
              s(:send,
                s(:const, nil, :TkBindTag), :id2obj,
                s(:lvar, :tag))),
            s(:lvar, :ret)))),
      s(:def, :entry_cget_strict,
        s(:args,
          s(:arg, :option)),
        s(:begin,
          s(:lvasgn, :ret,
            s(:send, nil, :itemcget_strict,
              s(:str, "entry"),
              s(:lvar, :option))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :option), :==,
                s(:str, "bindtags")),
              s(:send,
                s(:lvar, :option), :==,
                s(:sym, :bindtags))),
            s(:block,
              s(:send,
                s(:lvar, :ret), :collect),
              s(:args,
                s(:arg, :tag)),
              s(:send,
                s(:const, nil, :TkBindTag), :id2obj,
                s(:lvar, :tag))),
            s(:lvar, :ret)))),
      s(:def, :entry_configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:send, nil, :itemconfigure,
          s(:str, "entry"),
          s(:lvar, :slot),
          s(:lvar, :value))),
      s(:def, :entry_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :ret,
            s(:send, nil, :itemconfiginfo,
              s(:str, "entry"),
              s(:lvar, :slot))),
          s(:if,
            s(:const,
              s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
            s(:if,
              s(:lvar, :slot),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:str, "bindtags")),
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:sym, :bindtags))),
                s(:begin,
                  s(:send,
                    s(:lvar, :ret), :[]=,
                    s(:int, -2),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :ret), :[],
                          s(:int, -2)), :collect),
                      s(:args,
                        s(:arg, :tag)),
                      s(:send,
                        s(:const, nil, :TkBindTag), :id2obj,
                        s(:lvar, :tag)))),
                  s(:send,
                    s(:lvar, :ret), :[]=,
                    s(:int, -1),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :ret), :[],
                          s(:int, -1)), :collect),
                      s(:args,
                        s(:arg, :tag)),
                      s(:send,
                        s(:const, nil, :TkBindTag), :id2obj,
                        s(:lvar, :tag))))), nil),
              s(:begin,
                s(:lvasgn, :inf,
                  s(:send,
                    s(:lvar, :ret), :assoc,
                    s(:str, "bindtags"))),
                s(:send,
                  s(:lvar, :inf), :[]=,
                  s(:int, -2),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :inf), :[],
                        s(:int, -2)), :collect),
                    s(:args,
                      s(:arg, :tag)),
                    s(:send,
                      s(:const, nil, :TkBindTag), :id2obj,
                      s(:lvar, :tag)))),
                s(:send,
                  s(:lvar, :inf), :[]=,
                  s(:int, -1),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :inf), :[],
                        s(:int, -1)), :collect),
                    s(:args,
                      s(:arg, :tag)),
                    s(:send,
                      s(:const, nil, :TkBindTag), :id2obj,
                      s(:lvar, :tag)))))),
            s(:if,
              s(:begin,
                s(:lvasgn, :inf,
                  s(:send,
                    s(:lvar, :ret), :[],
                    s(:str, "bindtags")))),
              s(:begin,
                s(:send,
                  s(:lvar, :inf), :[]=,
                  s(:int, -2),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :inf), :[],
                        s(:int, -2)), :collect),
                    s(:args,
                      s(:arg, :tag)),
                    s(:send,
                      s(:const, nil, :TkBindTag), :id2obj,
                      s(:lvar, :tag)))),
                s(:send,
                  s(:lvar, :inf), :[]=,
                  s(:int, -1),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :inf), :[],
                        s(:int, -1)), :collect),
                    s(:args,
                      s(:arg, :tag)),
                    s(:send,
                      s(:const, nil, :TkBindTag), :id2obj,
                      s(:lvar, :tag)))),
                s(:send,
                  s(:lvar, :ret), :[]=,
                  s(:str, "bindtags"),
                  s(:lvar, :inf))), nil)),
          s(:lvar, :ret))),
      s(:def, :current_entry_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :ret,
            s(:send, nil, :current_itemconfiginfo,
              s(:str, "entry"),
              s(:lvar, :slot))),
          s(:if,
            s(:begin,
              s(:lvasgn, :val,
                s(:send,
                  s(:lvar, :ret), :[],
                  s(:str, "bindtags")))),
            s(:send,
              s(:lvar, :ret), :[]=,
              s(:str, "bindtags"),
              s(:block,
                s(:send,
                  s(:lvar, :val), :collect),
                s(:args,
                  s(:arg, :tag)),
                s(:send,
                  s(:const, nil, :TkBindTag), :id2obj,
                  s(:lvar, :tag)))), nil),
          s(:lvar, :ret))),
      s(:def, :sort_cget_tkstring,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:str, "sort"),
          s(:lvar, :option))),
      s(:def, :sort_cget,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget,
          s(:str, "sort"),
          s(:lvar, :option))),
      s(:def, :sort_cget_strict,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_strict,
          s(:str, "sort"),
          s(:lvar, :option))),
      s(:def, :sort_configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:send, nil, :itemconfigure,
          s(:str, "sort"),
          s(:lvar, :slot),
          s(:lvar, :value))),
      s(:def, :sort_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :itemconfiginfo,
          s(:str, "sort"),
          s(:lvar, :slot))),
      s(:def, :current_sort_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_itemconfiginfo,
          s(:str, "sort"),
          s(:lvar, :slot))),
      s(:def, :text_cget_tkstring,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:str, "text"),
          s(:lvar, :option))),
      s(:def, :text_cget,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget,
          s(:str, "text"),
          s(:lvar, :option))),
      s(:def, :text_cget_strict,
        s(:args,
          s(:arg, :option)),
        s(:send, nil, :itemcget_strict,
          s(:str, "text"),
          s(:lvar, :option))),
      s(:def, :text_configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:send, nil, :itemconfigure,
          s(:str, "text"),
          s(:lvar, :slot),
          s(:lvar, :value))),
      s(:def, :text_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :itemconfiginfo,
          s(:str, "text"),
          s(:lvar, :slot))),
      s(:def, :current_text_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_itemconfiginfo,
          s(:str, "text"),
          s(:lvar, :slot))),
      s(:send, nil, :private,
        s(:sym, :itemcget_tkstring),
        s(:sym, :itemcget),
        s(:sym, :itemcget_strict)),
      s(:send, nil, :private,
        s(:sym, :itemconfigure),
        s(:sym, :itemconfiginfo),
        s(:sym, :current_itemconfiginfo)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Treeview), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "::blt::treeview"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "TreeView"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:send, nil, :include,
        s(:const, nil, :Scrollable)),
      s(:send, nil, :include,
        s(:const, nil, :ValidateConfigure)),
      s(:send, nil, :include,
        s(:const, nil, :ItemValidateConfigure)),
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :BLT), :Treeview), :ConfigMethod)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:array,
          s(:str, "autocreate"),
          s(:str, "allowduplicates"),
          s(:str, "exportselection"),
          s(:str, "flat"),
          s(:str, "hideroot"),
          s(:str, "newtags"),
          s(:str, "showtitles"),
          s(:str, "sortselection"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :+,
          s(:array,
            s(:str, "focusforeground"),
            s(:str, "linecolor"),
            s(:str, "separator"),
            s(:str, "trim")))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:class,
        s(:const, nil, :OpenCloseCommand),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "W"),
                    s(:str, "w"),
                    s(:sym, :widget)),
                  s(:array,
                    s(:str, "p"),
                    s(:str, "s"),
                    s(:sym, :name)),
                  s(:array,
                    s(:str, "P"),
                    s(:str, "s"),
                    s(:sym, :fullpath)),
                  s(:array,
                    s(:str, "#"),
                    s(:str, "x"),
                    s(:sym, :node_id)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "x"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :num_or_str))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "w"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :window))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)),
              s(:defs,
                s(:self), :ret_val,
                s(:args,
                  s(:arg, :val)),
                s(:lvar, :val)))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array,
              s(:str, "opencommand"),
              s(:str, "closecomand"))))),
      s(:def, :__validation_class_list,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:const, nil, :OpenCloseCommand))),
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :ValidateConfigure), :__def_validcmd,
        s(:send, nil, :binding),
        s(:const, nil, :OpenCloseCommand)),
      s(:def, :__item_validation_class_list,
        s(:args,
          s(:arg, :id)),
        s(:case,
          s(:lvar, :id),
          s(:when,
            s(:str, "entry"),
            s(:send,
              s(:super,
                s(:lvar, :id)), :<<,
              s(:const, nil, :OpenCloseCommand))),
          s(:super,
            s(:lvar, :id)))),
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :ItemValidateConfigure), :__def_validcmd,
        s(:send, nil, :binding),
        s(:const, nil, :OpenCloseCommand)),
      s(:def, :__destroy_hook__,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Treeview), :Node), :TreeNodeID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Treeview), :Node), :TreeNodeID_TBL), :delete,
              s(:ivar, :@path))),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Treeview), :Tag), :TreeTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Treeview), :Tag), :TreeTagID_TBL), :delete,
              s(:ivar, :@path))))),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:or,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Treeview), :Node)),
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Treeview), :Tag))),
          s(:send,
            s(:lvar, :tag), :id),
          s(:lvar, :tag))),
      s(:send, nil, :private,
        s(:sym, :tagid)),
      s(:def, :tagid2obj,
        s(:args,
          s(:arg, :tagid)),
        s(:if,
          s(:send,
            s(:lvar, :tagid), :kind_of?,
            s(:const, nil, :Integer)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Treeview), :Node), :id2obj,
            s(:self),
            s(:send,
              s(:lvar, :tagid), :to_s)),
          s(:if,
            s(:send,
              s(:lvar, :tagid), :kind_of?,
              s(:const, nil, :String)),
            s(:if,
              s(:send,
                s(:lvar, :tagid), :=~,
                s(:regexp,
                  s(:str, "^\\d+$"),
                  s(:regopt))),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Treeview), :Node), :id2obj,
                s(:self),
                s(:lvar, :tagid)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Treeview), :Tag), :id2obj,
                s(:self),
                s(:lvar, :tagid))),
            s(:lvar, :tagid)))),
      s(:def, :bbox,
        s(:args,
          s(:restarg, :tags)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "bbox"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))))),
      s(:def, :screen_bbox,
        s(:args,
          s(:restarg, :tags)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "bbox"),
            s(:str, "-screen"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))))),
      s(:def, :tag_bind,
        s(:args,
          s(:arg, :tag),
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind,
            s(:array,
              s(:ivar, :@path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :tag_bind_append,
        s(:args,
          s(:arg, :tag),
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append,
            s(:array,
              s(:ivar, :@path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :tag_bind_remove,
        s(:args,
          s(:arg, :tag),
          s(:arg, :seq)),
        s(:begin,
          s(:send, nil, :_bind_remove,
            s(:array,
              s(:ivar, :@path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :seq)),
          s(:self))),
      s(:def, :tag_bindinfo,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :seq,
            s(:nil))),
        s(:send, nil, :_bindinfo,
          s(:array,
            s(:ivar, :@path),
            s(:str, "bind"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:lvar, :seq))),
      s(:def, :button_activate,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "button"),
            s(:str, "activate"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :button_bind,
        s(:args,
          s(:arg, :tag),
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind,
            s(:array,
              s(:ivar, :@path),
              s(:str, "button"),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :button_bind_append,
        s(:args,
          s(:arg, :tag),
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append,
            s(:array,
              s(:ivar, :@path),
              s(:str, "button"),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :button_bind_remove,
        s(:args,
          s(:arg, :tag),
          s(:arg, :seq)),
        s(:begin,
          s(:send, nil, :_bind_remove,
            s(:array,
              s(:ivar, :@path),
              s(:str, "button"),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :seq)),
          s(:self))),
      s(:def, :button_bindinfo,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :seq,
            s(:nil))),
        s(:send, nil, :_bindinfo,
          s(:array,
            s(:ivar, :@path),
            s(:str, "button"),
            s(:str, "bind"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:lvar, :seq))),
      s(:def, :close,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "close"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :close_recurse,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "close"),
            s(:str, "-recurse"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :column_activate,
        s(:args,
          s(:optarg, :column,
            s(:const, nil, :None))),
        s(:if,
          s(:send,
            s(:lvar, :column), :==,
            s(:const, nil, :None)),
          s(:send, nil, :tk_send,
            s(:str, "column"),
            s(:str, "activate")),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "column"),
              s(:str, "activate"),
              s(:lvar, :column)),
            s(:self)))),
      s(:def, :column_delete,
        s(:args,
          s(:restarg, :fields)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "column"),
            s(:str, "delete"),
            s(:splat,
              s(:lvar, :fields))),
          s(:self))),
      s(:def, :column_insert,
        s(:args,
          s(:arg, :pos),
          s(:arg, :field),
          s(:restarg, :opts)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "column"),
            s(:str, "insert"),
            s(:lvar, :pos),
            s(:lvar, :field),
            s(:splat,
              s(:lvar, :opts))),
          s(:self))),
      s(:def, :column_invoke,
        s(:args,
          s(:arg, :field)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "column"),
            s(:str, "invoke"),
            s(:lvar, :field)),
          s(:self))),
      s(:def, :column_move,
        s(:args,
          s(:arg, :name),
          s(:arg, :dest)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "column"),
            s(:str, "move"),
            s(:lvar, :name),
            s(:lvar, :dest)),
          s(:self))),
      s(:def, :column_names,
        s(:args),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "column"),
            s(:str, "names")))),
      s(:def, :column_nearest,
        s(:args,
          s(:arg, :x),
          s(:optarg, :y,
            s(:const, nil, :None))),
        s(:send, nil, :tk_send,
          s(:str, "column"),
          s(:str, "nearest"),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :curselection,
        s(:args),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "curselection"))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tagid2obj,
            s(:lvar, :id)))),
      s(:def, :delete,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "delete"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :entry_activate,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "entry"),
            s(:str, "activate"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :entry_children,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "entry"),
                s(:str, "children"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag)),
                s(:lvar, :first),
                s(:lvar, :last))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tagid2obj,
            s(:lvar, :id)))),
      s(:def, :entry_delete,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :tk_send,
          s(:str, "entry"),
          s(:str, "delete"),
          s(:send, nil, :tagid,
            s(:lvar, :tag)),
          s(:lvar, :first),
          s(:lvar, :last))),
      s(:def, :entry_before?,
        s(:args,
          s(:arg, :tag1),
          s(:arg, :tag2)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "entry"),
            s(:str, "isbefore"),
            s(:send, nil, :tagid,
              s(:lvar, :tag1)),
            s(:send, nil, :tagid,
              s(:lvar, :tag2))))),
      s(:def, :entry_hidden?,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "entry"),
            s(:str, "ishidden"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :entry_open?,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "entry"),
            s(:str, "isopen"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :entry_size,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "entry"),
            s(:str, "size"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :entry_size_recurse,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "entry"),
            s(:str, "size"),
            s(:str, "-recurse"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :_search_flags,
        s(:args,
          s(:arg, :keys)),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "exact")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "exact"),
              s(:const, nil, :None)), nil),
          s(:if,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "glob")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "glob"),
              s(:const, nil, :None)), nil),
          s(:if,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "regexp")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "regexp"),
              s(:const, nil, :None)), nil),
          s(:if,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "nonmatching")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "nonmatching"),
              s(:const, nil, :None)), nil))),
      s(:send, nil, :private,
        s(:sym, :_search_flags)),
      s(:class,
        s(:const, nil, :FindExecFlagValue),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "W"),
                    s(:str, "w"),
                    s(:sym, :widget)),
                  s(:array,
                    s(:str, "p"),
                    s(:str, "s"),
                    s(:sym, :name)),
                  s(:array,
                    s(:str, "P"),
                    s(:str, "s"),
                    s(:sym, :fullpath)),
                  s(:array,
                    s(:str, "#"),
                    s(:str, "x"),
                    s(:sym, :node_id)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "x"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :num_or_str))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "w"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :window))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)),
              s(:defs,
                s(:self), :ret_val,
                s(:args,
                  s(:arg, :val)),
                s(:lvar, :val)))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array)))),
      s(:def, :_find_exec_flag_value,
        s(:args,
          s(:arg, :val)),
        s(:if,
          s(:send,
            s(:lvar, :val), :kind_of?,
            s(:const, nil, :Array)),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :cmd),
                s(:splat,
                  s(:lvasgn, :args))),
              s(:lvar, :val)),
            s(:send,
              s(:const, nil, :FindExecFlagValue), :new,
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args)))),
          s(:if,
            s(:send,
              s(:const, nil, :TkComm), :_callback_entry?,
              s(:lvar, :val)),
            s(:send,
              s(:const, nil, :FindExecFlagValue), :new,
              s(:lvar, :val)),
            s(:lvar, :val)))),
      s(:def, :find,
        s(:args,
          s(:arg, :first),
          s(:arg, :last),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_search_flags,
              s(:lvar, :keys))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :key?,
              s(:str, "exec")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "exec"),
              s(:send, nil, :_find_exec_flag_value,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "exec")))), nil),
          s(:lvasgn, :args,
            s(:send,
              s(:send,
                s(:send,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys)), :<<,
                  s(:str, "--")), :<<,
                s(:send, nil, :tagid,
                  s(:lvar, :first))), :<<,
              s(:send, nil, :tagid,
                s(:lvar, :last)))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "find"),
                  s(:splat,
                    s(:lvar, :args)))), :collect),
            s(:args,
              s(:arg, :id)),
            s(:send, nil, :tagid2obj,
              s(:lvar, :id))))),
      s(:def, :tag_focus,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "focus"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :get,
        s(:args,
          s(:restarg, :tags)),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "get"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))))),
      s(:def, :get_full,
        s(:args,
          s(:restarg, :tags)),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "get"),
            s(:str, "-full"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))))),
      s(:def, :hide,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :tags), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:lvasgn, :keys,
              s(:send,
                s(:lvar, :tags), :pop)),
            s(:lvasgn, :keys,
              s(:hash))),
          s(:lvasgn, :keys,
            s(:send, nil, :_search_flags,
              s(:lvar, :keys))),
          s(:lvasgn, :args,
            s(:send,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys)), :<<,
              s(:str, "--"))),
          s(:send,
            s(:lvar, :args), :concat,
            s(:block,
              s(:send,
                s(:lvar, :tags), :collect),
              s(:args,
                s(:arg, :t)),
              s(:send, nil, :tagid,
                s(:lvar, :t)))),
          s(:send, nil, :tk_send,
            s(:str, "hide"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :str)),
        s(:send, nil, :tagid2obj,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:lvar, :str)))),
      s(:def, :index_at,
        s(:args,
          s(:arg, :tag),
          s(:arg, :str)),
        s(:send, nil, :tagid2obj,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:str, "-at"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:lvar, :str)))),
      s(:def, :index_at_path,
        s(:args,
          s(:arg, :tag),
          s(:arg, :str)),
        s(:send, nil, :tagid2obj,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:str, "-at"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:str, "-path"),
            s(:lvar, :str)))),
      s(:def, :insert,
        s(:args,
          s(:arg, :pos),
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:send,
          s(:const,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :BLT), :Treeview), :Node), :new,
          s(:lvar, :pos),
          s(:lvar, :parent),
          s(:lvar, :keys))),
      s(:def, :insert_at,
        s(:args,
          s(:arg, :tag),
          s(:arg, :pos),
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :parent)),
              s(:lvasgn, :parent,
                s(:nil))), nil),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:send,
            s(:lvar, :keys), :[]=,
            s(:str, "at"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Treeview), :Node), :new,
            s(:lvar, :pos),
            s(:lvar, :parent),
            s(:lvar, :keys)))),
      s(:def, :move_before,
        s(:args,
          s(:arg, :tag),
          s(:arg, :dest)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:str, "before"),
            s(:send, nil, :tagid,
              s(:lvar, :dest))),
          s(:self))),
      s(:def, :move_after,
        s(:args,
          s(:arg, :tag),
          s(:arg, :dest)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:str, "after"),
            s(:send, nil, :tagid,
              s(:lvar, :dest))),
          s(:self))),
      s(:def, :move_into,
        s(:args,
          s(:arg, :tag),
          s(:arg, :dest)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:str, "into"),
            s(:send, nil, :tagid,
              s(:lvar, :dest))),
          s(:self))),
      s(:def, :nearest,
        s(:args,
          s(:arg, :x),
          s(:arg, :y),
          s(:optarg, :var,
            s(:const, nil, :None))),
        s(:send, nil, :tagid2obj,
          s(:send, nil, :tk_send,
            s(:str, "nearest"),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:lvar, :var)))),
      s(:def, :open,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "open"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :open_recurse,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "open"),
            s(:str, "-recurse"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :range,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "range"),
                s(:send, nil, :tagid,
                  s(:lvar, :first)),
                s(:send, nil, :tagid,
                  s(:lvar, :last)))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tagid2obj,
            s(:lvar, :id)))),
      s(:def, :range_open,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "range"),
                s(:str, "-open"),
                s(:send, nil, :tagid,
                  s(:lvar, :first)),
                s(:send, nil, :tagid,
                  s(:lvar, :last)))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tagid2obj,
            s(:lvar, :id)))),
      s(:def, :scan_mark,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scan"),
            s(:str, "mark"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :scan_dragto,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scan"),
            s(:str, "dragto"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :see,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "see"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :see_anchor,
        s(:args,
          s(:arg, :anchor),
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "see"),
            s(:str, "-anchor"),
            s(:lvar, :anchor),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :selection_anchor,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "anchor"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :selection_cancel,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "cancel")),
          s(:self))),
      s(:def, :selection_clear,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "clear"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :selection_clear_all,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "clearall")),
          s(:self))),
      s(:def, :selection_mark,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "mark"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :selection_include?,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "include"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :selection_present?,
        s(:args),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "present")))),
      s(:def, :selection_set,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "set"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :selection_toggle,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "toggle"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :show,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :tags), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:lvasgn, :keys,
              s(:send,
                s(:lvar, :tags), :pop)),
            s(:lvasgn, :keys,
              s(:hash))),
          s(:lvasgn, :keys,
            s(:send, nil, :_search_flags,
              s(:lvar, :keys))),
          s(:lvasgn, :args,
            s(:send,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys)), :<<,
              s(:str, "--"))),
          s(:send,
            s(:lvar, :args), :concat,
            s(:block,
              s(:send,
                s(:lvar, :tags), :collect),
              s(:args,
                s(:arg, :t)),
              s(:send, nil, :tagid,
                s(:lvar, :t)))),
          s(:send, nil, :tk_send,
            s(:str, "show"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :sort_auto,
        s(:args,
          s(:arg, :mode)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sort"),
            s(:str, "auto"),
            s(:lvar, :mode)),
          s(:self))),
      s(:def, :sort_auto=,
        s(:args,
          s(:arg, :mode)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sort"),
            s(:str, "auto"),
            s(:lvar, :mode)),
          s(:lvar, :mode))),
      s(:def, :sort_auto?,
        s(:args),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "sort"),
            s(:str, "auto")))),
      s(:def, :sort_once,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sort"),
            s(:str, "once"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :sort_once_recurse,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sort"),
            s(:str, "once"),
            s(:str, "-recurse"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :tags), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))))),
          s(:self))),
      s(:def, :tag_add,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :ids)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "add"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:lvar, :ids))),
          s(:self))),
      s(:def, :tag_delete,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :ids)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "delete"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:lvar, :ids))),
          s(:self))),
      s(:def, :tag_forget,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "forget"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))),
      s(:def, :tag_names,
        s(:args,
          s(:optarg, :id,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :id,
            s(:if,
              s(:begin,
                s(:lvar, :id)),
              s(:send, nil, :tagid,
                s(:lvar, :id)),
              s(:const, nil, :None))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "tag"),
                  s(:str, "nodes"),
                  s(:lvar, :id))), :collect),
            s(:args,
              s(:arg, :tag)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Treeview), :Tag), :id2obj,
              s(:self),
              s(:lvar, :tag))))),
      s(:def, :tag_nodes,
        s(:args,
          s(:arg, :tag)),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "tag"),
                s(:str, "nodes"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag)))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Treeview), :Node), :id2obj,
            s(:self),
            s(:lvar, :id)))),
      s(:def, :text_apply,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "apply")),
          s(:self))),
      s(:def, :text_cancel,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "cancel")),
          s(:self))),
      s(:def, :text_delete,
        s(:args,
          s(:arg, :first),
          s(:arg, :last)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "delete"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :text_get,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "get"),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :text_get_root,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send,
          s(:str, "text"),
          s(:str, "get"),
          s(:str, "-root"),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :text_icursor,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "icursor"),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :text_index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :num_or_str,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "index"),
            s(:lvar, :idx)))),
      s(:def, :text_insert,
        s(:args,
          s(:arg, :idx),
          s(:arg, :str)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "insert"),
            s(:lvar, :idx),
            s(:lvar, :str)),
          s(:self))),
      s(:def, :text_selection_adjust,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "selection"),
            s(:str, "adjust"),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :text_selection_clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "selection"),
            s(:str, "clear")),
          s(:self))),
      s(:def, :text_selection_from,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "selection"),
            s(:str, "from"),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :text_selection_present,
        s(:args),
        s(:send, nil, :num_or_str,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "selection"),
            s(:str, "present")))),
      s(:def, :text_selection_range,
        s(:args,
          s(:arg, :start),
          s(:arg, :last)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "selection"),
            s(:str, "range"),
            s(:lvar, :start),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :text_selection_to,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "text"),
            s(:str, "selection"),
            s(:str, "to"),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :toggle,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "toggle"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:self))))),
  s(:module,
    s(:const,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :BLT), :Treeview), :TagOrID_Methods),
    s(:begin,
      s(:def, :bbox,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :bbox,
          s(:self))),
      s(:def, :screen_bbox,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :screen_bbox,
          s(:self))),
      s(:def, :bind,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :tag_bind,
            s(:self),
            s(:lvar, :seq),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :bind_append,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :tag_bind_append,
            s(:self),
            s(:lvar, :seq),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :bind_remove,
        s(:args,
          s(:arg, :seq)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :tag_bind_remove,
            s(:self),
            s(:lvar, :seq)),
          s(:self))),
      s(:def, :bindinfo,
        s(:args,
          s(:optarg, :seq,
            s(:nil))),
        s(:send,
          s(:ivar, :@tree), :tag_bindinfo,
          s(:self),
          s(:lvar, :seq))),
      s(:def, :button_activate,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :button_activate,
            s(:self)),
          s(:self))),
      s(:def, :button_bind,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :button_bind,
            s(:self),
            s(:lvar, :seq),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :button_bind_append,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :button_bind_append,
            s(:self),
            s(:lvar, :seq),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :button_bind_remove,
        s(:args,
          s(:arg, :seq)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :button_bind_remove,
            s(:self),
            s(:lvar, :seq)),
          s(:self))),
      s(:def, :button_bindinfo,
        s(:args,
          s(:optarg, :seq,
            s(:nil))),
        s(:send,
          s(:ivar, :@tree), :button_bindinfo,
          s(:self),
          s(:lvar, :seq))),
      s(:def, :close,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :close,
            s(:self)),
          s(:self))),
      s(:def, :close_recurse,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :close_recurse,
            s(:self)),
          s(:self))),
      s(:def, :delete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :delete,
            s(:self)),
          s(:self))),
      s(:def, :entry_activate,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :entry_activate,
            s(:self)),
          s(:self))),
      s(:def, :entry_children,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@tree), :entry_children,
          s(:self),
          s(:lvar, :first),
          s(:lvar, :last))),
      s(:def, :entry_delete,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@tree), :entry_delete,
          s(:self),
          s(:lvar, :first),
          s(:lvar, :last))),
      s(:def, :entry_before?,
        s(:args,
          s(:arg, :tag)),
        s(:send,
          s(:ivar, :@tree), :entry_before?,
          s(:self),
          s(:lvar, :tag))),
      s(:def, :entry_hidden?,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :entry_before?,
          s(:self))),
      s(:def, :entry_open?,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :entry_open?,
          s(:self))),
      s(:def, :entry_size,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :entry_size,
          s(:self))),
      s(:def, :entry_size_recurse,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :entry_size_recurse,
          s(:self))),
      s(:def, :focus,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :tag_focus,
            s(:self)),
          s(:self))),
      s(:def, :get,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :get,
          s(:self))),
      s(:def, :get_full,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :get_full,
          s(:self))),
      s(:def, :hide,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :hide,
            s(:self)),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :str)),
        s(:send,
          s(:ivar, :@tree), :index_at,
          s(:self),
          s(:lvar, :str))),
      s(:def, :index_path,
        s(:args,
          s(:arg, :str)),
        s(:send,
          s(:ivar, :@tree), :index_at_path,
          s(:self),
          s(:lvar, :str))),
      s(:def, :insert,
        s(:args,
          s(:arg, :pos),
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:send,
          s(:ivar, :@tree), :insert_at,
          s(:self),
          s(:lvar, :pos),
          s(:lvar, :parent),
          s(:lvar, :keys))),
      s(:def, :move_before,
        s(:args,
          s(:arg, :dest)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :move_before,
            s(:self),
            s(:lvar, :dest)),
          s(:self))),
      s(:def, :move_after,
        s(:args,
          s(:arg, :dest)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :move_after,
            s(:self),
            s(:lvar, :dest)),
          s(:self))),
      s(:def, :move_into,
        s(:args,
          s(:arg, :dest)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :move_into,
            s(:self),
            s(:lvar, :dest)),
          s(:self))),
      s(:def, :open,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :open,
            s(:self)),
          s(:self))),
      s(:def, :open_recurse,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :open_recurse,
            s(:self)),
          s(:self))),
      s(:def, :range_to,
        s(:args,
          s(:arg, :tag)),
        s(:send,
          s(:ivar, :@tree), :range,
          s(:self),
          s(:lvar, :tag))),
      s(:def, :range_open_to,
        s(:args,
          s(:arg, :tag)),
        s(:send,
          s(:ivar, :@tree), :range,
          s(:self),
          s(:lvar, :tag))),
      s(:def, :see,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :see,
            s(:self)),
          s(:self))),
      s(:def, :see_anchor,
        s(:args,
          s(:arg, :anchor)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :see_anchor,
            s(:lvar, :anchor),
            s(:self)),
          s(:self))),
      s(:def, :selection_anchor,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :selection_anchor,
            s(:self)),
          s(:self))),
      s(:def, :selection_clear,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :selection_clear,
            s(:self)),
          s(:self))),
      s(:def, :selection_mark,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :selection_mark,
            s(:self)),
          s(:self))),
      s(:def, :selection_include?,
        s(:args),
        s(:send,
          s(:ivar, :@tree), :selection_include?,
          s(:self))),
      s(:def, :selection_set,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :selection_set,
            s(:self)),
          s(:self))),
      s(:def, :selection_toggle,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :selection_toggle,
            s(:self)),
          s(:self))),
      s(:def, :show,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :show,
            s(:self)),
          s(:self))),
      s(:def, :sort_once,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :sort_once,
            s(:self)),
          s(:self))),
      s(:def, :sort_once_recurse,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :sort_once_recurse,
            s(:self)),
          s(:self))),
      s(:def, :toggle,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree), :toggle,
            s(:self)),
          s(:self))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :BLT), :Treeview), :Node),
    s(:const, nil, :TkObject),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :BLT), :Treeview), :TagOrID_Methods)),
      s(:casgn, nil, :TreeNodeID_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :TreeNode_ID,
              s(:array,
                s(:send,
                  s(:str, "blt_treeview_node"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :TreeNodeID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :TreeNodeID_TBL), :clear))),
      s(:defs,
        s(:self), :id2obj,
        s(:args,
          s(:arg, :tree),
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :tpath,
            s(:send,
              s(:lvar, :tree), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TreeNodeID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :TreeNodeID_TBL), :[],
                s(:lvar, :tpath)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeNodeID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :id)),
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeNodeID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :id)),
                s(:kwbegin,
                  s(:rescue,
                    s(:if,
                      s(:send,
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:ivar, :@tpath),
                            s(:str, "get"),
                            s(:lvar, :id))), :empty?),
                      s(:lvar, :id),
                      s(:begin,
                        s(:lvasgn, :id,
                          s(:send, nil, :Integer,
                            s(:lvar, :id))),
                        s(:block,
                          s(:send,
                            s(:begin,
                              s(:lvasgn, :obj,
                                s(:send,
                                  s(:self), :allocate))), :instance_eval),
                          s(:args),
                          s(:begin,
                            s(:ivasgn, :@parent,
                              s(:ivasgn, :@tree,
                                s(:lvar, :tree))),
                            s(:ivasgn, :@tpath,
                              s(:send,
                                s(:ivar, :@parent), :path)),
                            s(:ivasgn, :@path,
                              s(:ivasgn, :@id,
                                s(:lvar, :id))),
                            s(:or_asgn,
                              s(:send,
                                s(:const, nil, :TreeNodeID_TBL), :[],
                                s(:ivar, :@tpath)),
                              s(:hash)),
                            s(:send,
                              s(:send,
                                s(:const, nil, :TreeNodeID_TBL), :[],
                                s(:ivar, :@tpath)), :[]=,
                              s(:ivar, :@id),
                              s(:self)))),
                        s(:lvar, :obj))),
                    s(:resbody, nil, nil,
                      s(:lvar, :id)), nil))),
              s(:lvar, :id))))),
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :tree),
          s(:arg, :pos),
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :parent)),
              s(:lvasgn, :parent,
                s(:nil))), nil),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:lvasgn, :tpath,
            s(:send,
              s(:lvar, :tree), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TreeNodeID_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:send,
                  s(:const, nil, :TreeNodeID_TBL), :[],
                  s(:lvar, :tpath)),
                s(:hash)),
              s(:if,
                s(:and,
                  s(:begin,
                    s(:lvasgn, :id,
                      s(:send,
                        s(:lvar, :keys), :[],
                        s(:str, "node")))),
                  s(:begin,
                    s(:lvasgn, :obj,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeNodeID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id))))),
                s(:begin,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "node")),
                  s(:if,
                    s(:lvar, :parent),
                    s(:send, nil, :tk_call,
                      s(:send,
                        s(:lvar, :tree), :path),
                      s(:str, "move"),
                      s(:lvar, :id),
                      s(:lvar, :pos),
                      s(:lvar, :parent)), nil),
                  s(:return,
                    s(:lvar, :obj))), nil),
              s(:block,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :obj,
                      s(:send,
                        s(:self), :allocate))), :instance_eval),
                s(:args),
                s(:begin,
                  s(:send, nil, :initialize,
                    s(:lvar, :tree),
                    s(:lvar, :pos),
                    s(:lvar, :parent),
                    s(:lvar, :keys)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeNodeID_TBL), :[],
                      s(:lvar, :tpath)), :[]=,
                    s(:ivar, :@id),
                    s(:self)))),
              s(:lvar, :obj))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :tree),
          s(:arg, :pos),
          s(:arg, :parent),
          s(:arg, :keys)),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:ivasgn, :@tree,
              s(:lvar, :tree))),
          s(:ivasgn, :@tpath,
            s(:send,
              s(:ivar, :@parent), :path)),
          s(:if,
            s(:begin,
              s(:lvasgn, :id,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "node")))),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:lvar, :id))),
              s(:if,
                s(:lvar, :parent),
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "move"),
                  s(:ivar, :@id),
                  s(:lvar, :pos),
                  s(:send, nil, :tagid,
                    s(:lvar, :parent))), nil),
              s(:if,
                s(:and,
                  s(:lvar, :keys),
                  s(:send,
                    s(:send,
                      s(:lvar, :keys), :empty?), :!)),
                s(:send, nil, :configure,
                  s(:lvar, :keys)), nil)),
            s(:begin,
              s(:lvasgn, :name,
                s(:nil)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeNode_ID), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:lvasgn, :name,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TreeNode_ID), :join,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeNode_ID), :[],
                      s(:int, 1)), :succ!))),
              s(:lvasgn, :at,
                s(:send,
                  s(:send,
                    s(:lvar, :keys), :delete), :[],
                  s(:str, "at"))),
              s(:if,
                s(:lvar, :parent),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Tk), :BLT), :Treeview), :Node)),
                    s(:send,
                      s(:lvar, :parent), :kind_of?,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Tk), :BLT), :Treeview), :Tag))),
                  s(:begin,
                    s(:lvasgn, :path,
                      s(:array,
                        s(:send,
                          s(:send, nil, :get_full,
                            s(:send,
                              s(:lvar, :parent), :id)), :[],
                          s(:int, 0)),
                        s(:lvar, :name))),
                    s(:lvasgn, :at,
                      s(:nil))),
                  s(:lvasgn, :path,
                    s(:array,
                      s(:send,
                        s(:lvar, :parent), :to_s),
                      s(:lvar, :name)))),
                s(:lvasgn, :path,
                  s(:lvar, :name))),
              s(:if,
                s(:lvar, :at),
                s(:ivasgn, :@id,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@tpath),
                    s(:str, "insert"),
                    s(:str, "-at"),
                    s(:send, nil, :tagid,
                      s(:lvar, :at)),
                    s(:lvar, :pos),
                    s(:lvar, :path),
                    s(:lvar, :keys))),
                s(:ivasgn, :@id,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@tpath),
                    s(:str, "insert"),
                    s(:lvar, :pos),
                    s(:lvar, :path),
                    s(:lvar, :keys)))),
              s(:ivasgn, :@path,
                s(:ivar, :@id)))))),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :BLT), :Treeview), :Tag),
    s(:const, nil, :TkObject),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :BLT), :Treeview), :TagOrID_Methods)),
      s(:casgn, nil, :TreeTagID_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :TreeTag_ID,
              s(:array,
                s(:send,
                  s(:str, "blt_treeview_tag"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :TreeTagID_TBL), :clear))),
      s(:defs,
        s(:self), :id2obj,
        s(:args,
          s(:arg, :tree),
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :tpath,
            s(:send,
              s(:lvar, :tree), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :TreeTagID_TBL), :[],
                s(:lvar, :tpath)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeTagID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :name)),
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeTagID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :name)),
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :obj,
                          s(:send,
                            s(:self), :allocate))), :instance_eval),
                    s(:args),
                    s(:begin,
                      s(:ivasgn, :@parent,
                        s(:ivasgn, :@tree,
                          s(:lvar, :tree))),
                      s(:ivasgn, :@tpath,
                        s(:send,
                          s(:ivar, :@parent), :path)),
                      s(:ivasgn, :@path,
                        s(:ivasgn, :@id,
                          s(:lvar, :name))),
                      s(:if,
                        s(:send,
                          s(:const, nil, :TreeTagID_TBL), :[],
                          s(:ivar, :@tpath)), nil,
                        s(:send,
                          s(:const, nil, :TreeTagID_TBL), :[]=,
                          s(:ivar, :@tpath),
                          s(:hash))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeTagID_TBL), :[],
                          s(:ivar, :@tpath)), :[]=,
                        s(:ivar, :@id),
                        s(:self)))),
                  s(:lvar, :obj))),
              s(:send, nil, :id))))),
      s(:defs,
        s(:self), :new_by_name,
        s(:args,
          s(:arg, :tree),
          s(:arg, :name),
          s(:restarg, :ids)),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:begin,
            s(:if,
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :[],
                      s(:send,
                        s(:lvar, :tree), :path)), :[],
                    s(:lvar, :name)))), nil,
              s(:block,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :obj,
                      s(:send,
                        s(:self), :allocate))), :instance_eval),
                s(:args),
                s(:begin,
                  s(:send, nil, :initialize,
                    s(:lvar, :tree),
                    s(:lvar, :name),
                    s(:lvar, :ids)),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :[],
                      s(:ivar, :@tpath)), nil,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :[]=,
                      s(:ivar, :@tpath),
                      s(:hash))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :[],
                      s(:ivar, :@tpath)), :[]=,
                    s(:ivar, :@id),
                    s(:self))))),
            s(:lvar, :obj)))),
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :tree),
          s(:restarg, :ids)),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:begin,
                  s(:lvasgn, :obj,
                    s(:send,
                      s(:self), :allocate))), :instance_eval),
              s(:args),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :tree), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:send, nil, :initialize,
                    s(:send,
                      s(:lvar, :tree), :[],
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :tree), :[],
                      s(:int, 1)),
                    s(:lvar, :ids)),
                  s(:send, nil, :initialize,
                    s(:lvar, :tree),
                    s(:nil),
                    s(:lvar, :ids))),
                s(:if,
                  s(:send,
                    s(:const, nil, :TreeTagID_TBL), :[],
                    s(:ivar, :@tpath)), nil,
                  s(:send,
                    s(:const, nil, :TreeTagID_TBL), :[]=,
                    s(:ivar, :@tpath),
                    s(:hash))),
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeTagID_TBL), :[],
                    s(:ivar, :@tpath)), :[]=,
                  s(:ivar, :@id),
                  s(:self)))),
            s(:lvar, :obj)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :tree),
          s(:arg, :name),
          s(:arg, :ids)),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:ivasgn, :@tree,
              s(:lvar, :tree))),
          s(:ivasgn, :@tpath,
            s(:send,
              s(:ivar, :@parent), :path)),
          s(:if,
            s(:lvar, :name),
            s(:ivasgn, :@path,
              s(:ivasgn, :@id,
                s(:lvar, :name))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TreeTag_ID), :mutex), :synchronize),
              s(:args),
              s(:begin,
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TreeTag_ID), :join,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeTag_ID), :[],
                    s(:int, 1)), :succ!)))),
          s(:if,
            s(:send,
              s(:lvar, :ids), :empty?), nil,
            s(:send, nil, :tk_call,
              s(:ivar, :@tpath),
              s(:str, "tag"),
              s(:str, "add"),
              s(:ivar, :@id),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id))))))))),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:or,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Treeview), :Node)),
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Treeview), :Tag))),
          s(:send,
            s(:lvar, :tag), :id),
          s(:lvar, :tag))),
      s(:send, nil, :private,
        s(:sym, :tagid)),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)),
      s(:def, :add,
        s(:args,
          s(:restarg, :ids)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@tpath),
            s(:str, "tag"),
            s(:str, "add"),
            s(:ivar, :@id),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send, nil, :ids),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id)))))),
          s(:self))),
      s(:def, :remove,
        s(:args,
          s(:restarg, :ids)),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@tpath),
            s(:str, "tag"),
            s(:str, "delete"),
            s(:ivar, :@id),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send, nil, :ids),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id)))))),
          s(:self))),
      s(:def, :forget,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@tpath),
            s(:str, "tag"),
            s(:str, "forget"),
            s(:ivar, :@id)),
          s(:self))),
      s(:def, :nodes,
        s(:args),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_call,
                s(:ivar, :@tpath),
                s(:str, "tag"),
                s(:str, "nodes"),
                s(:ivar, :@id))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Treeview), :Node), :id2obj,
            s(:ivar, :@tree),
            s(:lvar, :id)))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Hiertable), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "::blt::hiertable"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Hiertable"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)))))
