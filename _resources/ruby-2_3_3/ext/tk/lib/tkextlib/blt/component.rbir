s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:module,
      s(:const, nil, :PlotComponent),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :TkItemConfigMethod)),
        s(:module,
          s(:const, nil, :OptKeys),
          s(:begin,
            s(:def, :__item_font_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "font"),
                s(:str, "tickfont"),
                s(:str, "titlefont"))),
            s(:send, nil, :private,
              s(:sym, :__item_font_optkeys)),
            s(:def, :__item_numstrval_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "xoffset"),
                s(:str, "yoffset"))),
            s(:send, nil, :private,
              s(:sym, :__item_numstrval_optkeys)),
            s(:def, :__item_boolval_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "hide"),
                s(:str, "under"),
                s(:str, "descending"),
                s(:str, "logscale"),
                s(:str, "loose"),
                s(:str, "showticks"),
                s(:str, "titlealternate"),
                s(:str, "scalesymbols"),
                s(:str, "minor"),
                s(:str, "raised"),
                s(:str, "center"),
                s(:str, "decoration"),
                s(:str, "landscape"),
                s(:str, "maxpect"))),
            s(:send, nil, :private,
              s(:sym, :__item_boolval_optkeys)),
            s(:def, :__item_strval_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "text"),
                s(:str, "label"),
                s(:str, "limits"),
                s(:str, "title"),
                s(:str, "show"),
                s(:str, "file"),
                s(:str, "maskdata"),
                s(:str, "maskfile"),
                s(:str, "color"),
                s(:str, "titlecolor"),
                s(:str, "fill"),
                s(:str, "outline"),
                s(:str, "offdash"))),
            s(:send, nil, :private,
              s(:sym, :__item_strval_optkeys)),
            s(:def, :__item_listval_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "bindtags"))),
            s(:send, nil, :private,
              s(:sym, :__item_listval_optkeys)),
            s(:def, :__item_numlistval_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "dashes"),
                s(:str, "majorticks"),
                s(:str, "minorticks"))),
            s(:send, nil, :private,
              s(:sym, :__item_numlistval_optkeys)),
            s(:def, :__item_tkvariable_optkeys,
              s(:args,
                s(:arg, :id)),
              s(:array,
                s(:str, "variable"),
                s(:str, "textvariable"),
                s(:str, "colormap"),
                s(:str, "fontmap"))),
            s(:send, nil, :private,
              s(:sym, :__item_tkvariable_optkeys)))),
        s(:send, nil, :include,
          s(:const, nil, :OptKeys)),
        s(:def, :__item_cget_cmd,
          s(:args,
            s(:arg, :id)),
          s(:if,
            s(:send,
              s(:lvar, :id), :kind_of?,
              s(:const, nil, :Array)),
            s(:array,
              s(:send,
                s(:self), :path),
              s(:send,
                s(:lvar, :id), :[],
                s(:int, 0)),
              s(:str, "cget"),
              s(:send,
                s(:lvar, :id), :[],
                s(:int, 1))),
            s(:array,
              s(:send,
                s(:self), :path),
              s(:lvar, :id),
              s(:str, "cget")))),
        s(:send, nil, :private,
          s(:sym, :__item_cget_cmd)),
        s(:def, :__item_config_cmd,
          s(:args,
            s(:arg, :id)),
          s(:if,
            s(:send,
              s(:lvar, :id), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :type),
                  s(:splat,
                    s(:lvasgn, :names))),
                s(:lvar, :id)),
              s(:send,
                s(:array,
                  s(:send,
                    s(:self), :path),
                  s(:lvar, :type),
                  s(:str, "configure")), :concat,
                s(:lvar, :names))),
            s(:array,
              s(:send,
                s(:self), :path),
              s(:lvar, :id),
              s(:str, "configure")))),
        s(:send, nil, :private,
          s(:sym, :__item_config_cmd)),
        s(:def, :__item_pathname,
          s(:args,
            s(:arg, :id)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :id), :kind_of?,
                s(:const, nil, :Array)),
              s(:lvasgn, :id,
                s(:send, nil, :tagid,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 1)))), nil),
            s(:send,
              s(:array,
                s(:send,
                  s(:self), :path),
                s(:lvar, :id)), :join,
              s(:str, ";")))),
        s(:send, nil, :private,
          s(:sym, :__item_pathname)),
        s(:def, :axis_cget_tkstring,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:lvasgn, :ret,
            s(:send, nil, :itemcget_tkstring,
              s(:array,
                s(:str, "axis"),
                s(:send, nil, :tagid,
                  s(:lvar, :id))),
              s(:lvar, :option)))),
        s(:def, :axis_cget,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:lvasgn, :ret,
            s(:send, nil, :itemcget,
              s(:array,
                s(:str, "axis"),
                s(:send, nil, :tagid,
                  s(:lvar, :id))),
              s(:lvar, :option)))),
        s(:def, :axis_cget_strict,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:lvasgn, :ret,
            s(:send, nil, :itemcget_strict,
              s(:array,
                s(:str, "axis"),
                s(:send, nil, :tagid,
                  s(:lvar, :id))),
              s(:lvar, :option)))),
        s(:def, :axis_configure,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:const, nil, :None)),
                s(:lvasgn, :slot,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :slot))),
                s(:if,
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "command"))),
                  s(:send,
                    s(:lvar, :slot), :[]=,
                    s(:str, "command"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick))))), nil)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:lvar, :slot)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :slot), :==,
                      s(:sym, :command)),
                    s(:send,
                      s(:lvar, :slot), :==,
                      s(:str, "command"))),
                  s(:begin,
                    s(:lvasgn, :cmd,
                      s(:lvar, :value)),
                    s(:lvasgn, :value,
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args,
                          s(:arg, :w),
                          s(:arg, :tick)),
                        s(:send,
                          s(:lvar, :cmd), :call,
                          s(:send,
                            s(:const, nil, :TkComm), :window,
                            s(:lvar, :w)),
                          s(:send,
                            s(:const, nil, :TkComm), :num_or_str,
                            s(:lvar, :tick)))))), nil))),
            s(:lvasgn, :id_list,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :flatten), :collect!),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))), :unshift,
                s(:str, "axis"))),
            s(:send, nil, :itemconfigure,
              s(:lvar, :id_list),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :axis_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:array,
              s(:str, "axis"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :current_axis_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:array,
              s(:str, "axis"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :crosshairs_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "crosshairs"),
            s(:lvar, :option))),
        s(:def, :crosshairs_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "crosshairs"),
            s(:lvar, :option))),
        s(:def, :crosshairs_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "crosshairs"),
            s(:lvar, :option))),
        s(:def, :crosshairs_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:send, nil, :itemconfigure,
            s(:str, "crosshairs"),
            s(:lvar, :slot),
            s(:lvar, :value))),
        s(:def, :crosshairs_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "crosshairs"),
            s(:lvar, :slot))),
        s(:def, :current_crosshairs_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "crosshairs"),
            s(:lvar, :slot))),
        s(:def, :element_cget_tkstring,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:array,
              s(:str, "element"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :element_cget,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:array,
              s(:str, "element"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :element_cget_strict,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:array,
              s(:str, "element"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :element_configure,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:lvasgn, :value,
                s(:const, nil, :None)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:lvar, :slot)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :id_list,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :flatten), :collect!),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))), :unshift,
                s(:str, "element"))),
            s(:send, nil, :itemconfigure,
              s(:lvar, :id_list),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :element_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:array,
              s(:str, "element"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :current_element_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:array,
              s(:str, "element"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :bar_cget_tkstring,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:array,
              s(:str, "bar"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :bar_cget,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:array,
              s(:str, "bar"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :bar_cget_strict,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:array,
              s(:str, "bar"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :bar_configure,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:lvasgn, :value,
                s(:const, nil, :None)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:lvar, :slot)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :id_list,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :flatten), :collect!),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))), :unshift,
                s(:str, "bar"))),
            s(:send, nil, :itemconfigure,
              s(:lvar, :id_list),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :bar_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:array,
              s(:str, "bar"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :current_bar_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:array,
              s(:str, "bar"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :line_cget_tkstring,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:array,
              s(:str, "line"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :line_cget,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:array,
              s(:str, "line"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :line_cget_strict,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:array,
              s(:str, "line"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :line_configure,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:lvasgn, :value,
                s(:const, nil, :None)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:lvar, :slot)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :id_list,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :flatten), :collect!),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))), :unshift,
                s(:str, "line"))),
            s(:send, nil, :itemconfigure,
              s(:lvar, :id_list),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :line_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:array,
              s(:str, "line"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :current_line_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:array,
              s(:str, "line"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :gridline_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "grid"),
            s(:lvar, :option))),
        s(:def, :gridline_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "grid"),
            s(:lvar, :option))),
        s(:def, :gridline_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "grid"),
            s(:lvar, :option))),
        s(:def, :gridline_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:send, nil, :itemconfigure,
            s(:str, "grid"),
            s(:lvar, :slot),
            s(:lvar, :value))),
        s(:def, :gridline_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "grid"),
            s(:lvar, :slot))),
        s(:def, :current_gridline_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "grid"),
            s(:lvar, :slot))),
        s(:def, :legend_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "legend"),
            s(:lvar, :option))),
        s(:def, :legend_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "legend"),
            s(:lvar, :option))),
        s(:def, :legend_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "legend"),
            s(:lvar, :option))),
        s(:def, :legend_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:send, nil, :itemconfigure,
            s(:str, "legend"),
            s(:lvar, :slot),
            s(:lvar, :value))),
        s(:def, :legend_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "legend"),
            s(:lvar, :slot))),
        s(:def, :current_legend_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "legend"),
            s(:lvar, :slot))),
        s(:def, :pen_cget_tkstring,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:array,
              s(:str, "pen"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :pen_cget,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:array,
              s(:str, "pen"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :pen_cget_strict,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:array,
              s(:str, "pen"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :pen_configure,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:lvasgn, :value,
                s(:const, nil, :None)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:lvar, :slot)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :id_list,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :flatten), :collect!),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))), :unshift,
                s(:str, "pen"))),
            s(:send, nil, :itemconfigure,
              s(:lvar, :id_list),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :pen_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:array,
              s(:str, "pen"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :current_pen_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:array,
              s(:str, "pen"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :postscript_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "postscript"),
            s(:lvar, :option))),
        s(:def, :postscript_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "postscript"),
            s(:lvar, :option))),
        s(:def, :postscript_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "postscript"),
            s(:lvar, :option))),
        s(:def, :postscript_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:send, nil, :itemconfigure,
            s(:str, "postscript"),
            s(:lvar, :slot),
            s(:lvar, :value))),
        s(:def, :postscript_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "postscript"),
            s(:lvar, :slot))),
        s(:def, :current_postscript_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "postscript"),
            s(:lvar, :slot))),
        s(:def, :marker_cget_tkstring,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:array,
              s(:str, "marker"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :marker_cget,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:array,
              s(:str, "marker"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :marker_cget_strict,
          s(:args,
            s(:arg, :id),
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:array,
              s(:str, "marker"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :option))),
        s(:def, :marker_configure,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:lvasgn, :value,
                s(:const, nil, :None)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:lvar, :slot)),
                s(:lvasgn, :slot,
                  s(:send,
                    s(:lvar, :args), :pop)))),
            s(:lvasgn, :id_list,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :flatten), :collect!),
                  s(:args,
                    s(:arg, :id)),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))), :unshift,
                s(:str, "marker"))),
            s(:send, nil, :itemconfigure,
              s(:lvar, :id_list),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :marker_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:array,
              s(:str, "marker"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:def, :current_marker_configinfo,
          s(:args,
            s(:arg, :id),
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:array,
              s(:str, "marker"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:lvar, :slot))),
        s(:alias,
          s(:sym, :__itemcget_tkstring),
          s(:sym, :itemcget_tkstring)),
        s(:alias,
          s(:sym, :__itemcget),
          s(:sym, :itemcget)),
        s(:alias,
          s(:sym, :__itemcget_strict),
          s(:sym, :itemcget_strict)),
        s(:alias,
          s(:sym, :__itemconfiginfo),
          s(:sym, :itemconfiginfo)),
        s(:alias,
          s(:sym, :__current_itemconfiginfo),
          s(:sym, :current_itemconfiginfo)),
        s(:send, nil, :private,
          s(:sym, :__itemcget_tkstring),
          s(:sym, :__itemcget),
          s(:sym, :__itemconfiginfo),
          s(:sym, :__current_itemconfiginfo)),
        s(:def, :itemcget_tkstring,
          s(:args,
            s(:arg, :tagOrId),
            s(:arg, :option)),
          s(:send, nil, :__itemcget_tkstring,
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId)),
            s(:lvar, :option))),
        s(:def, :itemcget_strict,
          s(:args,
            s(:arg, :tagOrId),
            s(:arg, :option)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :__itemcget,
                s(:send, nil, :tagid,
                  s(:lvar, :tagOrId)),
                s(:lvar, :option))),
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :option), :==,
                  s(:str, "bindtags")),
                s(:send,
                  s(:lvar, :option), :==,
                  s(:sym, :bindtags))),
              s(:block,
                s(:send,
                  s(:lvar, :ret), :collect),
                s(:args,
                  s(:arg, :tag)),
                s(:send,
                  s(:const, nil, :TkBindTag), :id2obj,
                  s(:lvar, :tag))),
              s(:lvar, :ret)))),
        s(:def, :itemcget,
          s(:args,
            s(:arg, :tagOrId),
            s(:arg, :option)),
          s(:if,
            s(:send,
              s(:const, nil, :TkItemConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__),
            s(:kwbegin,
              s(:rescue,
                s(:send, nil, :itemcget_strict,
                  s(:lvar, :tagOrId),
                  s(:lvar, :option)),
                s(:resbody, nil,
                  s(:lvasgn, :e),
                  s(:kwbegin,
                    s(:rescue,
                      s(:if,
                        s(:send,
                          s(:send, nil, :current_itemconfiginfo,
                            s(:lvar, :tagOrId)), :has_key?,
                          s(:send,
                            s(:lvar, :option), :to_s)),
                        s(:send, nil, :fail,
                          s(:lvar, :e)),
                        s(:nil)),
                      s(:resbody, nil, nil,
                        s(:send, nil, :fail,
                          s(:lvar, :e))), nil))), nil)),
            s(:send, nil, :itemcget_strict,
              s(:lvar, :tagOrId),
              s(:lvar, :option)))),
        s(:def, :itemconfiginfo,
          s(:args,
            s(:arg, :tagOrId),
            s(:optarg, :slot,
              s(:nil))),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :__itemconfiginfo,
                s(:send, nil, :tagid,
                  s(:lvar, :tagOrId)),
                s(:lvar, :slot))),
            s(:if,
              s(:const,
                s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
              s(:if,
                s(:lvar, :slot),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :slot), :==,
                      s(:str, "bindtags")),
                    s(:send,
                      s(:lvar, :slot), :==,
                      s(:sym, :bindtags))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :ret), :[]=,
                      s(:int, -2),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:lvar, :ret), :[],
                            s(:int, -2)), :collect),
                        s(:args,
                          s(:arg, :tag)),
                        s(:send,
                          s(:const, nil, :TkBindTag), :id2obj,
                          s(:lvar, :tag)))),
                    s(:send,
                      s(:lvar, :ret), :[]=,
                      s(:int, -1),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:lvar, :ret), :[],
                            s(:int, -1)), :collect),
                        s(:args,
                          s(:arg, :tag)),
                        s(:send,
                          s(:const, nil, :TkBindTag), :id2obj,
                          s(:lvar, :tag))))), nil),
                s(:if,
                  s(:begin,
                    s(:lvasgn, :inf,
                      s(:send,
                        s(:lvar, :ret), :assoc,
                        s(:str, "bindtags")))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :inf), :[]=,
                      s(:int, -2),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:lvar, :inf), :[],
                            s(:int, -2)), :collect),
                        s(:args,
                          s(:arg, :tag)),
                        s(:send,
                          s(:const, nil, :TkBindTag), :id2obj,
                          s(:lvar, :tag)))),
                    s(:send,
                      s(:lvar, :inf), :[]=,
                      s(:int, -1),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:lvar, :inf), :[],
                            s(:int, -1)), :collect),
                        s(:args,
                          s(:arg, :tag)),
                        s(:send,
                          s(:const, nil, :TkBindTag), :id2obj,
                          s(:lvar, :tag))))), nil)),
              s(:if,
                s(:begin,
                  s(:lvasgn, :inf,
                    s(:send,
                      s(:lvar, :ret), :[],
                      s(:str, "bindtags")))),
                s(:begin,
                  s(:send,
                    s(:lvar, :inf), :[]=,
                    s(:int, -2),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :inf), :[],
                          s(:int, -2)), :collect),
                      s(:args,
                        s(:arg, :tag)),
                      s(:send,
                        s(:const, nil, :TkBindTag), :id2obj,
                        s(:lvar, :tag)))),
                  s(:send,
                    s(:lvar, :inf), :[]=,
                    s(:int, -1),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:lvar, :inf), :[],
                          s(:int, -1)), :collect),
                      s(:args,
                        s(:arg, :tag)),
                      s(:send,
                        s(:const, nil, :TkBindTag), :id2obj,
                        s(:lvar, :tag)))),
                  s(:send,
                    s(:lvar, :ret), :[]=,
                    s(:str, "bindtags"),
                    s(:lvar, :inf))), nil)),
            s(:lvar, :ret))),
        s(:def, :current_itemconfiginfo,
          s(:args,
            s(:arg, :tagOrId),
            s(:optarg, :slot,
              s(:nil))),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :__current_itemconfiginfo,
                s(:send, nil, :tagid,
                  s(:lvar, :tagOrId)),
                s(:lvar, :slot))),
            s(:if,
              s(:begin,
                s(:lvasgn, :val,
                  s(:send,
                    s(:lvar, :ret), :[],
                    s(:str, "bindtags")))),
              s(:send,
                s(:lvar, :ret), :[]=,
                s(:str, "bindtags"),
                s(:block,
                  s(:send,
                    s(:lvar, :val), :collect),
                  s(:args,
                    s(:arg, :tag)),
                  s(:send,
                    s(:const, nil, :TkBindTag), :id2obj,
                    s(:lvar, :tag)))), nil),
            s(:lvar, :ret))),
        s(:send, nil, :private,
          s(:sym, :itemcget_tkstring),
          s(:sym, :itemcget),
          s(:sym, :itemcget_strict)),
        s(:send, nil, :private,
          s(:sym, :itemconfigure),
          s(:sym, :itemconfiginfo),
          s(:sym, :current_itemconfiginfo)),
        s(:class,
          s(:const, nil, :Axis),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :OBJ_ID,
                    s(:array,
                      s(:send,
                        s(:str, "blt_chart_axis"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:casgn, nil, :AxisID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :AxisID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :AxisID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :chart),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :cpath,
                  s(:send,
                    s(:lvar, :chart), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :AxisID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:const, nil, :AxisID_TBL), :[],
                        s(:lvar, :cpath)), nil,
                      s(:return,
                        s(:lvar, :id))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :AxisID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :AxisID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:lvar, :id)))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :axis,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :axis), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :axis)),
                    s(:lvasgn, :axis,
                      s(:nil))), nil),
                s(:if,
                  s(:lvar, :keys),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:send, nil, :_symbolkey2str,
                        s(:lvar, :keys))),
                    s(:lvasgn, :not_create,
                      s(:send,
                        s(:lvar, :keys), :delete,
                        s(:str, "without_creating")))),
                  s(:lvasgn, :not_create,
                    s(:false))),
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :AxisID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :chart_path,
                      s(:send,
                        s(:lvar, :chart), :path)),
                    s(:or_asgn,
                      s(:send,
                        s(:const, nil, :AxisID_TBL), :[],
                        s(:lvar, :chart_path)),
                      s(:hash)),
                    s(:if,
                      s(:and,
                        s(:lvar, :axis),
                        s(:send,
                          s(:send,
                            s(:const, nil, :AxisID_TBL), :[],
                            s(:lvar, :chart_path)), :[],
                          s(:lvar, :axis))),
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:send,
                            s(:const, nil, :AxisID_TBL), :[],
                            s(:lvar, :chart_path)), :[],
                          s(:lvar, :axis))),
                      s(:block,
                        s(:send,
                          s(:begin,
                            s(:lvasgn, :obj,
                              s(:send,
                                s(:self), :allocate))), :instance_eval),
                        s(:args),
                        s(:begin,
                          s(:if,
                            s(:lvar, :axis),
                            s(:ivasgn, :@axis,
                              s(:ivasgn, :@id,
                                s(:send,
                                  s(:lvar, :axis), :to_s))),
                            s(:block,
                              s(:send,
                                s(:send,
                                  s(:const, nil, :OBJ_ID), :mutex), :synchronize),
                              s(:args),
                              s(:begin,
                                s(:ivasgn, :@axis,
                                  s(:ivasgn, :@id,
                                    s(:send,
                                      s(:send,
                                        s(:const, nil, :OBJ_ID), :join,
                                        s(:send,
                                          s(:const,
                                            s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :OBJ_ID), :[],
                                    s(:int, 1)), :succ!)))),
                          s(:ivasgn, :@path,
                            s(:ivar, :@id)),
                          s(:ivasgn, :@parent,
                            s(:ivasgn, :@chart,
                              s(:lvar, :chart))),
                          s(:ivasgn, :@cpath,
                            s(:send,
                              s(:ivar, :@chart), :path)),
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Axis), :AxisID_TBL), :[],
                              s(:ivar, :@cpath)), :[]=,
                            s(:ivar, :@axis),
                            s(:self)),
                          s(:if,
                            s(:lvar, :not_create), nil,
                            s(:begin,
                              s(:send, nil, :tk_call,
                                s(:ivar, :@chart),
                                s(:str, "axis"),
                                s(:str, "create"),
                                s(:ivar, :@axis),
                                s(:lvar, :keys)),
                              s(:return,
                                s(:lvar, :obj))))))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :obj), :configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :axis,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :axis), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :axis)),
                    s(:lvasgn, :axis,
                      s(:nil))), nil),
                s(:if,
                  s(:lvar, :axis),
                  s(:ivasgn, :@axis,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:lvar, :axis), :to_s))),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:const, nil, :OBJ_ID), :mutex), :synchronize),
                    s(:args),
                    s(:begin,
                      s(:ivasgn, :@axis,
                        s(:ivasgn, :@id,
                          s(:send,
                            s(:send,
                              s(:const, nil, :OBJ_ID), :join,
                              s(:send,
                                s(:const,
                                  s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :OBJ_ID), :[],
                          s(:int, 1)), :succ!)))),
                s(:ivasgn, :@path,
                  s(:ivar, :@id)),
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "without_creating")), nil,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@chart),
                    s(:str, "axis"),
                    s(:str, "create"),
                    s(:ivar, :@axis),
                    s(:lvar, :keys))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :axis_cget_tkstring,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :axis_cget,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :axis_cget_strict,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :axis_configure,
                  s(:ivar, :@id),
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :axis_configinfo,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_axis_configinfo,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :command,
              s(:args,
                s(:optarg, :cmd,
                  s(:nil)),
                s(:blockarg, :b)),
              s(:if,
                s(:lvar, :cmd),
                s(:send, nil, :configure,
                  s(:str, "command"),
                  s(:lvar, :cmd)),
                s(:if,
                  s(:lvar, :b),
                  s(:send, nil, :configure,
                    s(:str, "command"),
                    s(:send,
                      s(:const, nil, :Proc), :new,
                      s(:block_pass,
                        s(:lvar, :b)))),
                  s(:send, nil, :cget,
                    s(:str, "command"))))),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :axis_delete,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :invtransform,
              s(:args,
                s(:arg, :val)),
              s(:send,
                s(:ivar, :@chart), :axis_invtransform,
                s(:ivar, :@id),
                s(:lvar, :val))),
            s(:def, :limits,
              s(:args),
              s(:send,
                s(:ivar, :@chart), :axis_limits,
                s(:ivar, :@id))),
            s(:def, :name,
              s(:args),
              s(:ivar, :@axis)),
            s(:def, :transform,
              s(:args,
                s(:arg, :val)),
              s(:send,
                s(:ivar, :@chart), :axis_transform,
                s(:ivar, :@id),
                s(:lvar, :val))),
            s(:def, :view,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :axis_view,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :use,
              s(:args,
                s(:optarg, :name,
                  s(:const, nil, :None))),
              s(:send,
                s(:ivar, :@chart), :axis_use,
                s(:ivar, :@id),
                s(:lvar, :name))),
            s(:def, :use_as,
              s(:args,
                s(:arg, :axis)),
              s(:send,
                s(:ivar, :@chart), :axis_use,
                s(:lvar, :axis),
                s(:ivar, :@id))))),
        s(:class,
          s(:const, nil, :Crosshairs),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :CrosshairsID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :CrosshairsID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :CrosshairsID_TBL), :clear))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :CrosshairsID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:const, nil, :CrosshairsID_TBL), :[],
                          s(:send,
                            s(:lvar, :chart), :path)))), nil,
                    s(:block,
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:self), :allocate))), :instance_eval),
                      s(:args),
                      s(:begin,
                        s(:ivasgn, :@parent,
                          s(:ivasgn, :@chart,
                            s(:lvar, :chart))),
                        s(:ivasgn, :@cpath,
                          s(:send,
                            s(:ivar, :@chart), :path)),
                        s(:ivasgn, :@path,
                          s(:ivasgn, :@id,
                            s(:str, "crosshairs"))),
                        s(:send,
                          s(:const,
                            s(:const, nil, :Crosshairs), :CrosshairsID_TBL), :[]=,
                          s(:ivar, :@cpath),
                          s(:self)))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :chart), :crosshair_configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :empty?), nil,
                  s(:send,
                    s(:ivar, :@chart), :crosshair_configure,
                    s(:lvar, :keys))),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:str, "crosshairs"))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :crosshair_cget_tkstring,
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :crosshair_cget,
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :crosshair_cget_strict,
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :crosshair_configure,
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :crosshair_configinfo,
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_crosshair_configinfo,
                s(:lvar, :key))),
            s(:def, :off,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :crosshair_off),
                s(:self))),
            s(:def, :on,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :crosshair_on),
                s(:self))),
            s(:def, :toggle,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :crosshair_toggle),
                s(:self))))),
        s(:class,
          s(:const, nil, :Element),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :Tk)),
            s(:send, nil, :extend,
              s(:const, nil, :TkItemFontOptkeys)),
            s(:send, nil, :extend,
              s(:const, nil, :TkItemConfigOptkeys)),
            s(:send, nil, :extend,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :OptKeys)),
            s(:casgn, nil, :ElementTypeName,
              s(:str, "element")),
            s(:casgn, nil, :ElementTypeToClass,
              s(:hash,
                s(:pair,
                  s(:const, nil, :ElementTypeName),
                  s(:self)))),
            s(:casgn, nil, :ElementID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :ElementID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :ElementID_TBL), :clear))),
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :OBJ_ID,
                    s(:array,
                      s(:send,
                        s(:str, "blt_chart_element"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:defs,
              s(:const, nil, :Element), :type2class,
              s(:args,
                s(:arg, :type)),
              s(:send,
                s(:const, nil, :ElementTypeToClass), :[],
                s(:lvar, :type))),
            s(:defs,
              s(:const, nil, :Element), :id2obj,
              s(:args,
                s(:arg, :chart),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :cpath,
                  s(:send,
                    s(:lvar, :chart), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :ElementID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:const, nil, :ElementID_TBL), :[],
                        s(:lvar, :cpath)), nil,
                      s(:return,
                        s(:lvar, :id))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :ElementID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :ElementID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:lvar, :id)))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :element,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :element), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :element)),
                    s(:lvasgn, :element,
                      s(:nil))), nil),
                s(:if,
                  s(:lvar, :keys),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:send, nil, :_symbolkey2str,
                        s(:lvar, :keys))),
                    s(:lvasgn, :not_create,
                      s(:send,
                        s(:lvar, :keys), :delete,
                        s(:str, "without_creating")))),
                  s(:lvasgn, :not_create,
                    s(:false))),
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :ElementID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :chart_path,
                      s(:send,
                        s(:lvar, :chart), :path)),
                    s(:or_asgn,
                      s(:send,
                        s(:const, nil, :ElementID_TBL), :[],
                        s(:lvar, :chart_path)),
                      s(:hash)),
                    s(:if,
                      s(:and,
                        s(:lvar, :element),
                        s(:send,
                          s(:send,
                            s(:const, nil, :ElementID_TBL), :[],
                            s(:lvar, :chart_path)), :[],
                          s(:lvar, :element))),
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:send,
                            s(:const, nil, :ElementID_TBL), :[],
                            s(:lvar, :chart_path)), :[],
                          s(:lvar, :element))),
                      s(:block,
                        s(:send,
                          s(:begin,
                            s(:lvasgn, :obj,
                              s(:send,
                                s(:self), :allocate))), :instance_eval),
                        s(:args),
                        s(:begin,
                          s(:if,
                            s(:lvar, :element),
                            s(:ivasgn, :@element,
                              s(:ivasgn, :@id,
                                s(:send,
                                  s(:lvar, :element), :to_s))),
                            s(:block,
                              s(:send,
                                s(:send,
                                  s(:const, nil, :OBJ_ID), :mutex), :synchronize),
                              s(:args),
                              s(:begin,
                                s(:ivasgn, :@element,
                                  s(:ivasgn, :@id,
                                    s(:send,
                                      s(:send,
                                        s(:const, nil, :OBJ_ID), :join,
                                        s(:send,
                                          s(:const,
                                            s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :OBJ_ID), :[],
                                    s(:int, 1)), :succ!)))),
                          s(:ivasgn, :@path,
                            s(:ivar, :@id)),
                          s(:ivasgn, :@parent,
                            s(:ivasgn, :@chart,
                              s(:lvar, :chart))),
                          s(:ivasgn, :@cpath,
                            s(:send,
                              s(:ivar, :@chart), :path)),
                          s(:ivasgn, :@typename,
                            s(:const,
                              s(:send,
                                s(:self), :class), :ElementTypeName)),
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Element), :ElementID_TBL), :[],
                              s(:ivar, :@cpath)), :[]=,
                            s(:ivar, :@element),
                            s(:self)),
                          s(:if,
                            s(:lvar, :not_create), nil,
                            s(:begin,
                              s(:send, nil, :tk_call,
                                s(:ivar, :@chart),
                                s(:ivar, :@typename),
                                s(:str, "create"),
                                s(:ivar, :@element),
                                s(:lvar, :keys)),
                              s(:return,
                                s(:lvar, :obj))))))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :obj), :configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :element,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :element), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :element)),
                    s(:lvasgn, :element,
                      s(:nil))), nil),
                s(:if,
                  s(:lvar, :element),
                  s(:ivasgn, :@element,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:lvar, :element), :to_s))),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:const, nil, :OBJ_ID), :mutex), :synchronize),
                    s(:args),
                    s(:begin,
                      s(:ivasgn, :@element,
                        s(:ivasgn, :@id,
                          s(:send,
                            s(:send,
                              s(:const, nil, :OBJ_ID), :join,
                              s(:send,
                                s(:const,
                                  s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :OBJ_ID), :[],
                          s(:int, 1)), :succ!)))),
                s(:ivasgn, :@path,
                  s(:ivar, :@id)),
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:ivasgn, :@typename,
                  s(:const,
                    s(:send,
                      s(:self), :class), :ElementTypeName)),
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "without_creating")), nil,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@chart),
                    s(:ivar, :@typename),
                    s(:str, "create"),
                    s(:ivar, :@element),
                    s(:lvar, :keys))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :__send__,
                s(:send,
                  s(:ivar, :@typename), :+,
                  s(:str, "_cget_tkstring")),
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :__send__,
                s(:send,
                  s(:ivar, :@typename), :+,
                  s(:str, "_cget")),
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :__send__,
                s(:send,
                  s(:ivar, :@typename), :+,
                  s(:str, "_cget_strict")),
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :__send__,
                  s(:send,
                    s(:ivar, :@typename), :+,
                    s(:str, "_configure")),
                  s(:ivar, :@id),
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :__send__,
                s(:send,
                  s(:ivar, :@typename), :+,
                  s(:str, "_configinfo")),
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :__send__,
                s(:send,
                  s(:send,
                    s(:str, "current_"), :<<,
                    s(:ivar, :@typename)), :<<,
                  s(:str, "_configinfo")),
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :activate,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@chart), :element_activate,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :closest,
              s(:args,
                s(:arg, :x),
                s(:arg, :y),
                s(:arg, :var),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send,
                s(:ivar, :@chart), :__send__,
                s(:send,
                  s(:ivar, :@typename), :+,
                  s(:str, "_closest")),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:lvar, :var),
                s(:ivar, :@id),
                s(:lvar, :keys))),
            s(:def, :deactivate,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :element_deactivate,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :element_delete,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :exist?,
              s(:args),
              s(:send,
                s(:ivar, :@chart), :element_exist?,
                s(:ivar, :@id))),
            s(:def, :name,
              s(:args),
              s(:ivar, :@element)),
            s(:def, :type,
              s(:args),
              s(:send,
                s(:ivar, :@chart), :element_type,
                s(:ivar, :@id))))),
        s(:class,
          s(:const, nil, :Bar),
          s(:const, nil, :Element),
          s(:begin,
            s(:casgn, nil, :ElementTypeName,
              s(:send,
                s(:str, "bar"), :freeze)),
            s(:send,
              s(:const, nil, :ElementTypeToClass), :[]=,
              s(:const, nil, :ElementTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :Line),
          s(:const, nil, :Element),
          s(:begin,
            s(:casgn, nil, :ElementTypeName,
              s(:send,
                s(:str, "line"), :freeze)),
            s(:send,
              s(:const, nil, :ElementTypeToClass), :[]=,
              s(:const, nil, :ElementTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :GridLine),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :GridLineID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :GridLineID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :GridLineID_TBL), :clear))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :GridLineID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:const, nil, :GridLineID_TBL), :[],
                          s(:send,
                            s(:lvar, :chart), :path)))), nil,
                    s(:block,
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:self), :allocate))), :instance_eval),
                      s(:args),
                      s(:begin,
                        s(:ivasgn, :@parent,
                          s(:ivasgn, :@chart,
                            s(:lvar, :chart))),
                        s(:ivasgn, :@cpath,
                          s(:send,
                            s(:ivar, :@chart), :path)),
                        s(:ivasgn, :@path,
                          s(:ivasgn, :@id,
                            s(:str, "grid"))),
                        s(:send,
                          s(:const,
                            s(:const, nil, :GridLine), :GridLineID_TBL), :[]=,
                          s(:ivar, :@cpath),
                          s(:self)))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :chart), :gridline_configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :empty?), nil,
                  s(:send,
                    s(:ivar, :@chart), :gridline_configure,
                    s(:lvar, :keys))),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:str, "grid"))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :gridline_cget_tkstring,
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :gridline_cget,
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :gridline_cget_strict,
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :gridline_configure,
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :gridline_configinfo,
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_gridline_configinfo,
                s(:lvar, :key))),
            s(:def, :off,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :gridline_off),
                s(:self))),
            s(:def, :on,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :gridline_on),
                s(:self))),
            s(:def, :toggle,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :gridline_toggle),
                s(:self))))),
        s(:class,
          s(:const, nil, :Legend),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :LegendID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :LegendID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :LegendID_TBL), :clear))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :LegenedID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:const, nil, :LegenedID_TBL), :[],
                          s(:send,
                            s(:lvar, :chart), :path)))), nil,
                    s(:block,
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:self), :allocate))), :instance_eval),
                      s(:args),
                      s(:begin,
                        s(:ivasgn, :@parent,
                          s(:ivasgn, :@chart,
                            s(:lvar, :chart))),
                        s(:ivasgn, :@cpath,
                          s(:send,
                            s(:ivar, :@chart), :path)),
                        s(:ivasgn, :@path,
                          s(:ivasgn, :@id,
                            s(:str, "crosshairs"))),
                        s(:send,
                          s(:const,
                            s(:const, nil, :Legend), :LegenedID_TBL), :[]=,
                          s(:ivar, :@cpath),
                          s(:self)))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :chart), :legend_configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :empty?), nil,
                  s(:send,
                    s(:ivar, :@chart), :legend_configure,
                    s(:lvar, :keys))),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:str, "legend"))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :legend_cget_tkstring,
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :legend_cget,
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :legend_cget_strict,
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :legend_configure,
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :legend_configinfo,
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_legend_configinfo,
                s(:lvar, :key))),
            s(:def, :activate,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@chart), :legend_activate,
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :deactivate,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@chart), :legend_deactivate,
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :get,
              s(:args,
                s(:arg, :pos),
                s(:optarg, :y,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :legend_get,
                s(:lvar, :pos),
                s(:lvar, :y))))),
        s(:class,
          s(:const, nil, :Pen),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :OBJ_ID,
                    s(:array,
                      s(:send,
                        s(:str, "blt_chart_pen"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:casgn, nil, :PenID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :PenID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :PenID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :chart),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :cpath,
                  s(:send,
                    s(:lvar, :chart), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :PenID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:const, nil, :PenID_TBL), :[],
                        s(:lvar, :cpath)), nil,
                      s(:return,
                        s(:lvar, :id))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :PenID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :PenID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:lvar, :id)))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :pen,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :pen), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :pen)),
                    s(:lvasgn, :pen,
                      s(:nil))), nil),
                s(:if,
                  s(:lvar, :keys),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:send, nil, :_symbolkey2str,
                        s(:lvar, :keys))),
                    s(:lvasgn, :not_create,
                      s(:send,
                        s(:lvar, :keys), :delete,
                        s(:str, "without_creating")))),
                  s(:lvasgn, :not_create,
                    s(:false))),
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :PenID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :chart_path,
                      s(:send,
                        s(:lvar, :chart), :path)),
                    s(:or_asgn,
                      s(:send,
                        s(:const, nil, :PenID_TBL), :[],
                        s(:lvar, :chart_path)),
                      s(:hash)),
                    s(:if,
                      s(:and,
                        s(:lvar, :pen),
                        s(:send,
                          s(:send,
                            s(:const, nil, :PenID_TBL), :[],
                            s(:lvar, :chart_path)), :[],
                          s(:lvar, :pen))),
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:send,
                            s(:const, nil, :PenID_TBL), :[],
                            s(:lvar, :chart_path)), :[],
                          s(:lvar, :pen))),
                      s(:block,
                        s(:send,
                          s(:begin,
                            s(:lvasgn, :obj,
                              s(:send,
                                s(:self), :allocate))), :instance_eval),
                        s(:args),
                        s(:begin,
                          s(:if,
                            s(:lvar, :pen),
                            s(:ivasgn, :@pen,
                              s(:ivasgn, :@id,
                                s(:send,
                                  s(:lvar, :pen), :to_s))),
                            s(:block,
                              s(:send,
                                s(:send,
                                  s(:const, nil, :OBJ_ID), :mutex), :synchronize),
                              s(:args),
                              s(:begin,
                                s(:ivasgn, :@pen,
                                  s(:ivasgn, :@id,
                                    s(:send,
                                      s(:send,
                                        s(:const, nil, :OBJ_ID), :join,
                                        s(:send,
                                          s(:const,
                                            s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :OBJ_ID), :[],
                                    s(:int, 1)), :succ!)))),
                          s(:ivasgn, :@path,
                            s(:ivar, :@id)),
                          s(:ivasgn, :@parent,
                            s(:ivasgn, :@chart,
                              s(:lvar, :chart))),
                          s(:ivasgn, :@cpath,
                            s(:send,
                              s(:ivar, :@chart), :path)),
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Pen), :PenID_TBL), :[],
                              s(:ivar, :@cpath)), :[]=,
                            s(:ivar, :@pen),
                            s(:self)),
                          s(:if,
                            s(:lvar, :not_create), nil,
                            s(:begin,
                              s(:send, nil, :tk_call,
                                s(:ivar, :@chart),
                                s(:str, "pen"),
                                s(:str, "create"),
                                s(:ivar, :@pen),
                                s(:lvar, :keys)),
                              s(:return,
                                s(:lvar, :obj))))))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :obj), :configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :pen,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :pen), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :pen)),
                    s(:lvasgn, :pen,
                      s(:nil))), nil),
                s(:if,
                  s(:lvar, :pen),
                  s(:ivasgn, :@pen,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:lvar, :pen), :to_s))),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:const, nil, :OBJ_ID), :mutex), :synchronize),
                    s(:args),
                    s(:begin,
                      s(:ivasgn, :@pen,
                        s(:ivasgn, :@id,
                          s(:send,
                            s(:send,
                              s(:const, nil, :OBJ_ID), :join,
                              s(:send,
                                s(:const,
                                  s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :OBJ_ID), :[],
                          s(:int, 1)), :succ!)))),
                s(:ivasgn, :@path,
                  s(:ivar, :@id)),
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Pen), :PenID_TBL), :[],
                    s(:ivar, :@cpath)), :[]=,
                  s(:ivar, :@pen),
                  s(:self)),
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "without_creating")), nil,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@chart),
                    s(:str, "pen"),
                    s(:str, "create"),
                    s(:ivar, :@pen),
                    s(:lvar, :keys))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :pen_cget_tkstring,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :pen_cget,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :pen_cget_strict,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :pen_configure,
                  s(:ivar, :@id),
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :pen_configinfo,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_pen_configinfo,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :pen_delete,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :name,
              s(:args),
              s(:ivar, :@pen)))),
        s(:class,
          s(:const, nil, :Postscript),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :PostscriptID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :PostscriptID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :PostscriptID_TBL), :clear))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :PostscriptID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:const, nil, :PostscriptID_TBL), :[],
                          s(:send,
                            s(:lvar, :chart), :path)))), nil,
                    s(:block,
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:self), :allocate))), :instance_eval),
                      s(:args),
                      s(:begin,
                        s(:ivasgn, :@parent,
                          s(:ivasgn, :@chart,
                            s(:lvar, :chart))),
                        s(:ivasgn, :@cpath,
                          s(:send,
                            s(:ivar, :@chart), :path)),
                        s(:ivasgn, :@path,
                          s(:ivasgn, :@id,
                            s(:str, "postscript"))),
                        s(:send,
                          s(:const,
                            s(:const, nil, :Postscript), :PostscriptID_TBL), :[]=,
                          s(:ivar, :@cpath),
                          s(:self)))))),
                s(:if,
                  s(:and,
                    s(:lvar, :obj),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :empty?), :!)),
                  s(:send,
                    s(:lvar, :chart), :postscript_configure,
                    s(:lvar, :keys)), nil),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :chart))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:ivar, :@chart), :path)),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :empty?), nil,
                  s(:send,
                    s(:ivar, :@chart), :postscript_configure,
                    s(:lvar, :keys))),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:str, "postscript"))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :postscript_cget_tkstring,
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :postscript_cget,
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :postscript_cget_strict,
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :postscript_configure,
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :postscript_configinfo,
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_postscript_configinfo,
                s(:lvar, :key))),
            s(:def, :output,
              s(:args,
                s(:optarg, :file,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :file), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :file)),
                    s(:lvasgn, :file,
                      s(:nil))), nil),
                s(:lvasgn, :ret,
                  s(:send,
                    s(:ivar, :@chart), :postscript_output,
                    s(:lvar, :file),
                    s(:lvar, :keys))),
                s(:if,
                  s(:lvar, :file),
                  s(:self),
                  s(:lvar, :ret)))))),
        s(:class,
          s(:const, nil, :Marker),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :Tk)),
            s(:send, nil, :extend,
              s(:const, nil, :TkItemFontOptkeys)),
            s(:send, nil, :extend,
              s(:const, nil, :TkItemConfigOptkeys)),
            s(:send, nil, :extend,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :OptKeys)),
            s(:casgn, nil, :MarkerTypeName,
              s(:nil)),
            s(:casgn, nil, :MarkerTypeToClass,
              s(:hash)),
            s(:casgn, nil, :MarkerID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :MarkerID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :MarkerID_TBL), :clear))),
            s(:defs,
              s(:const, nil, :Marker), :type2class,
              s(:args,
                s(:arg, :type)),
              s(:send,
                s(:const, nil, :MarkerTypeToClass), :[],
                s(:lvar, :type))),
            s(:defs,
              s(:const, nil, :Marker), :id2obj,
              s(:args,
                s(:arg, :chart),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :cpath,
                  s(:send,
                    s(:lvar, :chart), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :MarkerID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :MarkerID_TBL), :[],
                      s(:lvar, :cpath)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :MarkerID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :MarkerID_TBL), :[],
                          s(:lvar, :cpath)), :[],
                        s(:lvar, :id)),
                      s(:lvar, :id)),
                    s(:lvar, :id))))),
            s(:defs,
              s(:self), :_parse_create_args,
              s(:args,
                s(:arg, :keys)),
              s(:begin,
                s(:lvasgn, :fontkeys,
                  s(:hash)),
                s(:lvasgn, :methodkeys,
                  s(:hash)),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:send, nil, :_symbolkey2str,
                        s(:lvar, :keys))),
                    s(:block,
                      s(:send,
                        s(:send, nil, :__item_font_optkeys,
                          s(:nil)), :each),
                      s(:args,
                        s(:arg, :key)),
                      s(:begin,
                        s(:lvasgn, :fkey,
                          s(:send,
                            s(:lvar, :key), :to_s)),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :key?,
                            s(:lvar, :fkey)),
                          s(:send,
                            s(:lvar, :fontkeys), :[]=,
                            s(:lvar, :fkey),
                            s(:send,
                              s(:lvar, :keys), :delete,
                              s(:lvar, :fkey))), nil),
                        s(:lvasgn, :fkey,
                          s(:dstr,
                            s(:str, "kanji"),
                            s(:begin,
                              s(:lvar, :key)))),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :key?,
                            s(:lvar, :fkey)),
                          s(:send,
                            s(:lvar, :fontkeys), :[]=,
                            s(:lvar, :fkey),
                            s(:send,
                              s(:lvar, :keys), :delete,
                              s(:lvar, :fkey))), nil),
                        s(:lvasgn, :fkey,
                          s(:dstr,
                            s(:str, "latin"),
                            s(:begin,
                              s(:lvar, :key)))),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :key?,
                            s(:lvar, :fkey)),
                          s(:send,
                            s(:lvar, :fontkeys), :[]=,
                            s(:lvar, :fkey),
                            s(:send,
                              s(:lvar, :keys), :delete,
                              s(:lvar, :fkey))), nil),
                        s(:lvasgn, :fkey,
                          s(:dstr,
                            s(:str, "ascii"),
                            s(:begin,
                              s(:lvar, :key)))),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :key?,
                            s(:lvar, :fkey)),
                          s(:send,
                            s(:lvar, :fontkeys), :[]=,
                            s(:lvar, :fkey),
                            s(:send,
                              s(:lvar, :keys), :delete,
                              s(:lvar, :fkey))), nil))),
                    s(:block,
                      s(:send,
                        s(:send, nil, :__item_optkey_aliases,
                          s(:nil)), :each),
                      s(:args,
                        s(:arg, :alias_name),
                        s(:arg, :real_name)),
                      s(:begin,
                        s(:lvasgn, :alias_name,
                          s(:send,
                            s(:lvar, :alias_name), :to_s)),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :has_key?,
                            s(:lvar, :alias_name)),
                          s(:send,
                            s(:lvar, :keys), :[]=,
                            s(:send,
                              s(:lvar, :real_name), :to_s),
                            s(:send,
                              s(:lvar, :keys), :delete,
                              s(:lvar, :alias_name))), nil))),
                    s(:block,
                      s(:send,
                        s(:send, nil, :__item_methodcall_optkeys,
                          s(:nil)), :each),
                      s(:args,
                        s(:arg, :key)),
                      s(:begin,
                        s(:lvasgn, :key,
                          s(:send,
                            s(:lvar, :key), :to_s)),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :key?,
                            s(:lvar, :key)),
                          s(:send,
                            s(:lvar, :methodkeys), :[]=,
                            s(:lvar, :key),
                            s(:send,
                              s(:lvar, :keys), :delete,
                              s(:lvar, :key))), nil))),
                    s(:block,
                      s(:send,
                        s(:send, nil, :__item_ruby2val_optkeys,
                          s(:nil)), :each),
                      s(:args,
                        s(:arg, :key),
                        s(:arg, :method)),
                      s(:begin,
                        s(:lvasgn, :key,
                          s(:send,
                            s(:lvar, :key), :to_s)),
                        s(:if,
                          s(:send,
                            s(:lvar, :keys), :has_key?,
                            s(:lvar, :key)),
                          s(:send,
                            s(:lvar, :keys), :[]=,
                            s(:lvar, :key),
                            s(:send,
                              s(:lvar, :method), :call,
                              s(:send,
                                s(:lvar, :keys), :[],
                                s(:lvar, :key)))), nil))),
                    s(:lvasgn, :args,
                      s(:send, nil, :itemconfig_hash_kv,
                        s(:nil),
                        s(:lvar, :keys)))),
                  s(:lvasgn, :args,
                    s(:array))),
                s(:array,
                  s(:lvar, :args),
                  s(:lvar, :fontkeys),
                  s(:lvar, :methodkeys)))),
            s(:send, nil, :private_class_method,
              s(:sym, :_parse_create_args)),
            s(:defs,
              s(:self), :create,
              s(:args,
                s(:arg, :chart),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:const,
                    s(:self), :MarkerTypeName), nil,
                  s(:send, nil, :fail,
                    s(:const, nil, :RuntimeError),
                    s(:dstr,
                      s(:begin,
                        s(:self)),
                      s(:str, " is an abstract class")))),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :args),
                    s(:lvasgn, :fontkeys),
                    s(:lvasgn, :methodkeys)),
                  s(:send, nil, :_parse_create_args,
                    s(:lvar, :keys))),
                s(:lvasgn, :idnum,
                  s(:send, nil, :tk_call_without_enc,
                    s(:send,
                      s(:lvar, :chart), :path),
                    s(:str, "marker"),
                    s(:str, "create"),
                    s(:const,
                      s(:self), :MarkerTypeName),
                    s(:splat,
                      s(:lvar, :args)))),
                s(:if,
                  s(:send,
                    s(:lvar, :fontkeys), :empty?), nil,
                  s(:send,
                    s(:lvar, :chart), :marker_configure,
                    s(:lvar, :idnum),
                    s(:lvar, :fontkeys))),
                s(:if,
                  s(:send,
                    s(:lvar, :methodkeys), :empty?), nil,
                  s(:send,
                    s(:lvar, :chart), :marker_configure,
                    s(:lvar, :idnum),
                    s(:lvar, :methodkeys))),
                s(:send,
                  s(:lvar, :idnum), :to_i))),
            s(:defs,
              s(:self), :create_type,
              s(:args,
                s(:arg, :chart),
                s(:arg, :type),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :args),
                    s(:lvasgn, :fontkeys),
                    s(:lvasgn, :methodkeys)),
                  s(:send, nil, :_parse_create_args,
                    s(:lvar, :keys))),
                s(:lvasgn, :idnum,
                  s(:send, nil, :tk_call_without_enc,
                    s(:send,
                      s(:lvar, :chart), :path),
                    s(:str, "marker"),
                    s(:str, "create"),
                    s(:lvar, :type),
                    s(:splat,
                      s(:lvar, :args)))),
                s(:if,
                  s(:send,
                    s(:lvar, :fontkeys), :empty?), nil,
                  s(:send,
                    s(:lvar, :chart), :marker_configure,
                    s(:lvar, :idnum),
                    s(:lvar, :fontkeys))),
                s(:if,
                  s(:send,
                    s(:lvar, :methodkeys), :empty?), nil,
                  s(:send,
                    s(:lvar, :chart), :marker_configure,
                    s(:lvar, :idnum),
                    s(:lvar, :methodkeys))),
                s(:lvasgn, :id,
                  s(:send,
                    s(:lvar, :idnum), :to_i)),
                s(:lvasgn, :obj,
                  s(:send,
                    s(:self), :allocate)),
                s(:block,
                  s(:send,
                    s(:lvar, :obj), :instance_eval),
                  s(:args),
                  s(:begin,
                    s(:ivasgn, :@parent,
                      s(:ivasgn, :@chart,
                        s(:lvar, :chart))),
                    s(:ivasgn, :@cpath,
                      s(:send,
                        s(:lvar, :chart), :path)),
                    s(:ivasgn, :@id,
                      s(:lvar, :id)),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :MarkerID_TBL), :mutex), :synchronize),
                      s(:args),
                      s(:begin,
                        s(:or_asgn,
                          s(:send,
                            s(:const,
                              s(:const,
                                s(:const,
                                  s(:const,
                                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :MarkerID_TBL), :[],
                            s(:ivar, :@cpath)),
                          s(:hash)),
                        s(:send,
                          s(:send,
                            s(:const,
                              s(:const,
                                s(:const,
                                  s(:const,
                                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :MarkerID_TBL), :[],
                            s(:ivar, :@cpath)), :[]=,
                          s(:ivar, :@id),
                          s(:self)))))),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :parent),
                s(:restarg, :args)),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@chart,
                    s(:lvar, :parent))),
                s(:ivasgn, :@cpath,
                  s(:send,
                    s(:lvar, :parent), :path)),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:send, nil, :create_self,
                      s(:splat,
                        s(:lvar, :args))))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :MarkerID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:or_asgn,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const,
                                s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :MarkerID_TBL), :[],
                        s(:ivar, :@cpath)),
                      s(:hash)),
                    s(:send,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const,
                                s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :MarkerID_TBL), :[],
                        s(:ivar, :@cpath)), :[]=,
                      s(:ivar, :@id),
                      s(:self)))))),
            s(:def, :create_self,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:send,
                  s(:self), :class), :create,
                s(:ivar, :@chart),
                s(:splat,
                  s(:lvar, :args)))),
            s(:send, nil, :private,
              s(:sym, :create_self)),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :to_eval,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :cget_tkstring,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :marker_cget_tkstring,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :marker_cget,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :cget_strict,
              s(:args,
                s(:arg, :option)),
              s(:send,
                s(:ivar, :@chart), :marker_cget_strict,
                s(:ivar, :@id),
                s(:lvar, :option))),
            s(:def, :configure,
              s(:args,
                s(:arg, :key),
                s(:optarg, :value,
                  s(:const, nil, :None))),
              s(:begin,
                s(:send,
                  s(:ivar, :@chart), :marker_configure,
                  s(:ivar, :@id),
                  s(:lvar, :key),
                  s(:lvar, :value)),
                s(:self))),
            s(:def, :configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :marker_configinfo,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :current_configinfo,
              s(:args,
                s(:optarg, :key,
                  s(:nil))),
              s(:send,
                s(:ivar, :@chart), :current_marker_configinfo,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :after,
              s(:args,
                s(:optarg, :target,
                  s(:const, nil, :None))),
              s(:send,
                s(:ivar, :@chart), :marker_after,
                s(:ivar, :@id),
                s(:lvar, :target))),
            s(:def, :before,
              s(:args,
                s(:optarg, :target,
                  s(:const, nil, :None))),
              s(:send,
                s(:ivar, :@chart), :marker_before,
                s(:ivar, :@id),
                s(:lvar, :target))),
            s(:def, :delete,
              s(:args),
              s(:send,
                s(:ivar, :@chart), :marker_delete,
                s(:ivar, :@id))),
            s(:def, :exist?,
              s(:args),
              s(:send,
                s(:ivar, :@chart), :marker_exist,
                s(:ivar, :@id))),
            s(:def, :type,
              s(:args),
              s(:send,
                s(:ivar, :@chart), :marker_type,
                s(:ivar, :@id))))),
        s(:class,
          s(:const, nil, :TextMarker),
          s(:const, nil, :Marker),
          s(:begin,
            s(:casgn, nil, :MarkerTypeName,
              s(:send,
                s(:str, "text"), :freeze)),
            s(:send,
              s(:const, nil, :MarkerTypeToClass), :[]=,
              s(:const, nil, :MarkerTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :LineMarker),
          s(:const, nil, :Marker),
          s(:begin,
            s(:casgn, nil, :MarkerTypeName,
              s(:send,
                s(:str, "line"), :freeze)),
            s(:send,
              s(:const, nil, :MarkerTypeToClass), :[]=,
              s(:const, nil, :MarkerTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :BitmapMarker),
          s(:const, nil, :Marker),
          s(:begin,
            s(:casgn, nil, :MarkerTypeName,
              s(:send,
                s(:str, "bitmap"), :freeze)),
            s(:send,
              s(:const, nil, :MarkerTypeToClass), :[]=,
              s(:const, nil, :MarkerTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :ImageMarker),
          s(:const, nil, :Marker),
          s(:begin,
            s(:casgn, nil, :MarkerTypeName,
              s(:send,
                s(:str, "image"), :freeze)),
            s(:send,
              s(:const, nil, :MarkerTypeToClass), :[]=,
              s(:const, nil, :MarkerTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :PolygonMarker),
          s(:const, nil, :Marker),
          s(:begin,
            s(:casgn, nil, :MarkerTypeName,
              s(:send,
                s(:str, "polygon"), :freeze)),
            s(:send,
              s(:const, nil, :MarkerTypeToClass), :[]=,
              s(:const, nil, :MarkerTypeName),
              s(:self)))),
        s(:class,
          s(:const, nil, :WindowMarker),
          s(:const, nil, :Marker),
          s(:begin,
            s(:casgn, nil, :MarkerTypeName,
              s(:send,
                s(:str, "window"), :freeze)),
            s(:send,
              s(:const, nil, :MarkerTypeToClass), :[]=,
              s(:const, nil, :MarkerTypeName),
              s(:self)))),
        s(:def, :__destroy_hook__,
          s(:args),
          s(:begin,
            s(:send,
              s(:const,
                s(:const, nil, :Axis), :AxisID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :Crosshairs), :CrosshairsID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :Element), :ElementID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :GridLine), :GridLineID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :Legend), :LegendID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :Pen), :PenID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :Postscript), :PostscriptID_TBL), :delete,
              s(:ivar, :@path)),
            s(:send,
              s(:const,
                s(:const, nil, :Marker), :MarkerID_TBL), :delete,
              s(:ivar, :@path)),
            s(:super))),
        s(:def, :tagid,
          s(:args,
            s(:arg, :tag)),
          s(:if,
            s(:or,
              s(:or,
                s(:or,
                  s(:or,
                    s(:or,
                      s(:or,
                        s(:or,
                          s(:send,
                            s(:lvar, :tag), :kind_of?,
                            s(:const, nil, :Axis)),
                          s(:send,
                            s(:lvar, :tag), :kind_of?,
                            s(:const, nil, :Crosshairs))),
                        s(:send,
                          s(:lvar, :tag), :kind_of?,
                          s(:const, nil, :Element))),
                      s(:send,
                        s(:lvar, :tag), :kind_of?,
                        s(:const, nil, :GridLine))),
                    s(:send,
                      s(:lvar, :tag), :kind_of?,
                      s(:const, nil, :Legend))),
                  s(:send,
                    s(:lvar, :tag), :kind_of?,
                    s(:const, nil, :Pen))),
                s(:send,
                  s(:lvar, :tag), :kind_of?,
                  s(:const, nil, :Postscript))),
              s(:send,
                s(:lvar, :tag), :kind_of?,
                s(:const, nil, :Marker))),
            s(:send,
              s(:lvar, :tag), :id),
            s(:lvar, :tag))),
        s(:def, :_component_bind,
          s(:args,
            s(:arg, :target),
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind,
              s(:array,
                s(:send, nil, :path),
                s(:lvar, :target),
                s(:str, "bind"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag))),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :_component_bind_append,
          s(:args,
            s(:arg, :target),
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind_append,
              s(:array,
                s(:send, nil, :path),
                s(:lvar, :target),
                s(:str, "bind"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag))),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :_component_bind_remove,
          s(:args,
            s(:arg, :target),
            s(:arg, :tag),
            s(:arg, :context)),
          s(:begin,
            s(:send, nil, :_bind_remove,
              s(:array,
                s(:send, nil, :path),
                s(:lvar, :target),
                s(:str, "bind"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag))),
              s(:lvar, :context)),
            s(:self))),
        s(:def, :_component_bindinfo,
          s(:args,
            s(:arg, :target),
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:lvar, :target),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :context))),
        s(:send, nil, :private,
          s(:sym, :_component_bind),
          s(:sym, :_component_bind_append)),
        s(:send, nil, :private,
          s(:sym, :_component_bind_remove),
          s(:sym, :_component_bindinfo)),
        s(:def, :axis_bind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind,
            s(:str, "axis"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :axis_bind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind_append,
            s(:str, "axis"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :axis_bind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:send, nil, :_component_bind_remove,
            s(:str, "axis"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :axis_bindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_component_bindinfo,
            s(:str, "axis"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :element_bind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind,
            s(:str, "element"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :element_bind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind_append,
            s(:str, "element"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :element_bind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:send, nil, :_component_bind_remove,
            s(:str, "element"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :element_bindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_component_bindinfo,
            s(:str, "element"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :bar_bind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind,
            s(:str, "bar"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :bar_bind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind_append,
            s(:str, "bar"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :bar_bind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:send, nil, :_component_bind_remove,
            s(:str, "bar"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :bar_bindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_component_bindinfo,
            s(:str, "bar"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :line_bind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind,
            s(:str, "line"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :line_bind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind_append,
            s(:str, "line"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :line_bind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:send, nil, :_component_bind_remove,
            s(:str, "line"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :line_bindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_component_bindinfo,
            s(:str, "line"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :legend_bind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind,
            s(:str, "legend"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :legend_bind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind_append,
            s(:str, "legend"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :legend_bind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:send, nil, :_component_bind_remove,
            s(:str, "legend"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :legend_bindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_component_bindinfo,
            s(:str, "legend"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :marker_bind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind,
            s(:str, "marker"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :marker_bind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:send, nil, :_component_bind_append,
            s(:str, "marker"),
            s(:lvar, :tag),
            s(:lvar, :context),
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :marker_bind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:send, nil, :_component_bind_remove,
            s(:str, "marker"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :marker_bindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_component_bindinfo,
            s(:str, "marker"),
            s(:lvar, :tag),
            s(:lvar, :context))),
        s(:def, :axis_create,
          s(:args,
            s(:optarg, :id,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :new,
            s(:self),
            s(:send, nil, :tagid,
              s(:lvar, :id)),
            s(:lvar, :keys))),
        s(:def, :axis_delete,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "axis"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :axis_invtransform,
          s(:args,
            s(:arg, :id),
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "axis"),
              s(:str, "invtransform"),
              s(:send, nil, :tagid,
                s(:lvar, :id)),
              s(:lvar, :val)))),
        s(:def, :axis_limits,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "axis"),
              s(:str, "limits"),
              s(:send, nil, :tagid,
                s(:lvar, :id))))),
        s(:def, :axis_names,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "axis"),
                  s(:str, "names"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :axis)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:lvar, :axis)))),
        s(:def, :axis_transform,
          s(:args,
            s(:arg, :id),
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "axis"),
              s(:str, "transform"),
              s(:send, nil, :tagid,
                s(:lvar, :id)),
              s(:lvar, :val)))),
        s(:def, :axis_view,
          s(:args,
            s(:arg, :id)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "axis"),
              s(:str, "view"),
              s(:send, nil, :tagid,
                s(:lvar, :id))),
            s(:self))),
        s(:def, :axis_use,
          s(:args,
            s(:arg, :id),
            s(:optarg, :target,
              s(:nil))),
          s(:if,
            s(:lvar, :target),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "axis"),
                s(:str, "use"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)),
                s(:send, nil, :tagid,
                  s(:lvar, :target)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "axis"),
                s(:str, "use"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)))))),
        s(:def, :crosshairs_off,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "crosshairs"),
              s(:str, "off")),
            s(:self))),
        s(:def, :crosshairs_on,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "crosshairs"),
              s(:str, "on")),
            s(:self))),
        s(:def, :crosshairs_toggle,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "crosshairs"),
              s(:str, "toggle")),
            s(:self))),
        s(:def, :element_create,
          s(:args,
            s(:optarg, :id,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :new,
            s(:self),
            s(:send, nil, :tagid,
              s(:lvar, :id)),
            s(:lvar, :keys))),
        s(:def, :element_activate,
          s(:args,
            s(:restarg, :args)),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:block,
              s(:send,
                s(:send, nil, :list,
                  s(:send, nil, :tk_send,
                    s(:str, "element"),
                    s(:str, "activate"))), :collect),
              s(:args,
                s(:arg, :elem)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
                s(:self),
                s(:lvar, :elem))),
            s(:begin,
              s(:lvasgn, :id,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:send, nil, :tk_send,
                s(:str, "element"),
                s(:str, "activate"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)),
                s(:splat,
                  s(:lvar, :args)))))),
        s(:def, :element_closest,
          s(:args,
            s(:arg, :x),
            s(:arg, :y),
            s(:arg, :var),
            s(:restarg, :args)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:send, nil, :bool,
                s(:send, nil, :tk_send,
                  s(:str, "element"),
                  s(:str, "closest"),
                  s(:lvar, :x),
                  s(:lvar, :y),
                  s(:lvar, :var),
                  s(:splat,
                    s(:begin,
                      s(:send,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :keys)), :concat,
                        s(:block,
                          s(:send,
                            s(:lvar, :args), :collect),
                          s(:args,
                            s(:arg, :id)),
                          s(:send, nil, :tagid,
                            s(:lvar, :id))))))))),
            s(:send, nil, :bool,
              s(:send, nil, :tk_send,
                s(:str, "element"),
                s(:str, "closest"),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:lvar, :var),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :args), :collect),
                      s(:args,
                        s(:arg, :id)),
                      s(:send, nil, :tagid,
                        s(:lvar, :id))))))))),
        s(:def, :element_deactivate,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "element"),
              s(:str, "deactivate"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :element_delete,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "element"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :element_exist?,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_send,
              s(:str, "element"),
              s(:str, "exists"),
              s(:send, nil, :tagid,
                s(:lvar, :id))))),
        s(:def, :element_names,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "element"),
                  s(:str, "names"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :elem)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:lvar, :elem)))),
        s(:def, :element_show,
          s(:args,
            s(:restarg, :names)),
          s(:if,
            s(:send,
              s(:lvar, :names), :empty?),
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "element"),
                s(:str, "show"))),
            s(:begin,
              s(:send, nil, :tk_send,
                s(:str, "element"),
                s(:str, "show"),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :names), :collect),
                      s(:args,
                        s(:arg, :n)),
                      s(:send, nil, :tagid,
                        s(:lvar, :n)))))),
              s(:self)))),
        s(:def, :element_type,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tk_send,
            s(:str, "element"),
            s(:str, "type"),
            s(:send, nil, :tagid,
              s(:lvar, :id)))),
        s(:def, :bar_create,
          s(:args,
            s(:optarg, :id,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :PlotComponent), :Bar), :new,
            s(:self),
            s(:send, nil, :tagid,
              s(:lvar, :id)),
            s(:lvar, :keys))),
        s(:alias,
          s(:sym, :bar),
          s(:sym, :bar_create)),
        s(:def, :bar_activate,
          s(:args,
            s(:restarg, :args)),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:block,
              s(:send,
                s(:send, nil, :list,
                  s(:send, nil, :tk_send,
                    s(:str, "bar"),
                    s(:str, "activate"))), :collect),
              s(:args,
                s(:arg, :elem)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
                s(:self),
                s(:lvar, :elem))),
            s(:begin,
              s(:lvasgn, :id,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:send, nil, :tk_send,
                s(:str, "bar"),
                s(:str, "activate"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)),
                s(:splat,
                  s(:lvar, :args)))))),
        s(:def, :bar_closest,
          s(:args,
            s(:arg, :x),
            s(:arg, :y),
            s(:arg, :var),
            s(:restarg, :args)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:send, nil, :bool,
                s(:send, nil, :tk_send,
                  s(:str, "bar"),
                  s(:str, "closest"),
                  s(:lvar, :x),
                  s(:lvar, :y),
                  s(:lvar, :var),
                  s(:splat,
                    s(:begin,
                      s(:send,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :keys)), :concat,
                        s(:block,
                          s(:send,
                            s(:lvar, :args), :collect),
                          s(:args,
                            s(:arg, :id)),
                          s(:send, nil, :tagid,
                            s(:lvar, :id))))))))),
            s(:send, nil, :bool,
              s(:send, nil, :tk_send,
                s(:str, "bar"),
                s(:str, "closest"),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:lvar, :var),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :args), :collect),
                      s(:args,
                        s(:arg, :id)),
                      s(:send, nil, :tagid,
                        s(:lvar, :id))))))))),
        s(:def, :bar_deactivate,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "bar"),
              s(:str, "deactivate"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :bar_delete,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "bar"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :bar_exist?,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_send,
              s(:str, "bar"),
              s(:str, "exists"),
              s(:send, nil, :tagid,
                s(:lvar, :id))))),
        s(:def, :bar_names,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "bar"),
                  s(:str, "names"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :elem)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:lvar, :elem)))),
        s(:def, :bar_show,
          s(:args,
            s(:restarg, :names)),
          s(:if,
            s(:send,
              s(:lvar, :names), :empty?),
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "bar"),
                s(:str, "show"))),
            s(:begin,
              s(:send, nil, :tk_send,
                s(:str, "bar"),
                s(:str, "show"),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :names), :collect),
                      s(:args,
                        s(:arg, :n)),
                      s(:send, nil, :tagid,
                        s(:lvar, :n)))))),
              s(:self)))),
        s(:def, :bar_type,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tk_send,
            s(:str, "bar"),
            s(:str, "type"),
            s(:send, nil, :tagid,
              s(:lvar, :id)))),
        s(:def, :line_create,
          s(:args,
            s(:optarg, :id,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :PlotComponent), :Line), :new,
            s(:self),
            s(:send, nil, :tagid,
              s(:lvar, :id)),
            s(:lvar, :keys))),
        s(:alias,
          s(:sym, :bar),
          s(:sym, :line_create)),
        s(:def, :line_activate,
          s(:args,
            s(:restarg, :args)),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:block,
              s(:send,
                s(:send, nil, :list,
                  s(:send, nil, :tk_send,
                    s(:str, "line"),
                    s(:str, "activate"))), :collect),
              s(:args,
                s(:arg, :elem)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
                s(:self),
                s(:lvar, :elem))),
            s(:begin,
              s(:lvasgn, :id,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:send, nil, :tk_send,
                s(:str, "line"),
                s(:str, "activate"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)),
                s(:splat,
                  s(:lvar, :args)))))),
        s(:def, :line_closest,
          s(:args,
            s(:arg, :x),
            s(:arg, :y),
            s(:arg, :var),
            s(:restarg, :args)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:send, nil, :bool,
                s(:send, nil, :tk_send,
                  s(:str, "line"),
                  s(:str, "closest"),
                  s(:lvar, :x),
                  s(:lvar, :y),
                  s(:lvar, :var),
                  s(:splat,
                    s(:begin,
                      s(:send,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :keys)), :concat,
                        s(:block,
                          s(:send,
                            s(:lvar, :args), :collect),
                          s(:args,
                            s(:arg, :id)),
                          s(:send, nil, :tagid,
                            s(:lvar, :id))))))))),
            s(:send, nil, :bool,
              s(:send, nil, :tk_send,
                s(:str, "line"),
                s(:str, "closest"),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:lvar, :var),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :args), :collect),
                      s(:args,
                        s(:arg, :id)),
                      s(:send, nil, :tagid,
                        s(:lvar, :id))))))))),
        s(:def, :line_deactivate,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "line"),
              s(:str, "deactivate"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :line_delete,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "line"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :line_exist?,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_send,
              s(:str, "line"),
              s(:str, "exists"),
              s(:send, nil, :tagid,
                s(:lvar, :id))))),
        s(:def, :line_names,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "line"),
                  s(:str, "names"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :elem)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:lvar, :elem)))),
        s(:def, :line_show,
          s(:args,
            s(:restarg, :names)),
          s(:if,
            s(:send,
              s(:lvar, :names), :empty?),
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "line"),
                s(:str, "show"))),
            s(:begin,
              s(:send, nil, :tk_send,
                s(:str, "line"),
                s(:str, "show"),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :names), :collect),
                      s(:args,
                        s(:arg, :n)),
                      s(:send, nil, :tagid,
                        s(:lvar, :n)))))),
              s(:self)))),
        s(:def, :line_type,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tk_send,
            s(:str, "line"),
            s(:str, "type"),
            s(:send, nil, :tagid,
              s(:lvar, :id)))),
        s(:def, :gridline_off,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "grid"),
              s(:str, "off")),
            s(:self))),
        s(:def, :gridline_on,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "grid"),
              s(:str, "on")),
            s(:self))),
        s(:def, :gridline_toggle,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "grid"),
              s(:str, "toggle")),
            s(:self))),
        s(:def, :legend_window_create,
          s(:args,
            s(:optarg, :parent,
              s(:nil)),
            s(:optarg, :keys,
              s(:nil))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :parent), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :parent))),
                s(:lvasgn, :parent,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "parent"))),
                s(:lvasgn, :widgetname,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "widgetname"))),
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "without_creating"))),
              s(:if,
                s(:lvar, :keys),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:send, nil, :_symbolkey2str,
                      s(:lvar, :keys))),
                  s(:lvasgn, :widgetname,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "widgetname"))),
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "without_creating"))), nil)),
            s(:lvasgn, :legend,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :parent),
                s(:hash,
                  s(:pair,
                    s(:sym, :without_creating),
                    s(:true)),
                  s(:pair,
                    s(:sym, :widgetname),
                    s(:lvar, :widgetname))))),
            s(:sclass,
              s(:lvar, :legend),
              s(:def, :__destroy_hook__,
                s(:args),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkCore), :INTERP), :tk_windows), :delete,
                  s(:ivar, :@path)))),
            s(:if,
              s(:lvar, :keys),
              s(:send,
                s(:self), :legend_configure,
                s(:send,
                  s(:lvar, :keys), :update,
                  s(:hash,
                    s(:pair,
                      s(:str, "position"),
                      s(:lvar, :legend))))),
              s(:send,
                s(:self), :legend_configure,
                s(:hash,
                  s(:pair,
                    s(:str, "position"),
                    s(:lvar, :legend))))),
            s(:lvar, :legend))),
        s(:def, :legend_activate,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :list,
                s(:send, nil, :tk_send,
                  s(:str, "legend"),
                  s(:str, "activate"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :elem)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:lvar, :elem)))),
        s(:def, :legend_deactivate,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :list,
                s(:send, nil, :tk_send,
                  s(:str, "legend"),
                  s(:str, "deactivate"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :elem)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:lvar, :elem)))),
        s(:def, :legend_get,
          s(:args,
            s(:arg, :pos),
            s(:optarg, :y,
              s(:nil))),
          s(:if,
            s(:lvar, :y),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "legend"),
                s(:str, "get"),
                s(:send, nil, :_at,
                  s(:lvar, :pos),
                  s(:lvar, :y)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "legend"),
                s(:str, "get"),
                s(:lvar, :pos))))),
        s(:def, :pen_create,
          s(:args,
            s(:optarg, :id,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :PlotComponent), :Pen), :new,
            s(:self),
            s(:send, nil, :tagid,
              s(:lvar, :id)),
            s(:lvar, :keys))),
        s(:def, :pen_delete,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "pen"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :pen_names,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "pen"),
                  s(:str, "names"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :pen)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Pen), :id2obj,
              s(:self),
              s(:lvar, :pen)))),
        s(:def, :postscript_output,
          s(:args,
            s(:optarg, :file,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :file), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:lvar, :file)),
                s(:lvasgn, :file,
                  s(:nil))), nil),
            s(:if,
              s(:lvar, :file),
              s(:begin,
                s(:send, nil, :tk_send,
                  s(:str, "postscript"),
                  s(:str, "output"),
                  s(:lvar, :file),
                  s(:lvar, :keys)),
                s(:self)),
              s(:send, nil, :tk_send,
                s(:str, "postscript"),
                s(:str, "output"),
                s(:lvar, :keys))))),
        s(:def, :marker_create,
          s(:args,
            s(:arg, :type),
            s(:optarg, :keys,
              s(:hash))),
          s(:case,
            s(:lvar, :type),
            s(:when,
              s(:sym, :text),
              s(:str, "text"),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :TextMarker), :new,
                s(:self),
                s(:lvar, :keys))),
            s(:when,
              s(:sym, :line),
              s(:str, "line"),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :LineMarker), :new,
                s(:self),
                s(:lvar, :keys))),
            s(:when,
              s(:sym, :bitmap),
              s(:str, "bitmap"),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :BitmapMarker), :new,
                s(:self),
                s(:lvar, :keys))),
            s(:when,
              s(:sym, :image),
              s(:str, "image"),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :ImageMarker), :new,
                s(:self),
                s(:lvar, :keys))),
            s(:when,
              s(:sym, :polygon),
              s(:str, "polygon"),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :PolygonMarker), :new,
                s(:self),
                s(:lvar, :keys))),
            s(:when,
              s(:sym, :window),
              s(:str, "window"),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :WindowMarker), :new,
                s(:self),
                s(:lvar, :keys))),
            s(:if,
              s(:send,
                s(:lvar, :type), :kind_of?,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker)),
              s(:send,
                s(:lvar, :type), :new,
                s(:self),
                s(:lvar, :keys)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :create_type,
                s(:self),
                s(:lvar, :type),
                s(:lvar, :keys))))),
        s(:def, :marker_after,
          s(:args,
            s(:arg, :id),
            s(:optarg, :target,
              s(:nil))),
          s(:begin,
            s(:if,
              s(:lvar, :target),
              s(:send, nil, :tk_send_without_enc,
                s(:str, "marker"),
                s(:str, "after"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)),
                s(:send, nil, :tagid,
                  s(:lvar, :target))),
              s(:send, nil, :tk_send_without_enc,
                s(:str, "marker"),
                s(:str, "after"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)))),
            s(:self))),
        s(:def, :marker_before,
          s(:args,
            s(:arg, :id),
            s(:optarg, :target,
              s(:const, nil, :None))),
          s(:begin,
            s(:if,
              s(:lvar, :target),
              s(:send, nil, :tk_send_without_enc,
                s(:str, "marker"),
                s(:str, "before"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)),
                s(:send, nil, :tagid,
                  s(:lvar, :target))),
              s(:send, nil, :tk_send_without_enc,
                s(:str, "marker"),
                s(:str, "before"),
                s(:send, nil, :tagid,
                  s(:lvar, :id)))),
            s(:self))),
        s(:def, :marker_delete,
          s(:args,
            s(:restarg, :ids)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "marker"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :ids), :collect),
                    s(:args,
                      s(:arg, :id)),
                    s(:send, nil, :tagid,
                      s(:lvar, :id)))))),
            s(:self))),
        s(:def, :marker_exist?,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_send,
              s(:str, "marker"),
              s(:str, "exists"),
              s(:send, nil, :tagid,
                s(:lvar, :id))))),
        s(:def, :marker_names,
          s(:args,
            s(:restarg, :pats)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "marker"),
                  s(:str, "names"),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :pats), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :id)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Marker), :id2obj,
              s(:self),
              s(:lvar, :id)))),
        s(:def, :marker_type,
          s(:args,
            s(:arg, :id)),
          s(:send, nil, :tk_send,
            s(:str, "marker"),
            s(:str, "type"),
            s(:send, nil, :tagid,
              s(:lvar, :id)))),
        s(:def, :xaxis_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "xaxis"),
            s(:lvar, :option))),
        s(:def, :xaxis_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "xaxis"),
            s(:lvar, :option))),
        s(:def, :xaxis_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "xaxis"),
            s(:lvar, :option))),
        s(:def, :xaxis_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :slot,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :slot))),
                s(:if,
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "command"))),
                  s(:send,
                    s(:lvar, :slot), :[]=,
                    s(:str, "command"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick))))), nil)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:sym, :command)),
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:str, "command"))),
                s(:begin,
                  s(:lvasgn, :cmd,
                    s(:lvar, :value)),
                  s(:lvasgn, :value,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick)))))), nil)),
            s(:send, nil, :itemconfigure,
              s(:str, "xaxis"),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :xaxis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "xaxis"),
            s(:lvar, :slot))),
        s(:def, :current_xaxis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "xaxis"),
            s(:lvar, :slot))),
        s(:def, :xaxis_bind,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind,
              s(:array,
                s(:send, nil, :path),
                s(:str, "xaxis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :xaxis_bind_append,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind_append,
              s(:array,
                s(:send, nil, :path),
                s(:str, "xaxis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :xaxis_bind_remove,
          s(:args,
            s(:arg, :context)),
          s(:begin,
            s(:send, nil, :_bind_remove,
              s(:array,
                s(:send, nil, :path),
                s(:str, "xaxis"),
                s(:str, "bind")),
              s(:lvar, :context)),
            s(:self))),
        s(:def, :xaxis_bindinfo,
          s(:args,
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:str, "xaxis"),
              s(:str, "bind")),
            s(:lvar, :context))),
        s(:def, :xaxis_invtransform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "xaxis"),
              s(:str, "invtransform"),
              s(:lvar, :val)))),
        s(:def, :xaxis_limits,
          s(:args),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "xaxis"),
              s(:str, "limits")))),
        s(:def, :xaxis_transform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "xaxis"),
              s(:str, "transform"),
              s(:lvar, :val)))),
        s(:def, :xaxis_use,
          s(:args,
            s(:optarg, :target,
              s(:nil))),
          s(:if,
            s(:lvar, :target),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "xaxis"),
                s(:str, "use"),
                s(:send, nil, :tagid,
                  s(:lvar, :target)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "xaxis"),
                s(:str, "use"))))),
        s(:def, :x2axis_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "x2axis"),
            s(:lvar, :option))),
        s(:def, :x2axis_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "x2axis"),
            s(:lvar, :option))),
        s(:def, :x2axis_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "x2axis"),
            s(:lvar, :option))),
        s(:def, :x2axis_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :slot,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :slot))),
                s(:if,
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "command"))),
                  s(:send,
                    s(:lvar, :slot), :[]=,
                    s(:str, "command"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick))))), nil)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:sym, :command)),
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:str, "command"))),
                s(:begin,
                  s(:lvasgn, :cmd,
                    s(:lvar, :value)),
                  s(:lvasgn, :value,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick)))))), nil)),
            s(:send, nil, :itemconfigure,
              s(:str, "x2axis"),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :x2axis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "x2axis"),
            s(:lvar, :slot))),
        s(:def, :current_x2axis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "x2axis"),
            s(:lvar, :slot))),
        s(:def, :x2axis_bind,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind,
              s(:array,
                s(:send, nil, :path),
                s(:str, "x2axis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :x2axis_bind_append,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind_append,
              s(:array,
                s(:send, nil, :path),
                s(:str, "x2axis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :x2axis_bind_remove,
          s(:args,
            s(:arg, :context)),
          s(:begin,
            s(:send, nil, :_bind_remove,
              s(:array,
                s(:send, nil, :path),
                s(:str, "x2axis"),
                s(:str, "bind")),
              s(:lvar, :context)),
            s(:self))),
        s(:def, :x2axis_bindinfo,
          s(:args,
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:str, "x2axis"),
              s(:str, "bind")),
            s(:lvar, :context))),
        s(:def, :x2axis_invtransform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "x2axis"),
              s(:str, "invtransform"),
              s(:lvar, :val)))),
        s(:def, :x2axis_limits,
          s(:args),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "x2axis"),
              s(:str, "limits")))),
        s(:def, :x2axis_transform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "x2axis"),
              s(:str, "transform"),
              s(:lvar, :val)))),
        s(:def, :x2axis_use,
          s(:args,
            s(:optarg, :target,
              s(:nil))),
          s(:if,
            s(:lvar, :target),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "x2axis"),
                s(:str, "use"),
                s(:send, nil, :tagid,
                  s(:lvar, :target)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "x2axis"),
                s(:str, "use"))))),
        s(:def, :yaxis_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "yaxis"),
            s(:lvar, :option))),
        s(:def, :yaxis_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "yaxis"),
            s(:lvar, :option))),
        s(:def, :yaxis_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "yaxis"),
            s(:lvar, :option))),
        s(:def, :yaxis_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :slot,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :slot))),
                s(:if,
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "command"))),
                  s(:send,
                    s(:lvar, :slot), :[]=,
                    s(:str, "command"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick))))), nil)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:sym, :command)),
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:str, "command"))),
                s(:begin,
                  s(:lvasgn, :cmd,
                    s(:lvar, :value)),
                  s(:lvasgn, :value,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick)))))), nil)),
            s(:send, nil, :itemconfigure,
              s(:str, "yaxis"),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :yaxis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :itemconfiginfo,
            s(:str, "yaxis"),
            s(:lvar, :slot))),
        s(:def, :current_yaxis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "yaxis"),
            s(:lvar, :slot))),
        s(:def, :yaxis_bind,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind,
              s(:array,
                s(:send, nil, :path),
                s(:str, "yaxis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :yaxis_bind_append,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind_append,
              s(:array,
                s(:send, nil, :path),
                s(:str, "yaxis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :yaxis_bind_remove,
          s(:args,
            s(:arg, :context)),
          s(:begin,
            s(:send, nil, :_bind_remove,
              s(:array,
                s(:send, nil, :path),
                s(:str, "yaxis"),
                s(:str, "bind")),
              s(:lvar, :context)),
            s(:self))),
        s(:def, :yaxis_bindinfo,
          s(:args,
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:str, "yaxis"),
              s(:str, "bind")),
            s(:lvar, :context))),
        s(:def, :yaxis_invtransform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "yaxis"),
              s(:str, "invtransform"),
              s(:lvar, :val)))),
        s(:def, :yaxis_limits,
          s(:args),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "yaxis"),
              s(:str, "limits")))),
        s(:def, :yaxis_transform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "yaxis"),
              s(:str, "transform"),
              s(:lvar, :val)))),
        s(:def, :yaxis_use,
          s(:args,
            s(:optarg, :target,
              s(:nil))),
          s(:if,
            s(:lvar, :target),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "yaxis"),
                s(:str, "use"),
                s(:send, nil, :tagid,
                  s(:lvar, :target)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "yaxis"),
                s(:str, "use"))))),
        s(:def, :y2axis_cget_tkstring,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_tkstring,
            s(:str, "y2axis"),
            s(:lvar, :option))),
        s(:def, :y2axis_cget,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget,
            s(:str, "y2axis"),
            s(:lvar, :option))),
        s(:def, :y2axis_cget_strict,
          s(:args,
            s(:arg, :option)),
          s(:send, nil, :itemcget_strict,
            s(:str, "y2axis"),
            s(:lvar, :option))),
        s(:def, :y2axis_configure,
          s(:args,
            s(:arg, :slot),
            s(:optarg, :value,
              s(:const, nil, :None))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :slot,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :slot))),
                s(:if,
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "command"))),
                  s(:send,
                    s(:lvar, :slot), :[]=,
                    s(:str, "command"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick))))), nil)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:sym, :command)),
                  s(:send,
                    s(:lvar, :slot), :==,
                    s(:str, "command"))),
                s(:begin,
                  s(:lvasgn, :cmd,
                    s(:lvar, :value)),
                  s(:lvasgn, :value,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :w),
                        s(:arg, :tick)),
                      s(:send,
                        s(:lvar, :cmd), :call,
                        s(:send,
                          s(:const, nil, :TkComm), :window,
                          s(:lvar, :w)),
                        s(:send,
                          s(:const, nil, :TkComm), :num_or_str,
                          s(:lvar, :tick)))))), nil)),
            s(:send, nil, :itemconfigure,
              s(:str, "y2axis"),
              s(:lvar, :slot),
              s(:lvar, :value)))),
        s(:def, :y2axis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :axis_configinfo,
            s(:str, "y2axis"),
            s(:lvar, :slot))),
        s(:def, :current_y2axis_configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:send, nil, :current_itemconfiginfo,
            s(:str, "y2axis"),
            s(:lvar, :slot))),
        s(:def, :y2axis_bind,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind,
              s(:array,
                s(:send, nil, :path),
                s(:str, "y2axis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :y2axis_bind_append,
          s(:args,
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind_append,
              s(:array,
                s(:send, nil, :path),
                s(:str, "y2axis"),
                s(:str, "bind")),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :y2axis_bind_remove,
          s(:args,
            s(:arg, :context)),
          s(:begin,
            s(:send, nil, :_bind_remove,
              s(:array,
                s(:send, nil, :path),
                s(:str, "y2axis"),
                s(:str, "bind")),
              s(:lvar, :context)),
            s(:self))),
        s(:def, :y2axis_bindinfo,
          s(:args,
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:str, "y2axis"),
              s(:str, "bind")),
            s(:lvar, :context))),
        s(:def, :y2axis_invtransform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "y2axis"),
              s(:str, "invtransform"),
              s(:lvar, :val)))),
        s(:def, :y2axis_limits,
          s(:args),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "y2axis"),
              s(:str, "limits")))),
        s(:def, :y2axis_transform,
          s(:args,
            s(:arg, :val)),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "y2axis"),
              s(:str, "transform"),
              s(:lvar, :val)))),
        s(:def, :y2axis_use,
          s(:args,
            s(:optarg, :target,
              s(:nil))),
          s(:if,
            s(:lvar, :target),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "y2axis"),
                s(:str, "use"),
                s(:send, nil, :tagid,
                  s(:lvar, :target)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :PlotComponent), :Axis), :id2obj,
              s(:self),
              s(:send, nil, :tk_send,
                s(:str, "y2axis"),
                s(:str, "use")))))))))
