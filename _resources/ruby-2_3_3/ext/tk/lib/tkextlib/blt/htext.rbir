s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/itemconfig.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:class,
      s(:const, nil, :Htext),
      s(:const, nil, :TkWindow),
      s(:begin,
        s(:casgn, nil, :Htext_Var,
          s(:send,
            s(:const, nil, :TkVarAccess), :new_hash,
            s(:str, "htext"))),
        s(:casgn, nil, :Htext_Widget,
          s(:send,
            s(:const, nil, :TkVarAccess), :new,
            s(:str, "htext(widget)"),
            s(:sym, :window))),
        s(:casgn, nil, :Htext_File,
          s(:send,
            s(:const, nil, :TkVarAccess), :new,
            s(:str, "htext(file)"))),
        s(:casgn, nil, :Htext_Line,
          s(:send,
            s(:const, nil, :TkVarAccess), :new,
            s(:str, "htext(line)"))),
        s(:send, nil, :include,
          s(:const, nil, :TkItemConfigMethod)),
        s(:send, nil, :include,
          s(:const, nil, :Scrollable)),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::blt::htext"), :freeze)), :freeze)),
        s(:casgn, nil, :WidgetClassName,
          s(:send,
            s(:str, "Htext"), :freeze)),
        s(:or_asgn,
          s(:send,
            s(:const, nil, :WidgetClassNames), :[],
            s(:const, nil, :WidgetClassName)),
          s(:self)),
        s(:alias,
          s(:sym, :window_cget_tkstring),
          s(:sym, :itemcget_tkstring)),
        s(:alias,
          s(:sym, :window_cget),
          s(:sym, :itemcget)),
        s(:alias,
          s(:sym, :window_cget_strict),
          s(:sym, :itemcget_strict)),
        s(:alias,
          s(:sym, :window_configure),
          s(:sym, :itemconfigure)),
        s(:alias,
          s(:sym, :window_configuinfo),
          s(:sym, :itemconfiginfo)),
        s(:alias,
          s(:sym, :current_window_configuinfo),
          s(:sym, :current_itemconfiginfo)),
        s(:def, :__strval_optkeys,
          s(:args),
          s(:send,
            s(:super), :<<,
            s(:str, "filename"))),
        s(:send, nil, :private,
          s(:sym, :__strval_optkeys)),
        s(:def, :append,
          s(:args,
            s(:arg, :win),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "append"),
              s(:send, nil, :_epath,
                s(:lvar, :win)),
              s(:lvar, :keys)),
            s(:self))),
        s(:def, :goto_line,
          s(:args,
            s(:arg, :idx)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "gotoline"),
              s(:lvar, :idx)),
            s(:self))),
        s(:def, :current_line,
          s(:args),
          s(:send, nil, :number,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "gotoline")))),
        s(:def, :index,
          s(:args,
            s(:arg, :str)),
          s(:send, nil, :number,
            s(:send, nil, :tk_send,
              s(:str, "index"),
              s(:lvar, :str)))),
        s(:def, :line_pos,
          s(:args,
            s(:arg, :str)),
          s(:send, nil, :tk_send,
            s(:str, "linepos"),
            s(:lvar, :str))),
        s(:def, :range,
          s(:args,
            s(:optarg, :from,
              s(:const, nil, :None)),
            s(:optarg, :to,
              s(:const, nil, :None))),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "range"),
            s(:lvar, :from),
            s(:lvar, :to))),
        s(:def, :scan_mark,
          s(:args,
            s(:arg, :pos)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "scan"),
              s(:str, "mark"),
              s(:lvar, :pos)),
            s(:self))),
        s(:def, :scan_dragto,
          s(:args,
            s(:arg, :pos)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "scan"),
              s(:str, "dragto"),
              s(:lvar, :pos)),
            s(:self))),
        s(:def, :search,
          s(:args,
            s(:arg, :pat),
            s(:optarg, :from,
              s(:const, nil, :None)),
            s(:optarg, :to,
              s(:const, nil, :None))),
          s(:begin,
            s(:lvasgn, :num,
              s(:send, nil, :number,
                s(:send, nil, :tk_send,
                  s(:str, "search"),
                  s(:lvar, :pat),
                  s(:lvar, :from),
                  s(:lvar, :to)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :num), :<,
                  s(:int, 0))),
              s(:nil),
              s(:lvar, :num)))),
        s(:def, :selection_adjust,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "adjust"),
              s(:lvar, :index)),
            s(:self))),
        s(:def, :selection_clear,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "clear")),
            s(:self))),
        s(:def, :selection_from,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "from"),
              s(:lvar, :index)),
            s(:self))),
        s(:def, :selection_line,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "line"),
              s(:lvar, :index)),
            s(:self))),
        s(:def, :selection_present,
          s(:args),
          s(:send, nil, :bool,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "present")))),
        s(:def, :selection_range,
          s(:args,
            s(:arg, :first),
            s(:arg, :last)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "range"),
              s(:lvar, :first),
              s(:lvar, :last)),
            s(:self))),
        s(:def, :selection_to,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "to"),
              s(:lvar, :index)),
            s(:self))),
        s(:def, :selection_word,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "selection"),
              s(:str, "word"),
              s(:lvar, :index)),
            s(:self))),
        s(:def, :windows,
          s(:args,
            s(:optarg, :pat,
              s(:const, nil, :None))),
          s(:send, nil, :list,
            s(:send, nil, :tk_send,
              s(:str, "windows"),
              s(:lvar, :pat))))))))
