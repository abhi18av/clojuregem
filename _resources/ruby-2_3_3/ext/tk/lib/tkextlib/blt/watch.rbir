s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:class,
      s(:const, nil, :Watch),
      s(:const, nil, :TkObject),
      s(:begin,
        s(:send, nil, :extend,
          s(:const, nil, :TkCore)),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::blt::watch"), :freeze)), :freeze)),
        s(:casgn, nil, :WATCH_ID_TBL,
          s(:send,
            s(:const,
              s(:const, nil, :TkCore), :INTERP), :create_table)),
        s(:block,
          s(:send,
            s(:begin,
              s(:casgn, nil, :BLT_WATCH_ID,
                s(:array,
                  s(:send,
                    s(:str, "blt_watch_id"), :freeze),
                  s(:send,
                    s(:const, nil, :TkUtil), :untrust,
                    s(:str, "00000"))))), :instance_eval),
          s(:args),
          s(:begin,
            s(:ivasgn, :@mutex,
              s(:send,
                s(:const, nil, :Mutex), :new)),
            s(:def, :mutex,
              s(:args),
              s(:ivar, :@mutex)),
            s(:send, nil, :freeze))),
        s(:block,
          s(:send,
            s(:const,
              s(:const, nil, :TkCore), :INTERP), :init_ip_env),
          s(:args),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :WATCH_ID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :WATCH_ID_TBL), :clear))),
        s(:defs,
          s(:self), :names,
          s(:args,
            s(:optarg, :state,
              s(:const, nil, :None))),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send, nil, :tk_split_list,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::watch"),
                  s(:str, "names"),
                  s(:lvar, :state)))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :WATCH_ID_TBL), :mutex), :synchronize),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :lst), :collect),
                s(:args,
                  s(:arg, :name)),
                s(:or,
                  s(:send,
                    s(:const, nil, :WATCH_ID_TBL), :[],
                    s(:lvar, :name)),
                  s(:lvar, :name)))))),
        s(:def, :__numval_optkeys,
          s(:args),
          s(:array,
            s(:str, "maxlevel"))),
        s(:send, nil, :private,
          s(:sym, :__numval_optkeys)),
        s(:def, :__boolval_optkeys,
          s(:args),
          s(:array,
            s(:str, "active"))),
        s(:send, nil, :private,
          s(:sym, :__boolval_optkeys)),
        s(:def, :__config_cmd,
          s(:args),
          s(:array,
            s(:str, "::blt::watch"),
            s(:str, "configure"),
            s(:send,
              s(:self), :path))),
        s(:send, nil, :private,
          s(:sym, :__config_cmd)),
        s(:def, :initialize,
          s(:args,
            s(:optarg, :name,
              s(:nil)),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :name), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:lvar, :name)),
                s(:lvasgn, :name,
                  s(:nil))), nil),
            s(:if,
              s(:lvar, :name),
              s(:ivasgn, :@id,
                s(:send,
                  s(:lvar, :name), :to_s)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :BLT_WATCH_ID), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@id,
                    s(:send,
                      s(:const, nil, :BLT_WATCH_ID), :join,
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :BLT_WATCH_ID), :[],
                      s(:int, 1)), :succ!)))),
            s(:ivasgn, :@path,
              s(:ivar, :@id)),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :WATCH_ID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const, nil, :WATCH_ID_TBL), :[]=,
                s(:ivar, :@id),
                s(:self))),
            s(:send, nil, :tk_call,
              s(:str, "::blt::watch"),
              s(:str, "create"),
              s(:ivar, :@id),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys)))))),
        s(:def, :activate,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::watch"),
              s(:str, "activate"),
              s(:ivar, :@id)),
            s(:self))),
        s(:def, :deactivate,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::watch"),
              s(:str, "deactivate"),
              s(:ivar, :@id)),
            s(:self))),
        s(:def, :delete,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::watch"),
              s(:str, "delete"),
              s(:ivar, :@id)),
            s(:self))),
        s(:def, :info,
          s(:args),
          s(:begin,
            s(:lvasgn, :ret,
              s(:array)),
            s(:lvasgn, :lst,
              s(:send, nil, :tk_split_simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::watch"),
                  s(:str, "info"),
                  s(:ivar, :@id)))),
            s(:until,
              s(:send,
                s(:lvar, :lst), :empty?),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :k),
                    s(:lvasgn, :v),
                    s(:splat,
                      s(:lvasgn, :lst))),
                  s(:lvar, :lst)),
                s(:lvasgn, :k,
                  s(:send,
                    s(:lvar, :k), :[],
                    s(:irange,
                      s(:int, 1),
                      s(:int, -1)))),
                s(:case,
                  s(:lvar, :k),
                  s(:when,
                    s(:regexp,
                      s(:str, "^("),
                      s(:begin,
                        s(:send,
                          s(:send, nil, :__strval_optkeys), :join,
                          s(:str, "|"))),
                      s(:str, ")$"),
                      s(:regopt)), nil),
                  s(:when,
                    s(:regexp,
                      s(:str, "^("),
                      s(:begin,
                        s(:send,
                          s(:send, nil, :__numval_optkeys), :join,
                          s(:str, "|"))),
                      s(:str, ")$"),
                      s(:regopt)),
                    s(:kwbegin,
                      s(:rescue,
                        s(:lvasgn, :v,
                          s(:send, nil, :number,
                            s(:lvar, :v))),
                        s(:resbody, nil, nil,
                          s(:lvasgn, :v,
                            s(:nil))), nil))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^("),
                      s(:begin,
                        s(:send,
                          s(:send, nil, :__numstrval_optkeys), :join,
                          s(:str, "|"))),
                      s(:str, ")$"),
                      s(:regopt)),
                    s(:lvasgn, :v,
                      s(:send, nil, :num_or_str,
                        s(:lvar, :v)))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^("),
                      s(:begin,
                        s(:send,
                          s(:send, nil, :__boolval_optkeys), :join,
                          s(:str, "|"))),
                      s(:str, ")$"),
                      s(:regopt)),
                    s(:kwbegin,
                      s(:rescue,
                        s(:lvasgn, :v,
                          s(:send, nil, :bool,
                            s(:lvar, :v))),
                        s(:resbody, nil, nil,
                          s(:lvasgn, :v,
                            s(:nil))), nil))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^("),
                      s(:begin,
                        s(:send,
                          s(:send, nil, :__listval_optkeys), :join,
                          s(:str, "|"))),
                      s(:str, ")$"),
                      s(:regopt)),
                    s(:lvasgn, :v,
                      s(:send, nil, :simplelist,
                        s(:lvar, :v)))),
                  s(:when,
                    s(:regexp,
                      s(:str, "^("),
                      s(:begin,
                        s(:send,
                          s(:send, nil, :__numlistval_optkeys), :join,
                          s(:str, "|"))),
                      s(:str, ")$"),
                      s(:regopt)),
                    s(:lvasgn, :v,
                      s(:send, nil, :list,
                        s(:lvar, :v)))),
                  s(:if,
                    s(:send,
                      s(:lvar, :v), :index,
                      s(:str, "{")),
                    s(:lvasgn, :v,
                      s(:send, nil, :tk_split_list,
                        s(:lvar, :v))),
                    s(:lvasgn, :v,
                      s(:send, nil, :tk_tcl2ruby,
                        s(:lvar, :v))))),
                s(:send,
                  s(:lvar, :ret), :<<,
                  s(:array,
                    s(:lvar, :k),
                    s(:lvar, :v))))),
            s(:lvar, :ret))),
        s(:def, :configinfo,
          s(:args,
            s(:optarg, :slot,
              s(:nil))),
          s(:if,
            s(:lvar, :slot),
            s(:begin,
              s(:lvasgn, :slot,
                s(:send,
                  s(:lvar, :slot), :to_s)),
              s(:lvasgn, :v,
                s(:send, nil, :cget,
                  s(:lvar, :slot))),
              s(:if,
                s(:const,
                  s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
                s(:array,
                  s(:lvar, :slot),
                  s(:lvar, :v)),
                s(:hash,
                  s(:pair,
                    s(:lvar, :slot),
                    s(:lvar, :v))))),
            s(:if,
              s(:const,
                s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
              s(:send, nil, :info),
              s(:send,
                s(:const, nil, :Hash), :[],
                s(:splat,
                  s(:begin,
                    s(:send,
                      s(:send, nil, :info), :flatten))))))),
        s(:def, :cget_strict,
          s(:args,
            s(:arg, :key)),
          s(:begin,
            s(:lvasgn, :key,
              s(:send,
                s(:lvar, :key), :to_s)),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:send,
                    s(:send, nil, :info), :assoc,
                    s(:lvar, :key)), :[],
                  s(:int, 1)),
                s(:resbody, nil, nil,
                  s(:send, nil, :fail,
                    s(:const, nil, :ArgumentError),
                    s(:dstr,
                      s(:str, "unknown option '"),
                      s(:begin,
                        s(:lvar, :key)),
                      s(:str, "'")))), nil)))),
        s(:def, :cget,
          s(:args,
            s(:arg, :key)),
          s(:if,
            s(:send,
              s(:const, nil, :TkConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__),
            s(:kwbegin,
              s(:rescue,
                s(:send, nil, :cget_strict,
                  s(:lvar, :key)),
                s(:resbody, nil,
                  s(:lvasgn, :e),
                  s(:if,
                    s(:send,
                      s(:send, nil, :current_configinfo), :has_key?,
                      s(:send,
                        s(:lvar, :key), :to_s)),
                    s(:send, nil, :fail,
                      s(:lvar, :e)),
                    s(:nil))), nil)),
            s(:send, nil, :cget_strict,
              s(:lvar, :key))))))))
