s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:begin,
      s(:module,
        s(:const, nil, :Winop),
        s(:begin,
          s(:send, nil, :extend,
            s(:const, nil, :TkCore)),
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "::blt::winop"), :freeze)), :freeze)))),
      s(:casgn, nil, :WinOp,
        s(:const, nil, :Winop)))),
  s(:sclass,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Winop),
    s(:begin,
      s(:def, :changes,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "changes"),
          s(:lvar, :win))),
      s(:def, :colormap,
        s(:args,
          s(:arg, :win)),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:splat,
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:str, "::blt::winop"),
                s(:str, "colormap"),
                s(:lvar, :win)))))),
      s(:def, :convolve,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:arg, :filter)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "convolve"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :filter))),
      s(:def, :image_convolve,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:arg, :filter)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "convolve"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :filter))),
      s(:def, :image_gradient,
        s(:args,
          s(:arg, :photo),
          s(:arg, :left),
          s(:arg, :right),
          s(:arg, :type)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "gradient"),
          s(:lvar, :photo),
          s(:lvar, :left),
          s(:lvar, :right),
          s(:lvar, :type))),
      s(:def, :image_read_jpeg,
        s(:args,
          s(:arg, :file),
          s(:arg, :photo)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "readjpeg"),
          s(:lvar, :file),
          s(:lvar, :photo))),
      s(:def, :image_resample,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:optarg, :horiz_filter,
            s(:const, nil, :None)),
          s(:optarg, :vert_filter,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "resample"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :horiz_filter),
          s(:lvar, :vert_filter))),
      s(:def, :image_rotate,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:arg, :angle)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "rotate"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :angle))),
      s(:def, :image_snap,
        s(:args,
          s(:arg, :win),
          s(:arg, :photo),
          s(:optarg, :width,
            s(:const, nil, :None)),
          s(:optarg, :height,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "snap"),
          s(:lvar, :win),
          s(:lvar, :photo),
          s(:lvar, :width),
          s(:lvar, :height))),
      s(:def, :image_subsample,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :width),
          s(:arg, :height),
          s(:optarg, :horiz_filter,
            s(:const, nil, :None)),
          s(:optarg, :vert_filter,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "image"),
          s(:str, "subsample"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :x),
          s(:lvar, :y),
          s(:lvar, :width),
          s(:lvar, :height),
          s(:lvar, :horiz_filter),
          s(:lvar, :vert_filter))),
      s(:def, :quantize,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:arg, :colors)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "quantize"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :colors))),
      s(:def, :query,
        s(:args),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "query"))),
      s(:def, :read_jpeg,
        s(:args,
          s(:arg, :file),
          s(:arg, :photo)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "readjpeg"),
          s(:lvar, :file),
          s(:lvar, :photo))),
      s(:def, :resample,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:optarg, :horiz_filter,
            s(:const, nil, :None)),
          s(:optarg, :vert_filter,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "resample"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :horiz_filter),
          s(:lvar, :vert_filter))),
      s(:def, :subsample,
        s(:args,
          s(:arg, :src),
          s(:arg, :dest),
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :width),
          s(:arg, :height),
          s(:optarg, :horiz_filter,
            s(:const, nil, :None)),
          s(:optarg, :vert_filter,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "subsample"),
          s(:lvar, :src),
          s(:lvar, :dest),
          s(:lvar, :x),
          s(:lvar, :y),
          s(:lvar, :width),
          s(:lvar, :height),
          s(:lvar, :horiz_filter),
          s(:lvar, :vert_filter))),
      s(:def, :raise,
        s(:args,
          s(:restarg, :wins)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "raise"),
          s(:splat,
            s(:lvar, :wins)))),
      s(:def, :lower,
        s(:args,
          s(:restarg, :wins)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "lower"),
          s(:splat,
            s(:lvar, :wins)))),
      s(:def, :map,
        s(:args,
          s(:restarg, :wins)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "map"),
          s(:splat,
            s(:lvar, :wins)))),
      s(:def, :unmap,
        s(:args,
          s(:restarg, :wins)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "unmap"),
          s(:splat,
            s(:lvar, :wins)))),
      s(:def, :move,
        s(:args,
          s(:arg, :win),
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "move"),
          s(:lvar, :win),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :snap,
        s(:args,
          s(:arg, :win),
          s(:arg, :photo)),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "snap"),
          s(:lvar, :win),
          s(:lvar, :photo))),
      s(:def, :warpto,
        s(:args,
          s(:optarg, :win,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "::blt::winop"),
          s(:str, "warpto"),
          s(:lvar, :win))),
      s(:alias,
        s(:sym, :warp_to),
        s(:sym, :warpto)))))
