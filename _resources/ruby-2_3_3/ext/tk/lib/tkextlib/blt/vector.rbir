s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:begin,
      s(:class,
        s(:const, nil, :Vector),
        s(:const, nil, :TkVariable),
        s(:begin,
          s(:casgn, nil, :TkCommandNames,
            s(:send,
              s(:array,
                s(:send,
                  s(:str, "::blt::vector"), :freeze)), :freeze)),
          s(:defs,
            s(:self), :create,
            s(:args,
              s(:restarg, :args)),
            s(:send, nil, :tk_call,
              s(:str, "::blt::vector"),
              s(:str, "create"),
              s(:splat,
                s(:lvar, :args)))),
          s(:defs,
            s(:self), :destroy,
            s(:args,
              s(:restarg, :args)),
            s(:send, nil, :tk_call,
              s(:str, "::blt::vector"),
              s(:str, "destroy"),
              s(:splat,
                s(:lvar, :args)))),
          s(:defs,
            s(:self), :expr,
            s(:args,
              s(:arg, :expression)),
            s(:send, nil, :tk_call,
              s(:str, "::blt::vector"),
              s(:str, "expr"),
              s(:lvar, :expression))),
          s(:defs,
            s(:self), :names,
            s(:args,
              s(:optarg, :pat,
                s(:const, nil, :None))),
            s(:begin,
              s(:lvasgn, :list,
                s(:send, nil, :simplelist,
                  s(:send, nil, :tk_call,
                    s(:str, "::blt::vector"),
                    s(:str, "names"),
                    s(:lvar, :pat)))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkVar_ID_TBL), :mutex), :synchronize),
                s(:args),
                s(:block,
                  s(:send,
                    s(:lvar, :list), :collect),
                  s(:args,
                    s(:arg, :name)),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TkVar_ID_TBL), :[],
                      s(:lvar, :name)),
                    s(:send,
                      s(:const, nil, :TkVar_ID_TBL), :[],
                      s(:lvar, :name)),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:send,
                            s(:lvar, :name), :[],
                            s(:irange,
                              s(:int, 0),
                              s(:int, 1))), :==,
                          s(:str, "::")),
                        s(:send,
                          s(:const, nil, :TkVar_ID_TBL), :[],
                          s(:send,
                            s(:lvar, :name), :[],
                            s(:irange,
                              s(:int, 2),
                              s(:int, -1))))),
                      s(:send,
                        s(:const, nil, :TkVar_ID_TBL), :[],
                        s(:send,
                          s(:lvar, :name), :[],
                          s(:irange,
                            s(:int, 2),
                            s(:int, -1)))),
                      s(:lvar, :name))))))),
          s(:def, :initialize,
            s(:args,
              s(:optarg, :size,
                s(:nil)),
              s(:optarg, :keys,
                s(:hash))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :size), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:lvar, :size)),
                  s(:lvasgn, :size,
                    s(:nil))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :size), :kind_of?,
                  s(:const, nil, :Array)),
                s(:lvasgn, :size,
                  s(:send,
                    s(:lvar, :size), :join,
                    s(:str, ":"))), nil),
              s(:if,
                s(:lvar, :size),
                s(:ivasgn, :@id,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkCore), :INTERP), :_invoke,
                    s(:str, "::blt::vector"),
                    s(:str, "create"),
                    s(:dstr,
                      s(:str, "#auto("),
                      s(:begin,
                        s(:lvar, :size)),
                      s(:str, ")")),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys))))),
                s(:ivasgn, :@id,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkCore), :INTERP), :_invoke,
                    s(:str, "::blt::vector"),
                    s(:str, "create"),
                    s(:str, "#auto"),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkVar_ID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TkVar_ID_TBL), :[]=,
                  s(:ivar, :@id),
                  s(:self))),
              s(:ivasgn, :@def_default,
                s(:false)),
              s(:ivasgn, :@default_val,
                s(:nil)),
              s(:ivasgn, :@trace_var,
                s(:nil)),
              s(:ivasgn, :@trace_elem,
                s(:nil)),
              s(:ivasgn, :@trace_opts,
                s(:nil)),
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :_invoke_without_enc,
                s(:str, "global"),
                s(:ivar, :@id)))),
          s(:def, :destroy,
            s(:args),
            s(:send, nil, :tk_call,
              s(:str, "::blt::vector"),
              s(:str, "destroy"),
              s(:ivar, :@id))),
          s(:def, :inspect,
            s(:args),
            s(:send,
              s(:send,
                s(:str, "#<Tk::BLT::Vector: "), :+,
                s(:ivar, :@id)), :+,
              s(:str, ">"))),
          s(:def, :to_s,
            s(:args),
            s(:ivar, :@id)),
          s(:def, :*,
            s(:args,
              s(:arg, :item)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "*"),
                s(:lvar, :item)))),
          s(:def, :+,
            s(:args,
              s(:arg, :item)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "+"),
                s(:lvar, :item)))),
          s(:def, :-,
            s(:args,
              s(:arg, :item)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "-"),
                s(:lvar, :item)))),
          s(:def, :/,
            s(:args,
              s(:arg, :item)),
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "/"),
                s(:lvar, :item)))),
          s(:def, :append,
            s(:args,
              s(:restarg, :vectors)),
            s(:send, nil, :tk_call,
              s(:ivar, :@id),
              s(:str, "append"),
              s(:splat,
                s(:lvar, :vectors)))),
          s(:def, :binread,
            s(:args,
              s(:arg, :channel),
              s(:optarg, :len,
                s(:const, nil, :None)),
              s(:optarg, :keys,
                s(:hash))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :len), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:lvar, :len)),
                  s(:lvasgn, :len,
                    s(:const, nil, :None))), nil),
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :keys))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "swap")),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "swap"),
                  s(:const, nil, :None)), nil),
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "binread"),
                s(:lvar, :channel),
                s(:lvar, :len),
                s(:lvar, :keys)))),
          s(:def, :clear,
            s(:args),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "clear")),
              s(:self))),
          s(:def, :delete,
            s(:args,
              s(:restarg, :indices)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "delete"),
                s(:splat,
                  s(:lvar, :indices))),
              s(:self))),
          s(:def, :dup_vector,
            s(:args,
              s(:arg, :vec)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "dup"),
                s(:lvar, :vec)),
              s(:self))),
          s(:def, :expr,
            s(:args,
              s(:arg, :expression)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "expr"),
                s(:lvar, :expression)),
              s(:self))),
          s(:def, :index,
            s(:args,
              s(:arg, :idx),
              s(:optarg, :val,
                s(:const, nil, :None))),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "index"),
                s(:lvar, :idx),
                s(:lvar, :val)))),
          s(:def, :[],
            s(:args,
              s(:arg, :idx)),
            s(:send, nil, :index,
              s(:lvar, :idx))),
          s(:def, :[]=,
            s(:args,
              s(:arg, :idx),
              s(:arg, :val)),
            s(:send, nil, :index,
              s(:lvar, :idx),
              s(:lvar, :val))),
          s(:def, :length,
            s(:args),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "length")))),
          s(:def, :length=,
            s(:args,
              s(:arg, :size)),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "length"),
                s(:lvar, :size)))),
          s(:def, :merge,
            s(:args,
              s(:restarg, :vectors)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "merge"),
                s(:splat,
                  s(:lvar, :vectors))),
              s(:self))),
          s(:def, :normalize,
            s(:args,
              s(:optarg, :vec,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "normalize"),
                s(:lvar, :vec)),
              s(:self))),
          s(:def, :notify,
            s(:args,
              s(:arg, :keyword)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "notify"),
                s(:lvar, :keyword)),
              s(:self))),
          s(:def, :offset,
            s(:args),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "offset")))),
          s(:def, :offset=,
            s(:args,
              s(:arg, :val)),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "offset"),
                s(:lvar, :val)))),
          s(:def, :random,
            s(:args),
            s(:send, nil, :tk_call,
              s(:ivar, :@id),
              s(:str, "random"))),
          s(:def, :populate,
            s(:args,
              s(:arg, :vector),
              s(:optarg, :density,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "populate"),
                s(:lvar, :vector),
                s(:lvar, :density)),
              s(:self))),
          s(:def, :range,
            s(:args,
              s(:arg, :first),
              s(:optarg, :last,
                s(:const, nil, :None))),
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "range"),
                s(:lvar, :first),
                s(:lvar, :last)))),
          s(:def, :search,
            s(:args,
              s(:arg, :val1),
              s(:optarg, :val2,
                s(:const, nil, :None))),
            s(:send, nil, :list,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "search"),
                s(:lvar, :val1),
                s(:lvar, :val2)))),
          s(:def, :set,
            s(:args,
              s(:arg, :item)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "set"),
                s(:lvar, :item)),
              s(:self))),
          s(:def, :seq,
            s(:args,
              s(:arg, :start),
              s(:optarg, :finish,
                s(:const, nil, :None)),
              s(:optarg, :step,
                s(:const, nil, :None))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "seq"),
                s(:lvar, :start),
                s(:lvar, :finish),
                s(:lvar, :step)),
              s(:self))),
          s(:def, :sort,
            s(:args,
              s(:restarg, :vectors)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "sort"),
                s(:splat,
                  s(:lvar, :vectors))),
              s(:self))),
          s(:def, :sort_reverse,
            s(:args,
              s(:restarg, :vectors)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "sort"),
                s(:str, "-reverse"),
                s(:splat,
                  s(:lvar, :vectors))),
              s(:self))),
          s(:def, :split,
            s(:args,
              s(:restarg, :vectors)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "split"),
                s(:splat,
                  s(:lvar, :vectors))),
              s(:self))),
          s(:def, :variable,
            s(:args,
              s(:arg, :var)),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:ivar, :@id),
                s(:str, "variable"),
                s(:lvar, :var)),
              s(:self))))),
      s(:class,
        s(:const, nil, :VectorAccess),
        s(:const, nil, :Vector),
        s(:begin,
          s(:defs,
            s(:self), :new,
            s(:args,
              s(:arg, :name)),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TkVar_ID_TBL), :mutex), :synchronize),
              s(:args),
              s(:if,
                s(:send,
                  s(:const, nil, :TkVar_ID_TBL), :[],
                  s(:lvar, :name)),
                s(:send,
                  s(:const, nil, :TkVar_ID_TBL), :[],
                  s(:lvar, :name)),
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :obj,
                          s(:send,
                            s(:self), :allocate))), :instance_eval),
                    s(:args),
                    s(:begin,
                      s(:send, nil, :initialize,
                        s(:lvar, :name)),
                      s(:send,
                        s(:const, nil, :TkVar_ID_TBL), :[]=,
                        s(:ivar, :@id),
                        s(:self)))),
                  s(:lvar, :obj))))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :vec_name)),
            s(:begin,
              s(:ivasgn, :@id,
                s(:lvar, :vec_name)),
              s(:ivasgn, :@def_default,
                s(:false)),
              s(:ivasgn, :@default_val,
                s(:nil)),
              s(:ivasgn, :@trace_var,
                s(:nil)),
              s(:ivasgn, :@trace_elem,
                s(:nil)),
              s(:ivasgn, :@trace_opts,
                s(:nil)),
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :_invoke_without_enc,
                s(:str, "global"),
                s(:ivar, :@id)))))))))
