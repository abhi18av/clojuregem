s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:class,
      s(:const, nil, :Bitmap),
      s(:const, nil, :TkObject),
      s(:begin,
        s(:send, nil, :extend,
          s(:const, nil, :TkCore)),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::blt::bitmap"), :freeze)), :freeze)),
        s(:casgn, nil, :BITMAP_ID_TBL,
          s(:send,
            s(:const,
              s(:const, nil, :TkCore), :INTERP), :create_table)),
        s(:block,
          s(:send,
            s(:begin,
              s(:casgn, nil, :BITMAP_ID,
                s(:array,
                  s(:send,
                    s(:str, "blt_bitmap_id"), :freeze),
                  s(:send,
                    s(:const, nil, :TkUtil), :untrust,
                    s(:str, "00000"))))), :instance_eval),
          s(:args),
          s(:begin,
            s(:ivasgn, :@mutex,
              s(:send,
                s(:const, nil, :Mutex), :new)),
            s(:def, :mutex,
              s(:args),
              s(:ivar, :@mutex)),
            s(:send, nil, :freeze))),
        s(:block,
          s(:send,
            s(:const,
              s(:const, nil, :TkCore), :INTERP), :init_ip_env),
          s(:args),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :BITMAP_ID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :BITMAP_ID_TBL), :clear))),
        s(:defs,
          s(:self), :data,
          s(:args,
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :dat,
              s(:send, nil, :tk_simple_list,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::bitmap"),
                  s(:str, "data"),
                  s(:lvar, :name)))),
            s(:array,
              s(:send, nil, :tk_split_list,
                s(:send,
                  s(:lvar, :dat), :[],
                  s(:int, 0))),
              s(:send, nil, :tk_simple_list,
                s(:send,
                  s(:lvar, :dat), :[],
                  s(:int, 1)))))),
        s(:defs,
          s(:self), :exist?,
          s(:args,
            s(:arg, :name)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "exists"),
              s(:lvar, :name)))),
        s(:defs,
          s(:self), :height,
          s(:args,
            s(:arg, :name)),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "height"),
              s(:lvar, :name)))),
        s(:defs,
          s(:self), :width,
          s(:args,
            s(:arg, :name)),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "width"),
              s(:lvar, :name)))),
        s(:defs,
          s(:self), :source,
          s(:args,
            s(:arg, :name)),
          s(:send, nil, :tk_simple_list,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "source"),
              s(:lvar, :name)))),
        s(:sclass,
          s(:self),
          s(:begin,
            s(:alias,
              s(:sym, :_new),
              s(:sym, :new)),
            s(:def, :new,
              s(:args,
                s(:arg, :data),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send, nil, :_new,
                s(:sym, :data),
                s(:nil),
                s(:lvar, :data),
                s(:lvar, :keys))),
            s(:alias,
              s(:sym, :define),
              s(:sym, :new)),
            s(:def, :new_with_name,
              s(:args,
                s(:arg, :name),
                s(:arg, :data),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send, nil, :_new,
                s(:sym, :data),
                s(:lvar, :name),
                s(:lvar, :data),
                s(:lvar, :keys))),
            s(:alias,
              s(:sym, :define_with_name),
              s(:sym, :new_with_name)),
            s(:def, :compose,
              s(:args,
                s(:arg, :text),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send, nil, :_new,
                s(:sym, :text),
                s(:nil),
                s(:lvar, :text),
                s(:lvar, :keys))),
            s(:def, :compose_with_name,
              s(:args,
                s(:arg, :name),
                s(:arg, :text),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send, nil, :_new,
                s(:sym, :text),
                s(:lvar, :name),
                s(:lvar, :text),
                s(:lvar, :keys))))),
        s(:def, :initialize,
          s(:args,
            s(:arg, :type),
            s(:arg, :name),
            s(:arg, :data),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:lvar, :name),
              s(:ivasgn, :@id,
                s(:lvar, :name)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :BITMAP_ID), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:const, nil, :BITMAP_ID), :join,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
                    s(:send,
                      s(:send,
                        s(:const, nil, :BITMAP_ID), :[],
                        s(:int, 1)), :succ!))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :BITMAP_ID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:const, nil, :BITMAP_ID_TBL), :[]=,
                    s(:ivar, :@id),
                    s(:self))))),
            s(:ivasgn, :@path,
              s(:ivar, :@id)),
            s(:if,
              s(:send, nil, :bool,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::bitmap"),
                  s(:str, "exists"),
                  s(:ivar, :@id))), nil,
              s(:if,
                s(:send,
                  s(:lvar, :type), :==,
                  s(:sym, :text)),
                s(:send, nil, :tk_call,
                  s(:str, "::blt::bitmap"),
                  s(:str, "compose"),
                  s(:ivar, :@id),
                  s(:lvar, :data),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :keys)))),
                s(:send, nil, :tk_call,
                  s(:str, "::blt::bitmap"),
                  s(:str, "define"),
                  s(:ivar, :@id),
                  s(:lvar, :data),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :keys)))))))),
        s(:def, :exist?,
          s(:args),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "exists"),
              s(:ivar, :@id)))),
        s(:def, :height,
          s(:args),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "height"),
              s(:ivar, :@id)))),
        s(:def, :width,
          s(:args),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "width"),
              s(:ivar, :@id)))),
        s(:def, :source,
          s(:args),
          s(:send, nil, :tk_simple_list,
            s(:send, nil, :tk_call,
              s(:str, "::blt::bitmap"),
              s(:str, "source"),
              s(:ivar, :@id))))))))
