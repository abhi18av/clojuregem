s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:class,
      s(:const, nil, :Tree),
      s(:const, nil, :TkObject),
      s(:begin,
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::blt::tree"), :freeze)), :freeze)),
        s(:class,
          s(:const, nil, :Node),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :TreeNodeID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeNodeID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TreeNodeID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :tree),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :tpath,
                  s(:send,
                    s(:lvar, :tree), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeNodeID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TreeNodeID_TBL), :[],
                      s(:lvar, :tpath)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeNodeID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeNodeID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:kwbegin,
                        s(:rescue,
                          s(:begin,
                            s(:lvasgn, :id,
                              s(:send, nil, :Integer,
                                s(:lvar, :id))),
                            s(:if,
                              s(:send, nil, :bool,
                                s(:send, nil, :tk_call,
                                  s(:ivar, :@tpath),
                                  s(:str, "exists"),
                                  s(:lvar, :id))),
                              s(:begin,
                                s(:block,
                                  s(:send,
                                    s(:begin,
                                      s(:lvasgn, :obj,
                                        s(:send,
                                          s(:self), :allocate))), :instance_eval),
                                  s(:args),
                                  s(:begin,
                                    s(:ivasgn, :@parent,
                                      s(:ivasgn, :@tree,
                                        s(:lvar, :tree))),
                                    s(:ivasgn, :@tpath,
                                      s(:lvar, :tpath)),
                                    s(:ivasgn, :@path,
                                      s(:ivasgn, :@id,
                                        s(:lvar, :id))),
                                    s(:if,
                                      s(:send,
                                        s(:const, nil, :TreeNodeID_TBL), :[],
                                        s(:ivar, :@tpath)), nil,
                                      s(:send,
                                        s(:const, nil, :TreeNodeID_TBL), :[]=,
                                        s(:ivar, :@tpath),
                                        s(:hash))),
                                    s(:send,
                                      s(:send,
                                        s(:const, nil, :TreeNodeID_TBL), :[],
                                        s(:ivar, :@tpath)), :[]=,
                                      s(:ivar, :@id),
                                      s(:self)))),
                                s(:lvar, :obj)),
                              s(:lvar, :id))),
                          s(:resbody, nil, nil,
                            s(:lvar, :id)), nil))),
                    s(:lvar, :id))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :tree),
                s(:arg, :parent),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:lvasgn, :tpath,
                  s(:send,
                    s(:lvar, :tree), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeNodeID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:or_asgn,
                      s(:send,
                        s(:const, nil, :TreeNodeID_TBL), :[],
                        s(:lvar, :tpath)),
                      s(:hash)),
                    s(:if,
                      s(:and,
                        s(:begin,
                          s(:lvasgn, :id,
                            s(:send,
                              s(:lvar, :keys), :[],
                              s(:str, "node")))),
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:send,
                                s(:const, nil, :TreeNodeID_TBL), :[],
                                s(:lvar, :tpath)), :[],
                              s(:lvar, :id))))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :keys), :delete,
                          s(:str, "node")),
                        s(:if,
                          s(:lvar, :parent),
                          s(:send, nil, :tk_call,
                            s(:send,
                              s(:lvar, :tree), :path),
                            s(:str, "move"),
                            s(:lvar, :id),
                            s(:lvar, :parent),
                            s(:lvar, :keys)), nil),
                        s(:return,
                          s(:lvar, :obj))), nil),
                    s(:block,
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:self), :allocate))), :instance_eval),
                      s(:args),
                      s(:begin,
                        s(:send, nil, :initialize,
                          s(:lvar, :tree),
                          s(:lvar, :parent),
                          s(:lvar, :keys)),
                        s(:send,
                          s(:send,
                            s(:const, nil, :TreeNodeID_TBL), :[],
                            s(:lvar, :tpath)), :[]=,
                          s(:ivar, :@id),
                          s(:self)))),
                    s(:lvar, :obj))))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :tree),
                s(:arg, :parent),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@tree,
                    s(:lvar, :tree))),
                s(:ivasgn, :@tpath,
                  s(:send,
                    s(:ivar, :@parent), :path)),
                s(:if,
                  s(:and,
                    s(:begin,
                      s(:lvasgn, :id,
                        s(:send,
                          s(:lvar, :keys), :[],
                          s(:str, "node")))),
                    s(:send, nil, :bool,
                      s(:send, nil, :tk_call,
                        s(:ivar, :@tpath),
                        s(:str, "exists"),
                        s(:lvar, :id)))),
                  s(:begin,
                    s(:ivasgn, :@path,
                      s(:ivasgn, :@id,
                        s(:lvar, :id))),
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "node")),
                    s(:if,
                      s(:lvar, :parent),
                      s(:send, nil, :tk_call,
                        s(:ivar, :@tpath),
                        s(:str, "move"),
                        s(:ivar, :@id),
                        s(:lvar, :parent),
                        s(:lvar, :keys)), nil)),
                  s(:begin,
                    s(:if,
                      s(:lvar, :parent), nil,
                      s(:lvasgn, :parent,
                        s(:send, nil, :tk_call,
                          s(:ivar, :@tpath),
                          s(:str, "root")))),
                    s(:ivasgn, :@path,
                      s(:ivasgn, :@id,
                        s(:send, nil, :tk_call,
                          s(:ivar, :@tpath),
                          s(:str, "insert"),
                          s(:lvar, :parent),
                          s(:lvar, :keys)))))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :apply,
              s(:args,
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :apply,
                  s(:ivar, :@id),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :children,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :children,
                s(:ivar, :@id))),
            s(:def, :copy,
              s(:args,
                s(:arg, :parent),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send,
                s(:ivar, :@tree), :copy,
                s(:ivar, :@id),
                s(:lvar, :parent),
                s(:lvar, :keys))),
            s(:def, :copy_to,
              s(:args,
                s(:arg, :dest_tree),
                s(:arg, :parent),
                s(:optarg, :keys,
                  s(:hash))),
              s(:send,
                s(:ivar, :@tree), :copy_to,
                s(:ivar, :@id),
                s(:lvar, :dest_tree),
                s(:lvar, :parent),
                s(:lvar, :keys))),
            s(:def, :degree,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :degree,
                s(:ivar, :@id))),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :delete,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :depth,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :depth,
                s(:ivar, :@id))),
            s(:def, :dump,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :dump,
                s(:ivar, :@id))),
            s(:def, :dump_to_file,
              s(:args,
                s(:arg, :file)),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :dump_to_file,
                  s(:ivar, :@id),
                  s(:lvar, :file)),
                s(:self))),
            s(:def, :exist?,
              s(:args,
                s(:optarg, :keys,
                  s(:hash))),
              s(:send,
                s(:ivar, :@tree), :exist?,
                s(:ivar, :@id),
                s(:lvar, :keys))),
            s(:def, :find,
              s(:args,
                s(:optarg, :keys,
                  s(:hash))),
              s(:send,
                s(:ivar, :@tree), :find,
                s(:ivar, :@id),
                s(:lvar, :keys))),
            s(:def, :find_child,
              s(:args,
                s(:arg, :label)),
              s(:send,
                s(:ivar, :@tree), :find_child,
                s(:ivar, :@id),
                s(:lvar, :label))),
            s(:def, :first_child,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :first_child,
                s(:ivar, :@id))),
            s(:def, :get,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :get,
                s(:ivar, :@id))),
            s(:def, :get_value,
              s(:args,
                s(:arg, :key),
                s(:optarg, :default_val,
                  s(:const, nil, :None))),
              s(:send,
                s(:ivar, :@tree), :get_value,
                s(:ivar, :@id),
                s(:lvar, :key),
                s(:lvar, :default_val))),
            s(:def, :index,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :index,
                s(:ivar, :@id))),
            s(:def, :leaf?,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :leaf?,
                s(:ivar, :@id))),
            s(:def, :link?,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :link?,
                s(:ivar, :@id))),
            s(:def, :root?,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :root?,
                s(:ivar, :@id))),
            s(:def, :keys,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :keys,
                s(:ivar, :@id))),
            s(:def, :label,
              s(:args,
                s(:optarg, :text,
                  s(:nil))),
              s(:send,
                s(:ivar, :@tree), :label,
                s(:ivar, :@id),
                s(:nil))),
            s(:def, :label=,
              s(:args,
                s(:arg, :text)),
              s(:send,
                s(:ivar, :@tree), :label,
                s(:ivar, :@id),
                s(:lvar, :text))),
            s(:def, :last_child,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :last_child,
                s(:ivar, :@id))),
            s(:def, :move,
              s(:args,
                s(:arg, :dest),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :keys,
                  s(:ivar, :@id),
                  s(:lvar, :dest),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :next,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :next,
                s(:ivar, :@id))),
            s(:def, :next_sibling,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :next_sibling,
                s(:ivar, :@id))),
            s(:def, :parent,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :parent,
                s(:ivar, :@id))),
            s(:def, :fullpath,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :fullpath,
                s(:ivar, :@id))),
            s(:def, :position,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :position,
                s(:ivar, :@id))),
            s(:def, :previous,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :previous,
                s(:ivar, :@id))),
            s(:def, :prev_sibling,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :prev_sibling,
                s(:ivar, :@id))),
            s(:def, :restore,
              s(:args,
                s(:arg, :str),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :restore,
                  s(:ivar, :@id),
                  s(:lvar, :str),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :restore_overwrite,
              s(:args,
                s(:arg, :str),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :restore_overwrite,
                  s(:ivar, :@id),
                  s(:lvar, :str),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :restore_from_file,
              s(:args,
                s(:arg, :file),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :restore_from_file,
                  s(:ivar, :@id),
                  s(:lvar, :file),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :restore_overwrite_from_file,
              s(:args,
                s(:arg, :file),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :restore_overwrite_from_file,
                  s(:ivar, :@id),
                  s(:lvar, :file),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :root,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :root,
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :set,
              s(:args,
                s(:arg, :data)),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :set,
                  s(:ivar, :@id),
                  s(:lvar, :data)),
                s(:self))),
            s(:def, :size,
              s(:args),
              s(:send,
                s(:ivar, :@tree), :size,
                s(:ivar, :@id))),
            s(:def, :sort,
              s(:args,
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :sort,
                  s(:ivar, :@id),
                  s(:lvar, :keys)),
                s(:self))),
            s(:def, :type,
              s(:args,
                s(:arg, :key)),
              s(:send,
                s(:ivar, :@tree), :type,
                s(:ivar, :@id),
                s(:lvar, :key))),
            s(:def, :unset,
              s(:args,
                s(:restarg, :keys)),
              s(:begin,
                s(:send,
                  s(:ivar, :@tree), :unset,
                  s(:ivar, :@id),
                  s(:splat,
                    s(:lvar, :keys))),
                s(:self))),
            s(:def, :values,
              s(:args,
                s(:optarg, :key,
                  s(:const, nil, :None))),
              s(:send,
                s(:ivar, :@tree), :values,
                s(:ivar, :@id),
                s(:lvar, :key))))),
        s(:class,
          s(:const, nil, :Tag),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :TreeTagID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TreeTagID_TBL), :clear))),
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :TreeTag_ID,
                    s(:array,
                      s(:send,
                        s(:str, "blt_tree_tag"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :tree),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :tpath,
                  s(:send,
                    s(:lvar, :tree), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :[],
                      s(:lvar, :tpath)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeTagID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeTagID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:kwbegin,
                        s(:rescue,
                          s(:begin,
                            s(:block,
                              s(:send,
                                s(:begin,
                                  s(:lvasgn, :obj,
                                    s(:send,
                                      s(:self), :allocate))), :instance_eval),
                              s(:args),
                              s(:begin,
                                s(:ivasgn, :@parent,
                                  s(:ivasgn, :@tree,
                                    s(:lvar, :tree))),
                                s(:ivasgn, :@tpath,
                                  s(:send,
                                    s(:ivar, :@parent), :path)),
                                s(:if,
                                  s(:lvar, :id),
                                  s(:ivasgn, :@path,
                                    s(:ivasgn, :@id,
                                      s(:send,
                                        s(:send,
                                          s(:lvar, :id), :dup), :freeze))), nil),
                                s(:if,
                                  s(:send,
                                    s(:const, nil, :TreeTagID_TBL), :[],
                                    s(:ivar, :@tpath)), nil,
                                  s(:send,
                                    s(:const, nil, :TreeTagID_TBL), :[]=,
                                    s(:ivar, :@tpath),
                                    s(:hash))),
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :TreeTagID_TBL), :[],
                                    s(:ivar, :@tpath)), :[]=,
                                  s(:ivar, :@id),
                                  s(:self)))),
                            s(:lvar, :obj)),
                          s(:resbody, nil, nil,
                            s(:lvar, :id)), nil))),
                    s(:lvar, :id))))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :tree),
                s(:optarg, :tag_str,
                  s(:nil))),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@tree,
                    s(:lvar, :tree))),
                s(:ivasgn, :@tpath,
                  s(:send,
                    s(:ivar, :@parent), :path)),
                s(:if,
                  s(:lvar, :tag_str),
                  s(:ivasgn, :@path,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:send,
                          s(:lvar, :tag_str), :dup), :freeze))),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TreeTag_ID), :mutex), :synchronize),
                    s(:args),
                    s(:begin,
                      s(:ivasgn, :@path,
                        s(:ivasgn, :@id,
                          s(:send,
                            s(:const, nil, :TreeTag_ID), :join,
                            s(:send,
                              s(:const,
                                s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TreeTag_ID), :[],
                          s(:int, 1)), :succ!)))),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:const, nil, :TreeTagID_TBL), :[],
                        s(:ivar, :@tpath)), nil,
                      s(:send,
                        s(:const, nil, :TreeTagID_TBL), :[]=,
                        s(:ivar, :@tpath),
                        s(:hash))),
                    s(:send,
                      s(:send,
                        s(:const, nil, :TreeTagID_TBL), :[],
                        s(:ivar, :@tpath)), :[]=,
                      s(:ivar, :@id),
                      s(:self)))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :add,
              s(:args,
                s(:restarg, :nodes)),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "add"),
                  s(:ivar, :@id),
                  s(:splat,
                    s(:lvar, :nodes))),
                s(:self))),
            s(:def, :delete,
              s(:args,
                s(:restarg, :nodes)),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "delete"),
                  s(:ivar, :@id),
                  s(:splat,
                    s(:lvar, :nodes))),
                s(:self))),
            s(:def, :forget,
              s(:args),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "forget"),
                  s(:ivar, :@id)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TreeTagID_TBL), :[],
                      s(:ivar, :@tpath)), :delete,
                    s(:ivar, :@id))),
                s(:self))),
            s(:def, :nodes,
              s(:args),
              s(:block,
                s(:send,
                  s(:send, nil, :simplelist,
                    s(:send, nil, :tk_call,
                      s(:ivar, :@tpath),
                      s(:str, "tag"),
                      s(:str, "nodes"),
                      s(:ivar, :@id))), :collect),
                s(:args,
                  s(:arg, :node)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                  s(:ivar, :@path),
                  s(:lvar, :node)))),
            s(:def, :set,
              s(:args,
                s(:arg, :node)),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "set"),
                  s(:lvar, :node),
                  s(:ivar, :@id)),
                s(:self))),
            s(:def, :unset,
              s(:args,
                s(:arg, :node)),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "unset"),
                  s(:lvar, :node),
                  s(:ivar, :@id)),
                s(:self))))),
        s(:class,
          s(:const, nil, :Notify),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :NotifyID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :NotifyID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :NotifyID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :tree),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :tpath,
                  s(:send,
                    s(:lvar, :tree), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :NotifyID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :NotifyID_TBL), :[],
                      s(:lvar, :tpath)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :NotifyID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :NotifyID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:begin,
                        s(:block,
                          s(:send,
                            s(:begin,
                              s(:lvasgn, :obj,
                                s(:send,
                                  s(:self), :allocate))), :instance_eval),
                          s(:args),
                          s(:begin,
                            s(:ivasgn, :@parent,
                              s(:ivasgn, :@tree,
                                s(:lvar, :tree))),
                            s(:ivasgn, :@tpath,
                              s(:send,
                                s(:ivar, :@parent), :path)),
                            s(:ivasgn, :@path,
                              s(:ivasgn, :@id,
                                s(:lvar, :id))),
                            s(:or_asgn,
                              s(:send,
                                s(:const, nil, :NotifyID_TBL), :[],
                                s(:ivar, :@tpath)),
                              s(:hash)),
                            s(:send,
                              s(:send,
                                s(:const, nil, :NotifyID_TBL), :[],
                                s(:ivar, :@tpath)), :[]=,
                              s(:ivar, :@id),
                              s(:self)))),
                        s(:lvar, :obj))),
                    s(:return,
                      s(:lvar, :id)))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :tree),
                s(:restarg, :args),
                s(:blockarg, :b)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :NotifyID_TBL), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :tree), :kind_of?,
                      s(:const, nil, :Array)),
                    s(:begin,
                      s(:lvasgn, :tpath,
                        s(:send,
                          s(:send,
                            s(:lvar, :tree), :[],
                            s(:int, 0)), :path)),
                      s(:or_asgn,
                        s(:send,
                          s(:const, nil, :NotifyID_TBL), :[],
                          s(:lvar, :tpath)),
                        s(:hash)),
                      s(:if,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:send,
                                s(:const, nil, :NotifyID_TBL), :[],
                                s(:lvar, :tpath)), :[],
                              s(:send,
                                s(:lvar, :tree), :[],
                                s(:int, 1))))), nil,
                        s(:block,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:send,
                                  s(:const, nil, :NotifyID_TBL), :[],
                                  s(:lvar, :tpath)), :[]=,
                                s(:send,
                                  s(:lvar, :tree), :[],
                                  s(:int, 1)),
                                s(:lvasgn, :obj,
                                  s(:send,
                                    s(:self), :allocate)))), :instance_eval),
                          s(:args),
                          s(:begin,
                            s(:ivasgn, :@parent,
                              s(:ivasgn, :@tree,
                                s(:send,
                                  s(:lvar, :tree), :[],
                                  s(:int, 0)))),
                            s(:ivasgn, :@tpath,
                              s(:send,
                                s(:ivar, :@parent), :path)),
                            s(:ivasgn, :@path,
                              s(:ivasgn, :@id,
                                s(:send,
                                  s(:lvar, :tree), :[],
                                  s(:int, 1))))))),
                      s(:return,
                        s(:lvar, :obj))), nil),
                  s(:block,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :obj,
                          s(:send,
                            s(:self), :allocate))), :instance_eval),
                    s(:args),
                    s(:begin,
                      s(:send, nil, :initialize,
                        s(:lvar, :tree),
                        s(:splat,
                          s(:lvar, :args)),
                        s(:block_pass,
                          s(:lvar, :b))),
                      s(:or_asgn,
                        s(:send,
                          s(:const, nil, :NotifyID_TBL), :[],
                          s(:ivar, :@tpath)),
                        s(:hash)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :NotifyID_TBL), :[],
                          s(:ivar, :@tpath)), :[]=,
                        s(:ivar, :@id),
                        s(:self)))),
                  s(:return,
                    s(:lvar, :obj))))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :tree),
                s(:restarg, :args),
                s(:blockarg, :b)),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@tree,
                    s(:lvar, :tree))),
                s(:ivasgn, :@tpath,
                  s(:send,
                    s(:ivar, :@parent), :path)),
                s(:if,
                  s(:send,
                    s(:const, nil, :TkComm), :_callback_entry?,
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0))),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TkComm), :_callback_entry?,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, -1))),
                    s(:lvasgn, :cmd,
                      s(:send,
                        s(:lvar, :args), :pop)),
                    s(:if,
                      s(:lvar, :b),
                      s(:lvasgn, :cmd,
                        s(:send,
                          s(:const, nil, :Proc), :new,
                          s(:block_pass,
                            s(:lvar, :b)))),
                      s(:send, nil, :fail,
                        s(:const, nil, :ArgumentError),
                        s(:str, "lack of 'command' argument"))))),
                s(:lvasgn, :args,
                  s(:block,
                    s(:send,
                      s(:lvar, :args), :collect),
                    s(:args,
                      s(:arg, :arg)),
                    s(:send,
                      s(:str, "-"), :<<,
                      s(:send,
                        s(:lvar, :arg), :to_s)))),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :id),
                      s(:arg, :type)),
                    s(:send,
                      s(:lvar, :cmd), :call,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                        s(:ivar, :@tree),
                        s(:lvar, :id)),
                      s(:begin,
                        s(:if,
                          s(:begin,
                            s(:send,
                              s(:send,
                                s(:lvar, :type), :[],
                                s(:int, 0)), :==,
                              s(:str, "-"))),
                          s(:send,
                            s(:lvar, :type), :[],
                            s(:irange,
                              s(:int, 1),
                              s(:int, -1))),
                          s(:lvar, :type)))))),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:send, nil, :tk_call,
                      s(:ivar, :@tpath),
                      s(:str, "notify"),
                      s(:str, "create"),
                      s(:splat,
                        s(:lvar, :args))))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "notify"),
                  s(:str, "delete"),
                  s(:ivar, :@id)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :NotifyID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :NotifyID_TBL), :[],
                      s(:ivar, :@tpath)), :delete,
                    s(:ivar, :@id))),
                s(:self))),
            s(:def, :info,
              s(:args),
              s(:begin,
                s(:lvasgn, :lst,
                  s(:send, nil, :simplelist,
                    s(:send, nil, :tk_call,
                      s(:ivar, :@tpath),
                      s(:str, "notify"),
                      s(:str, "info"),
                      s(:send, nil, :id)))),
                s(:send,
                  s(:lvar, :lst), :[]=,
                  s(:int, 0),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Notify), :id2obj,
                    s(:ivar, :@tree),
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 0)))),
                s(:send,
                  s(:lvar, :lst), :[]=,
                  s(:int, 1),
                  s(:block,
                    s(:send,
                      s(:send, nil, :simplelist,
                        s(:send,
                          s(:lvar, :lst), :[],
                          s(:int, 1))), :collect),
                    s(:args,
                      s(:arg, :flag)),
                    s(:send,
                      s(:lvar, :flag), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1))))),
                s(:send,
                  s(:lvar, :lst), :[]=,
                  s(:int, 2),
                  s(:send, nil, :tk_tcl2ruby,
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 2)))),
                s(:lvar, :lst))))),
        s(:class,
          s(:const, nil, :Trace),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :TraceID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TraceID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TraceID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :tree),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :tpath,
                  s(:send,
                    s(:lvar, :tree), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TraceID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TraceID_TBL), :[],
                      s(:lvar, :tpath)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TraceID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TraceID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:kwbegin,
                        s(:rescue,
                          s(:begin,
                            s(:block,
                              s(:send,
                                s(:begin,
                                  s(:lvasgn, :obj,
                                    s(:send,
                                      s(:self), :allocate))), :instance_eval),
                              s(:args),
                              s(:begin,
                                s(:ivasgn, :@parent,
                                  s(:ivasgn, :@tree,
                                    s(:lvar, :tree))),
                                s(:ivasgn, :@tpath,
                                  s(:send,
                                    s(:ivar, :@parent), :path)),
                                s(:ivasgn, :@path,
                                  s(:ivasgn, :@id,
                                    s(:send, nil, :node))),
                                s(:or_asgn,
                                  s(:send,
                                    s(:const, nil, :TraceID_TBL), :[],
                                    s(:ivar, :@tpath)),
                                  s(:hash)),
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :TraceID_TBL), :[],
                                    s(:ivar, :@tpath)), :[]=,
                                  s(:ivar, :@id),
                                  s(:self)))),
                            s(:lvar, :obj)),
                          s(:resbody, nil, nil,
                            s(:lvar, :id)), nil))),
                    s(:lvar, :id))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :tree),
                s(:restarg, :args),
                s(:blockarg, :b)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TraceID_TBL), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :tree), :kind_of?,
                      s(:const, nil, :Array)),
                    s(:begin,
                      s(:lvasgn, :tpath,
                        s(:send,
                          s(:send,
                            s(:lvar, :tree), :[],
                            s(:int, 0)), :path)),
                      s(:or_asgn,
                        s(:send,
                          s(:const, nil, :TraceID_TBL), :[],
                          s(:lvar, :tpath)),
                        s(:hash)),
                      s(:if,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:send,
                                s(:const, nil, :TraceID_TBL), :[],
                                s(:lvar, :tpath)), :[],
                              s(:send,
                                s(:lvar, :tree), :[],
                                s(:int, 1))))), nil,
                        s(:block,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:send,
                                  s(:const, nil, :TraceID_TBL), :[],
                                  s(:lvar, :tpath)), :[]=,
                                s(:send,
                                  s(:lvar, :tree), :[],
                                  s(:int, 1)),
                                s(:lvasgn, :obj,
                                  s(:send,
                                    s(:self), :allocate)))), :instance_eval),
                          s(:args),
                          s(:begin,
                            s(:ivasgn, :@parent,
                              s(:ivasgn, :@tree,
                                s(:lvar, :tree))),
                            s(:ivasgn, :@tpath,
                              s(:send,
                                s(:ivar, :@parent), :path)),
                            s(:ivasgn, :@path,
                              s(:ivasgn, :@id,
                                s(:send,
                                  s(:lvar, :tree), :[],
                                  s(:int, 1))))))),
                      s(:return,
                        s(:lvar, :obj))), nil),
                  s(:block,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :obj,
                          s(:send,
                            s(:self), :allocate))), :instance_eval),
                    s(:args),
                    s(:begin,
                      s(:send, nil, :initialize,
                        s(:lvar, :tree),
                        s(:splat,
                          s(:lvar, :args)),
                        s(:block_pass,
                          s(:lvar, :b))),
                      s(:or_asgn,
                        s(:send,
                          s(:const, nil, :TraceID_TBL), :[],
                          s(:ivar, :@tpath)),
                        s(:hash)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TraceID_TBL), :[],
                          s(:ivar, :@tpath)), :[]=,
                        s(:ivar, :@id),
                        s(:self)))),
                  s(:return,
                    s(:lvar, :obj))))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :tree),
                s(:arg, :node),
                s(:arg, :key),
                s(:arg, :opts),
                s(:optarg, :cmd,
                  s(:nil)),
                s(:blockarg, :b)),
              s(:begin,
                s(:ivasgn, :@parent,
                  s(:ivasgn, :@tree,
                    s(:lvar, :tree))),
                s(:ivasgn, :@tpath,
                  s(:send,
                    s(:ivar, :@parent), :path)),
                s(:if,
                  s(:send,
                    s(:lvar, :cmd), :!),
                  s(:if,
                    s(:lvar, :b),
                    s(:lvasgn, :cmd,
                      s(:send,
                        s(:const, nil, :Proc), :new,
                        s(:block_pass,
                          s(:lvar, :b)))),
                    s(:send, nil, :fail,
                      s(:const, nil, :ArgumentError),
                      s(:str, "lack of 'command' argument"))), nil),
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:send, nil, :tk_call,
                      s(:ivar, :@tpath),
                      s(:str, "trace"),
                      s(:str, "create"),
                      s(:lvar, :node),
                      s(:lvar, :key),
                      s(:lvar, :opts),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args,
                          s(:arg, :t),
                          s(:arg, :id),
                          s(:arg, :k),
                          s(:arg, :ops)),
                        s(:begin,
                          s(:lvasgn, :tobj,
                            s(:send,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Tk), :BLT), :Tree), :id2obj,
                              s(:lvar, :t))),
                          s(:if,
                            s(:send,
                              s(:lvar, :tobj), :kind_of?,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Tk), :BLT), :Tree)),
                            s(:lvasgn, :nobj,
                              s(:send,
                                s(:const,
                                  s(:const,
                                    s(:const,
                                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                                s(:lvar, :tobj),
                                s(:lvar, :id))),
                            s(:lvasgn, :nobj,
                              s(:lvar, :id))),
                          s(:send,
                            s(:lvar, :cmd), :call,
                            s(:lvar, :tobj),
                            s(:lvar, :nobj),
                            s(:lvar, :k),
                            s(:lvar, :ops))))))))),
            s(:def, :id,
              s(:args),
              s(:ivar, :@id)),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "trace"),
                  s(:str, "delete"),
                  s(:ivar, :@id)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TraceID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TraceID_TBL), :[],
                      s(:send, nil, :tpath)), :delete,
                    s(:ivar, :@id))),
                s(:self))),
            s(:def, :info,
              s(:args),
              s(:begin,
                s(:lvasgn, :lst,
                  s(:send, nil, :simplelist,
                    s(:send, nil, :tk_call,
                      s(:ivar, :@tpath),
                      s(:str, "trace"),
                      s(:str, "info"),
                      s(:send, nil, :id)))),
                s(:send,
                  s(:lvar, :lst), :[]=,
                  s(:int, 0),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Trace), :id2obj,
                    s(:ivar, :@tree),
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 0)))),
                s(:send,
                  s(:lvar, :lst), :[]=,
                  s(:int, 2),
                  s(:send, nil, :simplelist,
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 2)))),
                s(:send,
                  s(:lvar, :lst), :[]=,
                  s(:int, 3),
                  s(:send, nil, :tk_tcl2ruby,
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 3)))),
                s(:lvar, :lst))))),
        s(:casgn, nil, :TreeID_TBL,
          s(:send,
            s(:const,
              s(:const, nil, :TkCore), :INTERP), :create_table)),
        s(:block,
          s(:send,
            s(:begin,
              s(:casgn, nil, :Tree_ID,
                s(:array,
                  s(:send,
                    s(:str, "blt_tree"), :freeze),
                  s(:send,
                    s(:const, nil, :TkUtil), :untrust,
                    s(:str, "00000"))))), :instance_eval),
          s(:args),
          s(:begin,
            s(:ivasgn, :@mutex,
              s(:send,
                s(:const, nil, :Mutex), :new)),
            s(:def, :mutex,
              s(:args),
              s(:ivar, :@mutex)),
            s(:send, nil, :freeze))),
        s(:def, :__keyonly_optkeys,
          s(:args),
          s(:hash,
            s(:pair,
              s(:str, "invert"),
              s(:nil)),
            s(:pair,
              s(:str, "leafonly"),
              s(:nil)),
            s(:pair,
              s(:str, "nocase"),
              s(:nil)),
            s(:pair,
              s(:str, "path"),
              s(:nil)),
            s(:pair,
              s(:str, "overwrite"),
              s(:nil)),
            s(:pair,
              s(:str, "recurse"),
              s(:nil)),
            s(:pair,
              s(:str, "tags"),
              s(:nil)),
            s(:pair,
              s(:str, "ascii"),
              s(:nil)),
            s(:pair,
              s(:str, "decreasing"),
              s(:nil)),
            s(:pair,
              s(:str, "disctionary"),
              s(:nil)),
            s(:pair,
              s(:str, "integer"),
              s(:nil)),
            s(:pair,
              s(:str, "real"),
              s(:nil)),
            s(:pair,
              s(:str, "recurse"),
              s(:nil)),
            s(:pair,
              s(:str, "reorder"),
              s(:nil)))),
        s(:defs,
          s(:self), :id2obj,
          s(:args,
            s(:arg, :id)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TreeID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :TreeID_TBL), :[],
                s(:lvar, :id)),
              s(:send,
                s(:const, nil, :TreeID_TBL), :[],
                s(:lvar, :id)),
              s(:lvar, :id)))),
        s(:defs,
          s(:self), :names,
          s(:args,
            s(:optarg, :pat,
              s(:const, nil, :None))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::tree"),
                  s(:str, "names"),
                  s(:lvar, :pat))), :collect),
            s(:args,
              s(:arg, :name)),
            s(:send, nil, :id2obj,
              s(:lvar, :name)))),
        s(:defs,
          s(:self), :destroy,
          s(:args,
            s(:restarg, :names)),
          s(:send, nil, :tk_call,
            s(:str, "::blt::tree"),
            s(:str, "destroy"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :names), :collect),
                  s(:args,
                    s(:arg, :n)),
                  s(:if,
                    s(:begin,
                      s(:send,
                        s(:lvar, :n), :kind_of?,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Tk), :BLT), :Tree))),
                    s(:send,
                      s(:lvar, :n), :id),
                    s(:lvar, :n))))))),
        s(:defs,
          s(:self), :new,
          s(:args,
            s(:optarg, :name,
              s(:nil))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TreeID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:and,
                s(:lvar, :name),
                s(:send,
                  s(:const, nil, :TreeID_TBL), :[],
                  s(:lvar, :name))),
              s(:send,
                s(:const, nil, :TreeID_TBL), :[],
                s(:lvar, :name)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:begin,
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:self), :allocate))), :instance_eval),
                  s(:args),
                  s(:begin,
                    s(:send, nil, :initialize,
                      s(:lvar, :name)),
                    s(:send,
                      s(:const, nil, :TreeID_TBL), :[]=,
                      s(:ivar, :@id),
                      s(:self)))),
                s(:lvar, :obj))))),
        s(:def, :initialize,
          s(:args,
            s(:optarg, :name,
              s(:nil))),
          s(:begin,
            s(:if,
              s(:lvar, :name),
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:lvar, :name))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :Tree_ID), :mutex), :synchronize),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@path,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:const, nil, :Tree_ID), :join,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :Tree_ID), :[],
                      s(:int, 1)), :succ!)))),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "create"),
              s(:ivar, :@id)))),
        s(:def, :__destroy_hook__,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Node), :TreeNodeID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tree), :Node), :TreeNodeID_TBL), :delete,
                s(:ivar, :@path))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Tag), :TreeTagID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tree), :Tag), :TreeTagID_TBL), :delete,
                s(:ivar, :@path))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Notify), :NotifyID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tree), :Notify), :NotifyID_TBL), :delete,
                s(:ivar, :@path))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Trace), :TraceID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tree), :Trace), :TraceID_TBL), :delete,
                s(:ivar, :@path))))),
        s(:def, :tagid,
          s(:args,
            s(:arg, :tag)),
          s(:if,
            s(:or,
              s(:or,
                s(:or,
                  s(:send,
                    s(:lvar, :tag), :kind_of?,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Node)),
                  s(:send,
                    s(:lvar, :tag), :kind_of?,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Tag))),
                s(:send,
                  s(:lvar, :tag), :kind_of?,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tree), :Notify))),
              s(:send,
                s(:lvar, :tag), :kind_of?,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Trace))),
            s(:send,
              s(:lvar, :tag), :id),
            s(:lvar, :tag))),
        s(:def, :destroy,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "destroy"),
              s(:ivar, :@id)),
            s(:self))),
        s(:def, :ancestor,
          s(:args,
            s(:arg, :node1),
            s(:arg, :node2)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
            s(:self),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "ancestor"),
              s(:send, nil, :tagid,
                s(:lvar, :node1)),
              s(:send, nil, :tagid,
                s(:lvar, :node2))))),
        s(:def, :apply,
          s(:args,
            s(:arg, :node),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "apply"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:send, nil, :__conv_keyonly_opts,
                s(:lvar, :keys))),
            s(:self))),
        s(:def, :attach,
          s(:args,
            s(:arg, :tree_obj)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "attach"),
              s(:lvar, :tree_obj)),
            s(:self))),
        s(:def, :children,
          s(:args,
            s(:arg, :node)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::tree"),
                  s(:str, "children"),
                  s(:send, nil, :tagid,
                    s(:lvar, :node)))), :collect),
            s(:args,
              s(:arg, :n)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
              s(:self),
              s(:lvar, :n)))),
        s(:def, :copy,
          s(:args,
            s(:arg, :src),
            s(:arg, :parent),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :id,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "copy"),
                s(:send, nil, :tagid,
                  s(:lvar, :src)),
                s(:send, nil, :tagid,
                  s(:lvar, :parent)),
                s(:send, nil, :__conv_keyonly_opts,
                  s(:lvar, :keys)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Node), :new,
              s(:self),
              s(:nil),
              s(:hash,
                s(:pair,
                  s(:str, "node"),
                  s(:lvar, :id)))))),
        s(:def, :copy_to,
          s(:args,
            s(:arg, :src),
            s(:arg, :dest_tree),
            s(:arg, :parent),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:lvar, :dest_tree), nil,
              s(:return,
                s(:send, nil, :copy,
                  s(:lvar, :src),
                  s(:lvar, :parent),
                  s(:lvasgn, :keys,
                    s(:hash))))),
            s(:lvasgn, :id,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "copy"),
                s(:send, nil, :tagid,
                  s(:lvar, :src)),
                s(:lvar, :dest_tree),
                s(:send, nil, :tagid,
                  s(:lvar, :parent)),
                s(:send, nil, :__conv_keyonly_opts,
                  s(:lvar, :keys)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Node), :new,
              s(:lvar, :dest_tree),
              s(:nil),
              s(:hash,
                s(:pair,
                  s(:str, "node"),
                  s(:lvar, :id)))))),
        s(:def, :degree,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "degree"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :delete,
          s(:args,
            s(:restarg, :nodes)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "delete"),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :nodes), :collect),
                    s(:args,
                      s(:arg, :node)),
                    s(:send, nil, :tagid,
                      s(:lvar, :node)))))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Node), :TreeNodeID_TBL), :mutex), :synchronize),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :nodes), :each),
                s(:args,
                  s(:arg, :node)),
                s(:if,
                  s(:send,
                    s(:lvar, :node), :kind_of?,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Node)),
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :BLT), :Tree), :Node), :TreeNodeID_TBL), :[],
                      s(:ivar, :@path)), :delete,
                    s(:send,
                      s(:lvar, :node), :id)),
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :BLT), :Tree), :Node), :TreeNodeID_TBL), :[],
                      s(:ivar, :@path)), :delete,
                    s(:send,
                      s(:lvar, :node), :to_s))))),
            s(:self))),
        s(:def, :depth,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "depth"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :dump,
          s(:args,
            s(:arg, :node)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::tree"),
                  s(:str, "dump"),
                  s(:send, nil, :tagid,
                    s(:lvar, :node)))), :collect),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :simplelist,
              s(:lvar, :n)))),
        s(:def, :dump_to_file,
          s(:args,
            s(:arg, :node),
            s(:arg, :file)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "dumpfile"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :file)),
            s(:self))),
        s(:def, :exist?,
          s(:args,
            s(:arg, :node),
            s(:optarg, :key,
              s(:const, nil, :None))),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "exists"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :key)))),
        s(:def, :find,
          s(:args,
            s(:arg, :node),
            s(:optarg, :keys,
              s(:hash))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::tree"),
                  s(:str, "find"),
                  s(:send, nil, :tagid,
                    s(:lvar, :node)),
                  s(:send, nil, :__conv_keyonly_opts,
                    s(:lvar, :keys)))), :collect),
            s(:args,
              s(:arg, :n)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
              s(:self),
              s(:lvar, :n)))),
        s(:def, :find_child,
          s(:args,
            s(:arg, :node),
            s(:arg, :label)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "findchild"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)),
                s(:lvar, :label))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :first_child,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "firstchild"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :get,
          s(:args,
            s(:arg, :node)),
          s(:send,
            s(:const, nil, :Hash), :[],
            s(:splat,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "::blt::tree"),
                  s(:str, "get"),
                  s(:send, nil, :tagid,
                    s(:lvar, :node))))))),
        s(:def, :get_value,
          s(:args,
            s(:arg, :node),
            s(:arg, :key),
            s(:optarg, :default_val,
              s(:const, nil, :None))),
          s(:send, nil, :tk_call,
            s(:str, "::blt::tree"),
            s(:str, "get"),
            s(:send, nil, :tagid,
              s(:lvar, :node)),
            s(:lvar, :key),
            s(:lvar, :default_val))),
        s(:def, :index,
          s(:args,
            s(:arg, :node)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
            s(:self),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "index"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :insert,
          s(:args,
            s(:arg, :parent),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :id,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "insert"),
                s(:send, nil, :tagid,
                  s(:lvar, :parent)),
                s(:lvar, :keys))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Node), :new,
              s(:self),
              s(:nil),
              s(:hash,
                s(:pair,
                  s(:str, "node"),
                  s(:lvar, :id)))))),
        s(:def, :ancestor?,
          s(:args,
            s(:arg, :node1),
            s(:arg, :node2)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "is"),
              s(:str, "ancestor"),
              s(:send, nil, :tagid,
                s(:lvar, :node1)),
              s(:send, nil, :tagid,
                s(:lvar, :node2))))),
        s(:def, :before?,
          s(:args,
            s(:arg, :node1),
            s(:arg, :node2)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "is"),
              s(:str, "before"),
              s(:send, nil, :tagid,
                s(:lvar, :node1)),
              s(:send, nil, :tagid,
                s(:lvar, :node2))))),
        s(:def, :leaf?,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "is"),
              s(:str, "leaf"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :link?,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "is"),
              s(:str, "link"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :root?,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "is"),
              s(:str, "root"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :keys,
          s(:args,
            s(:arg, :node),
            s(:restarg, :nodes)),
          s(:if,
            s(:send,
              s(:lvar, :nodes), :empty?),
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_call,
                s(:str, "blt::tree"),
                s(:str, "keys"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:block,
              s(:send,
                s(:send, nil, :simplelist,
                  s(:send, nil, :tk_call,
                    s(:str, "blt::tree"),
                    s(:str, "keys"),
                    s(:send, nil, :tagid,
                      s(:lvar, :node)),
                    s(:splat,
                      s(:begin,
                        s(:block,
                          s(:send,
                            s(:lvar, :nodes), :collect),
                          s(:args,
                            s(:arg, :n)),
                          s(:send, nil, :tagid,
                            s(:lvar, :n))))))), :collect),
              s(:args,
                s(:arg, :lst)),
              s(:send, nil, :simplelist,
                s(:lvar, :lst))))),
        s(:def, :label,
          s(:args,
            s(:arg, :node),
            s(:optarg, :text,
              s(:nil))),
          s(:if,
            s(:lvar, :text),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "label"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)),
                s(:lvar, :text)),
              s(:lvar, :text)),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "label"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :last_child,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "lastchild"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :link,
          s(:args,
            s(:arg, :parent),
            s(:arg, :node),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "link"),
                s(:send, nil, :tagid,
                  s(:lvar, :parent)),
                s(:send, nil, :tagid,
                  s(:lvar, :node)),
                s(:send, nil, :__conv_keyonly_opts,
                  s(:lvar, :keys)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :move,
          s(:args,
            s(:arg, :node),
            s(:arg, :dest),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "move"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:send, nil, :tagid,
                s(:lvar, :dest)),
              s(:lvar, :keys)),
            s(:self))),
        s(:def, :next,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "next"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :next_sibling,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "nextsibling"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :notify_create,
          s(:args,
            s(:restarg, :args),
            s(:blockarg, :b)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Tree), :Notify), :new,
            s(:self),
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b)))),
        s(:def, :notify_delete,
          s(:args,
            s(:arg, :id)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :id), :kind_of?,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Notify)),
              s(:send,
                s(:lvar, :id), :delete),
              s(:begin,
                s(:send, nil, :tk_call,
                  s(:ivar, :@path),
                  s(:str, "notify"),
                  s(:str, "delete"),
                  s(:lvar, :id)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :BLT), :Tree), :Notify), :NotifyID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :BLT), :Tree), :Notify), :NotifyID_TBL), :[],
                      s(:ivar, :@path)), :delete,
                    s(:send,
                      s(:lvar, :id), :to_s))))),
            s(:self))),
        s(:def, :notify_info,
          s(:args,
            s(:arg, :id)),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:ivar, :@path),
                  s(:str, "notify"),
                  s(:str, "info"),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))))),
            s(:send,
              s(:lvar, :lst), :[]=,
              s(:int, 0),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Notify), :id2obj,
                s(:self),
                s(:send,
                  s(:lvar, :lst), :[],
                  s(:int, 0)))),
            s(:send,
              s(:lvar, :lst), :[]=,
              s(:int, 1),
              s(:block,
                s(:send,
                  s(:send, nil, :simplelist,
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 1))), :collect),
                s(:args,
                  s(:arg, :flag)),
                s(:send,
                  s(:lvar, :flag), :[],
                  s(:irange,
                    s(:int, 1),
                    s(:int, -1))))),
            s(:send,
              s(:lvar, :lst), :[]=,
              s(:int, 2),
              s(:send, nil, :tk_tcl2ruby,
                s(:send,
                  s(:lvar, :lst), :[],
                  s(:int, 2)))),
            s(:lvar, :lst))),
        s(:def, :notify_names,
          s(:args),
          s(:block,
            s(:send,
              s(:send, nil, :tk_call,
                s(:ivar, :@path),
                s(:str, "notify"),
                s(:str, "names")), :collect),
            s(:args,
              s(:arg, :id)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Notify), :id2obj,
              s(:self),
              s(:lvar, :id)))),
        s(:def, :parent,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "parent"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :fullpath,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :tk_call,
            s(:str, "::blt::tree"),
            s(:str, "path"),
            s(:send, nil, :tagid,
              s(:lvar, :node)))),
        s(:def, :position,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "position"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :previous,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "previous"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :prev_sibling,
          s(:args,
            s(:arg, :node)),
          s(:begin,
            s(:lvasgn, :ret,
              s(:send, nil, :tk_call,
                s(:str, "::blt::tree"),
                s(:str, "prevsibling"),
                s(:send, nil, :tagid,
                  s(:lvar, :node)))),
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :ret), :==,
                  s(:str, "-1"))),
              s(:nil),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
                s(:self),
                s(:lvar, :ret))))),
        s(:def, :restore,
          s(:args,
            s(:arg, :node),
            s(:arg, :str),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "restore"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :str),
              s(:send, nil, :__conv_keyonly_opts,
                s(:lvar, :keys))),
            s(:self))),
        s(:def, :restore_overwrite,
          s(:args,
            s(:arg, :node),
            s(:arg, :str),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :keys,
              s(:send, nil, :__conv_keyonly_opts,
                s(:lvar, :keys))),
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "overwrite")),
            s(:send,
              s(:lvar, :keys), :delete,
              s(:sym, :overwrite)),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "restore"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :str),
              s(:str, "-overwrite"),
              s(:lvar, :keys)),
            s(:self))),
        s(:def, :restore_from_file,
          s(:args,
            s(:arg, :node),
            s(:arg, :file),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "restorefile"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :file),
              s(:send, nil, :__conv_keyonly_opts,
                s(:lvar, :keys))),
            s(:self))),
        s(:def, :restore_overwrite_from_file,
          s(:args,
            s(:arg, :node),
            s(:arg, :file),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:lvasgn, :keys,
              s(:send, nil, :__conv_keyonly_opts,
                s(:lvar, :keys))),
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "overwrite")),
            s(:send,
              s(:lvar, :keys), :delete,
              s(:sym, :overwrite)),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "restorefile"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :file),
              s(:str, "-overwrite"),
              s(:lvar, :keys)),
            s(:self))),
        s(:def, :root,
          s(:args,
            s(:optarg, :node,
              s(:const, nil, :None))),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
            s(:self),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "root"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :set,
          s(:args,
            s(:arg, :node),
            s(:arg, :data)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :data), :kind_of?,
                s(:const, nil, :Hash)), nil,
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:str, "Hash is expected for data"))),
            s(:lvasgn, :args,
              s(:array)),
            s(:block,
              s(:send,
                s(:lvar, :data), :each),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:send,
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:lvar, :k)), :<<,
                s(:lvar, :v))),
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "set"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :size,
          s(:args,
            s(:arg, :node)),
          s(:send, nil, :number,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "size"),
              s(:send, nil, :tagid,
                s(:lvar, :node))))),
        s(:def, :sort,
          s(:args,
            s(:arg, :node),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "sort"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:send, nil, :__conv_keyonly_opts,
                s(:lvar, :keys))),
            s(:self))),
        s(:def, :tag_add,
          s(:args,
            s(:arg, :tag),
            s(:restarg, :nodes)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "tag"),
              s(:str, "add"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :nodes), :collect),
                    s(:args,
                      s(:arg, :n)),
                    s(:send, nil, :tagid,
                      s(:lvar, :n)))))),
            s(:self))),
        s(:def, :tag_delete,
          s(:args,
            s(:arg, :tag),
            s(:restarg, :nodes)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "tag"),
              s(:str, "delete"),
              s(:send, nil, :tagid,
                s(:lvar, :tag)),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :nodes), :collect),
                    s(:args,
                      s(:arg, :n)),
                    s(:send, nil, :tagid,
                      s(:lvar, :n)))))),
            s(:self))),
        s(:def, :tag_forget,
          s(:args,
            s(:arg, :tag)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :tag), :kind_of?,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Tag)),
              s(:lvasgn, :tag,
                s(:send,
                  s(:lvar, :tag), :id)), nil),
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "tag"),
              s(:str, "forget"),
              s(:lvar, :tag)),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TreeTagID_TBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:send,
                  s(:const, nil, :TreeTagID_TBL), :[],
                  s(:ivar, :@path)), :delete,
                s(:lvar, :tag))),
            s(:self))),
        s(:def, :tag_get,
          s(:args,
            s(:arg, :node),
            s(:restarg, :patterns)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "get"),
                  s(:send, nil, :tagid,
                    s(:lvar, :node)),
                  s(:splat,
                    s(:begin,
                      s(:block,
                        s(:send,
                          s(:lvar, :patterns), :collect),
                        s(:args,
                          s(:arg, :pat)),
                        s(:send, nil, :tagid,
                          s(:lvar, :pat))))))), :collect),
            s(:args,
              s(:arg, :str)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Tag), :id2obj,
              s(:self),
              s(:lvar, :str)))),
        s(:def, :tag_names,
          s(:args,
            s(:optarg, :node,
              s(:const, nil, :None))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "names"),
                  s(:send, nil, :tagid,
                    s(:lvar, :node)))), :collect),
            s(:args,
              s(:arg, :str)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Tag), :id2obj,
              s(:self),
              s(:lvar, :str)))),
        s(:def, :tag_nodes,
          s(:args,
            s(:arg, :tag)),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:ivar, :@tpath),
                  s(:str, "tag"),
                  s(:str, "nodes"),
                  s(:send, nil, :tagid,
                    s(:lvar, :tag)))), :collect),
            s(:args,
              s(:arg, :node)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Node), :id2obj,
              s(:self),
              s(:lvar, :node)))),
        s(:def, :tag_set,
          s(:args,
            s(:arg, :node),
            s(:restarg, :tags)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "tag"),
              s(:str, "set"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :tags), :collect),
                    s(:args,
                      s(:arg, :t)),
                    s(:send, nil, :tagid,
                      s(:lvar, :t)))))),
            s(:self))),
        s(:def, :tag_unset,
          s(:args,
            s(:arg, :node),
            s(:restarg, :tags)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "tag"),
              s(:str, "unset"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :tags), :collect),
                    s(:args,
                      s(:arg, :t)),
                    s(:send, nil, :tagid,
                      s(:lvar, :t)))))),
            s(:self))),
        s(:def, :trace_create,
          s(:args,
            s(:restarg, :args),
            s(:blockarg, :b)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Tree), :Trace), :new,
            s(:self),
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b)))),
        s(:def, :trace_delete,
          s(:args,
            s(:restarg, :args)),
          s(:begin,
            s(:lvasgn, :args,
              s(:block,
                s(:send,
                  s(:lvar, :args), :collect),
                s(:args,
                  s(:arg, :id)),
                s(:send, nil, :tagid,
                  s(:lvar, :id)))),
            s(:send, nil, :tk_call,
              s(:ivar, :@path),
              s(:str, "trace"),
              s(:str, "delete"),
              s(:splat,
                s(:lvar, :args))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :BLT), :Tree), :Trace), :TraceID_TBL), :mutex), :synchronize),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :args), :each),
                s(:args,
                  s(:arg, :id)),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Tk), :BLT), :Tree), :Trace), :TraceID_TBL), :[],
                    s(:ivar, :@path)), :delete,
                  s(:send,
                    s(:lvar, :id), :to_s)))),
            s(:self))),
        s(:def, :trace_info,
          s(:args,
            s(:arg, :id)),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:ivar, :@path),
                  s(:str, "trace"),
                  s(:str, "info"),
                  s(:send, nil, :tagid,
                    s(:lvar, :id))))),
            s(:send,
              s(:lvar, :lst), :[]=,
              s(:int, 0),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tree), :Trace), :id2obj,
                s(:self),
                s(:send,
                  s(:lvar, :lst), :[],
                  s(:int, 0)))),
            s(:send,
              s(:lvar, :lst), :[]=,
              s(:int, 2),
              s(:send, nil, :simplelist,
                s(:send,
                  s(:lvar, :lst), :[],
                  s(:int, 2)))),
            s(:send,
              s(:lvar, :lst), :[]=,
              s(:int, 3),
              s(:send, nil, :tk_tcl2ruby,
                s(:send,
                  s(:lvar, :lst), :[],
                  s(:int, 3)))),
            s(:lvar, :lst))),
        s(:def, :trace_names,
          s(:args),
          s(:block,
            s(:send,
              s(:send, nil, :tk_call,
                s(:ivar, :@path),
                s(:str, "trace"),
                s(:str, "names")), :collect),
            s(:args,
              s(:arg, :id)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tree), :Trace), :id2obj,
              s(:self),
              s(:lvar, :id)))),
        s(:def, :type,
          s(:args,
            s(:arg, :node),
            s(:arg, :key)),
          s(:send, nil, :tk_call,
            s(:str, "::blt::tree"),
            s(:str, "type"),
            s(:send, nil, :tagid,
              s(:lvar, :node)),
            s(:lvar, :key))),
        s(:def, :unset,
          s(:args,
            s(:arg, :node),
            s(:restarg, :keys)),
          s(:begin,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "unset"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:splat,
                s(:lvar, :keys))),
            s(:self))),
        s(:def, :values,
          s(:args,
            s(:arg, :node),
            s(:optarg, :key,
              s(:const, nil, :None))),
          s(:send, nil, :simplelist,
            s(:send, nil, :tk_call,
              s(:str, "::blt::tree"),
              s(:str, "values"),
              s(:send, nil, :tagid,
                s(:lvar, :node)),
              s(:lvar, :key))))))))
