s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt.rb")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :BLT),
    s(:class,
      s(:const, nil, :Tabset),
      s(:const, nil, :TkWindow),
      s(:begin,
        s(:class,
          s(:const, nil, :Tab),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:send, nil, :include,
              s(:const, nil, :TkTreatItemFont)),
            s(:casgn, nil, :TabID_TBL,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :create_table)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :TabsetTab_ID,
                    s(:array,
                      s(:send,
                        s(:str, "blt_tabset_tab"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :init_ip_env),
              s(:args),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TabID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TabID_TBL), :clear))),
            s(:defs,
              s(:self), :id2obj,
              s(:args,
                s(:arg, :tabset),
                s(:arg, :id)),
              s(:begin,
                s(:lvasgn, :tpath,
                  s(:send,
                    s(:lvar, :tabset), :path)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TabID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TabID_TBL), :[],
                      s(:lvar, :tpath)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TabID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TabID_TBL), :[],
                          s(:lvar, :tpath)), :[],
                        s(:lvar, :id)),
                      s(:lvar, :id)),
                    s(:lvar, :id))))),
            s(:defs,
              s(:self), :new,
              s(:args,
                s(:arg, :parent),
                s(:optarg, :pos,
                  s(:nil)),
                s(:optarg, :name,
                  s(:nil)),
                s(:optarg, :keys,
                  s(:hash))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :pos), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :pos)),
                    s(:lvasgn, :name,
                      s(:nil)),
                    s(:lvasgn, :pos,
                      s(:nil))), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :name), :kind_of?,
                    s(:const, nil, :Hash)),
                  s(:begin,
                    s(:lvasgn, :keys,
                      s(:lvar, :name)),
                    s(:lvasgn, :name,
                      s(:nil))), nil),
                s(:lvasgn, :obj,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TabID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:if,
                    s(:and,
                      s(:and,
                        s(:lvar, :name),
                        s(:send,
                          s(:const, nil, :TabID_TBL), :[],
                          s(:send,
                            s(:lvar, :parent), :path))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TabID_TBL), :[],
                          s(:send,
                            s(:lvar, :parent), :path)), :[],
                        s(:lvar, :name))),
                    s(:begin,
                      s(:lvasgn, :obj,
                        s(:send,
                          s(:send,
                            s(:const, nil, :TabID_TBL), :[],
                            s(:send,
                              s(:lvar, :parent), :path)), :[],
                          s(:lvar, :name))),
                      s(:if,
                        s(:lvar, :pos),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :pos), :to_s), :==,
                            s(:str, "end")),
                          s(:send,
                            s(:lvar, :obj), :move_after,
                            s(:str, "end")),
                          s(:send,
                            s(:lvar, :obj), :move_before,
                            s(:lvar, :pos))), nil),
                      s(:if,
                        s(:and,
                          s(:lvar, :keys),
                          s(:send,
                            s(:send,
                              s(:lvar, :keys), :empty?), :!)),
                        s(:send,
                          s(:lvar, :obj), :configure), nil)),
                    s(:block,
                      s(:send,
                        s(:begin,
                          s(:lvasgn, :obj,
                            s(:send,
                              s(:self), :allocate))), :instance_eval),
                      s(:args),
                      s(:begin,
                        s(:send, nil, :initialize,
                          s(:lvar, :parent),
                          s(:lvar, :pos),
                          s(:lvar, :name),
                          s(:lvar, :keys)),
                        s(:if,
                          s(:send,
                            s(:const, nil, :TabID_TBL), :[],
                            s(:ivar, :@tpath)), nil,
                          s(:send,
                            s(:const, nil, :TabID_TBL), :[]=,
                            s(:ivar, :@tpath),
                            s(:hash))),
                        s(:send,
                          s(:send,
                            s(:const, nil, :TabID_TBL), :[],
                            s(:ivar, :@tpath)), :[]=,
                          s(:ivar, :@id),
                          s(:self)))))),
                s(:lvar, :obj))),
            s(:def, :initialize,
              s(:args,
                s(:arg, :parent),
                s(:arg, :pos),
                s(:arg, :name),
                s(:arg, :keys)),
              s(:begin,
                s(:ivasgn, :@t,
                  s(:lvar, :parent)),
                s(:ivasgn, :@tpath,
                  s(:send,
                    s(:lvar, :parent), :path)),
                s(:if,
                  s(:lvar, :name),
                  s(:begin,
                    s(:ivasgn, :@path,
                      s(:ivasgn, :@id,
                        s(:lvar, :name))),
                    s(:if,
                      s(:begin,
                        s(:send,
                          s(:send, nil, :list,
                            s(:send, nil, :tk_call,
                              s(:ivar, :@tpath),
                              s(:str, "tab"),
                              s(:str, "names"),
                              s(:ivar, :@id))), :empty?)),
                      s(:begin,
                        s(:if,
                          s(:lvar, :pos), nil,
                          s(:lvasgn, :pos,
                            s(:str, "end"))),
                        s(:send, nil, :tk_call,
                          s(:ivar, :@tpath),
                          s(:str, "insert"),
                          s(:lvar, :pos),
                          s(:ivar, :@id),
                          s(:lvar, :keys))),
                      s(:begin,
                        s(:if,
                          s(:lvar, :pos),
                          s(:begin,
                            s(:lvasgn, :idx,
                              s(:send, nil, :tk_call,
                                s(:ivar, :@tpath),
                                s(:str, "index"),
                                s(:str, "-name"),
                                s(:ivar, :@id))),
                            s(:if,
                              s(:send,
                                s(:send,
                                  s(:lvar, :pos), :to_s), :==,
                                s(:str, "end")),
                              s(:send, nil, :tk_call,
                                s(:ivar, :@tpath),
                                s(:str, "move"),
                                s(:lvar, :idx),
                                s(:str, "after"),
                                s(:str, "end")),
                              s(:send, nil, :tk_call,
                                s(:ivar, :@tpath),
                                s(:str, "move"),
                                s(:lvar, :idx),
                                s(:str, "before"),
                                s(:lvar, :pos)))), nil),
                        s(:send, nil, :tk_call,
                          s(:ivar, :@tpath),
                          s(:str, "tab"),
                          s(:str, "configure"),
                          s(:ivar, :@id),
                          s(:lvar, :keys))))),
                  s(:begin,
                    s(:if,
                      s(:lvar, :pos), nil,
                      s(:lvasgn, :pos,
                        s(:str, "end"))),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TabsetTab_ID), :mutex), :synchronize),
                      s(:args),
                      s(:begin,
                        s(:ivasgn, :@path,
                          s(:ivasgn, :@id,
                            s(:send,
                              s(:const, nil, :TabsetTab_ID), :join,
                              s(:send,
                                s(:const,
                                  s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
                        s(:send,
                          s(:send,
                            s(:const, nil, :TabsetTab_ID), :[],
                            s(:int, 1)), :succ!))),
                    s(:send, nil, :tk_call,
                      s(:ivar, :@tpath),
                      s(:str, "insert"),
                      s(:lvar, :pos),
                      s(:ivar, :@id),
                      s(:lvar, :keys)))))),
            s(:def, :bind,
              s(:args,
                s(:arg, :context),
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:or,
                    s(:send,
                      s(:const, nil, :TkComm), :_callback_entry?,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0))),
                    s(:send,
                      s(:send, nil, :block_given?), :!)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:const, nil, :Proc), :new))),
                s(:send,
                  s(:ivar, :@t), :tab_bind,
                  s(:ivar, :@id),
                  s(:lvar, :context),
                  s(:lvar, :cmd),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :bind_append,
              s(:args,
                s(:arg, :context),
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:or,
                    s(:send,
                      s(:const, nil, :TkComm), :_callback_entry?,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0))),
                    s(:send,
                      s(:send, nil, :block_given?), :!)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:lvar, :args), :shift)),
                  s(:lvasgn, :cmd,
                    s(:send,
                      s(:const, nil, :Proc), :new))),
                s(:send,
                  s(:ivar, :@t), :tab_bind_append,
                  s(:ivar, :@id),
                  s(:lvar, :context),
                  s(:lvar, :cmd),
                  s(:splat,
                    s(:lvar, :args))),
                s(:self))),
            s(:def, :bind_remove,
              s(:args,
                s(:arg, :context)),
              s(:begin,
                s(:send,
                  s(:ivar, :@t), :tab_bind_remove,
                  s(:ivar, :@id),
                  s(:lvar, :context)),
                s(:self))),
            s(:def, :bindinfo,
              s(:args,
                s(:optarg, :context,
                  s(:nil))),
              s(:send,
                s(:ivar, :@t), :tab_bindinfo,
                s(:ivar, :@id),
                s(:lvar, :context))),
            s(:def, :cget_tkstring,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@t), :tab_cget_tkstring,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :cget,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@t), :tab_cget,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :cget_strict,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@t), :tab_cget_strict,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :configure,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@t), :tab_configure,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :configinfo,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@t), :tab_configinfo,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :current_configinfo,
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:ivar, :@t), :current_tab_configinfo,
                s(:ivar, :@id),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :delete,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@t), :delete,
                  s(:ivar, :@id)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TabID_TBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TabID_TBL), :[],
                      s(:ivar, :@tpath)), :delete,
                    s(:ivar, :@id))),
                s(:self))),
            s(:def, :get_name,
              s(:args),
              s(:send,
                s(:ivar, :@id), :dup)),
            s(:def, :focus,
              s(:args),
              s(:send,
                s(:ivar, :@t), :focus,
                s(:send,
                  s(:self), :index))),
            s(:def, :index,
              s(:args),
              s(:send,
                s(:ivar, :@t), :index_name,
                s(:ivar, :@id))),
            s(:def, :invoke,
              s(:args),
              s(:send,
                s(:ivar, :@t), :invoke,
                s(:send,
                  s(:self), :index))),
            s(:def, :move_before,
              s(:args,
                s(:arg, :idx)),
              s(:send,
                s(:ivar, :@t), :move_before,
                s(:send,
                  s(:self), :index),
                s(:lvar, :idx))),
            s(:def, :move_after,
              s(:args,
                s(:arg, :idx)),
              s(:send,
                s(:ivar, :@t), :move_after,
                s(:send,
                  s(:self), :index),
                s(:lvar, :idx))),
            s(:def, :perforation_highlight,
              s(:args,
                s(:arg, :mode)),
              s(:send,
                s(:ivar, :@t), :perforation_highlight,
                s(:send,
                  s(:self), :index),
                s(:lvar, :mode))),
            s(:def, :perforation_invoke,
              s(:args),
              s(:send,
                s(:ivar, :@t), :perforation_invoke,
                s(:send,
                  s(:self), :index))),
            s(:def, :see,
              s(:args),
              s(:send,
                s(:ivar, :@t), :see,
                s(:send,
                  s(:self), :index))),
            s(:def, :tearoff,
              s(:args,
                s(:optarg, :name,
                  s(:const, nil, :None))),
              s(:send,
                s(:ivar, :@t), :tab_tearoff,
                s(:send,
                  s(:self), :index),
                s(:splat,
                  s(:send, nil, :args)))))),
        s(:class,
          s(:const, nil, :NamedTab),
          s(:const, nil, :Tab),
          s(:defs,
            s(:self), :new,
            s(:args,
              s(:arg, :parent),
              s(:arg, :name)),
            s(:super,
              s(:lvar, :parent),
              s(:nil),
              s(:lvar, :name),
              s(:hash)))),
        s(:send, nil, :include,
          s(:const, nil, :X_Scrollable)),
        s(:send, nil, :include,
          s(:const, nil, :TkItemConfigMethod)),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::blt::tabset"), :freeze)), :freeze)),
        s(:casgn, nil, :WidgetClassName,
          s(:send,
            s(:str, "Tabset"), :freeze)),
        s(:or_asgn,
          s(:send,
            s(:const, nil, :WidgetClassNames), :[],
            s(:const, nil, :WidgetClassName)),
          s(:self)),
        s(:def, :__destroy_hook__,
          s(:args),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :TabID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :TabID_TBL), :delete,
              s(:ivar, :@path)))),
        s(:def, :__boolval_optkeys,
          s(:args),
          s(:send,
            s(:send,
              s(:super), :<<,
              s(:str, "samewidth")), :<<,
            s(:str, "tearoff"))),
        s(:send, nil, :private,
          s(:sym, :__strval_optkeys)),
        s(:def, :__strval_optkeys,
          s(:args),
          s(:send,
            s(:send,
              s(:super), :<<,
              s(:str, "tabbackground")), :<<,
            s(:str, "tabforeground"))),
        s(:send, nil, :private,
          s(:sym, :__strval_optkeys)),
        s(:def, :__item_cget_cmd,
          s(:args,
            s(:arg, :id)),
          s(:array,
            s(:send,
              s(:self), :path),
            s(:str, "tab"),
            s(:str, "cget"),
            s(:lvar, :id))),
        s(:send, nil, :private,
          s(:sym, :__item_cget_cmd)),
        s(:def, :__item_config_cmd,
          s(:args,
            s(:arg, :id)),
          s(:array,
            s(:send,
              s(:self), :path),
            s(:str, "tab"),
            s(:str, "configure"),
            s(:lvar, :id))),
        s(:send, nil, :private,
          s(:sym, :__item_config_cmd)),
        s(:def, :__item_pathname,
          s(:args,
            s(:arg, :tagOrId)),
          s(:if,
            s(:send,
              s(:lvar, :tagOrId), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab)),
            s(:send,
              s(:send,
                s(:send,
                  s(:self), :path), :+,
                s(:str, ";")), :+,
              s(:send,
                s(:send,
                  s(:lvar, :tagOrId), :id), :to_s)),
            s(:send,
              s(:send,
                s(:send,
                  s(:self), :path), :+,
                s(:str, ";")), :+,
              s(:send,
                s(:lvar, :tagOrId), :to_s)))),
        s(:send, nil, :private,
          s(:sym, :__item_pathname)),
        s(:alias,
          s(:sym, :tab_cget_tkstring),
          s(:sym, :itemcget_tkstring)),
        s(:alias,
          s(:sym, :tab_cget),
          s(:sym, :itemcget)),
        s(:alias,
          s(:sym, :tab_cget_strict),
          s(:sym, :itemcget_strict)),
        s(:alias,
          s(:sym, :tab_configure),
          s(:sym, :itemconfigure)),
        s(:alias,
          s(:sym, :tab_configinfo),
          s(:sym, :itemconfiginfo)),
        s(:alias,
          s(:sym, :current_tab_configinfo),
          s(:sym, :current_itemconfiginfo)),
        s(:def, :__item_strval_optkeys,
          s(:args,
            s(:arg, :id)),
          s(:send,
            s(:super,
              s(:lvar, :id)), :<<,
            s(:str, "shadow"))),
        s(:send, nil, :private,
          s(:sym, :__item_strval_optkeys)),
        s(:def, :tagid,
          s(:args,
            s(:arg, :tab)),
          s(:if,
            s(:send,
              s(:lvar, :tab), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab)),
            s(:send,
              s(:lvar, :tab), :id),
            s(:lvar, :tab))),
        s(:def, :tagindex,
          s(:args,
            s(:arg, :tab)),
          s(:if,
            s(:send,
              s(:lvar, :tab), :kind_of?,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab)),
            s(:send,
              s(:lvar, :tab), :index),
            s(:lvar, :tab))),
        s(:def, :activate,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "activate"),
              s(:send, nil, :tagindex,
                s(:lvar, :index))),
            s(:self))),
        s(:alias,
          s(:sym, :highlight),
          s(:sym, :activate)),
        s(:def, :tabbind,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind,
              s(:array,
                s(:send, nil, :path),
                s(:str, "bind"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag))),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :tabbind_append,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:or,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send,
                  s(:send, nil, :block_given?), :!)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:lvasgn, :cmd,
                s(:send,
                  s(:const, nil, :Proc), :new))),
            s(:send, nil, :_bind_append,
              s(:array,
                s(:send, nil, :path),
                s(:str, "bind"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag))),
              s(:lvar, :context),
              s(:lvar, :cmd),
              s(:splat,
                s(:lvar, :args))),
            s(:self))),
        s(:def, :tabbind_remove,
          s(:args,
            s(:arg, :tag),
            s(:arg, :context)),
          s(:begin,
            s(:send, nil, :_bind_remove,
              s(:array,
                s(:send, nil, :path),
                s(:str, "bind"),
                s(:send, nil, :tagid,
                  s(:lvar, :tag))),
              s(:lvar, :context)),
            s(:self))),
        s(:def, :tabbindinfo,
          s(:args,
            s(:arg, :tag),
            s(:optarg, :context,
              s(:nil))),
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind"),
              s(:send, nil, :tagid,
                s(:lvar, :tag))),
            s(:lvar, :context))),
        s(:def, :delete,
          s(:args,
            s(:arg, :first),
            s(:optarg, :last,
              s(:const, nil, :None))),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "delete"),
              s(:send, nil, :tagindex,
                s(:lvar, :first)),
              s(:send, nil, :tagindex,
                s(:lvar, :last))),
            s(:if,
              s(:send,
                s(:lvar, :first), :kind_of?,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tabset), :Tab)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TabID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:send,
                    s(:const, nil, :TabID_TBL), :[],
                    s(:ivar, :@path)), :delete,
                  s(:send,
                    s(:lvar, :first), :id))), nil),
            s(:if,
              s(:send,
                s(:lvar, :last), :kind_of?,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tabset), :Tab)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TabID_TBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:send,
                    s(:const, nil, :TabID_TBL), :[],
                    s(:ivar, :@path)), :delete,
                  s(:send,
                    s(:lvar, :last), :id))), nil),
            s(:self))),
        s(:def, :focus,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "focus"),
              s(:send, nil, :tagindex,
                s(:lvar, :index))),
            s(:self))),
        s(:def, :get_tab,
          s(:args,
            s(:arg, :index)),
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :idx,
                  s(:send, nil, :tk_send_without_enc,
                    s(:str, "get"),
                    s(:send, nil, :tagindex,
                      s(:lvar, :index))))), :empty?),
            s(:nil),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :id2obj,
              s(:self),
              s(:lvar, :idx)))),
        s(:def, :get_tabobj,
          s(:args,
            s(:arg, :index)),
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :idx,
                  s(:send, nil, :tk_send_without_enc,
                    s(:str, "get"),
                    s(:send, nil, :tagindex,
                      s(:lvar, :index))))), :empty?),
            s(:nil),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :new,
              s(:self),
              s(:nil),
              s(:send, nil, :name),
              s(:hash)))),
        s(:def, :index,
          s(:args,
            s(:arg, :str)),
          s(:send, nil, :num_or_str,
            s(:send, nil, :tk_send,
              s(:str, "index"),
              s(:lvar, :str)))),
        s(:def, :index_name,
          s(:args,
            s(:arg, :tab)),
          s(:send, nil, :num_or_str,
            s(:send, nil, :tk_send,
              s(:str, "index"),
              s(:str, "-name"),
              s(:send, nil, :tagid,
                s(:lvar, :tab))))),
        s(:def, :insert,
          s(:args,
            s(:arg, :pos),
            s(:arg, :tab),
            s(:optarg, :keys,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :pos), :nil?),
              s(:lvasgn, :pos,
                s(:str, "end")), nil),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :new,
              s(:self),
              s(:send, nil, :tagindex,
                s(:lvar, :pos)),
              s(:send, nil, :tagid,
                s(:lvar, :tab)),
              s(:lvar, :keys)))),
        s(:def, :insert_tabs,
          s(:args,
            s(:arg, :pos),
            s(:restarg, :tabs)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :pos), :nil?),
              s(:lvasgn, :pos,
                s(:str, "end")), nil),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :tabs), :[],
                  s(:int, -1)), :kind_of?,
                s(:const, nil, :Hash)),
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :tabs), :pop)),
              s(:lvasgn, :keys,
                s(:hash))),
            s(:if,
              s(:send,
                s(:lvar, :tabs), :empty?),
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:str, "no tabs is given")), nil),
            s(:block,
              s(:send,
                s(:lvar, :tabs), :map!),
              s(:args,
                s(:arg, :tab)),
              s(:send, nil, :tagid,
                s(:lvar, :tab))),
            s(:send, nil, :tk_send,
              s(:str, "insert"),
              s(:send, nil, :tagindex,
                s(:lvar, :pos)),
              s(:splat,
                s(:begin,
                  s(:send,
                    s(:lvar, :tabs), :+,
                    s(:array,
                      s(:lvar, :keys)))))),
            s(:block,
              s(:send,
                s(:lvar, :tabs), :collect),
              s(:args,
                s(:arg, :tab)),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :new,
                s(:self),
                s(:nil),
                s(:send, nil, :tagid,
                  s(:lvar, :tab)))))),
        s(:def, :invoke,
          s(:args,
            s(:arg, :index)),
          s(:send, nil, :tk_send,
            s(:str, "invoke"),
            s(:send, nil, :tagindex,
              s(:lvar, :index)))),
        s(:def, :move_before,
          s(:args,
            s(:arg, :index),
            s(:arg, :base_idx)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "move"),
              s(:send, nil, :tagindex,
                s(:lvar, :index)),
              s(:str, "before"),
              s(:send, nil, :tagindex,
                s(:lvar, :base_idx))),
            s(:self))),
        s(:def, :move_after,
          s(:args,
            s(:arg, :index),
            s(:arg, :base_idx)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "move"),
              s(:send, nil, :tagindex,
                s(:lvar, :index)),
              s(:str, "after"),
              s(:send, nil, :tagindex,
                s(:lvar, :base_idx))),
            s(:self))),
        s(:def, :nearest,
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :id2obj,
            s(:self),
            s(:send, nil, :num_or_str,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "nearest"),
                s(:lvar, :x),
                s(:lvar, :y))))),
        s(:def, :perforation_activate,
          s(:args,
            s(:arg, :mode)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "perforation"),
              s(:str, "activate"),
              s(:lvar, :mode)),
            s(:self))),
        s(:def, :perforation_highlight,
          s(:args,
            s(:arg, :index),
            s(:restarg, :args)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :args), :empty?),
              s(:send, nil, :tk_send,
                s(:str, "perforation"),
                s(:str, "highlight"),
                s(:lvar, :index)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :args), :size), :==,
                  s(:int, 1)),
                s(:send, nil, :tk_send,
                  s(:str, "perforation"),
                  s(:str, "highlight"),
                  s(:send, nil, :tagindex,
                    s(:lvar, :index)),
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:send, nil, :tk_send,
                  s(:str, "perforation"),
                  s(:str, "highlight"),
                  s(:send, nil, :tagindex,
                    s(:lvar, :index)),
                  s(:splat,
                    s(:lvar, :args))))),
            s(:self))),
        s(:def, :perforation_invoke,
          s(:args,
            s(:optarg, :index,
              s(:nil))),
          s(:if,
            s(:lvar, :index),
            s(:send, nil, :tk_send,
              s(:str, "perforation"),
              s(:str, "invoke"),
              s(:send, nil, :tagindex,
                s(:lvar, :index))),
            s(:send, nil, :tk_send,
              s(:str, "perforation"),
              s(:str, "invoke")))),
        s(:def, :scan_mark,
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "scan"),
              s(:str, "mark"),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:self))),
        s(:def, :scan_dragto,
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "scan"),
              s(:str, "dragto"),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:self))),
        s(:def, :see,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "see"),
              s(:send, nil, :tagindex,
                s(:lvar, :index))),
            s(:self))),
        s(:def, :size,
          s(:args),
          s(:send, nil, :number,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "size")))),
        s(:def, :select,
          s(:args,
            s(:arg, :index)),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "select"),
              s(:send, nil, :tagindex,
                s(:lvar, :index))),
            s(:self))),
        s(:def, :tab_dockall,
          s(:args),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "tab"),
              s(:str, "dockall")),
            s(:self))),
        s(:def, :tab_names,
          s(:args,
            s(:optarg, :pat,
              s(:const, nil, :None))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "tab"),
                  s(:str, "names"),
                  s(:lvar, :pat))), :collect),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :id2obj,
              s(:self),
              s(:lvar, :name)))),
        s(:def, :tab_objs,
          s(:args,
            s(:optarg, :pat,
              s(:const, nil, :None))),
          s(:block,
            s(:send,
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_send,
                  s(:str, "tab"),
                  s(:str, "names"),
                  s(:lvar, :pat))), :collect),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :BLT), :Tabset), :Tab), :new,
              s(:self),
              s(:nil),
              s(:lvar, :name),
              s(:hash)))),
        s(:def, :tab_ids,
          s(:args,
            s(:optarg, :pat,
              s(:const, nil, :None))),
          s(:send, nil, :simplelist,
            s(:send, nil, :tk_send,
              s(:str, "tab"),
              s(:str, "names"),
              s(:lvar, :pat)))),
        s(:def, :tab_pageheight,
          s(:args),
          s(:send, nil, :number,
            s(:send, nil, :tk_send,
              s(:str, "tab"),
              s(:str, "pageheight")))),
        s(:def, :tab_pagewidth,
          s(:args),
          s(:send, nil, :number,
            s(:send, nil, :tk_send,
              s(:str, "tab"),
              s(:str, "pagewidth")))),
        s(:def, :tab_tearoff,
          s(:args,
            s(:arg, :index),
            s(:optarg, :parent,
              s(:const, nil, :None))),
          s(:send, nil, :window,
            s(:send, nil, :tk_send,
              s(:str, "tab"),
              s(:str, "tearoff"),
              s(:send, nil, :tagindex,
                s(:lvar, :index)),
              s(:lvar, :parent)))),
        s(:def, :xscrollcommand,
          s(:args,
            s(:optarg, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:begin,
            s(:send, nil, :configure_cmd,
              s(:str, "scrollcommand"),
              s(:lvar, :cmd)),
            s(:self))),
        s(:alias,
          s(:sym, :scrollcommand),
          s(:sym, :xscrollcommand)),
        s(:def, :xview,
          s(:args,
            s(:restarg, :index)),
          s(:if,
            s(:send,
              s(:lvar, :index), :empty?),
            s(:send, nil, :list,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "view"))),
            s(:begin,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "view"),
                s(:splat,
                  s(:lvar, :index))),
              s(:self)))),
        s(:alias,
          s(:sym, :view),
          s(:sym, :xview)),
        s(:alias,
          s(:sym, :view_moveto),
          s(:sym, :xview_moveto)),
        s(:alias,
          s(:sym, :view_scroll),
          s(:sym, :xview_scroll)),
        s(:alias,
          s(:sym, :scrollbar),
          s(:sym, :xscrollbar))))))
