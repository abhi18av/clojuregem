s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/itcl.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "Itcl")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Itcl),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Tk)),
        s(:send, nil, :extend,
          s(:const, nil, :Tk)),
        s(:casgn, nil, :LIBRARY,
          s(:send,
            s(:const, nil, :TkVarAccess), :new,
            s(:str, "::itcl::library"))),
        s(:casgn, nil, :PURIST,
          s(:send,
            s(:const, nil, :TkVarAccess), :new,
            s(:str, "::itcl::purist"))),
        s(:casgn, nil, :VERSION,
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :TkCore), :INTERP), :_invoke,
              s(:str, "set"),
              s(:str, "::itcl::version")), :freeze)),
        s(:casgn, nil, :PATCHLEVEL,
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :TkCore), :INTERP), :_invoke,
              s(:str, "set"),
              s(:str, "::itcl::patchLevel")), :freeze)),
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "Itcl"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "Itcl")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:class,
          s(:const, nil, :ItclObject),
          s(:const, nil, :TkObject),
          s(:begin,
            s(:casgn, nil, :ITCL_CLASSNAME,
              s(:send,
                s(:str, ""), :freeze)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:casgn, nil, :ITCL_OBJ_ID,
                    s(:array,
                      s(:send,
                        s(:str, "itclobj"), :freeze),
                      s(:send,
                        s(:const, nil, :TkUtil), :untrust,
                        s(:str, "00000"))))), :instance_eval),
              s(:args),
              s(:begin,
                s(:ivasgn, :@mutex,
                  s(:send,
                    s(:const, nil, :Mutex), :new)),
                s(:def, :mutex,
                  s(:args),
                  s(:ivar, :@mutex)),
                s(:send, nil, :freeze))),
            s(:casgn, nil, :ITCL_OBJ_TBL,
              s(:send,
                s(:const, nil, :TkUtil), :untrust,
                s(:hash))),
            s(:def, :initialize,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:begin,
                      s(:ivasgn, :@klass,
                        s(:const,
                          s(:send,
                            s(:self), :class), :ITCL_CLASSNAME))), :empty?),
                  s(:send, nil, :fail,
                    s(:const, nil, :RuntimeError),
                    s(:str, "unknown itcl class (abstract class?)")), nil),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Tk), :Itcl), :ItclObject), :ITCL_OBJ_ID), :mutex), :synchronize),
                  s(:args),
                  s(:begin,
                    s(:ivasgn, :@id,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :Itcl), :ItclObject), :TCL_OBJ_ID), :join,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
                    s(:send,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :Itcl), :ItclObject), :ITCL_OBJ_ID), :[],
                        s(:int, 1)), :succ!))),
                s(:ivasgn, :@path,
                  s(:ivar, :@id)))),
            s(:defs,
              s(:self), :call_proc,
              s(:args,
                s(:arg, :name),
                s(:restarg, :args)),
              s(:send, nil, :tk_call,
                s(:dstr,
                  s(:begin,
                    s(:const, nil, :ITCL_CLASSNAME)),
                  s(:str, "::"),
                  s(:begin,
                    s(:send, nil, :cmd))),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :call_method,
              s(:args,
                s(:arg, :name),
                s(:restarg, :args)),
              s(:send, nil, :tk_call,
                s(:ivar, :@path),
                s(:lvar, :name),
                s(:splat,
                  s(:lvar, :args)))),
            s(:def, :isa,
              s(:args,
                s(:arg, :klass)),
              s(:send, nil, :bool,
                s(:send, nil, :tk_call,
                  s(:ivar, :@path),
                  s(:str, "isa"),
                  s(:lvar, :klass)))),
            s(:alias,
              s(:sym, :itcl_kind_of?),
              s(:sym, :isa)),
            s(:def, :info_class,
              s(:args),
              s(:send, nil, :tk_call,
                s(:ivar, :@path),
                s(:str, "info"),
                s(:str, "class"))),
            s(:def, :info_inherit,
              s(:args),
              s(:send, nil, :simplelist,
                s(:send, nil, :tk_call,
                  s(:ivar, :@path),
                  s(:str, "info"),
                  s(:str, "inherit")))),
            s(:def, :info_heritage,
              s(:args),
              s(:send, nil, :list,
                s(:send, nil, :tk_call,
                  s(:ivar, :@path),
                  s(:str, "info"),
                  s(:str, "heritage")))),
            s(:def, :info_function,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, -1)), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:begin,
                    s(:lvasgn, :params,
                      s(:send,
                        s(:lvar, :args), :pop)),
                    s(:block,
                      s(:send,
                        s(:lvar, :params), :each),
                      s(:args,
                        s(:arg, :param)),
                      s(:begin,
                        s(:lvasgn, :param,
                          s(:send,
                            s(:lvar, :param), :to_s)),
                        s(:send,
                          s(:lvar, :args), :<<,
                          s(:begin,
                            s(:if,
                              s(:begin,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :param), :[],
                                    s(:int, 0)), :==,
                                  s(:str, "-"))),
                              s(:lvar, :param),
                              s(:dstr,
                                s(:str, "-"),
                                s(:begin,
                                  s(:lvar, :param))))))))), nil),
                s(:send, nil, :list,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@path),
                    s(:str, "info"),
                    s(:str, "function"),
                    s(:splat,
                      s(:lvar, :args)))))),
            s(:def, :info_variable,
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, -1)), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:begin,
                    s(:lvasgn, :params,
                      s(:send,
                        s(:lvar, :args), :pop)),
                    s(:block,
                      s(:send,
                        s(:lvar, :params), :each),
                      s(:args,
                        s(:arg, :param)),
                      s(:begin,
                        s(:lvasgn, :param,
                          s(:send,
                            s(:lvar, :param), :to_s)),
                        s(:send,
                          s(:lvar, :args), :<<,
                          s(:begin,
                            s(:if,
                              s(:begin,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :param), :[],
                                    s(:int, 0)), :==,
                                  s(:str, "-"))),
                              s(:lvar, :param),
                              s(:dstr,
                                s(:str, "-"),
                                s(:begin,
                                  s(:lvar, :param))))))))), nil),
                s(:send, nil, :list,
                  s(:send, nil, :tk_call,
                    s(:ivar, :@path),
                    s(:str, "info"),
                    s(:str, "variable"),
                    s(:splat,
                      s(:lvar, :args)))))))),
        s(:defs,
          s(:self), :body,
          s(:args,
            s(:arg, :klass),
            s(:arg, :func),
            s(:arg, :args),
            s(:arg, :body)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::body"),
            s(:dstr,
              s(:begin,
                s(:lvar, :klass)),
              s(:str, "::"),
              s(:begin,
                s(:lvar, :func))),
            s(:lvar, :args),
            s(:lvar, :body))),
        s(:defs,
          s(:self), :code,
          s(:args,
            s(:arg, :cmd),
            s(:restarg, :args)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::code"),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args)))),
        s(:defs,
          s(:self), :code_in_namespace,
          s(:args,
            s(:arg, :namespace),
            s(:arg, :cmd),
            s(:restarg, :args)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::code"),
            s(:str, "-namespace"),
            s(:lvar, :namespace),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args)))),
        s(:defs,
          s(:self), :configbody,
          s(:args,
            s(:arg, :klass),
            s(:arg, :var),
            s(:arg, :body)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::configbody"),
            s(:dstr,
              s(:begin,
                s(:lvar, :klass)),
              s(:str, "::"),
              s(:begin,
                s(:lvar, :var))),
            s(:lvar, :body))),
        s(:defs,
          s(:self), :create_itcl_class,
          s(:args,
            s(:arg, :name),
            s(:arg, :body)),
          s(:begin,
            s(:send,
              s(:const,
                s(:const, nil, :TkCore), :INTERP), :_invoke,
              s(:str, "::itcl::class"),
              s(:lvar, :name),
              s(:lvar, :body)),
            s(:lvasgn, :klass,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Itcl), :ItclObject))),
            s(:send,
              s(:lvar, :klass), :const_set,
              s(:str, "ITCL_CLASSNAME"),
              s(:send,
                s(:send,
                  s(:lvar, :name), :dup), :freeze)),
            s(:lvar, :klass))),
        s(:defs,
          s(:self), :delete_itcl_class,
          s(:args,
            s(:restarg, :names)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::delete"),
            s(:str, "class"),
            s(:splat,
              s(:lvar, :names)))),
        s(:defs,
          s(:self), :delete_itcl_object,
          s(:args,
            s(:restarg, :names)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::delete"),
            s(:str, "object"),
            s(:splat,
              s(:lvar, :names)))),
        s(:defs,
          s(:self), :delete_namespace,
          s(:args,
            s(:restarg, :names)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::delete"),
            s(:str, "namespace"),
            s(:splat,
              s(:lvar, :names)))),
        s(:defs,
          s(:self), :ensemble,
          s(:args,
            s(:arg, :name),
            s(:restarg, :args)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::ensemble"),
            s(:lvar, :name),
            s(:splat,
              s(:lvar, :args)))),
        s(:defs,
          s(:self), :find_classes,
          s(:args,
            s(:optarg, :pat,
              s(:const, nil, :None))),
          s(:send, nil, :simplelist,
            s(:send, nil, :tk_call,
              s(:str, "::itcl::find"),
              s(:str, "classes"),
              s(:lvar, :pat)))),
        s(:defs,
          s(:self), :find_objects,
          s(:args,
            s(:restarg, :args)),
          s(:send, nil, :simplelist,
            s(:send, nil, :tk_call,
              s(:str, "::itcl::find"),
              s(:str, "objects"),
              s(:splat,
                s(:lvar, :args))))),
        s(:defs,
          s(:self), :is_itcl_class,
          s(:args,
            s(:arg, :target)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::itcl::is"),
              s(:str, "class"),
              s(:lvar, :target)))),
        s(:defs,
          s(:self), :is_itcl_object,
          s(:args,
            s(:arg, :target)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::itcl::is"),
              s(:str, "object"),
              s(:lvar, :target)))),
        s(:defs,
          s(:self), :create_local_obj,
          s(:args,
            s(:arg, :klass),
            s(:arg, :name),
            s(:restarg, :args)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::local"),
            s(:lvar, :klass),
            s(:lvar, :name),
            s(:splat,
              s(:lvar, :args)))),
        s(:defs,
          s(:self), :is_itcl_instance,
          s(:args,
            s(:arg, :klass),
            s(:arg, :target)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_call,
              s(:str, "::itcl::is"),
              s(:str, "object"),
              s(:str, "-class"),
              s(:lvar, :klass),
              s(:lvar, :target)))),
        s(:defs,
          s(:self), :scope,
          s(:args,
            s(:arg, :var)),
          s(:send, nil, :tk_call,
            s(:str, "::itcl::scope"),
            s(:lvar, :var)))))))
