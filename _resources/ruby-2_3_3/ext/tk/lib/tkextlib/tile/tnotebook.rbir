s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tile.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :Tile),
      s(:begin,
        s(:class,
          s(:const, nil, :TNotebook),
          s(:const, nil, :TkWindow), nil),
        s(:casgn, nil, :Notebook,
          s(:const, nil, :TNotebook))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tile), :TNotebook),
    s(:const, nil, :TkWindow),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__item_cget_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:str, "tab"),
          s(:lvar, :id))),
      s(:send, nil, :private,
        s(:sym, :__item_cget_cmd)),
      s(:def, :__item_config_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:str, "tab"),
          s(:lvar, :id))),
      s(:send, nil, :private,
        s(:sym, :__item_config_cmd)),
      s(:def, :__item_listval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:array)),
      s(:send, nil, :private,
        s(:sym, :__item_listval_optkeys)),
      s(:def, :__item_methodcall_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:hash)),
      s(:send, nil, :private,
        s(:sym, :__item_methodcall_optkeys)),
      s(:alias,
        s(:sym, :tabconfigure),
        s(:sym, :itemconfigure)),
      s(:alias,
        s(:sym, :tabconfiginfo),
        s(:sym, :itemconfiginfo)),
      s(:alias,
        s(:sym, :current_tabconfiginfo),
        s(:sym, :current_itemconfiginfo)),
      s(:def, :tabcget_tkstring,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send,
          s(:send, nil, :tk_split_simplelist,
            s(:send, nil, :tk_call_without_enc,
              s(:splat,
                s(:begin,
                  s(:send,
                    s(:send, nil, :__item_confinfo_cmd,
                      s(:send, nil, :tagid,
                        s(:lvar, :tagOrId))), :<<,
                    s(:dstr,
                      s(:str, "-"),
                      s(:begin,
                        s(:lvar, :option))))))),
            s(:false),
            s(:true)), :[],
          s(:int, -1))),
      s(:def, :tabcget_strict,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send,
          s(:send, nil, :tabconfiginfo,
            s(:lvar, :tagOrId),
            s(:lvar, :option)), :[],
          s(:int, -1))),
      s(:def, :tabcget,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:if,
          s(:send,
            s(:const, nil, :TkItemConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :tabcget_strict,
                s(:lvar, :tagOrId),
                s(:lvar, :option)),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:kwbegin,
                  s(:rescue,
                    s(:if,
                      s(:send,
                        s(:send, nil, :current_tabconfiginfo,
                          s(:lvar, :tagOrId)), :has_key?,
                        s(:send,
                          s(:lvar, :option), :to_s)),
                      s(:send, nil, :fail,
                        s(:lvar, :e)),
                      s(:nil)),
                    s(:resbody, nil, nil,
                      s(:send, nil, :fail,
                        s(:lvar, :e))), nil))), nil)),
          s(:send, nil, :tabcget_strict,
            s(:lvar, :tagOrId),
            s(:lvar, :option)))),
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Tile), :TileWidget)),
      s(:if,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Tile), :USE_TTK_NAMESPACE),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::ttk::notebook"), :freeze)), :freeze)),
        s(:casgn, nil, :TkCommandNames,
          s(:send,
            s(:array,
              s(:send,
                s(:str, "::tnotebook"), :freeze)), :freeze))),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "TNotebook"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:defs,
        s(:self), :style,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:array,
            s(:const,
              s(:self), :WidgetClassName),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :map!),
                  s(:args,
                    s(:arg, :a)),
                  s(:send, nil, :_get_eval_string,
                    s(:lvar, :a)))))), :join,
          s(:str, "."))),
      s(:def, :enable_traversal,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :TILE_SPEC_VERSION_ID), :<,
              s(:int, 5)),
            s(:send, nil, :tk_call_without_enc,
              s(:str, "::tile::enableNotebookTraversal"),
              s(:ivar, :@path)),
            s(:if,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Tile), :TILE_SPEC_VERSION_ID), :<,
                s(:int, 7)),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::tile::notebook::enableTraversal"),
                s(:ivar, :@path)),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "::ttk::notebook::enableTraversal"),
                s(:ivar, :@path)))),
          s(:self))),
      s(:def, :add,
        s(:args,
          s(:arg, :child),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:and,
              s(:lvar, :keys),
              s(:send,
                s(:lvar, :keys), :!=,
                s(:const, nil, :None))),
            s(:send, nil, :tk_send,
              s(:str, "add"),
              s(:send, nil, :_epath,
                s(:lvar, :child)),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys)))),
            s(:send, nil, :tk_send,
              s(:str, "add"),
              s(:send, nil, :_epath,
                s(:lvar, :child)))),
          s(:self))),
      s(:def, :forget,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "forget"),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :hide,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "hide"),
          s(:lvar, :idx))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:lvar, :idx)))),
      s(:def, :insert,
        s(:args,
          s(:arg, :idx),
          s(:arg, :subwin),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:and,
              s(:lvar, :keys),
              s(:send,
                s(:lvar, :keys), :!=,
                s(:const, nil, :None))),
            s(:send, nil, :tk_send,
              s(:str, "insert"),
              s(:lvar, :idx),
              s(:lvar, :subwin),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys)))),
            s(:send, nil, :tk_send,
              s(:str, "insert"),
              s(:lvar, :idx),
              s(:lvar, :subwin))),
          s(:self))),
      s(:def, :select,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "select"),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :selected,
        s(:args),
        s(:send, nil, :window,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "select")))),
      s(:def, :tabs,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "tabs")))))),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tkextlib/tile/tnotebook.rb"),
    s(:sym, :Ttk),
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tile), :Notebook),
    s(:sym, :TkNotebook)))
