s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/validation")),
  s(:send, nil, :require,
    s(:str, "tkextlib/setup.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tktable/setup.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "Tktable")),
  s(:module,
    s(:const, nil, :Tk),
    s(:class,
      s(:const, nil, :TkTable),
      s(:const, nil, :TkWindow),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "Tktable"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "Tktable")),
              s(:resbody, nil, nil,
                s(:str, "")), nil))),
        s(:class,
          s(:const, nil, :CellTag),
          s(:const, nil, :TkObject), nil),
        s(:module,
          s(:const, nil, :ConfigMethod), nil)))),
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :ConfigMethod),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__item_cget_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:send,
            s(:lvar, :id), :[],
            s(:int, 0)),
          s(:str, "cget"),
          s(:send,
            s(:lvar, :id), :[],
            s(:int, 1)))),
      s(:send, nil, :private,
        s(:sym, :__item_cget_cmd)),
      s(:def, :__item_config_cmd,
        s(:args,
          s(:arg, :id)),
        s(:array,
          s(:send,
            s(:self), :path),
          s(:send,
            s(:lvar, :id), :[],
            s(:int, 0)),
          s(:str, "configure"),
          s(:send,
            s(:lvar, :id), :[],
            s(:int, 1)))),
      s(:send, nil, :private,
        s(:sym, :__item_config_cmd)),
      s(:def, :__item_pathname,
        s(:args,
          s(:arg, :id)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :id), :kind_of?,
              s(:const, nil, :Array)),
            s(:lvasgn, :id,
              s(:send, nil, :tagid,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 1)))), nil),
          s(:send,
            s(:array,
              s(:send,
                s(:self), :path),
              s(:lvar, :id)), :join,
            s(:str, ";")))),
      s(:send, nil, :private,
        s(:sym, :__item_pathname)),
      s(:def, :__item_boolval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:send,
            s(:send,
              s(:super,
                s(:lvar, :id)), :<<,
              s(:str, "multiline")), :<<,
            s(:str, "showtext")), :<<,
          s(:str, "wrap"))),
      s(:send, nil, :private,
        s(:sym, :__item_boolval_optkeys)),
      s(:def, :__item_strval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:super,
            s(:lvar, :id)), :<<,
          s(:str, "ellipsis"))),
      s(:send, nil, :private,
        s(:sym, :__item_strval_optkeys)),
      s(:def, :__item_val2ruby_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:super,
            s(:lvar, :id)), :update,
          s(:hash,
            s(:pair,
              s(:str, "window"),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :v)),
                s(:send, nil, :window,
                  s(:lvar, :v))))))),
      s(:send, nil, :private,
        s(:sym, :__item_val2ruby_optkeys)),
      s(:def, :tag_cget_tkstring,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:array,
            s(:str, "tag"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :option))),
      s(:def, :tag_cget,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send, nil, :itemcget,
          s(:array,
            s(:str, "tag"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :option))),
      s(:def, :tag_cget_strict,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send, nil, :itemcget_strict,
          s(:array,
            s(:str, "tag"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :option))),
      s(:def, :tag_configure,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:send, nil, :itemconfigure,
          s(:array,
            s(:str, "tag"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :slot),
          s(:lvar, :value))),
      s(:def, :tag_configinfo,
        s(:args,
          s(:arg, :tagOrId),
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :itemconfiginfo,
          s(:array,
            s(:str, "tag"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :slot))),
      s(:def, :current_tag_configinfo,
        s(:args,
          s(:arg, :tagOrId),
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_itemconfiginfo,
          s(:array,
            s(:str, "tag"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :slot))),
      s(:def, :window_cget_tkstring,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send, nil, :itemcget_tkstring,
          s(:array,
            s(:str, "window"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :option))),
      s(:def, :window_cget,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send, nil, :itemcget,
          s(:array,
            s(:str, "window"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :option))),
      s(:def, :window_cget_strict,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :option)),
        s(:send, nil, :itemcget_strict,
          s(:array,
            s(:str, "window"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :option))),
      s(:def, :window_configure,
        s(:args,
          s(:arg, :tagOrId),
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :slot), :==,
                s(:sym, :window)),
              s(:send,
                s(:lvar, :slot), :==,
                s(:str, "window"))),
            s(:lvasgn, :value,
              s(:send, nil, :_epath,
                s(:lvar, :value))),
            s(:if,
              s(:send,
                s(:lvar, :slot), :kind_of?,
                s(:const, nil, :Hash)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :slot), :key?,
                    s(:sym, :window)),
                  s(:send,
                    s(:lvar, :slot), :key?,
                    s(:str, "window"))),
                s(:begin,
                  s(:lvasgn, :slot,
                    s(:send, nil, :_symbolkey2str,
                      s(:lvar, :slot))),
                  s(:send,
                    s(:lvar, :slot), :[]=,
                    s(:str, "window"),
                    s(:send, nil, :_epath,
                      s(:send,
                        s(:lvar, :slot), :[],
                        s(:str, "window"))))), nil), nil)),
          s(:send, nil, :itemconfigure,
            s(:array,
              s(:str, "window"),
              s(:send, nil, :tagid,
                s(:lvar, :tagOrId))),
            s(:lvar, :slot),
            s(:lvar, :value)))),
      s(:def, :window_configinfo,
        s(:args,
          s(:arg, :tagOrId),
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :itemconfiginfo,
          s(:array,
            s(:str, "window"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :slot))),
      s(:def, :current_window_configinfo,
        s(:args,
          s(:arg, :tagOrId),
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_itemconfiginfo,
          s(:array,
            s(:str, "window"),
            s(:send, nil, :tagid,
              s(:lvar, :tagOrId))),
          s(:lvar, :slot))),
      s(:send, nil, :private,
        s(:sym, :itemcget_tkstring),
        s(:sym, :itemcget),
        s(:sym, :itemcget_strict)),
      s(:send, nil, :private,
        s(:sym, :itemconfigure),
        s(:sym, :itemconfiginfo),
        s(:sym, :current_itemconfiginfo)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :CellTag), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkTreatTagFont)),
      s(:casgn, nil, :CellTagID_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :CellTag_ID,
              s(:array,
                s(:send,
                  s(:str, "tktbl:celltag"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :CellTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :CellTagID_TBL), :clear))),
      s(:defs,
        s(:self), :id2obj,
        s(:args,
          s(:arg, :table),
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :tpath,
            s(:send,
              s(:lvar, :table), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :[],
                s(:lvar, :tpath)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :CellTagID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :id)),
                s(:send,
                  s(:send,
                    s(:const, nil, :CellTagID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :id)),
                s(:lvar, :id)),
              s(:lvar, :id))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:ivasgn, :@t,
              s(:lvar, :parent))),
          s(:send,
            s(:ivar, :@tpath), :-,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CellTag_ID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:send,
                    s(:const, nil, :CellTag_ID), :join,
                    s(:send,
                      s(:const,
                        s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
              s(:send,
                s(:send,
                  s(:const, nil, :CellTag_ID), :[],
                  s(:int, 1)), :succ!))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[],
                  s(:ivar, :@tpath)), nil,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[]=,
                  s(:ivar, :@tpath),
                  s(:hash))),
              s(:send,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[],
                  s(:ivar, :@tpath)), :[]=,
                s(:ivar, :@id),
                s(:self)))),
          s(:if,
            s(:lvar, :keys),
            s(:send, nil, :configure,
              s(:lvar, :keys)), nil))),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)),
      s(:def, :destroy,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:ivar, :@tpath),
            s(:str, "tag"),
            s(:str, "delete"),
            s(:ivar, :@id)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :[],
                s(:ivar, :@tpath)),
              s(:send,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[],
                  s(:ivar, :@tpath)), :delete,
                s(:ivar, :@id)), nil)),
          s(:self))),
      s(:alias,
        s(:sym, :delete),
        s(:sym, :destroy)),
      s(:def, :exist?,
        s(:args),
        s(:send,
          s(:ivar, :@t), :tag_exist?,
          s(:ivar, :@id))),
      s(:def, :include?,
        s(:args,
          s(:arg, :idx)),
        s(:send,
          s(:ivar, :@t), :tag_include?,
          s(:ivar, :@id),
          s(:lvar, :idx))),
      s(:def, :add_cell,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@t), :tag_cell,
          s(:ivar, :@id),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :add_col,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@t), :tag_col,
          s(:ivar, :@id),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :add_row,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@t), :tag_row,
          s(:ivar, :@id),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :raise,
        s(:args,
          s(:optarg, :target,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@t), :tag_raise,
          s(:ivar, :@id),
          s(:lvar, :target))),
      s(:def, :lower,
        s(:args,
          s(:optarg, :target,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@t), :tag_lower,
          s(:ivar, :@id),
          s(:lvar, :target))),
      s(:def, :cget_tkstring,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@t), :tag_cget_tkstring,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :cget,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@t), :tag_cget,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@t), :tag_cget_strict,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :configure,
        s(:args,
          s(:arg, :key),
          s(:optarg, :val,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@t), :tag_configure,
          s(:ivar, :@id),
          s(:lvar, :key),
          s(:lvar, :val))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@t), :tag_configinfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :current_configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@t), :current_tag_configinfo,
          s(:ivar, :@id),
          s(:lvar, :key))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :NamedCellTag),
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :CellTag),
    s(:begin,
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :parent),
          s(:arg, :name),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :obj,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:and,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[],
                  s(:send,
                    s(:lvar, :parent), :path)),
                s(:send,
                  s(:send,
                    s(:const, nil, :CellTagID_TBL), :[],
                    s(:send,
                      s(:lvar, :parent), :path)), :[],
                  s(:lvar, :name))),
              s(:lvasgn, :obj,
                s(:send,
                  s(:send,
                    s(:const, nil, :CellTagID_TBL), :[],
                    s(:send,
                      s(:lvar, :parent), :path)), :[],
                  s(:lvar, :name))),
              s(:block,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :obj,
                      s(:send,
                        s(:self), :allocate))), :instance_eval),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@parent,
                    s(:ivasgn, :@t,
                      s(:lvar, :parent))),
                  s(:ivasgn, :@tpath,
                    s(:send,
                      s(:lvar, :parent), :path)),
                  s(:ivasgn, :@path,
                    s(:ivasgn, :@id,
                      s(:lvar, :name))),
                  s(:if,
                    s(:send,
                      s(:const, nil, :CellTagID_TBL), :[],
                      s(:ivar, :@tpath)), nil,
                    s(:send,
                      s(:const, nil, :CellTagID_TBL), :[]=,
                      s(:ivar, :@tpath),
                      s(:hash))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :CellTagID_TBL), :[],
                      s(:ivar, :@tpath)), :[]=,
                    s(:ivar, :@id),
                    s(:self)))))),
          s(:if,
            s(:and,
              s(:lvar, :keys),
              s(:send,
                s(:send,
                  s(:lvar, :keys), :empty?), :!)),
            s(:send,
              s(:lvar, :obj), :configure,
              s(:lvar, :keys)), nil),
          s(:lvar, :obj))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:arg, :name),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:ivasgn, :@t,
              s(:lvar, :parent))),
          s(:ivasgn, :@tpath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:ivasgn, :@path,
            s(:ivasgn, :@id,
              s(:lvar, :name))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CellTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[],
                  s(:ivar, :@tpath)), nil,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[]=,
                  s(:ivar, :@tpath),
                  s(:hash))),
              s(:send,
                s(:send,
                  s(:const, nil, :CellTagID_TBL), :[],
                  s(:ivar, :@tpath)), :[]=,
                s(:ivar, :@id),
                s(:self)))),
          s(:if,
            s(:and,
              s(:lvar, :keys),
              s(:send,
                s(:send,
                  s(:lvar, :keys), :empty?), :!)),
            s(:send, nil, :configure,
              s(:lvar, :keys)), nil))))),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :TkTable), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "table"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Table"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:send, nil, :include,
        s(:const, nil, :Scrollable)),
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :TkTable), :ConfigMethod)),
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Tk), :ValidateConfigure)),
      s(:def, :__destroy_hook__,
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :TkTable), :CelTag), :CellTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :TkTable), :CelTag), :CellTagID_TBL), :delete,
            s(:ivar, :@path)))),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:super), :<<,
                    s(:str, "autoclear")), :<<,
                  s(:str, "flashmode")), :<<,
                s(:str, "invertselected")), :<<,
              s(:str, "multiline")), :<<,
            s(:str, "selecttitle")), :<<,
          s(:str, "wrap"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:super), :<<,
                s(:str, "colseparator")), :<<,
              s(:str, "ellipsis")), :<<,
            s(:str, "rowseparator")), :<<,
          s(:str, "sparsearray"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:class,
        s(:const, nil, :BrowseCommand),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "c"),
                    s(:str, "n"),
                    s(:sym, :column)),
                  s(:array,
                    s(:str, "C"),
                    s(:str, "s"),
                    s(:sym, :index)),
                  s(:array,
                    s(:str, "i"),
                    s(:str, "x"),
                    s(:sym, :cursor)),
                  s(:array,
                    s(:str, "r"),
                    s(:str, "n"),
                    s(:sym, :row)),
                  s(:array,
                    s(:str, "s"),
                    s(:str, "s"),
                    s(:sym, :last_index)),
                  s(:array,
                    s(:str, "S"),
                    s(:str, "s"),
                    s(:sym, :new_index)),
                  s(:array,
                    s(:str, "W"),
                    s(:str, "w"),
                    s(:sym, :widget)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "n"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :number))),
                  s(:array,
                    s(:str, "x"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :num_or_str))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "w"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :window))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)),
              s(:defs,
                s(:self), :ret_val,
                s(:args,
                  s(:arg, :val)),
                s(:lvar, :val)))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array,
              s(:str, "browsecommand"),
              s(:str, "browsecmd"))))),
      s(:class,
        s(:const, nil, :CellCommand),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "c"),
                    s(:str, "n"),
                    s(:sym, :column)),
                  s(:array,
                    s(:str, "C"),
                    s(:str, "s"),
                    s(:sym, :index)),
                  s(:array,
                    s(:str, "i"),
                    s(:str, "m"),
                    s(:sym, :rw_mode)),
                  s(:array,
                    s(:str, "r"),
                    s(:str, "n"),
                    s(:sym, :row)),
                  s(:array,
                    s(:str, "s"),
                    s(:str, "v"),
                    s(:sym, :value)),
                  s(:array,
                    s(:str, "W"),
                    s(:str, "w"),
                    s(:sym, :widget)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "n"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :number))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "w"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :window))),
                  s(:array,
                    s(:str, "m"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :val)),
                      s(:if,
                        s(:begin,
                          s(:send,
                            s(:lvar, :val), :==,
                            s(:str, "0"))),
                        s(:begin,
                          s(:sym, :r)),
                        s(:begin,
                          s(:sym, :w))))),
                  s(:array,
                    s(:str, "v"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :val)),
                      s(:send,
                        s(:const, nil, :TkComm), :tk_tcl2ruby,
                        s(:lvar, :val),
                        s(:true),
                        s(:false)))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)),
              s(:defs,
                s(:self), :ret_val,
                s(:args,
                  s(:arg, :val)),
                s(:send,
                  s(:const, nil, :TkComm), :_get_eval_string,
                  s(:lvar, :val))))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array,
              s(:str, "command"))))),
      s(:class,
        s(:const, nil, :SelectionCommand),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "c"),
                    s(:str, "n"),
                    s(:sym, :sel_columns)),
                  s(:array,
                    s(:str, "C"),
                    s(:str, "s"),
                    s(:sym, :sel_area)),
                  s(:array,
                    s(:str, "i"),
                    s(:str, "n"),
                    s(:sym, :total)),
                  s(:array,
                    s(:str, "r"),
                    s(:str, "n"),
                    s(:sym, :sel_rows)),
                  s(:array,
                    s(:str, "s"),
                    s(:str, "s"),
                    s(:sym, :value)),
                  s(:array,
                    s(:str, "W"),
                    s(:str, "w"),
                    s(:sym, :widget)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "n"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :number))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "w"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :window))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)),
              s(:defs,
                s(:self), :ret_val,
                s(:args,
                  s(:arg, :val)),
                s(:send,
                  s(:lvar, :val), :to_s)))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array,
              s(:str, "selectioncommand"),
              s(:str, "selcmd"))))),
      s(:class,
        s(:const, nil, :ValidateCommand),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "c"),
                    s(:str, "n"),
                    s(:sym, :column)),
                  s(:array,
                    s(:str, "C"),
                    s(:str, "s"),
                    s(:sym, :index)),
                  s(:array,
                    s(:str, "i"),
                    s(:str, "x"),
                    s(:sym, :cursor)),
                  s(:array,
                    s(:str, "r"),
                    s(:str, "n"),
                    s(:sym, :row)),
                  s(:array,
                    s(:str, "s"),
                    s(:str, "v"),
                    s(:sym, :current_value)),
                  s(:array,
                    s(:str, "S"),
                    s(:str, "v"),
                    s(:sym, :new_value)),
                  s(:array,
                    s(:str, "W"),
                    s(:str, "w"),
                    s(:sym, :widget)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "n"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :number))),
                  s(:array,
                    s(:str, "x"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :num_or_str))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "w"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :window))),
                  s(:array,
                    s(:str, "v"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :val)),
                      s(:send,
                        s(:const, nil, :TkComm), :tk_tcl2ruby,
                        s(:lvar, :val),
                        s(:true),
                        s(:false)))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array,
              s(:str, "vcmd"),
              s(:str, "validatecommand"))))),
      s(:def, :__validation_class_list,
        s(:args),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:super), :<<,
                s(:const, nil, :BrowseCommand)), :<<,
              s(:const, nil, :CellCommand)), :<<,
            s(:const, nil, :SelectionCommand)), :<<,
          s(:const, nil, :ValidateCommand))),
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :ValidateConfigure), :__def_validcmd,
        s(:send, nil, :binding),
        s(:const, nil, :BrowseCommand)),
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :ValidateConfigure), :__def_validcmd,
        s(:send, nil, :binding),
        s(:const, nil, :CellCommand)),
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :ValidateConfigure), :__def_validcmd,
        s(:send, nil, :binding),
        s(:const, nil, :SelectionCommand)),
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :ValidateConfigure), :__def_validcmd,
        s(:send, nil, :binding),
        s(:const, nil, :ValidateCommand)),
      s(:def, :activate,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "activate"),
          s(:send, nil, :tagid,
            s(:lvar, :idx)))),
      s(:def, :bbox,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "bbox"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :border_mark,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "border"),
            s(:str, "mark"),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :border_mark_row,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send,
          s(:str, "border"),
          s(:str, "mark"),
          s(:lvar, :x),
          s(:lvar, :y),
          s(:str, "row"))),
      s(:def, :border_mark_col,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send,
          s(:str, "border"),
          s(:str, "mark"),
          s(:lvar, :x),
          s(:lvar, :y),
          s(:str, "col"))),
      s(:def, :border_dragto,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send,
          s(:str, "border"),
          s(:str, "dragto"),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :clear_cache,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "clear"),
            s(:str, "cache"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :clear_sizes,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "clear"),
            s(:str, "sizes"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :clear_tags,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "clear"),
            s(:str, "tags"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :clear_all,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "clear"),
            s(:str, "all"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :curselection,
        s(:args),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "curselection")))),
      s(:def, :curselection=,
        s(:args,
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "curselection"),
            s(:lvar, :val)),
          s(:lvar, :val))),
      s(:def, :curvalue,
        s(:args),
        s(:send, nil, :tk_tcl2ruby,
          s(:send, nil, :tk_send,
            s(:str, "curvalue")),
          s(:true),
          s(:false))),
      s(:def, :curvalue=,
        s(:args,
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "curvalue"),
            s(:lvar, :val)),
          s(:lvar, :val))),
      s(:def, :delete_active,
        s(:args,
          s(:arg, :idx1),
          s(:optarg, :idx2,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "delete"),
            s(:str, "active"),
            s(:send, nil, :tagid,
              s(:lvar, :idx1)),
            s(:send, nil, :tagid,
              s(:lvar, :idx2))),
          s(:self))),
      s(:def, :delete_cols,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :params,
            s(:array)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:lvasgn, :switches,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:block,
                s(:send,
                  s(:lvar, :switches), :each),
                s(:args,
                  s(:arg, :k)),
                s(:send,
                  s(:lvar, :params), :<<,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :k)))))), nil),
          s(:send,
            s(:lvar, :params), :<<,
            s(:str, "--")),
          s(:send,
            s(:lvar, :params), :<<,
            s(:send, nil, :tagid,
              s(:send,
                s(:lvar, :args), :shift))),
          s(:send,
            s(:lvar, :params), :concat,
            s(:lvar, :args)),
          s(:send, nil, :tk_send,
            s(:str, "delete"),
            s(:str, "cols"),
            s(:splat,
              s(:lvar, :params))),
          s(:self))),
      s(:def, :delete_rows,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :params,
            s(:array)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:lvasgn, :switches,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:block,
                s(:send,
                  s(:lvar, :switches), :each),
                s(:args,
                  s(:arg, :k)),
                s(:send,
                  s(:lvar, :params), :<<,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :k)))))), nil),
          s(:send,
            s(:lvar, :params), :<<,
            s(:str, "--")),
          s(:send,
            s(:lvar, :params), :<<,
            s(:send, nil, :tagid,
              s(:send,
                s(:lvar, :args), :shift))),
          s(:send,
            s(:lvar, :params), :concat,
            s(:lvar, :args)),
          s(:send, nil, :tk_send,
            s(:str, "delete"),
            s(:str, "rows"),
            s(:splat,
              s(:lvar, :params))),
          s(:self))),
      s(:def, :get,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_tcl2ruby,
          s(:send, nil, :tk_send,
            s(:str, "get"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))),
          s(:true),
          s(:false))),
      s(:def, :get_area,
        s(:args,
          s(:arg, :idx1),
          s(:arg, :idx2)),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "get"),
                s(:send, nil, :tagid,
                  s(:lvar, :idx1)),
                s(:send, nil, :tagid,
                  s(:lvar, :idx2)))), :collect),
          s(:args,
            s(:arg, :v)),
          s(:send, nil, :tk_tcl2ruby,
            s(:lvar, :v),
            s(:true),
            s(:false)))),
      s(:def, :height_list,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "height")))),
      s(:def, :height,
        s(:args,
          s(:arg, :row)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "height"),
            s(:lvar, :row)))),
      s(:def, :set_height,
        s(:args,
          s(:restarg, :pairs)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "height"),
            s(:splat,
              s(:begin,
                s(:send,
                  s(:lvar, :pairs), :flatten)))),
          s(:self))),
      s(:def, :hidden_list,
        s(:args),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "hidden")))),
      s(:def, :hidden?,
        s(:args,
          s(:arg, :idx),
          s(:restarg, :args)),
        s(:if,
          s(:send,
            s(:lvar, :args), :empty?),
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :ret,
                  s(:send, nil, :tk_send,
                    s(:str, "hidden"),
                    s(:send, nil, :tagid,
                      s(:lvar, :idx))))), :==,
              s(:str, "")),
            s(:false),
            s(:lvar, :ret)),
          s(:send, nil, :bool,
            s(:send, nil, :tk_send,
              s(:str, "hidden"),
              s(:send, nil, :tagid,
                s(:lvar, :idx)),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :args), :collect),
                    s(:args,
                      s(:arg, :i)),
                    s(:send, nil, :tagid,
                      s(:lvar, :i))))))))),
      s(:def, :icursor,
        s(:args),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "icursor")))),
      s(:def, :icursor_set,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "icursor"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "index"),
          s(:send, nil, :tagid,
            s(:lvar, :idx)))),
      s(:def, :row_index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :idx)),
            s(:str, "row")))),
      s(:def, :col_index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :idx)),
            s(:str, "col")))),
      s(:def, :insert_active,
        s(:args,
          s(:arg, :idx),
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "insert"),
            s(:str, "active"),
            s(:send, nil, :tagid,
              s(:lvar, :idx)),
            s(:lvar, :val)),
          s(:self))),
      s(:def, :insert_cols,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :params,
            s(:array)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:lvasgn, :switches,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:block,
                s(:send,
                  s(:lvar, :switches), :each),
                s(:args,
                  s(:arg, :k)),
                s(:send,
                  s(:lvar, :params), :<<,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :k)))))), nil),
          s(:send,
            s(:lvar, :params), :<<,
            s(:str, "--")),
          s(:send,
            s(:lvar, :params), :concat,
            s(:lvar, :args)),
          s(:send,
            s(:lvar, :params), :<<,
            s(:send, nil, :tagid,
              s(:send,
                s(:lvar, :args), :shift))),
          s(:send, nil, :tk_send,
            s(:str, "insert"),
            s(:str, "cols"),
            s(:splat,
              s(:lvar, :params))),
          s(:self))),
      s(:def, :insert_rows,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :params,
            s(:array)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, 0)), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:lvasgn, :switches,
                s(:send,
                  s(:lvar, :args), :shift)),
              s(:block,
                s(:send,
                  s(:lvar, :switches), :each),
                s(:args,
                  s(:arg, :k)),
                s(:send,
                  s(:lvar, :params), :<<,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :k)))))), nil),
          s(:send,
            s(:lvar, :params), :<<,
            s(:str, "--")),
          s(:send,
            s(:lvar, :params), :<<,
            s(:send, nil, :tagid,
              s(:send,
                s(:lvar, :args), :shift))),
          s(:send,
            s(:lvar, :params), :concat,
            s(:lvar, :args)),
          s(:send, nil, :tk_send,
            s(:str, "insert"),
            s(:str, "rows"),
            s(:splat,
              s(:lvar, :params))),
          s(:self))),
      s(:def, :reread,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "reread")),
          s(:self))),
      s(:def, :scan_mark,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "scan"),
            s(:str, "mark"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :scan_dragto,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "scan"),
            s(:str, "dragto"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :see,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "see"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :selection_anchor,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "anchor"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :selection_clear,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "clear"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :selection_clear_all,
        s(:args),
        s(:send, nil, :selection_clear,
          s(:str, "all"))),
      s(:def, :selection_include?,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "includes"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :selection_present,
        s(:args),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "present")))),
      s(:def, :selection_set,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "selection"),
            s(:str, "set"),
            s(:send, nil, :tagid,
              s(:lvar, :first)),
            s(:send, nil, :tagid,
              s(:lvar, :last))),
          s(:self))),
      s(:def, :set,
        s(:args,
          s(:restarg, :pairs)),
        s(:begin,
          s(:lvasgn, :args,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 0), :step,
              s(:send,
                s(:send,
                  s(:lvar, :pairs), :size), :-,
                s(:int, 1)),
              s(:int, 2)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:send,
                s(:lvar, :args), :<<,
                s(:send, nil, :tagid,
                  s(:send,
                    s(:lvar, :pairs), :[],
                    s(:lvar, :i)))),
              s(:send,
                s(:lvar, :args), :<<,
                s(:send,
                  s(:lvar, :pairs), :[],
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 1)))))),
          s(:send, nil, :tk_send,
            s(:str, "set"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :set_row,
        s(:args,
          s(:restarg, :pairs)),
        s(:begin,
          s(:lvasgn, :args,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 0), :step,
              s(:send,
                s(:send,
                  s(:lvar, :pairs), :size), :-,
                s(:int, 1)),
              s(:int, 2)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:send,
                s(:lvar, :args), :<<,
                s(:send, nil, :tagid,
                  s(:send,
                    s(:lvar, :pairs), :[],
                    s(:lvar, :i)))),
              s(:send,
                s(:lvar, :args), :<<,
                s(:send,
                  s(:lvar, :pairs), :[],
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 1)))))),
          s(:send, nil, :tk_send,
            s(:str, "set"),
            s(:str, "row"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :set_col,
        s(:args,
          s(:restarg, :pairs)),
        s(:begin,
          s(:lvasgn, :args,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 0), :step,
              s(:send,
                s(:send,
                  s(:lvar, :pairs), :size), :-,
                s(:int, 1)),
              s(:int, 2)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:send,
                s(:lvar, :args), :<<,
                s(:send, nil, :tagid,
                  s(:send,
                    s(:lvar, :pairs), :[],
                    s(:lvar, :i)))),
              s(:send,
                s(:lvar, :args), :<<,
                s(:send,
                  s(:lvar, :pairs), :[],
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 1)))))),
          s(:send, nil, :tk_send,
            s(:str, "set"),
            s(:str, "col"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :spans,
        s(:args),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "spans"))), :collect),
          s(:args,
            s(:arg, :inf)),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send, nil, :simplelist,
                s(:lvar, :inf))),
            s(:lvasgn, :idx,
              s(:send,
                s(:lvar, :lst), :[],
                s(:int, 0))),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :rows),
                s(:lvasgn, :cols)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :lst), :[],
                      s(:int, 1)), :split,
                    s(:str, ",")), :map!),
                s(:args,
                  s(:arg, :n)),
                s(:send, nil, :Integer,
                  s(:lvar, :n)))),
            s(:array,
              s(:send,
                s(:lvar, :idx), :[],
                s(:lvar, :rows),
                s(:lvar, :cols)))))),
      s(:alias,
        s(:sym, :span_list),
        s(:sym, :spans)),
      s(:def, :span,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:lvasgn, :lst,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "spans"),
                s(:send, nil, :tagid,
                  s(:lvar, :idx))))),
          s(:lvasgn, :idx,
            s(:send,
              s(:lvar, :lst), :[],
              s(:int, 0))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :rows),
              s(:lvasgn, :cols)),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :lst), :[],
                    s(:int, 1)), :split,
                  s(:str, ",")), :map!),
              s(:args,
                s(:arg, :n)),
              s(:send, nil, :Integer,
                s(:lvar, :n)))),
          s(:array,
            s(:send,
              s(:lvar, :idx), :[],
              s(:lvar, :rows),
              s(:lvar, :cols))))),
      s(:def, :set_spans,
        s(:args,
          s(:restarg, :pairs)),
        s(:begin,
          s(:lvasgn, :args,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 0), :step,
              s(:send,
                s(:send,
                  s(:lvar, :pairs), :size), :-,
                s(:int, 1)),
              s(:int, 2)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:send,
                s(:lvar, :args), :<<,
                s(:send, nil, :tagid,
                  s(:send,
                    s(:lvar, :pairs), :[],
                    s(:lvar, :i)))),
              s(:lvasgn, :val,
                s(:send,
                  s(:lvar, :pairs), :[],
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 1)))),
              s(:if,
                s(:send,
                  s(:lvar, :val), :kind_of?,
                  s(:const, nil, :Array)),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:send,
                    s(:lvar, :val), :join,
                    s(:str, ","))),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:lvar, :val))))),
          s(:send, nil, :tk_send,
            s(:str, "spans"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:send,
            s(:lvar, :tag), :kind_of?,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :TkTable), :CellTag)),
          s(:send,
            s(:lvar, :tag), :id),
          s(:if,
            s(:send,
              s(:lvar, :tag), :kind_of?,
              s(:const, nil, :Array)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :tag), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Integer)),
                s(:send,
                  s(:send,
                    s(:lvar, :tag), :[],
                    s(:int, 1)), :kind_of?,
                  s(:const, nil, :Integer))),
              s(:send,
                s(:lvar, :tag), :join,
                s(:str, ",")),
              s(:lvar, :tag)),
            s(:lvar, :tag)))),
      s(:def, :tagid2obj,
        s(:args,
          s(:arg, :tagid)),
        s(:block,
          s(:send,
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:if,
            s(:send,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :key?,
              s(:ivar, :@path)),
            s(:if,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :[],
                  s(:ivar, :@path)), :key?,
                s(:lvar, :tagid)),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :[],
                  s(:ivar, :@path)), :[],
                s(:lvar, :tagid)),
              s(:lvar, :tagid)),
            s(:lvar, :tagid)))),
      s(:def, :tag_cell,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :cells)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "cell"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :cells), :collect),
                  s(:args,
                    s(:arg, :idx)),
                  s(:send, nil, :tagid,
                    s(:lvar, :idx)))))),
          s(:self))),
      s(:def, :tag_reset,
        s(:args,
          s(:restarg, :cells)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "cell"),
            s(:str, ""),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :cells), :collect),
                  s(:args,
                    s(:arg, :idx)),
                  s(:send, nil, :tagid,
                    s(:lvar, :idx)))))),
          s(:self))),
      s(:def, :tag_col,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :cols)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "col"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:lvar, :cols))),
          s(:self))),
      s(:def, :tag_col_reset,
        s(:args,
          s(:restarg, :cols)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "col"),
            s(:str, ""),
            s(:splat,
              s(:lvar, :cols))),
          s(:self))),
      s(:def, :tag_delete,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "delete"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :[],
                s(:ivar, :@path)),
              s(:if,
                s(:send,
                  s(:lvar, :tag), :kind_of?,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :TkTable), :CellTag)),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :[],
                    s(:ivar, :@path)), :delete,
                  s(:send,
                    s(:lvar, :tag), :id)),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :TkTable), :CellTag), :CellTagID_TBL), :[],
                    s(:ivar, :@path)), :delete,
                  s(:lvar, :tag))), nil)),
          s(:self))),
      s(:def, :tag_exist?,
        s(:args,
          s(:arg, :tag)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "exists"),
            s(:send, nil, :tagid,
              s(:lvar, :tag))))),
      s(:def, :tag_include?,
        s(:args,
          s(:arg, :tag),
          s(:arg, :idx)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "includes"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :tag_lower,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :target,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "lower"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:send, nil, :tagid,
              s(:lvar, :target))),
          s(:self))),
      s(:def, :tag_names,
        s(:args,
          s(:optarg, :pat,
            s(:const, nil, :None))),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send,
                s(:str, "tag"),
                s(:str, "names"),
                s(:lvar, :pat))), :collect),
          s(:args,
            s(:arg, :tag)),
          s(:send, nil, :tagid2obj,
            s(:lvar, :tag)))),
      s(:def, :tag_raise,
        s(:args,
          s(:arg, :tag),
          s(:optarg, :target,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "raise"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:send, nil, :tagid,
              s(:lvar, :target))),
          s(:self))),
      s(:def, :tag_row,
        s(:args,
          s(:arg, :tag),
          s(:restarg, :rows)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "row"),
            s(:send, nil, :tagid,
              s(:lvar, :tag)),
            s(:splat,
              s(:lvar, :rows))),
          s(:self))),
      s(:def, :tag_row_reset,
        s(:args,
          s(:restarg, :rows)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "tag"),
            s(:str, "row"),
            s(:str, ""),
            s(:splat,
              s(:lvar, :rows))),
          s(:self))),
      s(:def, :validate,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "validate"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))))),
      s(:def, :width_list,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "width")))),
      s(:def, :width,
        s(:args,
          s(:arg, :row)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send,
            s(:str, "width"),
            s(:lvar, :row)))),
      s(:def, :set_width,
        s(:args,
          s(:restarg, :pairs)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "width"),
            s(:splat,
              s(:begin,
                s(:send,
                  s(:lvar, :pairs), :flatten)))),
          s(:self))),
      s(:def, :window_delete,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "window"),
            s(:str, "delete"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :idx)),
                  s(:send, nil, :tagid,
                    s(:lvar, :idx)))))),
          s(:self))),
      s(:def, :window_move,
        s(:args,
          s(:arg, :from_idx),
          s(:arg, :to_idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "window"),
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :from_idx)),
            s(:send, nil, :tagid,
              s(:lvar, :to_idx))),
          s(:self))),
      s(:def, :window_names,
        s(:args,
          s(:optarg, :pat,
            s(:const, nil, :None))),
        s(:send, nil, :simplelist,
          s(:send, nil, :tk_send,
            s(:str, "window"),
            s(:str, "names"),
            s(:lvar, :pat)))))))
