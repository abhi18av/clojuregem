s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/setup.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/winico/setup.rb")),
  s(:send,
    s(:const, nil, :TkPackage), :require,
    s(:str, "winico")),
  s(:module,
    s(:const, nil, :Tk),
    s(:class,
      s(:const, nil, :Winico),
      s(:const, nil, :TkObject),
      s(:begin,
        s(:casgn, nil, :PACKAGE_NAME,
          s(:send,
            s(:str, "winico"), :freeze)),
        s(:defs,
          s(:self), :package_name,
          s(:args),
          s(:const, nil, :PACKAGE_NAME)),
        s(:defs,
          s(:self), :package_version,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :TkPackage), :require,
                s(:str, "winico")),
              s(:resbody, nil, nil,
                s(:str, "")), nil)))))),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Winico), nil,
    s(:begin,
      s(:casgn, nil, :WinicoID_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :WinicoID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :WinicoID_TBL), :clear))),
      s(:defs,
        s(:self), :id2obj,
        s(:args,
          s(:arg, :id)),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :WinicoID_TBL), :mutex), :synchronize),
          s(:args),
          s(:if,
            s(:begin,
              s(:send,
                s(:const, nil, :WinicoID_TBL), :key?,
                s(:lvar, :id))),
            s(:send,
              s(:const, nil, :WinicoID_TBL), :[],
              s(:lvar, :id)),
            s(:lvar, :id)))),
      s(:defs,
        s(:self), :info,
        s(:args),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send,
                s(:const, nil, :Tk), :tk_call,
                s(:str, "winico"),
                s(:str, "info"))), :collect),
          s(:args,
            s(:arg, :id)),
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :Winico), :id2obj,
            s(:lvar, :id)))),
      s(:defs,
        s(:self), :icon_info,
        s(:args,
          s(:arg, :id)),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send,
                s(:const, nil, :Tk), :tk_call,
                s(:str, "winico"),
                s(:str, "info"),
                s(:lvar, :id))), :collect),
          s(:args,
            s(:arg, :inf)),
          s(:begin,
            s(:lvasgn, :h,
              s(:send,
                s(:const, nil, :Hash), :[],
                s(:splat,
                  s(:send, nil, :list,
                    s(:lvar, :inf))))),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :h), :keys), :each),
              s(:args,
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:send,
                  s(:lvar, :k), :[],
                  s(:irange,
                    s(:int, 1),
                    s(:int, -1))),
                s(:send,
                  s(:lvar, :h), :delete,
                  s(:lvar, :k))))))),
      s(:defs,
        s(:self), :new_from_file,
        s(:args,
          s(:arg, :file_name)),
        s(:send,
          s(:self), :new,
          s(:lvar, :file_name))),
      s(:defs,
        s(:self), :new_from_resource,
        s(:args,
          s(:arg, :resource_name),
          s(:optarg, :file_name,
            s(:nil))),
        s(:send,
          s(:self), :new,
          s(:lvar, :file_name),
          s(:lvar, :resource_name))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :file_name),
          s(:optarg, :resource_name,
            s(:nil)),
          s(:optarg, :winico_id,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :resource_name),
            s(:if,
              s(:lvar, :file_name),
              s(:ivasgn, :@id,
                s(:send,
                  s(:const, nil, :Tk), :tk_call,
                  s(:str, "winico"),
                  s(:str, "load"),
                  s(:lvar, :resource_name),
                  s(:lvar, :file_name))),
              s(:ivasgn, :@id,
                s(:send,
                  s(:const, nil, :Tk), :tk_call,
                  s(:str, "winico"),
                  s(:str, "load"),
                  s(:lvar, :resource_name)))),
            s(:if,
              s(:lvar, :file_name),
              s(:ivasgn, :@id,
                s(:send,
                  s(:const, nil, :Tk), :tk_call,
                  s(:str, "winico"),
                  s(:str, "createfrom"),
                  s(:lvar, :file_name))),
              s(:if,
                s(:lvar, :winico_id),
                s(:ivasgn, :@id,
                  s(:lvar, :winico_id)),
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "must be given proper information from where loading icons"))))),
          s(:ivasgn, :@path,
            s(:ivar, :@id)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :WinicoID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :WinicoID_TBL), :[]=,
              s(:ivar, :@id),
              s(:self))))),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)),
      s(:def, :set_window,
        s(:args,
          s(:arg, :win_id),
          s(:restarg, :opts)),
        s(:send, nil, :tk_call,
          s(:str, "winico"),
          s(:str, "setwindow"),
          s(:lvar, :win_id),
          s(:ivar, :@id),
          s(:splat,
            s(:lvar, :opts)))),
      s(:def, :delete,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "winico"),
            s(:str, "delete"),
            s(:ivar, :@id)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :WinicoID_TBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :WinicoID_TBL), :delete,
              s(:ivar, :@id))),
          s(:self))),
      s(:alias,
        s(:sym, :destroy),
        s(:sym, :delete)),
      s(:def, :info,
        s(:args),
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :Winico), :icon_info,
          s(:ivar, :@id))),
      s(:class,
        s(:const, nil, :Winico_callback),
        s(:const, nil, :TkValidateCommand),
        s(:begin,
          s(:class,
            s(:const, nil, :ValidateArgs),
            s(:const,
              s(:const, nil, :TkUtil), :CallbackSubst),
            s(:begin,
              s(:casgn, nil, :KEY_TBL,
                s(:array,
                  s(:array,
                    s(:str, "m"),
                    s(:str, "s"),
                    s(:sym, :message)),
                  s(:array,
                    s(:str, "i"),
                    s(:str, "x"),
                    s(:sym, :icon)),
                  s(:array,
                    s(:str, "x"),
                    s(:str, "n"),
                    s(:sym, :x)),
                  s(:array,
                    s(:str, "y"),
                    s(:str, "n"),
                    s(:sym, :y)),
                  s(:array,
                    s(:str, "X"),
                    s(:str, "n"),
                    s(:sym, :last_x)),
                  s(:array,
                    s(:str, "Y"),
                    s(:str, "n"),
                    s(:sym, :last_y)),
                  s(:array,
                    s(:str, "t"),
                    s(:str, "n"),
                    s(:sym, :tickcount)),
                  s(:array,
                    s(:str, "w"),
                    s(:str, "n"),
                    s(:sym, :icon_idnum)),
                  s(:array,
                    s(:str, "l"),
                    s(:str, "n"),
                    s(:sym, :msg_idnum)),
                  s(:nil))),
              s(:casgn, nil, :PROC_TBL,
                s(:array,
                  s(:array,
                    s(:str, "n"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :number))),
                  s(:array,
                    s(:str, "s"),
                    s(:send,
                      s(:const, nil, :TkComm), :method,
                      s(:sym, :string))),
                  s(:array,
                    s(:str, "x"),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :id)),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const,
                              s(:const,
                                s(:const, nil, :Tk), :Winico), :WinicoID_TBL), :mutex), :synchronize),
                        s(:args),
                        s(:begin,
                          s(:if,
                            s(:send,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Tk), :Winico), :WinicoID_TBL), :key?,
                              s(:lvar, :id)),
                            s(:lvasgn, :obj,
                              s(:send,
                                s(:const,
                                  s(:const,
                                    s(:const, nil, :Tk), :Winico), :WinicoID_TBL), :[],
                                s(:lvar, :id))),
                            s(:begin,
                              s(:lvasgn, :obj,
                                s(:send,
                                  s(:const,
                                    s(:const, nil, :Tk), :Winico), :allocate)),
                              s(:block,
                                s(:send,
                                  s(:lvar, :obj), :instance_eval),
                                s(:args),
                                s(:ivasgn, :@path,
                                  s(:ivasgn, :@id,
                                    s(:lvar, :id)))),
                              s(:send,
                                s(:const,
                                  s(:const,
                                    s(:const, nil, :Tk), :Winico), :WinicoID_TBL), :[]=,
                                s(:lvar, :id),
                                s(:lvar, :obj)))),
                          s(:lvar, :obj))))),
                  s(:nil))),
              s(:send, nil, :_setup_subst_table,
                s(:const, nil, :KEY_TBL),
                s(:const, nil, :PROC_TBL)),
              s(:defs,
                s(:self), :ret_val,
                s(:args,
                  s(:arg, :val)),
                s(:lvar, :val)))),
          s(:defs,
            s(:self), :_config_keys,
            s(:args),
            s(:array,
              s(:str, "callback"))))),
      s(:def, :add_to_taskbar,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Winico_callback), :_config_keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:lvar, :k)), :kind_of?,
                s(:const, nil, :Array)),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :cmd),
                    s(:splat,
                      s(:lvasgn, :args))),
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:lvar, :k))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :Winico_callback), :new,
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :args))))),
              s(:if,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:lvar, :k))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :Winico_callback), :new,
                    s(:send,
                      s(:lvar, :keys), :[],
                      s(:lvar, :k)))), nil))),
          s(:send, nil, :tk_call,
            s(:str, "winico"),
            s(:str, "taskbar"),
            s(:str, "add"),
            s(:ivar, :@id),
            s(:splat,
              s(:begin,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys))))),
          s(:self))),
      s(:alias,
        s(:sym, :taskbar_add),
        s(:sym, :add_to_taskbar)),
      s(:def, :modify_taskbar,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Winico_callback), :_config_keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:lvar, :k)), :kind_of?,
                s(:const, nil, :Array)),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :cmd),
                    s(:splat,
                      s(:lvasgn, :args))),
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:lvar, :k))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :Winico_callback), :new,
                    s(:lvar, :cmd),
                    s(:splat,
                      s(:lvar, :args))))),
              s(:if,
                s(:send,
                  s(:const, nil, :TkComm), :_callback_entry?,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:lvar, :k))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :Winico_callback), :new,
                    s(:send,
                      s(:lvar, :keys), :[],
                      s(:lvar, :k)))), nil))),
          s(:send, nil, :tk_call,
            s(:str, "winico"),
            s(:str, "taskbar"),
            s(:str, "modify"),
            s(:ivar, :@id),
            s(:splat,
              s(:begin,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys))))),
          s(:self))),
      s(:alias,
        s(:sym, :taskbar_modify),
        s(:sym, :modify_taskbar)),
      s(:def, :delete_from_taskbar,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "winico"),
            s(:str, "taskbar"),
            s(:str, "delete"),
            s(:ivar, :@id)),
          s(:self))),
      s(:alias,
        s(:sym, :taskbar_delete),
        s(:sym, :delete_from_taskbar)))))
