s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:module,
        s(:const, nil, :Widget), nil))),
  s(:module,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BWidget), :Widget),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const, nil, :Tk)),
      s(:defs,
        s(:self), :__pathname,
        s(:args),
        s(:str, "Widget::configure")),
      s(:defs,
        s(:self), :__cget_cmd,
        s(:args),
        s(:array,
          s(:str, "Widget::cget"))),
      s(:defs,
        s(:self), :__config_cmd,
        s(:args),
        s(:array,
          s(:str, "Widget::configure"))),
      s(:defs,
        s(:self), :cget_strict,
        s(:args,
          s(:arg, :slot)),
        s(:begin,
          s(:lvasgn, :slot,
            s(:send,
              s(:lvar, :slot), :to_s)),
          s(:lvasgn, :info,
            s(:hash)),
          s(:block,
            s(:send,
              s(:send,
                s(:self), :current_configinfo), :each),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :k), :to_s), :==,
                s(:lvar, :slot)),
              s(:send,
                s(:lvar, :info), :[]=,
                s(:send,
                  s(:lvar, :k), :to_s),
                s(:lvar, :v)), nil)),
          s(:if,
            s(:send,
              s(:lvar, :info), :empty?),
            s(:send, nil, :fail,
              s(:const, nil, :RuntimeError),
              s(:dstr,
                s(:str, "unknown option \"-"),
                s(:begin,
                  s(:lvar, :slot)),
                s(:str, "\""))), nil),
          s(:send,
            s(:send,
              s(:lvar, :info), :values), :[],
            s(:int, 0)))),
      s(:defs,
        s(:self), :cget,
        s(:args,
          s(:arg, :slot)),
        s(:send,
          s(:send,
            s(:send,
              s(:self), :current_configinfo,
              s(:lvar, :slot)), :values), :[],
          s(:int, 0))),
      s(:defs,
        s(:self), :add_map,
        s(:args,
          s(:arg, :klass),
          s(:arg, :subclass),
          s(:arg, :subpath),
          s(:arg, :opts)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::addmap"),
          s(:lvar, :klass),
          s(:lvar, :subclass),
          s(:lvar, :subpath),
          s(:lvar, :opts))),
      s(:defs,
        s(:self), :bwinclude,
        s(:args,
          s(:arg, :klass),
          s(:arg, :subclass),
          s(:arg, :subpath),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::bwinclude"),
          s(:lvar, :klass),
          s(:lvar, :subclass),
          s(:lvar, :subpath),
          s(:splat,
            s(:lvar, :args)))),
      s(:defs,
        s(:self), :create,
        s(:args,
          s(:arg, :klass),
          s(:arg, :path),
          s(:optarg, :rename,
            s(:const, nil, :None)),
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send, nil, :tk_call,
                s(:str, "Widget::create"),
                s(:lvar, :klass),
                s(:lvar, :path),
                s(:lvar, :rename)))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:defs,
        s(:self), :declare,
        s(:args,
          s(:arg, :klass),
          s(:arg, :optlist)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::declare"),
          s(:lvar, :klass),
          s(:lvar, :optlist))),
      s(:defs,
        s(:self), :define,
        s(:args,
          s(:arg, :klass),
          s(:arg, :filename),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::define"),
          s(:lvar, :klass),
          s(:lvar, :filename),
          s(:splat,
            s(:lvar, :args)))),
      s(:defs,
        s(:self), :destroy,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::destroy"),
          s(:send, nil, :_epath,
            s(:lvar, :win)))),
      s(:defs,
        s(:self), :focus_next,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::focusNext"),
          s(:lvar, :win))),
      s(:defs,
        s(:self), :focus_ok,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::focusOk"),
          s(:lvar, :win))),
      s(:defs,
        s(:self), :focus_prev,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::focusPrev"),
          s(:lvar, :win))),
      s(:defs,
        s(:self), :generate_doc,
        s(:args,
          s(:arg, :dir),
          s(:arg, :widgetlist)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::generate-doc"),
          s(:lvar, :dir),
          s(:lvar, :widgetlist))),
      s(:defs,
        s(:self), :generate_widget_doc,
        s(:args,
          s(:arg, :klass),
          s(:arg, :iscmd),
          s(:arg, :file)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::generate-widget-doc"),
          s(:lvar, :klass),
          s(:lvar, :iscmd),
          s(:lvar, :file))),
      s(:defs,
        s(:self), :get_option,
        s(:args,
          s(:arg, :win),
          s(:arg, :option)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::getoption"),
          s(:lvar, :win),
          s(:lvar, :option))),
      s(:defs,
        s(:self), :get_variable,
        s(:args,
          s(:arg, :win),
          s(:arg, :varname),
          s(:optarg, :my_varname,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "Widget::getVariable"),
          s(:lvar, :win),
          s(:lvar, :varname),
          s(:lvar, :my_varname))),
      s(:defs,
        s(:self), :has_changed,
        s(:args,
          s(:arg, :win),
          s(:arg, :option),
          s(:arg, :pvalue)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::hasChanged"),
          s(:lvar, :win),
          s(:lvar, :option),
          s(:lvar, :pvalue))),
      s(:defs,
        s(:self), :init,
        s(:args,
          s(:arg, :klass),
          s(:arg, :win),
          s(:arg, :options)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::init"),
          s(:lvar, :klass),
          s(:lvar, :win),
          s(:lvar, :options))),
      s(:defs,
        s(:self), :set_option,
        s(:args,
          s(:arg, :win),
          s(:arg, :option),
          s(:arg, :value)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::setoption"),
          s(:lvar, :win),
          s(:lvar, :option),
          s(:lvar, :value))),
      s(:defs,
        s(:self), :sub_cget_strict,
        s(:args,
          s(:arg, :win),
          s(:arg, :subwidget)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::subcget"),
          s(:lvar, :win),
          s(:lvar, :subwidget))),
      s(:defs,
        s(:self), :sub_cget,
        s(:args,
          s(:arg, :win),
          s(:arg, :subwidget)),
        s(:send,
          s(:self), :sub_cget_strict,
          s(:lvar, :win),
          s(:lvar, :subwidget))),
      s(:defs,
        s(:self), :sync_options,
        s(:args,
          s(:arg, :klass),
          s(:arg, :subclass),
          s(:arg, :subpath),
          s(:arg, :options)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::syncoptions"),
          s(:lvar, :klass),
          s(:lvar, :subclass),
          s(:lvar, :subpath),
          s(:lvar, :options))),
      s(:defs,
        s(:self), :tkinclude,
        s(:args,
          s(:arg, :klass),
          s(:arg, :tkwidget),
          s(:arg, :subpath),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "Widget::tkinclude"),
          s(:lvar, :klass),
          s(:lvar, :tkwidget),
          s(:lvar, :subpath),
          s(:splat,
            s(:lvar, :args)))))))
