s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/frame")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget/buttonbox")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:class,
        s(:const, nil, :Dialog),
        s(:const, nil, :TkWindow), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BWidget), :Dialog), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "Dialog"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Dialog"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__numstrval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "buttonwidth"))),
      s(:send, nil, :private,
        s(:sym, :__numstrval_optkeys)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:super), :<<,
            s(:str, "title")), :<<,
          s(:str, "geometry"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:super), :<<,
            s(:str, "transient")), :<<,
          s(:str, "homogeneous"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@relative,
            s(:str, "")),
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :parent))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "parent")),
                s(:ivasgn, :@relative,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:str, "parent"))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "relative")),
                s(:ivasgn, :@relative,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "relative"))), nil),
              s(:super,
                s(:lvar, :keys))),
            s(:if,
              s(:lvar, :keys),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :key?,
                    s(:str, "parent")),
                  s(:ivasgn, :@relative,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "parent"))), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :key?,
                    s(:str, "relative")),
                  s(:ivasgn, :@relative,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "relative"))), nil),
                s(:super,
                  s(:lvar, :parent),
                  s(:lvar, :keys))),
              s(:super,
                s(:lvar, :parent)))))),
      s(:def, :create_self,
        s(:args,
          s(:arg, :keys)),
        s(:begin,
          s(:lvasgn, :cmd,
            s(:send,
              s(:const,
                s(:send,
                  s(:self), :class), :TkCommandNames), :[],
              s(:int, 0))),
          s(:if,
            s(:and,
              s(:lvar, :keys),
              s(:send,
                s(:lvar, :keys), :!=,
                s(:const, nil, :None))),
            s(:send, nil, :tk_call_without_enc,
              s(:lvar, :cmd),
              s(:ivar, :@path),
              s(:str, "-parent"),
              s(:ivar, :@relative),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys),
                  s(:true)))),
            s(:send, nil, :tk_call_without_enc,
              s(:lvar, :cmd),
              s(:ivar, :@path),
              s(:str, "-parent"),
              s(:ivar, :@relative))))),
      s(:def, :cget_tkstring,
        s(:args,
          s(:arg, :slot)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :slot), :to_s), :==,
            s(:str, "relative")),
          s(:super,
            s(:str, "parent")),
          s(:super,
            s(:lvar, :slot)))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :slot)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :slot), :to_s), :==,
            s(:str, "relative")),
          s(:super,
            s(:str, "parent")),
          s(:super,
            s(:lvar, :slot)))),
      s(:def, :cget,
        s(:args,
          s(:arg, :slot)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :slot), :to_s), :==,
            s(:str, "relative")),
          s(:super,
            s(:str, "parent")),
          s(:super,
            s(:lvar, :slot)))),
      s(:def, :configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:if,
          s(:send,
            s(:lvar, :slot), :kind_of?,
            s(:const, nil, :Hash)),
          s(:begin,
            s(:lvasgn, :slot,
              s(:send, nil, :_symbolkey2str,
                s(:lvar, :slot))),
            s(:if,
              s(:send,
                s(:lvar, :slot), :key?,
                s(:str, "relative")),
              s(:send,
                s(:lvar, :slot), :[]=,
                s(:str, "parent"),
                s(:send,
                  s(:lvar, :slot), :delete,
                  s(:str, "relative"))), nil),
            s(:super,
              s(:lvar, :slot))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :slot), :to_s), :==,
              s(:str, "relative")),
            s(:super,
              s(:str, "parent"),
              s(:lvar, :value)),
            s(:super,
              s(:lvar, :slot),
              s(:lvar, :value))))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:if,
          s(:lvar, :slot),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :slot), :to_s), :==,
              s(:str, "relative")),
            s(:super,
              s(:str, "parent")),
            s(:super,
              s(:lvar, :slot))),
          s(:begin,
            s(:lvasgn, :ret,
              s(:super)),
            s(:if,
              s(:const,
                s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
              s(:send,
                s(:lvar, :ret), :<<,
                s(:array,
                  s(:str, "relative"),
                  s(:str, "parent"))),
              s(:send,
                s(:lvar, :ret), :[]=,
                s(:str, "relative"),
                s(:str, "parent")))))),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tagOrId)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tagOrId), :kind_of?,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Button)),
            s(:begin,
              s(:lvasgn, :name,
                s(:send,
                  s(:lvar, :tagOrId), :[],
                  s(:sym, :name))),
              s(:if,
                s(:send,
                  s(:lvar, :name), :empty?), nil,
                s(:return,
                  s(:send, nil, :index,
                    s(:lvar, :name))))), nil),
          s(:if,
            s(:send,
              s(:lvar, :tagOrId), :kind_of?,
              s(:const,
                s(:const, nil, :Tk), :Button)),
            s(:return,
              s(:send, nil, :index,
                s(:send,
                  s(:lvar, :tagOrId), :[],
                  s(:sym, :text)))), nil),
          s(:send, nil, :index,
            s(:send, nil, :_get_eval_string,
              s(:lvar, :tagOrId))))),
      s(:def, :add,
        s(:args,
          s(:optarg, :keys,
            s(:hash)),
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send, nil, :tk_send,
                s(:str, "add"),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys)))))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:def, :get_frame,
        s(:args,
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send, nil, :tk_send,
                s(:str, "getframe")))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:def, :get_buttonbox,
        s(:args,
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send,
                s(:ivar, :@path), :+,
                s(:str, ".bbox")))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:def, :draw,
        s(:args,
          s(:optarg, :focus_win,
            s(:const, nil, :None))),
        s(:send, nil, :tk_send,
          s(:str, "draw"),
          s(:lvar, :focus_win))),
      s(:def, :enddialog,
        s(:args,
          s(:arg, :ret)),
        s(:send, nil, :tk_send,
          s(:str, "enddialog"),
          s(:lvar, :ret))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send,
          s(:send, nil, :get_buttonbox), :index,
          s(:lvar, :idx))),
      s(:def, :invoke,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "invoke"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :set_focus,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "setfocus"),
            s(:send, nil, :tagid,
              s(:lvar, :idx))),
          s(:self))),
      s(:def, :withdraw,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "withdraw")),
          s(:self))))))
