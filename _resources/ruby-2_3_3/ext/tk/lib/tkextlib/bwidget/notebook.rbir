s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/frame")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:class,
        s(:const, nil, :NoteBook),
        s(:const, nil, :TkWindow), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BWidget), :NoteBook), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "NoteBook"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "NoteBook"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:class,
        s(:const, nil, :Event_for_Tabs),
        s(:const,
          s(:const, nil, :TkEvent), :Event),
        s(:defs,
          s(:self), :_get_extra_args_tbl,
          s(:args),
          s(:array,
            s(:send,
              s(:const, nil, :TkComm), :method,
              s(:sym, :string))))),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "homogeneous"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :id)),
        s(:if,
          s(:send,
            s(:lvar, :id), :kind_of?,
            s(:const, nil, :TkWindow)),
          s(:send,
            s(:lvar, :id), :epath),
          s(:if,
            s(:send,
              s(:lvar, :id), :kind_of?,
              s(:const, nil, :TkObject)),
            s(:send,
              s(:lvar, :id), :to_eval),
            s(:send, nil, :_get_eval_string,
              s(:lvar, :id))))),
      s(:def, :tabbind,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_for_event_class,
            s(:const, nil, :Event_for_Tabs),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindtabs")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :tabbind_append,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append_for_event_class,
            s(:const, nil, :Event_for_Tabs),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindtabs")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :tabbind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :_bind_remove_for_event_class,
            s(:const, nil, :Event_for_Tabs),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindtabs")),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :tabbindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :_bindinfo_for_event_class,
          s(:const, nil, :Event_for_Tabs),
          s(:array,
            s(:send, nil, :path),
            s(:str, "bindtabs")),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :add,
        s(:args,
          s(:arg, :page),
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send, nil, :tk_send,
                s(:str, "add"),
                s(:send, nil, :tagid,
                  s(:lvar, :page))))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:def, :compute_size,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "compute_size")),
          s(:self))),
      s(:def, :delete,
        s(:args,
          s(:arg, :page),
          s(:optarg, :destroyframe,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "delete"),
            s(:send, nil, :tagid,
              s(:lvar, :page)),
            s(:lvar, :destroyframe)),
          s(:self))),
      s(:def, :get_frame,
        s(:args,
          s(:arg, :page),
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send, nil, :tk_send,
                s(:str, "getframe"),
                s(:send, nil, :tagid,
                  s(:lvar, :page))))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:def, :index,
        s(:args,
          s(:arg, :page)),
        s(:send, nil, :num_or_str,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :page))))),
      s(:def, :insert,
        s(:args,
          s(:arg, :index),
          s(:arg, :page),
          s(:optarg, :keys,
            s(:hash)),
          s(:blockarg, :b)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :window,
              s(:send, nil, :tk_send,
                s(:str, "insert"),
                s(:lvar, :index),
                s(:send, nil, :tagid,
                  s(:lvar, :page)),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys)))))),
          s(:if,
            s(:lvar, :b),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :win), :instance_exec,
                s(:self),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :win), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :win))),
      s(:def, :move,
        s(:args,
          s(:arg, :page),
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :page)),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :get_page,
        s(:args,
          s(:arg, :page)),
        s(:send, nil, :tk_send,
          s(:str, "pages"),
          s(:lvar, :page))),
      s(:def, :pages,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "pages"),
            s(:lvar, :first),
            s(:lvar, :last)))),
      s(:def, :raise,
        s(:args,
          s(:optarg, :page,
            s(:nil))),
        s(:if,
          s(:lvar, :page),
          s(:begin,
            s(:send, nil, :tk_send,
              s(:str, "raise"),
              s(:lvar, :page)),
            s(:self)),
          s(:send, nil, :tk_send,
            s(:str, "raise")))),
      s(:def, :see,
        s(:args,
          s(:arg, :page)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "see"),
            s(:lvar, :page)),
          s(:self))))))
