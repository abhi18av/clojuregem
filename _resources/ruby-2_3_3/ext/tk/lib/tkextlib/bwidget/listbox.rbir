s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/canvas")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:class,
        s(:const, nil, :ListBox),
        s(:const, nil, :TkWindow),
        s(:class,
          s(:const, nil, :Item),
          s(:const, nil, :TkObject), nil)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BWidget), :ListBox), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:send, nil, :include,
        s(:const, nil, :Scrollable)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "ListBox"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "ListBox"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:class,
        s(:const, nil, :Event_for_Items),
        s(:const,
          s(:const, nil, :TkEvent), :Event),
        s(:defs,
          s(:self), :_get_extra_args_tbl,
          s(:args),
          s(:array,
            s(:send,
              s(:const, nil, :TkComm), :method,
              s(:sym, :string))))),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:super), :<<,
                s(:str, "autofocus")), :<<,
              s(:str, "dragenabled")), :<<,
            s(:str, "dropenabled")), :<<,
          s(:str, "selectfill"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:send,
            s(:lvar, :tag), :kind_of?,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ListBox), :Item)),
          s(:send,
            s(:lvar, :tag), :id),
          s(:send, nil, :_get_eval_string,
            s(:lvar, :tag)))),
      s(:def, :imagebind,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_for_event_class,
            s(:const, nil, :Event_for_Items),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindImage")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :imagebind_append,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append_for_event_class,
            s(:const, nil, :Event_for_Items),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindImage")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :imagebind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :_bind_remove_for_event_class,
            s(:const, nil, :Event_for_Items),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindImage")),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :imagebindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :_bindinfo_for_event_class,
          s(:const, nil, :Event_for_Items),
          s(:array,
            s(:send, nil, :path),
            s(:str, "bindImage")),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :textbind,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_for_event_class,
            s(:const, nil, :Event_for_Items),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindText")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :textbind_append,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append_for_event_class,
            s(:const, nil, :Event_for_Items),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindText")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :textbind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :_bind_remove_for_event_class,
            s(:const, nil, :Event_for_Items),
            s(:array,
              s(:send, nil, :path),
              s(:str, "bindText")),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :textbindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :_bindinfo_for_event_class,
          s(:const, nil, :Event_for_Items),
          s(:array,
            s(:send, nil, :path),
            s(:str, "bindText")),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :delete,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "delete"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :edit,
        s(:args,
          s(:arg, :item),
          s(:arg, :text),
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "edit"),
            s(:send, nil, :tagid,
              s(:lvar, :item)),
            s(:lvar, :text),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :exist?,
        s(:args,
          s(:arg, :item)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "exists"),
            s(:send, nil, :tagid,
              s(:lvar, :item))))),
      s(:def, :index,
        s(:args,
          s(:arg, :item)),
        s(:send, nil, :num_or_str,
          s(:send, nil, :tk_send,
            s(:str, "index"),
            s(:send, nil, :tagid,
              s(:lvar, :item))))),
      s(:def, :insert,
        s(:args,
          s(:arg, :idx),
          s(:arg, :item),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "insert"),
            s(:lvar, :idx),
            s(:send, nil, :tagid,
              s(:lvar, :item)),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :keys)))),
          s(:self))),
      s(:def, :get_item,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :tk_send,
          s(:str, "items"),
          s(:lvar, :idx))),
      s(:def, :items,
        s(:args,
          s(:optarg, :first,
            s(:const, nil, :None)),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "items"),
            s(:lvar, :first),
            s(:lvar, :last)))),
      s(:def, :move,
        s(:args,
          s(:arg, :item),
          s(:arg, :idx)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "move"),
            s(:send, nil, :tagid,
              s(:lvar, :item)),
            s(:lvar, :idx)),
          s(:self))),
      s(:def, :reorder,
        s(:args,
          s(:arg, :neworder)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "reorder"),
            s(:lvar, :neworder)),
          s(:self))),
      s(:def, :see,
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "see"),
            s(:send, nil, :tagid,
              s(:lvar, :item))),
          s(:self))),
      s(:def, :selection_clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "clear")),
          s(:self))),
      s(:def, :selection_set,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "set"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :item)),
                  s(:send, nil, :tagid,
                    s(:lvar, :item)))))),
          s(:self))),
      s(:def, :selection_add,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "add"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :item)),
                  s(:send, nil, :tagid,
                    s(:lvar, :item)))))),
          s(:self))),
      s(:def, :selection_remove,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "remove"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :item)),
                  s(:send, nil, :tagid,
                    s(:lvar, :item)))))),
          s(:self))),
      s(:def, :selection_get,
        s(:args,
          s(:restarg, :args)),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_send_without_enc,
                s(:str, "selection"),
                s(:str, "get"))), :collect),
          s(:args,
            s(:arg, :item)),
          s(:send,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ListBox), :Item), :id2obj,
            s(:self),
            s(:lvar, :item)))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :BWidget), :ListBox), :Item), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkTreatTagFont)),
      s(:casgn, nil, :ListItem_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :ListItem_ID,
              s(:array,
                s(:send,
                  s(:str, "bw:item"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :ListItem_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :ListItem_TBL), :clear))),
      s(:defs,
        s(:self), :id2obj,
        s(:args,
          s(:arg, :lbox),
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :lpath,
            s(:send,
              s(:lvar, :lbox), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :ListItem_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :ListItem_TBL), :[],
                s(:lvar, :lpath)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :ListItem_TBL), :[],
                    s(:lvar, :lpath)), :[],
                  s(:lvar, :id)),
                s(:send,
                  s(:send,
                    s(:const, nil, :ListItem_TBL), :[],
                    s(:lvar, :lpath)), :[],
                  s(:lvar, :id)),
                s(:lvar, :id)),
              s(:lvar, :id))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :lbox),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :lbox), :kind_of?,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ListBox)),
            s(:ivasgn, :@listbox,
              s(:lvar, :lbox)),
            s(:send, nil, :fail,
              s(:const, nil, :RuntimeError),
              s(:str, "expect Tk::BWidget::ListBox or Tk::BWidget::ListBox::Item for 1st argument"))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:lvasgn, :keys,
              s(:send, nil, :_symbolkey2str,
                s(:send,
                  s(:lvar, :args), :pop))),
            s(:lvasgn, :keys,
              s(:hash))),
          s(:lvasgn, :index,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "index"))),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?), nil,
            s(:lvasgn, :index,
              s(:send,
                s(:lvar, :args), :shift))),
          s(:if,
            s(:lvar, :index), nil,
            s(:lvasgn, :index,
              s(:str, "end"))),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?), nil,
            s(:send, nil, :fail,
              s(:const, nil, :RuntimeError),
              s(:str, "too much arguments"))),
          s(:ivasgn, :@lpath,
            s(:send,
              s(:ivar, :@listbox), :path)),
          s(:if,
            s(:send,
              s(:lvar, :keys), :key?,
              s(:str, "itemname")),
            s(:ivasgn, :@path,
              s(:ivasgn, :@id,
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "itemname")))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :ListItem_ID), :mutex), :synchronize),
              s(:args),
              s(:begin,
                s(:ivasgn, :@path,
                  s(:ivasgn, :@id,
                    s(:send,
                      s(:const, nil, :ListItem_ID), :join,
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
                s(:send,
                  s(:send,
                    s(:const, nil, :ListItem_ID), :[],
                    s(:int, 1)), :succ!)))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :ListItem_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:send,
                s(:const, nil, :ListItem_TBL), :[]=,
                s(:ivar, :@id),
                s(:self)),
              s(:if,
                s(:send,
                  s(:const, nil, :ListItem_TBL), :[],
                  s(:ivar, :@lpath)), nil,
                s(:send,
                  s(:const, nil, :ListItem_TBL), :[]=,
                  s(:ivar, :@lpath),
                  s(:hash))),
              s(:send,
                s(:send,
                  s(:const, nil, :ListItem_TBL), :[],
                  s(:ivar, :@lpath)), :[]=,
                s(:ivar, :@id),
                s(:self)))),
          s(:send,
            s(:ivar, :@listbox), :insert,
            s(:lvar, :index),
            s(:ivar, :@id),
            s(:lvar, :keys)))),
      s(:def, :listbox,
        s(:args),
        s(:ivar, :@listbox)),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)),
      s(:def, :[],
        s(:args,
          s(:arg, :key)),
        s(:send, nil, :cget,
          s(:lvar, :key))),
      s(:def, :[]=,
        s(:args,
          s(:arg, :key),
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :configure,
            s(:lvar, :key),
            s(:lvar, :val)),
          s(:lvar, :val))),
      s(:def, :cget_tkstring,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@listbox), :itemcget_tkstring,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :cget,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@listbox), :itemcget,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@listbox), :itemcget_strict,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :configure,
        s(:args,
          s(:arg, :key),
          s(:optarg, :val,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@listbox), :itemconfigure,
          s(:ivar, :@id),
          s(:lvar, :key),
          s(:lvar, :val))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@listbox), :itemconfiginfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :current_configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@listbox), :current_itemconfiginfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :delete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@listbox), :delete,
            s(:ivar, :@id)),
          s(:self))),
      s(:def, :edit,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:ivar, :@listbox), :edit,
            s(:ivar, :@id),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :exist?,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :exist?,
          s(:ivar, :@id))),
      s(:def, :index,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :index,
          s(:ivar, :@id))),
      s(:def, :move,
        s(:args,
          s(:arg, :index)),
        s(:send,
          s(:ivar, :@listbox), :move,
          s(:ivar, :@id),
          s(:lvar, :index))),
      s(:def, :see,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :see,
          s(:ivar, :@id))),
      s(:def, :selection_add,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :selection_add,
          s(:ivar, :@id))),
      s(:def, :selection_remove,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :selection_remove,
          s(:ivar, :@id))),
      s(:def, :selection_set,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :selection_set,
          s(:ivar, :@id))),
      s(:def, :selection_toggle,
        s(:args),
        s(:send,
          s(:ivar, :@listbox), :selection_toggle,
          s(:ivar, :@id))))))
