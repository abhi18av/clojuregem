s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/entry")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget/labelframe")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget/entry")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:class,
        s(:const, nil, :LabelEntry),
        s(:const,
          s(:const, nil, :Tk), :Entry), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BWidget), :LabelEntry), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Scrollable)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "LabelEntry"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "LabelEntry"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:super), :<<,
                s(:str, "helptext")), :<<,
              s(:str, "insertbackground")), :<<,
            s(:str, "entryfg")), :<<,
          s(:str, "entrybg"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :__tkvariable_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "helpvar"))),
      s(:send, nil, :private,
        s(:sym, :__tkvariable_optkeys)),
      s(:def, :__font_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "labelfont"))),
      s(:send, nil, :private,
        s(:sym, :__font_optkeys)),
      s(:def, :entrybind,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :entrybind_append,
        s(:args,
          s(:arg, :context),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind")),
            s(:lvar, :context),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :entrybind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :_bind_remove,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind")),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :entrybindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send, nil, :_bindinfo,
            s(:array,
              s(:send, nil, :path),
              s(:str, "bind")),
            s(:splat,
              s(:lvar, :args))),
          s(:self))))))
