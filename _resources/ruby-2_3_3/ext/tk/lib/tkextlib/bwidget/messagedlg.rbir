s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget.rb")),
  s(:send, nil, :require,
    s(:str, "tkextlib/bwidget/dialog.rb")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :BWidget),
      s(:class,
        s(:const, nil, :MessageDlg),
        s(:const, nil, :TkWindow), nil))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BWidget), :MessageDlg), nil,
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "MessageDlg"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "MessageDlg"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@relative,
            s(:str, "")),
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :parent))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "parent")),
                s(:ivasgn, :@relative,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:str, "parent"))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "relative")),
                s(:ivasgn, :@relative,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "relative"))), nil),
              s(:super,
                s(:lvar, :keys))),
            s(:if,
              s(:lvar, :keys),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :key?,
                    s(:str, "parent")),
                  s(:ivasgn, :@relative,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "parent"))), nil),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :key?,
                    s(:str, "relative")),
                  s(:ivasgn, :@relative,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "relative"))), nil),
                s(:super,
                  s(:lvar, :parent),
                  s(:lvar, :keys))),
              s(:super,
                s(:lvar, :parent)))))),
      s(:def, :create_self,
        s(:args,
          s(:arg, :keys)),
        s(:begin,
          s(:ivasgn, :@keys,
            s(:send,
              s(:send, nil, :_symbolkey2str,
                s(:lvar, :keys)), :update,
              s(:hash,
                s(:pair,
                  s(:str, "parent"),
                  s(:ivar, :@relative))))),
          s(:ivasgn, :@info,
            s(:nil)))),
      s(:send, nil, :private,
        s(:sym, :create_self)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:send,
            s(:super), :<<,
            s(:str, "message")), :<<,
          s(:str, "title"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :__listval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "buttons"))),
      s(:send, nil, :private,
        s(:sym, :__listval_optkeys)),
      s(:def, :cget,
        s(:args,
          s(:arg, :slot)),
        s(:begin,
          s(:lvasgn, :slot,
            s(:send,
              s(:lvar, :slot), :to_s)),
          s(:if,
            s(:send,
              s(:lvar, :slot), :==,
              s(:str, "relative")),
            s(:lvasgn, :slot,
              s(:str, "parent")), nil),
          s(:if,
            s(:send, nil, :winfo_exist?),
            s(:begin,
              s(:lvasgn, :val,
                s(:super,
                  s(:lvar, :slot))),
              s(:send,
                s(:ivar, :@keys), :[]=,
                s(:lvar, :slot),
                s(:lvar, :val))), nil),
          s(:send,
            s(:ivar, :@keys), :[],
            s(:lvar, :slot)))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :slot)),
        s(:begin,
          s(:lvasgn, :slot,
            s(:send,
              s(:lvar, :slot), :to_s)),
          s(:if,
            s(:send,
              s(:lvar, :slot), :==,
              s(:str, "relative")),
            s(:lvasgn, :slot,
              s(:str, "parent")), nil),
          s(:if,
            s(:send, nil, :winfo_exist?),
            s(:begin,
              s(:lvasgn, :val,
                s(:super,
                  s(:lvar, :slot))),
              s(:send,
                s(:ivar, :@keys), :[]=,
                s(:lvar, :slot),
                s(:lvar, :val))), nil),
          s(:send,
            s(:ivar, :@keys), :[],
            s(:lvar, :slot)))),
      s(:def, :configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:send, nil, :winfo_exist?),
            s(:super,
              s(:lvar, :slot),
              s(:lvar, :value)), nil),
          s(:if,
            s(:send,
              s(:lvar, :slot), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :slot,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :slot))),
              s(:if,
                s(:send,
                  s(:lvar, :slot), :key?,
                  s(:str, "relative")),
                s(:send,
                  s(:lvar, :slot), :[]=,
                  s(:str, "parent"),
                  s(:send,
                    s(:lvar, :slot), :delete,
                    s(:str, "relative"))), nil),
              s(:send,
                s(:ivar, :@keys), :update,
                s(:lvar, :slot)),
              s(:if,
                s(:ivar, :@info),
                s(:block,
                  s(:send,
                    s(:lvar, :slot), :each),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:if,
                    s(:const,
                      s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
                    s(:if,
                      s(:begin,
                        s(:lvasgn, :inf,
                          s(:send,
                            s(:ivar, :@info), :assoc,
                            s(:lvar, :k)))),
                      s(:send,
                        s(:lvar, :inf), :[]=,
                        s(:int, -1),
                        s(:lvar, :v)),
                      s(:send,
                        s(:ivar, :@info), :<<,
                        s(:array,
                          s(:lvar, :k),
                          s(:str, ""),
                          s(:str, ""),
                          s(:str, ""),
                          s(:lvar, :v)))),
                    s(:if,
                      s(:begin,
                        s(:lvasgn, :inf,
                          s(:send,
                            s(:ivar, :@info), :[],
                            s(:lvar, :k)))),
                      s(:send,
                        s(:lvar, :inf), :[]=,
                        s(:int, -1),
                        s(:lvar, :v)),
                      s(:send,
                        s(:ivar, :@info), :[]=,
                        s(:lvar, :k),
                        s(:array,
                          s(:str, ""),
                          s(:str, ""),
                          s(:str, ""),
                          s(:lvar, :v)))))), nil)),
            s(:begin,
              s(:lvasgn, :slot,
                s(:send,
                  s(:lvar, :slot), :to_s)),
              s(:if,
                s(:send,
                  s(:lvar, :slot), :==,
                  s(:str, "relative")),
                s(:lvasgn, :slot,
                  s(:str, "parent")), nil),
              s(:send,
                s(:ivar, :@keys), :[]=,
                s(:lvar, :slot),
                s(:lvar, :value)),
              s(:if,
                s(:ivar, :@info),
                s(:if,
                  s(:const,
                    s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :inf,
                        s(:send,
                          s(:ivar, :@info), :assoc,
                          s(:lvar, :slot)))),
                    s(:send,
                      s(:lvar, :inf), :[]=,
                      s(:int, -1),
                      s(:lvar, :value)),
                    s(:send,
                      s(:ivar, :@info), :<<,
                      s(:array,
                        s(:lvar, :slot),
                        s(:str, ""),
                        s(:str, ""),
                        s(:str, ""),
                        s(:lvar, :value)))),
                  s(:if,
                    s(:begin,
                      s(:lvasgn, :inf,
                        s(:send,
                          s(:ivar, :@info), :[],
                          s(:lvar, :slot)))),
                    s(:send,
                      s(:lvar, :inf), :[]=,
                      s(:int, -1),
                      s(:lvar, :value)),
                    s(:send,
                      s(:ivar, :@info), :[]=,
                      s(:lvar, :slot),
                      s(:array,
                        s(:str, ""),
                        s(:str, ""),
                        s(:str, ""),
                        s(:lvar, :value))))), nil))),
          s(:self))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send, nil, :winfo_exist?),
            s(:begin,
              s(:ivasgn, :@info,
                s(:super)),
              s(:if,
                s(:const,
                  s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
                s(:send,
                  s(:ivar, :@info), :<<,
                  s(:array,
                    s(:str, "relative"),
                    s(:str, "parent"))),
                s(:send,
                  s(:ivar, :@info), :[]=,
                  s(:str, "relative"),
                  s(:str, "parent")))), nil),
          s(:if,
            s(:const,
              s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
            s(:begin,
              s(:if,
                s(:ivar, :@info),
                s(:if,
                  s(:send, nil, :winfo_exist?),
                  s(:block,
                    s(:send,
                      s(:ivar, :@info), :each),
                    s(:args,
                      s(:arg, :inf)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :inf), :size), :>,
                        s(:int, 2)),
                      s(:send,
                        s(:ivar, :@keys), :[]=,
                        s(:send,
                          s(:lvar, :inf), :[],
                          s(:int, 0)),
                        s(:send,
                          s(:lvar, :inf), :[],
                          s(:int, -1))), nil)), nil),
                s(:begin,
                  s(:ivasgn, :@info,
                    s(:array)),
                  s(:block,
                    s(:send,
                      s(:ivar, :@keys), :each),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:send,
                      s(:ivar, :@info), :<<,
                      s(:array,
                        s(:lvar, :k),
                        s(:str, ""),
                        s(:str, ""),
                        s(:str, ""),
                        s(:lvar, :v)))),
                  s(:send,
                    s(:ivar, :@info), :<<,
                    s(:array,
                      s(:str, "relative"),
                      s(:str, "parent"))))),
              s(:if,
                s(:lvar, :slot),
                s(:send,
                  s(:send,
                    s(:ivar, :@info), :asoc,
                    s(:send,
                      s(:lvar, :slot), :to_s)), :dup),
                s(:send,
                  s(:ivar, :@info), :dup))),
            s(:begin,
              s(:if,
                s(:ivar, :@info),
                s(:if,
                  s(:send, nil, :winfo_exist?),
                  s(:block,
                    s(:send,
                      s(:ivar, :@info), :each),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :inf)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :inf), :size), :>,
                        s(:int, 2)),
                      s(:send,
                        s(:ivar, :@keys), :[]=,
                        s(:lvar, :k),
                        s(:send,
                          s(:lvar, :inf), :[],
                          s(:int, -1))), nil)), nil),
                s(:begin,
                  s(:ivasgn, :@info,
                    s(:hash)),
                  s(:block,
                    s(:send,
                      s(:ivar, :@keys), :each),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:send,
                      s(:ivar, :@info), :[]=,
                      s(:lvar, :k),
                      s(:array,
                        s(:str, ""),
                        s(:str, ""),
                        s(:str, ""),
                        s(:lvar, :v)))),
                  s(:send,
                    s(:ivar, :@info), :[]=,
                    s(:str, "relative"),
                    s(:str, "parent")))),
              s(:if,
                s(:lvar, :slot),
                s(:send,
                  s(:send,
                    s(:ivar, :@info), :[],
                    s(:send,
                      s(:lvar, :slot), :to_s)), :dup),
                s(:send,
                  s(:ivar, :@info), :dup)))))),
      s(:def, :create,
        s(:args),
        s(:begin,
          s(:lvasgn, :ret,
            s(:send, nil, :num_or_str,
              s(:send, nil, :tk_call,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 0)),
                s(:ivar, :@path),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:ivar, :@keys)))))),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :ret), :<,
                s(:int, 0))),
            s(:nil),
            s(:lvar, :ret)))))))
