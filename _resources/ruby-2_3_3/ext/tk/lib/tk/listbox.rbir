s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/itemconfig")),
  s(:send, nil, :require,
    s(:str, "tk/scrollable")),
  s(:send, nil, :require,
    s(:str, "tk/txtwin_abst")),
  s(:module,
    s(:const, nil, :TkListItemConfig),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkItemConfigMethod)),
      s(:def, :__item_listval_optkeys,
        s(:args,
          s(:arg, :id)),
        s(:array)),
      s(:send, nil, :private,
        s(:sym, :__item_listval_optkeys)))),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Listbox),
    s(:const, nil, :TkTextWin),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkListItemConfig)),
      s(:send, nil, :include,
        s(:const, nil, :Scrollable)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "listbox"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Listbox"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__tkvariable_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "listvariable"))),
      s(:send, nil, :private,
        s(:sym, :__tkvariable_optkeys)),
      s(:def, :tagid,
        s(:args,
          s(:arg, :id)),
        s(:send, nil, :_get_eval_string,
          s(:lvar, :id))),
      s(:def, :activate,
        s(:args,
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "activate"),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :curselection,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "curselection")))),
      s(:def, :get,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:nil))),
        s(:if,
          s(:lvar, :last),
          s(:send, nil, :tk_split_simplelist,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "get"),
              s(:lvar, :first),
              s(:lvar, :last)),
            s(:false),
            s(:true)),
          s(:send, nil, :_fromUTF8,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "get"),
              s(:lvar, :first))))),
      s(:def, :nearest,
        s(:args,
          s(:arg, :y)),
        s(:send,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "nearest"),
            s(:lvar, :y)), :to_i)),
      s(:def, :size,
        s(:args),
        s(:send,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "size")), :to_i)),
      s(:def, :selection_anchor,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "anchor"),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :selection_clear,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "clear"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :selection_includes,
        s(:args,
          s(:arg, :index)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "includes"),
            s(:lvar, :index)))),
      s(:def, :selection_set,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "set"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "index"),
            s(:lvar, :idx)), :to_i)),
      s(:def, :value,
        s(:args),
        s(:send, nil, :get,
          s(:str, "0"),
          s(:str, "end"))),
      s(:def, :value=,
        s(:args,
          s(:arg, :vals)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :vals), :kind_of?,
              s(:const, nil, :Array)), nil,
            s(:send, nil, :fail,
              s(:const, nil, :ArgumentError),
              s(:str, "an Array is expected"))),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "delete"),
            s(:str, "0"),
            s(:str, "end")),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "insert"),
            s(:str, "0"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :vals), :collect),
                  s(:args,
                    s(:arg, :v)),
                  s(:send, nil, :_get_eval_enc_str,
                    s(:lvar, :v)))))),
          s(:lvar, :vals))),
      s(:def, :clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "delete"),
            s(:str, "0"),
            s(:str, "end")),
          s(:self))),
      s(:alias,
        s(:sym, :erase),
        s(:sym, :clear)))),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/listbox.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :Listbox),
    s(:sym, :TkListbox)))
