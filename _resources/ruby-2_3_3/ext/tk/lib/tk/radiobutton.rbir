s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/button")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :RadioButton),
    s(:const,
      s(:const, nil, :Tk), :Button),
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "radiobutton"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Radiobutton"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "indicatoron"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "selectcolor"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :__ruby2val_optkeys,
        s(:args),
        s(:hash,
          s(:pair,
            s(:str, "variable"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :v)),
              s(:send, nil, :tk_trace_variable,
                s(:lvar, :v)))))),
      s(:send, nil, :private,
        s(:sym, :__ruby2val_optkeys)),
      s(:def, :deselect,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "deselect")),
          s(:self))),
      s(:def, :select,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "select")),
          s(:self))),
      s(:def, :get_value,
        s(:args),
        s(:begin,
          s(:lvasgn, :var,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "cget"),
              s(:str, "-variable"))),
          s(:if,
            s(:const,
              s(:const, nil, :TkVariable), :USE_TCLs_SET_VARIABLE_FUNCTIONS),
            s(:send, nil, :_fromUTF8,
              s(:send,
                s(:const, nil, :INTERP), :_get_global_var,
                s(:lvar, :var))),
            s(:send,
              s(:const, nil, :INTERP), :_eval,
              s(:send,
                s(:const, nil, :Kernel), :format,
                s(:str, "global %s; set %s"),
                s(:lvar, :var),
                s(:lvar, :var)))))),
      s(:def, :set_value,
        s(:args,
          s(:arg, :val)),
        s(:begin,
          s(:lvasgn, :var,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "cget"),
              s(:str, "-variable"))),
          s(:if,
            s(:const,
              s(:const, nil, :TkVariable), :USE_TCLs_SET_VARIABLE_FUNCTIONS),
            s(:send, nil, :_fromUTF8,
              s(:send,
                s(:const, nil, :INTERP), :_set_global_var,
                s(:lvar, :var),
                s(:send, nil, :_get_eval_string,
                  s(:lvar, :val),
                  s(:true)))),
            s(:begin,
              s(:lvasgn, :s,
                s(:send,
                  s(:send,
                    s(:str, "\""), :+,
                    s(:send,
                      s(:send, nil, :_get_eval_string,
                        s(:lvar, :val)), :gsub,
                      s(:regexp,
                        s(:str, "[\\[\\]$\"\\\\]"),
                        s(:regopt)),
                      s(:str, "\\\\\\&"))), :+,
                  s(:str, "\""))),
              s(:send,
                s(:const, nil, :INTERP), :_eval,
                s(:send,
                  s(:const, nil, :Kernel), :format,
                  s(:str, "global %s; set %s %s"),
                  s(:lvar, :var),
                  s(:lvar, :var),
                  s(:lvar, :s))))))))),
  s(:casgn,
    s(:const, nil, :Tk), :Radiobutton,
    s(:const,
      s(:const, nil, :Tk), :RadioButton)),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/radiobutton.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :RadioButton),
    s(:sym, :TkRadioButton),
    s(:sym, :TkRadiobutton)))
