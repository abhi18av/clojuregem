s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/wm")),
  s(:send, nil, :require,
    s(:str, "tk/menuspec")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Root),
    s(:const, nil, :TkWindow),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Wm)),
      s(:send, nil, :include,
        s(:const, nil, :TkMenuSpec)),
      s(:def, :__methodcall_optkeys,
        s(:args),
        s(:const, nil, :TOPLEVEL_METHODCALL_OPTKEYS)),
      s(:send, nil, :private,
        s(:sym, :__methodcall_optkeys)),
      s(:defs,
        s(:const, nil, :Root), :new,
        s(:args,
          s(:optarg, :keys,
            s(:nil)),
          s(:blockarg, :b)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :tk_windows), :[],
              s(:str, ".")), nil,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :tk_windows), :[]=,
              s(:str, "."),
              s(:block,
                s(:super,
                  s(:hash,
                    s(:pair,
                      s(:sym, :without_creating),
                      s(:true)),
                    s(:pair,
                      s(:sym, :widgetname),
                      s(:str, ".")))),
                s(:args), nil))),
          s(:lvasgn, :root,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkCore), :INTERP), :tk_windows), :[],
              s(:str, "."))),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:block,
            s(:send,
              s(:lvar, :root), :instance_eval),
            s(:args),
            s(:block,
              s(:send,
                s(:send, nil, :__methodcall_optkeys), :each),
              s(:args,
                s(:arg, :key),
                s(:arg, :method)),
              s(:begin,
                s(:lvasgn, :value,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:send,
                      s(:lvar, :key), :to_s))),
                s(:if,
                  s(:lvar, :value),
                  s(:send,
                    s(:self), :__send__,
                    s(:lvar, :method),
                    s(:lvar, :value)), nil)))),
          s(:if,
            s(:lvar, :keys),
            s(:block,
              s(:send,
                s(:lvar, :keys), :each),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:if,
                s(:send,
                  s(:lvar, :v), :kind_of?,
                  s(:const, nil, :Array)),
                s(:send,
                  s(:lvar, :root), :__send__,
                  s(:lvar, :k),
                  s(:splat,
                    s(:lvar, :v))),
                s(:send,
                  s(:lvar, :root), :__send__,
                  s(:lvar, :k),
                  s(:lvar, :v)))), nil),
          s(:if,
            s(:send, nil, :block_given?),
            s(:if,
              s(:const,
                s(:const, nil, :TkCore), :WITH_RUBY_VM),
              s(:send,
                s(:lvar, :root), :instance_exec,
                s(:lvar, :root),
                s(:block_pass,
                  s(:lvar, :b))),
              s(:send,
                s(:lvar, :root), :instance_eval,
                s(:block_pass,
                  s(:lvar, :b)))), nil),
          s(:lvar, :root))),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Tk"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:defs,
        s(:self), :to_eval,
        s(:args),
        s(:str, ".")),
      s(:def, :create_self,
        s(:args),
        s(:ivasgn, :@path,
          s(:str, "."))),
      s(:send, nil, :private,
        s(:sym, :create_self)),
      s(:def, :path,
        s(:args),
        s(:str, ".")),
      s(:def, :add_menu,
        s(:args,
          s(:arg, :menu_info),
          s(:optarg, :tearoff,
            s(:false)),
          s(:optarg, :opts,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tearoff), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :opts,
                s(:lvar, :tearoff)),
              s(:lvasgn, :tearoff,
                s(:false))), nil),
          s(:send, nil, :_create_menubutton,
            s(:self),
            s(:lvar, :menu_info),
            s(:lvar, :tearoff),
            s(:lvar, :opts)))),
      s(:def, :add_menubar,
        s(:args,
          s(:arg, :menu_spec),
          s(:optarg, :tearoff,
            s(:false)),
          s(:optarg, :opts,
            s(:nil))),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :menu_spec), :each),
            s(:args,
              s(:arg, :info)),
            s(:send, nil, :add_menu,
              s(:lvar, :info),
              s(:lvar, :tearoff),
              s(:lvar, :opts))),
          s(:send,
            s(:self), :menu))),
      s(:defs,
        s(:const, nil, :Root), :destroy,
        s(:args),
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :_invoke,
          s(:str, "destroy"),
          s(:str, "."))))),
  s(:if,
    s(:send,
      s(:const, nil, :Object), :const_defined?,
      s(:sym, :TkRoot)), nil,
    s(:casgn, nil, :TkRoot,
      s(:const,
        s(:const, nil, :Tk), :Root))))
