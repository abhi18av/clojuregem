s(:module,
  s(:const, nil, :Tk),
  s(:begin,
    s(:send,
      s(:ivar, :@TOPLEVEL_ALIAS_TABLE), :[]=,
      s(:sym, :Ttk),
      s(:hash,
        s(:pair,
          s(:sym, :TkButton),
          s(:str, "tkextlib/tile/tbutton")),
        s(:pair,
          s(:sym, :TkCheckbutton),
          s(:str, "tkextlib/tile/tcheckbutton")),
        s(:pair,
          s(:sym, :TkCheckButton),
          s(:str, "tkextlib/tile/tcheckbutton")),
        s(:pair,
          s(:sym, :TkEntry),
          s(:str, "tkextlib/tile/tentry")),
        s(:pair,
          s(:sym, :TkCombobox),
          s(:str, "tkextlib/tile/tcombobox")),
        s(:pair,
          s(:sym, :TkFrame),
          s(:str, "tkextlib/tile/tframe")),
        s(:pair,
          s(:sym, :TkLabel),
          s(:str, "tkextlib/tile/tlabel")),
        s(:pair,
          s(:sym, :TkLabelframe),
          s(:str, "tkextlib/tile/tlabelframe")),
        s(:pair,
          s(:sym, :TkLabelFrame),
          s(:str, "tkextlib/tile/tlabelframe")),
        s(:pair,
          s(:sym, :TkMenubutton),
          s(:str, "tkextlib/tile/tmenubutton")),
        s(:pair,
          s(:sym, :TkMenuButton),
          s(:str, "tkextlib/tile/tmenubutton")),
        s(:pair,
          s(:sym, :TkNotebook),
          s(:str, "tkextlib/tile/tnotebook")),
        s(:pair,
          s(:sym, :TkPanedwindow),
          s(:str, "tkextlib/tile/tpaned")),
        s(:pair,
          s(:sym, :TkPanedWindow),
          s(:str, "tkextlib/tile/tpaned")),
        s(:pair,
          s(:sym, :TkProgressbar),
          s(:str, "tkextlib/tile/tprogressbar")),
        s(:pair,
          s(:sym, :TkRadiobutton),
          s(:str, "tkextlib/tile/tradiobutton")),
        s(:pair,
          s(:sym, :TkRadioButton),
          s(:str, "tkextlib/tile/tradiobutton")),
        s(:pair,
          s(:sym, :TkScale),
          s(:str, "tkextlib/tile/tscale")),
        s(:pair,
          s(:sym, :TkScrollbar),
          s(:str, "tkextlib/tile/tscrollbar")),
        s(:pair,
          s(:sym, :TkXScrollbar),
          s(:str, "tkextlib/tile/tscrollbar")),
        s(:pair,
          s(:sym, :TkYScrollbar),
          s(:str, "tkextlib/tile/tscrollbar")),
        s(:pair,
          s(:sym, :TkSeparator),
          s(:str, "tkextlib/tile/tseparator")),
        s(:pair,
          s(:sym, :TkSizeGrip),
          s(:str, "tkextlib/tile/sizegrip")),
        s(:pair,
          s(:sym, :TkSizegrip),
          s(:str, "tkextlib/tile/sizegrip")),
        s(:pair,
          s(:sym, :TkTreeview),
          s(:str, "tkextlib/tile/treeview")))),
    s(:send,
      s(:const, nil, :Tk), :__create_widget_set__,
      s(:sym, :Tile),
      s(:sym, :Ttk)),
    s(:masgn,
      s(:mlhs,
        s(:lvasgn, :major),
        s(:lvasgn, :minor),
        s(:lvasgn, :type),
        s(:lvasgn, :patchlevel)),
      s(:send,
        s(:const, nil, :TclTkLib), :get_version)),
    s(:if,
      s(:send,
        s(:begin,
          s(:send,
            s(:array,
              s(:lvar, :major),
              s(:lvar, :minor),
              s(:lvar, :type),
              s(:lvar, :patchlevel)), :<=>,
            s(:array,
              s(:int, 8),
              s(:int, 6),
              s(:const,
                s(:const,
                  s(:const, nil, :TclTkLib), :RELEASE_TYPE), :BETA),
              s(:int, 1)))), :>=,
        s(:int, 0)),
      s(:send,
        s(:send,
          s(:ivar, :@TOPLEVEL_ALIAS_TABLE), :[],
          s(:sym, :Ttk)), :update,
        s(:hash,
          s(:pair,
            s(:sym, :TkSpinbox),
            s(:str, "tkextlib/tile/tspinbox")))), nil),
    s(:block,
      s(:send,
        s(:send,
          s(:ivar, :@TOPLEVEL_ALIAS_TABLE), :[],
          s(:sym, :Ttk)), :each),
      s(:args,
        s(:arg, :sym),
        s(:arg, :file)),
      s(:send,
        s(:const, nil, :Tk), :__regist_toplevel_aliases__,
        s(:sym, :Ttk),
        s(:lvar, :file),
        s(:lvar, :sym))),
    s(:block,
      s(:send,
        s(:const, nil, :Tk), :__toplevel_alias_setup_proc__,
        s(:sym, :Ttk),
        s(:sym, :Tile)),
      s(:args,
        s(:arg, :mod)),
      s(:if,
        s(:or,
          s(:send,
            s(:const, nil, :Tk), :autoload?,
            s(:sym, :Tile)),
          s(:send,
            s(:const, nil, :Tk), :const_defined?,
            s(:sym, :Tile))), nil,
        s(:begin,
          s(:send,
            s(:const, nil, :Object), :autoload,
            s(:sym, :Ttk),
            s(:str, "tkextlib/tile")),
          s(:send,
            s(:const, nil, :Tk), :autoload,
            s(:sym, :Tile),
            s(:str, "tkextlib/tile")))))))
