s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const, nil, :TkImage),
    s(:const, nil, :TkObject),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Tk)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "image"), :freeze)), :freeze)),
      s(:casgn, nil, :Tk_IMGTBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :Tk_Image_ID,
              s(:array,
                s(:send,
                  s(:str, "i"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Tk_IMGTBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :Tk_IMGTBL), :clear))),
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :keys), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :name,
                s(:nil)),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:sym, :imagename)),
                s(:lvasgn, :name,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:sym, :imagename))),
                s(:if,
                  s(:send,
                    s(:lvar, :keys), :key?,
                    s(:str, "imagename")),
                  s(:lvasgn, :name,
                    s(:send,
                      s(:lvar, :keys), :[],
                      s(:str, "imagename"))), nil)),
              s(:if,
                s(:lvar, :name),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :name), :kind_of?,
                      s(:const, nil, :TkImage)),
                    s(:lvasgn, :obj,
                      s(:lvar, :name)),
                    s(:begin,
                      s(:lvasgn, :name,
                        s(:send, nil, :_get_eval_string,
                          s(:lvar, :name))),
                      s(:lvasgn, :obj,
                        s(:nil)),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Tk_IMGTBL), :mutex), :synchronize),
                        s(:args),
                        s(:lvasgn, :obj,
                          s(:send,
                            s(:const, nil, :Tk_IMGTBL), :[],
                            s(:lvar, :name)))))),
                  s(:if,
                    s(:lvar, :obj),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:begin,
                            s(:or,
                              s(:send,
                                s(:lvar, :keys), :[],
                                s(:sym, :without_creating)),
                              s(:send,
                                s(:lvar, :keys), :[],
                                s(:str, "without_creating")))), :!),
                        s(:begin,
                          s(:lvasgn, :keys,
                            s(:send, nil, :_symbolkey2str,
                              s(:lvar, :keys))),
                          s(:send,
                            s(:lvar, :keys), :delete,
                            s(:str, "imagename")),
                          s(:send,
                            s(:lvar, :keys), :delete,
                            s(:str, "without_creating")),
                          s(:block,
                            s(:send,
                              s(:lvar, :obj), :instance_eval),
                            s(:args),
                            s(:send, nil, :tk_call_without_enc,
                              s(:str, "image"),
                              s(:str, "create"),
                              s(:ivar, :@type),
                              s(:ivar, :@path),
                              s(:splat,
                                s(:send, nil, :hash_kv,
                                  s(:lvar, :keys),
                                  s(:true)))))), nil),
                      s(:return,
                        s(:lvar, :obj))), nil)), nil)), nil),
          s(:block,
            s(:send,
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:self), :allocate))), :instance_eval),
            s(:args),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_IMGTBL), :mutex), :synchronize),
              s(:args),
              s(:begin,
                s(:send, nil, :initialize,
                  s(:lvar, :keys)),
                s(:send,
                  s(:const, nil, :Tk_IMGTBL), :[]=,
                  s(:ivar, :@path),
                  s(:self))))),
          s(:lvar, :obj))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@path,
            s(:nil)),
          s(:lvasgn, :without_creating,
            s(:false)),
          s(:if,
            s(:send,
              s(:lvar, :keys), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :keys))),
              s(:ivasgn, :@path,
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "imagename"))),
              s(:lvasgn, :without_creating,
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "without_creating")))), nil),
          s(:if,
            s(:ivar, :@path), nil,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_Image_ID), :mutex), :synchronize),
              s(:args),
              s(:begin,
                s(:ivasgn, :@path,
                  s(:send,
                    s(:const, nil, :Tk_Image_ID), :join,
                    s(:send,
                      s(:const,
                        s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
                s(:send,
                  s(:send,
                    s(:const, nil, :Tk_Image_ID), :[],
                    s(:int, 1)), :succ!)))),
          s(:if,
            s(:lvar, :without_creating), nil,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "image"),
              s(:str, "create"),
              s(:ivar, :@type),
              s(:ivar, :@path),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys),
                  s(:true))))))),
      s(:def, :delete,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_IMGTBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:ivar, :@id),
              s(:send,
                s(:const, nil, :Tk_IMGTBL), :delete,
                s(:ivar, :@id)), nil)),
          s(:send, nil, :tk_call_without_enc,
            s(:str, "image"),
            s(:str, "delete"),
            s(:ivar, :@path)),
          s(:self))),
      s(:def, :height,
        s(:args),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "image"),
            s(:str, "height"),
            s(:ivar, :@path)))),
      s(:def, :inuse,
        s(:args),
        s(:send, nil, :bool,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "image"),
            s(:str, "inuse"),
            s(:ivar, :@path)))),
      s(:def, :itemtype,
        s(:args),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "image"),
          s(:str, "type"),
          s(:ivar, :@path))),
      s(:def, :width,
        s(:args),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "image"),
            s(:str, "width"),
            s(:ivar, :@path)))),
      s(:defs,
        s(:const, nil, :TkImage), :names,
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Tk_IMGTBL), :mutex), :synchronize),
          s(:args),
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Tk), :tk_call_without_enc,
                  s(:str, "image"),
                  s(:str, "names")), :split), :collect!),
            s(:args,
              s(:arg, :id)),
            s(:if,
              s(:begin,
                s(:send,
                  s(:const, nil, :Tk_IMGTBL), :[],
                  s(:lvar, :id))),
              s(:send,
                s(:const, nil, :Tk_IMGTBL), :[],
                s(:lvar, :id)),
              s(:lvar, :id))))),
      s(:defs,
        s(:const, nil, :TkImage), :types,
        s(:args),
        s(:send,
          s(:send,
            s(:const, nil, :Tk), :tk_call_without_enc,
            s(:str, "image"),
            s(:str, "types")), :split)))),
  s(:class,
    s(:const, nil, :TkBitmapImage),
    s(:const, nil, :TkImage),
    s(:begin,
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :+,
          s(:array,
            s(:str, "maskdata"),
            s(:str, "maskfile")))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@type,
            s(:str, "bitmap")),
          s(:super,
            s(:splat,
              s(:lvar, :args))))))),
  s(:class,
    s(:const, nil, :TkPhotoImage),
    s(:const, nil, :TkImage),
    s(:begin,
      s(:casgn, nil, :NullArgOptionKeys,
        s(:array,
          s(:str, "shrink"),
          s(:str, "grayscale"))),
      s(:def, :_photo_hash_kv,
        s(:args,
          s(:arg, :keys)),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:block,
            s(:send,
              s(:const, nil, :NullArgOptionKeys), :collect),
            s(:args,
              s(:arg, :opt)),
            s(:if,
              s(:send,
                s(:lvar, :keys), :[],
                s(:lvar, :opt)),
              s(:send,
                s(:lvar, :keys), :[]=,
                s(:lvar, :opt),
                s(:const, nil, :None)),
              s(:send,
                s(:lvar, :keys), :delete,
                s(:lvar, :opt)))),
          s(:send,
            s(:block,
              s(:send,
                s(:lvar, :keys), :collect),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:array,
                s(:send,
                  s(:str, "-"), :<<,
                  s(:lvar, :k)),
                s(:lvar, :v))), :flatten))),
      s(:send, nil, :private,
        s(:sym, :_photo_hash_kv)),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@type,
            s(:str, "photo")),
          s(:super,
            s(:splat,
              s(:lvar, :args))))),
      s(:def, :blank,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "blank")),
          s(:self))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :option)),
        s(:case,
          s(:send,
            s(:lvar, :option), :to_s),
          s(:when,
            s(:str, "data"),
            s(:str, "file"),
            s(:send, nil, :tk_send,
              s(:str, "cget"),
              s(:send,
                s(:str, "-"), :<<,
                s(:send,
                  s(:lvar, :option), :to_s)))),
          s(:send, nil, :tk_tcl2ruby,
            s(:send, nil, :tk_send,
              s(:str, "cget"),
              s(:send,
                s(:str, "-"), :<<,
                s(:send,
                  s(:lvar, :option), :to_s)))))),
      s(:def, :cget,
        s(:args,
          s(:arg, :option)),
        s(:if,
          s(:send,
            s(:const, nil, :TkConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :cget_strict,
                s(:lvar, :option)),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:if,
                  s(:send,
                    s(:send, nil, :current_configinfo), :has_key?,
                    s(:send,
                      s(:lvar, :option), :to_s)),
                  s(:send, nil, :fail,
                    s(:lvar, :e)),
                  s(:nil))), nil)),
          s(:send, nil, :cget_strict,
            s(:lvar, :option)))),
      s(:def, :copy,
        s(:args,
          s(:arg, :src),
          s(:restarg, :opts)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :opts), :size), :==,
              s(:int, 0)),
            s(:send, nil, :tk_send,
              s(:str, "copy"),
              s(:lvar, :src)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :size), :==,
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Hash))),
              s(:send, nil, :tk_send,
                s(:str, "copy"),
                s(:lvar, :src),
                s(:splat,
                  s(:send, nil, :_photo_hash_kv,
                    s(:send,
                      s(:lvar, :opts), :[],
                      s(:int, 0))))),
              s(:begin,
                s(:lvasgn, :args,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:lvar, :opts), :collect),
                      s(:args,
                        s(:arg, :term)),
                      s(:if,
                        s(:and,
                          s(:send,
                            s(:lvar, :term), :kind_of?,
                            s(:const, nil, :String)),
                          s(:send,
                            s(:lvar, :term), :include?,
                            s(:str, " "))),
                        s(:send,
                          s(:lvar, :term), :split),
                        s(:lvar, :term))), :flatten)),
                s(:send, nil, :tk_send,
                  s(:str, "copy"),
                  s(:lvar, :src),
                  s(:splat,
                    s(:lvar, :args)))))),
          s(:self))),
      s(:def, :data,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:send, nil, :tk_split_list,
          s(:send, nil, :tk_send,
            s(:str, "data"),
            s(:splat,
              s(:send, nil, :_photo_hash_kv,
                s(:lvar, :keys)))))),
      s(:def, :get,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:block,
          s(:send,
            s(:send,
              s(:send, nil, :tk_send,
                s(:str, "get"),
                s(:lvar, :x),
                s(:lvar, :y)), :split), :collect),
          s(:args,
            s(:arg, :n)),
          s(:send,
            s(:lvar, :n), :to_i))),
      s(:def, :put,
        s(:args,
          s(:arg, :data),
          s(:restarg, :opts)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :opts), :empty?),
            s(:send, nil, :tk_send,
              s(:str, "put"),
              s(:lvar, :data)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :size), :==,
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Hash))),
              s(:send, nil, :tk_send,
                s(:str, "put"),
                s(:lvar, :data),
                s(:splat,
                  s(:send, nil, :_photo_hash_kv,
                    s(:send,
                      s(:lvar, :opts), :[],
                      s(:int, 0))))),
              s(:send, nil, :tk_send,
                s(:str, "put"),
                s(:lvar, :data),
                s(:str, "-to"),
                s(:splat,
                  s(:lvar, :opts))))),
          s(:self))),
      s(:def, :read,
        s(:args,
          s(:arg, :file),
          s(:restarg, :opts)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :opts), :size), :==,
              s(:int, 0)),
            s(:send, nil, :tk_send,
              s(:str, "read"),
              s(:lvar, :file)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :size), :==,
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Hash))),
              s(:send, nil, :tk_send,
                s(:str, "read"),
                s(:lvar, :file),
                s(:splat,
                  s(:send, nil, :_photo_hash_kv,
                    s(:send,
                      s(:lvar, :opts), :[],
                      s(:int, 0))))),
              s(:begin,
                s(:lvasgn, :args,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:lvar, :opts), :collect),
                      s(:args,
                        s(:arg, :term)),
                      s(:if,
                        s(:and,
                          s(:send,
                            s(:lvar, :term), :kind_of?,
                            s(:const, nil, :String)),
                          s(:send,
                            s(:lvar, :term), :include?,
                            s(:str, " "))),
                        s(:send,
                          s(:lvar, :term), :split),
                        s(:lvar, :term))), :flatten)),
                s(:send, nil, :tk_send,
                  s(:str, "read"),
                  s(:lvar, :file),
                  s(:splat,
                    s(:lvar, :args)))))),
          s(:self))),
      s(:def, :redither,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "redither")),
          s(:self))),
      s(:def, :get_transparency,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send,
            s(:str, "transparency"),
            s(:str, "get"),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :set_transparency,
        s(:args,
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :state)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "transparency"),
            s(:str, "set"),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:lvar, :state)),
          s(:self))),
      s(:def, :write,
        s(:args,
          s(:arg, :file),
          s(:restarg, :opts)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :opts), :size), :==,
              s(:int, 0)),
            s(:send, nil, :tk_send,
              s(:str, "write"),
              s(:lvar, :file)),
            s(:if,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :size), :==,
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:lvar, :opts), :[],
                    s(:int, 0)), :kind_of?,
                  s(:const, nil, :Hash))),
              s(:send, nil, :tk_send,
                s(:str, "write"),
                s(:lvar, :file),
                s(:splat,
                  s(:send, nil, :_photo_hash_kv,
                    s(:send,
                      s(:lvar, :opts), :[],
                      s(:int, 0))))),
              s(:begin,
                s(:lvasgn, :args,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:lvar, :opts), :collect),
                      s(:args,
                        s(:arg, :term)),
                      s(:if,
                        s(:and,
                          s(:send,
                            s(:lvar, :term), :kind_of?,
                            s(:const, nil, :String)),
                          s(:send,
                            s(:lvar, :term), :include?,
                            s(:str, " "))),
                        s(:send,
                          s(:lvar, :term), :split),
                        s(:lvar, :term))), :flatten)),
                s(:send, nil, :tk_send,
                  s(:str, "write"),
                  s(:lvar, :file),
                  s(:splat,
                    s(:lvar, :args)))))),
          s(:self))))))
