s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :PanedWindow),
    s(:const, nil, :TkWindow),
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "panedwindow"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Panedwindow"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :add,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send,
              s(:lvar, :args), :pop)),
          s(:if,
            s(:lvar, :keys), nil,
            s(:send, nil, :fail,
              s(:const, nil, :ArgumentError),
              s(:str, "no window in arguments"))),
          s(:if,
            s(:and,
              s(:lvar, :keys),
              s(:send,
                s(:lvar, :keys), :kind_of?,
                s(:const, nil, :Hash))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :args), :==,
                  s(:array)),
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "no window in arguments")), nil),
              s(:lvasgn, :args,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :w)),
                  s(:send, nil, :_epath,
                    s(:lvar, :w)))),
              s(:send,
                s(:lvar, :args), :concat,
                s(:send, nil, :hash_kv,
                  s(:lvar, :keys)))),
            s(:begin,
              s(:if,
                s(:lvar, :keys),
                s(:send,
                  s(:lvar, :args), :push,
                  s(:lvar, :keys)), nil),
              s(:lvasgn, :args,
                s(:block,
                  s(:send,
                    s(:lvar, :args), :collect),
                  s(:args,
                    s(:arg, :w)),
                  s(:send, nil, :_epath,
                    s(:lvar, :w)))))),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "add"),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :forget,
        s(:args,
          s(:arg, :win),
          s(:restarg, :wins)),
        s(:begin,
          s(:send,
            s(:lvar, :wins), :unshift,
            s(:lvar, :win)),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "forget"),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :wins), :collect),
                  s(:args,
                    s(:arg, :w)),
                  s(:send, nil, :_epath,
                    s(:lvar, :w)))))),
          s(:self))),
      s(:alias,
        s(:sym, :del),
        s(:sym, :forget)),
      s(:alias,
        s(:sym, :delete),
        s(:sym, :forget)),
      s(:alias,
        s(:sym, :remove),
        s(:sym, :forget)),
      s(:def, :identify,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "identify"),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :proxy_coord,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "proxy"),
            s(:str, "coord")))),
      s(:def, :proxy_forget,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "proxy"),
            s(:str, "forget")),
          s(:self))),
      s(:def, :proxy_place,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "proxy"),
            s(:str, "place"),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :sash_coord,
        s(:args,
          s(:arg, :index)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send,
            s(:str, "sash"),
            s(:str, "coord"),
            s(:lvar, :index)))),
      s(:def, :sash_dragto,
        s(:args,
          s(:arg, :index),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sash"),
            s(:str, "dragto"),
            s(:lvar, :index),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :sash_mark,
        s(:args,
          s(:arg, :index),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sash"),
            s(:str, "mark"),
            s(:lvar, :index),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :sash_place,
        s(:args,
          s(:arg, :index),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send, nil, :tk_send,
            s(:str, "sash"),
            s(:str, "place"),
            s(:lvar, :index),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:def, :panecget_strict,
        s(:args,
          s(:arg, :win),
          s(:arg, :key)),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :_epath,
              s(:lvar, :win))),
          s(:send, nil, :tk_tcl2ruby,
            s(:send, nil, :tk_send_without_enc,
              s(:str, "panecget"),
              s(:lvar, :win),
              s(:dstr,
                s(:str, "-"),
                s(:begin,
                  s(:lvar, :key))))))),
      s(:def, :panecget,
        s(:args,
          s(:arg, :win),
          s(:arg, :key)),
        s(:if,
          s(:send,
            s(:const, nil, :TkItemConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :panecget_strict,
                s(:lvar, :win),
                s(:lvar, :key)),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:kwbegin,
                  s(:rescue,
                    s(:if,
                      s(:send,
                        s(:send, nil, :current_paneconfiginfo,
                          s(:lvar, :win)), :has_key?,
                        s(:send,
                          s(:send, nil, :option), :to_s)),
                      s(:send, nil, :fail,
                        s(:lvar, :e)),
                      s(:nil)),
                    s(:resbody, nil, nil,
                      s(:send, nil, :fail,
                        s(:lvar, :e))), nil))), nil)),
          s(:send, nil, :panecget_strict,
            s(:lvar, :win),
            s(:lvar, :key)))),
      s(:def, :paneconfigure,
        s(:args,
          s(:arg, :win),
          s(:arg, :key),
          s(:optarg, :value,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :win,
            s(:send, nil, :_epath,
              s(:lvar, :win))),
          s(:if,
            s(:send,
              s(:lvar, :key), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :params,
                s(:array)),
              s(:block,
                s(:send,
                  s(:lvar, :key), :each),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :v)),
                s(:begin,
                  s(:send,
                    s(:lvar, :params), :push,
                    s(:dstr,
                      s(:str, "-"),
                      s(:begin,
                        s(:lvar, :k)))),
                  s(:send,
                    s(:lvar, :params), :push,
                    s(:send, nil, :_epath,
                      s(:lvar, :v))))),
              s(:send, nil, :tk_send_without_enc,
                s(:str, "paneconfigure"),
                s(:lvar, :win),
                s(:splat,
                  s(:lvar, :params)))),
            s(:begin,
              s(:lvasgn, :value,
                s(:send, nil, :_epath,
                  s(:lvar, :value))),
              s(:send, nil, :tk_send_without_enc,
                s(:str, "paneconfigure"),
                s(:lvar, :win),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :key))),
                s(:lvar, :value)))),
          s(:self))),
      s(:alias,
        s(:sym, :pane_config),
        s(:sym, :paneconfigure)),
      s(:def, :paneconfiginfo,
        s(:args,
          s(:arg, :win),
          s(:optarg, :key,
            s(:nil))),
        s(:if,
          s(:const,
            s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
          s(:begin,
            s(:lvasgn, :win,
              s(:send, nil, :_epath,
                s(:lvar, :win))),
            s(:if,
              s(:lvar, :key),
              s(:begin,
                s(:lvasgn, :conf,
                  s(:send, nil, :tk_split_list,
                    s(:send, nil, :tk_send_without_enc,
                      s(:str, "paneconfigure"),
                      s(:lvar, :win),
                      s(:dstr,
                        s(:str, "-"),
                        s(:begin,
                          s(:lvar, :key)))),
                    s(:false),
                    s(:true))),
                s(:send,
                  s(:lvar, :conf), :[]=,
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:lvar, :conf), :[],
                      s(:int, 0)), :[],
                    s(:irange,
                      s(:int, 1),
                      s(:int, -1)))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :conf), :[],
                      s(:int, 0)), :==,
                    s(:str, "hide")),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 3)), :empty?), nil,
                      s(:send,
                        s(:lvar, :conf), :[]=,
                        s(:int, 3),
                        s(:send, nil, :bool,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 3))))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 4)), :empty?), nil,
                      s(:send,
                        s(:lvar, :conf), :[]=,
                        s(:int, 4),
                        s(:send, nil, :bool,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 4)))))), nil),
                s(:lvar, :conf)),
              s(:block,
                s(:send,
                  s(:send, nil, :tk_split_simplelist,
                    s(:send, nil, :tk_send_without_enc,
                      s(:str, "paneconfigure"),
                      s(:lvar, :win)),
                    s(:false),
                    s(:false)), :collect),
                s(:args,
                  s(:arg, :conflist)),
                s(:begin,
                  s(:lvasgn, :conf,
                    s(:send, nil, :tk_split_simplelist,
                      s(:lvar, :conflist),
                      s(:false),
                      s(:true))),
                  s(:send,
                    s(:lvar, :conf), :[]=,
                    s(:int, 0),
                    s(:send,
                      s(:send,
                        s(:lvar, :conf), :[],
                        s(:int, 0)), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1)))),
                  s(:if,
                    s(:send,
                      s(:lvar, :conf), :[],
                      s(:int, 3)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 0)), :==,
                        s(:str, "hide")),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 3)), :empty?), nil,
                        s(:send,
                          s(:lvar, :conf), :[]=,
                          s(:int, 3),
                          s(:send, nil, :bool,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 3))))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 3)), :index,
                          s(:str, "{")),
                        s(:send,
                          s(:lvar, :conf), :[]=,
                          s(:int, 3),
                          s(:send, nil, :tk_split_list,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 3)))),
                        s(:send,
                          s(:lvar, :conf), :[]=,
                          s(:int, 3),
                          s(:send, nil, :tk_tcl2ruby,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 3)))))), nil),
                  s(:if,
                    s(:send,
                      s(:lvar, :conf), :[],
                      s(:int, 4)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 0)), :==,
                        s(:str, "hide")),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 4)), :empty?), nil,
                        s(:send,
                          s(:lvar, :conf), :[]=,
                          s(:int, 4),
                          s(:send, nil, :bool,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 4))))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 4)), :index,
                          s(:str, "{")),
                        s(:send,
                          s(:lvar, :conf), :[]=,
                          s(:int, 4),
                          s(:send, nil, :tk_split_list,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 4)))),
                        s(:send,
                          s(:lvar, :conf), :[]=,
                          s(:int, 4),
                          s(:send, nil, :tk_tcl2ruby,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 4)))))), nil),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :conf), :size), :==,
                      s(:int, 2)),
                    s(:send,
                      s(:lvar, :conf), :[]=,
                      s(:int, 1),
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 1)), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1)))), nil),
                  s(:lvar, :conf))))),
          s(:begin,
            s(:lvasgn, :win,
              s(:send, nil, :_epath,
                s(:lvar, :win))),
            s(:if,
              s(:lvar, :key),
              s(:begin,
                s(:lvasgn, :conf,
                  s(:send, nil, :tk_split_list,
                    s(:send, nil, :tk_send_without_enc,
                      s(:str, "paneconfigure"),
                      s(:lvar, :win),
                      s(:dstr,
                        s(:str, "-"),
                        s(:begin,
                          s(:lvar, :key)))),
                    s(:false),
                    s(:true))),
                s(:lvasgn, :key,
                  s(:send,
                    s(:send,
                      s(:lvar, :conf), :shift), :[],
                    s(:irange,
                      s(:int, 1),
                      s(:int, -1)))),
                s(:if,
                  s(:send,
                    s(:lvar, :key), :==,
                    s(:str, "hide")),
                  s(:begin,
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 2)), :empty?), nil,
                      s(:send,
                        s(:lvar, :conf), :[]=,
                        s(:int, 2),
                        s(:send, nil, :bool,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 2))))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :[],
                          s(:int, 3)), :empty?), nil,
                      s(:send,
                        s(:lvar, :conf), :[]=,
                        s(:int, 3),
                        s(:send, nil, :bool,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 3)))))), nil),
                s(:hash,
                  s(:pair,
                    s(:lvar, :key),
                    s(:lvar, :conf)))),
              s(:begin,
                s(:lvasgn, :ret,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:send, nil, :tk_split_simplelist,
                      s(:send, nil, :tk_send_without_enc,
                        s(:str, "paneconfigure"),
                        s(:lvar, :win)),
                      s(:false),
                      s(:false)), :each),
                  s(:args,
                    s(:arg, :conflist)),
                  s(:begin,
                    s(:lvasgn, :conf,
                      s(:send, nil, :tk_split_simplelist,
                        s(:lvar, :conflist),
                        s(:false),
                        s(:true))),
                    s(:lvasgn, :key,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :shift), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1)))),
                    s(:if,
                      s(:lvar, :key),
                      s(:if,
                        s(:send,
                          s(:lvar, :key), :==,
                          s(:str, "hide")),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 2)), :empty?), nil,
                          s(:send,
                            s(:lvar, :conf), :[]=,
                            s(:int, 2),
                            s(:send, nil, :bool,
                              s(:send,
                                s(:lvar, :conf), :[],
                                s(:int, 2))))),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 2)), :index,
                            s(:str, "{")),
                          s(:send,
                            s(:lvar, :conf), :[]=,
                            s(:int, 2),
                            s(:send, nil, :tk_split_list,
                              s(:send,
                                s(:lvar, :conf), :[],
                                s(:int, 2)))),
                          s(:send,
                            s(:lvar, :conf), :[]=,
                            s(:int, 2),
                            s(:send, nil, :tk_tcl2ruby,
                              s(:send,
                                s(:lvar, :conf), :[],
                                s(:int, 2)))))), nil),
                    s(:if,
                      s(:send,
                        s(:lvar, :conf), :[],
                        s(:int, 3)),
                      s(:if,
                        s(:send,
                          s(:lvar, :key), :==,
                          s(:str, "hide")),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 3)), :empty?), nil,
                          s(:send,
                            s(:lvar, :conf), :[]=,
                            s(:int, 3),
                            s(:send, nil, :bool,
                              s(:send,
                                s(:lvar, :conf), :[],
                                s(:int, 3))))),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :conf), :[],
                              s(:int, 3)), :index,
                            s(:str, "{")),
                          s(:send,
                            s(:lvar, :conf), :[]=,
                            s(:int, 3),
                            s(:send, nil, :tk_split_list,
                              s(:send,
                                s(:lvar, :conf), :[],
                                s(:int, 3)))),
                          s(:send,
                            s(:lvar, :conf), :[]=,
                            s(:int, 3),
                            s(:send, nil, :tk_tcl2ruby,
                              s(:send,
                                s(:lvar, :conf), :[],
                                s(:int, 3)))))), nil),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :conf), :size), :==,
                        s(:int, 1)),
                      s(:send,
                        s(:lvar, :ret), :[]=,
                        s(:lvar, :key),
                        s(:send,
                          s(:send,
                            s(:lvar, :conf), :[],
                            s(:int, 0)), :[],
                          s(:irange,
                            s(:int, 1),
                            s(:int, -1)))),
                      s(:send,
                        s(:lvar, :ret), :[]=,
                        s(:lvar, :key),
                        s(:lvar, :conf))))),
                s(:lvar, :ret)))))),
      s(:alias,
        s(:sym, :pane_configinfo),
        s(:sym, :paneconfiginfo)),
      s(:def, :current_paneconfiginfo,
        s(:args,
          s(:arg, :win),
          s(:optarg, :key,
            s(:nil))),
        s(:if,
          s(:const,
            s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
          s(:if,
            s(:lvar, :key),
            s(:begin,
              s(:lvasgn, :conf,
                s(:send, nil, :paneconfiginfo,
                  s(:lvar, :win),
                  s(:lvar, :key))),
              s(:hash,
                s(:pair,
                  s(:send,
                    s(:lvar, :conf), :[],
                    s(:int, 0)),
                  s(:send,
                    s(:lvar, :conf), :[],
                    s(:int, 4))))),
            s(:begin,
              s(:lvasgn, :ret,
                s(:hash)),
              s(:block,
                s(:send,
                  s(:send, nil, :paneconfiginfo,
                    s(:lvar, :win)), :each),
                s(:args,
                  s(:arg, :conf)),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :conf), :size), :>,
                    s(:int, 2)),
                  s(:send,
                    s(:lvar, :ret), :[]=,
                    s(:send,
                      s(:lvar, :conf), :[],
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :conf), :[],
                      s(:int, 4))), nil)),
              s(:lvar, :ret))),
          s(:begin,
            s(:lvasgn, :ret,
              s(:hash)),
            s(:block,
              s(:send,
                s(:send, nil, :paneconfiginfo,
                  s(:lvar, :win),
                  s(:lvar, :key)), :each),
              s(:args,
                s(:arg, :k),
                s(:arg, :conf)),
              s(:if,
                s(:send,
                  s(:lvar, :conf), :kind_of?,
                  s(:const, nil, :Array)),
                s(:send,
                  s(:lvar, :ret), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:lvar, :conf), :[],
                    s(:int, -1))), nil)),
            s(:lvar, :ret)))),
      s(:alias,
        s(:sym, :current_pane_configinfo),
        s(:sym, :current_paneconfiginfo)),
      s(:def, :panes,
        s(:args),
        s(:send, nil, :list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "panes")))))),
  s(:casgn,
    s(:const, nil, :Tk), :Panedwindow,
    s(:const,
      s(:const, nil, :Tk), :PanedWindow)),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/panedwindow.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :PanedWindow),
    s(:sym, :TkPanedWindow),
    s(:sym, :TkPanedwindow)))
