s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/text")),
  s(:send, nil, :require,
    s(:str, "tk/tagfont")),
  s(:class,
    s(:const, nil, :TkTextTag),
    s(:const, nil, :TkObject),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkTreatTagFont)),
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Text), :IndexModMethods)),
      s(:casgn, nil, :TTagID_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :Tk_TextTag_ID,
              s(:array,
                s(:send,
                  s(:str, "tag"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :TTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :TTagID_TBL), :clear))),
      s(:defs,
        s(:const, nil, :TkTextTag), :id2obj,
        s(:args,
          s(:arg, :text),
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :tpath,
            s(:send,
              s(:lvar, :text), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :TTagID_TBL), :[],
                s(:lvar, :tpath)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :TTagID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :id)),
                s(:send,
                  s(:send,
                    s(:const, nil, :TTagID_TBL), :[],
                    s(:lvar, :tpath)), :[],
                  s(:lvar, :id)),
                s(:lvar, :id)),
              s(:lvar, :id))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:ivasgn, :@t,
              s(:lvar, :parent))),
          s(:ivasgn, :@tpath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_TextTag_ID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Tk_TextTag_ID), :join,
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkCore), :INTERP), :_ip_id_)), :freeze))),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_TextTag_ID), :[],
                  s(:int, 1)), :succ!))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:send,
                s(:const, nil, :TTagID_TBL), :[]=,
                s(:ivar, :@id),
                s(:self)),
              s(:if,
                s(:send,
                  s(:const, nil, :TTagID_TBL), :[],
                  s(:ivar, :@tpath)), nil,
                s(:send,
                  s(:const, nil, :TTagID_TBL), :[]=,
                  s(:ivar, :@tpath),
                  s(:hash))),
              s(:send,
                s(:send,
                  s(:const, nil, :TTagID_TBL), :[],
                  s(:ivar, :@tpath)), :[]=,
                s(:ivar, :@id),
                s(:self)))),
          s(:if,
            s(:send,
              s(:lvar, :args), :!=,
              s(:array)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :args), :!=,
                      s(:array)),
                    s(:send, nil, :add,
                      s(:splat,
                        s(:lvar, :args))), nil),
                  s(:send, nil, :configure,
                    s(:lvar, :keys))),
                s(:begin,
                  s(:send,
                    s(:lvar, :args), :push,
                    s(:lvar, :keys)),
                  s(:send, nil, :add,
                    s(:splat,
                      s(:lvar, :args)))))), nil),
          s(:send,
            s(:ivar, :@t), :_addtag,
            s(:send, nil, :id),
            s(:self)))),
      s(:def, :id,
        s(:args),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Text), :IndexString), :new,
          s(:ivar, :@id))),
      s(:def, :exist?,
        s(:args),
        s(:if,
          s(:begin,
            s(:block,
              s(:send,
                s(:send, nil, :tk_split_simplelist,
                  s(:send, nil, :tk_call_without_enc,
                    s(:send,
                      s(:ivar, :@t), :path),
                    s(:str, "tag"),
                    s(:str, "names")),
                  s(:false),
                  s(:true)), :find),
              s(:args,
                s(:arg, :id)),
              s(:send,
                s(:lvar, :id), :==,
                s(:ivar, :@id)))),
          s(:true),
          s(:false))),
      s(:def, :first,
        s(:args),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Text), :IndexString), :new,
          s(:send,
            s(:ivar, :@id), :+,
            s(:str, ".first")))),
      s(:def, :last,
        s(:args),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Text), :IndexString), :new,
          s(:send,
            s(:ivar, :@id), :+,
            s(:str, ".last")))),
      s(:def, :add,
        s(:args,
          s(:restarg, :indices)),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:ivar, :@t), :path),
            s(:str, "tag"),
            s(:str, "add"),
            s(:ivar, :@id),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :indices), :collect),
                  s(:args,
                    s(:arg, :idx)),
                  s(:send, nil, :_get_eval_enc_str,
                    s(:lvar, :idx)))))),
          s(:self))),
      s(:def, :remove,
        s(:args,
          s(:restarg, :indices)),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:ivar, :@t), :path),
            s(:str, "tag"),
            s(:str, "remove"),
            s(:ivar, :@id),
            s(:splat,
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :indices), :collect),
                  s(:args,
                    s(:arg, :idx)),
                  s(:send, nil, :_get_eval_enc_str,
                    s(:lvar, :idx)))))),
          s(:self))),
      s(:def, :ranges,
        s(:args),
        s(:begin,
          s(:lvasgn, :l,
            s(:send, nil, :tk_split_simplelist,
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:ivar, :@t), :path),
                s(:str, "tag"),
                s(:str, "ranges"),
                s(:ivar, :@id)))),
          s(:lvasgn, :r,
            s(:array)),
          s(:while,
            s(:lvasgn, :key,
              s(:send,
                s(:lvar, :l), :shift)),
            s(:send,
              s(:lvar, :r), :push,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :Text), :IndexString), :new,
                  s(:lvar, :key)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :Text), :IndexString), :new,
                  s(:send,
                    s(:lvar, :l), :shift))))),
          s(:lvar, :r))),
      s(:def, :nextrange,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:ivar, :@t), :path),
                s(:str, "tag"),
                s(:str, "nextrange"),
                s(:ivar, :@id),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :first)),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :last)))), :collect),
          s(:args,
            s(:arg, :idx)),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Text), :IndexString), :new,
            s(:lvar, :idx)))),
      s(:def, :prevrange,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:block,
          s(:send,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:ivar, :@t), :path),
                s(:str, "tag"),
                s(:str, "prevrange"),
                s(:ivar, :@id),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :first)),
                s(:send, nil, :_get_eval_enc_str,
                  s(:lvar, :last)))), :collect),
          s(:args,
            s(:arg, :idx)),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Text), :IndexString), :new,
            s(:lvar, :idx)))),
      s(:def, :[],
        s(:args,
          s(:arg, :key)),
        s(:send, nil, :cget,
          s(:lvar, :key))),
      s(:def, :[]=,
        s(:args,
          s(:arg, :key),
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :configure,
            s(:lvar, :key),
            s(:lvar, :val)),
          s(:lvar, :val))),
      s(:def, :cget_tkstring,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@t), :tag_cget_tkstring,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :cget,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@t), :tag_cget,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :key)),
        s(:send,
          s(:ivar, :@t), :tag_cget_strict,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :configure,
        s(:args,
          s(:arg, :key),
          s(:optarg, :val,
            s(:const, nil, :None))),
        s(:send,
          s(:ivar, :@t), :tag_configure,
          s(:ivar, :@id),
          s(:lvar, :key),
          s(:lvar, :val))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@t), :tag_configinfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :current_configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@t), :current_tag_configinfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :bind,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind,
            s(:array,
              s(:send,
                s(:ivar, :@t), :path),
              s(:str, "tag"),
              s(:str, "bind"),
              s(:ivar, :@id)),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :bind_append,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send, nil, :_bind_append,
            s(:array,
              s(:send,
                s(:ivar, :@t), :path),
              s(:str, "tag"),
              s(:str, "bind"),
              s(:ivar, :@id)),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :bind_remove,
        s(:args,
          s(:arg, :seq)),
        s(:begin,
          s(:send, nil, :_bind_remove,
            s(:array,
              s(:send,
                s(:ivar, :@t), :path),
              s(:str, "tag"),
              s(:str, "bind"),
              s(:ivar, :@id)),
            s(:lvar, :seq)),
          s(:self))),
      s(:def, :bindinfo,
        s(:args,
          s(:optarg, :context,
            s(:nil))),
        s(:send, nil, :_bindinfo,
          s(:array,
            s(:send,
              s(:ivar, :@t), :path),
            s(:str, "tag"),
            s(:str, "bind"),
            s(:ivar, :@id)),
          s(:lvar, :context))),
      s(:def, :raise,
        s(:args,
          s(:optarg, :above,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:ivar, :@t), :path),
            s(:str, "tag"),
            s(:str, "raise"),
            s(:ivar, :@id),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :above))),
          s(:self))),
      s(:def, :lower,
        s(:args,
          s(:optarg, :below,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:ivar, :@t), :path),
            s(:str, "tag"),
            s(:str, "lower"),
            s(:ivar, :@id),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :below))),
          s(:self))),
      s(:def, :destroy,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:ivar, :@t), :path),
            s(:str, "tag"),
            s(:str, "delete"),
            s(:ivar, :@id)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :TTagID_TBL), :[],
                s(:ivar, :@tpath)),
              s(:send,
                s(:send,
                  s(:const, nil, :TTagID_TBL), :[],
                  s(:ivar, :@tpath)), :delete,
                s(:ivar, :@id)), nil)),
          s(:self))))),
  s(:casgn, nil, :TktTag,
    s(:const, nil, :TkTextTag)),
  s(:class,
    s(:const, nil, :TkTextNamedTag),
    s(:const, nil, :TkTextTag),
    s(:begin,
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :parent),
          s(:arg, :name),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :tagobj,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:and,
                s(:send,
                  s(:const, nil, :TTagID_TBL), :[],
                  s(:send,
                    s(:lvar, :parent), :path)),
                s(:send,
                  s(:send,
                    s(:const, nil, :TTagID_TBL), :[],
                    s(:send,
                      s(:lvar, :parent), :path)), :[],
                  s(:lvar, :name))),
              s(:lvasgn, :tagobj,
                s(:send,
                  s(:send,
                    s(:const, nil, :TTagID_TBL), :[],
                    s(:send,
                      s(:lvar, :parent), :path)), :[],
                  s(:lvar, :name))),
              s(:block,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :tagobj,
                      s(:send,
                        s(:self), :allocate))), :instance_eval),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@parent,
                    s(:ivasgn, :@t,
                      s(:lvar, :parent))),
                  s(:ivasgn, :@tpath,
                    s(:send,
                      s(:lvar, :parent), :path)),
                  s(:ivasgn, :@path,
                    s(:ivasgn, :@id,
                      s(:lvar, :name))),
                  s(:send,
                    s(:const, nil, :TTagID_TBL), :[]=,
                    s(:ivar, :@id),
                    s(:self)),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TTagID_TBL), :[],
                      s(:ivar, :@tpath)), nil,
                    s(:send,
                      s(:const, nil, :TTagID_TBL), :[]=,
                      s(:ivar, :@tpath),
                      s(:hash))),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TTagID_TBL), :[],
                        s(:ivar, :@tpath)), :[],
                      s(:ivar, :@id)), nil,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TTagID_TBL), :[],
                        s(:ivar, :@tpath)), :[]=,
                      s(:ivar, :@id),
                      s(:self))),
                  s(:send,
                    s(:ivar, :@t), :_addtag,
                    s(:ivar, :@id),
                    s(:self)))))),
          s(:if,
            s(:send,
              s(:lvar, :args), :!=,
              s(:array)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :args), :!=,
                      s(:array)),
                    s(:send,
                      s(:lvar, :tagobj), :add,
                      s(:splat,
                        s(:lvar, :args))), nil),
                  s(:send,
                    s(:lvar, :tagobj), :configure,
                    s(:lvar, :keys))),
                s(:begin,
                  s(:send,
                    s(:lvar, :args), :push,
                    s(:lvar, :keys)),
                  s(:send,
                    s(:lvar, :tagobj), :add,
                    s(:splat,
                      s(:lvar, :args)))))), nil),
          s(:lvar, :tagobj))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:arg, :name),
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@parent,
            s(:ivasgn, :@t,
              s(:lvar, :parent))),
          s(:ivasgn, :@tpath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:ivasgn, :@path,
            s(:ivasgn, :@id,
              s(:lvar, :name))),
          s(:if,
            s(:send,
              s(:lvar, :args), :!=,
              s(:array)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :args), :pop)),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :args), :!=,
                      s(:array)),
                    s(:send, nil, :add,
                      s(:splat,
                        s(:lvar, :args))), nil),
                  s(:send, nil, :configure,
                    s(:lvar, :keys))),
                s(:begin,
                  s(:send,
                    s(:lvar, :args), :push,
                    s(:lvar, :keys)),
                  s(:send, nil, :add,
                    s(:splat,
                      s(:lvar, :args)))))), nil),
          s(:send,
            s(:ivar, :@t), :_addtag,
            s(:ivar, :@id),
            s(:self)))))),
  s(:casgn, nil, :TktNamedTag,
    s(:const, nil, :TkTextNamedTag)),
  s(:class,
    s(:const, nil, :TkTextTagSel),
    s(:const, nil, :TkTextNamedTag),
    s(:defs,
      s(:self), :new,
      s(:args,
        s(:arg, :parent),
        s(:restarg, :args)),
      s(:super,
        s(:lvar, :parent),
        s(:str, "sel"),
        s(:splat,
          s(:lvar, :args))))),
  s(:casgn, nil, :TktTagSel,
    s(:const, nil, :TkTextTagSel)))
