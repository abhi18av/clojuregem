s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Frame),
    s(:const, nil, :TkWindow),
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "frame"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Frame"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "container"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :my_class_name,
            s(:nil)),
          s(:if,
            s(:send,
              s(:send,
                s(:self), :class), :<,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const,
                  s(:send,
                    s(:self), :class), :WidgetClassName))),
            s(:begin,
              s(:lvasgn, :my_class_name,
                s(:send,
                  s(:send,
                    s(:self), :class), :name)),
              s(:if,
                s(:send,
                  s(:lvar, :my_class_name), :==,
                  s(:str, "")),
                s(:lvasgn, :my_class_name,
                  s(:nil)), nil)), nil),
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:lvasgn, :keys,
              s(:send, nil, :_symbolkey2str,
                s(:lvar, :parent))),
            s(:if,
              s(:lvar, :keys),
              s(:begin,
                s(:lvasgn, :keys,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :keys))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "parent"),
                  s(:lvar, :parent))),
              s(:lvasgn, :keys,
                s(:hash,
                  s(:pair,
                    s(:str, "parent"),
                    s(:lvar, :parent)))))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :key?,
              s(:str, "classname")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "class"),
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "classname"))), nil),
          s(:ivasgn, :@classname,
            s(:send,
              s(:lvar, :keys), :[],
              s(:str, "class"))),
          s(:ivasgn, :@colormap,
            s(:send,
              s(:lvar, :keys), :[],
              s(:str, "colormap"))),
          s(:ivasgn, :@container,
            s(:send,
              s(:lvar, :keys), :[],
              s(:str, "container"))),
          s(:ivasgn, :@visual,
            s(:send,
              s(:lvar, :keys), :[],
              s(:str, "visual"))),
          s(:if,
            s(:and,
              s(:send,
                s(:ivar, :@classname), :!),
              s(:lvar, :my_class_name)),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "class"),
              s(:ivasgn, :@classname,
                s(:lvar, :my_class_name))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@classname), :kind_of?,
              s(:const, nil, :TkBindTag)),
            s(:begin,
              s(:ivasgn, :@db_class,
                s(:ivar, :@classname)),
              s(:ivasgn, :@classname,
                s(:send,
                  s(:ivar, :@classname), :id))),
            s(:if,
              s(:ivar, :@classname),
              s(:ivasgn, :@db_class,
                s(:send,
                  s(:const, nil, :TkDatabaseClass), :new,
                  s(:ivar, :@classname))),
              s(:begin,
                s(:ivasgn, :@db_class,
                  s(:send,
                    s(:self), :class)),
                s(:ivasgn, :@classname,
                  s(:const,
                    s(:ivar, :@db_class), :WidgetClassName))))),
          s(:super,
            s(:lvar, :keys)))),
      s(:def, :database_classname,
        s(:args),
        s(:ivar, :@classname)),
      s(:defs,
        s(:self), :database_class,
        s(:args),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:self),
          s(:send,
            s(:const, nil, :TkDatabaseClass), :new,
            s(:send,
              s(:self), :name)))),
      s(:defs,
        s(:self), :database_classname,
        s(:args),
        s(:send,
          s(:send,
            s(:self), :database_class), :name)),
      s(:defs,
        s(:self), :bind,
        s(:args,
          s(:restarg, :args),
          s(:blockarg, :b)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bind,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))))),
      s(:defs,
        s(:self), :bind_append,
        s(:args,
          s(:restarg, :args),
          s(:blockarg, :b)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bind_append,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))))),
      s(:defs,
        s(:self), :bind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bind_remove,
            s(:splat,
              s(:lvar, :args))))),
      s(:defs,
        s(:self), :bindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bindinfo,
            s(:splat,
              s(:lvar, :args))))))),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/frame.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :Frame),
    s(:sym, :TkFrame)))
