s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const, nil, :TkFont), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const, nil, :TkCore)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "font"), :freeze)), :freeze)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :Tk_FontID,
              s(:array,
                s(:send,
                  s(:str, "@font"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:casgn, nil, :Tk_FontNameTBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:casgn, nil, :Tk_FontUseTBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :Tk_FontNameTBL), :clear)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :Tk_FontUseTBL), :clear)))),
      s(:casgn, nil, :OptionType,
        s(:send,
          s(:const, nil, :Hash), :new,
          s(:str, "s"))),
      s(:send,
        s(:const, nil, :OptionType), :[]=,
        s(:str, "size"),
        s(:str, "n")),
      s(:send,
        s(:const, nil, :OptionType), :[]=,
        s(:str, "pointadjust"),
        s(:str, "n")),
      s(:send,
        s(:const, nil, :OptionType), :[]=,
        s(:str, "underline"),
        s(:str, "b")),
      s(:send,
        s(:const, nil, :OptionType), :[]=,
        s(:str, "overstrike"),
        s(:str, "b")),
      s(:casgn, nil, :MetricType,
        s(:send,
          s(:const, nil, :Hash), :new,
          s(:str, "n"))),
      s(:send,
        s(:const, nil, :MetricType), :[]=,
        s(:str, "fixed"),
        s(:str, "b")),
      s(:casgn, nil, :SYSTEM_FONT_NAMES,
        s(:array)),
      s(:defs,
        s(:const, nil, :SYSTEM_FONT_NAMES), :add,
        s(:args,
          s(:arg, :font_names)),
        s(:block,
          s(:send,
            s(:begin,
              s(:or_asgn,
                s(:ivasgn, :@mutex),
                s(:send,
                  s(:const, nil, :Mutex), :new))), :synchronize),
          s(:args),
          s(:send,
            s(:self), :replace,
            s(:send,
              s(:self), :|,
              s(:block,
                s(:send,
                  s(:lvar, :font_names), :map),
                s(:args,
                  s(:arg, :name)),
                s(:send,
                  s(:lvar, :name), :to_s)))))),
      s(:defs,
        s(:const, nil, :SYSTEM_FONT_NAMES), :include?,
        s(:args,
          s(:arg, :name)),
        s(:block,
          s(:send,
            s(:begin,
              s(:or_asgn,
                s(:ivasgn, :@mutex),
                s(:send,
                  s(:const, nil, :Mutex), :new))), :synchronize),
          s(:args),
          s(:super,
            s(:send,
              s(:lvar, :name), :to_s)))),
      s(:case,
        s(:const,
          s(:const, nil, :Tk), :TK_VERSION),
        s(:when,
          s(:regexp,
            s(:str, "^4\\..*"),
            s(:regopt)),
          s(:begin,
            s(:casgn, nil, :DEFAULT_LATIN_FONT_NAME,
              s(:send,
                s(:str, "a14"), :freeze)),
            s(:casgn, nil, :DEFAULT_KANJI_FONT_NAME,
              s(:send,
                s(:str, "k14"), :freeze)))),
        s(:when,
          s(:regexp,
            s(:str, "^8\\.[0-4]"),
            s(:regopt)),
          s(:begin,
            s(:if,
              s(:const, nil, :JAPANIZED_TK),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:lvasgn, :fontnames,
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "names"))),
                    s(:case,
                      s(:lvar, :fontnames),
                      s(:when,
                        s(:regexp,
                          s(:str, "defaultgui"),
                          s(:regopt)),
                        s(:begin,
                          s(:lvasgn, :ltn,
                            s(:str, "defaultgui")),
                          s(:lvasgn, :knj,
                            s(:str, "defaultgui")))),
                      s(:when,
                        s(:regexp,
                          s(:str, "Mincho:Helvetica-Bold-12"),
                          s(:regopt)),
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :ltn),
                            s(:lvasgn, :knj)),
                          s(:send, nil, :tk_split_simplelist,
                            s(:send, nil, :tk_call,
                              s(:str, "font"),
                              s(:str, "configure"),
                              s(:str, "Mincho:Helvetica-Bold-12"),
                              s(:str, "-compound"))))),
                      s(:begin,
                        s(:lvasgn, :platform,
                          s(:send,
                            s(:const,
                              s(:const, nil, :Tk), :PLATFORM), :[],
                            s(:str, "platform"))),
                        s(:case,
                          s(:lvar, :platform),
                          s(:when,
                            s(:str, "unix"),
                            s(:begin,
                              s(:lvasgn, :ltn,
                                s(:hash,
                                  s(:pair,
                                    s(:str, "family"),
                                    s(:send,
                                      s(:str, "Helvetica"), :freeze)),
                                  s(:pair,
                                    s(:str, "size"),
                                    s(:int, -12)),
                                  s(:pair,
                                    s(:str, "weight"),
                                    s(:send,
                                      s(:str, "bold"), :freeze)))),
                              s(:lvasgn, :knj,
                                s(:str, "-*-fixed-bold-r-normal--12-*-*-*-c-*-jisx0208.1983-0")))),
                          s(:when,
                            s(:str, "windows"),
                            s(:begin,
                              s(:lvasgn, :ltn,
                                s(:hash,
                                  s(:pair,
                                    s(:str, "family"),
                                    s(:send,
                                      s(:str, "MS Sans Serif"), :freeze)),
                                  s(:pair,
                                    s(:str, "size"),
                                    s(:int, 8)))),
                              s(:lvasgn, :knj,
                                s(:str, "mincho")))),
                          s(:when,
                            s(:str, "macintosh"),
                            s(:begin,
                              s(:lvasgn, :ltn,
                                s(:str, "system")),
                              s(:lvasgn, :knj,
                                s(:str, "mincho")))),
                          s(:begin,
                            s(:lvasgn, :ltn,
                              s(:str, "Helvetica")),
                            s(:lvasgn, :knj,
                              s(:str, "mincho"))))))),
                  s(:resbody, nil, nil,
                    s(:begin,
                      s(:lvasgn, :ltn,
                        s(:str, "Helvetica")),
                      s(:lvasgn, :knj,
                        s(:str, "mincho")))), nil)),
              s(:begin,
                s(:kwbegin,
                  s(:rescue,
                    s(:begin,
                      s(:lvasgn, :platform,
                        s(:send,
                          s(:const,
                            s(:const, nil, :Tk), :PLATFORM), :[],
                          s(:str, "platform"))),
                      s(:case,
                        s(:lvar, :platform),
                        s(:when,
                          s(:str, "unix"),
                          s(:lvasgn, :ltn,
                            s(:hash,
                              s(:pair,
                                s(:str, "family"),
                                s(:send,
                                  s(:str, "Helvetica"), :freeze)),
                              s(:pair,
                                s(:str, "size"),
                                s(:int, -12)),
                              s(:pair,
                                s(:str, "weight"),
                                s(:send,
                                  s(:str, "bold"), :freeze))))),
                        s(:when,
                          s(:str, "windows"),
                          s(:lvasgn, :ltn,
                            s(:hash,
                              s(:pair,
                                s(:str, "family"),
                                s(:send,
                                  s(:str, "MS Sans Serif"), :freeze)),
                              s(:pair,
                                s(:str, "size"),
                                s(:int, 8))))),
                        s(:when,
                          s(:str, "macintosh"),
                          s(:lvasgn, :ltn,
                            s(:str, "system"))),
                        s(:lvasgn, :ltn,
                          s(:str, "Helvetica")))),
                    s(:resbody, nil, nil,
                      s(:lvasgn, :ltn,
                        s(:str, "Helvetica"))), nil)),
                s(:lvasgn, :knj,
                  s(:send,
                    s(:lvar, :ltn), :dup)))),
            s(:casgn, nil, :DEFAULT_LATIN_FONT_NAME,
              s(:send,
                s(:lvar, :ltn), :freeze)),
            s(:casgn, nil, :DEFAULT_KANJI_FONT_NAME,
              s(:send,
                s(:lvar, :knj), :freeze)))),
        s(:when,
          s(:regexp,
            s(:str, "^8\\.[5-9]"),
            s(:regopt)),
          s(:regexp,
            s(:str, "^9\\..*"),
            s(:regopt)),
          s(:if,
            s(:send,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "names")), :=~,
              s(:regexp,
                s(:str, "\\bTkDefaultFont\\b"),
                s(:regopt))),
            s(:begin,
              s(:casgn, nil, :DEFAULT_LATIN_FONT_NAME,
                s(:send,
                  s(:str, "TkDefaultFont"), :freeze)),
              s(:casgn, nil, :DEFAULT_KANJI_FONT_NAME,
                s(:send,
                  s(:str, "TkDefaultFont"), :freeze))),
            s(:begin,
              s(:casgn, nil, :DEFAULT_LATIN_FONT_NAME,
                s(:send,
                  s(:str, "Helvetica"), :freeze)),
              s(:casgn, nil, :DEFAULT_KANJI_FONT_NAME,
                s(:send,
                  s(:str, "mincho"), :freeze))))),
        s(:begin,
          s(:casgn, nil, :DEFAULT_LATIN_FONT_NAME,
            s(:send,
              s(:str, "Helvetica"), :freeze)),
          s(:casgn, nil, :DEFAULT_KANJI_FONT_NAME,
            s(:send,
              s(:str, "mincho"), :freeze)))),
      s(:if,
        s(:gvar, :$DEBUG),
        s(:begin,
          s(:send, nil, :print,
            s(:str, "default latin font = ")),
          s(:send, nil, :p,
            s(:const, nil, :DEFAULT_LATIN_FONT_NAME)),
          s(:send, nil, :print,
            s(:str, "default kanji font = ")),
          s(:send, nil, :p,
            s(:const, nil, :DEFAULT_KANJI_FONT_NAME))), nil),
      s(:class,
        s(:const, nil, :DescendantFont), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :compound),
              s(:arg, :type)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :compound), :kind_of?,
                  s(:const, nil, :TkFont)), nil,
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:str, "a TkFont object is expected for the 1st argument"))),
              s(:ivasgn, :@compound,
                s(:lvar, :compound)),
              s(:case,
                s(:lvar, :type),
                s(:when,
                  s(:str, "kanji"),
                  s(:str, "latin"),
                  s(:str, "ascii"),
                  s(:ivasgn, :@type,
                    s(:lvar, :type))),
                s(:when,
                  s(:sym, :kanji),
                  s(:sym, :latin),
                  s(:sym, :ascii),
                  s(:ivasgn, :@type,
                    s(:send,
                      s(:lvar, :type), :to_s))),
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "unknown type '"),
                    s(:begin,
                      s(:lvar, :type)),
                    s(:str, "'")))))),
          s(:def, :dup,
            s(:args),
            s(:send, nil, :fail,
              s(:const, nil, :RuntimeError),
              s(:str, "cannot dupulicate a descendant font"))),
          s(:def, :clone,
            s(:args),
            s(:send, nil, :fail,
              s(:const, nil, :RuntimeError),
              s(:str, "cannot clone a descendant font"))),
          s(:def, :to_eval,
            s(:args),
            s(:send,
              s(:ivar, :@compound), :__send__,
              s(:send,
                s(:ivar, :@type), :+,
                s(:str, "_font_id")))),
          s(:def, :font,
            s(:args),
            s(:send,
              s(:ivar, :@compound), :__send__,
              s(:send,
                s(:ivar, :@type), :+,
                s(:str, "_font_id")))),
          s(:alias,
            s(:sym, :font_id),
            s(:sym, :font)),
          s(:alias,
            s(:sym, :name),
            s(:sym, :font)),
          s(:alias,
            s(:sym, :to_s),
            s(:sym, :font)),
          s(:def, :[],
            s(:args,
              s(:arg, :slot)),
            s(:send,
              s(:ivar, :@compound), :__send__,
              s(:send,
                s(:ivar, :@type), :+,
                s(:str, "_configinfo")),
              s(:lvar, :slot))),
          s(:def, :[]=,
            s(:args,
              s(:arg, :slot),
              s(:arg, :value)),
            s(:begin,
              s(:send,
                s(:ivar, :@compound), :__send__,
                s(:send,
                  s(:ivar, :@type), :+,
                  s(:str, "_configure")),
                s(:lvar, :slot),
                s(:lvar, :value)),
              s(:lvar, :value))),
          s(:def, :method_missing,
            s(:args,
              s(:arg, :id),
              s(:restarg, :args)),
            s(:send,
              s(:ivar, :@compound), :__send__,
              s(:send,
                s(:send,
                  s(:ivar, :@type), :+,
                  s(:str, "_")), :+,
                s(:send,
                  s(:lvar, :id), :id2name)),
              s(:splat,
                s(:lvar, :args)))))),
      s(:defs,
        s(:const, nil, :TkFont), :is_system_font?,
        s(:args,
          s(:arg, :fnt)),
        s(:begin,
          s(:lvasgn, :fnt,
            s(:send,
              s(:lvar, :fnt), :to_s)),
          s(:and,
            s(:and,
              s(:send,
                s(:const, nil, :SYSTEM_FONT_NAMES), :include?,
                s(:lvar, :fnt)),
              s(:send,
                s(:send,
                  s(:self), :names), :index,
                s(:lvar, :fnt))),
            s(:true)))),
      s(:defs,
        s(:const, nil, :TkFont), :actual,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :==,
              s(:str, "")),
            s(:lvasgn, :fnt,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:lvar, :fnt), :actual,
              s(:lvar, :option)),
            s(:send, nil, :actual_core,
              s(:lvar, :fnt),
              s(:nil),
              s(:lvar, :option))))),
      s(:defs,
        s(:const, nil, :TkFont), :actual_hash,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send,
            s(:const, nil, :TkFont), :actual,
            s(:lvar, :fnt),
            s(:lvar, :option)))),
      s(:defs,
        s(:const, nil, :TkFont), :actual_displayof,
        s(:args,
          s(:arg, :fnt),
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :==,
              s(:str, "")),
            s(:lvasgn, :fnt,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:lvar, :fnt), :actual_displayof,
              s(:lvar, :win),
              s(:lvar, :option)),
            s(:begin,
              s(:if,
                s(:lvar, :win), nil,
                s(:lvasgn, :win,
                  s(:str, "."))),
              s(:send, nil, :actual_core,
                s(:lvar, :fnt),
                s(:lvar, :win),
                s(:lvar, :option)))))),
      s(:defs,
        s(:const, nil, :TkFont), :actual_hash_displayof,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send,
            s(:const, nil, :TkFont), :actual_displayof,
            s(:lvar, :fnt),
            s(:lvar, :option)))),
      s(:defs,
        s(:const, nil, :TkFont), :configure,
        s(:args,
          s(:arg, :fnt),
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:lvar, :fnt), :configure,
              s(:lvar, :fnt),
              s(:lvar, :slot),
              s(:lvar, :value)),
            s(:send, nil, :configure_core,
              s(:lvar, :fnt),
              s(:lvar, :slot),
              s(:lvar, :value))),
          s(:lvar, :fnt))),
      s(:defs,
        s(:const, nil, :TkFont), :configinfo,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :slot,
            s(:nil))),
        s(:if,
          s(:send,
            s(:lvar, :fnt), :kind_of?,
            s(:const, nil, :TkFont)),
          s(:send,
            s(:lvar, :fnt), :configinfo,
            s(:lvar, :fnt),
            s(:lvar, :slot)),
          s(:send, nil, :configinfo_core,
            s(:lvar, :fnt),
            s(:lvar, :slot)))),
      s(:defs,
        s(:const, nil, :TkFont), :current_configinfo,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :slot,
            s(:nil))),
        s(:if,
          s(:send,
            s(:lvar, :fnt), :kind_of?,
            s(:const, nil, :TkFont)),
          s(:send,
            s(:lvar, :fnt), :current_configinfo,
            s(:lvar, :fnt),
            s(:lvar, :slot)),
          s(:send, nil, :current_configinfo_core,
            s(:lvar, :fnt),
            s(:lvar, :slot)))),
      s(:defs,
        s(:const, nil, :TkFont), :measure,
        s(:args,
          s(:arg, :fnt),
          s(:arg, :text)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :==,
              s(:str, "")),
            s(:lvasgn, :fnt,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:lvar, :fnt), :measure,
              s(:lvar, :text)),
            s(:send, nil, :measure_core,
              s(:lvar, :fnt),
              s(:nil),
              s(:lvar, :text))))),
      s(:defs,
        s(:const, nil, :TkFont), :measure_displayof,
        s(:args,
          s(:arg, :fnt),
          s(:arg, :win),
          s(:arg, :text)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :==,
              s(:str, "")),
            s(:lvasgn, :fnt,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:lvar, :fnt), :measure_displayof,
              s(:lvar, :win),
              s(:lvar, :text)),
            s(:begin,
              s(:if,
                s(:lvar, :win), nil,
                s(:lvasgn, :win,
                  s(:str, "."))),
              s(:send, nil, :measure_core,
                s(:lvar, :fnt),
                s(:lvar, :win),
                s(:lvar, :text)))))),
      s(:defs,
        s(:const, nil, :TkFont), :metrics,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :==,
              s(:str, "")),
            s(:lvasgn, :fnt,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:lvar, :fnt), :metrics,
              s(:lvar, :option)),
            s(:send, nil, :metrics_core,
              s(:lvar, :fnt),
              s(:nil),
              s(:lvar, :option))))),
      s(:defs,
        s(:const, nil, :TkFont), :metrics_hash,
        s(:args,
          s(:arg, :fnt),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send,
                  s(:const, nil, :TkFont), :metrics,
                  s(:lvar, :fnt),
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send,
                s(:const, nil, :TkFont), :metrics,
                s(:lvar, :fnt)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:defs,
        s(:const, nil, :TkFont), :metrics_displayof,
        s(:args,
          s(:arg, :fnt),
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :fnt), :==,
              s(:str, "")),
            s(:lvasgn, :fnt,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :fnt), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:send,
              s(:send, nil, :font), :metrics_displayof,
              s(:lvar, :win),
              s(:lvasgn, :option,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:lvar, :win), nil,
                s(:lvasgn, :win,
                  s(:str, "."))),
              s(:send, nil, :metrics_core,
                s(:lvar, :fnt),
                s(:lvar, :win),
                s(:lvar, :option)))))),
      s(:defs,
        s(:const, nil, :TkFont), :metrics_hash_displayof,
        s(:args,
          s(:arg, :fnt),
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send,
                  s(:const, nil, :TkFont), :metrics_displayof,
                  s(:lvar, :fnt),
                  s(:lvar, :win),
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send,
                s(:const, nil, :TkFont), :metrics_displayof,
                s(:lvar, :fnt),
                s(:lvar, :win),
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:defs,
        s(:const, nil, :TkFont), :families,
        s(:args,
          s(:optarg, :win,
            s(:nil))),
        s(:case,
          s(:begin,
            s(:const,
              s(:const, nil, :Tk), :TK_VERSION)),
          s(:when,
            s(:regexp,
              s(:str, "^4\\..*"),
              s(:regopt)),
            s(:array,
              s(:str, "fixed"))),
          s(:when,
            s(:regexp,
              s(:str, "^8\\..*"),
              s(:regopt)),
            s(:if,
              s(:lvar, :win),
              s(:send, nil, :tk_split_simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "families"),
                  s(:str, "-displayof"),
                  s(:lvar, :win))),
              s(:send, nil, :tk_split_simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "families"))))), nil)),
      s(:defs,
        s(:const, nil, :TkFont), :names,
        s(:args),
        s(:case,
          s(:begin,
            s(:const,
              s(:const, nil, :Tk), :TK_VERSION)),
          s(:when,
            s(:regexp,
              s(:str, "^4\\..*"),
              s(:regopt)),
            s(:begin,
              s(:lvasgn, :r,
                s(:array,
                  s(:str, "fixed"))),
              s(:if,
                s(:const, nil, :JAPANIZED_TK),
                s(:op_asgn,
                  s(:lvasgn, :r), :+,
                  s(:array,
                    s(:str, "a14"),
                    s(:str, "k14"))), nil),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
                s(:args),
                s(:block,
                  s(:send,
                    s(:const, nil, :Tk_FontNameTBL), :each_value),
                  s(:args,
                    s(:arg, :obj)),
                  s(:send,
                    s(:lvar, :r), :push,
                    s(:lvar, :obj)))),
              s(:send,
                s(:lvar, :r), :uniq))),
          s(:when,
            s(:regexp,
              s(:str, "^8\\..*"),
              s(:regopt)),
            s(:send, nil, :tk_split_simplelist,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "names")))), nil)),
      s(:defs,
        s(:const, nil, :TkFont), :create_copy,
        s(:args,
          s(:arg, :font)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :font), :kind_of?,
              s(:const, nil, :TkFont)), nil,
            s(:send, nil, :fail,
              s(:str, "source-font must be a TkFont object"))),
          s(:if,
            s(:const,
              s(:const, nil, :TkComm), :GET_CONFIGINFOwoRES_AS_ARRAY),
            s(:begin,
              s(:lvasgn, :keys,
                s(:hash)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :font), :configinfo), :each),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :value)),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:lvar, :key),
                  s(:lvar, :value))),
              s(:send,
                s(:const, nil, :TkFont), :new,
                s(:send,
                  s(:lvar, :font), :latin_font_id),
                s(:send,
                  s(:lvar, :font), :kanji_font_id),
                s(:lvar, :keys))),
            s(:send,
              s(:const, nil, :TkFont), :new,
              s(:send,
                s(:lvar, :font), :latin_font_id),
              s(:send,
                s(:lvar, :font), :kanji_font_id),
              s(:send,
                s(:lvar, :font), :configinfo))))),
      s(:defs,
        s(:const, nil, :TkFont), :get_obj,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:lvar, :name), :to_s)),
          s(:if,
            s(:send,
              s(:lvar, :name), :=~,
              s(:regexp,
                s(:str, "^(@font[0-9]+)(|c|l|k)$"),
                s(:regopt))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const, nil, :Tk_FontNameTBL), :[],
                s(:nth_ref, 1))),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
              s(:args),
              s(:send,
                s(:const, nil, :Tk_FontNameTBL), :[],
                s(:lvar, :name)))))),
      s(:defs,
        s(:const, nil, :TkFont), :init_widget_font,
        s(:args,
          s(:arg, :pathname),
          s(:restarg, :args)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :win),
              s(:lvasgn, :tag),
              s(:lvasgn, :key)),
            s(:send,
              s(:lvar, :pathname), :split,
              s(:str, ";"))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :key), :==,
                s(:nil)),
              s(:send,
                s(:lvar, :key), :==,
                s(:str, ""))),
            s(:lvasgn, :key,
              s(:str, "font")), nil),
          s(:lvasgn, :path,
            s(:send,
              s(:array,
                s(:lvar, :win),
                s(:lvar, :tag),
                s(:lvar, :key)), :join,
              s(:str, ";"))),
          s(:case,
            s(:begin,
              s(:const,
                s(:const, nil, :Tk), :TK_VERSION)),
            s(:when,
              s(:regexp,
                s(:str, "^4\\..*"),
                s(:regopt)),
              s(:begin,
                s(:lvasgn, :regexp,
                  s(:regexp,
                    s(:str, "^-(|kanji)"),
                    s(:begin,
                      s(:lvar, :key)),
                    s(:str, " "),
                    s(:regopt))),
                s(:lvasgn, :conf_list,
                  s(:block,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:send, nil, :tk_split_simplelist,
                            s(:send, nil, :tk_call,
                              s(:splat,
                                s(:lvar, :args)))), :find_all),
                        s(:args,
                          s(:arg, :prop)),
                        s(:send,
                          s(:lvar, :prop), :=~,
                          s(:lvar, :regexp))), :collect),
                    s(:args,
                      s(:arg, :prop)),
                    s(:send, nil, :tk_split_simplelist,
                      s(:lvar, :prop)))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :conf_list), :size), :==,
                    s(:int, 0)),
                  s(:send, nil, :raise,
                    s(:const, nil, :RuntimeError),
                    s(:str, "the widget may not support 'font' option")), nil),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:hash)),
                s(:lvasgn, :ltn_key,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key)))),
                s(:lvasgn, :knj_key,
                  s(:dstr,
                    s(:str, "-kanji"),
                    s(:begin,
                      s(:lvar, :key)))),
                s(:lvasgn, :ltn_info,
                  s(:block,
                    s(:send,
                      s(:lvar, :conf_list), :find),
                    s(:args,
                      s(:arg, :conf)),
                    s(:send,
                      s(:send,
                        s(:lvar, :conf), :[],
                        s(:int, 0)), :==,
                      s(:lvar, :ltn_key)))),
                s(:lvasgn, :ltn,
                  s(:send,
                    s(:lvar, :ltn_info), :[],
                    s(:int, -1))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :ltn), :==,
                      s(:array)),
                    s(:send,
                      s(:lvar, :ltn), :==,
                      s(:str, ""))),
                  s(:lvasgn, :ltn,
                    s(:nil)), nil),
                s(:lvasgn, :knj_info,
                  s(:block,
                    s(:send,
                      s(:lvar, :conf_list), :find),
                    s(:args,
                      s(:arg, :conf)),
                    s(:send,
                      s(:send,
                        s(:lvar, :conf), :[],
                        s(:int, 0)), :==,
                      s(:lvar, :knj_key)))),
                s(:lvasgn, :knj,
                  s(:send,
                    s(:lvar, :knj_info), :[],
                    s(:int, -1))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :knj), :==,
                      s(:array)),
                    s(:send,
                      s(:lvar, :knj), :==,
                      s(:str, ""))),
                  s(:lvasgn, :knj,
                    s(:nil)), nil),
                s(:send,
                  s(:send,
                    s(:const, nil, :TkFont), :new,
                    s(:lvar, :ltn),
                    s(:lvar, :knj)), :call_font_configure,
                  s(:array,
                    s(:lvar, :path),
                    s(:lvar, :key)),
                  s(:splat,
                    s(:lvar, :args))))),
            s(:when,
              s(:regexp,
                s(:str, "^8\\.[0-4]"),
                s(:regopt)),
              s(:begin,
                s(:lvasgn, :regexp,
                  s(:regexp,
                    s(:str, "^-"),
                    s(:begin,
                      s(:lvar, :key)),
                    s(:str, " "),
                    s(:regopt))),
                s(:lvasgn, :conf_list,
                  s(:block,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:send, nil, :tk_split_simplelist,
                            s(:send, nil, :tk_call,
                              s(:splat,
                                s(:lvar, :args)))), :find_all),
                        s(:args,
                          s(:arg, :prop)),
                        s(:send,
                          s(:lvar, :prop), :=~,
                          s(:lvar, :regexp))), :collect),
                    s(:args,
                      s(:arg, :prop)),
                    s(:send, nil, :tk_split_simplelist,
                      s(:lvar, :prop)))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :conf_list), :size), :==,
                    s(:int, 0)),
                  s(:send, nil, :raise,
                    s(:const, nil, :RuntimeError),
                    s(:str, "the widget may not support 'font' option")), nil),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:hash)),
                s(:lvasgn, :optkey,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key)))),
                s(:lvasgn, :info,
                  s(:block,
                    s(:send,
                      s(:lvar, :conf_list), :find),
                    s(:args,
                      s(:arg, :conf)),
                    s(:send,
                      s(:send,
                        s(:lvar, :conf), :[],
                        s(:int, 0)), :==,
                      s(:lvar, :optkey)))),
                s(:lvasgn, :fnt,
                  s(:send,
                    s(:lvar, :info), :[],
                    s(:int, -1))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :fnt), :==,
                      s(:array)),
                    s(:send,
                      s(:lvar, :fnt), :==,
                      s(:str, ""))),
                  s(:lvasgn, :fnt,
                    s(:nil)), nil),
                s(:if,
                  s(:lvar, :fnt),
                  s(:begin,
                    s(:kwbegin,
                      s(:rescue,
                        s(:lvasgn, :compound,
                          s(:send, nil, :tk_split_simplelist,
                            s(:send,
                              s(:send,
                                s(:block,
                                  s(:send,
                                    s(:send,
                                      s(:const, nil, :Hash), :[],
                                      s(:splat,
                                        s(:send, nil, :tk_split_simplelist,
                                          s(:send, nil, :tk_call,
                                            s(:str, "font"),
                                            s(:str, "configure"),
                                            s(:lvar, :fnt))))), :collect),
                                  s(:args,
                                    s(:arg, :k),
                                    s(:arg, :v)),
                                  s(:array,
                                    s(:send,
                                      s(:lvar, :k), :[],
                                      s(:irange,
                                        s(:int, 1),
                                        s(:int, -1))),
                                    s(:lvar, :v))), :assoc,
                                s(:str, "compound")), :[],
                              s(:int, 1)))),
                        s(:resbody, nil, nil,
                          s(:lvasgn, :compound,
                            s(:array))), nil)),
                    s(:if,
                      s(:send,
                        s(:lvar, :compound), :==,
                        s(:array)),
                      s(:if,
                        s(:send,
                          s(:const, nil, :TkFont), :is_system_font?,
                          s(:lvar, :fnt)),
                        s(:send,
                          s(:send,
                            s(:const, nil, :TkNamedFont), :new,
                            s(:lvar, :fnt)), :call_font_configure,
                          s(:array,
                            s(:lvar, :path),
                            s(:lvar, :key)),
                          s(:splat,
                            s(:lvar, :args))),
                        s(:send,
                          s(:send,
                            s(:const, nil, :TkFont), :new,
                            s(:lvar, :fnt)), :call_font_configure,
                          s(:array,
                            s(:lvar, :path),
                            s(:lvar, :key)),
                          s(:splat,
                            s(:lvar, :args)))),
                      s(:send,
                        s(:send,
                          s(:const, nil, :TkFont), :new,
                          s(:send,
                            s(:lvar, :compound), :[],
                            s(:int, 0)),
                          s(:send,
                            s(:lvar, :compound), :[],
                            s(:int, 1))), :call_font_configure,
                        s(:array,
                          s(:lvar, :path),
                          s(:lvar, :key)),
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:begin,
                    s(:lvasgn, :dummy_fnt,
                      s(:send,
                        s(:const, nil, :TkFont), :allocate)),
                    s(:block,
                      s(:send,
                        s(:lvar, :dummy_fnt), :instance_eval),
                      s(:args),
                      s(:send, nil, :init_dummy_fontobj)),
                    s(:lvar, :dummy_fnt))))),
            s(:when,
              s(:regexp,
                s(:str, "^8\\.[5-9]"),
                s(:regopt)),
              s(:regexp,
                s(:str, "^9\\..*"),
                s(:regopt)),
              s(:begin,
                s(:lvasgn, :regexp,
                  s(:regexp,
                    s(:str, "^-"),
                    s(:begin,
                      s(:lvar, :key)),
                    s(:str, " "),
                    s(:regopt))),
                s(:lvasgn, :conf_list,
                  s(:block,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:send, nil, :tk_split_simplelist,
                            s(:send, nil, :tk_call,
                              s(:splat,
                                s(:lvar, :args)))), :find_all),
                        s(:args,
                          s(:arg, :prop)),
                        s(:send,
                          s(:lvar, :prop), :=~,
                          s(:lvar, :regexp))), :collect),
                    s(:args,
                      s(:arg, :prop)),
                    s(:send, nil, :tk_split_simplelist,
                      s(:lvar, :prop)))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :conf_list), :size), :==,
                    s(:int, 0)),
                  s(:send, nil, :raise,
                    s(:const, nil, :RuntimeError),
                    s(:str, "the widget may not support 'font' option")), nil),
                s(:send,
                  s(:lvar, :args), :<<,
                  s(:hash)),
                s(:lvasgn, :optkey,
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :key)))),
                s(:lvasgn, :info,
                  s(:block,
                    s(:send,
                      s(:lvar, :conf_list), :find),
                    s(:args,
                      s(:arg, :conf)),
                    s(:send,
                      s(:send,
                        s(:lvar, :conf), :[],
                        s(:int, 0)), :==,
                      s(:lvar, :optkey)))),
                s(:lvasgn, :fnt,
                  s(:send,
                    s(:lvar, :info), :[],
                    s(:int, -1))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :fnt), :==,
                      s(:array)),
                    s(:send,
                      s(:lvar, :fnt), :==,
                      s(:str, ""))),
                  s(:lvasgn, :fnt,
                    s(:nil)), nil),
                s(:if,
                  s(:lvar, :fnt),
                  s(:if,
                    s(:send,
                      s(:const, nil, :TkFont), :is_system_font?,
                      s(:lvar, :fnt)),
                    s(:send,
                      s(:send,
                        s(:const, nil, :TkNamedFont), :new,
                        s(:lvar, :fnt)), :call_font_configure,
                      s(:array,
                        s(:lvar, :path),
                        s(:lvar, :key)),
                      s(:splat,
                        s(:lvar, :args))),
                    s(:send,
                      s(:send,
                        s(:const, nil, :TkFont), :new,
                        s(:lvar, :fnt)), :call_font_configure,
                      s(:array,
                        s(:lvar, :path),
                        s(:lvar, :key)),
                      s(:splat,
                        s(:lvar, :args)))),
                  s(:begin,
                    s(:lvasgn, :dummy_fnt,
                      s(:send,
                        s(:const, nil, :TkFont), :allocate)),
                    s(:block,
                      s(:send,
                        s(:lvar, :dummy_fnt), :instance_eval),
                      s(:args),
                      s(:send, nil, :init_dummy_fontobj)),
                    s(:lvar, :dummy_fnt))))), nil))),
      s(:defs,
        s(:const, nil, :TkFont), :used_on,
        s(:args,
          s(:optarg, :path,
            s(:nil))),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Tk_FontUseTBL), :mutex), :synchronize),
          s(:args),
          s(:if,
            s(:lvar, :path),
            s(:send,
              s(:const, nil, :Tk_FontUseTBL), :[],
              s(:lvar, :path)),
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontUseTBL), :values), :uniq)))),
      s(:defs,
        s(:const, nil, :TkFont), :failsafe,
        s(:args,
          s(:arg, :font)),
        s(:kwbegin,
          s(:rescue,
            s(:if,
              s(:and,
                s(:send,
                  s(:regexp,
                    s(:str, "^8\\..*"),
                    s(:regopt)), :===,
                  s(:const,
                    s(:const, nil, :Tk), :TK_VERSION)),
                s(:const, nil, :JAPANIZED_TK)),
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "failsafe"),
                s(:lvar, :font)), nil),
            s(:resbody, nil, nil, nil), nil))),
      s(:send, nil, :private),
      s(:def, :init_dummy_fontobj,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@id,
                s(:send,
                  s(:const, nil, :Tk_FontID), :join,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_FontID), :[],
                  s(:int, 1)), :succ!))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :Tk_FontNameTBL), :[]=,
              s(:ivar, :@id),
              s(:self))),
          s(:ivasgn, :@descendant,
            s(:array,
              s(:nil),
              s(:nil))),
          s(:case,
            s(:begin,
              s(:const,
                s(:const, nil, :Tk), :TK_VERSION)),
            s(:when,
              s(:regexp,
                s(:str, "^4\\..*"),
                s(:regopt)),
              s(:begin,
                s(:ivasgn, :@latinfont,
                  s(:str, "")),
                s(:ivasgn, :@kanjifont,
                  s(:str, "")),
                s(:if,
                  s(:const, nil, :JAPANIZED_TK),
                  s(:begin,
                    s(:ivasgn, :@compoundfont,
                      s(:array,
                        s(:array,
                          s(:ivar, :@latinfont)),
                        s(:array,
                          s(:ivar, :@kanjifont)))),
                    s(:ivasgn, :@fontslot,
                      s(:hash,
                        s(:pair,
                          s(:str, "font"),
                          s(:ivar, :@latinfont)),
                        s(:pair,
                          s(:str, "kanjifont"),
                          s(:ivar, :@kanjifont))))),
                  s(:begin,
                    s(:ivasgn, :@compoundfont,
                      s(:ivar, :@latinfont)),
                    s(:ivasgn, :@fontslot,
                      s(:hash,
                        s(:pair,
                          s(:str, "font"),
                          s(:ivar, :@latinfont)))))))),
            s(:begin,
              s(:ivasgn, :@latinfont,
                s(:send,
                  s(:ivar, :@id), :+,
                  s(:str, "l"))),
              s(:ivasgn, :@kanjifont,
                s(:send,
                  s(:ivar, :@id), :+,
                  s(:str, "k"))),
              s(:ivasgn, :@compoundfont,
                s(:send,
                  s(:ivar, :@id), :+,
                  s(:str, "c"))),
              s(:if,
                s(:const, nil, :JAPANIZED_TK),
                s(:begin,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@latinfont),
                    s(:str, "-charset"),
                    s(:str, "iso8859")),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@kanjifont),
                    s(:str, "-charset"),
                    s(:str, "jisx0208.1983")),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont),
                    s(:str, "-compound"),
                    s(:array,
                      s(:ivar, :@latinfont),
                      s(:ivar, :@kanjifont)))),
                s(:begin,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@latinfont)),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@kanjifont)),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont)))),
              s(:ivasgn, :@fontslot,
                s(:hash,
                  s(:pair,
                    s(:str, "font"),
                    s(:ivar, :@compoundfont)))))),
          s(:self))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :ltn,
            s(:nil)),
          s(:optarg, :knj,
            s(:nil)),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :ltn), :==,
              s(:str, "")),
            s(:lvasgn, :ltn,
              s(:str, "{}")), nil),
          s(:if,
            s(:send,
              s(:lvar, :knj), :==,
              s(:str, "")),
            s(:lvasgn, :knj,
              s(:str, "{}")), nil),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@id,
                s(:send,
                  s(:const, nil, :Tk_FontID), :join,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkCore), :INTERP), :_ip_id_))),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_FontID), :[],
                  s(:int, 1)), :succ!))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :Tk_FontNameTBL), :[]=,
              s(:ivar, :@id),
              s(:self))),
          s(:ivasgn, :@descendant,
            s(:array,
              s(:nil),
              s(:nil))),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :knj), :kind_of?,
                s(:const, nil, :Hash)),
              s(:send,
                s(:lvar, :keys), :!)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:lvar, :knj)),
              s(:lvasgn, :knj,
                s(:nil))), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :TK_VERSION), :==,
                s(:str, "8.0")),
              s(:const, nil, :JAPANIZED_TK)),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :compound,
                    s(:send, nil, :tk_split_simplelist,
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "configure"),
                        s(:lvar, :ltn),
                        s(:str, "-compound")))),
                  s(:if,
                    s(:send,
                      s(:lvar, :knj), :==,
                      s(:nil)),
                    s(:if,
                      s(:send,
                        s(:lvar, :compound), :!=,
                        s(:array)),
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :ltn),
                          s(:lvasgn, :knj)),
                        s(:lvar, :compound)), nil),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:lvar, :compound), :!=,
                          s(:array)),
                        s(:lvasgn, :ltn,
                          s(:send,
                            s(:lvar, :compound), :[],
                            s(:int, 0))), nil),
                      s(:lvasgn, :compound,
                        s(:send, nil, :tk_split_simplelist,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "configure"),
                            s(:lvar, :knj),
                            s(:str, "-compound")))),
                      s(:if,
                        s(:send,
                          s(:lvar, :compound), :!=,
                          s(:array)),
                        s(:lvasgn, :knj,
                          s(:send,
                            s(:lvar, :compound), :[],
                            s(:int, 1))), nil)))),
                s(:resbody, nil, nil, nil), nil)), nil),
          s(:if,
            s(:lvar, :ltn),
            s(:if,
              s(:and,
                s(:const, nil, :JAPANIZED_TK),
                s(:send,
                  s(:lvar, :knj), :!)),
              s(:if,
                s(:send,
                  s(:const,
                    s(:const, nil, :Tk), :TK_VERSION), :=~,
                  s(:regexp,
                    s(:str, "^4..*"),
                    s(:regopt))),
                s(:lvasgn, :knj,
                  s(:const, nil, :DEFAULT_KANJI_FONT_NAME)),
                s(:lvasgn, :knj,
                  s(:lvar, :ltn))), nil),
            s(:begin,
              s(:lvasgn, :ltn,
                s(:const, nil, :DEFAULT_LATIN_FONT_NAME)),
              s(:if,
                s(:and,
                  s(:const, nil, :JAPANIZED_TK),
                  s(:send,
                    s(:lvar, :knj), :!)),
                s(:lvasgn, :knj,
                  s(:const, nil, :DEFAULT_KANJI_FONT_NAME)), nil))),
          s(:send, nil, :create_compoundfont,
            s(:lvar, :ltn),
            s(:lvar, :knj),
            s(:lvar, :keys)))),
      s(:def, :initialize_copy,
        s(:args,
          s(:arg, :font)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :font), :kind_of?,
              s(:const, nil, :TkFont)), nil,
            s(:send, nil, :fail,
              s(:const, nil, :TypeError),
              s(:str, "\"initialize_copy should take same class object"))),
          s(:if,
            s(:const,
              s(:const, nil, :TkComm), :GET_CONFIGINFOwoRES_AS_ARRAY),
            s(:begin,
              s(:lvasgn, :keys,
                s(:hash)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :font), :configinfo), :each),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :value)),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:lvar, :key),
                  s(:lvar, :value))),
              s(:send, nil, :initialize,
                s(:send,
                  s(:lvar, :font), :latin_font_id),
                s(:send,
                  s(:lvar, :font), :kanji_font_id),
                s(:lvar, :keys))),
            s(:send, nil, :initialize,
              s(:send,
                s(:lvar, :font), :latin_font_id),
              s(:send,
                s(:lvar, :font), :kanji_font_id),
              s(:send,
                s(:lvar, :font), :configinfo))))),
      s(:def, :_get_font_info_from_hash,
        s(:args,
          s(:arg, :font)),
        s(:begin,
          s(:lvasgn, :font,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :font))),
          s(:lvasgn, :foundry,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "foundry")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :family,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "family")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :weight,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "weight")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :slant,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "slant")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :swidth,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "swidth")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :adstyle,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "adstyle")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :pixels,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "pixels")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :points,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "points")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :resx,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "resx")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :resy,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "resy")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :space,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "space")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :avgWidth,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "avgWidth")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :charset,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "charset")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:lvasgn, :encoding,
            s(:if,
              s(:begin,
                s(:lvasgn, :info,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:str, "encoding")), :to_s))),
              s(:lvar, :info),
              s(:str, "*"))),
          s(:array,
            s(:lvar, :foundry),
            s(:lvar, :family),
            s(:lvar, :weight),
            s(:lvar, :slant),
            s(:lvar, :swidth),
            s(:lvar, :adstyle),
            s(:lvar, :pixels),
            s(:lvar, :points),
            s(:lvar, :resx),
            s(:lvar, :resy),
            s(:lvar, :space),
            s(:lvar, :avgWidth),
            s(:lvar, :charset),
            s(:lvar, :encoding)))),
      s(:def, :create_latinfont_tk4x,
        s(:args,
          s(:arg, :font)),
        s(:if,
          s(:send,
            s(:lvar, :font), :kind_of?,
            s(:const, nil, :Hash)),
          s(:ivasgn, :@latinfont,
            s(:send,
              s(:send,
                s(:str, "-"), :+,
                s(:send,
                  s(:send, nil, :_get_font_info_from_hash,
                    s(:lvar, :font)), :join,
                  s(:str, "-"))), :+,
              s(:str, "-"))),
          s(:if,
            s(:send,
              s(:lvar, :font), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:lvasgn, :finfo,
                s(:hash)),
              s(:send,
                s(:lvar, :finfo), :[]=,
                s(:str, "family"),
                s(:send,
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:int, 0)), :to_s)),
              s(:if,
                s(:send,
                  s(:lvar, :font), :[],
                  s(:int, 1)),
                s(:begin,
                  s(:lvasgn, :fsize,
                    s(:send,
                      s(:send,
                        s(:lvar, :font), :[],
                        s(:int, 1)), :to_s)),
                  s(:if,
                    s(:and,
                      s(:send,
                        s(:lvar, :fsize), :!=,
                        s(:str, "0")),
                      s(:send,
                        s(:lvar, :fsize), :=~,
                        s(:regexp,
                          s(:str, "^(|\\+|-)([0-9]+)$"),
                          s(:regopt)))),
                    s(:if,
                      s(:send,
                        s(:nth_ref, 1), :==,
                        s(:str, "-")),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "pixels"),
                        s(:nth_ref, 2)),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "points"),
                        s(:nth_ref, 2))),
                    s(:send,
                      s(:lvar, :finfo), :[]=,
                      s(:str, "points"),
                      s(:str, "13")))), nil),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:irange,
                      s(:int, 2),
                      s(:int, -1))), :each),
                s(:args,
                  s(:arg, :style)),
                s(:case,
                  s(:begin,
                    s(:lvar, :style)),
                  s(:when,
                    s(:str, "normal"),
                    s(:send,
                      s(:lvar, :finfo), :[]=,
                      s(:str, "weight"),
                      s(:lvar, :style))),
                  s(:when,
                    s(:str, "bold"),
                    s(:send,
                      s(:lvar, :finfo), :[]=,
                      s(:str, "weight"),
                      s(:lvar, :style))),
                  s(:when,
                    s(:str, "roman"),
                    s(:send,
                      s(:lvar, :finfo), :[]=,
                      s(:str, "slant"),
                      s(:str, "r"))),
                  s(:when,
                    s(:str, "italic"),
                    s(:send,
                      s(:lvar, :finfo), :[]=,
                      s(:str, "slant"),
                      s(:str, "i"))), nil)),
              s(:ivasgn, :@latinfont,
                s(:send,
                  s(:send,
                    s(:str, "-"), :+,
                    s(:send,
                      s(:send, nil, :_get_font_info_from_hash,
                        s(:lvar, :finfo)), :join,
                      s(:str, "-"))), :+,
                  s(:str, "-")))),
            s(:if,
              s(:send,
                s(:lvar, :font), :kind_of?,
                s(:const, nil, :TkFont)),
              s(:ivasgn, :@latinfont,
                s(:send,
                  s(:lvar, :font), :latin_font)),
              s(:if,
                s(:lvar, :font),
                s(:ivasgn, :@latinfont,
                  s(:lvar, :font)),
                s(:ivasgn, :@latinfont,
                  s(:const, nil, :DEFAULT_LATIN_FONT_NAME))))))),
      s(:def, :create_kanjifont_tk4x,
        s(:args,
          s(:arg, :font)),
        s(:begin,
          s(:if,
            s(:const, nil, :JAPANIZED_TK), nil,
            s(:begin,
              s(:ivasgn, :@kanjifont,
                s(:str, "")),
              s(:return))),
          s(:if,
            s(:send,
              s(:lvar, :font), :kind_of?,
              s(:const, nil, :Hash)),
            s(:ivasgn, :@kanjifont,
              s(:send,
                s(:send,
                  s(:str, "-"), :+,
                  s(:send,
                    s(:send, nil, :_get_font_info_from_hash,
                      s(:lvar, :font)), :join,
                    s(:str, "-"))), :+,
                s(:str, "-"))),
            s(:if,
              s(:send,
                s(:lvar, :font), :kind_of?,
                s(:const, nil, :Array)),
              s(:begin,
                s(:lvasgn, :finfo,
                  s(:hash)),
                s(:send,
                  s(:lvar, :finfo), :[]=,
                  s(:str, "family"),
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:int, 0)), :to_s)),
                s(:if,
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:int, 1)),
                  s(:begin,
                    s(:lvasgn, :fsize,
                      s(:send,
                        s(:send,
                          s(:lvar, :font), :[],
                          s(:int, 1)), :to_s)),
                    s(:if,
                      s(:and,
                        s(:send,
                          s(:lvar, :fsize), :!=,
                          s(:str, "0")),
                        s(:send,
                          s(:lvar, :fsize), :=~,
                          s(:regexp,
                            s(:str, "^(|\\+|-)([0-9]+)$"),
                            s(:regopt)))),
                      s(:if,
                        s(:send,
                          s(:nth_ref, 1), :==,
                          s(:str, "-")),
                        s(:send,
                          s(:lvar, :finfo), :[]=,
                          s(:str, "pixels"),
                          s(:nth_ref, 2)),
                        s(:send,
                          s(:lvar, :finfo), :[]=,
                          s(:str, "points"),
                          s(:nth_ref, 2))),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "points"),
                        s(:str, "13")))), nil),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :font), :[],
                      s(:irange,
                        s(:int, 2),
                        s(:int, -1))), :each),
                  s(:args,
                    s(:arg, :style)),
                  s(:case,
                    s(:begin,
                      s(:lvar, :style)),
                    s(:when,
                      s(:str, "normal"),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "weight"),
                        s(:lvar, :style))),
                    s(:when,
                      s(:str, "bold"),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "weight"),
                        s(:lvar, :style))),
                    s(:when,
                      s(:str, "roman"),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "slant"),
                        s(:str, "r"))),
                    s(:when,
                      s(:str, "italic"),
                      s(:send,
                        s(:lvar, :finfo), :[]=,
                        s(:str, "slant"),
                        s(:str, "i"))), nil)),
                s(:ivasgn, :@kanjifont,
                  s(:send,
                    s(:send,
                      s(:str, "-"), :+,
                      s(:send,
                        s(:send, nil, :_get_font_info_from_hash,
                          s(:lvar, :finfo)), :join,
                        s(:str, "-"))), :+,
                    s(:str, "-")))),
              s(:if,
                s(:send,
                  s(:lvar, :font), :kind_of?,
                  s(:const, nil, :TkFont)),
                s(:ivasgn, :@kanjifont,
                  s(:send,
                    s(:lvar, :font), :kanji_font_id)),
                s(:if,
                  s(:lvar, :font),
                  s(:ivasgn, :@kanjifont,
                    s(:lvar, :font)),
                  s(:ivasgn, :@kanjifont,
                    s(:const, nil, :DEFAULT_KANJI_FONT_NAME)))))))),
      s(:def, :create_compoundfont_tk4x,
        s(:args,
          s(:arg, :ltn),
          s(:arg, :knj),
          s(:arg, :keys)),
        s(:begin,
          s(:send, nil, :create_latinfont,
            s(:lvar, :ltn)),
          s(:send, nil, :create_kanjifont,
            s(:lvar, :knj)),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:begin,
              s(:ivasgn, :@compoundfont,
                s(:array,
                  s(:array,
                    s(:ivar, :@latinfont)),
                  s(:array,
                    s(:ivar, :@kanjifont)))),
              s(:ivasgn, :@fontslot,
                s(:hash,
                  s(:pair,
                    s(:str, "font"),
                    s(:ivar, :@latinfont)),
                  s(:pair,
                    s(:str, "kanjifont"),
                    s(:ivar, :@kanjifont))))),
            s(:begin,
              s(:ivasgn, :@compoundfont,
                s(:ivar, :@latinfont)),
              s(:ivasgn, :@fontslot,
                s(:hash,
                  s(:pair,
                    s(:str, "font"),
                    s(:ivar, :@latinfont)))))))),
      s(:def, :create_latinfont_tk8x,
        s(:args,
          s(:arg, :font)),
        s(:begin,
          s(:ivasgn, :@latinfont,
            s(:send,
              s(:ivar, :@id), :+,
              s(:str, "l"))),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:if,
              s(:send,
                s(:lvar, :font), :kind_of?,
                s(:const, nil, :Hash)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:sym, :charset)),
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:str, "charset"))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "create"),
                  s(:ivar, :@latinfont),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :font)))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "create"),
                  s(:ivar, :@latinfont),
                  s(:str, "-charset"),
                  s(:str, "iso8859"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :font))))),
              s(:if,
                s(:send,
                  s(:lvar, :font), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@latinfont),
                    s(:str, "-copy"),
                    s(:send, nil, :array2tk_list,
                      s(:lvar, :font))),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:ivar, :@latinfont),
                    s(:str, "-charset"),
                    s(:str, "iso8859"))),
                s(:if,
                  s(:send,
                    s(:lvar, :font), :kind_of?,
                    s(:const, nil, :TkFont)),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@latinfont),
                    s(:str, "-copy"),
                    s(:send,
                      s(:lvar, :font), :latin_font)),
                  s(:if,
                    s(:lvar, :font),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:ivar, :@latinfont),
                      s(:str, "-copy"),
                      s(:lvar, :font),
                      s(:str, "-charset"),
                      s(:str, "iso8859")),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:ivar, :@latinfont),
                      s(:str, "-charset"),
                      s(:str, "iso8859")))))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :font), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "create"),
                  s(:ivar, :@latinfont),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :font)))),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:hash)),
                  s(:if,
                    s(:send,
                      s(:lvar, :font), :kind_of?,
                      s(:const, nil, :Array)),
                    s(:block,
                      s(:send,
                        s(:send, nil, :actual_core,
                          s(:send, nil, :array2tk_list,
                            s(:lvar, :font))), :each),
                      s(:args,
                        s(:arg, :key),
                        s(:arg, :val)),
                      s(:send,
                        s(:lvar, :keys), :[]=,
                        s(:lvar, :key),
                        s(:lvar, :val))),
                    s(:if,
                      s(:send,
                        s(:lvar, :font), :kind_of?,
                        s(:const, nil, :TkFont)),
                      s(:block,
                        s(:send,
                          s(:send, nil, :actual_core,
                            s(:send,
                              s(:lvar, :font), :latin_font)), :each),
                        s(:args,
                          s(:arg, :key),
                          s(:arg, :val)),
                        s(:send,
                          s(:lvar, :keys), :[]=,
                          s(:lvar, :key),
                          s(:lvar, :val))),
                      s(:if,
                        s(:lvar, :font),
                        s(:block,
                          s(:send,
                            s(:send, nil, :actual_core,
                              s(:lvar, :font)), :each),
                          s(:args,
                            s(:arg, :key),
                            s(:arg, :val)),
                          s(:send,
                            s(:lvar, :keys), :[]=,
                            s(:lvar, :key),
                            s(:lvar, :val))), nil))),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@latinfont),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))))),
              s(:if,
                s(:and,
                  s(:lvar, :font),
                  s(:ivar, :@compoundfont)),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:hash)),
                  s(:block,
                    s(:send,
                      s(:send, nil, :actual_core,
                        s(:ivar, :@latinfont)), :each),
                    s(:args,
                      s(:arg, :key),
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :keys), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :val))),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:ivar, :@compoundfont),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys))))), nil))))),
      s(:def, :create_kanjifont_tk8x,
        s(:args,
          s(:arg, :font)),
        s(:begin,
          s(:ivasgn, :@kanjifont,
            s(:send,
              s(:ivar, :@id), :+,
              s(:str, "k"))),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:if,
              s(:send,
                s(:lvar, :font), :kind_of?,
                s(:const, nil, :Hash)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:sym, :charset)),
                  s(:send,
                    s(:lvar, :font), :[],
                    s(:str, "charset"))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "create"),
                  s(:ivar, :@kanjifont),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :font)))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "create"),
                  s(:ivar, :@kanjifont),
                  s(:str, "-charset"),
                  s(:str, "jisx0208.1983"),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :font))))),
              s(:if,
                s(:send,
                  s(:lvar, :font), :kind_of?,
                  s(:const, nil, :Array)),
                s(:begin,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@kanjifont),
                    s(:str, "-copy"),
                    s(:send, nil, :array2tk_list,
                      s(:lvar, :font))),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:ivar, :@kanjifont),
                    s(:str, "-charset"),
                    s(:str, "jisx0208.1983"))),
                s(:if,
                  s(:send,
                    s(:lvar, :font), :kind_of?,
                    s(:const, nil, :TkFont)),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@kanjifont),
                    s(:str, "-copy"),
                    s(:send,
                      s(:lvar, :font), :kanji_font_id)),
                  s(:if,
                    s(:lvar, :font),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:ivar, :@kanjifont),
                      s(:str, "-copy"),
                      s(:lvar, :font),
                      s(:str, "-charset"),
                      s(:str, "jisx0208.1983")),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:ivar, :@kanjifont),
                      s(:str, "-charset"),
                      s(:str, "jisx0208.1983")))))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :font), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "create"),
                  s(:ivar, :@kanjifont),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :font)))),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:hash)),
                  s(:if,
                    s(:send,
                      s(:lvar, :font), :kind_of?,
                      s(:const, nil, :Array)),
                    s(:block,
                      s(:send,
                        s(:send, nil, :actual_core,
                          s(:send, nil, :array2tk_list,
                            s(:lvar, :font))), :each),
                      s(:args,
                        s(:arg, :key),
                        s(:arg, :val)),
                      s(:send,
                        s(:lvar, :keys), :[]=,
                        s(:lvar, :key),
                        s(:lvar, :val))),
                    s(:if,
                      s(:send,
                        s(:lvar, :font), :kind_of?,
                        s(:const, nil, :TkFont)),
                      s(:block,
                        s(:send,
                          s(:send, nil, :actual_core,
                            s(:send,
                              s(:lvar, :font), :kanji_font_id)), :each),
                        s(:args,
                          s(:arg, :key),
                          s(:arg, :val)),
                        s(:send,
                          s(:lvar, :keys), :[]=,
                          s(:lvar, :key),
                          s(:lvar, :val))),
                      s(:if,
                        s(:lvar, :font),
                        s(:block,
                          s(:send,
                            s(:send, nil, :actual_core,
                              s(:lvar, :font)), :each),
                          s(:args,
                            s(:arg, :key),
                            s(:arg, :val)),
                          s(:send,
                            s(:lvar, :keys), :[]=,
                            s(:lvar, :key),
                            s(:lvar, :val))), nil))),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@kanjifont),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))))),
              s(:if,
                s(:and,
                  s(:lvar, :font),
                  s(:ivar, :@compoundfont)),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:hash)),
                  s(:block,
                    s(:send,
                      s(:send, nil, :actual_core,
                        s(:ivar, :@kanjifont)), :each),
                    s(:args,
                      s(:arg, :key),
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :keys), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :val))),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:ivar, :@compoundfont),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys))))), nil))))),
      s(:def, :create_compoundfont_tk8x,
        s(:args,
          s(:arg, :ltn),
          s(:arg, :knj),
          s(:arg, :keys)),
        s(:begin,
          s(:if,
            s(:lvar, :knj),
            s(:begin,
              s(:send, nil, :create_latinfont,
                s(:lvar, :ltn)),
              s(:send, nil, :create_kanjifont,
                s(:lvar, :knj))),
            s(:begin,
              s(:lvasgn, :cfnt,
                s(:lvar, :ltn)),
              s(:send, nil, :create_kanjifont,
                s(:lvar, :cfnt)),
              s(:send, nil, :create_latinfont,
                s(:lvar, :cfnt)))),
          s(:ivasgn, :@compoundfont,
            s(:send,
              s(:ivar, :@id), :+,
              s(:str, "c"))),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:begin,
              s(:if,
                s(:lvar, :keys),
                s(:lvasgn, :keys,
                  s(:send,
                    s(:lvar, :keys), :dup)),
                s(:lvasgn, :keys,
                  s(:hash))),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:send, nil, :tk_call,
                          s(:str, "font"),
                          s(:str, "configure"),
                          s(:ivar, :@latinfont),
                          s(:str, "-underline")), :==,
                        s(:str, "1")),
                      s(:send,
                        s(:send, nil, :tk_call,
                          s(:str, "font"),
                          s(:str, "configure"),
                          s(:ivar, :@kanjifont),
                          s(:str, "-underline")), :==,
                        s(:str, "1"))),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :key?,
                        s(:str, "underline")), :!))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "underline"),
                  s(:true)), nil),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:send, nil, :tk_call,
                          s(:str, "font"),
                          s(:str, "configure"),
                          s(:ivar, :@latinfont),
                          s(:str, "-overstrike")), :==,
                        s(:str, "1")),
                      s(:send,
                        s(:send, nil, :tk_call,
                          s(:str, "font"),
                          s(:str, "configure"),
                          s(:ivar, :@kanjifont),
                          s(:str, "-overstrike")), :==,
                        s(:str, "1"))),
                    s(:send,
                      s(:send,
                        s(:lvar, :keys), :key?,
                        s(:str, "overstrike")), :!))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "overstrike"),
                  s(:true)), nil),
              s(:ivasgn, :@fontslot,
                s(:hash,
                  s(:pair,
                    s(:str, "font"),
                    s(:ivar, :@compoundfont)))),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont),
                    s(:str, "-compound"),
                    s(:array,
                      s(:ivar, :@latinfont),
                      s(:ivar, :@kanjifont)),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :RuntimeError)),
                    s(:lvasgn, :e),
                    s(:if,
                      s(:send,
                        s(:lvar, :ltn), :==,
                        s(:lvar, :knj)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :e), :message), :=~,
                          s(:regexp,
                            s(:str, "kanji font .* specified"),
                            s(:regopt))),
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "delete"),
                            s(:ivar, :@latinfont)),
                          s(:send, nil, :create_latinfont,
                            s(:const, nil, :DEFAULT_LATIN_FONT_NAME)),
                          s(:lvasgn, :opts,
                            s(:array)),
                          s(:block,
                            s(:send,
                              s(:send,
                                s(:const, nil, :Hash), :[],
                                s(:splat,
                                  s(:begin,
                                    s(:send, nil, :tk_split_simplelist,
                                      s(:send, nil, :tk_call,
                                        s(:str, "font"),
                                        s(:str, "configure"),
                                        s(:ivar, :@kanjifont)))))), :each),
                            s(:args,
                              s(:arg, :k),
                              s(:arg, :v)),
                            s(:case,
                              s(:lvar, :k),
                              s(:when,
                                s(:str, "-size"),
                                s(:str, "-weight"),
                                s(:str, "-slant"),
                                s(:str, "-underline"),
                                s(:str, "-overstrike"),
                                s(:send,
                                  s(:send,
                                    s(:lvar, :opts), :<<,
                                    s(:lvar, :k)), :<<,
                                  s(:lvar, :v))), nil)),
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "configure"),
                            s(:ivar, :@latinfont),
                            s(:splat,
                              s(:lvar, :opts))),
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "create"),
                            s(:ivar, :@compoundfont),
                            s(:str, "-compound"),
                            s(:array,
                              s(:ivar, :@latinfont),
                              s(:ivar, :@kanjifont)),
                            s(:splat,
                              s(:send, nil, :hash_kv,
                                s(:lvar, :keys))))),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :e), :message), :=~,
                            s(:regexp,
                              s(:str, "ascii font .* specified"),
                              s(:regopt))),
                          s(:begin,
                            s(:send, nil, :tk_call,
                              s(:str, "font"),
                              s(:str, "delete"),
                              s(:ivar, :@kanjifont)),
                            s(:send, nil, :create_kanjifont,
                              s(:const, nil, :DEFAULT_KANJI_FONT_NAME)),
                            s(:lvasgn, :opts,
                              s(:array)),
                            s(:block,
                              s(:send,
                                s(:send,
                                  s(:const, nil, :Hash), :[],
                                  s(:splat,
                                    s(:begin,
                                      s(:send, nil, :tk_split_simplelist,
                                        s(:send, nil, :tk_call,
                                          s(:str, "font"),
                                          s(:str, "configure"),
                                          s(:ivar, :@latinfont)))))), :each),
                              s(:args,
                                s(:arg, :k),
                                s(:arg, :v)),
                              s(:case,
                                s(:lvar, :k),
                                s(:when,
                                  s(:str, "-size"),
                                  s(:str, "-weight"),
                                  s(:str, "-slant"),
                                  s(:str, "-underline"),
                                  s(:str, "-overstrike"),
                                  s(:send,
                                    s(:send,
                                      s(:lvar, :opts), :<<,
                                      s(:lvar, :k)), :<<,
                                    s(:lvar, :v))), nil)),
                            s(:send, nil, :tk_call,
                              s(:str, "font"),
                              s(:str, "configure"),
                              s(:ivar, :@kanjifont),
                              s(:splat,
                                s(:lvar, :opts))),
                            s(:send, nil, :tk_call,
                              s(:str, "font"),
                              s(:str, "create"),
                              s(:ivar, :@compoundfont),
                              s(:str, "-compound"),
                              s(:array,
                                s(:ivar, :@latinfont),
                                s(:ivar, :@kanjifont)),
                              s(:splat,
                                s(:send, nil, :hash_kv,
                                  s(:lvar, :keys))))),
                          s(:send, nil, :raise,
                            s(:lvar, :e)))),
                      s(:send, nil, :raise,
                        s(:lvar, :e)))), nil))),
            s(:begin,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "create"),
                s(:ivar, :@compoundfont)),
              s(:lvasgn, :latinkeys,
                s(:hash)),
              s(:kwbegin,
                s(:rescue,
                  s(:block,
                    s(:send,
                      s(:send, nil, :actual_core,
                        s(:ivar, :@latinfont)), :each),
                    s(:args,
                      s(:arg, :key),
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :latinkeys), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :val))),
                  s(:resbody, nil, nil,
                    s(:lvasgn, :latinkeys,
                      s(:hash))), nil)),
              s(:if,
                s(:send,
                  s(:lvar, :latinkeys), :!=,
                  s(:hash)),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:ivar, :@compoundfont),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :latinkeys)))), nil),
              s(:if,
                s(:lvar, :knj),
                s(:begin,
                  s(:lvasgn, :compoundkeys,
                    s(:nil)),
                  s(:lvasgn, :kanjikeys,
                    s(:hash)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:block,
                        s(:send,
                          s(:send, nil, :actual_core,
                            s(:ivar, :@kanjifont)), :each),
                        s(:args,
                          s(:arg, :key),
                          s(:arg, :val)),
                        s(:send,
                          s(:lvar, :kanjikeys), :[]=,
                          s(:lvar, :key),
                          s(:lvar, :val))),
                      s(:resbody, nil, nil,
                        s(:lvasgn, :kanjikeys,
                          s(:hash))), nil)),
                  s(:if,
                    s(:send,
                      s(:lvar, :kanjikeys), :!=,
                      s(:hash)),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "configure"),
                      s(:ivar, :@compoundfont),
                      s(:splat,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :kanjikeys)))), nil)), nil),
              s(:if,
                s(:lvar, :cfnt),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :cfnt), :kind_of?,
                      s(:const, nil, :Hash)),
                    s(:lvasgn, :compoundkeys,
                      s(:send,
                        s(:lvar, :cfnt), :dup)),
                    s(:begin,
                      s(:lvasgn, :compoundkeys,
                        s(:hash)),
                      s(:block,
                        s(:send,
                          s(:send, nil, :actual_core,
                            s(:lvar, :cfnt)), :each),
                        s(:args,
                          s(:arg, :key),
                          s(:arg, :val)),
                        s(:send,
                          s(:lvar, :compoundkeys), :[]=,
                          s(:lvar, :key),
                          s(:lvar, :val))))),
                  s(:send,
                    s(:lvar, :compoundkeys), :update,
                    s(:send, nil, :_symbolkey2str,
                      s(:lvar, :keys))),
                  s(:lvasgn, :keys,
                    s(:lvar, :compoundkeys))), nil),
              s(:ivasgn, :@fontslot,
                s(:hash,
                  s(:pair,
                    s(:str, "font"),
                    s(:ivar, :@compoundfont)))),
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "configure"),
                s(:ivar, :@compoundfont),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys)))))))),
      s(:send, nil, :public),
      s(:def, :inspect,
        s(:args),
        s(:send, nil, :sprintf,
          s(:str, "#<%s:%0x:%s>"),
          s(:send,
            s(:send,
              s(:self), :class), :inspect),
          s(:send,
            s(:self), :__id__),
          s(:ivar, :@compoundfont))),
      s(:def, :method_missing,
        s(:args,
          s(:arg, :id),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:lvar, :id), :id2name)),
          s(:case,
            s(:send,
              s(:lvar, :args), :length),
            s(:when,
              s(:int, 1),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :name), :[],
                    s(:int, -1)), :==,
                  s(:str, "=")),
                s(:begin,
                  s(:send, nil, :configure,
                    s(:send,
                      s(:lvar, :name), :[],
                      s(:irange,
                        s(:int, 0),
                        s(:int, -2))),
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0))),
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:begin,
                  s(:send, nil, :configure,
                    s(:lvar, :name),
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0))),
                  s(:self)))),
            s(:when,
              s(:int, 0),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :configinfo,
                    s(:lvar, :name)),
                  s(:resbody, nil, nil,
                    s(:super,
                      s(:lvar, :id),
                      s(:splat,
                        s(:lvar, :args)))), nil))),
            s(:super,
              s(:lvar, :id),
              s(:splat,
                s(:lvar, :args)))))),
      s(:def, :call_font_configure,
        s(:args,
          s(:arg, :path),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :path), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :win),
                  s(:lvasgn, :tag)),
                s(:send,
                  s(:send,
                    s(:lvar, :path), :[],
                    s(:int, 0)), :split,
                  s(:str, ";"))),
              s(:lvasgn, :optkey,
                s(:send,
                  s(:send,
                    s(:lvar, :path), :[],
                    s(:int, 1)), :to_s))),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win),
                s(:lvasgn, :tag),
                s(:lvasgn, :optkey)),
              s(:send,
                s(:lvar, :path), :split,
                s(:str, ";")))),
          s(:lvasgn, :fontslot,
            s(:send, nil, :_symbolkey2str,
              s(:ivar, :@fontslot))),
          s(:if,
            s(:and,
              s(:lvar, :optkey),
              s(:send,
                s(:lvar, :optkey), :!=,
                s(:str, ""))),
            s(:begin,
              s(:lvasgn, :ltn,
                s(:send,
                  s(:lvar, :fontslot), :delete,
                  s(:str, "font"))),
              s(:lvasgn, :knj,
                s(:send,
                  s(:lvar, :fontslot), :delete,
                  s(:str, "kanjifont"))),
              s(:if,
                s(:lvar, :ltn),
                s(:send,
                  s(:lvar, :fontslot), :[]=,
                  s(:lvar, :optkey),
                  s(:lvar, :ltn)), nil),
              s(:if,
                s(:lvar, :knj),
                s(:send,
                  s(:lvar, :fontslot), :[]=,
                  s(:dstr,
                    s(:str, "kanji"),
                    s(:begin,
                      s(:lvar, :optkey))),
                  s(:lvar, :knj)), nil)), nil),
          s(:lvasgn, :keys,
            s(:send,
              s(:send, nil, :_symbolkey2str,
                s(:send,
                  s(:lvar, :args), :pop)), :update,
              s(:lvar, :fontslot))),
          s(:send,
            s(:lvar, :args), :concat,
            s(:send, nil, :hash_kv,
              s(:lvar, :keys))),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :tk_call,
                s(:splat,
                  s(:lvar, :args))),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:if,
                  s(:send,
                    s(:const, nil, :TkConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__), nil,
                  s(:send, nil, :fail,
                    s(:lvar, :e)))), nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const, nil, :Tk_FontUseTBL), :[]=,
              s(:send,
                s(:array,
                  s(:lvar, :win),
                  s(:lvar, :tag),
                  s(:lvar, :optkey)), :join,
                s(:str, ";")),
              s(:self))),
          s(:self))),
      s(:def, :used,
        s(:args),
        s(:begin,
          s(:lvasgn, :ret,
            s(:array)),
          s(:lvasgn, :table,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:lvasgn, :table,
              s(:send,
                s(:const, nil, :Tk_FontUseTBL), :clone))),
          s(:block,
            s(:send,
              s(:lvar, :table), :each),
            s(:args,
              s(:arg, :key),
              s(:arg, :value)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:self), :==,
                  s(:lvar, :value)), nil,
                s(:next)),
              s(:if,
                s(:send,
                  s(:lvar, :key), :include?,
                  s(:str, ";")),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :win),
                      s(:lvasgn, :tag),
                      s(:lvasgn, :optkey)),
                    s(:send,
                      s(:lvar, :key), :split,
                      s(:str, ";"))),
                  s(:lvasgn, :winobj,
                    s(:send, nil, :tk_tcl2ruby,
                      s(:lvar, :win))),
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:lvar, :winobj), :kind_of?,
                        s(:const, nil, :TkText)),
                      s(:send,
                        s(:lvar, :winobj), :kind_of?,
                        s(:const,
                          s(:const, nil, :Tk), :Text))),
                    s(:if,
                      s(:lvar, :optkey),
                      s(:send,
                        s(:lvar, :ret), :push,
                        s(:array,
                          s(:lvar, :winobj),
                          s(:send,
                            s(:lvar, :winobj), :tagid2obj,
                            s(:lvar, :tag)),
                          s(:lvar, :optkey))),
                      s(:send,
                        s(:lvar, :ret), :push,
                        s(:array,
                          s(:lvar, :winobj),
                          s(:send,
                            s(:lvar, :winobj), :tagid2obj,
                            s(:lvar, :tag))))),
                    s(:if,
                      s(:or,
                        s(:send,
                          s(:lvar, :winobj), :kind_of?,
                          s(:const, nil, :TkCanvas)),
                        s(:send,
                          s(:lvar, :winobj), :kind_of?,
                          s(:const,
                            s(:const, nil, :Tk), :Canvas))),
                      s(:if,
                        s(:send,
                          s(:begin,
                            s(:lvasgn, :tagobj,
                              s(:send,
                                s(:const, nil, :TkcTag), :id2obj,
                                s(:lvar, :winobj),
                                s(:lvar, :tag)))), :kind_of?,
                          s(:const, nil, :TkcTag)),
                        s(:if,
                          s(:lvar, :optkey),
                          s(:send,
                            s(:lvar, :ret), :push,
                            s(:array,
                              s(:lvar, :winobj),
                              s(:lvar, :tagobj),
                              s(:lvar, :optkey))),
                          s(:send,
                            s(:lvar, :ret), :push,
                            s(:array,
                              s(:lvar, :winobj),
                              s(:lvar, :tagobj)))),
                        s(:if,
                          s(:send,
                            s(:begin,
                              s(:lvasgn, :tagobj,
                                s(:send,
                                  s(:const, nil, :TkcItem), :id2obj,
                                  s(:lvar, :winobj),
                                  s(:lvar, :tag)))), :kind_of?,
                            s(:const, nil, :TkcItem)),
                          s(:if,
                            s(:lvar, :optkey),
                            s(:send,
                              s(:lvar, :ret), :push,
                              s(:array,
                                s(:lvar, :winobj),
                                s(:lvar, :tagobj),
                                s(:lvar, :optkey))),
                            s(:send,
                              s(:lvar, :ret), :push,
                              s(:array,
                                s(:lvar, :winobj),
                                s(:lvar, :tagobj)))),
                          s(:if,
                            s(:lvar, :optkey),
                            s(:send,
                              s(:lvar, :ret), :push,
                              s(:array,
                                s(:lvar, :winobj),
                                s(:lvar, :tag),
                                s(:lvar, :optkey))),
                            s(:send,
                              s(:lvar, :ret), :push,
                              s(:array,
                                s(:lvar, :winobj),
                                s(:lvar, :tag)))))),
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :winobj), :kind_of?,
                            s(:const, nil, :TkMenu)),
                          s(:send,
                            s(:lvar, :winobj), :kind_of?,
                            s(:const,
                              s(:const, nil, :Tk), :Menu))),
                        s(:if,
                          s(:lvar, :optkey),
                          s(:send,
                            s(:lvar, :ret), :push,
                            s(:array,
                              s(:lvar, :winobj),
                              s(:lvar, :tag),
                              s(:lvar, :optkey))),
                          s(:send,
                            s(:lvar, :ret), :push,
                            s(:array,
                              s(:lvar, :winobj),
                              s(:lvar, :tag)))),
                        s(:if,
                          s(:lvar, :optkey),
                          s(:send,
                            s(:lvar, :ret), :push,
                            s(:array,
                              s(:lvar, :win),
                              s(:lvar, :tag),
                              s(:lvar, :optkey))),
                          s(:send,
                            s(:lvar, :ret), :push,
                            s(:array,
                              s(:lvar, :win),
                              s(:lvar, :tag)))))))),
                s(:send,
                  s(:lvar, :ret), :push,
                  s(:send, nil, :tk_tcl2ruby,
                    s(:lvar, :key)))))),
          s(:lvar, :ret))),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)),
      s(:def, :to_eval,
        s(:args),
        s(:send, nil, :font)),
      s(:def, :font,
        s(:args),
        s(:ivar, :@compoundfont)),
      s(:alias,
        s(:sym, :font_id),
        s(:sym, :font)),
      s(:alias,
        s(:sym, :name),
        s(:sym, :font)),
      s(:alias,
        s(:sym, :to_s),
        s(:sym, :font)),
      s(:def, :latin_font_id,
        s(:args),
        s(:ivar, :@latinfont)),
      s(:def, :latin_font,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@descendant), :[],
            s(:int, 0)),
          s(:send,
            s(:ivar, :@descendant), :[],
            s(:int, 0)),
          s(:send,
            s(:ivar, :@descendant), :[]=,
            s(:int, 0),
            s(:send,
              s(:const, nil, :DescendantFont), :new,
              s(:self),
              s(:str, "latin"))))),
      s(:alias,
        s(:sym, :latinfont),
        s(:sym, :latin_font)),
      s(:def, :kanji_font_id,
        s(:args),
        s(:ivar, :@kanjifont)),
      s(:def, :kanji_font,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@descendant), :[],
            s(:int, 1)),
          s(:send,
            s(:ivar, :@descendant), :[],
            s(:int, 1)),
          s(:send,
            s(:ivar, :@descendant), :[]=,
            s(:int, 1),
            s(:send,
              s(:const, nil, :DescendantFont), :new,
              s(:self),
              s(:str, "kanji"))))),
      s(:alias,
        s(:sym, :kanjifont),
        s(:sym, :kanji_font)),
      s(:def, :actual,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:send, nil, :actual_core,
          s(:ivar, :@compoundfont),
          s(:nil),
          s(:lvar, :option))),
      s(:def, :actual_hash,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :actual,
            s(:lvar, :option)))),
      s(:def, :actual_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :win), nil,
            s(:lvasgn, :win,
              s(:str, "."))),
          s(:send, nil, :actual_core,
            s(:ivar, :@compoundfont),
            s(:lvar, :win),
            s(:lvar, :option)))),
      s(:def, :actual_hash_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :actual_displayof,
            s(:lvar, :win),
            s(:lvar, :option)))),
      s(:def, :latin_actual,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:send,
            s(:ivar, :@latinfont), :==,
            s(:nil)),
          s(:send, nil, :actual_core,
            s(:ivar, :@compoundfont),
            s(:nil),
            s(:lvar, :option)),
          s(:send, nil, :actual_core,
            s(:ivar, :@latinfont),
            s(:nil),
            s(:lvar, :option)))),
      s(:def, :latin_actual_hash,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :latin_actual,
            s(:lvar, :option)))),
      s(:def, :latin_actual_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :win), nil,
            s(:lvasgn, :win,
              s(:str, "."))),
          s(:if,
            s(:send,
              s(:ivar, :@latinfont), :==,
              s(:nil)),
            s(:send, nil, :actual_core,
              s(:ivar, :@compoundfont),
              s(:lvar, :win),
              s(:lvar, :option)),
            s(:send, nil, :actual_core,
              s(:ivar, :@latinfont),
              s(:lvar, :win),
              s(:lvar, :option))))),
      s(:def, :latin_actual_hash_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :latin_actual_displayof,
            s(:lvar, :win),
            s(:lvar, :option)))),
      s(:def, :kanji_actual,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:send,
            s(:ivar, :@kanjifont), :==,
            s(:nil)),
          s(:send, nil, :actual_core,
            s(:ivar, :@compoundfont),
            s(:nil),
            s(:lvar, :option)),
          s(:if,
            s(:send,
              s(:ivar, :@kanjifont), :!=,
              s(:str, "")),
            s(:send, nil, :actual_core,
              s(:ivar, :@kanjifont),
              s(:nil),
              s(:lvar, :option)),
            s(:send, nil, :actual_core_tk4x,
              s(:nil),
              s(:nil),
              s(:lvar, :option))))),
      s(:def, :kanji_actual_hash,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :kanji_actual,
            s(:lvar, :option)))),
      s(:def, :kanji_actual_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:send,
            s(:ivar, :@kanjifont), :==,
            s(:nil)),
          s(:send, nil, :actual_core,
            s(:ivar, :@compoundfont),
            s(:nil),
            s(:lvar, :option)),
          s(:if,
            s(:send,
              s(:ivar, :@kanjifont), :!=,
              s(:str, "")),
            s(:begin,
              s(:if,
                s(:lvar, :win), nil,
                s(:lvasgn, :win,
                  s(:str, "."))),
              s(:send, nil, :actual_core,
                s(:ivar, :@kanjifont),
                s(:lvar, :win),
                s(:lvar, :option))),
            s(:send, nil, :actual_core_tk4x,
              s(:nil),
              s(:lvar, :win),
              s(:lvar, :option))))),
      s(:def, :kanji_actual_hash_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :kanji_actual_displayof,
            s(:lvar, :win),
            s(:lvar, :option)))),
      s(:def, :[],
        s(:args,
          s(:arg, :slot)),
        s(:send, nil, :configinfo,
          s(:lvar, :slot))),
      s(:def, :[]=,
        s(:args,
          s(:arg, :slot),
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :configure,
            s(:lvar, :slot),
            s(:lvar, :val)),
          s(:lvar, :val))),
      s(:def, :configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :configure_core,
            s(:ivar, :@compoundfont),
            s(:lvar, :slot),
            s(:lvar, :value)),
          s(:self))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :configinfo_core,
          s(:ivar, :@compoundfont),
          s(:lvar, :slot))),
      s(:def, :current_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send, nil, :current_configinfo_core,
          s(:ivar, :@compoundfont),
          s(:lvar, :slot))),
      s(:def, :delete,
        s(:args),
        s(:send, nil, :delete_core)),
      s(:def, :latin_configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:send, nil, :configure_core,
              s(:ivar, :@latinfont),
              s(:lvar, :slot),
              s(:lvar, :value)),
            s(:send, nil, :configure,
              s(:lvar, :slot),
              s(:lvar, :value))),
          s(:self))),
      s(:def, :latin_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:if,
          s(:const, nil, :JAPANIZED_TK),
          s(:send, nil, :configinfo_core,
            s(:ivar, :@latinfont),
            s(:lvar, :slot)),
          s(:send, nil, :configinfo,
            s(:lvar, :slot)))),
      s(:def, :latin_current_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :latin_configinfo,
            s(:lvar, :slot)))),
      s(:def, :kanji_configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@kanjifont), :==,
              s(:nil)),
            s(:send, nil, :configure_core,
              s(:ivar, :@compoundfont),
              s(:lvar, :slot),
              s(:lvar, :value)),
            s(:if,
              s(:send,
                s(:ivar, :@kanjifont), :!=,
                s(:str, "")),
              s(:begin,
                s(:send, nil, :configure_core,
                  s(:ivar, :@kanjifont),
                  s(:lvar, :slot),
                  s(:lvar, :value)),
                s(:send, nil, :configure,
                  s(:hash,
                    s(:pair,
                      s(:str, "size"),
                      s(:send, nil, :configinfo,
                        s(:str, "size")))))),
              s(:send, nil, :configure,
                s(:lvar, :slot),
                s(:lvar, :value)))),
          s(:self))),
      s(:def, :kanji_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:if,
          s(:send,
            s(:ivar, :@kanjifont), :==,
            s(:nil)),
          s(:send, nil, :configure_core,
            s(:ivar, :@compoundfont),
            s(:lvar, :slot)),
          s(:if,
            s(:send,
              s(:ivar, :@kanjifont), :!=,
              s(:str, "")),
            s(:send, nil, :configinfo_core,
              s(:ivar, :@kanjifont),
              s(:lvar, :slot)),
            s(:send, nil, :configinfo,
              s(:lvar, :slot))))),
      s(:def, :kanji_current_configinfo,
        s(:args,
          s(:optarg, :slot,
            s(:nil))),
        s(:send,
          s(:const, nil, :Hash), :[],
          s(:send, nil, :kanji_configinfo,
            s(:lvar, :slot)))),
      s(:def, :replace,
        s(:args,
          s(:arg, :ltn),
          s(:optarg, :knj,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :knj), :==,
              s(:const, nil, :None)),
            s(:lvasgn, :knj,
              s(:lvar, :ltn)), nil),
          s(:send, nil, :latin_replace,
            s(:lvar, :ltn)),
          s(:send, nil, :kanji_replace,
            s(:lvar, :knj)),
          s(:self))),
      s(:def, :latin_replace,
        s(:args,
          s(:arg, :ltn)),
        s(:begin,
          s(:if,
            s(:ivar, :@latinfont),
            s(:begin,
              s(:send, nil, :latin_replace_core,
                s(:lvar, :ltn)),
              s(:send, nil, :reset_pointadjust)),
            s(:begin,
              s(:lvasgn, :latinkeys,
                s(:hash)),
              s(:kwbegin,
                s(:rescue,
                  s(:block,
                    s(:send,
                      s(:send, nil, :actual_core,
                        s(:lvar, :ltn)), :each),
                    s(:args,
                      s(:arg, :key),
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :latinkeys), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :val))),
                  s(:resbody, nil, nil,
                    s(:lvasgn, :latinkeys,
                      s(:hash))), nil)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:ivar, :@compoundfont),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :latinkeys)))),
                  s(:resbody, nil, nil,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:ivar, :@compoundfont),
                      s(:splat,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :latinkeys))))), nil)))),
          s(:self))),
      s(:def, :kanji_replace,
        s(:args,
          s(:arg, :knj)),
        s(:begin,
          s(:if,
            s(:ivar, :@kanjifont), nil,
            s(:return,
              s(:self))),
          s(:send, nil, :kanji_replace_core,
            s(:lvar, :knj)),
          s(:send, nil, :reset_pointadjust),
          s(:self))),
      s(:def, :measure,
        s(:args,
          s(:arg, :text)),
        s(:send, nil, :measure_core,
          s(:ivar, :@compoundfont),
          s(:nil),
          s(:lvar, :text))),
      s(:def, :measure_displayof,
        s(:args,
          s(:arg, :win),
          s(:arg, :text)),
        s(:begin,
          s(:if,
            s(:lvar, :win), nil,
            s(:lvasgn, :win,
              s(:str, "."))),
          s(:send, nil, :measure_core,
            s(:ivar, :@compoundfont),
            s(:lvar, :win),
            s(:lvar, :text)))),
      s(:def, :metrics,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:send, nil, :metrics_core,
          s(:ivar, :@compoundfont),
          s(:nil),
          s(:lvar, :option))),
      s(:def, :metrics_hash,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :metrics,
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send, nil, :metrics,
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:def, :metrics_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :win), nil,
            s(:lvasgn, :win,
              s(:str, "."))),
          s(:send, nil, :metrics_core,
            s(:ivar, :@compoundfont),
            s(:lvar, :win),
            s(:lvar, :option)))),
      s(:def, :metrics_hash_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :metrics_displayof,
                  s(:lvar, :win),
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send, nil, :metrics_displayof,
                s(:lvar, :win),
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:def, :latin_metrics,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:send,
            s(:ivar, :@latinfont), :==,
            s(:nil)),
          s(:send, nil, :metrics_core,
            s(:ivar, :@compoundfont),
            s(:nil),
            s(:lvar, :option)),
          s(:send, nil, :metrics_core,
            s(:ivar, :@latinfont),
            s(:nil),
            s(:lvar, :option)))),
      s(:def, :latin_metrics_hash,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :latin_metrics,
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send, nil, :latin_metrics,
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:def, :latin_metrics_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :win), nil,
            s(:lvasgn, :win,
              s(:str, "."))),
          s(:if,
            s(:send,
              s(:ivar, :@latinfont), :==,
              s(:nil)),
            s(:send, nil, :metrics_core,
              s(:ivar, :@compoundfont),
              s(:lvar, :win),
              s(:lvar, :option)),
            s(:send, nil, :metrics_core,
              s(:ivar, :@latinfont),
              s(:lvar, :win),
              s(:lvar, :option))))),
      s(:def, :latin_metrics_hash_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :latin_metrics_displayof,
                  s(:lvar, :win),
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send, nil, :latin_metrics_displayof,
                s(:lvar, :win),
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:def, :kanji_metrics,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:send,
            s(:ivar, :@latinfont), :==,
            s(:nil)),
          s(:send, nil, :metrics_core,
            s(:ivar, :@compoundfont),
            s(:nil),
            s(:lvar, :option)),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:send, nil, :metrics_core,
              s(:ivar, :@kanjifont),
              s(:nil),
              s(:lvar, :option)),
            s(:send, nil, :metrics_core_tk4x,
              s(:nil),
              s(:nil),
              s(:lvar, :option))))),
      s(:def, :kanji_metrics_hash,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :kanji_metrics,
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send, nil, :kanji_metrics,
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:def, :kanji_metrics_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :win), nil,
            s(:lvasgn, :win,
              s(:str, "."))),
          s(:if,
            s(:send,
              s(:ivar, :@latinfont), :==,
              s(:nil)),
            s(:send, nil, :metrics_core,
              s(:ivar, :@compoundfont),
              s(:lvar, :win),
              s(:lvar, :option)),
            s(:if,
              s(:const, nil, :JAPANIZED_TK),
              s(:send, nil, :metrics_core,
                s(:ivar, :@kanjifont),
                s(:lvar, :win),
                s(:lvar, :option)),
              s(:send, nil, :metrics_core_tk4x,
                s(:nil),
                s(:lvar, :win),
                s(:lvar, :option)))))),
      s(:def, :kanji_metrics_hash_displayof,
        s(:args,
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :kanji_metrics_displayof,
                  s(:lvar, :win),
                  s(:lvar, :option))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :MetricsType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :num_or_str,
                      s(:lvar, :val)))),
                s(:when,
                  s(:str, "b"),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:const, nil, :TkComm), :bool,
                      s(:lvar, :val)))), nil),
              s(:return,
                s(:lvar, :val))), nil),
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:send, nil, :kanji_metrics_displayof,
                s(:lvar, :win),
                s(:lvar, :option)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :h), :keys), :each),
            s(:args,
              s(:arg, :k)),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :MetricsType), :[],
                s(:send,
                  s(:lvar, :k), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :num_or_str,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))),
              s(:when,
                s(:str, "b"),
                s(:send,
                  s(:lvar, :h), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:const, nil, :TkComm), :bool,
                    s(:send,
                      s(:lvar, :h), :[],
                      s(:lvar, :k))))), nil)),
          s(:lvar, :h))),
      s(:def, :reset_pointadjust,
        s(:args),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:and,
                  s(:send,
                    s(:regexp,
                      s(:str, "^8\\..*"),
                      s(:regopt)), :===,
                    s(:const,
                      s(:const, nil, :Tk), :TK_VERSION)),
                  s(:const, nil, :JAPANIZED_TK)),
                s(:send, nil, :configure,
                  s(:hash,
                    s(:pair,
                      s(:str, "pointadjust"),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send, nil, :latin_actual), :assoc,
                              s(:str, "size")), :[],
                            s(:int, 1)), :to_f), :/,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send, nil, :kanji_actual), :assoc,
                              s(:str, "size")), :[],
                            s(:int, 1)), :to_f))))), nil),
              s(:resbody, nil, nil, nil), nil)),
          s(:self))),
      s(:case,
        s(:begin,
          s(:const,
            s(:const, nil, :Tk), :TK_VERSION)),
        s(:when,
          s(:regexp,
            s(:str, "^4\\..*"),
            s(:regopt)),
          s(:begin,
            s(:alias,
              s(:sym, :create_latinfont),
              s(:sym, :create_latinfont_tk4x)),
            s(:alias,
              s(:sym, :create_kanjifont),
              s(:sym, :create_kanjifont_tk4x)),
            s(:alias,
              s(:sym, :create_compoundfont),
              s(:sym, :create_compoundfont_tk4x)))),
        s(:when,
          s(:regexp,
            s(:str, "^8\\.[0-5]"),
            s(:regopt)),
          s(:begin,
            s(:alias,
              s(:sym, :create_latinfont),
              s(:sym, :create_latinfont_tk8x)),
            s(:alias,
              s(:sym, :create_kanjifont),
              s(:sym, :create_kanjifont_tk8x)),
            s(:alias,
              s(:sym, :create_compoundfont),
              s(:sym, :create_compoundfont_tk8x)))),
        s(:begin,
          s(:alias,
            s(:sym, :create_latinfont),
            s(:sym, :create_latinfont_tk8x)),
          s(:alias,
            s(:sym, :create_kanjifont),
            s(:sym, :create_kanjifont_tk8x)),
          s(:alias,
            s(:sym, :create_compoundfont),
            s(:sym, :create_compoundfont_tk8x)))),
      s(:alias,
        s(:sym, :ascii_font),
        s(:sym, :latin_font)),
      s(:alias,
        s(:sym, :asciifont),
        s(:sym, :latinfont)),
      s(:alias,
        s(:sym, :create_asciifont),
        s(:sym, :create_latinfont)),
      s(:alias,
        s(:sym, :ascii_actual),
        s(:sym, :latin_actual)),
      s(:alias,
        s(:sym, :ascii_actual_displayof),
        s(:sym, :latin_actual_displayof)),
      s(:alias,
        s(:sym, :ascii_configure),
        s(:sym, :latin_configure)),
      s(:alias,
        s(:sym, :ascii_configinfo),
        s(:sym, :latin_configinfo)),
      s(:alias,
        s(:sym, :ascii_replace),
        s(:sym, :latin_replace)),
      s(:alias,
        s(:sym, :ascii_metrics),
        s(:sym, :latin_metrics)))),
  s(:module,
    s(:const,
      s(:const, nil, :TkFont), :CoreMethods),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const, nil, :TkCore)),
      s(:send, nil, :private),
      s(:def, :actual_core_tk4x,
        s(:args,
          s(:arg, :font),
          s(:optarg, :win,
            s(:nil)),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:or,
            s(:send,
              s(:lvar, :option), :==,
              s(:str, "pointadjust")),
            s(:send,
              s(:lvar, :option), :==,
              s(:sym, :pointadjust))),
          s(:float, 1.0),
          s(:if,
            s(:lvar, :option),
            s(:case,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :OptionType), :[],
                s(:send,
                  s(:lvar, :option), :to_s)),
              s(:when,
                s(:str, "n"),
                s(:int, 0)),
              s(:when,
                s(:str, "b"),
                s(:false)),
              s(:str, "")),
            s(:array,
              s(:array,
                s(:str, "family"),
                s(:str, "")),
              s(:array,
                s(:str, "size"),
                s(:int, 0)),
              s(:array,
                s(:str, "weight"),
                s(:str, "")),
              s(:array,
                s(:str, "slant"),
                s(:str, "")),
              s(:array,
                s(:str, "underline"),
                s(:false)),
              s(:array,
                s(:str, "overstrike"),
                s(:false)),
              s(:array,
                s(:str, "charset"),
                s(:str, "")),
              s(:array,
                s(:str, "pointadjust"),
                s(:int, 0)))))),
      s(:def, :actual_core_tk8x,
        s(:args,
          s(:arg, :font),
          s(:optarg, :win,
            s(:nil)),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :font), :==,
              s(:str, "")),
            s(:lvasgn, :font,
              s(:str, "{}")), nil),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :option), :==,
                s(:str, "compound")),
              s(:send,
                s(:lvar, :option), :==,
                s(:sym, :compound))),
            s(:str, ""),
            s(:if,
              s(:lvar, :option),
              s(:begin,
                s(:if,
                  s(:lvar, :win),
                  s(:lvasgn, :val,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "actual"),
                      s(:lvar, :font),
                      s(:str, "-displayof"),
                      s(:lvar, :win),
                      s(:dstr,
                        s(:str, "-"),
                        s(:begin,
                          s(:lvar, :option))))),
                  s(:lvasgn, :val,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "actual"),
                      s(:lvar, :font),
                      s(:dstr,
                        s(:str, "-"),
                        s(:begin,
                          s(:lvar, :option)))))),
                s(:case,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkFont), :OptionType), :[],
                    s(:send,
                      s(:lvar, :option), :to_s)),
                  s(:when,
                    s(:str, "n"),
                    s(:send, nil, :num_or_str,
                      s(:lvar, :val))),
                  s(:when,
                    s(:str, "b"),
                    s(:send, nil, :bool,
                      s(:lvar, :val))),
                  s(:lvar, :val))),
              s(:begin,
                s(:lvasgn, :l,
                  s(:send, nil, :tk_split_simplelist,
                    s(:if,
                      s(:lvar, :win),
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "actual"),
                        s(:lvar, :font),
                        s(:str, "-displayof"),
                        s(:lvar, :win)),
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "actual"),
                        s(:lvar, :font))))),
                s(:lvasgn, :r,
                  s(:array)),
                s(:while,
                  s(:lvasgn, :key,
                    s(:send,
                      s(:lvar, :l), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :key), :==,
                      s(:str, "-compound")),
                    s(:send,
                      s(:lvar, :l), :shift),
                    s(:begin,
                      s(:lvasgn, :key,
                        s(:send,
                          s(:lvar, :key), :[],
                          s(:irange,
                            s(:int, 1),
                            s(:int, -1)))),
                      s(:lvasgn, :val,
                        s(:send,
                          s(:lvar, :l), :shift)),
                      s(:case,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkFont), :OptionType), :[],
                          s(:lvar, :key)),
                        s(:when,
                          s(:str, "n"),
                          s(:send,
                            s(:lvar, :r), :push,
                            s(:array,
                              s(:lvar, :key),
                              s(:send, nil, :num_or_str,
                                s(:lvar, :val))))),
                        s(:when,
                          s(:str, "b"),
                          s(:send,
                            s(:lvar, :r), :push,
                            s(:array,
                              s(:lvar, :key),
                              s(:send, nil, :bool,
                                s(:lvar, :val))))),
                        s(:send,
                          s(:lvar, :r), :push,
                          s(:array,
                            s(:lvar, :key),
                            s(:lvar, :val))))))),
                s(:lvar, :r)))))),
      s(:def, :configure_core_tk4x,
        s(:args,
          s(:arg, :font),
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:self)),
      s(:def, :configinfo_core_tk4x,
        s(:args,
          s(:arg, :font),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:const,
            s(:const, nil, :TkComm), :GET_CONFIGINFOwoRES_AS_ARRAY),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :option), :==,
                s(:str, "pointadjust")),
              s(:send,
                s(:lvar, :option), :==,
                s(:sym, :pointadjust))),
            s(:float, 1.0),
            s(:if,
              s(:lvar, :option),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :OptionType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:int, 0)),
                s(:when,
                  s(:str, "b"),
                  s(:false)),
                s(:str, "")),
              s(:array,
                s(:array,
                  s(:str, "family"),
                  s(:str, "")),
                s(:array,
                  s(:str, "size"),
                  s(:int, 0)),
                s(:array,
                  s(:str, "weight"),
                  s(:str, "")),
                s(:array,
                  s(:str, "slant"),
                  s(:str, "")),
                s(:array,
                  s(:str, "underline"),
                  s(:false)),
                s(:array,
                  s(:str, "overstrike"),
                  s(:false)),
                s(:array,
                  s(:str, "charset"),
                  s(:str, "")),
                s(:array,
                  s(:str, "pointadjust"),
                  s(:float, 1.0))))),
          s(:send, nil, :current_configinfo_core_tk4x,
            s(:lvar, :font),
            s(:lvar, :option)))),
      s(:def, :current_configinfo_core_tk4x,
        s(:args,
          s(:arg, :font),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:lvar, :option),
          s(:case,
            s(:send,
              s(:const,
                s(:const, nil, :TkFont), :OptionType), :[],
              s(:send,
                s(:lvar, :option), :to_s)),
            s(:when,
              s(:str, "n"),
              s(:int, 0)),
            s(:when,
              s(:str, "b"),
              s(:false)),
            s(:str, "")),
          s(:hash,
            s(:pair,
              s(:str, "family"),
              s(:str, "")),
            s(:pair,
              s(:str, "size"),
              s(:int, 0)),
            s(:pair,
              s(:str, "weight"),
              s(:str, "")),
            s(:pair,
              s(:str, "slant"),
              s(:str, "")),
            s(:pair,
              s(:str, "underline"),
              s(:false)),
            s(:pair,
              s(:str, "overstrike"),
              s(:false)),
            s(:pair,
              s(:str, "charset"),
              s(:false)),
            s(:pair,
              s(:str, "pointadjust"),
              s(:float, 1.0))))),
      s(:def, :configure_core_tk8x,
        s(:args,
          s(:arg, :font),
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:kwbegin,
              s(:rescue,
                s(:lvasgn, :padjust,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:lvar, :font),
                    s(:str, "-pointadjust"))),
                s(:resbody, nil, nil,
                  s(:lvasgn, :padjust,
                    s(:nil))), nil)),
            s(:lvasgn, :padjust,
              s(:nil))),
          s(:if,
            s(:send,
              s(:lvar, :slot), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:const, nil, :JAPANIZED_TK),
                  s(:begin,
                    s(:or,
                      s(:send,
                        s(:lvar, :slot), :key?,
                        s(:str, "family")),
                      s(:send,
                        s(:lvar, :slot), :key?,
                        s(:sym, :family))))),
                s(:begin,
                  s(:lvasgn, :slot,
                    s(:send, nil, :_symbolkey2str,
                      s(:lvar, :slot))),
                  s(:send, nil, :configure_core_tk8x,
                    s(:lvar, :font),
                    s(:str, "family"),
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "family")))), nil),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:and,
                      s(:and,
                        s(:begin,
                          s(:or,
                            s(:send,
                              s(:lvar, :slot), :key?,
                              s(:str, "size")),
                            s(:send,
                              s(:lvar, :slot), :key?,
                              s(:sym, :size)))),
                        s(:lvar, :padjust)),
                      s(:send,
                        s(:send,
                          s(:lvar, :slot), :key?,
                          s(:str, "pointadjust")), :!)),
                    s(:send,
                      s(:send,
                        s(:lvar, :slot), :key?,
                        s(:sym, :pointadjust)), :!))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:lvar, :font),
                  s(:str, "-pointadjust"),
                  s(:lvar, :padjust),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :slot)))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:lvar, :font),
                  s(:splat,
                    s(:send, nil, :hash_kv,
                      s(:lvar, :slot)))))),
            s(:if,
              s(:and,
                s(:begin,
                  s(:or,
                    s(:send,
                      s(:lvar, :slot), :==,
                      s(:str, "size")),
                    s(:send,
                      s(:lvar, :slot), :==,
                      s(:sym, :size)))),
                s(:send,
                  s(:lvar, :padjust), :!=,
                  s(:nil))),
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "configure"),
                s(:lvar, :font),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :slot))),
                s(:lvar, :value),
                s(:str, "-pointadjust"),
                s(:lvar, :padjust)),
              s(:if,
                s(:and,
                  s(:const, nil, :JAPANIZED_TK),
                  s(:begin,
                    s(:or,
                      s(:send,
                        s(:lvar, :slot), :==,
                        s(:str, "family")),
                      s(:send,
                        s(:lvar, :slot), :==,
                        s(:sym, :family))))),
                s(:begin,
                  s(:kwbegin,
                    s(:rescue,
                      s(:lvasgn, :compound,
                        s(:send, nil, :tk_split_simplelist,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "configure"),
                            s(:lvar, :font),
                            s(:str, "-compound")))),
                      s(:resbody, nil, nil,
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "configure"),
                            s(:lvar, :font),
                            s(:str, "-family"),
                            s(:lvar, :value)),
                          s(:return,
                            s(:self)))), nil)),
                  s(:if,
                    s(:send,
                      s(:lvar, :compound), :==,
                      s(:array)),
                    s(:begin,
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "configure"),
                        s(:lvar, :font),
                        s(:str, "-family"),
                        s(:lvar, :value)),
                      s(:return,
                        s(:self))), nil),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :ltn),
                      s(:lvasgn, :knj)),
                    s(:lvar, :compound)),
                  s(:lvasgn, :lfnt,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:str, "-copy"),
                      s(:lvar, :ltn))),
                  s(:kwbegin,
                    s(:ensure,
                      s(:rescue,
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "configure"),
                            s(:lvar, :lfnt),
                            s(:str, "-family"),
                            s(:lvar, :value)),
                          s(:send, nil, :latin_replace_core_tk8x,
                            s(:lvar, :lfnt))),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :RuntimeError)),
                          s(:lvasgn, :e),
                          s(:if,
                            s(:gvar, :$DEBUG),
                            s(:send, nil, :fail,
                              s(:lvar, :e)), nil)), nil),
                      s(:if,
                        s(:send,
                          s(:lvar, :lfnt), :!=,
                          s(:str, "")),
                        s(:send, nil, :tk_call,
                          s(:str, "font"),
                          s(:str, "delete"),
                          s(:lvar, :lfnt)), nil))),
                  s(:lvasgn, :kfnt,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:str, "-copy"),
                      s(:lvar, :knj))),
                  s(:kwbegin,
                    s(:ensure,
                      s(:rescue,
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "configure"),
                            s(:lvar, :kfnt),
                            s(:str, "-family"),
                            s(:lvar, :value)),
                          s(:send, nil, :kanji_replace_core_tk8x,
                            s(:lvar, :lfnt))),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :RuntimeError)),
                          s(:lvasgn, :e),
                          s(:if,
                            s(:gvar, :$DEBUG),
                            s(:send, nil, :fail,
                              s(:lvar, :e)), nil)), nil),
                      s(:if,
                        s(:send,
                          s(:lvar, :kfnt), :!=,
                          s(:str, "")),
                        s(:send, nil, :tk_call,
                          s(:str, "font"),
                          s(:str, "delete"),
                          s(:lvar, :kfnt)), nil)))),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:lvar, :font),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :slot))),
                  s(:lvar, :value))))),
          s(:self))),
      s(:def, :configinfo_core_tk8x,
        s(:args,
          s(:arg, :font),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:const,
            s(:const, nil, :TkComm), :GET_CONFIGINFOwoRES_AS_ARRAY),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :option), :==,
                s(:str, "compound")),
              s(:send,
                s(:lvar, :option), :==,
                s(:sym, :compound))),
            s(:str, ""),
            s(:if,
              s(:lvar, :option),
              s(:begin,
                s(:lvasgn, :val,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:lvar, :font),
                    s(:dstr,
                      s(:str, "-"),
                      s(:begin,
                        s(:lvar, :option))))),
                s(:case,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkFont), :OptionType), :[],
                    s(:send,
                      s(:lvar, :option), :to_s)),
                  s(:when,
                    s(:str, "n"),
                    s(:send, nil, :num_or_str,
                      s(:lvar, :val))),
                  s(:when,
                    s(:str, "b"),
                    s(:send, nil, :bool,
                      s(:lvar, :val))),
                  s(:lvar, :val))),
              s(:begin,
                s(:lvasgn, :l,
                  s(:send, nil, :tk_split_simplelist,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "configure"),
                      s(:lvar, :font)))),
                s(:lvasgn, :r,
                  s(:array)),
                s(:while,
                  s(:lvasgn, :key,
                    s(:send,
                      s(:lvar, :l), :shift)),
                  s(:if,
                    s(:send,
                      s(:lvar, :key), :==,
                      s(:str, "-compound")),
                    s(:send,
                      s(:lvar, :l), :shift),
                    s(:begin,
                      s(:lvasgn, :key,
                        s(:send,
                          s(:lvar, :key), :[],
                          s(:irange,
                            s(:int, 1),
                            s(:int, -1)))),
                      s(:lvasgn, :val,
                        s(:send,
                          s(:lvar, :l), :shift)),
                      s(:case,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkFont), :OptionType), :[],
                          s(:lvar, :key)),
                        s(:when,
                          s(:str, "n"),
                          s(:send,
                            s(:lvar, :r), :push,
                            s(:array,
                              s(:lvar, :key),
                              s(:send, nil, :num_or_str,
                                s(:lvar, :val))))),
                        s(:when,
                          s(:str, "b"),
                          s(:send,
                            s(:lvar, :r), :push,
                            s(:array,
                              s(:lvar, :key),
                              s(:send, nil, :bool,
                                s(:lvar, :val))))),
                        s(:send,
                          s(:lvar, :r), :push,
                          s(:array,
                            s(:lvar, :key),
                            s(:lvar, :val))))))),
                s(:lvar, :r)))),
          s(:send, nil, :current_configinfo_core_tk8x,
            s(:lvar, :font),
            s(:lvar, :option)))),
      s(:def, :current_configinfo_core_tk8x,
        s(:args,
          s(:arg, :font),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:send,
            s(:lvar, :option), :==,
            s(:str, "compound")),
          s(:str, ""),
          s(:if,
            s(:lvar, :option),
            s(:begin,
              s(:lvasgn, :val,
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:lvar, :font),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :option))))),
              s(:case,
                s(:send,
                  s(:const,
                    s(:const, nil, :TkFont), :OptionType), :[],
                  s(:send,
                    s(:lvar, :option), :to_s)),
                s(:when,
                  s(:str, "n"),
                  s(:send, nil, :num_or_str,
                    s(:lvar, :val))),
                s(:when,
                  s(:str, "b"),
                  s(:send, nil, :bool,
                    s(:lvar, :val))),
                s(:lvar, :val))),
            s(:begin,
              s(:lvasgn, :l,
                s(:send, nil, :tk_split_simplelist,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:lvar, :font)))),
              s(:lvasgn, :h,
                s(:hash)),
              s(:while,
                s(:lvasgn, :key,
                  s(:send,
                    s(:lvar, :l), :shift)),
                s(:if,
                  s(:send,
                    s(:lvar, :key), :==,
                    s(:str, "-compound")),
                  s(:send,
                    s(:lvar, :l), :shift),
                  s(:begin,
                    s(:lvasgn, :key,
                      s(:send,
                        s(:lvar, :key), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1)))),
                    s(:lvasgn, :val,
                      s(:send,
                        s(:lvar, :l), :shift)),
                    s(:case,
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkFont), :OptionType), :[],
                        s(:lvar, :key)),
                      s(:when,
                        s(:str, "n"),
                        s(:send,
                          s(:lvar, :h), :[]=,
                          s(:lvar, :key),
                          s(:send, nil, :num_or_str,
                            s(:lvar, :val)))),
                      s(:when,
                        s(:str, "b"),
                        s(:send,
                          s(:lvar, :h), :[]=,
                          s(:lvar, :key),
                          s(:send, nil, :bool,
                            s(:lvar, :val)))),
                      s(:send,
                        s(:lvar, :h), :[]=,
                        s(:lvar, :key),
                        s(:lvar, :val)))))),
              s(:lvar, :h))))),
      s(:def, :delete_core_tk4x,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontNameTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const,
                s(:const, nil, :TkFont), :Tk_FontNameTBL), :delete,
              s(:ivar, :@id))),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :delete_if),
              s(:args,
                s(:arg, :key),
                s(:arg, :value)),
              s(:send,
                s(:lvar, :value), :==,
                s(:self)))))),
      s(:def, :delete_core_tk8x,
        s(:args),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:ivar, :@latinfont),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "delete"),
                  s(:ivar, :@latinfont)), nil),
              s(:resbody, nil, nil, nil), nil)),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:ivar, :@kanjifont),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "delete"),
                  s(:ivar, :@kanjifont)), nil),
              s(:resbody, nil, nil, nil), nil)),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:ivar, :@compoundfont),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "delete"),
                  s(:ivar, :@compoundfont)), nil),
              s(:resbody, nil, nil, nil), nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontNameTBL), :mutex), :synchronize),
            s(:args),
            s(:send,
              s(:const,
                s(:const, nil, :TkFont), :Tk_FontNameTBL), :delete,
              s(:ivar, :@id))),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :delete_if),
              s(:args,
                s(:arg, :key),
                s(:arg, :value)),
              s(:send,
                s(:lvar, :value), :==,
                s(:self)))))),
      s(:def, :latin_replace_core_tk4x,
        s(:args,
          s(:arg, :ltn)),
        s(:begin,
          s(:send, nil, :create_latinfont_tk4x,
            s(:lvar, :ltn)),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:send,
              s(:ivar, :@compoundfont), :[]=,
              s(:int, 0),
              s(:array,
                s(:ivar, :@latinfont))), nil),
          s(:send,
            s(:ivar, :@fontslot), :[]=,
            s(:str, "font"),
            s(:ivar, :@latinfont)),
          s(:lvasgn, :table,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:lvasgn, :table,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :clone))),
          s(:block,
            s(:send,
              s(:lvar, :table), :each),
            s(:args,
              s(:arg, :w),
              s(:arg, :fobj)),
            s(:if,
              s(:send,
                s(:self), :==,
                s(:lvar, :fobj)),
              s(:kwbegin,
                s(:rescue,
                  s(:if,
                    s(:send,
                      s(:lvar, :w), :include?,
                      s(:str, ";")),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :win),
                          s(:lvasgn, :tag),
                          s(:lvasgn, :optkey)),
                        s(:send,
                          s(:lvar, :w), :split,
                          s(:str, ";"))),
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :optkey), :==,
                            s(:nil)),
                          s(:send,
                            s(:lvar, :optkey), :==,
                            s(:str, ""))),
                        s(:lvasgn, :optkey,
                          s(:str, "font")), nil),
                      s(:lvasgn, :winobj,
                        s(:send, nil, :tk_tcl2ruby,
                          s(:lvar, :win))),
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :winobj), :kind_of?,
                            s(:const, nil, :TkText)),
                          s(:send,
                            s(:lvar, :winobj), :kind_of?,
                            s(:const,
                              s(:const, nil, :Tk), :Text))),
                        s(:send, nil, :tk_call,
                          s(:lvar, :win),
                          s(:str, "tag"),
                          s(:str, "configure"),
                          s(:lvar, :tag),
                          s(:dstr,
                            s(:str, "-"),
                            s(:begin,
                              s(:lvar, :optkey))),
                          s(:ivar, :@latinfont)),
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:lvar, :winobj), :kind_of?,
                              s(:const, nil, :TkCanvas)),
                            s(:send,
                              s(:lvar, :winobj), :kind_of?,
                              s(:const,
                                s(:const, nil, :Tk), :Canvas))),
                          s(:send, nil, :tk_call,
                            s(:lvar, :win),
                            s(:str, "itemconfigure"),
                            s(:lvar, :tag),
                            s(:dstr,
                              s(:str, "-"),
                              s(:begin,
                                s(:lvar, :optkey))),
                            s(:ivar, :@latinfont)),
                          s(:if,
                            s(:or,
                              s(:send,
                                s(:lvar, :winobj), :kind_of?,
                                s(:const, nil, :TkMenu)),
                              s(:send,
                                s(:lvar, :winobj), :kind_of?,
                                s(:const,
                                  s(:const, nil, :Tk), :Menu))),
                            s(:send, nil, :tk_call,
                              s(:lvar, :win),
                              s(:str, "entryconfigure"),
                              s(:lvar, :tag),
                              s(:dstr,
                                s(:str, "-"),
                                s(:begin,
                                  s(:lvar, :optkey))),
                              s(:ivar, :@latinfont)),
                            s(:send, nil, :raise,
                              s(:const, nil, :RuntimeError),
                              s(:str, "unknown widget type")))))),
                    s(:send, nil, :tk_call,
                      s(:lvar, :w),
                      s(:str, "configure"),
                      s(:str, "-font"),
                      s(:ivar, :@latinfont))),
                  s(:resbody, nil, nil,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkFont), :Tk_FontUseTBL), :mutex), :synchronize),
                      s(:args),
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkFont), :Tk_FontUseTBL), :delete,
                        s(:lvar, :w)))), nil)), nil)),
          s(:self))),
      s(:def, :kanji_replace_core_tk4x,
        s(:args,
          s(:arg, :knj)),
        s(:begin,
          s(:if,
            s(:const, nil, :JAPANIZED_TK), nil,
            s(:return,
              s(:self))),
          s(:send, nil, :create_kanjifont_tk4x,
            s(:lvar, :knj)),
          s(:send,
            s(:ivar, :@compoundfont), :[]=,
            s(:int, 1),
            s(:array,
              s(:ivar, :@kanjifont))),
          s(:send,
            s(:ivar, :@fontslot), :[]=,
            s(:str, "kanjifont"),
            s(:ivar, :@kanjifont)),
          s(:lvasgn, :table,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :mutex), :synchronize),
            s(:args),
            s(:lvasgn, :table,
              s(:send,
                s(:const,
                  s(:const, nil, :TkFont), :Tk_FontUseTBL), :clone))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :table), :dup), :each),
            s(:args,
              s(:arg, :w),
              s(:arg, :fobj)),
            s(:if,
              s(:send,
                s(:self), :==,
                s(:lvar, :fobj)),
              s(:kwbegin,
                s(:rescue,
                  s(:if,
                    s(:send,
                      s(:lvar, :w), :include?,
                      s(:str, ";")),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :win),
                          s(:lvasgn, :tag),
                          s(:lvasgn, :optkey)),
                        s(:send,
                          s(:lvar, :w), :split,
                          s(:str, ";"))),
                      s(:if,
                        s(:lvar, :optkey), nil,
                        s(:lvasgn, :optkey,
                          s(:str, "kanjifont"))),
                      s(:lvasgn, :winobj,
                        s(:send, nil, :tk_tcl2ruby,
                          s(:lvar, :win))),
                      s(:if,
                        s(:or,
                          s(:send,
                            s(:lvar, :winobj), :kind_of?,
                            s(:const, nil, :TkText)),
                          s(:send,
                            s(:lvar, :winobj), :kind_of?,
                            s(:const,
                              s(:const, nil, :Tk), :Text))),
                        s(:send, nil, :tk_call,
                          s(:lvar, :win),
                          s(:str, "tag"),
                          s(:str, "configure"),
                          s(:lvar, :tag),
                          s(:dstr,
                            s(:str, "-"),
                            s(:begin,
                              s(:lvar, :optkey))),
                          s(:ivar, :@kanjifont)),
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:lvar, :winobj), :kind_of?,
                              s(:const, nil, :TkCanvas)),
                            s(:send,
                              s(:lvar, :winobj), :kind_of?,
                              s(:const,
                                s(:const, nil, :Tk), :Canvas))),
                          s(:send, nil, :tk_call,
                            s(:lvar, :win),
                            s(:str, "itemconfigure"),
                            s(:lvar, :tag),
                            s(:dstr,
                              s(:str, "-"),
                              s(:begin,
                                s(:lvar, :optkey))),
                            s(:ivar, :@kanjifont)),
                          s(:if,
                            s(:or,
                              s(:send,
                                s(:lvar, :winobj), :kind_of?,
                                s(:const, nil, :TkMenu)),
                              s(:send,
                                s(:lvar, :winobj), :kind_of?,
                                s(:const,
                                  s(:const, nil, :Tk), :Menu))),
                            s(:send, nil, :tk_call,
                              s(:lvar, :win),
                              s(:str, "entryconfigure"),
                              s(:lvar, :tag),
                              s(:dstr,
                                s(:str, "-"),
                                s(:begin,
                                  s(:lvar, :optkey))),
                              s(:ivar, :@latinfont)),
                            s(:send, nil, :raise,
                              s(:const, nil, :RuntimeError),
                              s(:str, "unknown widget type")))))),
                    s(:send, nil, :tk_call,
                      s(:lvar, :w),
                      s(:str, "configure"),
                      s(:str, "-kanjifont"),
                      s(:ivar, :@kanjifont))),
                  s(:resbody, nil, nil,
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Tk_FontUseTBL), :mutex), :synchronize),
                      s(:args),
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkFont), :Tk_FontUseTBL), :delete,
                        s(:lvar, :w)))), nil)), nil)),
          s(:self))),
      s(:def, :latin_replace_core_tk8x,
        s(:args,
          s(:arg, :ltn)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :ltn), :==,
              s(:str, "")),
            s(:lvasgn, :ltn,
              s(:str, "{}")), nil),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:begin,
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "delete"),
                    s(:str, "@font_tmp")),
                  s(:resbody, nil, nil, nil), nil)),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :fnt_bup,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:str, "@font_tmp"),
                      s(:str, "-copy"),
                      s(:ivar, :@latinfont))),
                  s(:resbody, nil, nil,
                    s(:lvasgn, :fnt_bup,
                      s(:const,
                        s(:const, nil, :TkFont), :DEFAULT_LATIN_FONT_NAME))), nil))), nil),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "delete"),
                s(:ivar, :@latinfont)),
              s(:resbody, nil, nil, nil), nil)),
          s(:send, nil, :create_latinfont,
            s(:lvar, :ltn)),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:self), :configinfo)),
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "delete"),
                s(:ivar, :@compoundfont)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont),
                    s(:str, "-compound"),
                    s(:array,
                      s(:ivar, :@latinfont),
                      s(:ivar, :@kanjifont)),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :RuntimeError)),
                    s(:lvasgn, :e),
                    s(:begin,
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "delete"),
                        s(:ivar, :@latinfont)),
                      s(:if,
                        s(:and,
                          s(:lvar, :fnt_bup),
                          s(:send,
                            s(:lvar, :fnt_bup), :!=,
                            s(:str, ""))),
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "create"),
                            s(:ivar, :@latinfont),
                            s(:str, "-copy"),
                            s(:lvar, :fnt_bup)),
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "create"),
                            s(:ivar, :@compoundfont),
                            s(:str, "-compound"),
                            s(:array,
                              s(:ivar, :@latinfont),
                              s(:ivar, :@kanjifont)),
                            s(:splat,
                              s(:send, nil, :hash_kv,
                                s(:lvar, :keys)))),
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "delete"),
                            s(:lvar, :fnt_bup))),
                        s(:send, nil, :fail,
                          s(:lvar, :e))))), nil))),
            s(:begin,
              s(:lvasgn, :latinkeys,
                s(:hash)),
              s(:kwbegin,
                s(:rescue,
                  s(:block,
                    s(:send,
                      s(:send, nil, :actual_core,
                        s(:ivar, :@latinfont)), :each),
                    s(:args,
                      s(:arg, :key),
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :latinkeys), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :val))),
                  s(:resbody, nil, nil,
                    s(:lvasgn, :latinkeys,
                      s(:hash))), nil)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "configure"),
                    s(:ivar, :@compoundfont),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :latinkeys)))),
                  s(:resbody, nil, nil,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:ivar, :@compoundfont),
                      s(:splat,
                        s(:send, nil, :hash_kv,
                          s(:lvar, :latinkeys))))), nil)))),
          s(:self))),
      s(:def, :kanji_replace_core_tk8x,
        s(:args,
          s(:arg, :knj)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :knj), :==,
              s(:str, "")),
            s(:lvasgn, :knj,
              s(:str, "{}")), nil),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:begin,
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "delete"),
                    s(:str, "@font_tmp")),
                  s(:resbody, nil, nil, nil), nil)),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :fnt_bup,
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "create"),
                      s(:str, "@font_tmp"),
                      s(:str, "-copy"),
                      s(:ivar, :@kanjifont))),
                  s(:resbody, nil, nil,
                    s(:lvasgn, :fnt_bup,
                      s(:const,
                        s(:const, nil, :TkFont), :DEFAULT_KANJI_FONT_NAME))), nil))), nil),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "delete"),
                s(:ivar, :@kanjifont)),
              s(:resbody, nil, nil, nil), nil)),
          s(:send, nil, :create_kanjifont,
            s(:lvar, :knj)),
          s(:if,
            s(:const, nil, :JAPANIZED_TK),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send,
                  s(:self), :configinfo)),
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "delete"),
                s(:ivar, :@compoundfont)),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont),
                    s(:str, "-compound"),
                    s(:array,
                      s(:ivar, :@latinfont),
                      s(:ivar, :@kanjifont)),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :RuntimeError)),
                    s(:lvasgn, :e),
                    s(:begin,
                      s(:send, nil, :tk_call,
                        s(:str, "font"),
                        s(:str, "delete"),
                        s(:ivar, :@kanjifont)),
                      s(:if,
                        s(:and,
                          s(:lvar, :fnt_bup),
                          s(:send,
                            s(:lvar, :fnt_bup), :!=,
                            s(:str, ""))),
                        s(:begin,
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "create"),
                            s(:ivar, :@kanjifont),
                            s(:str, "-copy"),
                            s(:lvar, :fnt_bup)),
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "create"),
                            s(:ivar, :@compoundfont),
                            s(:str, "-compound"),
                            s(:array,
                              s(:ivar, :@latinfont),
                              s(:ivar, :@kanjifont)),
                            s(:splat,
                              s(:send, nil, :hash_kv,
                                s(:lvar, :keys)))),
                          s(:send, nil, :tk_call,
                            s(:str, "font"),
                            s(:str, "delete"),
                            s(:lvar, :fnt_bup))),
                        s(:send, nil, :fail,
                          s(:lvar, :e))))), nil))), nil),
          s(:self))),
      s(:def, :measure_core_tk4x,
        s(:args,
          s(:arg, :font),
          s(:arg, :win),
          s(:arg, :text)),
        s(:int, 0)),
      s(:def, :measure_core_tk8x,
        s(:args,
          s(:arg, :font),
          s(:arg, :win),
          s(:arg, :text)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :font), :==,
              s(:str, "")),
            s(:lvasgn, :font,
              s(:str, "{}")), nil),
          s(:if,
            s(:lvar, :win),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "measure"),
                s(:lvar, :font),
                s(:str, "-displayof"),
                s(:lvar, :win),
                s(:lvar, :text))),
            s(:send, nil, :number,
              s(:send, nil, :tk_call,
                s(:str, "font"),
                s(:str, "measure"),
                s(:lvar, :font),
                s(:lvar, :text)))))),
      s(:def, :metrics_core_tk4x,
        s(:args,
          s(:arg, :font),
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:lvar, :option),
          s(:str, ""),
          s(:array,
            s(:array,
              s(:str, "ascent"),
              s(:array)),
            s(:array,
              s(:str, "descent"),
              s(:array)),
            s(:array,
              s(:str, "linespace"),
              s(:array)),
            s(:array,
              s(:str, "fixed"),
              s(:array))))),
      s(:def, :metrics_core_tk8x,
        s(:args,
          s(:arg, :font),
          s(:arg, :win),
          s(:optarg, :option,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :font), :==,
              s(:str, "")),
            s(:lvasgn, :font,
              s(:str, "{}")), nil),
          s(:if,
            s(:lvar, :option),
            s(:if,
              s(:lvar, :win),
              s(:send, nil, :number,
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "metrics"),
                  s(:lvar, :font),
                  s(:str, "-displayof"),
                  s(:lvar, :win),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :option))))),
              s(:send, nil, :number,
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "metrics"),
                  s(:lvar, :font),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :option)))))),
            s(:begin,
              s(:lvasgn, :l,
                s(:send, nil, :tk_split_list,
                  s(:if,
                    s(:lvar, :win),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "metrics"),
                      s(:lvar, :font),
                      s(:str, "-displayof"),
                      s(:lvar, :win)),
                    s(:send, nil, :tk_call,
                      s(:str, "font"),
                      s(:str, "metrics"),
                      s(:lvar, :font))))),
              s(:lvasgn, :r,
                s(:array)),
              s(:while,
                s(:lvasgn, :key,
                  s(:send,
                    s(:lvar, :l), :shift)),
                s(:send,
                  s(:lvar, :r), :push,
                  s(:array,
                    s(:send,
                      s(:lvar, :key), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1))),
                    s(:send,
                      s(:send,
                        s(:lvar, :l), :shift), :to_i)))),
              s(:lvar, :r))))),
      s(:case,
        s(:begin,
          s(:const,
            s(:const, nil, :Tk), :TK_VERSION)),
        s(:when,
          s(:regexp,
            s(:str, "^4\\..*"),
            s(:regopt)),
          s(:begin,
            s(:alias,
              s(:sym, :actual_core),
              s(:sym, :actual_core_tk4x)),
            s(:alias,
              s(:sym, :configure_core),
              s(:sym, :configure_core_tk4x)),
            s(:alias,
              s(:sym, :configinfo_core),
              s(:sym, :configinfo_core_tk4x)),
            s(:alias,
              s(:sym, :current_configinfo_core),
              s(:sym, :current_configinfo_core_tk4x)),
            s(:alias,
              s(:sym, :delete_core),
              s(:sym, :delete_core_tk4x)),
            s(:alias,
              s(:sym, :latin_replace_core),
              s(:sym, :latin_replace_core_tk4x)),
            s(:alias,
              s(:sym, :kanji_replace_core),
              s(:sym, :kanji_replace_core_tk4x)),
            s(:alias,
              s(:sym, :measure_core),
              s(:sym, :measure_core_tk4x)),
            s(:alias,
              s(:sym, :metrics_core),
              s(:sym, :metrics_core_tk4x)))),
        s(:when,
          s(:regexp,
            s(:str, "^8\\.[0-9]"),
            s(:regopt)),
          s(:begin,
            s(:alias,
              s(:sym, :actual_core),
              s(:sym, :actual_core_tk8x)),
            s(:alias,
              s(:sym, :configure_core),
              s(:sym, :configure_core_tk8x)),
            s(:alias,
              s(:sym, :configinfo_core),
              s(:sym, :configinfo_core_tk8x)),
            s(:alias,
              s(:sym, :current_configinfo_core),
              s(:sym, :current_configinfo_core_tk8x)),
            s(:alias,
              s(:sym, :delete_core),
              s(:sym, :delete_core_tk8x)),
            s(:alias,
              s(:sym, :latin_replace_core),
              s(:sym, :latin_replace_core_tk8x)),
            s(:alias,
              s(:sym, :kanji_replace_core),
              s(:sym, :kanji_replace_core_tk8x)),
            s(:alias,
              s(:sym, :measure_core),
              s(:sym, :measure_core_tk8x)),
            s(:alias,
              s(:sym, :metrics_core),
              s(:sym, :metrics_core_tk8x)))),
        s(:begin,
          s(:alias,
            s(:sym, :actual_core),
            s(:sym, :actual_core_tk8x)),
          s(:alias,
            s(:sym, :configure_core),
            s(:sym, :configure_core_tk8x)),
          s(:alias,
            s(:sym, :configinfo_core),
            s(:sym, :configinfo_core_tk8x)),
          s(:alias,
            s(:sym, :current_configinfo_core),
            s(:sym, :current_configinfo_core_tk8x)),
          s(:alias,
            s(:sym, :delete_core),
            s(:sym, :delete_core_tk8x)),
          s(:alias,
            s(:sym, :latin_replace_core),
            s(:sym, :latin_replace_core_tk8x)),
          s(:alias,
            s(:sym, :kanji_replace_core),
            s(:sym, :kanji_replace_core_tk8x)),
          s(:alias,
            s(:sym, :measure_core),
            s(:sym, :measure_core_tk8x)),
          s(:alias,
            s(:sym, :metrics_core),
            s(:sym, :metrics_core_tk8x)))))),
  s(:class,
    s(:const, nil, :TkFont), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :TkFont), :CoreMethods)),
      s(:send, nil, :extend,
        s(:const,
          s(:const, nil, :TkFont), :CoreMethods)))),
  s(:class,
    s(:const, nil, :TkNamedFont),
    s(:const, nil, :TkFont),
    s(:begin,
      s(:defs,
        s(:const, nil, :TkNamedFont), :find,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:lvar, :name), :to_s)),
          s(:if,
            s(:begin,
              s(:lvasgn, :obj,
                s(:send,
                  s(:const, nil, :Tk_FontNameTBL), :[],
                  s(:lvar, :name)))), nil,
            s(:if,
              s(:send,
                s(:const, nil, :TkFont), :is_system_font?,
                s(:lvar, :name)),
              s(:lvasgn, :obj,
                s(:send,
                  s(:self), :new,
                  s(:lvar, :name))), nil)),
          s(:lvar, :obj))),
      s(:defs,
        s(:const, nil, :TkNamedFont), :new,
        s(:args,
          s(:arg, :name),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:lvar, :name), :to_s)),
          s(:lvasgn, :obj,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_FontNameTBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:const, nil, :Tk_FontNameTBL), :[],
                    s(:lvar, :name)))), nil,
              s(:block,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :obj,
                      s(:send,
                        s(:self), :allocate))), :instance_eval),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@id,
                    s(:ivasgn, :@compoundfont,
                      s(:send,
                        s(:lvar, :name), :to_s))),
                  s(:ivasgn, :@latinfont,
                    s(:nil)),
                  s(:ivasgn, :@kanjifont,
                    s(:nil)),
                  s(:ivasgn, :@descendant,
                    s(:array,
                      s(:self),
                      s(:self))),
                  s(:send,
                    s(:const, nil, :Tk_FontNameTBL), :[]=,
                    s(:ivar, :@id),
                    s(:self)))))),
          s(:block,
            s(:send,
              s(:lvar, :obj), :instance_eval),
            s(:args),
            s(:send, nil, :initialize,
              s(:lvar, :name),
              s(:lvar, :keys))),
          s(:lvar, :obj))),
      s(:send, nil, :private),
      s(:def, :initialize,
        s(:args,
          s(:arg, :name),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@id,
            s(:ivasgn, :@compoundfont,
              s(:send,
                s(:lvar, :name), :to_s))),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:lvar, :keys),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:ivar, :@compoundfont),
                  s(:lvar, :keys)),
                s(:send, nil, :tk_call,
                  s(:str, "font"),
                  s(:str, "configure"),
                  s(:ivar, :@compoundfont))),
              s(:resbody, nil, nil,
                s(:if,
                  s(:lvar, :keys),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont),
                    s(:lvar, :keys)),
                  s(:send, nil, :tk_call,
                    s(:str, "font"),
                    s(:str, "create"),
                    s(:ivar, :@compoundfont)))), nil)))),
      s(:def, :create_latinfont,
        s(:args,
          s(:arg, :fnt)), nil),
      s(:def, :create_kanjifont,
        s(:args,
          s(:arg, :fnt)), nil),
      s(:def, :create_compoundfont,
        s(:args,
          s(:arg, :ltn),
          s(:arg, :knj),
          s(:arg, :keys)), nil),
      s(:send, nil, :public),
      s(:def, :latin_font_id,
        s(:args),
        s(:ivar, :@compoundfont)),
      s(:def, :kanji_font_id,
        s(:args),
        s(:ivar, :@compoundfont)))),
  s(:if,
    s(:or,
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :>,
        s(:int, 8)),
      s(:begin,
        s(:and,
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :==,
            s(:int, 8)),
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TCL_MINOR_VERSION), :>=,
            s(:int, 5))))),
    s(:send,
      s(:const,
        s(:const, nil, :TkFont), :SYSTEM_FONT_NAMES), :add,
      s(:array,
        s(:str, "TkDefaultFont"),
        s(:str, "TkTextFont"),
        s(:str, "TkFixedFont"),
        s(:str, "TkMenuFont"),
        s(:str, "TkHeadingFont"),
        s(:str, "TkCaptionFont"),
        s(:str, "TkSmallCaptionFont"),
        s(:str, "TkIconFont"),
        s(:str, "TkTooltipFont"))), nil),
  s(:send,
    s(:const,
      s(:const, nil, :TkFont), :SYSTEM_FONT_NAMES), :add,
    s(:array,
      s(:str, "ansifixed"),
      s(:str, "ansi"),
      s(:str, "device"),
      s(:str, "oemfixed"),
      s(:str, "systemfixed"),
      s(:str, "system"))),
  s(:send,
    s(:const,
      s(:const, nil, :TkFont), :SYSTEM_FONT_NAMES), :add,
    s(:array,
      s(:str, "system"),
      s(:str, "application"))),
  s(:if,
    s(:or,
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :>,
        s(:int, 8)),
      s(:begin,
        s(:and,
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :==,
            s(:int, 8)),
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TCL_MINOR_VERSION), :>=,
            s(:int, 5))))),
    s(:send,
      s(:const,
        s(:const, nil, :TkFont), :SYSTEM_FONT_NAMES), :add,
      s(:array,
        s(:str, "menu"))), nil),
  s(:if,
    s(:or,
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :>,
        s(:int, 8)),
      s(:begin,
        s(:and,
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :==,
            s(:int, 8)),
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TCL_MINOR_VERSION), :>=,
            s(:int, 5))))),
    s(:send,
      s(:const,
        s(:const, nil, :TkFont), :SYSTEM_FONT_NAMES), :add,
      s(:array,
        s(:str, "systemSystemFont"),
        s(:str, "systemEmphasizedSystemFont"),
        s(:str, "systemSmallSystemFont"),
        s(:str, "systemSmallEmphasizedSystemFont"),
        s(:str, "systemApplicationFont"),
        s(:str, "systemLabelFont"),
        s(:str, "systemViewsFont"),
        s(:str, "systemMenuTitleFont"),
        s(:str, "systemMenuItemFont"),
        s(:str, "systemMenuItemMarkFont"),
        s(:str, "systemMenuItemCmdKeyFont"),
        s(:str, "systemWindowTitleFont"),
        s(:str, "systemPushButtonFont"),
        s(:str, "systemUtilityWindowTitleFont"),
        s(:str, "systemAlertHeaderFont"),
        s(:str, "systemToolbarFont"),
        s(:str, "systemMiniSystemFont"),
        s(:str, "systemDetailSystemFont"),
        s(:str, "systemDetailEmphasizedSystemFont"))), nil),
  s(:class,
    s(:const, nil, :TkFont), nil,
    s(:send, nil, :autoload,
      s(:sym, :Chooser),
      s(:str, "tk/fontchooser"))))
