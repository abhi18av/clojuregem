s(:begin,
  s(:module,
    s(:const, nil, :TkWinfo), nil),
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const, nil, :TkWinfo),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const, nil, :Tk)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "winfo"), :freeze)), :freeze)),
      s(:defs,
        s(:const, nil, :TkWinfo), :atom,
        s(:args,
          s(:arg, :name),
          s(:optarg, :win,
            s(:nil))),
        s(:if,
          s(:lvar, :win),
          s(:send, nil, :number,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "atom"),
              s(:str, "-displayof"),
              s(:lvar, :win),
              s(:send, nil, :_get_eval_enc_str,
                s(:lvar, :name)))),
          s(:send, nil, :number,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "atom"),
              s(:send, nil, :_get_eval_enc_str,
                s(:lvar, :name)))))),
      s(:def, :winfo_atom,
        s(:args,
          s(:arg, :name)),
        s(:send,
          s(:const, nil, :TkWinfo), :atom,
          s(:lvar, :name),
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :atomname,
        s(:args,
          s(:arg, :id),
          s(:optarg, :win,
            s(:nil))),
        s(:if,
          s(:lvar, :win),
          s(:send, nil, :_fromUTF8,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "atomname"),
              s(:str, "-displayof"),
              s(:lvar, :win),
              s(:lvar, :id))),
          s(:send, nil, :_fromUTF8,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "atomname"),
              s(:lvar, :id))))),
      s(:def, :winfo_atomname,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:const, nil, :TkWinfo), :atomname,
          s(:lvar, :id),
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :cells,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "cells"),
            s(:lvar, :win)))),
      s(:def, :winfo_cells,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :cells,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :children,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "children"),
            s(:lvar, :win)))),
      s(:def, :winfo_children,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :children,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :classname,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "class"),
          s(:lvar, :win))),
      s(:def, :winfo_classname,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :classname,
          s(:self))),
      s(:alias,
        s(:sym, :winfo_class),
        s(:sym, :winfo_classname)),
      s(:defs,
        s(:const, nil, :TkWinfo), :colormapfull,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "colormapfull"),
            s(:lvar, :win)))),
      s(:def, :winfo_colormapfull,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :colormapfull,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :containing,
        s(:args,
          s(:arg, :rootX),
          s(:arg, :rootY),
          s(:optarg, :win,
            s(:nil))),
        s(:if,
          s(:lvar, :win),
          s(:send, nil, :window,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "containing"),
              s(:str, "-displayof"),
              s(:lvar, :win),
              s(:lvar, :rootX),
              s(:lvar, :rootY))),
          s(:send, nil, :window,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "containing"),
              s(:lvar, :rootX),
              s(:lvar, :rootY))))),
      s(:def, :winfo_containing,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send,
          s(:const, nil, :TkWinfo), :containing,
          s(:lvar, :x),
          s(:lvar, :y),
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :depth,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "depth"),
            s(:lvar, :win)))),
      s(:def, :winfo_depth,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :depth,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :exist?,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "exists"),
            s(:lvar, :win)))),
      s(:def, :winfo_exist?,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :exist?,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :fpixels,
        s(:args,
          s(:arg, :win),
          s(:arg, :dist)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "fpixels"),
            s(:lvar, :win),
            s(:lvar, :dist)))),
      s(:def, :winfo_fpixels,
        s(:args,
          s(:arg, :dist)),
        s(:send,
          s(:const, nil, :TkWinfo), :fpixels,
          s(:self),
          s(:lvar, :dist))),
      s(:defs,
        s(:const, nil, :TkWinfo), :geometry,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "geometry"),
          s(:lvar, :win))),
      s(:def, :winfo_geometry,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :geometry,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :height,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "height"),
            s(:lvar, :win)))),
      s(:def, :winfo_height,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :height,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :id,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "id"),
          s(:lvar, :win))),
      s(:def, :winfo_id,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :id,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :interps,
        s(:args,
          s(:optarg, :win,
            s(:nil))),
        s(:if,
          s(:lvar, :win),
          s(:send, nil, :tk_split_simplelist,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "interps"),
              s(:str, "-displayof"),
              s(:lvar, :win)),
            s(:false),
            s(:true)),
          s(:send, nil, :tk_split_simplelist,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "interps")),
            s(:false),
            s(:true)))),
      s(:def, :winfo_interps,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :interps,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :mapped?,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "ismapped"),
            s(:lvar, :win)))),
      s(:def, :winfo_mapped?,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :mapped?,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :manager,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "manager"),
          s(:lvar, :win))),
      s(:def, :winfo_manager,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :manager,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :appname,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "winfo"),
          s(:str, "name"),
          s(:lvar, :win))),
      s(:def, :winfo_appname,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :appname,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :parent,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :window,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "parent"),
            s(:lvar, :win)))),
      s(:def, :winfo_parent,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :parent,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :widget,
        s(:args,
          s(:arg, :id),
          s(:optarg, :win,
            s(:nil))),
        s(:if,
          s(:lvar, :win),
          s(:send, nil, :window,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "pathname"),
              s(:str, "-displayof"),
              s(:lvar, :win),
              s(:lvar, :id))),
          s(:send, nil, :window,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "pathname"),
              s(:lvar, :id))))),
      s(:def, :winfo_widget,
        s(:args,
          s(:arg, :id)),
        s(:send,
          s(:const, nil, :TkWinfo), :widget,
          s(:lvar, :id),
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :pixels,
        s(:args,
          s(:arg, :win),
          s(:arg, :dist)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "pixels"),
            s(:lvar, :win),
            s(:lvar, :dist)))),
      s(:def, :winfo_pixels,
        s(:args,
          s(:arg, :dist)),
        s(:send,
          s(:const, nil, :TkWinfo), :pixels,
          s(:self),
          s(:lvar, :dist))),
      s(:defs,
        s(:const, nil, :TkWinfo), :reqheight,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "reqheight"),
            s(:lvar, :win)))),
      s(:def, :winfo_reqheight,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :reqheight,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :reqwidth,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "reqwidth"),
            s(:lvar, :win)))),
      s(:def, :winfo_reqwidth,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :reqwidth,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :rgb,
        s(:args,
          s(:arg, :win),
          s(:arg, :color)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "rgb"),
            s(:lvar, :win),
            s(:lvar, :color)))),
      s(:def, :winfo_rgb,
        s(:args,
          s(:arg, :color)),
        s(:send,
          s(:const, nil, :TkWinfo), :rgb,
          s(:self),
          s(:lvar, :color))),
      s(:defs,
        s(:const, nil, :TkWinfo), :rootx,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "rootx"),
            s(:lvar, :win)))),
      s(:def, :winfo_rootx,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :rootx,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :rooty,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "rooty"),
            s(:lvar, :win)))),
      s(:def, :winfo_rooty,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :rooty,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screen,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "winfo"),
          s(:str, "screen"),
          s(:lvar, :win))),
      s(:def, :winfo_screen,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screen,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screencells,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "screencells"),
            s(:lvar, :win)))),
      s(:def, :winfo_screencells,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screencells,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screendepth,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "screendepth"),
            s(:lvar, :win)))),
      s(:def, :winfo_screendepth,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screendepth,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screenheight,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "screenheight"),
            s(:lvar, :win)))),
      s(:def, :winfo_screenheight,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screenheight,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screenmmheight,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "screenmmheight"),
            s(:lvar, :win)))),
      s(:def, :winfo_screenmmheight,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screenmmheight,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screenmmwidth,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "screenmmwidth"),
            s(:lvar, :win)))),
      s(:def, :winfo_screenmmwidth,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screenmmwidth,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screenvisual,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "screenvisual"),
          s(:lvar, :win))),
      s(:def, :winfo_screenvisual,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screenvisual,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :screenwidth,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "screenwidth"),
            s(:lvar, :win)))),
      s(:def, :winfo_screenwidth,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :screenwidth,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :server,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call,
          s(:str, "winfo"),
          s(:str, "server"),
          s(:lvar, :win))),
      s(:def, :winfo_server,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :server,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :toplevel,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :window,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "toplevel"),
            s(:lvar, :win)))),
      s(:def, :winfo_toplevel,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :toplevel,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :visual,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "visual"),
          s(:lvar, :win))),
      s(:def, :winfo_visual,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :visual,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :visualid,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "winfo"),
          s(:str, "visualid"),
          s(:lvar, :win))),
      s(:def, :winfo_visualid,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :visualid,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :visualsavailable,
        s(:args,
          s(:arg, :win),
          s(:optarg, :includeids,
            s(:false))),
        s(:if,
          s(:lvar, :includeids),
          s(:send, nil, :list,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "visualsavailable"),
              s(:lvar, :win),
              s(:str, "includeids"))),
          s(:send, nil, :list,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "winfo"),
              s(:str, "visualsavailable"),
              s(:lvar, :win))))),
      s(:def, :winfo_visualsavailable,
        s(:args,
          s(:optarg, :includeids,
            s(:false))),
        s(:send,
          s(:const, nil, :TkWinfo), :visualsavailable,
          s(:self),
          s(:lvar, :includeids))),
      s(:defs,
        s(:const, nil, :TkWinfo), :vrootheight,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "vrootheight"),
            s(:lvar, :win)))),
      s(:def, :winfo_vrootheight,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :vrootheight,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :vrootwidth,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "vrootwidth"),
            s(:lvar, :win)))),
      s(:def, :winfo_vrootwidth,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :vrootwidth,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :vrootx,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "vrootx"),
            s(:lvar, :win)))),
      s(:def, :winfo_vrootx,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :vrootx,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :vrooty,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "vrooty"),
            s(:lvar, :win)))),
      s(:def, :winfo_vrooty,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :vrooty,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :width,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "width"),
            s(:lvar, :win)))),
      s(:def, :winfo_width,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :width,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :x,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "x"),
            s(:lvar, :win)))),
      s(:def, :winfo_x,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :x,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :y,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "y"),
            s(:lvar, :win)))),
      s(:def, :winfo_y,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :y,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :viewable,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :bool,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "viewable"),
            s(:lvar, :win)))),
      s(:def, :winfo_viewable,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :viewable,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :pointerx,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "pointerx"),
            s(:lvar, :win)))),
      s(:def, :winfo_pointerx,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :pointerx,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :pointery,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :number,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "pointery"),
            s(:lvar, :win)))),
      s(:def, :winfo_pointery,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :pointery,
          s(:self))),
      s(:defs,
        s(:const, nil, :TkWinfo), :pointerxy,
        s(:args,
          s(:arg, :win)),
        s(:send, nil, :list,
          s(:send, nil, :tk_call_without_enc,
            s(:str, "winfo"),
            s(:str, "pointerxy"),
            s(:lvar, :win)))),
      s(:def, :winfo_pointerxy,
        s(:args),
        s(:send,
          s(:const, nil, :TkWinfo), :pointerxy,
          s(:self))))))
