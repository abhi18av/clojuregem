s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/wm")),
  s(:send, nil, :require,
    s(:str, "tk/menuspec")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Toplevel),
    s(:const, nil, :TkWindow),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Wm)),
      s(:send, nil, :include,
        s(:const, nil, :TkMenuSpec)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "toplevel"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Toplevel"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__boolval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "container"))),
      s(:send, nil, :private,
        s(:sym, :__boolval_optkeys)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "screen"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :__val2ruby_optkeys,
        s(:args),
        s(:send,
          s(:super), :update,
          s(:hash,
            s(:pair,
              s(:str, "menu"),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :v)),
                s(:send, nil, :window,
                  s(:lvar, :v))))))),
      s(:send, nil, :private,
        s(:sym, :__val2ruby_optkeys)),
      s(:def, :__methodcall_optkeys,
        s(:args),
        s(:const, nil, :TOPLEVEL_METHODCALL_OPTKEYS)),
      s(:send, nil, :private,
        s(:sym, :__methodcall_optkeys)),
      s(:def, :_wm_command_option_chk,
        s(:args,
          s(:arg, :keys)),
        s(:begin,
          s(:if,
            s(:lvar, :keys), nil,
            s(:lvasgn, :keys,
              s(:hash))),
          s(:lvasgn, :new_keys,
            s(:hash)),
          s(:lvasgn, :wm_cmds,
            s(:hash)),
          s(:lvasgn, :conf_methods,
            s(:send, nil, :_symbolkey2str,
              s(:send, nil, :__methodcall_optkeys))),
          s(:block,
            s(:send,
              s(:lvar, :keys), :each),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:if,
              s(:send,
                s(:lvar, :conf_methods), :key?,
                s(:lvar, :k)),
              s(:send,
                s(:lvar, :wm_cmds), :[]=,
                s(:send,
                  s(:lvar, :conf_methods), :[],
                  s(:lvar, :k)),
                s(:lvar, :v)),
              s(:if,
                s(:send,
                  s(:const, nil, :Wm), :method_defined?,
                  s(:lvar, :k)),
                s(:case,
                  s(:lvar, :k),
                  s(:when,
                    s(:str, "screen"),
                    s(:str, "class"),
                    s(:str, "colormap"),
                    s(:str, "container"),
                    s(:str, "use"),
                    s(:str, "visual"),
                    s(:send,
                      s(:lvar, :new_keys), :[]=,
                      s(:lvar, :k),
                      s(:lvar, :v))),
                  s(:case,
                    s(:send,
                      s(:send,
                        s(:self), :method,
                        s(:lvar, :k)), :arity),
                    s(:when,
                      s(:int, -1),
                      s(:int, 1),
                      s(:send,
                        s(:lvar, :wm_cmds), :[]=,
                        s(:lvar, :k),
                        s(:lvar, :v))),
                    s(:send,
                      s(:lvar, :new_keys), :[]=,
                      s(:lvar, :k),
                      s(:lvar, :v)))),
                s(:send,
                  s(:lvar, :new_keys), :[]=,
                  s(:lvar, :k),
                  s(:lvar, :v))))),
          s(:array,
            s(:lvar, :new_keys),
            s(:lvar, :wm_cmds)))),
      s(:send, nil, :private,
        s(:sym, :_wm_command_option_chk)),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :parent,
            s(:nil)),
          s(:optarg, :screen,
            s(:nil)),
          s(:optarg, :classname,
            s(:nil)),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :my_class_name,
            s(:nil)),
          s(:if,
            s(:send,
              s(:send,
                s(:self), :class), :<,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:begin,
              s(:lvasgn, :my_class_name,
                s(:send,
                  s(:send,
                    s(:self), :class), :name)),
              s(:if,
                s(:send,
                  s(:lvar, :my_class_name), :==,
                  s(:str, "")),
                s(:lvasgn, :my_class_name,
                  s(:nil)), nil)), nil),
          s(:if,
            s(:send,
              s(:lvar, :parent), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :parent))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "classname")),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "class"),
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "classname"))), nil),
              s(:ivasgn, :@classname,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "class"))),
              s(:ivasgn, :@colormap,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "colormap"))),
              s(:ivasgn, :@container,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "container"))),
              s(:ivasgn, :@screen,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "screen"))),
              s(:ivasgn, :@use,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "use"))),
              s(:ivasgn, :@visual,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "visual"))),
              s(:if,
                s(:and,
                  s(:send,
                    s(:ivar, :@classname), :!),
                  s(:lvar, :my_class_name)),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "class"),
                  s(:ivasgn, :@classname,
                    s(:lvar, :my_class_name))), nil),
              s(:if,
                s(:send,
                  s(:ivar, :@classname), :kind_of?,
                  s(:const, nil, :TkBindTag)),
                s(:begin,
                  s(:ivasgn, :@db_class,
                    s(:ivar, :@classname)),
                  s(:send,
                    s(:lvar, :keys), :[]=,
                    s(:str, "class"),
                    s(:ivasgn, :@classname,
                      s(:send,
                        s(:ivar, :@classname), :id)))),
                s(:if,
                  s(:ivar, :@classname),
                  s(:begin,
                    s(:ivasgn, :@db_class,
                      s(:send,
                        s(:const, nil, :TkDatabaseClass), :new,
                        s(:ivar, :@classname))),
                    s(:send,
                      s(:lvar, :keys), :[]=,
                      s(:str, "class"),
                      s(:ivar, :@classname))),
                  s(:begin,
                    s(:ivasgn, :@db_class,
                      s(:send,
                        s(:self), :class)),
                    s(:ivasgn, :@classname,
                      s(:const,
                        s(:ivar, :@db_class), :WidgetClassName))))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :keys),
                  s(:lvasgn, :cmds)),
                s(:send, nil, :_wm_command_option_chk,
                  s(:lvar, :keys))),
              s(:super,
                s(:lvar, :keys)),
              s(:block,
                s(:send,
                  s(:lvar, :cmds), :each),
                s(:args,
                  s(:arg, :k),
                  s(:arg, :v)),
                s(:if,
                  s(:send,
                    s(:lvar, :v), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:send,
                    s(:self), :__send__,
                    s(:lvar, :k),
                    s(:splat,
                      s(:lvar, :v))),
                  s(:send,
                    s(:self), :__send__,
                    s(:lvar, :k),
                    s(:lvar, :v)))),
              s(:return)), nil),
          s(:if,
            s(:send,
              s(:lvar, :screen), :kind_of?,
              s(:const, nil, :Hash)),
            s(:lvasgn, :keys,
              s(:lvar, :screen)),
            s(:begin,
              s(:ivasgn, :@screen,
                s(:lvar, :screen)),
              s(:if,
                s(:send,
                  s(:lvar, :classname), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:lvasgn, :keys,
                  s(:lvar, :classname)),
                s(:ivasgn, :@classname,
                  s(:lvar, :classname))))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :keys))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "classname")),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "class"),
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "classname"))), nil),
              s(:if,
                s(:ivar, :@classname), nil,
                s(:ivasgn, :@classname,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:str, "class")))),
              s(:ivasgn, :@colormap,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "colormap"))),
              s(:ivasgn, :@container,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "container"))),
              s(:if,
                s(:ivar, :@screen), nil,
                s(:ivasgn, :@screen,
                  s(:send,
                    s(:lvar, :keys), :[],
                    s(:str, "screen")))),
              s(:ivasgn, :@use,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "use"))),
              s(:ivasgn, :@visual,
                s(:send,
                  s(:lvar, :keys), :[],
                  s(:str, "visual")))),
            s(:lvasgn, :keys,
              s(:hash))),
          s(:if,
            s(:and,
              s(:send,
                s(:ivar, :@classname), :!),
              s(:lvar, :my_class_name)),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "class"),
              s(:ivasgn, :@classname,
                s(:lvar, :my_class_name))), nil),
          s(:if,
            s(:send,
              s(:ivar, :@classname), :kind_of?,
              s(:const, nil, :TkBindTag)),
            s(:begin,
              s(:ivasgn, :@db_class,
                s(:ivar, :@classname)),
              s(:send,
                s(:lvar, :keys), :[]=,
                s(:str, "class"),
                s(:ivasgn, :@classname,
                  s(:send,
                    s(:ivar, :@classname), :id)))),
            s(:if,
              s(:ivar, :@classname),
              s(:begin,
                s(:ivasgn, :@db_class,
                  s(:send,
                    s(:const, nil, :TkDatabaseClass), :new,
                    s(:ivar, :@classname))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "class"),
                  s(:ivar, :@classname))),
              s(:begin,
                s(:ivasgn, :@db_class,
                  s(:send,
                    s(:self), :class)),
                s(:ivasgn, :@classname,
                  s(:const,
                    s(:ivar, :@db_class), :WidgetClassName))))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :keys),
              s(:lvasgn, :cmds)),
            s(:send, nil, :_wm_command_option_chk,
              s(:lvar, :keys))),
          s(:super,
            s(:lvar, :parent),
            s(:lvar, :keys)),
          s(:block,
            s(:send,
              s(:lvar, :cmds), :each),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:if,
              s(:send,
                s(:lvar, :v), :kind_of?,
                s(:const, nil, :Array)),
              s(:send,
                s(:self), :send,
                s(:lvar, :k),
                s(:splat,
                  s(:lvar, :v))),
              s(:send,
                s(:self), :send,
                s(:lvar, :k),
                s(:lvar, :v)))))),
      s(:def, :specific_class,
        s(:args),
        s(:ivar, :@classname)),
      s(:def, :add_menu,
        s(:args,
          s(:arg, :menu_info),
          s(:optarg, :tearoff,
            s(:false)),
          s(:optarg, :opts,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :tearoff), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :opts,
                s(:lvar, :tearoff)),
              s(:lvasgn, :tearoff,
                s(:false))), nil),
          s(:send, nil, :_create_menubutton,
            s(:self),
            s(:lvar, :menu_info),
            s(:lvar, :tearoff),
            s(:lvar, :opts)))),
      s(:def, :add_menubar,
        s(:args,
          s(:arg, :menu_spec),
          s(:optarg, :tearoff,
            s(:false)),
          s(:optarg, :opts,
            s(:nil))),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :menu_spec), :each),
            s(:args,
              s(:arg, :info)),
            s(:send, nil, :add_menu,
              s(:lvar, :info),
              s(:lvar, :tearoff),
              s(:lvar, :opts))),
          s(:send,
            s(:self), :menu))),
      s(:defs,
        s(:self), :database_class,
        s(:args),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:self),
          s(:send,
            s(:const, nil, :TkDatabaseClass), :new,
            s(:send,
              s(:self), :name)))),
      s(:defs,
        s(:self), :database_classname,
        s(:args),
        s(:send,
          s(:send,
            s(:self), :database_class), :name)),
      s(:defs,
        s(:self), :bind,
        s(:args,
          s(:restarg, :args),
          s(:blockarg, :b)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bind,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))))),
      s(:defs,
        s(:self), :bind_append,
        s(:args,
          s(:restarg, :args),
          s(:blockarg, :b)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bind_append,
            s(:splat,
              s(:lvar, :args)),
            s(:block_pass,
              s(:lvar, :b))))),
      s(:defs,
        s(:self), :bind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bind_remove,
            s(:splat,
              s(:lvar, :args))))),
      s(:defs,
        s(:self), :bindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:or,
            s(:send,
              s(:self), :==,
              s(:send,
                s(:const, nil, :WidgetClassNames), :[],
                s(:const, nil, :WidgetClassName))),
            s(:send,
              s(:send,
                s(:self), :name), :==,
              s(:str, ""))),
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:send,
            s(:send,
              s(:const, nil, :TkDatabaseClass), :new,
              s(:send,
                s(:self), :name)), :bindinfo,
            s(:splat,
              s(:lvar, :args))))))),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/toplevel.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :Toplevel),
    s(:sym, :TkToplevel)))
