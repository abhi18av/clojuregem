s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :WinDDE), nil),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/winpkg.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :WinDDE),
    s(:sym, :TkWinDDE)),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :WinDDE),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const,
          s(:const, nil, :Tk), :WinDDE)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "dde"), :freeze)), :freeze)),
      s(:casgn, nil, :PACKAGE_NAME,
        s(:send,
          s(:str, "dde"), :freeze)),
      s(:defs,
        s(:self), :package_name,
        s(:args),
        s(:const, nil, :PACKAGE_NAME)),
      s(:if,
        s(:send,
          s(:self), :const_defined?,
          s(:sym, :FORCE_VERSION)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "package"),
          s(:str, "require"),
          s(:str, "dde"),
          s(:const, nil, :FORCE_VERSION)),
        s(:send, nil, :tk_call_without_enc,
          s(:str, "package"),
          s(:str, "require"),
          s(:str, "dde"))),
      s(:def, :servername,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :args), :size), :==,
            s(:int, 0)),
          s(:send, nil, :tk_call,
            s(:str, "dde"),
            s(:str, "servername")),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:send,
                    s(:lvar, :args), :pop))),
              s(:lvasgn, :force,
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "force"))),
                  s(:str, "-force"),
                  s(:const, nil, :None))),
              s(:lvasgn, :exact,
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :keys), :delete,
                      s(:str, "exact"))),
                  s(:str, "-exact"),
                  s(:const, nil, :None))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :keys), :size), :==,
                  s(:int, 0)),
                s(:send, nil, :tk_call,
                  s(:str, "dde"),
                  s(:str, "servername"),
                  s(:lvar, :force),
                  s(:lvar, :exact)),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :args), :size), :==,
                    s(:int, 0)),
                  s(:send, nil, :tk_call,
                    s(:str, "dde"),
                    s(:str, "servername"),
                    s(:lvar, :force),
                    s(:lvar, :exact),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys)))),
                  s(:send, nil, :tk_call,
                    s(:str, "dde"),
                    s(:str, "servername"),
                    s(:lvar, :force),
                    s(:lvar, :exact),
                    s(:splat,
                      s(:begin,
                        s(:send,
                          s(:begin,
                            s(:send,
                              s(:send, nil, :hash_kv,
                                s(:lvar, :keys)), :<<,
                              s(:str, "--"))), :+,
                          s(:lvar, :args)))))))),
            s(:send, nil, :tk_call,
              s(:str, "dde"),
              s(:str, "servername"),
              s(:splat,
                s(:lvar, :args)))))),
      s(:def, :execute,
        s(:args,
          s(:arg, :service),
          s(:arg, :topic),
          s(:arg, :data)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "execute"),
          s(:lvar, :service),
          s(:lvar, :topic),
          s(:lvar, :data))),
      s(:def, :async_execute,
        s(:args,
          s(:arg, :service),
          s(:arg, :topic),
          s(:arg, :data)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "-async"),
          s(:str, "execute"),
          s(:lvar, :service),
          s(:lvar, :topic),
          s(:lvar, :data))),
      s(:def, :poke,
        s(:args,
          s(:arg, :service),
          s(:arg, :topic),
          s(:arg, :item),
          s(:arg, :data)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "poke"),
          s(:lvar, :service),
          s(:lvar, :topic),
          s(:lvar, :item),
          s(:lvar, :data))),
      s(:def, :request,
        s(:args,
          s(:arg, :service),
          s(:arg, :topic),
          s(:arg, :item)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "request"),
          s(:lvar, :service),
          s(:lvar, :topic),
          s(:lvar, :item))),
      s(:def, :binary_request,
        s(:args,
          s(:arg, :service),
          s(:arg, :topic),
          s(:arg, :item)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "request"),
          s(:str, "-binary"),
          s(:lvar, :service),
          s(:lvar, :topic),
          s(:lvar, :item))),
      s(:def, :services,
        s(:args,
          s(:arg, :service),
          s(:arg, :topic)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "services"),
          s(:lvar, :service),
          s(:lvar, :topic))),
      s(:def, :eval,
        s(:args,
          s(:arg, :topic),
          s(:arg, :cmd),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "eval"),
          s(:lvar, :topic),
          s(:lvar, :cmd),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :async_eval,
        s(:args,
          s(:arg, :topic),
          s(:arg, :cmd),
          s(:restarg, :args)),
        s(:send, nil, :tk_call,
          s(:str, "dde"),
          s(:str, "eval"),
          s(:send,
            s(:send, nil, :async), :-@),
          s(:lvar, :topic),
          s(:lvar, :cmd),
          s(:splat,
            s(:lvar, :args)))),
      s(:send, nil, :module_function,
        s(:sym, :servername),
        s(:sym, :execute),
        s(:sym, :async_execute),
        s(:sym, :poke),
        s(:sym, :request),
        s(:sym, :services),
        s(:sym, :eval)))),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :WinRegistry), nil),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/winpkg.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :WinRegistry),
    s(:sym, :TkWinRegistry)),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :WinRegistry),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const,
          s(:const, nil, :Tk), :WinRegistry)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "registry"), :freeze)), :freeze)),
      s(:if,
        s(:send,
          s(:self), :const_defined?,
          s(:sym, :FORCE_VERSION)),
        s(:send, nil, :tk_call,
          s(:str, "package"),
          s(:str, "require"),
          s(:str, "registry"),
          s(:const, nil, :FORCE_VERSION)),
        s(:send, nil, :tk_call,
          s(:str, "package"),
          s(:str, "require"),
          s(:str, "registry"))),
      s(:def, :broadcast,
        s(:args,
          s(:arg, :keynam),
          s(:optarg, :timeout,
            s(:nil))),
        s(:if,
          s(:lvar, :timeout),
          s(:send, nil, :tk_call,
            s(:str, "registry"),
            s(:str, "broadcast"),
            s(:lvar, :keynam),
            s(:str, "-timeout"),
            s(:lvar, :timeout)),
          s(:send, nil, :tk_call,
            s(:str, "registry"),
            s(:str, "broadcast"),
            s(:lvar, :keynam)))),
      s(:def, :delete,
        s(:args,
          s(:arg, :keynam),
          s(:optarg, :valnam,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "registry"),
          s(:str, "delete"),
          s(:lvar, :keynam),
          s(:lvar, :valnam))),
      s(:def, :get,
        s(:args,
          s(:arg, :keynam),
          s(:arg, :valnam)),
        s(:send, nil, :tk_call,
          s(:str, "registry"),
          s(:str, "get"),
          s(:lvar, :keynam),
          s(:lvar, :valnam))),
      s(:def, :keys,
        s(:args,
          s(:arg, :keynam),
          s(:optarg, :pattern,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :lst,
            s(:send, nil, :tk_split_simplelist,
              s(:send, nil, :tk_call,
                s(:str, "registry"),
                s(:str, "keys"),
                s(:lvar, :keynam)))),
          s(:if,
            s(:lvar, :pattern),
            s(:block,
              s(:send,
                s(:lvar, :lst), :find_all),
              s(:args,
                s(:arg, :key)),
              s(:send,
                s(:lvar, :key), :=~,
                s(:lvar, :pattern))),
            s(:lvar, :lst)))),
      s(:def, :set,
        s(:args,
          s(:arg, :keynam),
          s(:optarg, :valnam,
            s(:const, nil, :None)),
          s(:optarg, :data,
            s(:const, nil, :None)),
          s(:optarg, :dattype,
            s(:const, nil, :None))),
        s(:send, nil, :tk_call,
          s(:str, "registry"),
          s(:str, "set"),
          s(:lvar, :keynam),
          s(:lvar, :valnam),
          s(:lvar, :data),
          s(:lvar, :dattype))),
      s(:def, :type,
        s(:args,
          s(:arg, :keynam),
          s(:arg, :valnam)),
        s(:send, nil, :tk_call,
          s(:str, "registry"),
          s(:str, "type"),
          s(:lvar, :keynam),
          s(:lvar, :valnam))),
      s(:def, :values,
        s(:args,
          s(:arg, :keynam),
          s(:optarg, :pattern,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :lst,
            s(:send, nil, :tk_split_simplelist,
              s(:send, nil, :tk_call,
                s(:str, "registry"),
                s(:str, "values"),
                s(:lvar, :keynam)))),
          s(:if,
            s(:lvar, :pattern),
            s(:block,
              s(:send,
                s(:lvar, :lst), :find_all),
              s(:args,
                s(:arg, :val)),
              s(:send,
                s(:lvar, :val), :=~,
                s(:lvar, :pattern))),
            s(:lvar, :lst)))),
      s(:send, nil, :module_function,
        s(:sym, :delete),
        s(:sym, :get),
        s(:sym, :keys),
        s(:sym, :set),
        s(:sym, :type),
        s(:sym, :values)))))
