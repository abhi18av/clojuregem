s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const, nil, :TkVirtualEvent),
    s(:const, nil, :TkObject),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :Tk)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "event"), :freeze)), :freeze)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :TkVirtualEventID,
              s(:array,
                s(:send,
                  s(:str, "VirtEvent"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:casgn, nil, :TkVirtualEventTBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :TkVirtualEventTBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :TkVirtualEventTBL), :clear))),
      s(:class,
        s(:const, nil, :PreDefVirtEvent),
        s(:self),
        s(:begin,
          s(:defs,
            s(:self), :new,
            s(:args,
              s(:arg, :event),
              s(:restarg, :sequences)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :event), :=~,
                  s(:regexp,
                    s(:str, "^<(<.*>)>$"),
                    s(:regopt))),
                s(:lvasgn, :event,
                  s(:nth_ref, 1)),
                s(:if,
                  s(:send,
                    s(:lvar, :event), :!~,
                    s(:regexp,
                      s(:str, "^<.*>$"),
                      s(:regopt))),
                  s(:lvasgn, :event,
                    s(:send,
                      s(:send,
                        s(:str, "<"), :+,
                        s(:lvar, :event)), :+,
                      s(:str, ">"))), nil)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkVirtualEvent), :TkVirtualEventTBL), :mutex), :synchronize),
                s(:args),
                s(:if,
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkVirtualEvent), :TkVirtualEventTBL), :has_key?,
                    s(:lvar, :event)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :TkVirtualEvent), :TkVirtualEventTBL), :[],
                    s(:lvar, :event)),
                  s(:block,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :obj,
                          s(:send,
                            s(:self), :allocate))), :instance_eval),
                    s(:args),
                    s(:begin,
                      s(:send, nil, :initialize,
                        s(:lvar, :event),
                        s(:splat,
                          s(:lvar, :sequences))),
                      s(:send,
                        s(:const,
                          s(:const, nil, :TkVirtualEvent), :TkVirtualEventTBL), :[]=,
                        s(:ivar, :@id),
                        s(:self)))))))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :event),
              s(:restarg, :sequences)),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:lvar, :event))),
              s(:send, nil, :_add_sequences,
                s(:lvar, :sequences)))))),
      s(:defs,
        s(:const, nil, :TkVirtualEvent), :getobj,
        s(:args,
          s(:arg, :event)),
        s(:begin,
          s(:lvasgn, :obj,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TkVirtualEventTBL), :mutex), :synchronize),
            s(:args),
            s(:lvasgn, :obj,
              s(:send,
                s(:const, nil, :TkVirtualEventTBL), :[],
                s(:lvar, :event)))),
          s(:if,
            s(:lvar, :obj),
            s(:lvar, :obj),
            s(:if,
              s(:send,
                s(:send, nil, :tk_call_without_enc,
                  s(:str, "event"),
                  s(:str, "info")), :index,
                s(:dstr,
                  s(:str, "<"),
                  s(:begin,
                    s(:lvar, :event)),
                  s(:str, ">"))),
              s(:send,
                s(:const, nil, :PreDefVirtEvent), :new,
                s(:lvar, :event)),
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:dstr,
                  s(:str, "undefined virtual event '<"),
                  s(:begin,
                    s(:lvar, :event)),
                  s(:str, ">'"))))))),
      s(:defs,
        s(:const, nil, :TkVirtualEvent), :info,
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "event"),
                s(:str, "info")), :split,
              s(:regexp,
                s(:str, "\\s+"),
                s(:regopt))), :collect!),
          s(:args,
            s(:arg, :seq)),
          s(:send,
            s(:const, nil, :TkVirtualEvent), :getobj,
            s(:send,
              s(:lvar, :seq), :[],
              s(:irange,
                s(:int, 1),
                s(:int, -2)))))),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :sequences)),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :TkVirtualEventID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:send,
                    s(:send,
                      s(:str, "<"), :+,
                      s(:send,
                        s(:const, nil, :TkVirtualEventID), :join,
                        s(:send,
                          s(:const,
                            s(:const, nil, :TkCore), :INTERP), :_ip_id_))), :+,
                    s(:str, ">")))),
              s(:send,
                s(:send,
                  s(:const, nil, :TkVirtualEventID), :[],
                  s(:int, 1)), :succ!))),
          s(:send, nil, :_add_sequences,
            s(:lvar, :sequences)))),
      s(:def, :_add_sequences,
        s(:args,
          s(:arg, :seq_ary)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :seq_ary), :empty?), nil,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "event"),
              s(:str, "add"),
              s(:dstr,
                s(:str, "<"),
                s(:begin,
                  s(:ivar, :@id)),
                s(:str, ">")),
              s(:splat,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:lvar, :seq_ary), :collect),
                    s(:args,
                      s(:arg, :seq)),
                    s(:dstr,
                      s(:str, "<"),
                      s(:begin,
                        s(:send, nil, :tk_event_sequence,
                          s(:lvar, :seq))),
                      s(:str, ">"))))))),
          s(:self))),
      s(:send, nil, :private,
        s(:sym, :_add_sequences)),
      s(:def, :add,
        s(:args,
          s(:restarg, :sequences)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :sequences), :!=,
              s(:array)),
            s(:begin,
              s(:send, nil, :_add_sequences,
                s(:lvar, :sequences)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkVirtualEventTBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TkVirtualEventTBL), :[]=,
                  s(:ivar, :@id),
                  s(:self)))), nil),
          s(:self))),
      s(:def, :delete,
        s(:args,
          s(:restarg, :sequences)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :sequences), :empty?),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "event"),
                s(:str, "delete"),
                s(:dstr,
                  s(:str, "<"),
                  s(:begin,
                    s(:ivar, :@id)),
                  s(:str, ">"))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkVirtualEventTBL), :mutex), :synchronize),
                s(:args),
                s(:send,
                  s(:const, nil, :TkVirtualEventTBL), :delete,
                  s(:ivar, :@id)))),
            s(:begin,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "event"),
                s(:str, "delete"),
                s(:dstr,
                  s(:str, "<"),
                  s(:begin,
                    s(:ivar, :@id)),
                  s(:str, ">")),
                s(:splat,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:lvar, :sequences), :collect),
                      s(:args,
                        s(:arg, :seq)),
                      s(:dstr,
                        s(:str, "<"),
                        s(:begin,
                          s(:send, nil, :tk_event_sequence,
                            s(:lvar, :seq))),
                        s(:str, ">")))))),
              s(:if,
                s(:send,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "event"),
                    s(:str, "info"),
                    s(:dstr,
                      s(:str, "<"),
                      s(:begin,
                        s(:ivar, :@id)),
                      s(:str, ">"))), :empty?),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TkVirtualEventTBL), :mutex), :synchronize),
                  s(:args),
                  s(:send,
                    s(:const, nil, :TkVirtualEventTBL), :delete,
                    s(:ivar, :@id))), nil))),
          s(:self))),
      s(:def, :info,
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "event"),
                s(:str, "info"),
                s(:dstr,
                  s(:str, "<"),
                  s(:begin,
                    s(:ivar, :@id)),
                  s(:str, ">"))), :split,
              s(:regexp,
                s(:str, "\\s+"),
                s(:regopt))), :collect!),
          s(:args,
            s(:arg, :seq)),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :seq), :scan,
                      s(:regexp,
                        s(:str, "<*[^<>]+>*"),
                        s(:regopt))), :collect!),
                  s(:args,
                    s(:arg, :subseq)),
                  s(:case,
                    s(:begin,
                      s(:lvar, :subseq)),
                    s(:when,
                      s(:regexp,
                        s(:str, "^<<[^<>]+>>$"),
                        s(:regopt)),
                      s(:send,
                        s(:const, nil, :TkVirtualEvent), :getobj,
                        s(:send,
                          s(:lvar, :subseq), :[],
                          s(:irange,
                            s(:int, 1),
                            s(:int, -2))))),
                    s(:when,
                      s(:regexp,
                        s(:str, "^<[^<>]+>$"),
                        s(:regopt)),
                      s(:send,
                        s(:lvar, :subseq), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -2)))),
                    s(:send,
                      s(:lvar, :subseq), :split,
                      s(:str, "")))), :flatten)),
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :lst), :size), :==,
                  s(:int, 1))),
              s(:send,
                s(:lvar, :lst), :[],
                s(:int, 0)),
              s(:lvar, :lst))))))),
  s(:casgn, nil, :TkNamedVirtualEvent,
    s(:const,
      s(:const, nil, :TkVirtualEvent), :PreDefVirtEvent)))
