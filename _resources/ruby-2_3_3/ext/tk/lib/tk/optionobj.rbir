s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const, nil, :Tk),
    s(:class,
      s(:const, nil, :OptionObj),
      s(:const, nil, :Hash),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :TkUtil)),
        s(:def, :initialize,
          s(:args,
            s(:optarg, :hash,
              s(:nil))),
          s(:begin,
            s(:super),
            s(:ivasgn, :@observ,
              s(:array)),
            s(:if,
              s(:lvar, :hash),
              s(:send, nil, :update_without_notify,
                s(:send, nil, :_symbolkey2str,
                  s(:lvar, :hash))), nil))),
        s(:def, :observ_info,
          s(:args),
          s(:send,
            s(:ivar, :@observ), :dup)),
        s(:def, :observs,
          s(:args),
          s(:block,
            s(:send,
              s(:ivar, :@observ), :collect),
            s(:args,
              s(:arg, :win)),
            s(:if,
              s(:send,
                s(:lvar, :win), :kind_of?,
                s(:const, nil, :Array)),
              s(:send,
                s(:lvar, :win), :[],
                s(:int, 0)),
              s(:lvar, :win)))),
        s(:def, :_remove_win,
          s(:args,
            s(:arg, :win)),
          s(:if,
            s(:send,
              s(:lvar, :win), :kind_of?,
              s(:const, nil, :Array)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :widget),
                  s(:lvasgn, :method)),
                s(:lvar, :win)),
              s(:block,
                s(:send,
                  s(:ivar, :@observ), :delete_if),
                s(:args,
                  s(:arg, :x)),
                s(:if,
                  s(:send,
                    s(:lvar, :x), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:send,
                    s(:send,
                      s(:lvar, :x), :[],
                      s(:int, 0)), :==,
                    s(:lvar, :widget)),
                  s(:send,
                    s(:lvar, :x), :==,
                    s(:lvar, :widget))))),
            s(:block,
              s(:send,
                s(:ivar, :@observ), :delete_if),
              s(:args,
                s(:arg, :x)),
              s(:if,
                s(:send,
                  s(:lvar, :x), :kind_of?,
                  s(:const, nil, :Array)),
                s(:send,
                  s(:send,
                    s(:lvar, :x), :[],
                    s(:int, 0)), :==,
                  s(:lvar, :win)),
                s(:send,
                  s(:lvar, :x), :==,
                  s(:lvar, :win)))))),
        s(:send, nil, :private,
          s(:sym, :_remove_win)),
        s(:def, :assign,
          s(:args,
            s(:restarg, :wins)),
          s(:begin,
            s(:block,
              s(:send,
                s(:lvar, :wins), :each),
              s(:args,
                s(:arg, :win)),
              s(:begin,
                s(:send, nil, :_remove_win,
                  s(:lvar, :win)),
                s(:send,
                  s(:ivar, :@observ), :<<,
                  s(:lvar, :win)),
                s(:send, nil, :notify,
                  s(:lvar, :win)))),
            s(:self))),
        s(:def, :unassign,
          s(:args,
            s(:restarg, :wins)),
          s(:begin,
            s(:block,
              s(:send,
                s(:lvar, :wins), :each),
              s(:args,
                s(:arg, :win)),
              s(:send, nil, :_remove_win,
                s(:lvar, :win))),
            s(:self))),
        s(:def, :notify,
          s(:args,
            s(:optarg, :target,
              s(:nil))),
          s(:begin,
            s(:if,
              s(:lvar, :target),
              s(:lvasgn, :targets,
                s(:array,
                  s(:lvar, :target))),
              s(:if,
                s(:send,
                  s(:ivar, :@observ), :empty?),
                s(:return,
                  s(:self)),
                s(:lvasgn, :targets,
                  s(:send,
                    s(:ivar, :@observ), :dup)))),
            s(:if,
              s(:send, nil, :empty?),
              s(:return,
                s(:self)), nil),
            s(:lvasgn, :org_hash,
              s(:send, nil, :_symbolkey2str,
                s(:self))),
            s(:block,
              s(:send,
                s(:lvar, :targets), :each),
              s(:args,
                s(:arg, :win)),
              s(:begin,
                s(:lvasgn, :widget,
                  s(:lvasgn, :receiver,
                    s(:lvar, :win))),
                s(:lvasgn, :hash,
                  s(:lvar, :org_hash)),
                s(:kwbegin,
                  s(:rescue,
                    s(:if,
                      s(:send,
                        s(:lvar, :win), :kind_of?,
                        s(:const, nil, :Array)),
                      s(:begin,
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :widget),
                            s(:lvasgn, :method),
                            s(:lvasgn, :conv_tbl)),
                          s(:lvar, :win)),
                        s(:lvasgn, :receiver,
                          s(:lvar, :widget)),
                        s(:if,
                          s(:lvar, :conv_tbl),
                          s(:begin,
                            s(:lvasgn, :hash,
                              s(:hash)),
                            s(:block,
                              s(:send,
                                s(:lvar, :org_hash), :each),
                              s(:args,
                                s(:arg, :key),
                                s(:arg, :val)),
                              s(:begin,
                                s(:if,
                                  s(:send,
                                    s(:lvar, :conv_tbl), :key?,
                                    s(:lvar, :key)),
                                  s(:lvasgn, :key,
                                    s(:send,
                                      s(:lvar, :conv_tbl), :[],
                                      s(:lvar, :key))), nil),
                                s(:if,
                                  s(:lvar, :key), nil,
                                  s(:next)),
                                s(:if,
                                  s(:send,
                                    s(:lvar, :key), :kind_of?,
                                    s(:const, nil, :Array)),
                                  s(:block,
                                    s(:send,
                                      s(:lvar, :key), :each),
                                    s(:args,
                                      s(:arg, :k)),
                                    s(:send,
                                      s(:lvar, :hash), :[]=,
                                      s(:lvar, :k),
                                      s(:lvar, :val))),
                                  s(:send,
                                    s(:lvar, :hash), :[]=,
                                    s(:lvar, :key),
                                    s(:lvar, :val)))))), nil),
                        s(:if,
                          s(:send,
                            s(:lvar, :method), :kind_of?,
                            s(:const, nil, :Array)),
                          s(:begin,
                            s(:masgn,
                              s(:mlhs,
                                s(:lvasgn, :receiver),
                                s(:lvasgn, :method),
                                s(:splat,
                                  s(:lvasgn, :args))),
                              s(:lvar, :method)),
                            s(:send,
                              s(:lvar, :receiver), :__send__,
                              s(:lvar, :method),
                              s(:splat,
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :args), :<<,
                                    s(:lvar, :hash)))))),
                          s(:if,
                            s(:lvar, :method),
                            s(:send,
                              s(:lvar, :widget), :__send__,
                              s(:lvar, :method),
                              s(:lvar, :hash)),
                            s(:send,
                              s(:lvar, :widget), :configure,
                              s(:lvar, :hash))))),
                      s(:send,
                        s(:lvar, :widget), :configure,
                        s(:self))),
                    s(:resbody, nil,
                      s(:lvasgn, :e),
                      s(:if,
                        s(:begin,
                          s(:or,
                            s(:begin,
                              s(:and,
                                s(:and,
                                  s(:send,
                                    s(:lvar, :widget), :kind_of?,
                                    s(:const, nil, :TkObject)),
                                  s(:send,
                                    s(:lvar, :widget), :respond_to?,
                                    s(:str, "exist?"))),
                                s(:send,
                                  s(:send,
                                    s(:lvar, :receiver), :exist?), :!))),
                            s(:begin,
                              s(:and,
                                s(:and,
                                  s(:send,
                                    s(:lvar, :receiver), :kind_of?,
                                    s(:const, nil, :TkObject)),
                                  s(:send,
                                    s(:lvar, :receiver), :respond_to?,
                                    s(:str, "exist?"))),
                                s(:send,
                                  s(:send,
                                    s(:lvar, :receiver), :exist?), :!))))),
                        s(:send,
                          s(:ivar, :@observ), :delete,
                          s(:lvar, :win)),
                        s(:send, nil, :fail,
                          s(:lvar, :e)))), nil)))),
            s(:self))),
        s(:alias,
          s(:sym, :apply),
          s(:sym, :notify)),
        s(:def, :+,
          s(:args,
            s(:arg, :hash)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :hash), :kind_of?,
                s(:const, nil, :Hash)), nil,
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:str, "expect a Hash"))),
            s(:lvasgn, :new_obj,
              s(:send,
                s(:self), :dup)),
            s(:send,
              s(:lvar, :new_obj), :update_without_notify,
              s(:send, nil, :_symbolkey2str,
                s(:lvar, :hash))),
            s(:lvar, :new_obj))),
        s(:alias,
          s(:sym, :update_without_notify),
          s(:sym, :update)),
        s(:def, :update,
          s(:args,
            s(:arg, :hash)),
          s(:begin,
            s(:send, nil, :update_without_notify,
              s(:send, nil, :_symbolkey2str,
                s(:lvar, :hash))),
            s(:send, nil, :notify))),
        s(:def, :configure,
          s(:args,
            s(:arg, :key),
            s(:optarg, :value,
              s(:nil))),
          s(:if,
            s(:send,
              s(:lvar, :key), :kind_of?,
              s(:const, nil, :Hash)),
            s(:send, nil, :update,
              s(:lvar, :key)),
            s(:send, nil, :store,
              s(:lvar, :key),
              s(:lvar, :value)))),
        s(:def, :[],
          s(:args,
            s(:arg, :key)),
          s(:super,
            s(:send,
              s(:lvar, :key), :to_s))),
        s(:alias,
          s(:sym, :cget),
          s(:sym, :[])),
        s(:def, :store,
          s(:args,
            s(:arg, :key),
            s(:arg, :val)),
          s(:begin,
            s(:lvasgn, :key,
              s(:send,
                s(:lvar, :key), :to_s)),
            s(:super,
              s(:lvar, :key),
              s(:lvar, :val)),
            s(:send, nil, :notify))),
        s(:def, :[]=,
          s(:args,
            s(:arg, :key),
            s(:arg, :val)),
          s(:send, nil, :store,
            s(:lvar, :key),
            s(:lvar, :val))),
        s(:def, :replace,
          s(:args,
            s(:arg, :hash)),
          s(:begin,
            s(:super,
              s(:send, nil, :_symbolkey2str,
                s(:lvar, :hash))),
            s(:send, nil, :notify))),
        s(:def, :default,
          s(:args,
            s(:arg, :opt)),
          s(:send, nil, :fail,
            s(:const, nil, :RuntimeError),
            s(:dstr,
              s(:str, "unknown option `"),
              s(:begin,
                s(:lvar, :opt)),
              s(:str, "'")))),
        s(:send, nil, :private,
          s(:sym, :default)),
        s(:undef,
          s(:sym, :default=))))))
