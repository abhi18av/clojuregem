s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Scale),
    s(:const, nil, :TkWindow),
    s(:begin,
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "scale"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Scale"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :create_self,
        s(:args,
          s(:arg, :keys)),
        s(:if,
          s(:and,
            s(:lvar, :keys),
            s(:send,
              s(:lvar, :keys), :!=,
              s(:const, nil, :None))),
          s(:begin,
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "command")),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :keys), :[],
                      s(:str, "command")), :kind_of?,
                    s(:const, nil, :String)), :!)),
              s(:begin,
                s(:lvasgn, :cmd,
                  s(:send,
                    s(:lvar, :keys), :delete,
                    s(:str, "command"))),
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "command"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :val)),
                    s(:send,
                      s(:lvar, :cmd), :call,
                      s(:send,
                        s(:lvar, :val), :to_f))))), nil),
            s(:if,
              s(:send,
                s(:const, nil, :TkConfigMethod), :__IGNORE_UNKNOWN_CONFIGURE_OPTION__),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :tk_call_without_enc,
                    s(:send,
                      s(:const,
                        s(:send,
                          s(:self), :class), :TkCommandNames), :[],
                      s(:int, 0)),
                    s(:ivar, :@path),
                    s(:splat,
                      s(:send, nil, :hash_kv,
                        s(:lvar, :keys),
                        s(:true)))),
                  s(:resbody, nil, nil,
                    s(:begin,
                      s(:send, nil, :tk_call_without_enc,
                        s(:send,
                          s(:const,
                            s(:send,
                              s(:self), :class), :TkCommandNames), :[],
                          s(:int, 0)),
                        s(:ivar, :@path)),
                      s(:lvasgn, :keys,
                        s(:send, nil, :__check_available_configure_options,
                          s(:lvar, :keys))),
                      s(:if,
                        s(:send,
                          s(:lvar, :keys), :empty?), nil,
                        s(:kwbegin,
                          s(:rescue,
                            s(:send, nil, :tk_call_without_enc,
                              s(:str, "destroy"),
                              s(:ivar, :@path)),
                            s(:resbody, nil, nil,
                              s(:send, nil, :configure,
                                s(:lvar, :keys))),
                            s(:send, nil, :tk_call_without_enc,
                              s(:send,
                                s(:const,
                                  s(:send,
                                    s(:self), :class), :TkCommandNames), :[],
                                s(:int, 0)),
                              s(:ivar, :@path),
                              s(:splat,
                                s(:send, nil, :hash_kv,
                                  s(:lvar, :keys),
                                  s(:true))))))))), nil)),
              s(:send, nil, :tk_call_without_enc,
                s(:send,
                  s(:const,
                    s(:send,
                      s(:self), :class), :TkCommandNames), :[],
                  s(:int, 0)),
                s(:ivar, :@path),
                s(:splat,
                  s(:send, nil, :hash_kv,
                    s(:lvar, :keys),
                    s(:true)))))),
          s(:send, nil, :tk_call_without_enc,
            s(:send,
              s(:const,
                s(:send,
                  s(:self), :class), :TkCommandNames), :[],
              s(:int, 0)),
            s(:ivar, :@path)))),
      s(:send, nil, :private,
        s(:sym, :create_self)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :<<,
          s(:str, "label"))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :_wrap_command_arg,
        s(:args,
          s(:arg, :cmd)),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :val)),
          s(:if,
            s(:send,
              s(:lvar, :val), :kind_of?,
              s(:const, nil, :String)),
            s(:send,
              s(:lvar, :cmd), :call,
              s(:send, nil, :number,
                s(:lvar, :val))),
            s(:send,
              s(:lvar, :cmd), :call,
              s(:lvar, :val))))),
      s(:send, nil, :private,
        s(:sym, :_wrap_command_arg)),
      s(:def, :configure_cmd,
        s(:args,
          s(:arg, :slot),
          s(:arg, :value)),
        s(:send, nil, :configure,
          s(:hash,
            s(:pair,
              s(:lvar, :slot),
              s(:lvar, :value))))),
      s(:def, :configure,
        s(:args,
          s(:arg, :slot),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:begin,
              s(:or,
                s(:send,
                  s(:lvar, :slot), :==,
                  s(:str, "command")),
                s(:send,
                  s(:lvar, :slot), :==,
                  s(:sym, :command)))),
            s(:send, nil, :configure,
              s(:hash,
                s(:pair,
                  s(:str, "command"),
                  s(:lvar, :value)))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :slot), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:or,
                    s(:send,
                      s(:lvar, :slot), :key?,
                      s(:str, "command")),
                    s(:send,
                      s(:lvar, :slot), :key?,
                      s(:sym, :command))))),
              s(:begin,
                s(:lvasgn, :slot,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :slot))),
                s(:send,
                  s(:lvar, :slot), :[]=,
                  s(:str, "command"),
                  s(:send, nil, :_wrap_command_arg,
                    s(:send,
                      s(:lvar, :slot), :delete,
                      s(:str, "command"))))), nil)),
          s(:super,
            s(:lvar, :slot),
            s(:lvar, :value)))),
      s(:def, :command,
        s(:args,
          s(:optarg, :cmd,
            s(:send,
              s(:const, nil, :Proc), :new))),
        s(:send, nil, :configure,
          s(:hash,
            s(:pair,
              s(:str, "command"),
              s(:lvar, :cmd))))),
      s(:def, :get,
        s(:args,
          s(:optarg, :x,
            s(:const, nil, :None)),
          s(:optarg, :y,
            s(:const, nil, :None))),
        s(:send, nil, :number,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "get"),
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:def, :coords,
        s(:args,
          s(:optarg, :val,
            s(:const, nil, :None))),
        s(:send, nil, :tk_split_list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "coords"),
            s(:lvar, :val)))),
      s(:def, :identify,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :tk_send_without_enc,
          s(:str, "identify"),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:def, :set,
        s(:args,
          s(:arg, :val)),
        s(:send, nil, :tk_send_without_enc,
          s(:str, "set"),
          s(:lvar, :val))),
      s(:def, :value,
        s(:args),
        s(:send, nil, :get)),
      s(:def, :value=,
        s(:args,
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :set,
            s(:lvar, :val)),
          s(:lvar, :val))))),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/scale.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :Scale),
    s(:sym, :TkScale)))
