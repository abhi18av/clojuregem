s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/label")),
  s(:send, nil, :require,
    s(:str, "tk/scrollable")),
  s(:send, nil, :require,
    s(:str, "tk/validation")),
  s(:class,
    s(:const,
      s(:const, nil, :Tk), :Entry),
    s(:const,
      s(:const, nil, :Tk), :Label),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :X_Scrollable)),
      s(:send, nil, :include,
        s(:const, nil, :TkValidation)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "entry"), :freeze)), :freeze)),
      s(:casgn, nil, :WidgetClassName,
        s(:send,
          s(:str, "Entry"), :freeze)),
      s(:or_asgn,
        s(:send,
          s(:const, nil, :WidgetClassNames), :[],
          s(:const, nil, :WidgetClassName)),
        s(:self)),
      s(:def, :__strval_optkeys,
        s(:args),
        s(:send,
          s(:super), :+,
          s(:array,
            s(:str, "show"),
            s(:str, "disabledbackground"),
            s(:str, "readonlybackground")))),
      s(:send, nil, :private,
        s(:sym, :__strval_optkeys)),
      s(:def, :bbox,
        s(:args,
          s(:arg, :index)),
        s(:send, nil, :list,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "bbox"),
            s(:lvar, :index)))),
      s(:def, :cursor,
        s(:args),
        s(:send, nil, :number,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "index"),
            s(:str, "insert")))),
      s(:alias,
        s(:sym, :icursor),
        s(:sym, :cursor)),
      s(:def, :cursor=,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "icursor"),
            s(:lvar, :index)),
          s(:lvar, :index))),
      s(:alias,
        s(:sym, :icursor=),
        s(:sym, :cursor=)),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send, nil, :number,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "index"),
            s(:lvar, :idx)))),
      s(:def, :insert,
        s(:args,
          s(:arg, :pos),
          s(:arg, :text)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "insert"),
            s(:lvar, :pos),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :text))),
          s(:self))),
      s(:def, :delete,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "delete"),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :mark,
        s(:args,
          s(:arg, :pos)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scan"),
            s(:str, "mark"),
            s(:lvar, :pos)),
          s(:self))),
      s(:def, :dragto,
        s(:args,
          s(:arg, :pos)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "scan"),
            s(:str, "dragto"),
            s(:lvar, :pos)),
          s(:self))),
      s(:def, :selection_adjust,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "adjust"),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :selection_clear,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "clear")),
          s(:self))),
      s(:def, :selection_from,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "from"),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :selection_present,
        s(:args),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "present")))),
      s(:def, :selection_range,
        s(:args,
          s(:arg, :s),
          s(:arg, :e)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "range"),
            s(:lvar, :s),
            s(:lvar, :e)),
          s(:self))),
      s(:def, :selection_to,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "selection"),
            s(:str, "to"),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :invoke_validate,
        s(:args),
        s(:send, nil, :bool,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "validate")))),
      s(:def, :validate,
        s(:args,
          s(:optarg, :mode,
            s(:nil))),
        s(:if,
          s(:lvar, :mode),
          s(:send, nil, :configure,
            s(:str, "validate"),
            s(:lvar, :mode)),
          s(:send, nil, :invoke_validate))),
      s(:def, :value,
        s(:args),
        s(:send, nil, :_fromUTF8,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "get")))),
      s(:def, :value=,
        s(:args,
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :tk_send_without_enc,
            s(:str, "delete"),
            s(:int, 0),
            s(:str, "end")),
          s(:send, nil, :tk_send_without_enc,
            s(:str, "insert"),
            s(:int, 0),
            s(:send, nil, :_get_eval_enc_str,
              s(:lvar, :val))),
          s(:lvar, :val))),
      s(:alias,
        s(:sym, :get),
        s(:sym, :value)),
      s(:alias,
        s(:sym, :set),
        s(:sym, :value=)),
      s(:def, :[],
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:send,
            s(:self), :value), :[],
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :[]=,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :val,
            s(:send,
              s(:lvar, :args), :pop)),
          s(:lvasgn, :str,
            s(:send,
              s(:self), :value)),
          s(:send,
            s(:lvar, :str), :[]=,
            s(:splat,
              s(:lvar, :args)),
            s(:lvar, :val)),
          s(:send,
            s(:self), :value=,
            s(:lvar, :str)),
          s(:lvar, :val))))),
  s(:send,
    s(:const, nil, :Tk), :__set_loaded_toplevel_aliases__,
    s(:str, "tk/entry.rb"),
    s(:sym, :Tk),
    s(:const,
      s(:const, nil, :Tk), :Entry),
    s(:sym, :TkEntry)))
