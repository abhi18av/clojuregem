s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/tagfont")),
  s(:module,
    s(:const, nil, :TkcTagAccess),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComm)),
      s(:send, nil, :include,
        s(:const, nil, :TkTreatTagFont)))),
  s(:send, nil, :require,
    s(:str, "tk/canvas")),
  s(:module,
    s(:const, nil, :TkcTagAccess),
    s(:begin,
      s(:def, :addtag,
        s(:args,
          s(:arg, :tag)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag,
            s(:lvar, :tag),
            s(:str, "withtag"),
            s(:ivar, :@id)),
          s(:self))),
      s(:def, :bbox,
        s(:args),
        s(:send,
          s(:ivar, :@c), :bbox,
          s(:ivar, :@id))),
      s(:def, :bind,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send,
            s(:ivar, :@c), :itembind,
            s(:ivar, :@id),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :bind_append,
        s(:args,
          s(:arg, :seq),
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:or,
              s(:send,
                s(:const, nil, :TkComm), :_callback_entry?,
                s(:send,
                  s(:lvar, :args), :[],
                  s(:int, 0))),
              s(:send,
                s(:send, nil, :block_given?), :!)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:lvar, :args), :shift)),
            s(:lvasgn, :cmd,
              s(:send,
                s(:const, nil, :Proc), :new))),
          s(:send,
            s(:ivar, :@c), :itembind_append,
            s(:ivar, :@id),
            s(:lvar, :seq),
            s(:lvar, :cmd),
            s(:splat,
              s(:lvar, :args))),
          s(:self))),
      s(:def, :bind_remove,
        s(:args,
          s(:arg, :seq)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :itembind_remove,
            s(:ivar, :@id),
            s(:lvar, :seq)),
          s(:self))),
      s(:def, :bindinfo,
        s(:args,
          s(:optarg, :seq,
            s(:nil))),
        s(:send,
          s(:ivar, :@c), :itembindinfo,
          s(:ivar, :@id),
          s(:lvar, :seq))),
      s(:def, :cget_tkstring,
        s(:args,
          s(:arg, :option)),
        s(:send,
          s(:ivar, :@c), :itemcget_tkstring,
          s(:ivar, :@id),
          s(:lvar, :option))),
      s(:def, :cget,
        s(:args,
          s(:arg, :option)),
        s(:send,
          s(:ivar, :@c), :itemcget,
          s(:ivar, :@id),
          s(:lvar, :option))),
      s(:def, :cget_strict,
        s(:args,
          s(:arg, :option)),
        s(:send,
          s(:ivar, :@c), :itemcget_strict,
          s(:ivar, :@id),
          s(:lvar, :option))),
      s(:def, :configure,
        s(:args,
          s(:arg, :key),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :itemconfigure,
            s(:ivar, :@id),
            s(:lvar, :key),
            s(:lvar, :value)),
          s(:self))),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@c), :itemconfiginfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :current_configinfo,
        s(:args,
          s(:optarg, :key,
            s(:nil))),
        s(:send,
          s(:ivar, :@c), :current_itemconfiginfo,
          s(:ivar, :@id),
          s(:lvar, :key))),
      s(:def, :coords,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@c), :coords,
          s(:ivar, :@id),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :dchars,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :dchars,
            s(:ivar, :@id),
            s(:lvar, :first),
            s(:lvar, :last)),
          s(:self))),
      s(:def, :dtag,
        s(:args,
          s(:optarg, :tag_to_del,
            s(:const, nil, :None))),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :dtag,
            s(:ivar, :@id),
            s(:lvar, :tag_to_del)),
          s(:self))),
      s(:alias,
        s(:sym, :deltag),
        s(:sym, :dtag)),
      s(:def, :find,
        s(:args),
        s(:send,
          s(:ivar, :@c), :find,
          s(:str, "withtag"),
          s(:ivar, :@id))),
      s(:alias,
        s(:sym, :list),
        s(:sym, :find)),
      s(:def, :focus,
        s(:args),
        s(:send,
          s(:ivar, :@c), :itemfocus,
          s(:ivar, :@id))),
      s(:def, :gettags,
        s(:args),
        s(:send,
          s(:ivar, :@c), :gettags,
          s(:ivar, :@id))),
      s(:def, :icursor,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :icursor,
            s(:ivar, :@id),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :imove,
        s(:args,
          s(:arg, :idx),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :imove,
            s(:ivar, :@id),
            s(:lvar, :idx),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:alias,
        s(:sym, :i_move),
        s(:sym, :imove)),
      s(:def, :index,
        s(:args,
          s(:arg, :idx)),
        s(:send,
          s(:ivar, :@c), :index,
          s(:ivar, :@id),
          s(:lvar, :idx))),
      s(:def, :insert,
        s(:args,
          s(:arg, :beforethis),
          s(:arg, :string)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :insert,
            s(:ivar, :@id),
            s(:lvar, :beforethis),
            s(:lvar, :string)),
          s(:self))),
      s(:def, :lower,
        s(:args,
          s(:optarg, :belowthis,
            s(:const, nil, :None))),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :lower,
            s(:ivar, :@id),
            s(:lvar, :belowthis)),
          s(:self))),
      s(:def, :move,
        s(:args,
          s(:arg, :xamount),
          s(:arg, :yamount)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :move,
            s(:ivar, :@id),
            s(:lvar, :xamount),
            s(:lvar, :yamount)),
          s(:self))),
      s(:def, :moveto,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :moveto,
            s(:ivar, :@id),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:self))),
      s(:alias,
        s(:sym, :move_to),
        s(:sym, :moveto)),
      s(:def, :raise,
        s(:args,
          s(:optarg, :abovethis,
            s(:const, nil, :None))),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :raise,
            s(:ivar, :@id),
            s(:lvar, :abovethis)),
          s(:self))),
      s(:def, :scale,
        s(:args,
          s(:arg, :xorigin),
          s(:arg, :yorigin),
          s(:arg, :xscale),
          s(:arg, :yscale)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :scale,
            s(:ivar, :@id),
            s(:lvar, :xorigin),
            s(:lvar, :yorigin),
            s(:lvar, :xscale),
            s(:lvar, :yscale)),
          s(:self))),
      s(:def, :rchars,
        s(:args,
          s(:arg, :first),
          s(:arg, :last),
          s(:arg, :str_or_coords)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :rchars,
            s(:ivar, :@id),
            s(:lvar, :first),
            s(:lvar, :last),
            s(:lvar, :str_or_coords)),
          s(:self))),
      s(:alias,
        s(:sym, :replace_chars),
        s(:sym, :rchars)),
      s(:alias,
        s(:sym, :replace_coords),
        s(:sym, :rchars)),
      s(:def, :select_adjust,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :select,
            s(:str, "adjust"),
            s(:ivar, :@id),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :select_from,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :select,
            s(:str, "from"),
            s(:ivar, :@id),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :select_to,
        s(:args,
          s(:arg, :index)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :select,
            s(:str, "to"),
            s(:ivar, :@id),
            s(:lvar, :index)),
          s(:self))),
      s(:def, :itemtype,
        s(:args),
        s(:send,
          s(:ivar, :@c), :itemtype,
          s(:ivar, :@id))),
      s(:def, :&,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:send,
            s(:lvar, :tag), :kind_of?,
            s(:const, nil, :TkObject)),
          s(:send,
            s(:const, nil, :TkcTagString), :new,
            s(:ivar, :@c),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:str, "("), :+,
                    s(:ivar, :@id)), :+,
                  s(:str, ")&&(")), :+,
                s(:send,
                  s(:lvar, :tag), :path)), :+,
              s(:str, ")"))),
          s(:send,
            s(:const, nil, :TkcTagString), :new,
            s(:ivar, :@c),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:str, "("), :+,
                    s(:ivar, :@id)), :+,
                  s(:str, ")&&(")), :+,
                s(:send,
                  s(:lvar, :tag), :to_s)), :+,
              s(:str, ")"))))),
      s(:def, :|,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:send,
            s(:lvar, :tag), :kind_of?,
            s(:const, nil, :TkObject)),
          s(:send,
            s(:const, nil, :TkcTagString), :new,
            s(:ivar, :@c),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:str, "("), :+,
                    s(:ivar, :@id)), :+,
                  s(:str, ")||(")), :+,
                s(:send,
                  s(:lvar, :tag), :path)), :+,
              s(:str, ")"))),
          s(:send,
            s(:const, nil, :TkcTagString), :new,
            s(:ivar, :@c),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:str, "("), :+,
                    s(:ivar, :@id)), :+,
                  s(:str, ")||(")), :+,
                s(:send,
                  s(:lvar, :tag), :to_s)), :+,
              s(:str, ")"))))),
      s(:def, :^,
        s(:args,
          s(:arg, :tag)),
        s(:if,
          s(:send,
            s(:lvar, :tag), :kind_of?,
            s(:const, nil, :TkObject)),
          s(:send,
            s(:const, nil, :TkcTagString), :new,
            s(:ivar, :@c),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:str, "("), :+,
                    s(:ivar, :@id)), :+,
                  s(:str, ")^(")), :+,
                s(:send,
                  s(:lvar, :tag), :path)), :+,
              s(:str, ")"))),
          s(:send,
            s(:const, nil, :TkcTagString), :new,
            s(:ivar, :@c),
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:str, "("), :+,
                    s(:ivar, :@id)), :+,
                  s(:str, ")^(")), :+,
                s(:send,
                  s(:lvar, :tag), :to_s)), :+,
              s(:str, ")"))))),
      s(:def, :-@,
        s(:args),
        s(:send,
          s(:const, nil, :TkcTagString), :new,
          s(:ivar, :@c),
          s(:send,
            s(:send,
              s(:str, "!("), :+,
              s(:ivar, :@id)), :+,
            s(:str, ")")))))),
  s(:class,
    s(:const, nil, :TkcTag),
    s(:const, nil, :TkObject),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkcTagAccess)),
      s(:casgn, nil, :CTagID_TBL,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :create_table)),
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :Tk_CanvasTag_ID,
              s(:array,
                s(:send,
                  s(:str, "ctag"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:block,
        s(:send,
          s(:const,
            s(:const, nil, :TkCore), :INTERP), :init_ip_env),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :CTagID_TBL), :mutex), :synchronize),
          s(:args),
          s(:send,
            s(:const, nil, :CTagID_TBL), :clear))),
      s(:defs,
        s(:const, nil, :TkcTag), :id2obj,
        s(:args,
          s(:arg, :canvas),
          s(:arg, :id)),
        s(:begin,
          s(:lvasgn, :cpath,
            s(:send,
              s(:lvar, :canvas), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :CTagID_TBL), :[],
                s(:lvar, :cpath)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :CTagID_TBL), :[],
                    s(:lvar, :cpath)), :[],
                  s(:lvar, :id)),
                s(:send,
                  s(:send,
                    s(:const, nil, :CTagID_TBL), :[],
                    s(:lvar, :cpath)), :[],
                  s(:lvar, :id)),
                s(:lvar, :id)),
              s(:lvar, :id))))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:optarg, :mode,
            s(:nil)),
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@c,
            s(:lvar, :parent)),
          s(:ivasgn, :@cpath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_CanvasTag_ID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:send,
                    s(:const, nil, :Tk_CanvasTag_ID), :join,
                    s(:send,
                      s(:const,
                        s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_CanvasTag_ID), :[],
                  s(:int, 1)), :succ!))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[],
                  s(:ivar, :@cpath)), nil,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[]=,
                  s(:ivar, :@cpath),
                  s(:hash))),
              s(:send,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[],
                  s(:ivar, :@cpath)), :[]=,
                s(:ivar, :@id),
                s(:self)))),
          s(:if,
            s(:lvar, :mode),
            s(:send, nil, :tk_call_without_enc,
              s(:send,
                s(:ivar, :@c), :path),
              s(:str, "addtag"),
              s(:ivar, :@id),
              s(:lvar, :mode),
              s(:splat,
                s(:lvar, :args))), nil))),
      s(:def, :id,
        s(:args),
        s(:ivar, :@id)),
      s(:def, :exist?,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@c), :find_withtag,
            s(:ivar, :@id)),
          s(:true),
          s(:false))),
      s(:def, :delete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :delete,
            s(:ivar, :@id)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:send,
                s(:const, nil, :CTagID_TBL), :[],
                s(:ivar, :@cpath)),
              s(:send,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[],
                  s(:ivar, :@cpath)), :delete,
                s(:ivar, :@id)), nil)),
          s(:self))),
      s(:alias,
        s(:sym, :remove),
        s(:sym, :delete)),
      s(:alias,
        s(:sym, :destroy),
        s(:sym, :delete)),
      s(:def, :set_to_above,
        s(:args,
          s(:arg, :target)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_above,
            s(:ivar, :@id),
            s(:lvar, :target)),
          s(:self))),
      s(:alias,
        s(:sym, :above),
        s(:sym, :set_to_above)),
      s(:def, :set_to_all,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_all,
            s(:ivar, :@id)),
          s(:self))),
      s(:alias,
        s(:sym, :all),
        s(:sym, :set_to_all)),
      s(:def, :set_to_below,
        s(:args,
          s(:arg, :target)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_below,
            s(:ivar, :@id),
            s(:lvar, :target)),
          s(:self))),
      s(:alias,
        s(:sym, :below),
        s(:sym, :set_to_below)),
      s(:def, :set_to_closest,
        s(:args,
          s(:arg, :x),
          s(:arg, :y),
          s(:optarg, :halo,
            s(:const, nil, :None)),
          s(:optarg, :start,
            s(:const, nil, :None))),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_closest,
            s(:ivar, :@id),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:lvar, :halo),
            s(:lvar, :start)),
          s(:self))),
      s(:alias,
        s(:sym, :closest),
        s(:sym, :set_to_closest)),
      s(:def, :set_to_enclosed,
        s(:args,
          s(:arg, :x1),
          s(:arg, :y1),
          s(:arg, :x2),
          s(:arg, :y2)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_enclosed,
            s(:ivar, :@id),
            s(:lvar, :x1),
            s(:lvar, :y1),
            s(:lvar, :x2),
            s(:lvar, :y2)),
          s(:self))),
      s(:alias,
        s(:sym, :enclosed),
        s(:sym, :set_to_enclosed)),
      s(:def, :set_to_overlapping,
        s(:args,
          s(:arg, :x1),
          s(:arg, :y1),
          s(:arg, :x2),
          s(:arg, :y2)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_overlapping,
            s(:ivar, :@id),
            s(:lvar, :x1),
            s(:lvar, :y1),
            s(:lvar, :x2),
            s(:lvar, :y2)),
          s(:self))),
      s(:alias,
        s(:sym, :overlapping),
        s(:sym, :set_to_overlapping)),
      s(:def, :set_to_withtag,
        s(:args,
          s(:arg, :target)),
        s(:begin,
          s(:send,
            s(:ivar, :@c), :addtag_withtag,
            s(:ivar, :@id),
            s(:lvar, :target)),
          s(:self))),
      s(:alias,
        s(:sym, :withtag),
        s(:sym, :set_to_withtag)))),
  s(:class,
    s(:const, nil, :TkcTagString),
    s(:const, nil, :TkcTag),
    s(:begin,
      s(:defs,
        s(:self), :new,
        s(:args,
          s(:arg, :parent),
          s(:arg, :name),
          s(:optarg, :mode,
            s(:nil)),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :obj,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:if,
              s(:and,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[],
                  s(:send,
                    s(:lvar, :parent), :path)),
                s(:send,
                  s(:send,
                    s(:const, nil, :CTagID_TBL), :[],
                    s(:send,
                      s(:lvar, :parent), :path)), :[],
                  s(:lvar, :name))),
              s(:lvasgn, :obj,
                s(:send,
                  s(:send,
                    s(:const, nil, :CTagID_TBL), :[],
                    s(:send,
                      s(:lvar, :parent), :path)), :[],
                  s(:lvar, :name))),
              s(:block,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :obj,
                      s(:send,
                        s(:self), :allocate))), :instance_eval),
                s(:args),
                s(:begin,
                  s(:ivasgn, :@c,
                    s(:lvar, :parent)),
                  s(:ivasgn, :@cpath,
                    s(:send,
                      s(:lvar, :parent), :path)),
                  s(:ivasgn, :@path,
                    s(:ivasgn, :@id,
                      s(:lvar, :name))),
                  s(:if,
                    s(:send,
                      s(:const, nil, :CTagID_TBL), :[],
                      s(:ivar, :@cpath)), nil,
                    s(:send,
                      s(:const, nil, :CTagID_TBL), :[]=,
                      s(:ivar, :@cpath),
                      s(:hash))),
                  s(:send,
                    s(:send,
                      s(:const, nil, :CTagID_TBL), :[],
                      s(:ivar, :@cpath)), :[]=,
                    s(:ivar, :@id),
                    s(:self)))))),
          s(:if,
            s(:and,
              s(:lvar, :obj),
              s(:lvar, :mode)),
            s(:send, nil, :tk_call_without_enc,
              s(:send,
                s(:ivar, :@c), :path),
              s(:str, "addtag"),
              s(:ivar, :@id),
              s(:lvar, :mode),
              s(:splat,
                s(:lvar, :args))), nil),
          s(:lvar, :obj))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:arg, :name),
          s(:optarg, :mode,
            s(:nil)),
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@c,
            s(:lvar, :parent)),
          s(:ivasgn, :@cpath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:ivasgn, :@path,
            s(:ivasgn, :@id,
              s(:lvar, :name))),
          s(:if,
            s(:lvar, :mode),
            s(:send, nil, :tk_call_without_enc,
              s(:send,
                s(:ivar, :@c), :path),
              s(:str, "addtag"),
              s(:ivar, :@id),
              s(:lvar, :mode),
              s(:splat,
                s(:lvar, :args))), nil))))),
  s(:casgn, nil, :TkcNamedTag,
    s(:const, nil, :TkcTagString)),
  s(:class,
    s(:const, nil, :TkcTagAll),
    s(:const, nil, :TkcTagString),
    s(:defs,
      s(:self), :new,
      s(:args,
        s(:arg, :parent)),
      s(:super,
        s(:lvar, :parent),
        s(:str, "all")))),
  s(:class,
    s(:const, nil, :TkcTagCurrent),
    s(:const, nil, :TkcTagString),
    s(:defs,
      s(:self), :new,
      s(:args,
        s(:arg, :parent)),
      s(:super,
        s(:lvar, :parent),
        s(:str, "current")))),
  s(:class,
    s(:const, nil, :TkcGroup),
    s(:const, nil, :TkcTag),
    s(:begin,
      s(:block,
        s(:send,
          s(:begin,
            s(:casgn, nil, :Tk_cGroup_ID,
              s(:array,
                s(:send,
                  s(:str, "tkcg"), :freeze),
                s(:send,
                  s(:const, nil, :TkUtil), :untrust,
                  s(:str, "00000"))))), :instance_eval),
        s(:args),
        s(:begin,
          s(:ivasgn, :@mutex,
            s(:send,
              s(:const, nil, :Mutex), :new)),
          s(:def, :mutex,
            s(:args),
            s(:ivar, :@mutex)),
          s(:send, nil, :freeze))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :parent),
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@c,
            s(:lvar, :parent)),
          s(:ivasgn, :@cpath,
            s(:send,
              s(:lvar, :parent), :path)),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Tk_cGroup_ID), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:ivasgn, :@path,
                s(:ivasgn, :@id,
                  s(:send,
                    s(:const, nil, :Tk_cGroup_ID), :join,
                    s(:send,
                      s(:const,
                        s(:const, nil, :TkCore), :INTERP), :_ip_id_)))),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk_cGroup_ID), :[],
                  s(:int, 1)), :succ!))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :CTagID_TBL), :mutex), :synchronize),
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[],
                  s(:ivar, :@cpath)), nil,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[]=,
                  s(:ivar, :@cpath),
                  s(:hash))),
              s(:send,
                s(:send,
                  s(:const, nil, :CTagID_TBL), :[],
                  s(:ivar, :@cpath)), :[]=,
                s(:ivar, :@id),
                s(:self)))),
          s(:if,
            s(:send,
              s(:lvar, :args), :!=,
              s(:array)),
            s(:send, nil, :include,
              s(:splat,
                s(:lvar, :args))), nil))),
      s(:def, :include,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:for,
            s(:lvasgn, :i),
            s(:lvar, :tags),
            s(:send,
              s(:ivar, :@c), :addtag_withtag,
              s(:ivar, :@id),
              s(:lvar, :i))),
          s(:self))),
      s(:alias,
        s(:sym, :add),
        s(:sym, :include)),
      s(:def, :exclude,
        s(:args,
          s(:restarg, :tags)),
        s(:begin,
          s(:for,
            s(:lvasgn, :i),
            s(:lvar, :tags),
            s(:send,
              s(:ivar, :@c), :dtag,
              s(:lvar, :i),
              s(:ivar, :@id))),
          s(:self))))))
