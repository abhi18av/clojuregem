s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tk/font")),
  s(:module,
    s(:const,
      s(:const, nil, :TkFont), :Chooser),
    s(:send, nil, :extend,
      s(:const, nil, :TkCore))),
  s(:module,
    s(:const, nil, :Tk),
    s(:casgn, nil, :Fontchooser,
      s(:const,
        s(:const, nil, :TkFont), :Chooser))),
  s(:sclass,
    s(:const,
      s(:const, nil, :TkFont), :Chooser),
    s(:begin,
      s(:def, :method_missing,
        s(:args,
          s(:arg, :id),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:lvar, :id), :id2name)),
          s(:case,
            s(:send,
              s(:lvar, :args), :length),
            s(:when,
              s(:int, 1),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :name), :[],
                    s(:int, -1)), :==,
                  s(:str, "=")),
                s(:begin,
                  s(:send, nil, :configure,
                    s(:send,
                      s(:lvar, :name), :[],
                      s(:irange,
                        s(:int, 0),
                        s(:int, -2))),
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0))),
                  s(:send,
                    s(:lvar, :args), :[],
                    s(:int, 0))),
                s(:begin,
                  s(:send, nil, :configure,
                    s(:lvar, :name),
                    s(:send,
                      s(:lvar, :args), :[],
                      s(:int, 0))),
                  s(:self)))),
            s(:when,
              s(:int, 0),
              s(:kwbegin,
                s(:rescue,
                  s(:send, nil, :cget,
                    s(:lvar, :name)),
                  s(:resbody, nil, nil,
                    s(:super,
                      s(:lvar, :id),
                      s(:splat,
                        s(:lvar, :args)))), nil))),
            s(:super,
              s(:lvar, :id),
              s(:splat,
                s(:lvar, :args)))))),
      s(:def, :__configinfo_value,
        s(:args,
          s(:arg, :key),
          s(:arg, :val)),
        s(:case,
          s(:lvar, :key),
          s(:when,
            s(:str, "parent"),
            s(:send, nil, :window,
              s(:lvar, :val))),
          s(:when,
            s(:str, "title"),
            s(:lvar, :val)),
          s(:when,
            s(:str, "font"),
            s(:if,
              s(:send,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :lst,
                      s(:send, nil, :tk_split_simplelist,
                        s(:lvar, :val)))), :size), :==,
                s(:int, 1)),
              s(:send,
                s(:lvar, :lst), :[],
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:lvar, :lst), :map),
                s(:args,
                  s(:arg, :elem)),
                s(:send, nil, :num_or_str,
                  s(:lvar, :elem))))),
          s(:when,
            s(:str, "command"),
            s(:send, nil, :tk_tcl2ruby,
              s(:lvar, :val))),
          s(:when,
            s(:str, "visible"),
            s(:send, nil, :bool,
              s(:lvar, :val))),
          s(:lvar, :val))),
      s(:send, nil, :private,
        s(:sym, :__configinfo_value)),
      s(:def, :configinfo,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:and,
            s(:send,
              s(:lvar, :option), :!),
            s(:const,
              s(:const, nil, :TkComm), :GET_CONFIGINFOwoRES_AS_ARRAY)),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send, nil, :tk_split_simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "tk"),
                  s(:str, "fontchooser"),
                  s(:str, "configure")))),
            s(:lvasgn, :ret,
              s(:array)),
            s(:block,
              s(:send,
                s(:const, nil, :TkComm), :slice_ary,
                s(:lvar, :lst),
                s(:int, 2)),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:begin,
                s(:lvasgn, :k,
                  s(:send,
                    s(:lvar, :k), :[],
                    s(:irange,
                      s(:int, 1),
                      s(:int, -1)))),
                s(:send,
                  s(:lvar, :ret), :<<,
                  s(:array,
                    s(:lvar, :k),
                    s(:send, nil, :__configinfo_value,
                      s(:lvar, :k),
                      s(:lvar, :v)))))),
            s(:lvar, :ret)),
          s(:send, nil, :current_configinfo,
            s(:lvar, :option)))),
      s(:def, :current_configinfo,
        s(:args,
          s(:optarg, :option,
            s(:nil))),
        s(:if,
          s(:lvar, :option),
          s(:begin,
            s(:lvasgn, :opt,
              s(:send,
                s(:lvar, :option), :to_s)),
            s(:if,
              s(:send,
                s(:lvar, :opt), :empty?),
              s(:send, nil, :fail,
                s(:const, nil, :ArgumentError),
                s(:dstr,
                  s(:str, "Invalid option `"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :option), :inspect)),
                  s(:str, "'"))), nil),
            s(:send, nil, :__configinfo_value,
              s(:send,
                s(:lvar, :option), :to_s),
              s(:send, nil, :tk_call,
                s(:str, "tk"),
                s(:str, "fontchooser"),
                s(:str, "configure"),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :opt)))))),
          s(:begin,
            s(:lvasgn, :lst,
              s(:send, nil, :tk_split_simplelist,
                s(:send, nil, :tk_call,
                  s(:str, "tk"),
                  s(:str, "fontchooser"),
                  s(:str, "configure")))),
            s(:lvasgn, :ret,
              s(:hash)),
            s(:block,
              s(:send,
                s(:const, nil, :TkComm), :slice_ary,
                s(:lvar, :lst),
                s(:int, 2)),
              s(:args,
                s(:arg, :k),
                s(:arg, :v)),
              s(:begin,
                s(:lvasgn, :k,
                  s(:send,
                    s(:lvar, :k), :[],
                    s(:irange,
                      s(:int, 1),
                      s(:int, -1)))),
                s(:send,
                  s(:lvar, :ret), :[]=,
                  s(:lvar, :k),
                  s(:send, nil, :__configinfo_value,
                    s(:lvar, :k),
                    s(:lvar, :v))))),
            s(:lvar, :ret)))),
      s(:def, :configure,
        s(:args,
          s(:arg, :option),
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :option), :kind_of?,
              s(:const, nil, :Hash)),
            s(:send, nil, :tk_call,
              s(:str, "tk"),
              s(:str, "fontchooser"),
              s(:str, "configure"),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:send, nil, :_symbolkey2str,
                    s(:lvar, :option))))),
            s(:begin,
              s(:lvasgn, :opt,
                s(:send,
                  s(:lvar, :option), :to_s)),
              s(:if,
                s(:send,
                  s(:lvar, :opt), :empty?),
                s(:send, nil, :fail,
                  s(:const, nil, :ArgumentError),
                  s(:dstr,
                    s(:str, "Invalid option `"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :option), :inspect)),
                    s(:str, "'"))), nil),
              s(:send, nil, :tk_call,
                s(:str, "tk"),
                s(:str, "fontchooser"),
                s(:str, "configure"),
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :opt))),
                s(:lvar, :value)))),
          s(:self))),
      s(:def, :configure_cmd,
        s(:args,
          s(:arg, :slot),
          s(:arg, :value)),
        s(:send, nil, :configure,
          s(:lvar, :slot),
          s(:send, nil, :install_cmd,
            s(:lvar, :value)))),
      s(:def, :command,
        s(:args,
          s(:optarg, :cmd,
            s(:nil)),
          s(:blockarg, :b)),
        s(:if,
          s(:lvar, :cmd),
          s(:send, nil, :configure_cmd,
            s(:str, "command"),
            s(:lvar, :cmd)),
          s(:if,
            s(:lvar, :b),
            s(:send, nil, :configure_cmd,
              s(:str, "command"),
              s(:send,
                s(:const, nil, :Proc), :new,
                s(:block_pass,
                  s(:lvar, :b)))),
            s(:send, nil, :cget,
              s(:str, "command"))))),
      s(:def, :cget,
        s(:args,
          s(:arg, :slot)),
        s(:send, nil, :configinfo,
          s(:lvar, :slot))),
      s(:def, :[],
        s(:args,
          s(:arg, :slot)),
        s(:send, nil, :cget,
          s(:lvar, :slot))),
      s(:def, :[]=,
        s(:args,
          s(:arg, :slot),
          s(:arg, :val)),
        s(:begin,
          s(:send, nil, :configure,
            s(:lvar, :slot),
            s(:lvar, :val)),
          s(:lvar, :val))),
      s(:def, :show,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "tk"),
            s(:str, "fontchooser"),
            s(:str, "show")),
          s(:self))),
      s(:def, :hide,
        s(:args),
        s(:begin,
          s(:send, nil, :tk_call,
            s(:str, "tk"),
            s(:str, "fontchooser"),
            s(:str, "hide")),
          s(:self))),
      s(:def, :toggle,
        s(:args),
        s(:begin,
          s(:if,
            s(:send, nil, :cget,
              s(:sym, :visible)),
            s(:send, nil, :hide),
            s(:send, nil, :show)),
          s(:self))),
      s(:def, :set_for,
        s(:args,
          s(:arg, :target),
          s(:optarg, :title,
            s(:str, "Font"))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :target), :kind_of?,
              s(:const, nil, :TkFont)),
            s(:lvasgn, :configs,
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:send,
                    s(:lvar, :target), :actual_hash)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :fnt),
                      s(:restarg, :args)),
                    s(:send,
                      s(:lvar, :target), :configure,
                      s(:send,
                        s(:const, nil, :TkFont), :actual_hash,
                        s(:lvar, :fnt))))))),
            s(:if,
              s(:send,
                s(:lvar, :target), :kind_of?,
                s(:const, nil, :Hash)),
              s(:begin,
                s(:lvasgn, :fnt,
                  s(:rescue,
                    s(:send,
                      s(:lvar, :target), :[],
                      s(:sym, :font)),
                    s(:resbody, nil, nil,
                      s(:str, "")), nil)),
                s(:if,
                  s(:send,
                    s(:lvar, :fnt), :kind_of?,
                    s(:const, nil, :TkFont)),
                  s(:lvasgn, :fnt,
                    s(:send,
                      s(:lvar, :fnt), :actual_hash)), nil),
                s(:lvasgn, :configs,
                  s(:hash,
                    s(:pair,
                      s(:sym, :font),
                      s(:lvar, :fnt)),
                    s(:pair,
                      s(:sym, :command),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args,
                          s(:arg, :fnt),
                          s(:restarg, :args)),
                        s(:send,
                          s(:lvar, :target), :[]=,
                          s(:sym, :font),
                          s(:send,
                            s(:const, nil, :TkFont), :actual_hash,
                            s(:lvar, :fnt)))))))),
              s(:lvasgn, :configs,
                s(:hash,
                  s(:pair,
                    s(:sym, :font),
                    s(:send,
                      s(:lvar, :target), :cget_tkstring,
                      s(:sym, :font))),
                  s(:pair,
                    s(:sym, :command),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :fnt),
                        s(:restarg, :args)),
                      s(:send,
                        s(:lvar, :target), :font=,
                        s(:send,
                          s(:const, nil, :TkFont), :actual_hash_displayof,
                          s(:lvar, :fnt),
                          s(:lvar, :target))))))))),
          s(:if,
            s(:lvar, :title),
            s(:send,
              s(:lvar, :configs), :[]=,
              s(:sym, :title),
              s(:lvar, :title)), nil),
          s(:send, nil, :configure,
            s(:lvar, :configs)),
          s(:lvar, :target))),
      s(:def, :unset,
        s(:args),
        s(:send, nil, :configure,
          s(:sym, :command),
          s(:nil))))))
