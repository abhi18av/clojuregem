s(:begin,
  s(:module,
    s(:const, nil, :TkEvent), nil),
  s(:send, nil, :require,
    s(:str, "tkutil")),
  s(:if,
    s(:send,
      s(:const, nil, :Object), :const_defined?,
      s(:sym, :TkComm)), nil,
    s(:send, nil, :require,
      s(:str, "tk"))),
  s(:module,
    s(:const, nil, :TkEvent),
    s(:begin,
      s(:class,
        s(:const, nil, :Event),
        s(:const,
          s(:const, nil, :TkUtil), :CallbackSubst),
        s(:begin,
          s(:module,
            s(:const, nil, :Grp),
            s(:begin,
              s(:casgn, nil, :KEY,
                s(:int, 1)),
              s(:casgn, nil, :BUTTON,
                s(:int, 2)),
              s(:casgn, nil, :MOTION,
                s(:int, 4)),
              s(:casgn, nil, :CROSSING,
                s(:int, 8)),
              s(:casgn, nil, :FOCUS,
                s(:int, 16)),
              s(:casgn, nil, :EXPOSE,
                s(:int, 32)),
              s(:casgn, nil, :VISIBILITY,
                s(:int, 64)),
              s(:casgn, nil, :CREATE,
                s(:int, 128)),
              s(:casgn, nil, :DESTROY,
                s(:int, 256)),
              s(:casgn, nil, :UNMAP,
                s(:int, 512)),
              s(:casgn, nil, :MAP,
                s(:int, 1024)),
              s(:casgn, nil, :REPARENT,
                s(:int, 2048)),
              s(:casgn, nil, :CONFIG,
                s(:int, 4096)),
              s(:casgn, nil, :GRAVITY,
                s(:int, 8192)),
              s(:casgn, nil, :CIRC,
                s(:int, 16384)),
              s(:casgn, nil, :PROP,
                s(:int, 32768)),
              s(:casgn, nil, :COLORMAP,
                s(:int, 65536)),
              s(:casgn, nil, :VIRTUAL,
                s(:int, 131072)),
              s(:casgn, nil, :ACTIVATE,
                s(:int, 262144)),
              s(:casgn, nil, :MAPREQ,
                s(:int, 524288)),
              s(:casgn, nil, :CONFIGREQ,
                s(:int, 1048576)),
              s(:casgn, nil, :RESIZEREQ,
                s(:int, 2097152)),
              s(:casgn, nil, :CIRCREQ,
                s(:int, 4194304)),
              s(:casgn, nil, :MWHEEL,
                s(:const, nil, :KEY)),
              s(:casgn, nil, :STRING_DATA,
                s(:int, 2147483648)),
              s(:casgn, nil, :ALL,
                s(:int, 4294967295)),
              s(:casgn, nil, :KEY_BUTTON_MOTION_VIRTUAL,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:const, nil, :KEY), :|,
                          s(:const, nil, :MWHEEL)), :|,
                        s(:const, nil, :BUTTON)), :|,
                      s(:const, nil, :MOTION)), :|,
                    s(:const, nil, :VIRTUAL)))),
              s(:casgn, nil, :KEY_BUTTON_MOTION_CROSSING,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :KEY), :|,
                            s(:const, nil, :MWHEEL)), :|,
                          s(:const, nil, :BUTTON)), :|,
                        s(:const, nil, :MOTION)), :|,
                      s(:const, nil, :CROSSING)), :|,
                    s(:const, nil, :VIRTUAL)))))),
          s(:lvasgn, :type_data,
            s(:array,
              s(:array,
                s(:int, 2),
                s(:sym, :KeyPress),
                s(:const,
                  s(:const, nil, :Grp), :KEY),
                s(:str, "KeyPress"),
                s(:str, "Key")),
              s(:array,
                s(:int, 3),
                s(:sym, :KeyRelease),
                s(:const,
                  s(:const, nil, :Grp), :KEY),
                s(:str, "KeyRelease")),
              s(:array,
                s(:int, 4),
                s(:sym, :ButtonPress),
                s(:const,
                  s(:const, nil, :Grp), :BUTTON),
                s(:str, "ButtonPress"),
                s(:str, "Button")),
              s(:array,
                s(:int, 5),
                s(:sym, :ButtonRelease),
                s(:const,
                  s(:const, nil, :Grp), :BUTTON),
                s(:str, "ButtonRelease")),
              s(:array,
                s(:int, 6),
                s(:sym, :MotionNotify),
                s(:const,
                  s(:const, nil, :Grp), :MOTION),
                s(:str, "Motion")),
              s(:array,
                s(:int, 7),
                s(:sym, :EnterNotify),
                s(:const,
                  s(:const, nil, :Grp), :CROSSING),
                s(:str, "Enter")),
              s(:array,
                s(:int, 8),
                s(:sym, :LeaveNotify),
                s(:const,
                  s(:const, nil, :Grp), :CROSSING),
                s(:str, "Leave")),
              s(:array,
                s(:int, 9),
                s(:sym, :FocusIn),
                s(:const,
                  s(:const, nil, :Grp), :FOCUS),
                s(:str, "FocusIn")),
              s(:array,
                s(:int, 10),
                s(:sym, :FocusOut),
                s(:const,
                  s(:const, nil, :Grp), :FOCUS),
                s(:str, "FocusOut")),
              s(:array,
                s(:int, 11),
                s(:sym, :KeymapNotify),
                s(:int, 0)),
              s(:array,
                s(:int, 12),
                s(:sym, :Expose),
                s(:const,
                  s(:const, nil, :Grp), :EXPOSE),
                s(:str, "Expose")),
              s(:array,
                s(:int, 13),
                s(:sym, :GraphicsExpose),
                s(:const,
                  s(:const, nil, :Grp), :EXPOSE)),
              s(:array,
                s(:int, 14),
                s(:sym, :NoExpose),
                s(:int, 0)),
              s(:array,
                s(:int, 15),
                s(:sym, :VisibilityNotify),
                s(:const,
                  s(:const, nil, :Grp), :VISIBILITY),
                s(:str, "Visibility")),
              s(:array,
                s(:int, 16),
                s(:sym, :CreateNotify),
                s(:const,
                  s(:const, nil, :Grp), :CREATE),
                s(:str, "Create")),
              s(:array,
                s(:int, 17),
                s(:sym, :DestroyNotify),
                s(:const,
                  s(:const, nil, :Grp), :DESTROY),
                s(:str, "Destroy")),
              s(:array,
                s(:int, 18),
                s(:sym, :UnmapNotify),
                s(:const,
                  s(:const, nil, :Grp), :UNMAP),
                s(:str, "Unmap")),
              s(:array,
                s(:int, 19),
                s(:sym, :MapNotify),
                s(:const,
                  s(:const, nil, :Grp), :MAP),
                s(:str, "Map")),
              s(:array,
                s(:int, 20),
                s(:sym, :MapRequest),
                s(:const,
                  s(:const, nil, :Grp), :MAPREQ),
                s(:str, "MapRequest")),
              s(:array,
                s(:int, 21),
                s(:sym, :ReparentNotify),
                s(:const,
                  s(:const, nil, :Grp), :REPARENT),
                s(:str, "Reparent")),
              s(:array,
                s(:int, 22),
                s(:sym, :ConfigureNotify),
                s(:const,
                  s(:const, nil, :Grp), :CONFIG),
                s(:str, "Configure")),
              s(:array,
                s(:int, 23),
                s(:sym, :ConfigureRequest),
                s(:const,
                  s(:const, nil, :Grp), :CONFIGREQ),
                s(:str, "ConfigureRequest")),
              s(:array,
                s(:int, 24),
                s(:sym, :GravityNotify),
                s(:const,
                  s(:const, nil, :Grp), :GRAVITY),
                s(:str, "Gravity")),
              s(:array,
                s(:int, 25),
                s(:sym, :ResizeRequest),
                s(:const,
                  s(:const, nil, :Grp), :RESIZEREQ),
                s(:str, "ResizeRequest")),
              s(:array,
                s(:int, 26),
                s(:sym, :CirculateNotify),
                s(:const,
                  s(:const, nil, :Grp), :CIRC),
                s(:str, "Circulate")),
              s(:array,
                s(:int, 27),
                s(:sym, :CirculateRequest),
                s(:int, 0),
                s(:str, "CirculateRequest")),
              s(:array,
                s(:int, 28),
                s(:sym, :PropertyNotify),
                s(:const,
                  s(:const, nil, :Grp), :PROP),
                s(:str, "Property")),
              s(:array,
                s(:int, 29),
                s(:sym, :SelectionClear),
                s(:int, 0)),
              s(:array,
                s(:int, 30),
                s(:sym, :SelectionRequest),
                s(:int, 0)),
              s(:array,
                s(:int, 31),
                s(:sym, :SelectionNotify),
                s(:int, 0)),
              s(:array,
                s(:int, 32),
                s(:sym, :ColormapNotify),
                s(:const,
                  s(:const, nil, :Grp), :COLORMAP),
                s(:str, "Colormap")),
              s(:array,
                s(:int, 33),
                s(:sym, :ClientMessage),
                s(:int, 0)),
              s(:array,
                s(:int, 34),
                s(:sym, :MappingNotify),
                s(:int, 0)),
              s(:array,
                s(:int, 35),
                s(:sym, :VirtualEvent),
                s(:const,
                  s(:const, nil, :Grp), :VIRTUAL)),
              s(:array,
                s(:int, 36),
                s(:sym, :ActivateNotify),
                s(:const,
                  s(:const, nil, :Grp), :ACTIVATE),
                s(:str, "Activate")),
              s(:array,
                s(:int, 37),
                s(:sym, :DeactivateNotify),
                s(:const,
                  s(:const, nil, :Grp), :ACTIVATE),
                s(:str, "Deactivate")),
              s(:array,
                s(:int, 38),
                s(:sym, :MouseWheelEvent),
                s(:const,
                  s(:const, nil, :Grp), :MWHEEL),
                s(:str, "MouseWheel")),
              s(:array,
                s(:int, 39),
                s(:sym, :TK_LASTEVENT),
                s(:int, 0)))),
          s(:module,
            s(:const, nil, :TypeNum), nil),
          s(:casgn, nil, :TYPE_NAME_TBL,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:casgn, nil, :TYPE_ID_TBL,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:casgn, nil, :TYPE_GROUP_TBL,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:block,
            s(:send,
              s(:lvar, :type_data), :each),
            s(:args,
              s(:arg, :id),
              s(:arg, :c_name),
              s(:arg, :g_flag),
              s(:restarg, :t_names)),
            s(:begin,
              s(:send,
                s(:const, nil, :TypeNum), :const_set,
                s(:lvar, :c_name),
                s(:lvar, :id)),
              s(:block,
                s(:send,
                  s(:lvar, :t_names), :each),
                s(:args,
                  s(:arg, :t_name)),
                s(:begin,
                  s(:send,
                    s(:lvar, :t_name), :freeze),
                  s(:send,
                    s(:const, nil, :TYPE_NAME_TBL), :[]=,
                    s(:lvar, :t_name),
                    s(:lvar, :id)))),
              s(:send,
                s(:const, nil, :TYPE_ID_TBL), :[]=,
                s(:lvar, :id),
                s(:lvar, :t_names)),
              s(:send,
                s(:const, nil, :TYPE_GROUP_TBL), :[]=,
                s(:lvar, :id),
                s(:lvar, :g_flag)))),
          s(:send,
            s(:const, nil, :TYPE_NAME_TBL), :freeze),
          s(:send,
            s(:const, nil, :TYPE_ID_TBL), :freeze),
          s(:defs,
            s(:self), :type_id,
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:const, nil, :TYPE_NAME_TBL), :[],
              s(:send,
                s(:lvar, :name), :to_s))),
          s(:defs,
            s(:self), :type_name,
            s(:args,
              s(:arg, :id)),
            s(:and,
              s(:send,
                s(:const, nil, :TYPE_ID_TBL), :[],
                s(:lvar, :id)),
              s(:send,
                s(:send,
                  s(:const, nil, :TYPE_ID_TBL), :[],
                  s(:lvar, :id)), :[],
                s(:int, 0)))),
          s(:defs,
            s(:self), :group_flag,
            s(:args,
              s(:arg, :id)),
            s(:or,
              s(:send,
                s(:const, nil, :TYPE_GROUP_TBL), :[],
                s(:lvar, :id)),
              s(:int, 0))),
          s(:module,
            s(:const, nil, :StateMask),
            s(:begin,
              s(:casgn, nil, :ShiftMask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 0)))),
              s(:casgn, nil, :LockMask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 1)))),
              s(:casgn, nil, :ControlMask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 2)))),
              s(:casgn, nil, :Mod1Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 3)))),
              s(:casgn, nil, :Mod2Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 4)))),
              s(:casgn, nil, :Mod3Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 5)))),
              s(:casgn, nil, :Mod4Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 6)))),
              s(:casgn, nil, :Mod5Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 7)))),
              s(:casgn, nil, :Button1Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 8)))),
              s(:casgn, nil, :Button2Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 9)))),
              s(:casgn, nil, :Button3Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 10)))),
              s(:casgn, nil, :Button4Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 11)))),
              s(:casgn, nil, :Button5Mask,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 12)))),
              s(:casgn, nil, :AnyModifier,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:int, 15)))),
              s(:casgn, nil, :META_MASK,
                s(:begin,
                  s(:send,
                    s(:const, nil, :AnyModifier), :<<,
                    s(:int, 1)))),
              s(:casgn, nil, :ALT_MASK,
                s(:begin,
                  s(:send,
                    s(:const, nil, :AnyModifier), :<<,
                    s(:int, 2)))),
              s(:casgn, nil, :EXTENDED_MASK,
                s(:begin,
                  s(:send,
                    s(:const, nil, :AnyModifier), :<<,
                    s(:int, 3)))),
              s(:casgn, nil, :CommandMask,
                s(:const, nil, :Mod1Mask)),
              s(:casgn, nil, :OptionMask,
                s(:const, nil, :Mod2Mask)))),
          s(:casgn, nil, :FIELD_FLAG,
            s(:hash,
              s(:pair,
                s(:str, "above"),
                s(:const,
                  s(:const, nil, :Grp), :CONFIG)),
              s(:pair,
                s(:str, "borderwidth"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :CREATE), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CONFIG)))),
              s(:pair,
                s(:str, "button"),
                s(:const,
                  s(:const, nil, :Grp), :BUTTON)),
              s(:pair,
                s(:str, "count"),
                s(:const,
                  s(:const, nil, :Grp), :EXPOSE)),
              s(:pair,
                s(:str, "data"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :VIRTUAL), :|,
                    s(:const,
                      s(:const, nil, :Grp), :STRING_DATA)))),
              s(:pair,
                s(:str, "delta"),
                s(:const,
                  s(:const, nil, :Grp), :MWHEEL)),
              s(:pair,
                s(:str, "detail"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :FOCUS), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CROSSING)))),
              s(:pair,
                s(:str, "focus"),
                s(:const,
                  s(:const, nil, :Grp), :CROSSING)),
              s(:pair,
                s(:str, "height"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :EXPOSE), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CONFIG)))),
              s(:pair,
                s(:str, "keycode"),
                s(:const,
                  s(:const, nil, :Grp), :KEY)),
              s(:pair,
                s(:str, "keysym"),
                s(:const,
                  s(:const, nil, :Grp), :KEY)),
              s(:pair,
                s(:str, "mode"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :CROSSING), :|,
                    s(:const,
                      s(:const, nil, :Grp), :FOCUS)))),
              s(:pair,
                s(:str, "override"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const,
                          s(:const, nil, :Grp), :CREATE), :|,
                        s(:const,
                          s(:const, nil, :Grp), :MAP)), :|,
                      s(:const,
                        s(:const, nil, :Grp), :REPARENT)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CONFIG)))),
              s(:pair,
                s(:str, "place"),
                s(:const,
                  s(:const, nil, :Grp), :CIRC)),
              s(:pair,
                s(:str, "root"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CROSSING)))),
              s(:pair,
                s(:str, "rootx"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CROSSING)))),
              s(:pair,
                s(:str, "rooty"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CROSSING)))),
              s(:pair,
                s(:str, "sendevent"),
                s(:const,
                  s(:const, nil, :Grp), :ALL)),
              s(:pair,
                s(:str, "serial"),
                s(:const,
                  s(:const, nil, :Grp), :ALL)),
              s(:pair,
                s(:str, "state"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                      s(:const,
                        s(:const, nil, :Grp), :CROSSING)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :VISIBILITY)))),
              s(:pair,
                s(:str, "subwindow"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CROSSING)))),
              s(:pair,
                s(:str, "time"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                      s(:const,
                        s(:const, nil, :Grp), :CROSSING)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :PROP)))),
              s(:pair,
                s(:str, "warp"),
                s(:const,
                  s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL)),
              s(:pair,
                s(:str, "width"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Grp), :EXPOSE), :|,
                      s(:const,
                        s(:const, nil, :Grp), :CREATE)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CONFIG)))),
              s(:pair,
                s(:str, "window"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Grp), :CREATE), :|,
                              s(:const,
                                s(:const, nil, :Grp), :UNMAP)), :|,
                            s(:const,
                              s(:const, nil, :Grp), :MAP)), :|,
                          s(:const,
                            s(:const, nil, :Grp), :REPARENT)), :|,
                        s(:const,
                          s(:const, nil, :Grp), :CONFIG)), :|,
                      s(:const,
                        s(:const, nil, :Grp), :GRAVITY)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :CIRC)))),
              s(:pair,
                s(:str, "when"),
                s(:const,
                  s(:const, nil, :Grp), :ALL)),
              s(:pair,
                s(:str, "x"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                              s(:const,
                                s(:const, nil, :Grp), :CROSSING)), :|,
                            s(:const,
                              s(:const, nil, :Grp), :EXPOSE)), :|,
                          s(:const,
                            s(:const, nil, :Grp), :CREATE)), :|,
                        s(:const,
                          s(:const, nil, :Grp), :CONFIG)), :|,
                      s(:const,
                        s(:const, nil, :Grp), :GRAVITY)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :REPARENT)))),
              s(:pair,
                s(:str, "y"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Grp), :KEY_BUTTON_MOTION_VIRTUAL), :|,
                              s(:const,
                                s(:const, nil, :Grp), :CROSSING)), :|,
                            s(:const,
                              s(:const, nil, :Grp), :EXPOSE)), :|,
                          s(:const,
                            s(:const, nil, :Grp), :CREATE)), :|,
                        s(:const,
                          s(:const, nil, :Grp), :CONFIG)), :|,
                      s(:const,
                        s(:const, nil, :Grp), :GRAVITY)), :|,
                    s(:const,
                      s(:const, nil, :Grp), :REPARENT)))))),
          s(:casgn, nil, :FIELD_OPERATION,
            s(:hash,
              s(:pair,
                s(:str, "root"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :val)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:send,
                          s(:const, nil, :Tk), :tk_call_without_enc,
                          s(:str, "winfo"),
                          s(:str, "pathname"),
                          s(:lvar, :val)),
                        s(:lvar, :val)),
                      s(:resbody, nil, nil,
                        s(:nil)), nil)))),
              s(:pair,
                s(:str, "subwindow"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :val)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:begin,
                        s(:send,
                          s(:const, nil, :Tk), :tk_call_without_enc,
                          s(:str, "winfo"),
                          s(:str, "pathname"),
                          s(:lvar, :val)),
                        s(:lvar, :val)),
                      s(:resbody, nil, nil,
                        s(:nil)), nil)))),
              s(:pair,
                s(:str, "window"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :val)),
                  s(:nil))))),
          s(:def, :valid_fields,
            s(:args,
              s(:optarg, :group_flag,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:lvar, :group_flag), nil,
                s(:lvasgn, :group_flag,
                  s(:send,
                    s(:send,
                      s(:self), :class), :group_flag,
                    s(:send,
                      s(:self), :type)))),
              s(:lvasgn, :fields,
                s(:hash)),
              s(:block,
                s(:send,
                  s(:const, nil, :FIELD_FLAG), :each),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :flag)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :flag), :&,
                          s(:lvar, :group_flag))), :==,
                      s(:int, 0)),
                    s(:next), nil),
                  s(:kwbegin,
                    s(:rescue,
                      s(:lvasgn, :val,
                        s(:send,
                          s(:self), :__send__,
                          s(:lvar, :key))),
                      s(:resbody, nil, nil,
                        s(:next)), nil)),
                  s(:if,
                    s(:or,
                      s(:send,
                        s(:lvar, :val), :!),
                      s(:begin,
                        s(:and,
                          s(:send,
                            s(:lvar, :val), :==,
                            s(:str, "??")),
                          s(:begin,
                            s(:send,
                              s(:lvar, :flag), :&,
                              s(:const,
                                s(:const, nil, :Grp), :STRING_DATA)))))),
                    s(:next), nil),
                  s(:send,
                    s(:lvar, :fields), :[]=,
                    s(:lvar, :key),
                    s(:lvar, :val)))),
              s(:lvar, :fields))),
          s(:def, :valid_for_generate,
            s(:args,
              s(:optarg, :group_flag,
                s(:nil))),
            s(:begin,
              s(:lvasgn, :fields,
                s(:send, nil, :valid_fields,
                  s(:lvar, :group_flag))),
              s(:block,
                s(:send,
                  s(:const, nil, :FIELD_OPERATION), :each),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :cmd)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :fields), :has_key?,
                      s(:lvar, :key)), nil,
                    s(:next)),
                  s(:lvasgn, :val,
                    s(:send,
                      s(:send,
                        s(:const, nil, :FIELD_OPERATION), :[],
                        s(:lvar, :key)), :call,
                      s(:send,
                        s(:lvar, :fields), :[],
                        s(:lvar, :key)))),
                  s(:if,
                    s(:lvar, :val),
                    s(:send,
                      s(:lvar, :fields), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :val)),
                    s(:send,
                      s(:lvar, :fields), :delete,
                      s(:lvar, :key))))),
              s(:lvar, :fields))),
          s(:def, :generate,
            s(:args,
              s(:arg, :win),
              s(:optarg, :modkeys,
                s(:hash))),
            s(:begin,
              s(:lvasgn, :klass,
                s(:send,
                  s(:self), :class)),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :modkeys), :has_key?,
                    s(:sym, :type)),
                  s(:send,
                    s(:lvar, :modkeys), :has_key?,
                    s(:str, "type"))),
                s(:begin,
                  s(:lvasgn, :modkeys,
                    s(:send,
                      s(:const, nil, :TkComm), :_symbolkey2str,
                      s(:lvar, :modkeys))),
                  s(:lvasgn, :type_id,
                    s(:send,
                      s(:lvar, :modkeys), :delete,
                      s(:str, "type")))),
                s(:lvasgn, :type_id,
                  s(:send,
                    s(:self), :type))),
              s(:lvasgn, :type_name,
                s(:send,
                  s(:lvar, :klass), :type_name,
                  s(:lvar, :type_id))),
              s(:if,
                s(:lvar, :type_name), nil,
                s(:send, nil, :fail,
                  s(:const, nil, :RuntimeError),
                  s(:dstr,
                    s(:str, "type_id "),
                    s(:begin,
                      s(:lvar, :type_id)),
                    s(:str, " is invalid")))),
              s(:lvasgn, :group_flag,
                s(:send,
                  s(:lvar, :klass), :group_flag,
                  s(:lvar, :type_id))),
              s(:lvasgn, :opts,
                s(:send, nil, :valid_for_generate,
                  s(:lvar, :group_flag))),
              s(:block,
                s(:send,
                  s(:lvar, :modkeys), :each),
                s(:args,
                  s(:arg, :key),
                  s(:arg, :val)),
                s(:if,
                  s(:lvar, :val),
                  s(:send,
                    s(:lvar, :opts), :[]=,
                    s(:send,
                      s(:lvar, :key), :to_s),
                    s(:lvar, :val)),
                  s(:send,
                    s(:lvar, :opts), :delete,
                    s(:send,
                      s(:lvar, :key), :to_s)))),
              s(:if,
                s(:send,
                  s(:lvar, :group_flag), :!=,
                  s(:const,
                    s(:const, nil, :Grp), :KEY)),
                s(:send,
                  s(:const, nil, :Tk), :event_generate,
                  s(:lvar, :win),
                  s(:lvar, :type_name),
                  s(:lvar, :opts)),
                s(:begin,
                  s(:lvasgn, :w,
                    s(:send,
                      s(:const, nil, :Tk), :tk_call_without_enc,
                      s(:str, "focus"))),
                  s(:kwbegin,
                    s(:ensure,
                      s(:begin,
                        s(:send,
                          s(:const, nil, :Tk), :tk_call_without_enc,
                          s(:str, "focus"),
                          s(:lvar, :win)),
                        s(:send,
                          s(:const, nil, :Tk), :event_generate,
                          s(:lvar, :win),
                          s(:lvar, :type_name),
                          s(:lvar, :opts))),
                      s(:send,
                        s(:const, nil, :Tk), :tk_call_without_enc,
                        s(:str, "focus"),
                        s(:lvar, :w)))))))),
          s(:casgn, nil, :KEY_TBL,
            s(:array,
              s(:array,
                s(:str, "#"),
                s(:str, "n"),
                s(:sym, :serial)),
              s(:array,
                s(:str, "a"),
                s(:str, "s"),
                s(:sym, :above)),
              s(:array,
                s(:str, "b"),
                s(:str, "n"),
                s(:sym, :num)),
              s(:array,
                s(:str, "c"),
                s(:str, "n"),
                s(:sym, :count)),
              s(:array,
                s(:str, "d"),
                s(:str, "s"),
                s(:sym, :detail)),
              s(:array,
                s(:str, "f"),
                s(:str, "b"),
                s(:sym, :focus)),
              s(:array,
                s(:str, "h"),
                s(:str, "n"),
                s(:sym, :height)),
              s(:array,
                s(:str, "i"),
                s(:str, "s"),
                s(:sym, :win_hex)),
              s(:array,
                s(:str, "k"),
                s(:str, "n"),
                s(:sym, :keycode)),
              s(:array,
                s(:str, "m"),
                s(:str, "s"),
                s(:sym, :mode)),
              s(:array,
                s(:str, "o"),
                s(:str, "b"),
                s(:sym, :override)),
              s(:array,
                s(:str, "p"),
                s(:str, "s"),
                s(:sym, :place)),
              s(:array,
                s(:str, "s"),
                s(:str, "x"),
                s(:sym, :state)),
              s(:array,
                s(:str, "t"),
                s(:str, "n"),
                s(:sym, :time)),
              s(:array,
                s(:str, "v"),
                s(:str, "n"),
                s(:sym, :value_mask)),
              s(:array,
                s(:str, "w"),
                s(:str, "n"),
                s(:sym, :width)),
              s(:array,
                s(:str, "x"),
                s(:str, "n"),
                s(:sym, :x)),
              s(:array,
                s(:str, "y"),
                s(:str, "n"),
                s(:sym, :y)),
              s(:array,
                s(:str, "A"),
                s(:str, "s"),
                s(:sym, :char)),
              s(:array,
                s(:str, "B"),
                s(:str, "n"),
                s(:sym, :borderwidth)),
              s(:array,
                s(:str, "D"),
                s(:str, "n"),
                s(:sym, :wheel_delta)),
              s(:array,
                s(:str, "E"),
                s(:str, "b"),
                s(:sym, :send_event)),
              s(:array,
                s(:str, "K"),
                s(:str, "s"),
                s(:sym, :keysym)),
              s(:array,
                s(:str, "N"),
                s(:str, "n"),
                s(:sym, :keysym_num)),
              s(:array,
                s(:str, "P"),
                s(:str, "s"),
                s(:sym, :property)),
              s(:array,
                s(:str, "R"),
                s(:str, "s"),
                s(:sym, :rootwin_id)),
              s(:array,
                s(:str, "S"),
                s(:str, "s"),
                s(:sym, :subwindow)),
              s(:array,
                s(:str, "T"),
                s(:str, "n"),
                s(:sym, :type)),
              s(:array,
                s(:str, "W"),
                s(:str, "w"),
                s(:sym, :widget)),
              s(:array,
                s(:str, "X"),
                s(:str, "n"),
                s(:sym, :x_root)),
              s(:array,
                s(:str, "Y"),
                s(:str, "n"),
                s(:sym, :y_root)),
              s(:nil))),
          s(:casgn, nil, :LONGKEY_TBL,
            s(:array)),
          s(:casgn, nil, :PROC_TBL,
            s(:array,
              s(:array,
                s(:str, "n"),
                s(:send,
                  s(:const, nil, :TkComm), :method,
                  s(:sym, :num_or_str))),
              s(:array,
                s(:str, "s"),
                s(:send,
                  s(:const, nil, :TkComm), :method,
                  s(:sym, :string))),
              s(:array,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :TkComm), :method,
                  s(:sym, :bool))),
              s(:array,
                s(:str, "w"),
                s(:send,
                  s(:const, nil, :TkComm), :method,
                  s(:sym, :window))),
              s(:array,
                s(:str, "x"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :val)),
                  s(:kwbegin,
                    s(:rescue,
                      s(:send,
                        s(:const, nil, :TkComm), :number,
                        s(:lvar, :val)),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :ArgumentError)), nil,
                        s(:lvar, :val)), nil)))),
              s(:nil))),
          s(:send, nil, :_setup_subst_table,
            s(:const, nil, :KEY_TBL),
            s(:const, nil, :PROC_TBL)),
          s(:casgn, nil, :ALIAS_TBL,
            s(:hash,
              s(:pair,
                s(:sym, :button),
                s(:sym, :num)),
              s(:pair,
                s(:sym, :data),
                s(:sym, :detail)),
              s(:pair,
                s(:sym, :delta),
                s(:sym, :wheel_delta)),
              s(:pair,
                s(:sym, :root),
                s(:sym, :rootwin_id)),
              s(:pair,
                s(:sym, :rootx),
                s(:sym, :x_root)),
              s(:pair,
                s(:sym, :root_x),
                s(:sym, :x_root)),
              s(:pair,
                s(:sym, :rooty),
                s(:sym, :y_root)),
              s(:pair,
                s(:sym, :root_y),
                s(:sym, :y_root)),
              s(:pair,
                s(:sym, :sendevent),
                s(:sym, :send_event)),
              s(:pair,
                s(:sym, :window),
                s(:sym, :widget)))),
          s(:send, nil, :_define_attribute_aliases,
            s(:const, nil, :ALIAS_TBL)))),
      s(:def, :install_bind_for_event_class,
        s(:args,
          s(:arg, :klass),
          s(:arg, :cmd),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :extra_args_tbl,
            s(:send,
              s(:lvar, :klass), :_get_extra_args_tbl)),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :args), :compact), :size), :>,
              s(:int, 0)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :args), :map!),
                s(:args,
                  s(:arg, :arg)),
                s(:send,
                  s(:lvar, :klass), :_sym2subst,
                  s(:lvar, :arg))),
              s(:lvasgn, :args,
                s(:send,
                  s(:lvar, :args), :join,
                  s(:str, " "))),
              s(:lvasgn, :keys,
                s(:send,
                  s(:lvar, :klass), :_get_subst_key,
                  s(:lvar, :args))),
              s(:if,
                s(:send,
                  s(:lvar, :cmd), :kind_of?,
                  s(:const, nil, :String)),
                s(:lvasgn, :id,
                  s(:lvar, :cmd)),
                s(:if,
                  s(:send,
                    s(:lvar, :cmd), :kind_of?,
                    s(:const, nil, :TkCallbackEntry)),
                  s(:lvasgn, :id,
                    s(:send, nil, :install_cmd,
                      s(:lvar, :cmd))),
                  s(:lvasgn, :id,
                    s(:send, nil, :install_cmd,
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args,
                          s(:restarg, :arg)),
                        s(:begin,
                          s(:lvasgn, :ex_args,
                            s(:array)),
                          s(:block,
                            s(:send,
                              s(:lvar, :extra_args_tbl), :reverse_each),
                            s(:args,
                              s(:arg, :conv)),
                            s(:send,
                              s(:lvar, :ex_args), :<<,
                              s(:send,
                                s(:lvar, :conv), :call,
                                s(:send,
                                  s(:lvar, :arg), :pop)))),
                          s(:kwbegin,
                            s(:rescue,
                              s(:send,
                                s(:const, nil, :TkUtil), :eval_cmd,
                                s(:lvar, :cmd),
                                s(:splat,
                                  s(:begin,
                                    s(:send,
                                      s(:lvar, :ex_args), :concat,
                                      s(:send,
                                        s(:lvar, :klass), :scan_args,
                                        s(:lvar, :keys),
                                        s(:lvar, :arg)))))),
                              s(:resbody,
                                s(:array,
                                  s(:const, nil, :Exception)),
                                s(:lvasgn, :e),
                                s(:if,
                                  s(:send,
                                    s(:const,
                                      s(:const, nil, :TkCore), :INTERP), :kind_of?,
                                    s(:const, nil, :TclTkIp)),
                                  s(:send, nil, :fail,
                                    s(:lvar, :e)),
                                  s(:send, nil, :fail,
                                    s(:const, nil, :Exception),
                                    s(:dstr,
                                      s(:begin,
                                        s(:send,
                                          s(:lvar, :e), :class)),
                                      s(:str, ": "),
                                      s(:begin,
                                        s(:send,
                                          s(:send,
                                            s(:lvar, :e), :message), :dup)))))), nil))))))))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :cmd), :respond_to?,
                  s(:sym, :arity)),
                s(:send,
                  s(:send,
                    s(:lvar, :cmd), :arity), :==,
                  s(:int, 0))),
              s(:begin,
                s(:lvasgn, :args,
                  s(:str, "")),
                s(:if,
                  s(:send,
                    s(:lvar, :cmd), :kind_of?,
                    s(:const, nil, :String)),
                  s(:lvasgn, :id,
                    s(:lvar, :cmd)),
                  s(:if,
                    s(:send,
                      s(:lvar, :cmd), :kind_of?,
                      s(:const, nil, :TkCallbackEntry)),
                    s(:lvasgn, :id,
                      s(:send, nil, :install_cmd,
                        s(:lvar, :cmd))),
                    s(:lvasgn, :id,
                      s(:send, nil, :install_cmd,
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:kwbegin,
                            s(:rescue,
                              s(:send,
                                s(:const, nil, :TkUtil), :eval_cmd,
                                s(:lvar, :cmd)),
                              s(:resbody,
                                s(:array,
                                  s(:const, nil, :Exception)),
                                s(:lvasgn, :e),
                                s(:if,
                                  s(:send,
                                    s(:const,
                                      s(:const, nil, :TkCore), :INTERP), :kind_of?,
                                    s(:const, nil, :TclTkIp)),
                                  s(:send, nil, :fail,
                                    s(:lvar, :e)),
                                  s(:send, nil, :fail,
                                    s(:const, nil, :Exception),
                                    s(:dstr,
                                      s(:begin,
                                        s(:send,
                                          s(:lvar, :e), :class)),
                                      s(:str, ": "),
                                      s(:begin,
                                        s(:send,
                                          s(:send,
                                            s(:lvar, :e), :message), :dup)))))), nil)))))))),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :keys),
                    s(:lvasgn, :args)),
                  s(:send,
                    s(:lvar, :klass), :_get_all_subst_keys)),
                s(:if,
                  s(:send,
                    s(:lvar, :cmd), :kind_of?,
                    s(:const, nil, :String)),
                  s(:lvasgn, :id,
                    s(:lvar, :cmd)),
                  s(:if,
                    s(:send,
                      s(:lvar, :cmd), :kind_of?,
                      s(:const, nil, :TkCallbackEntry)),
                    s(:lvasgn, :id,
                      s(:send, nil, :install_cmd,
                        s(:lvar, :cmd))),
                    s(:lvasgn, :id,
                      s(:send, nil, :install_cmd,
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args,
                            s(:restarg, :arg)),
                          s(:begin,
                            s(:lvasgn, :ex_args,
                              s(:array)),
                            s(:block,
                              s(:send,
                                s(:lvar, :extra_args_tbl), :reverse_each),
                              s(:args,
                                s(:arg, :conv)),
                              s(:send,
                                s(:lvar, :ex_args), :<<,
                                s(:send,
                                  s(:lvar, :conv), :call,
                                  s(:send,
                                    s(:lvar, :arg), :pop)))),
                            s(:kwbegin,
                              s(:rescue,
                                s(:send,
                                  s(:const, nil, :TkUtil), :eval_cmd,
                                  s(:lvar, :cmd),
                                  s(:splat,
                                    s(:begin,
                                      s(:send,
                                        s(:lvar, :ex_args), :<<,
                                        s(:send,
                                          s(:lvar, :klass), :new,
                                          s(:splat,
                                            s(:send,
                                              s(:lvar, :klass), :scan_args,
                                              s(:lvar, :keys),
                                              s(:lvar, :arg)))))))),
                                s(:resbody,
                                  s(:array,
                                    s(:const, nil, :Exception)),
                                  s(:lvasgn, :e),
                                  s(:if,
                                    s(:send,
                                      s(:const,
                                        s(:const, nil, :TkCore), :INTERP), :kind_of?,
                                      s(:const, nil, :TclTkIp)),
                                    s(:send, nil, :fail,
                                      s(:lvar, :e)),
                                    s(:send, nil, :fail,
                                      s(:const, nil, :Exception),
                                      s(:dstr,
                                        s(:begin,
                                          s(:send,
                                            s(:lvar, :e), :class)),
                                        s(:str, ": "),
                                        s(:begin,
                                          s(:send,
                                            s(:send,
                                              s(:lvar, :e), :message), :dup)))))), nil))))))))))),
          s(:if,
            s(:send,
              s(:const,
                s(:const, nil, :TkCore), :INTERP), :kind_of?,
              s(:const, nil, :TclTkIp)),
            s(:send,
              s(:send,
                s(:lvar, :id), :+,
                s(:str, " ")), :+,
              s(:lvar, :args)),
            s(:dstr,
              s(:str, "if {[set st [catch {"),
              s(:begin,
                s(:lvar, :id)),
              s(:str, " "),
              s(:begin,
                s(:lvar, :args)),
              s(:str, "} ret]] != 0} {\n"),
              s(:str, "         if {$st == 4} {\n"),
              s(:str, "           return -code continue $ret\n"),
              s(:str, "         } elseif {$st == 3} {\n"),
              s(:str, "           return -code break $ret\n"),
              s(:str, "         } elseif {$st == 2} {\n"),
              s(:str, "           return -code return $ret\n"),
              s(:str, "         } elseif {[regexp {^Exception: (TkCallbackContinue: .*)$} \n                                                               $ret m msg]} {\n"),
              s(:str, "           return -code continue $msg\n"),
              s(:str, "         } elseif {[regexp {^Exception: (TkCallbackBreak: .*)$} $ret m msg]} {\n"),
              s(:str, "           return -code break $msg\n"),
              s(:str, "         } elseif {[regexp {^Exception: (TkCallbackReturn: .*)$} $ret m msg]} {\n"),
              s(:str, "           return -code return $msg\n"),
              s(:str, "         } elseif {[regexp {^Exception: (\\S+: .*)$} $ret m msg]} {\n"),
              s(:str, "           return -code return $msg\n"),
              s(:str, "         } else {\n"),
              s(:str, "           return -code error $ret\n"),
              s(:str, "         }\n"),
              s(:str, "       } else {\n"),
              s(:str, "          set ret\n"),
              s(:str, "       }"))))),
      s(:def, :install_bind,
        s(:args,
          s(:arg, :cmd),
          s(:restarg, :args)),
        s(:send, nil, :install_bind_for_event_class,
          s(:const,
            s(:const, nil, :TkEvent), :Event),
          s(:lvar, :cmd),
          s(:splat,
            s(:lvar, :args)))))))
