s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const, nil, :TkGrid),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Tk)),
      s(:send, nil, :extend,
        s(:const, nil, :Tk)),
      s(:casgn, nil, :TkCommandNames,
        s(:send,
          s(:array,
            s(:send,
              s(:str, "grid"), :freeze)), :freeze)),
      s(:def, :anchor,
        s(:args,
          s(:arg, :master),
          s(:optarg, :anchor,
            s(:const, nil, :None))),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send, nil, :tk_call_without_enc,
            s(:str, "grid"),
            s(:str, "anchor"),
            s(:lvar, :master),
            s(:lvar, :anchor)))),
      s(:def, :bbox,
        s(:args,
          s(:arg, :master),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send,
            s(:lvar, :args), :unshift,
            s(:lvar, :master)),
          s(:send, nil, :list,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "grid"),
              s(:str, "bbox"),
              s(:splat,
                s(:lvar, :args)))))),
      s(:def, :configure,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:lvasgn, :opts,
              s(:send,
                s(:lvar, :args), :pop)),
            s(:lvasgn, :opts,
              s(:hash))),
          s(:if,
            s(:send,
              s(:lvar, :args), :empty?),
            s(:send, nil, :fail,
              s(:const, nil, :ArgumentError),
              s(:str, "no widget is given")), nil),
          s(:lvasgn, :params,
            s(:array)),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :args), :flatten,
                s(:int, 1)), :each),
            s(:args,
              s(:arg, :win)),
            s(:case,
              s(:lvar, :win),
              s(:when,
                s(:str, "-"),
                s(:str, "-"),
                s(:send,
                  s(:lvar, :params), :push,
                  s(:str, "-"))),
              s(:when,
                s(:regexp,
                  s(:str, "^-+$"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :params), :concat,
                  s(:send,
                    s(:send,
                      s(:lvar, :win), :to_s), :split,
                    s(:regexp,
                      s(:regopt))))),
              s(:when,
                s(:str, "^"),
                s(:str, "^"),
                s(:send,
                  s(:lvar, :params), :push,
                  s(:str, "^"))),
              s(:when,
                s(:regexp,
                  s(:str, "^\\^+$"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :params), :concat,
                  s(:send,
                    s(:send,
                      s(:lvar, :win), :to_s), :split,
                    s(:regexp,
                      s(:regopt))))),
              s(:when,
                s(:str, "x"),
                s(:sym, :x),
                s(:str, "x"),
                s(:nil),
                s(:str, ""),
                s(:send,
                  s(:lvar, :params), :push,
                  s(:str, "x"))),
              s(:when,
                s(:regexp,
                  s(:str, "^x+$"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :params), :concat,
                  s(:send,
                    s(:send,
                      s(:lvar, :win), :to_s), :split,
                    s(:regexp,
                      s(:regopt))))),
              s(:send,
                s(:lvar, :params), :push,
                s(:send, nil, :_epath,
                  s(:lvar, :win))))),
          s(:block,
            s(:send,
              s(:lvar, :opts), :each),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:begin,
              s(:send,
                s(:lvar, :params), :push,
                s(:dstr,
                  s(:str, "-"),
                  s(:begin,
                    s(:lvar, :k)))),
              s(:send,
                s(:lvar, :params), :push,
                s(:send, nil, :_epath,
                  s(:lvar, :v))))),
          s(:if,
            s(:or,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :<,
                s(:int, 8)),
              s(:begin,
                s(:and,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Tk), :TCL_MAJOR_VERSION), :==,
                    s(:int, 8)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Tk), :TCL_MINOR_VERSION), :<=,
                    s(:int, 3))))),
            s(:if,
              s(:or,
                s(:or,
                  s(:send,
                    s(:send,
                      s(:lvar, :params), :[],
                      s(:int, 0)), :==,
                    s(:str, "-")),
                  s(:send,
                    s(:send,
                      s(:lvar, :params), :[],
                      s(:int, 0)), :==,
                    s(:str, "x"))),
                s(:send,
                  s(:send,
                    s(:lvar, :params), :[],
                    s(:int, 0)), :==,
                  s(:str, "^"))),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "grid"),
                s(:splat,
                  s(:lvar, :params))),
              s(:send, nil, :tk_call_without_enc,
                s(:str, "grid"),
                s(:str, "configure"),
                s(:splat,
                  s(:lvar, :params)))),
            s(:send, nil, :tk_call_without_enc,
              s(:str, "grid"),
              s(:str, "configure"),
              s(:splat,
                s(:lvar, :params)))))),
      s(:alias,
        s(:sym, :grid),
        s(:sym, :configure)),
      s(:def, :columnconfigure,
        s(:args,
          s(:arg, :master),
          s(:arg, :index),
          s(:arg, :args)),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send, nil, :tk_call_without_enc,
            s(:str, "grid"),
            s(:str, "columnconfigure"),
            s(:lvar, :master),
            s(:lvar, :index),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :args)))))),
      s(:def, :rowconfigure,
        s(:args,
          s(:arg, :master),
          s(:arg, :index),
          s(:arg, :args)),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send, nil, :tk_call_without_enc,
            s(:str, "grid"),
            s(:str, "rowconfigure"),
            s(:lvar, :master),
            s(:lvar, :index),
            s(:splat,
              s(:send, nil, :hash_kv,
                s(:lvar, :args)))))),
      s(:def, :columnconfiginfo,
        s(:args,
          s(:arg, :master),
          s(:arg, :index),
          s(:optarg, :slot,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:if,
            s(:lvar, :slot),
            s(:case,
              s(:lvar, :slot),
              s(:when,
                s(:str, "uniform"),
                s(:sym, :uniform),
                s(:send, nil, :tk_call_without_enc,
                  s(:str, "grid"),
                  s(:str, "columnconfigure"),
                  s(:lvar, :master),
                  s(:lvar, :index),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :slot))))),
              s(:send, nil, :num_or_str,
                s(:send, nil, :tk_call_without_enc,
                  s(:str, "grid"),
                  s(:str, "columnconfigure"),
                  s(:lvar, :master),
                  s(:lvar, :index),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :slot)))))),
            s(:begin,
              s(:lvasgn, :ilist,
                s(:send, nil, :simplelist,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "grid"),
                    s(:str, "columnconfigure"),
                    s(:lvar, :master),
                    s(:lvar, :index)))),
              s(:lvasgn, :info,
                s(:hash)),
              s(:while,
                s(:lvasgn, :key,
                  s(:send,
                    s(:lvar, :ilist), :shift)),
                s(:case,
                  s(:lvar, :key),
                  s(:when,
                    s(:str, "uniform"),
                    s(:send,
                      s(:lvar, :info), :[]=,
                      s(:send,
                        s(:lvar, :key), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1))),
                      s(:send,
                        s(:lvar, :ilist), :shift))),
                  s(:send,
                    s(:lvar, :info), :[]=,
                    s(:send,
                      s(:lvar, :key), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1))),
                    s(:send, nil, :tk_tcl2ruby,
                      s(:send,
                        s(:lvar, :ilist), :shift))))),
              s(:lvar, :info))))),
      s(:def, :rowconfiginfo,
        s(:args,
          s(:arg, :master),
          s(:arg, :index),
          s(:optarg, :slot,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:if,
            s(:lvar, :slot),
            s(:case,
              s(:lvar, :slot),
              s(:when,
                s(:str, "uniform"),
                s(:sym, :uniform),
                s(:send, nil, :tk_call_without_enc,
                  s(:str, "grid"),
                  s(:str, "rowconfigure"),
                  s(:lvar, :master),
                  s(:lvar, :index),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :slot))))),
              s(:send, nil, :num_or_str,
                s(:send, nil, :tk_call_without_enc,
                  s(:str, "grid"),
                  s(:str, "rowconfigure"),
                  s(:lvar, :master),
                  s(:lvar, :index),
                  s(:dstr,
                    s(:str, "-"),
                    s(:begin,
                      s(:lvar, :slot)))))),
            s(:begin,
              s(:lvasgn, :ilist,
                s(:send, nil, :simplelist,
                  s(:send, nil, :tk_call_without_enc,
                    s(:str, "grid"),
                    s(:str, "rowconfigure"),
                    s(:lvar, :master),
                    s(:lvar, :index)))),
              s(:lvasgn, :info,
                s(:hash)),
              s(:while,
                s(:lvasgn, :key,
                  s(:send,
                    s(:lvar, :ilist), :shift)),
                s(:case,
                  s(:lvar, :key),
                  s(:when,
                    s(:str, "uniform"),
                    s(:send,
                      s(:lvar, :info), :[]=,
                      s(:send,
                        s(:lvar, :key), :[],
                        s(:irange,
                          s(:int, 1),
                          s(:int, -1))),
                      s(:send,
                        s(:lvar, :ilist), :shift))),
                  s(:send,
                    s(:lvar, :info), :[]=,
                    s(:send,
                      s(:lvar, :key), :[],
                      s(:irange,
                        s(:int, 1),
                        s(:int, -1))),
                    s(:send, nil, :tk_tcl2ruby,
                      s(:send,
                        s(:lvar, :ilist), :shift))))),
              s(:lvar, :info))))),
      s(:def, :column,
        s(:args,
          s(:arg, :master),
          s(:arg, :index),
          s(:optarg, :keys,
            s(:nil))),
        s(:if,
          s(:send,
            s(:lvar, :keys), :kind_of?,
            s(:const, nil, :Hash)),
          s(:send, nil, :columnconfigure,
            s(:lvar, :master),
            s(:lvar, :index),
            s(:lvar, :keys)),
          s(:send, nil, :columnconfiginfo,
            s(:lvar, :master),
            s(:lvar, :index),
            s(:lvar, :keys)))),
      s(:def, :row,
        s(:args,
          s(:arg, :master),
          s(:arg, :index),
          s(:optarg, :keys,
            s(:nil))),
        s(:if,
          s(:send,
            s(:lvar, :keys), :kind_of?,
            s(:const, nil, :Hash)),
          s(:send, nil, :rowconfigure,
            s(:lvar, :master),
            s(:lvar, :index),
            s(:lvar, :keys)),
          s(:send, nil, :rowconfiginfo,
            s(:lvar, :master),
            s(:lvar, :index),
            s(:lvar, :keys)))),
      s(:def, :add,
        s(:args,
          s(:arg, :widget),
          s(:restarg, :args)),
        s(:send, nil, :configure,
          s(:lvar, :widget),
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :forget,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :size), :==,
              s(:int, 0)),
            s(:return,
              s(:str, "")), nil),
          s(:lvasgn, :wins,
            s(:block,
              s(:send,
                s(:lvar, :args), :collect),
              s(:args,
                s(:arg, :win)),
              s(:send, nil, :_epath,
                s(:lvar, :win)))),
          s(:send, nil, :tk_call_without_enc,
            s(:str, "grid"),
            s(:str, "forget"),
            s(:splat,
              s(:lvar, :wins))))),
      s(:def, :info,
        s(:args,
          s(:arg, :slave)),
        s(:begin,
          s(:lvasgn, :slave,
            s(:send, nil, :_epath,
              s(:lvar, :slave))),
          s(:lvasgn, :ilist,
            s(:send, nil, :simplelist,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "grid"),
                s(:str, "info"),
                s(:lvar, :slave)))),
          s(:lvasgn, :info,
            s(:hash)),
          s(:while,
            s(:lvasgn, :key,
              s(:send,
                s(:lvar, :ilist), :shift)),
            s(:send,
              s(:lvar, :info), :[]=,
              s(:send,
                s(:lvar, :key), :[],
                s(:irange,
                  s(:int, 1),
                  s(:int, -1))),
              s(:send, nil, :tk_tcl2ruby,
                s(:send,
                  s(:lvar, :ilist), :shift)))),
          s(:return,
            s(:lvar, :info)))),
      s(:def, :location,
        s(:args,
          s(:arg, :master),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send, nil, :list,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "grid"),
              s(:str, "location"),
              s(:lvar, :master),
              s(:lvar, :x),
              s(:lvar, :y))))),
      s(:def, :propagate,
        s(:args,
          s(:arg, :master),
          s(:optarg, :mode,
            s(:const, nil, :None))),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:if,
            s(:send,
              s(:lvar, :mode), :==,
              s(:const, nil, :None)),
            s(:send, nil, :bool,
              s(:send, nil, :tk_call_without_enc,
                s(:str, "grid"),
                s(:str, "propagate"),
                s(:lvar, :master))),
            s(:send, nil, :tk_call_without_enc,
              s(:str, "grid"),
              s(:str, "propagate"),
              s(:lvar, :master),
              s(:lvar, :mode))))),
      s(:def, :remove,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :size), :==,
              s(:int, 0)),
            s(:return,
              s(:str, "")), nil),
          s(:lvasgn, :wins,
            s(:block,
              s(:send,
                s(:lvar, :args), :collect),
              s(:args,
                s(:arg, :win)),
              s(:send, nil, :_epath,
                s(:lvar, :win)))),
          s(:send, nil, :tk_call_without_enc,
            s(:str, "grid"),
            s(:str, "remove"),
            s(:splat,
              s(:lvar, :wins))))),
      s(:def, :size,
        s(:args,
          s(:arg, :master)),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send, nil, :list,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "grid"),
              s(:str, "size"),
              s(:lvar, :master))))),
      s(:def, :slaves,
        s(:args,
          s(:arg, :master),
          s(:optarg, :keys,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :master,
            s(:send, nil, :_epath,
              s(:lvar, :master))),
          s(:send, nil, :list,
            s(:send, nil, :tk_call_without_enc,
              s(:str, "grid"),
              s(:str, "slaves"),
              s(:lvar, :master),
              s(:splat,
                s(:send, nil, :hash_kv,
                  s(:send, nil, :args))))))),
      s(:send, nil, :module_function,
        s(:sym, :anchor),
        s(:sym, :bbox),
        s(:sym, :add),
        s(:sym, :forget),
        s(:sym, :propagate),
        s(:sym, :info)),
      s(:send, nil, :module_function,
        s(:sym, :remove),
        s(:sym, :size),
        s(:sym, :slaves),
        s(:sym, :location)),
      s(:send, nil, :module_function,
        s(:sym, :grid),
        s(:sym, :configure),
        s(:sym, :columnconfigure),
        s(:sym, :rowconfigure)),
      s(:send, nil, :module_function,
        s(:sym, :column),
        s(:sym, :row),
        s(:sym, :columnconfiginfo),
        s(:sym, :rowconfiginfo)))))
