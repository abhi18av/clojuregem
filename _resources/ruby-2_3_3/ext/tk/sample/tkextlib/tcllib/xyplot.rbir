s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tcllib/plotchart")),
  s(:block,
    s(:send,
      s(:const, nil, :TkCanvas), :new,
      s(:hash,
        s(:pair,
          s(:sym, :background),
          s(:str, "white")),
        s(:pair,
          s(:sym, :width),
          s(:int, 400)),
        s(:pair,
          s(:sym, :height),
          s(:int, 200)))),
    s(:args,
      s(:arg, :c)),
    s(:begin,
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)))),
      s(:block,
        s(:send,
          s(:const,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tcllib), :Plotchart), :XYPlot), :new,
          s(:lvar, :c),
          s(:array,
            s(:float, 0.0),
            s(:float, 100.0),
            s(:float, 10.0)),
          s(:array,
            s(:float, 0.0),
            s(:float, 100.0),
            s(:float, 20.0))),
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:array,
                s(:array,
                  s(:float, 0.0),
                  s(:float, 32.0)),
                s(:array,
                  s(:float, 10.0),
                  s(:float, 50.0)),
                s(:array,
                  s(:float, 25.0),
                  s(:float, 60.0)),
                s(:array,
                  s(:float, 78.0),
                  s(:float, 11.0))), :each),
            s(:args,
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :plot,
              s(:str, "series1"),
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:send, nil, :title,
            s(:str, "Data series")))))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
