s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:lvasgn, :demodir,
    s(:send,
      s(:const, nil, :File), :dirname,
      s(:gvar, :$0))),
  s(:lvasgn, :themesdir,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :demodir),
      s(:str, "themes"))),
  s(:send,
    s(:const,
      s(:const, nil, :Tk), :AUTO_PATH), :lappend,
    s(:str, "."),
    s(:lvar, :demodir),
    s(:lvar, :themesdir)),
  s(:block,
    s(:send,
      s(:const, nil, :Dir), :foreach,
      s(:lvar, :themesdir)),
    s(:args,
      s(:arg, :name)),
    s(:begin,
      s(:if,
        s(:or,
          s(:send,
            s(:lvar, :name), :==,
            s(:str, ".")),
          s(:send,
            s(:lvar, :name), :==,
            s(:str, ".."))),
        s(:next), nil),
      s(:lvasgn, :dir,
        s(:send,
          s(:const, nil, :File), :join,
          s(:lvar, :themesdir),
          s(:lvar, :name))),
      s(:if,
        s(:send,
          s(:const, nil, :File), :directory?,
          s(:lvar, :dir)),
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :AUTO_PATH), :lappend,
          s(:lvar, :dir)), nil))),
  s(:send, nil, :require,
    s(:str, "tkextlib/tile")),
  s(:def, :version?,
    s(:args,
      s(:arg, :ver)),
    s(:send,
      s(:send,
        s(:const, nil, :TkPackage), :vcompare,
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :Tile), :package_version),
        s(:lvar, :ver)), :>=,
      s(:int, 0))),
  s(:send,
    s(:const,
      s(:const, nil, :Tk), :Tile), :__define_LoadImages_proc_for_compatibility__!),
  s(:send,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tile), :Style), :__define_wrapper_proc_for_compatibility__!),
  s(:if,
    s(:send,
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Tile), :Style), :theme_names), :include?,
      s(:str, "step")), nil,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Style), :theme_create,
      s(:str, "step"))),
  s(:send,
    s(:const, nil, :Tk), :load_tclscript,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :demodir),
      s(:str, "toolbutton.tcl"))),
  s(:send,
    s(:const, nil, :Tk), :load_tclscript,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :demodir),
      s(:str, "repeater.tcl"))),
  s(:send,
    s(:const, nil, :Tk), :ip_eval,
    s(:dstr,
      s(:begin,
        s(:send,
          s(:const, nil, :TkPackage), :unknown_proc)),
      s(:str, "  Tcl "),
      s(:begin,
        s(:send,
          s(:const, nil, :TkPackage), :provide,
          s(:str, "Tcl"))))),
  s(:block,
    s(:send,
      s(:const, nil, :TkRoot), :new),
    s(:args),
    s(:begin,
      s(:send, nil, :title,
        s(:str, "Tile demo")),
      s(:send, nil, :iconname,
        s(:str, "Tile demo")))),
  s(:gvasgn, :$THEMELIST,
    s(:array,
      s(:array,
        s(:str, "default"),
        s(:str, "Default")),
      s(:array,
        s(:str, "classic"),
        s(:str, "Classic")),
      s(:array,
        s(:str, "alt"),
        s(:str, "Revitalized")),
      s(:array,
        s(:str, "winnative"),
        s(:str, "Windows native")),
      s(:array,
        s(:str, "xpnative"),
        s(:str, "XP Native")),
      s(:array,
        s(:str, "aqua"),
        s(:str, "Aqua")))),
  s(:gvasgn, :$V,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash,
      s(:hash,
        s(:pair,
          s(:sym, :THEME),
          s(:str, "default")),
        s(:pair,
          s(:sym, :COMPOUND),
          s(:str, "top")),
        s(:pair,
          s(:sym, :CONSOLE),
          s(:false)),
        s(:pair,
          s(:sym, :MENURADIO1),
          s(:str, "One")),
        s(:pair,
          s(:sym, :MENUCHECK1),
          s(:true)),
        s(:pair,
          s(:sym, :PBMODE),
          s(:str, "determinate")),
        s(:pair,
          s(:sym, :SELECTED),
          s(:true)),
        s(:pair,
          s(:sym, :CHOICE),
          s(:int, 2))))),
  s(:block,
    s(:send,
      s(:block,
        s(:send,
          s(:send,
            s(:const, nil, :TkPackage), :names), :find_all),
        s(:args,
          s(:arg, :n)),
        s(:send,
          s(:lvar, :n), :=~,
          s(:regexp,
            s(:str, "^(tile|ttk)::theme::"),
            s(:regopt)))), :each),
    s(:args,
      s(:arg, :pkg)),
    s(:begin,
      s(:lvasgn, :name,
        s(:send,
          s(:send,
            s(:lvar, :pkg), :split,
            s(:str, "::")), :[],
          s(:int, -1))),
      s(:if,
        s(:send,
          s(:gvar, :$THEMELIST), :assoc,
          s(:lvar, :name)), nil,
        s(:send,
          s(:gvar, :$THEMELIST), :<<,
          s(:array,
            s(:lvar, :name),
            s(:send,
              s(:const, nil, :Tk), :tk_call,
              s(:str, "string"),
              s(:str, "totitle"),
              s(:lvar, :name))))))),
  s(:gvasgn, :$RUBY_THEMELIST,
    s(:array)),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :load,
        s(:send,
          s(:const, nil, :File), :join,
          s(:lvar, :demodir),
          s(:str, "themes"),
          s(:str, "kroc.rb")),
        s(:true)),
      s(:resbody, nil,
        s(:lvasgn, :e),
        s(:begin,
          s(:send, nil, :raise,
            s(:lvar, :e)),
          s(:send,
            s(:gvar, :$RUBY_THEMELIST), :<<,
            s(:array,
              s(:str, "kroc-rb"),
              s(:str, "Kroc (by Ruby)"),
              s(:false))))),
      s(:send,
        s(:gvar, :$RUBY_THEMELIST), :<<,
        s(:array,
          s(:str, "kroc-rb"),
          s(:str, "Kroc (by Ruby)"),
          s(:true))))),
  s(:def, :makeThemeControl,
    s(:args,
      s(:arg, :parent)),
    s(:begin,
      s(:lvasgn, :c,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Labelframe), :new,
          s(:lvar, :parent),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Theme"))))),
      s(:block,
        s(:send,
          s(:gvar, :$THEMELIST), :each),
        s(:args,
          s(:arg, :theme),
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :b,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
              s(:lvar, :c),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :name)),
                s(:pair,
                  s(:sym, :value),
                  s(:lvar, :theme)),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:gvar, :$V), :ref,
                    s(:sym, :THEME))),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :setTheme,
                      s(:lvar, :theme))))))),
          s(:send,
            s(:lvar, :b), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:if,
            s(:begin,
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkPackage), :names), :find),
                s(:args,
                  s(:arg, :n)),
                s(:send,
                  s(:lvar, :n), :=~,
                  s(:regexp,
                    s(:str, "(tile|ttk)::theme::"),
                    s(:begin,
                      s(:lvar, :theme)),
                    s(:regopt))))), nil,
            s(:send,
              s(:lvar, :b), :ttk_state,
              s(:sym, :disabled))))),
      s(:block,
        s(:send,
          s(:gvar, :$RUBY_THEMELIST), :each),
        s(:args,
          s(:arg, :theme),
          s(:arg, :name),
          s(:arg, :available)),
        s(:begin,
          s(:lvasgn, :b,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
              s(:lvar, :c),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :name)),
                s(:pair,
                  s(:sym, :value),
                  s(:lvar, :theme)),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:gvar, :$V), :ref,
                    s(:sym, :THEME))),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :setTheme,
                      s(:lvar, :theme))))))),
          s(:send,
            s(:lvar, :b), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:if,
            s(:lvar, :available), nil,
            s(:send,
              s(:lvar, :b), :ttk_state,
              s(:sym, :disabled))))),
      s(:lvar, :c))),
  s(:def, :makeThemeMenu,
    s(:args,
      s(:arg, :parent)),
    s(:begin,
      s(:lvasgn, :m,
        s(:send,
          s(:const, nil, :TkMenu), :new,
          s(:lvar, :parent))),
      s(:block,
        s(:send,
          s(:gvar, :$THEMELIST), :each),
        s(:args,
          s(:arg, :theme),
          s(:arg, :name)),
        s(:begin,
          s(:send,
            s(:lvar, :m), :add,
            s(:sym, :radiobutton),
            s(:hash,
              s(:pair,
                s(:sym, :label),
                s(:lvar, :name)),
              s(:pair,
                s(:sym, :variable),
                s(:send,
                  s(:gvar, :$V), :ref,
                  s(:sym, :THEME))),
              s(:pair,
                s(:sym, :value),
                s(:lvar, :theme)),
              s(:pair,
                s(:sym, :command),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :setTheme,
                    s(:lvar, :theme)))))),
          s(:if,
            s(:begin,
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkPackage), :names), :find),
                s(:args,
                  s(:arg, :n)),
                s(:send,
                  s(:lvar, :n), :=~,
                  s(:regexp,
                    s(:str, "(tile|ttk)::theme::"),
                    s(:begin,
                      s(:lvar, :theme)),
                    s(:regopt))))), nil,
            s(:send,
              s(:lvar, :m), :entryconfigure,
              s(:sym, :end),
              s(:hash,
                s(:pair,
                  s(:sym, :state),
                  s(:sym, :disabled))))))),
      s(:block,
        s(:send,
          s(:gvar, :$RUBY_THEMELIST), :each),
        s(:args,
          s(:arg, :theme),
          s(:arg, :name),
          s(:arg, :available)),
        s(:begin,
          s(:send,
            s(:lvar, :m), :add,
            s(:sym, :radiobutton),
            s(:hash,
              s(:pair,
                s(:sym, :label),
                s(:lvar, :name)),
              s(:pair,
                s(:sym, :variable),
                s(:send,
                  s(:gvar, :$V), :ref,
                  s(:sym, :THEME))),
              s(:pair,
                s(:sym, :value),
                s(:lvar, :theme)),
              s(:pair,
                s(:sym, :command),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :setTheme,
                    s(:lvar, :theme)))))),
          s(:if,
            s(:lvar, :available), nil,
            s(:send,
              s(:lvar, :m), :entryconfigure,
              s(:sym, :end),
              s(:hash,
                s(:pair,
                  s(:sym, :state),
                  s(:sym, :disabled))))))),
      s(:lvar, :m))),
  s(:def, :setTheme,
    s(:args,
      s(:arg, :theme)),
    s(:begin,
      s(:if,
        s(:begin,
          s(:lvasgn, :pkg,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TkPackage), :names), :find),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:lvar, :n), :=~,
                s(:regexp,
                  s(:str, "(tile|ttk)::theme::"),
                  s(:begin,
                    s(:lvar, :theme)),
                  s(:regopt)))))),
        s(:if,
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Tk), :Tile), :Style), :theme_names), :find),
            s(:args,
              s(:arg, :n)),
            s(:send,
              s(:lvar, :n), :==,
              s(:lvar, :theme))), nil,
          s(:send,
            s(:const, nil, :TkPackage), :require,
            s(:lvar, :pkg))), nil),
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Tile), :Style), :theme_use,
        s(:lvar, :theme)))),
  s(:gvasgn, :$BUTTONS,
    s(:array,
      s(:str, "open"),
      s(:str, "new"),
      s(:str, "save"))),
  s(:gvasgn, :$CHECKBOXES,
    s(:array,
      s(:str, "bold"),
      s(:str, "italic"))),
  s(:gvasgn, :$ICON,
    s(:hash)),
  s(:def, :loadIcons,
    s(:args,
      s(:arg, :file)),
    s(:begin,
      s(:send,
        s(:const, nil, :Tk), :load_tclscript,
        s(:lvar, :file)),
      s(:lvasgn, :img_data,
        s(:send,
          s(:const, nil, :TkVarAccess), :new,
          s(:str, "ImgData"))),
      s(:block,
        s(:send,
          s(:send,
            s(:lvar, :img_data), :keys), :each),
        s(:args,
          s(:arg, :icon)),
        s(:send,
          s(:gvar, :$ICON), :[]=,
          s(:lvar, :icon),
          s(:send,
            s(:const, nil, :TkPhotoImage), :new,
            s(:hash,
              s(:pair,
                s(:sym, :data),
                s(:send,
                  s(:lvar, :img_data), :[],
                  s(:lvar, :icon))))))))),
  s(:send, nil, :loadIcons,
    s(:send,
      s(:const, nil, :File), :join,
      s(:lvar, :demodir),
      s(:str, "iconlib.tcl"))),
  s(:def, :foreachWidget,
    s(:args,
      s(:arg, :wins),
      s(:arg, :cmd)),
    s(:block,
      s(:send,
        s(:lvar, :wins), :each),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send,
          s(:lvar, :cmd), :call,
          s(:lvar, :w)),
        s(:send, nil, :foreachWidget,
          s(:send,
            s(:lvar, :w), :winfo_children),
          s(:lvar, :cmd))))),
  s(:def, :sbstub,
    s(:args,
      s(:arg, :sb),
      s(:arg, :cmd),
      s(:arg, :num),
      s(:optarg, :units,
        s(:str, "units"))),
    s(:begin,
      s(:lvasgn, :num,
        s(:send,
          s(:const, nil, :TkComm), :number,
          s(:lvar, :num))),
      s(:case,
        s(:send,
          s(:lvar, :cmd), :to_s),
        s(:when,
          s(:str, "moveto"),
          s(:send,
            s(:lvar, :sb), :set,
            s(:lvar, :num),
            s(:send,
              s(:lvar, :num), :+,
              s(:float, 0.5)))),
        s(:when,
          s(:str, "scroll"),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :units), :to_s), :==,
                s(:str, "pages")),
              s(:lvasgn, :delta,
                s(:float, 0.2)),
              s(:lvasgn, :delta,
                s(:float, 0.05))),
            s(:lvasgn, :current,
              s(:send,
                s(:lvar, :sb), :get)),
            s(:send,
              s(:lvar, :sb), :set,
              s(:send,
                s(:send,
                  s(:lvar, :current), :[],
                  s(:int, 0)), :+,
                s(:send,
                  s(:lvar, :delta), :*,
                  s(:lvar, :num))),
              s(:send,
                s(:send,
                  s(:lvar, :current), :[],
                  s(:int, 1)), :+,
                s(:send,
                  s(:lvar, :delta), :*,
                  s(:lvar, :num)))))), nil))),
  s(:send,
    s(:const,
      s(:const, nil, :TkBindTag), :ALL), :bind,
    s(:str, "ButtonPress-3"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:gvasgn, :$W,
        s(:lvar, :w))),
    s(:str, "%W")),
  s(:send,
    s(:const,
      s(:const, nil, :TkBindTag), :ALL), :bind,
    s(:str, "Control-ButtonPress-3"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :w), :set_focus)),
    s(:str, "%W")),
  s(:def, :showHelp,
    s(:args),
    s(:send,
      s(:const, nil, :Tk), :messageBox,
      s(:hash,
        s(:pair,
          s(:sym, :message),
          s(:str, "No help yet..."))))),
  s(:send,
    s(:const, nil, :TkOption), :add,
    s(:str, "*Toolbar.relief"),
    s(:sym, :groove)),
  s(:send,
    s(:const, nil, :TkOption), :add,
    s(:str, "*Toolbar.borderWidth"),
    s(:int, 2)),
  s(:send,
    s(:const, nil, :TkOption), :add,
    s(:str, "*Toolbar.Button.Pad"),
    s(:int, 2)),
  s(:gvasgn, :$ROOT,
    s(:send,
      s(:const, nil, :Tk), :root)),
  s(:gvasgn, :$BASE,
    s(:gvar, :$ROOT)),
  s(:send,
    s(:const, nil, :Tk), :destroy,
    s(:splat,
      s(:begin,
        s(:send,
          s(:gvar, :$ROOT), :winfo_children)))),
  s(:gvasgn, :$TOOLBARS,
    s(:array)),
  s(:def, :makeToolbars,
    s(:args),
    s(:begin,
      s(:lvasgn, :tb,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:gvar, :$BASE),
          s(:hash,
            s(:pair,
              s(:sym, :class),
              s(:str, "Toolbar"))))),
      s(:send,
        s(:gvar, :$TOOLBARS), :<<,
        s(:lvar, :tb)),
      s(:lvasgn, :i,
        s(:int, 0)),
      s(:block,
        s(:send,
          s(:gvar, :$BUTTONS), :each),
        s(:args,
          s(:arg, :icon)),
        s(:begin,
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)),
          s(:send,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Button), :new,
              s(:lvar, :tb),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :icon)),
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:gvar, :$ICON), :[],
                    s(:lvar, :icon))),
                s(:pair,
                  s(:sym, :compound),
                  s(:send,
                    s(:gvar, :$V), :[],
                    s(:sym, :COMPOUND))),
                s(:pair,
                  s(:sym, :style),
                  s(:sym, :Toolbutton)))), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:lvar, :i)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))))),
      s(:block,
        s(:send,
          s(:gvar, :$CHECKBOXES), :each),
        s(:args,
          s(:arg, :icon)),
        s(:begin,
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)),
          s(:send,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Checkbutton), :new,
              s(:lvar, :tb),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :icon)),
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:gvar, :$ICON), :[],
                    s(:lvar, :icon))),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:gvar, :$V), :ref,
                    s(:lvar, :icon))),
                s(:pair,
                  s(:sym, :compound),
                  s(:send,
                    s(:gvar, :$V), :[],
                    s(:sym, :COMPOUND))),
                s(:pair,
                  s(:sym, :style),
                  s(:sym, :Toolbutton)))), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:lvar, :i)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))))),
      s(:lvasgn, :mb,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Menubutton), :new,
          s(:lvar, :tb),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "toolbar")),
            s(:pair,
              s(:sym, :image),
              s(:send,
                s(:gvar, :$ICON), :[],
                s(:str, "file"))),
            s(:pair,
              s(:sym, :compound),
              s(:send,
                s(:gvar, :$V), :[],
                s(:sym, :COMPOUND)))))),
      s(:send,
        s(:lvar, :mb), :configure,
        s(:hash,
          s(:pair,
            s(:sym, :menu),
            s(:send, nil, :makeCompoundMenu,
              s(:lvar, :mb))))),
      s(:op_asgn,
        s(:lvasgn, :i), :+,
        s(:int, 1)),
      s(:send,
        s(:lvar, :mb), :grid,
        s(:hash,
          s(:pair,
            s(:sym, :row),
            s(:int, 0)),
          s(:pair,
            s(:sym, :column),
            s(:lvar, :i)),
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :news)))),
      s(:op_asgn,
        s(:lvasgn, :i), :+,
        s(:int, 1)),
      s(:send,
        s(:lvar, :tb), :grid_columnconfigure,
        s(:lvar, :i),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:lvasgn, :tb,
        s(:send,
          s(:const, nil, :TkFrame), :new,
          s(:gvar, :$BASE),
          s(:hash,
            s(:pair,
              s(:sym, :class),
              s(:str, "Toolbar"))))),
      s(:send,
        s(:gvar, :$TOOLBARS), :<<,
        s(:lvar, :tb)),
      s(:lvasgn, :i,
        s(:int, 0)),
      s(:block,
        s(:send,
          s(:gvar, :$BUTTONS), :each),
        s(:args,
          s(:arg, :icon)),
        s(:begin,
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)),
          s(:send,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :tb),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :icon)),
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:gvar, :$ICON), :[],
                    s(:lvar, :icon))),
                s(:pair,
                  s(:sym, :compound),
                  s(:send,
                    s(:gvar, :$V), :[],
                    s(:sym, :COMPOUND))),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :flat)),
                s(:pair,
                  s(:sym, :overrelief),
                  s(:sym, :raised)))), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:lvar, :i)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))))),
      s(:block,
        s(:send,
          s(:gvar, :$CHECKBOXES), :each),
        s(:args,
          s(:arg, :icon)),
        s(:begin,
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)),
          s(:send,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :tb),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :icon)),
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:gvar, :$ICON), :[],
                    s(:lvar, :icon))),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:gvar, :$V), :ref,
                    s(:lvar, :icon))),
                s(:pair,
                  s(:sym, :compound),
                  s(:send,
                    s(:gvar, :$V), :[],
                    s(:sym, :COMPOUND))),
                s(:pair,
                  s(:sym, :indicatoron),
                  s(:false)),
                s(:pair,
                  s(:sym, :selectcolor),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :flat)),
                s(:pair,
                  s(:sym, :overrelief),
                  s(:sym, :raised)))), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:lvar, :i)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))))),
      s(:lvasgn, :mb,
        s(:send,
          s(:const, nil, :TkMenubutton), :new,
          s(:lvar, :tb),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "toolbar")),
            s(:pair,
              s(:sym, :image),
              s(:send,
                s(:gvar, :$ICON), :[],
                s(:str, "file"))),
            s(:pair,
              s(:sym, :compound),
              s(:send,
                s(:gvar, :$V), :[],
                s(:sym, :COMPOUND)))))),
      s(:send,
        s(:lvar, :mb), :configure,
        s(:hash,
          s(:pair,
            s(:sym, :menu),
            s(:send, nil, :makeCompoundMenu,
              s(:lvar, :mb))))),
      s(:op_asgn,
        s(:lvasgn, :i), :+,
        s(:int, 1)),
      s(:send,
        s(:lvar, :mb), :grid,
        s(:hash,
          s(:pair,
            s(:sym, :row),
            s(:int, 0)),
          s(:pair,
            s(:sym, :column),
            s(:lvar, :i)),
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :news)))),
      s(:op_asgn,
        s(:lvasgn, :i), :+,
        s(:int, 1)),
      s(:send,
        s(:lvar, :tb), :grid_columnconfigure,
        s(:lvar, :i),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))))),
  s(:def, :makeCompoundMenu,
    s(:args,
      s(:arg, :mb)),
    s(:begin,
      s(:lvasgn, :menu,
        s(:send,
          s(:const, nil, :TkMenu), :new,
          s(:lvar, :mb))),
      s(:block,
        s(:send,
          s(:array,
            s(:str, "text"),
            s(:str, "image"),
            s(:str, "none"),
            s(:str, "top"),
            s(:str, "bottom"),
            s(:str, "left"),
            s(:str, "right"),
            s(:str, "center")), :each),
        s(:args,
          s(:arg, :str)),
        s(:send,
          s(:lvar, :menu), :add,
          s(:sym, :radiobutton),
          s(:hash,
            s(:pair,
              s(:sym, :label),
              s(:send,
                s(:const, nil, :Tk), :tk_call,
                s(:str, "string"),
                s(:str, "totitle"),
                s(:lvar, :str))),
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :COMPOUND))),
            s(:pair,
              s(:sym, :value),
              s(:lvar, :str)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :changeToolbars)))))),
      s(:lvar, :menu))),
  s(:send, nil, :makeToolbars),
  s(:lvasgn, :control,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Frame), :new,
      s(:gvar, :$BASE))),
  s(:send,
    s(:send, nil, :makeThemeControl,
      s(:lvar, :control)), :grid,
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 6)),
      s(:pair,
        s(:sym, :ipadx),
        s(:int, 6)))),
  s(:send,
    s(:lvar, :control), :grid_rowconfigure,
    s(:int, 99),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:def, :changeToolbars,
    s(:args),
    s(:send, nil, :foreachWidget,
      s(:gvar, :$TOOLBARS),
      s(:block,
        s(:send, nil, :proc),
        s(:args,
          s(:arg, :w)),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:lvar, :w), :compound,
              s(:send,
                s(:gvar, :$V), :[],
                s(:sym, :COMPOUND))),
            s(:resbody, nil, nil, nil), nil))))),
  s(:def, :scrolledWidget,
    s(:args,
      s(:arg, :parent),
      s(:arg, :klass),
      s(:arg, :themed),
      s(:restarg, :args)),
    s(:begin,
      s(:if,
        s(:lvar, :themed),
        s(:begin,
          s(:lvasgn, :f,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Frame), :new,
              s(:lvar, :parent))),
          s(:lvasgn, :t,
            s(:send,
              s(:lvar, :klass), :new,
              s(:lvar, :f),
              s(:splat,
                s(:lvar, :args)))),
          s(:lvasgn, :vs,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Scrollbar), :new,
              s(:lvar, :f))),
          s(:lvasgn, :hs,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Scrollbar), :new,
              s(:lvar, :f)))),
        s(:begin,
          s(:lvasgn, :f,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :parent))),
          s(:lvasgn, :t,
            s(:send,
              s(:lvar, :klass), :new,
              s(:lvar, :f),
              s(:splat,
                s(:lvar, :args)))),
          s(:lvasgn, :vs,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:lvar, :f))),
          s(:lvasgn, :hs,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:lvar, :f))))),
      s(:send,
        s(:lvar, :t), :yscrollbar,
        s(:lvar, :vs)),
      s(:send,
        s(:lvar, :t), :xscrollbar,
        s(:lvar, :hs)),
      s(:send,
        s(:const, nil, :TkGrid), :configure,
        s(:lvar, :t),
        s(:lvar, :vs),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :news)))),
      s(:send,
        s(:const, nil, :TkGrid), :configure,
        s(:lvar, :hs),
        s(:str, "x"),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :news)))),
      s(:send,
        s(:const, nil, :TkGrid), :rowconfigure,
        s(:lvar, :f),
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkGrid), :columnconfigure,
        s(:lvar, :f),
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:array,
        s(:lvar, :f),
        s(:lvar, :t)))),
  s(:def, :makeNotebook,
    s(:args),
    s(:begin,
      s(:lvasgn, :nb,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Notebook), :new,
          s(:gvar, :$BASE),
          s(:hash,
            s(:pair,
              s(:sym, :padding),
              s(:int, 6))))),
      s(:send,
        s(:lvar, :nb), :enable_traversal),
      s(:lvasgn, :client,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:lvar, :nb))),
      s(:send,
        s(:lvar, :nb), :add,
        s(:lvar, :client),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Demo")),
          s(:pair,
            s(:sym, :underline),
            s(:int, 0)))),
      s(:send,
        s(:lvar, :nb), :select,
        s(:lvar, :client)),
      s(:lvasgn, :scales,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:lvar, :nb))),
      s(:send,
        s(:lvar, :nb), :add,
        s(:lvar, :scales),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Scales")))),
      s(:lvasgn, :combo,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:lvar, :nb))),
      s(:send,
        s(:lvar, :nb), :add,
        s(:lvar, :combo),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Combobox")),
          s(:pair,
            s(:sym, :underline),
            s(:int, 7)))),
      s(:lvasgn, :tree,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:lvar, :nb))),
      s(:send,
        s(:lvar, :nb), :add,
        s(:lvar, :tree),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Tree")))),
      s(:lvasgn, :others,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:lvar, :nb))),
      s(:send,
        s(:lvar, :nb), :add,
        s(:lvar, :others),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Others")),
          s(:pair,
            s(:sym, :underline),
            s(:int, 4)))),
      s(:array,
        s(:lvar, :nb),
        s(:lvar, :client),
        s(:lvar, :scales),
        s(:lvar, :combo),
        s(:lvar, :tree),
        s(:lvar, :others)))),
  s(:masgn,
    s(:mlhs,
      s(:lvasgn, :nb),
      s(:lvasgn, :client),
      s(:lvasgn, :scales),
      s(:lvasgn, :combo),
      s(:lvasgn, :tree),
      s(:lvasgn, :others)),
    s(:send, nil, :makeNotebook)),
  s(:def, :fillMenu,
    s(:args,
      s(:arg, :menu)),
    s(:begin,
      s(:block,
        s(:send,
          s(:array,
            s(:str, "above"),
            s(:str, "below"),
            s(:str, "left"),
            s(:str, "right"),
            s(:str, "flush")), :each),
        s(:args,
          s(:arg, :dir)),
        s(:send,
          s(:lvar, :menu), :add,
          s(:sym, :command),
          s(:hash,
            s(:pair,
              s(:sym, :label),
              s(:send,
                s(:const, nil, :Tk), :tk_call,
                s(:str, "string"),
                s(:str, "totitle"),
                s(:lvar, :dir))),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:send,
                    s(:lvar, :menu), :winfo_parent), :direction,
                  s(:lvar, :dir))))))),
      s(:send,
        s(:lvar, :menu), :add,
        s(:sym, :cascade),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Submenu")),
          s(:pair,
            s(:sym, :menu),
            s(:begin,
              s(:lvasgn, :submenu,
                s(:send,
                  s(:const, nil, :TkMenu), :new,
                  s(:lvar, :menu))))))),
      s(:send,
        s(:lvar, :submenu), :add,
        s(:sym, :command),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Subcommand 1")))),
      s(:send,
        s(:lvar, :submenu), :add,
        s(:sym, :command),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Subcommand 2")))),
      s(:send,
        s(:lvar, :submenu), :add,
        s(:sym, :command),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Subcommand 3")))),
      s(:send,
        s(:lvar, :menu), :add,
        s(:sym, :separator)),
      s(:send,
        s(:lvar, :menu), :add,
        s(:sym, :command),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Quit")),
          s(:pair,
            s(:sym, :command),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk), :root), :destroy))))))),
  s(:lvasgn, :l,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Labelframe), :new,
      s(:lvar, :client),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Themed")),
        s(:pair,
          s(:sym, :padding),
          s(:int, 6))))),
  s(:lvasgn, :r,
    s(:send,
      s(:const, nil, :TkLabelframe), :new,
      s(:lvar, :client),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Standard")),
        s(:pair,
          s(:sym, :padx),
          s(:int, 6)),
        s(:pair,
          s(:sym, :pady),
          s(:int, 6))))),
  s(:lvasgn, :cb,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Checkbutton), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Checkbutton")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :SELECTED))),
        s(:pair,
          s(:sym, :underline),
          s(:int, 2))))),
  s(:lvasgn, :rb1,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "One")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :CHOICE))),
        s(:pair,
          s(:sym, :value),
          s(:int, 1)),
        s(:pair,
          s(:sym, :underline),
          s(:int, 0))))),
  s(:lvasgn, :rb2,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Two")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :CHOICE))),
        s(:pair,
          s(:sym, :value),
          s(:int, 2))))),
  s(:lvasgn, :rb3,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Three")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :CHOICE))),
        s(:pair,
          s(:sym, :value),
          s(:int, 3)),
        s(:pair,
          s(:sym, :underline),
          s(:int, 0))))),
  s(:lvasgn, :btn,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Button), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Button")),
        s(:pair,
          s(:sym, :underline),
          s(:int, 0))))),
  s(:lvasgn, :mb,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Menubutton), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Menubutton")),
        s(:pair,
          s(:sym, :underline),
          s(:int, 2))))),
  s(:lvasgn, :m,
    s(:send,
      s(:const, nil, :TkMenu), :new,
      s(:lvar, :mb))),
  s(:send,
    s(:lvar, :mb), :menu,
    s(:lvar, :m)),
  s(:send, nil, :fillMenu,
    s(:lvar, :m)),
  s(:gvasgn, :$entryText,
    s(:send,
      s(:const, nil, :TkVariable), :new,
      s(:str, "Entry widget"))),
  s(:lvasgn, :e,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Entry), :new,
      s(:lvar, :l),
      s(:hash,
        s(:pair,
          s(:sym, :textvariable),
          s(:gvar, :$entryText))))),
  s(:send,
    s(:lvar, :e), :selection_range,
    s(:int, 6),
    s(:sym, :end)),
  s(:masgn,
    s(:mlhs,
      s(:lvasgn, :ltext_f),
      s(:lvasgn, :ltext)),
    s(:send, nil, :scrolledWidget,
      s(:lvar, :l),
      s(:const, nil, :TkText),
      s(:true),
      s(:hash,
        s(:pair,
          s(:sym, :width),
          s(:int, 12)),
        s(:pair,
          s(:sym, :height),
          s(:int, 5)),
        s(:pair,
          s(:sym, :wrap),
          s(:sym, :none))))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :cb),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rb1),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rb2),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rb3),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :btn),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 2)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :mb),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 2)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :e),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 2)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :ltext_f),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :TkGrid), :columnconfigure,
    s(:lvar, :l),
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:const, nil, :TkGrid), :rowconfigure,
    s(:lvar, :l),
    s(:int, 7),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:lvasgn, :cb,
    s(:send,
      s(:const, nil, :TkCheckbutton), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Checkbutton")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :SELECTED)))))),
  s(:lvasgn, :rb1,
    s(:send,
      s(:const, nil, :TkRadiobutton), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "One")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :CHOICE))),
        s(:pair,
          s(:sym, :value),
          s(:int, 1))))),
  s(:lvasgn, :rb2,
    s(:send,
      s(:const, nil, :TkRadiobutton), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Two")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :CHOICE))),
        s(:pair,
          s(:sym, :value),
          s(:int, 2)),
        s(:pair,
          s(:sym, :underline),
          s(:int, 1))))),
  s(:lvasgn, :rb3,
    s(:send,
      s(:const, nil, :TkRadiobutton), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Three")),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :CHOICE))),
        s(:pair,
          s(:sym, :value),
          s(:int, 3))))),
  s(:lvasgn, :btn,
    s(:send,
      s(:const, nil, :TkButton), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Button"))))),
  s(:lvasgn, :mb,
    s(:send,
      s(:const, nil, :TkMenubutton), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Menubutton")),
        s(:pair,
          s(:sym, :underline),
          s(:int, 3)),
        s(:pair,
          s(:sym, :takefocus),
          s(:true))))),
  s(:lvasgn, :m,
    s(:send,
      s(:const, nil, :TkMenu), :new,
      s(:lvar, :mb))),
  s(:send,
    s(:lvar, :mb), :menu,
    s(:lvar, :m)),
  s(:send,
    s(:gvar, :$V), :[]=,
    s(:sym, :rmbIndicatoron),
    s(:send,
      s(:lvar, :mb), :indicatoron)),
  s(:send,
    s(:lvar, :m), :add,
    s(:sym, :checkbutton),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Indicator?")),
      s(:pair,
        s(:sym, :variable),
        s(:send,
          s(:gvar, :$V), :ref,
          s(:sym, :rmbIndicatoron))),
      s(:pair,
        s(:sym, :command),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:lvar, :mb), :indicatoron,
            s(:send,
              s(:gvar, :$V), :[],
              s(:sym, :rmbIndicatoron))))))),
  s(:send,
    s(:lvar, :m), :add,
    s(:sym, :separator)),
  s(:send, nil, :fillMenu,
    s(:lvar, :m)),
  s(:lvasgn, :e,
    s(:send,
      s(:const, nil, :TkEntry), :new,
      s(:lvar, :r),
      s(:hash,
        s(:pair,
          s(:sym, :textvariable),
          s(:gvar, :$entryText))))),
  s(:masgn,
    s(:mlhs,
      s(:lvasgn, :rtext_f),
      s(:lvasgn, :rtext)),
    s(:send, nil, :scrolledWidget,
      s(:lvar, :r),
      s(:const, nil, :TkText),
      s(:false),
      s(:hash,
        s(:pair,
          s(:sym, :width),
          s(:int, 12)),
        s(:pair,
          s(:sym, :height),
          s(:int, 5)),
        s(:pair,
          s(:sym, :wrap),
          s(:sym, :none))))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :cb),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rb1),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rb2),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rb3),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :btn),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 2)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :mb),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 2)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :e),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 2)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :rtext_f),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :TkGrid), :columnconfigure,
    s(:lvar, :l),
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:const, nil, :TkGrid), :rowconfigure,
    s(:lvar, :l),
    s(:int, 7),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :l),
    s(:lvar, :r),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 6)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 6)))),
  s(:send,
    s(:const, nil, :TkGrid), :rowconfigure,
    s(:lvar, :client),
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:const, nil, :TkGrid), :columnconfigure,
    s(:lvar, :client),
    s(:array,
      s(:int, 0),
      s(:int, 1)),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:lvasgn, :msgs,
    s(:array,
      s(:str, "The cat crept into the crypt, crapped and crept out again"),
      s(:str, "Peter Piper picked a peck of pickled peppers"),
      s(:str, "How much wood would a woodchuck chuck if a woodchuck could chuck wood"),
      s(:str, "He thrusts his fists against the posts and still insists he sees the ghosts"),
      s(:str, "Who put the bomb in the bom-b-bom-b-bom,"),
      s(:str, "Is this your sister's sixth zither, sir?"),
      s(:str, "Who put the ram in the ramalamadingdong?"),
      s(:str, "I am not the pheasant plucker, I'm the pheasant plucker's mate."))),
  s(:lvasgn, :nmsgs,
    s(:send,
      s(:lvar, :msgs), :size)),
  s(:block,
    s(:send,
      s(:begin,
        s(:erange,
          s(:int, 0),
          s(:int, 50))), :each),
    s(:args,
      s(:arg, :n)),
    s(:begin,
      s(:lvasgn, :msg,
        s(:send,
          s(:lvar, :msgs), :[],
          s(:send,
            s(:lvar, :n), :%,
            s(:lvar, :nmsgs)))),
      s(:send,
        s(:lvar, :ltext), :insert,
        s(:sym, :end),
        s(:dstr,
          s(:begin,
            s(:lvar, :n)),
          s(:str, ": "),
          s(:begin,
            s(:lvar, :msg)),
          s(:str, "\n"))),
      s(:send,
        s(:lvar, :rtext), :insert,
        s(:sym, :end),
        s(:dstr,
          s(:begin,
            s(:lvar, :n)),
          s(:str, ": "),
          s(:begin,
            s(:lvar, :msg)),
          s(:str, "\n"))))),
  s(:lvasgn, :l,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Labelframe), :new,
      s(:lvar, :scales),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Themed")),
        s(:pair,
          s(:sym, :padding),
          s(:int, 6))))),
  s(:lvasgn, :r,
    s(:send,
      s(:const, nil, :TkLabelframe), :new,
      s(:lvar, :scales),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Standard")),
        s(:pair,
          s(:sym, :padx),
          s(:int, 6)),
        s(:pair,
          s(:sym, :pady),
          s(:int, 6))))),
  s(:if,
    s(:send, nil, :version?,
      s(:str, "0.6")),
    s(:begin,
      s(:lvasgn, :scale,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Scale), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :horizontal)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100)),
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :SCALE)))))),
      s(:lvasgn, :vscale,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Scale), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100)),
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :VSCALE)))))),
      s(:lvasgn, :progress,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Progressbar), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :horizontal)),
            s(:pair,
              s(:sym, :maximum),
              s(:int, 100))))),
      s(:lvasgn, :vprogress,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Progressbar), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical)),
            s(:pair,
              s(:sym, :maximum),
              s(:int, 100))))),
      s(:if,
        s(:true),
        s(:begin,
          s(:defs,
            s(:lvar, :progress), :inverted,
            s(:args,
              s(:arg, :w),
              s(:arg, :value)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :w), :mode), :==,
                s(:str, "indeterminate")),
              s(:send,
                s(:lvar, :w), :value,
                s(:lvar, :value)),
              s(:send,
                s(:lvar, :w), :value,
                s(:send,
                  s(:send,
                    s(:lvar, :w), :maximum), :-,
                  s(:lvar, :value))))),
          s(:block,
            s(:send,
              s(:lvar, :scale), :command),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :progress), :value,
              s(:lvar, :value))),
          s(:block,
            s(:send,
              s(:lvar, :vscale), :command),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :progress), :inverted,
              s(:lvar, :vprogress),
              s(:lvar, :value)))),
        s(:begin,
          s(:send,
            s(:lvar, :progress), :variable,
            s(:send,
              s(:gvar, :$V), :ref,
              s(:sym, :SCALE))),
          s(:send,
            s(:lvar, :vprogress), :variable,
            s(:send,
              s(:gvar, :$V), :ref,
              s(:sym, :VSCALE))))),
      s(:send,
        s(:lvar, :scale), :set,
        s(:int, 50)),
      s(:send,
        s(:lvar, :vscale), :set,
        s(:int, 50)),
      s(:lvasgn, :lmode,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Label), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Progress bar mode"))))),
      s(:lvasgn, :pbmode0,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :PBMODE))),
            s(:pair,
              s(:sym, :text),
              s(:str, "determinate")),
            s(:pair,
              s(:sym, :value),
              s(:str, "determinate")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :pbMode,
                  s(:lvar, :progress),
                  s(:lvar, :vprogress))))))),
      s(:lvasgn, :pbmode1,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Radiobutton), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :PBMODE))),
            s(:pair,
              s(:sym, :text),
              s(:str, "indeterminate")),
            s(:pair,
              s(:sym, :value),
              s(:str, "indeterminate")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :pbMode,
                  s(:lvar, :progress),
                  s(:lvar, :vprogress))))))),
      s(:def, :pbMode,
        s(:args,
          s(:arg, :progress),
          s(:arg, :vprogress)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :vprogress), :mode), :!=,
              s(:send,
                s(:gvar, :$V), :[],
                s(:sym, :PBMODE))),
            s(:send,
              s(:lvar, :vprogress), :value,
              s(:send,
                s(:send,
                  s(:lvar, :vprogress), :maximum), :-,
                s(:send,
                  s(:lvar, :vprogress), :value))), nil),
          s(:send,
            s(:lvar, :progress), :mode,
            s(:send,
              s(:gvar, :$V), :[],
              s(:sym, :PBMODE))),
          s(:send,
            s(:lvar, :vprogress), :mode,
            s(:send,
              s(:gvar, :$V), :[],
              s(:sym, :PBMODE))))),
      s(:lvasgn, :start,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Button), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Start")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :pbStart,
                  s(:lvar, :progress),
                  s(:lvar, :vprogress))))))),
      s(:def, :pbStart,
        s(:args,
          s(:arg, :progress),
          s(:arg, :vprogress)),
        s(:begin,
          s(:send, nil, :pbMode,
            s(:lvar, :progress),
            s(:lvar, :vprogress)),
          s(:send,
            s(:lvar, :progress), :start,
            s(:int, 10)),
          s(:send,
            s(:lvar, :vprogress), :start))),
      s(:lvasgn, :stop,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Button), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Stop")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :pbStop,
                  s(:lvar, :progress),
                  s(:lvar, :vprogress))))))),
      s(:def, :pbStop,
        s(:args,
          s(:arg, :progress),
          s(:arg, :vprogress)),
        s(:begin,
          s(:send,
            s(:lvar, :progress), :stop),
          s(:send,
            s(:lvar, :vprogress), :stop))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :scale),
        s(:hash,
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)),
          s(:pair,
            s(:sym, :sticky),
            s(:str, "ew")))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :progress),
        s(:hash,
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)),
          s(:pair,
            s(:sym, :sticky),
            s(:str, "ew")))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :vscale),
        s(:lvar, :vprogress),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "nws")))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :lmode),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "we")),
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :pbmode0),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "we")),
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :pbmode1),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "we")),
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :start),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "we")),
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :stop),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "we")),
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)))),
      s(:send,
        s(:lvar, :l), :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :l), :grid_columnconfigure,
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :l), :grid_rowconfigure,
        s(:int, 99),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkScale), :new,
          s(:lvar, :r),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :horizontal)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100)),
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :SCALE))))), :grid,
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "news")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkScale), :new,
          s(:lvar, :r),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100)),
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :VSCALE))))), :grid,
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "nws")))),
      s(:send,
        s(:lvar, :r), :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :r), :grid_columnconfigure,
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :r), :grid_rowconfigure,
        s(:int, 99),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1))))),
    s(:begin,
      s(:lvasgn, :scale,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Scale), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :SCALE))),
            s(:pair,
              s(:sym, :orient),
              s(:sym, :horizontal)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100))))),
      s(:lvasgn, :vscale,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Scale), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :VSCALE))),
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical)),
            s(:pair,
              s(:sym, :from),
              s(:int, -25)),
            s(:pair,
              s(:sym, :to),
              s(:int, 25))))),
      s(:lvasgn, :progress,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Progress), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :horizontal)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100))))),
      s(:lvasgn, :vprogress,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Progress), :new,
          s(:lvar, :l),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical)),
            s(:pair,
              s(:sym, :from),
              s(:int, -25)),
            s(:pair,
              s(:sym, :to),
              s(:int, 25))))),
      s(:if,
        s(:true),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :scale), :command),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :progress), :set,
              s(:lvar, :value))),
          s(:block,
            s(:send,
              s(:lvar, :vscale), :command),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :vprogress), :set,
              s(:lvar, :value)))),
        s(:begin,
          s(:lvasgn, :v1,
            s(:send,
              s(:lvar, :scale), :variable)),
          s(:lvasgn, :v2,
            s(:send,
              s(:lvar, :vscale), :variable)),
          s(:send,
            s(:lvar, :v1), :trace,
            s(:str, "w"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:lvar, :progress), :set,
                s(:send,
                  s(:lvar, :v1), :value)))),
          s(:send,
            s(:lvar, :v2), :trace,
            s(:str, "w"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:lvar, :vprogress), :set,
                s(:send,
                  s(:lvar, :v2), :value)))))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :scale),
        s(:hash,
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)),
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :ew)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :progress),
        s(:hash,
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 2)),
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :ew)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :vscale),
        s(:lvar, :vprogress),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :nws)))),
      s(:send,
        s(:const, nil, :TkGrid), :columnconfigure,
        s(:lvar, :l),
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkGrid), :columnconfigure,
        s(:lvar, :l),
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkScale), :new,
          s(:lvar, :r),
          s(:hash,
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :SCALE))),
            s(:pair,
              s(:sym, :orient),
              s(:sym, :horizontal)),
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 100)))), :grid,
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "news")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkScale), :new,
          s(:lvar, :r),
          s(:hash,
            s(:pair,
              s(:sym, :variable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :VSCALE))),
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical)),
            s(:pair,
              s(:sym, :from),
              s(:int, -25)),
            s(:pair,
              s(:sym, :to),
              s(:int, 25)))), :grid,
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "nws")))),
      s(:send,
        s(:const, nil, :TkGrid), :columnconfigure,
        s(:lvar, :r),
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkGrid), :columnconfigure,
        s(:lvar, :r),
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :l),
    s(:lvar, :r),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:str, "nwes")),
      s(:pair,
        s(:sym, :padx),
        s(:int, 6)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 6)))),
  s(:send,
    s(:lvar, :scales), :grid_columnconfigure,
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :scales), :grid_columnconfigure,
    s(:int, 1),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :scales), :grid_rowconfigure,
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:lvasgn, :cmd,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Frame), :new,
      s(:gvar, :$BASE))),
  s(:lvasgn, :b_close,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Button), :new,
      s(:lvar, :cmd),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Close")),
        s(:pair,
          s(:sym, :underline),
          s(:int, 0)),
        s(:pair,
          s(:sym, :default),
          s(:sym, :normal)),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:send,
                s(:const, nil, :Tk), :root), :destroy)))))),
  s(:lvasgn, :b_help,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :Tile), :Button), :new,
      s(:lvar, :cmd),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Help")),
        s(:pair,
          s(:sym, :underline),
          s(:int, 0)),
        s(:pair,
          s(:sym, :default),
          s(:sym, :normal)),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :showHelp)))))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:str, "x"),
    s(:lvar, :b_close),
    s(:lvar, :b_help),
    s(:hash,
      s(:pair,
        s(:sym, :pady),
        s(:array,
          s(:int, 6),
          s(:int, 4))),
      s(:pair,
        s(:sym, :padx),
        s(:int, 4)))),
  s(:send,
    s(:const, nil, :TkGrid), :columnconfigure,
    s(:lvar, :cmd),
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:gvar, :$ROOT), :bind,
    s(:str, "KeyPress-Escape"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:const, nil, :Tk), :event_generate,
        s(:lvar, :b_close),
        s(:str, "<Invoke>")))),
  s(:send,
    s(:gvar, :$ROOT), :bind,
    s(:str, "<Help>"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:const, nil, :Tk), :event_generate,
        s(:lvar, :b_help),
        s(:str, "<Invoke>")))),
  s(:send,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tile), :KeyNav), :enableMnemonics,
    s(:gvar, :$ROOT)),
  s(:send,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :Tile), :KeyNav), :defaultButton,
    s(:lvar, :b_help)),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:send,
      s(:gvar, :$TOOLBARS), :[],
      s(:int, 0)),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:send,
      s(:gvar, :$TOOLBARS), :[],
      s(:int, 1)),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :control),
    s(:lvar, :nb),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :cmd),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :TkGrid), :columnconfigure,
    s(:gvar, :$ROOT),
    s(:int, 1),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:const, nil, :TkGrid), :rowconfigure,
    s(:gvar, :$ROOT),
    s(:int, 2),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:lvasgn, :menu,
    s(:send,
      s(:const, nil, :TkMenu), :new,
      s(:gvar, :$BASE))),
  s(:send,
    s(:gvar, :$ROOT), :menu,
    s(:lvar, :menu)),
  s(:lvasgn, :m_file,
    s(:send,
      s(:const, nil, :TkMenu), :new,
      s(:lvar, :menu),
      s(:hash,
        s(:pair,
          s(:sym, :tearoff),
          s(:int, 0))))),
  s(:send,
    s(:lvar, :menu), :add,
    s(:sym, :cascade),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "File")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 0)),
      s(:pair,
        s(:sym, :menu),
        s(:lvar, :m_file)))),
  s(:send,
    s(:lvar, :m_file), :add,
    s(:sym, :command),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Open")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 0)),
      s(:pair,
        s(:sym, :compound),
        s(:sym, :left)),
      s(:pair,
        s(:sym, :image),
        s(:send,
          s(:gvar, :$ICON), :[],
          s(:str, "open"))))),
  s(:send,
    s(:lvar, :m_file), :add,
    s(:sym, :command),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Save")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 0)),
      s(:pair,
        s(:sym, :compound),
        s(:sym, :left)),
      s(:pair,
        s(:sym, :image),
        s(:send,
          s(:gvar, :$ICON), :[],
          s(:str, "save"))))),
  s(:send,
    s(:lvar, :m_file), :add,
    s(:sym, :separator)),
  s(:lvasgn, :m_f_test,
    s(:send,
      s(:const, nil, :TkMenu), :new,
      s(:lvar, :menu),
      s(:hash,
        s(:pair,
          s(:sym, :tearoff),
          s(:int, 0))))),
  s(:send,
    s(:lvar, :m_file), :add,
    s(:sym, :cascade),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Test submenu")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 0)),
      s(:pair,
        s(:sym, :menu),
        s(:lvar, :m_f_test)))),
  s(:send,
    s(:lvar, :m_file), :add,
    s(:sym, :checkbutton),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Text check")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 5)),
      s(:pair,
        s(:sym, :variable),
        s(:send,
          s(:gvar, :$V), :ref,
          s(:sym, :MENUCHECK1))))),
  s(:send,
    s(:lvar, :m_file), :insert,
    s(:sym, :end),
    s(:sym, :separator)),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :windowingsystem), :!=,
      s(:str, "x11")),
    s(:begin,
      s(:send,
        s(:const, nil, :TkConsole), :create),
      s(:send,
        s(:lvar, :m_file), :insert,
        s(:sym, :end),
        s(:sym, :checkbutton),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Console")),
          s(:pair,
            s(:sym, :underline),
            s(:int, 5)),
          s(:pair,
            s(:sym, :variable),
            s(:send,
              s(:gvar, :$V), :ref,
              s(:sym, :CONSOLE))),
          s(:pair,
            s(:sym, :command),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :toggle_console))))),
      s(:def, :toggle_console,
        s(:args),
        s(:if,
          s(:send,
            s(:const, nil, :TkComm), :bool,
            s(:send,
              s(:gvar, :$V), :[],
              s(:sym, :CONSOLE))),
          s(:send,
            s(:const, nil, :TkConsole), :show),
          s(:send,
            s(:const, nil, :TkConsole), :hide)))), nil),
  s(:send,
    s(:lvar, :m_file), :add,
    s(:sym, :command),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Exit")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 1)),
      s(:pair,
        s(:sym, :command),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:const, nil, :Tk), :event_generate,
            s(:lvar, :b_close),
            s(:str, "<Invoke>")))))),
  s(:block,
    s(:send,
      s(:array,
        s(:str, "One"),
        s(:str, "Two"),
        s(:str, "Three"),
        s(:str, "Four")), :each),
    s(:args,
      s(:arg, :lbl)),
    s(:send,
      s(:lvar, :m_f_test), :add,
      s(:sym, :radiobutton),
      s(:hash,
        s(:pair,
          s(:sym, :label),
          s(:lvar, :lbl)),
        s(:pair,
          s(:sym, :variable),
          s(:send,
            s(:gvar, :$V), :ref,
            s(:sym, :MENURADIO1)))))),
  s(:send,
    s(:lvar, :menu), :add,
    s(:sym, :cascade),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Theme")),
      s(:pair,
        s(:sym, :underline),
        s(:int, 3)),
      s(:pair,
        s(:sym, :menu),
        s(:send, nil, :makeThemeMenu,
          s(:lvar, :menu))))),
  s(:send, nil, :setTheme,
    s(:send,
      s(:gvar, :$V), :[],
      s(:sym, :THEME))),
  s(:lvasgn, :values,
    s(:array,
      s(:str, "list"),
      s(:str, "abc"),
      s(:str, "def"),
      s(:str, "ghi"),
      s(:str, "jkl"),
      s(:str, "mno"),
      s(:str, "pqr"),
      s(:str, "stu"),
      s(:str, "vwx"),
      s(:str, "yz"))),
  s(:block,
    s(:send,
      s(:int, 2), :times),
    s(:args,
      s(:arg, :i)),
    s(:begin,
      s(:lvasgn, :cb,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Combobox), :new,
          s(:lvar, :combo),
          s(:hash,
            s(:pair,
              s(:sym, :values),
              s(:lvar, :values)),
            s(:pair,
              s(:sym, :textvariable),
              s(:send,
                s(:gvar, :$V), :ref,
                s(:sym, :COMBO)))))),
      s(:send,
        s(:lvar, :cb), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :top)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 2)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 2)),
          s(:pair,
            s(:sym, :expand),
            s(:false)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))),
      s(:if,
        s(:send,
          s(:lvar, :i), :==,
          s(:int, 1)),
        s(:begin,
          s(:send,
            s(:lvar, :cb), :ttk_state,
            s(:sym, :readonly)),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:lvar, :cb), :current=,
                s(:int, 3)),
              s(:resbody, nil, nil, nil), nil))), nil))),
  s(:if,
    s(:send, nil, :version?,
      s(:str, "0.5")),
    s(:begin,
      s(:lvasgn, :treeview,
        s(:nil)),
      s(:lvasgn, :scrollbar,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Scrollbar), :new,
          s(:lvar, :tree),
          s(:hash,
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:restarg, :args)),
                s(:send,
                  s(:lvar, :treeview), :yview,
                  s(:splat,
                    s(:lvar, :args)))))))),
      s(:lvasgn, :treeview,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Treeview), :new,
          s(:lvar, :tree),
          s(:hash,
            s(:pair,
              s(:sym, :columns),
              s(:array,
                s(:str, "Class"))),
            s(:pair,
              s(:sym, :padding),
              s(:int, 4)),
            s(:pair,
              s(:sym, :yscrollcommand),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:restarg, :args)),
                s(:send,
                  s(:lvar, :scrollbar), :set,
                  s(:splat,
                    s(:lvar, :args)))))))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :treeview),
        s(:lvar, :scrollbar),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "news")))),
      s(:send,
        s(:lvar, :tree), :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :tree), :grid_rowconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :tree), :grid_propagate,
        s(:int, 0)),
      s(:send,
        s(:lvar, :treeview), :insert,
        s(:str, ""),
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :id),
            s(:str, ".")),
          s(:pair,
            s(:sym, :text),
            s(:str, "Main Window")),
          s(:pair,
            s(:sym, :open),
            s(:false)),
          s(:pair,
            s(:sym, :values),
            s(:array,
              s(:send,
                s(:const, nil, :TkWinfo), :classname,
                s(:str, ".")))))),
      s(:send,
        s(:lvar, :treeview), :headingconfigure,
        s(:str, "#0"),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Widget")))),
      s(:send,
        s(:lvar, :treeview), :headingconfigure,
        s(:str, "Class"),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Class")))),
      s(:send,
        s(:lvar, :treeview), :bind,
        s(:str, "<TreeviewOpen>"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send, nil, :fillTree,
            s(:lvar, :treeview)))),
      s(:def, :fillTree,
        s(:args,
          s(:arg, :treeview)),
        s(:begin,
          s(:lvasgn, :id,
            s(:send,
              s(:lvar, :treeview), :focus_item)),
          s(:if,
            s(:send,
              s(:const, nil, :TkWinfo), :exist?,
              s(:lvar, :id)), nil,
            s(:send,
              s(:lvar, :treeview), :delete,
              s(:lvar, :id))),
          s(:send,
            s(:lvar, :treeview), :delete,
            s(:send,
              s(:lvar, :treeview), :children,
              s(:lvar, :id))),
          s(:for,
            s(:lvasgn, :child),
            s(:send,
              s(:const, nil, :TkWinfo), :children,
              s(:lvar, :id)),
            s(:begin,
              s(:send,
                s(:lvar, :treeview), :insert,
                s(:lvar, :id),
                s(:sym, :end),
                s(:hash,
                  s(:pair,
                    s(:sym, :id),
                    s(:lvar, :child)),
                  s(:pair,
                    s(:sym, :text),
                    s(:send,
                      s(:const, nil, :TkWinfo), :appname,
                      s(:lvar, :child))),
                  s(:pair,
                    s(:sym, :open),
                    s(:false)),
                  s(:pair,
                    s(:sym, :values),
                    s(:array,
                      s(:send,
                        s(:const, nil, :TkWinfo), :classname,
                        s(:lvar, :child)))))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkWinfo), :children,
                    s(:lvar, :child)), :empty?), nil,
                s(:send,
                  s(:lvar, :treeview), :insert,
                  s(:lvar, :child),
                  s(:sym, :end)))))))),
    s(:send,
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Tile), :Label), :new,
        s(:lvar, :tree),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "Treeview is supported on tile 0.5 or later...")))), :pack)),
  s(:gvasgn, :$Timers,
    s(:hash,
      s(:pair,
        s(:sym, :StateMonitor),
        s(:nil)),
      s(:pair,
        s(:sym, :FocusMonitor),
        s(:nil)))),
  s(:kwbegin,
    s(:rescue,
      s(:lvasgn, :msg,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Label), :new,
          s(:lvar, :others),
          s(:hash,
            s(:pair,
              s(:sym, :justify),
              s(:sym, :left)),
            s(:pair,
              s(:sym, :wraplength),
              s(:int, 300))))),
      s(:resbody, nil, nil,
        s(:lvasgn, :msg,
          s(:send,
            s(:const, nil, :TkMessage), :new,
            s(:lvar, :others),
            s(:hash,
              s(:pair,
                s(:sym, :aspect),
                s(:int, 200)))))), nil)),
  s(:gvasgn, :$Desc,
    s(:hash)),
  s(:lvasgn, :showDescription,
    s(:send,
      s(:const, nil, :TkBindTag), :new)),
  s(:send,
    s(:lvar, :showDescription), :bind,
    s(:str, "Enter"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :msg), :text,
        s(:send,
          s(:gvar, :$Desc), :[],
          s(:send,
            s(:lvar, :w), :path)))),
    s(:str, "%W")),
  s(:send,
    s(:lvar, :showDescription), :bind,
    s(:str, "Leave"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :msg), :text,
        s(:str, ""))),
    s(:str, "%W")),
  s(:block,
    s(:send,
      s(:array,
        s(:array,
          s(:sym, :trackStates),
          s(:str, "Widget states..."),
          s(:str, "Display/modify widget state bits")),
        s(:array,
          s(:sym, :scrollbarResizeDemo),
          s(:str, "Scrollbar resize behavior..."),
          s(:str, "Shows how Tile and standard scrollbars differ when they're sized too large")),
        s(:array,
          s(:sym, :trackFocus),
          s(:str, "Track keyboard focus..."),
          s(:str, "Display the name of the widget that currently has focus")),
        s(:array,
          s(:sym, :repeatDemo),
          s(:str, "Repeating buttons..."),
          s(:str, "Demonstrates custom classes (see demos/repeater.tcl)"))), :each),
    s(:args,
      s(:arg, :demo_cmd),
      s(:arg, :label),
      s(:arg, :description)),
    s(:begin,
      s(:lvasgn, :b,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Button), :new,
          s(:lvar, :others),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:lvar, :label)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:self), :__send__,
                  s(:lvar, :demo_cmd))))))),
      s(:send,
        s(:gvar, :$Desc), :[]=,
        s(:send,
          s(:lvar, :b), :path),
        s(:lvar, :description)),
      s(:op_asgn,
        s(:send,
          s(:lvar, :b), :bindtags), :<<,
        s(:lvar, :showDescription)),
      s(:send,
        s(:lvar, :b), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :top)),
          s(:pair,
            s(:sym, :expand),
            s(:false)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 6)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 6)))))),
  s(:send,
    s(:lvar, :msg), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :side),
        s(:sym, :bottom)),
      s(:pair,
        s(:sym, :expand),
        s(:true)),
      s(:pair,
        s(:sym, :fill),
        s(:sym, :both)))),
  s(:gvasgn, :$scrollbars,
    s(:nil)),
  s(:def, :scrollbarResizeDemo,
    s(:args),
    s(:begin,
      s(:if,
        s(:gvar, :$scrollbars),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:gvar, :$scrollbars), :destroy),
            s(:resbody, nil, nil, nil), nil)), nil),
      s(:gvasgn, :$scrollbars,
        s(:send,
          s(:const, nil, :TkToplevel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :title),
              s(:str, "Scrollbars")),
            s(:pair,
              s(:sym, :geometry),
              s(:str, "200x200"))))),
      s(:lvasgn, :f,
        s(:send,
          s(:const, nil, :TkFrame), :new,
          s(:gvar, :$scrollbars),
          s(:hash,
            s(:pair,
              s(:sym, :height),
              s(:int, 200))))),
      s(:lvasgn, :tsb,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Scrollbar), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:restarg, :args)),
                s(:send, nil, :sbstub,
                  s(:lvar, :tsb),
                  s(:splat,
                    s(:lvar, :args)))))))),
      s(:lvasgn, :sb,
        s(:send,
          s(:const, nil, :TkScrollbar), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:restarg, :args)),
                s(:send, nil, :sbstub,
                  s(:lvar, :sb),
                  s(:splat,
                    s(:lvar, :args)))))))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :tsb),
        s(:lvar, :sb),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :news)))),
      s(:send,
        s(:lvar, :sb), :set,
        s(:int, 0),
        s(:float, 0.5)),
      s(:send,
        s(:lvar, :f), :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :f), :grid_columnconfigure,
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :f), :grid_rowconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:lvar, :f), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)))))),
  s(:gvasgn, :$FocusInf,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash)),
  s(:gvasgn, :$focus,
    s(:nil)),
  s(:def, :trackFocus,
    s(:args),
    s(:begin,
      s(:if,
        s(:gvar, :$focus),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:gvar, :$focus), :destroy),
            s(:resbody, nil, nil, nil), nil)), nil),
      s(:gvasgn, :$focus,
        s(:send,
          s(:const, nil, :TkToplevel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :title),
              s(:str, "Keyboard focus"))))),
      s(:lvasgn, :i,
        s(:int, 0)),
      s(:block,
        s(:send,
          s(:array,
            s(:array,
              s(:str, "Focus widget:"),
              s(:sym, :Widget)),
            s(:array,
              s(:str, "Class:"),
              s(:sym, :WidgetClass)),
            s(:array,
              s(:str, "Next:"),
              s(:sym, :WidgetNext)),
            s(:array,
              s(:str, "Grab:"),
              s(:sym, :Grab)),
            s(:array,
              s(:str, "Status:"),
              s(:sym, :GrabStatus))), :each),
        s(:args,
          s(:arg, :label),
          s(:arg, :var_index)),
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Label), :new,
              s(:gvar, :$focus),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :label)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :e)))),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Label), :new,
              s(:gvar, :$focus),
              s(:hash,
                s(:pair,
                  s(:sym, :textvariable),
                  s(:send,
                    s(:gvar, :$FocusInf), :ref,
                    s(:lvar, :var_index))),
                s(:pair,
                  s(:sym, :width),
                  s(:int, 40)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :groove)))),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)))),
      s(:send,
        s(:gvar, :$focus), :grid_columnconfigure,
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:gvar, :$focus), :grid_rowconfigure,
        s(:lvar, :i),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:gvar, :$focus), :bind,
        s(:str, "Destroy"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:const, nil, :Tk), :after_cancel,
            s(:send,
              s(:gvar, :$Timers), :[],
              s(:sym, :FocusMonitor))))),
      s(:send, nil, :focusMonitor))),
  s(:def, :focusMonitor,
    s(:args),
    s(:begin,
      s(:send,
        s(:gvar, :$FocusInf), :[]=,
        s(:sym, :Widget),
        s(:lvasgn, :focus_win,
          s(:send,
            s(:const, nil, :Tk), :focus))),
      s(:if,
        s(:lvar, :focus_win),
        s(:begin,
          s(:send,
            s(:gvar, :$FocusInf), :[]=,
            s(:sym, :WidgetClass),
            s(:send,
              s(:lvar, :focus_win), :winfo_classname)),
          s(:send,
            s(:gvar, :$FocusInf), :[]=,
            s(:sym, :WidgetNext),
            s(:send,
              s(:const, nil, :Tk), :focus_next,
              s(:lvar, :focus_win)))),
        s(:send,
          s(:gvar, :$FocusInf), :[]=,
          s(:sym, :WidgetClass),
          s(:send,
            s(:gvar, :$FocusInf), :[]=,
            s(:sym, :WidgetNext),
            s(:str, "")))),
      s(:send,
        s(:gvar, :$FocusInf), :[]=,
        s(:sym, :Grab),
        s(:lvasgn, :grab_wins,
          s(:send,
            s(:const, nil, :Tk), :current_grabs))),
      s(:if,
        s(:send,
          s(:lvar, :grab_wins), :empty?),
        s(:send,
          s(:gvar, :$FocusInf), :[]=,
          s(:sym, :GrabStatus),
          s(:str, "")),
        s(:send,
          s(:gvar, :$FocusInf), :[]=,
          s(:sym, :GrabStatus),
          s(:send,
            s(:send,
              s(:lvar, :grab_wins), :[],
              s(:int, 0)), :grab_status))),
      s(:send,
        s(:gvar, :$Timers), :[]=,
        s(:sym, :FocusMonitor),
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 200),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :focusMonitor)))))),
  s(:gvasgn, :$Widget,
    s(:send,
      s(:const, nil, :TkVariable), :new)),
  s(:send,
    s(:const,
      s(:const, nil, :TkBindTag), :ALL), :bind,
    s(:str, "Control-Shift-ButtonPress-1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send,
          s(:gvar, :$Widget), :value=,
          s(:lvar, :w)),
        s(:send, nil, :updateStates),
        s(:send,
          s(:const, nil, :Tk), :callback_break))),
    s(:str, "%W")),
  s(:gvasgn, :$states_list,
    s(:array,
      s(:str, "active"),
      s(:str, "disabled"),
      s(:str, "focus"),
      s(:str, "pressed"),
      s(:str, "selected"),
      s(:str, "background"),
      s(:str, "indeterminate"),
      s(:str, "invalid"),
      s(:str, "default"))),
  s(:gvasgn, :$states_btns,
    s(:hash)),
  s(:gvasgn, :$states,
    s(:nil)),
  s(:gvasgn, :$State,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash)),
  s(:def, :trackStates,
    s(:args),
    s(:begin,
      s(:if,
        s(:gvar, :$states),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:gvar, :$state), :destroy),
            s(:resbody, nil, nil, nil), nil)), nil),
      s(:gvasgn, :$states,
        s(:send,
          s(:const, nil, :TkToplevel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :title),
              s(:str, "Widget states"))))),
      s(:lvasgn, :l_inf,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Label), :new,
          s(:gvar, :$states),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Press Control-Shift-Button-1 on any widget"))))),
      s(:lvasgn, :l_lw,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Label), :new,
          s(:gvar, :$states),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Widget:")),
            s(:pair,
              s(:sym, :anchor),
              s(:sym, :e)),
            s(:pair,
              s(:sym, :relief),
              s(:sym, :groove))))),
      s(:lvasgn, :l_w,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Label), :new,
          s(:gvar, :$states),
          s(:hash,
            s(:pair,
              s(:sym, :textvariable),
              s(:gvar, :$Widget)),
            s(:pair,
              s(:sym, :anchor),
              s(:sym, :w)),
            s(:pair,
              s(:sym, :relief),
              s(:sym, :groove))))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :l_inf),
        s(:str, "-"),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :ew)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 6)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 6)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :l_lw),
        s(:lvar, :l_w),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :ew)))),
      s(:block,
        s(:send,
          s(:gvar, :$states_list), :each),
        s(:args,
          s(:arg, :st)),
        s(:begin,
          s(:lvasgn, :cb,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Checkbutton), :new,
              s(:gvar, :$states),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:lvar, :st)),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:gvar, :$State), :ref,
                    s(:lvar, :st))),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :changeState,
                      s(:lvar, :st))))))),
          s(:send,
            s(:gvar, :$states_btns), :[]=,
            s(:lvar, :st),
            s(:lvar, :cb)),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:str, "x"),
            s(:lvar, :cb),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :nsew)))))),
      s(:send,
        s(:gvar, :$states), :grid_columnconfigure,
        s(:int, 1),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:lvasgn, :f_cmd,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:gvar, :$states))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:str, "x"),
        s(:lvar, :f_cmd),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :nse)))),
      s(:lvasgn, :b_close,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Button), :new,
          s(:lvar, :f_cmd),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Close")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:gvar, :$states), :destroy)))))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:str, "x"),
        s(:lvar, :b_close),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:int, 4)),
          s(:pair,
            s(:sym, :pady),
            s(:array,
              s(:int, 6),
              s(:int, 4))))),
      s(:send,
        s(:lvar, :f_cmd), :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:gvar, :$states), :bind,
        s(:str, "KeyPress-Escape"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:const, nil, :Tk), :event_generate,
            s(:lvar, :b_close),
            s(:str, "<Invoke>")))),
      s(:send,
        s(:gvar, :$states), :bind,
        s(:str, "Destroy"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:const, nil, :Tk), :after_cancel,
            s(:send,
              s(:gvar, :$Timers), :[],
              s(:sym, :StateMonitor))))),
      s(:send, nil, :stateMonitor))),
  s(:def, :stateMonitor,
    s(:args),
    s(:begin,
      s(:if,
        s(:send,
          s(:send,
            s(:gvar, :$Widget), :value), :!=,
          s(:str, "")),
        s(:send, nil, :updateStates), nil),
      s(:send,
        s(:gvar, :$Timers), :[]=,
        s(:sym, :StateMonitor),
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 200),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :stateMonitor)))))),
  s(:def, :updateStates,
    s(:args),
    s(:block,
      s(:send,
        s(:gvar, :$states_list), :each),
      s(:args,
        s(:arg, :st)),
      s(:kwbegin,
        s(:rescue,
          s(:send,
            s(:gvar, :$State), :[]=,
            s(:lvar, :st),
            s(:send,
              s(:send,
                s(:gvar, :$Widget), :window), :ttk_instate,
              s(:lvar, :st))),
          s(:resbody, nil, nil,
            s(:send,
              s(:send,
                s(:gvar, :$states_btns), :[],
                s(:lvar, :st)), :ttk_state,
              s(:str, "disabled"))),
          s(:send,
            s(:send,
              s(:gvar, :$states_btns), :[],
              s(:lvar, :st)), :ttk_state,
            s(:str, "!disabled")))))),
  s(:def, :changeState,
    s(:args,
      s(:arg, :st)),
    s(:if,
      s(:send,
        s(:send,
          s(:gvar, :$Widget), :value), :!=,
        s(:str, "")),
      s(:if,
        s(:send,
          s(:gvar, :$State), :bool_element,
          s(:lvar, :st)),
        s(:send,
          s(:send,
            s(:gvar, :$Widget), :window), :ttk_state,
          s(:lvar, :st)),
        s(:send,
          s(:send,
            s(:gvar, :$Widget), :window), :ttk_state,
          s(:dstr,
            s(:str, "!"),
            s(:begin,
              s(:lvar, :st))))), nil)),
  s(:def, :repeatDemo,
    s(:args),
    s(:begin,
      s(:if,
        s(:and,
          s(:defined?,
            s(:gvar, :$repeatDemo)),
          s(:send,
            s(:gvar, :$repeatDemo), :exist?)),
        s(:begin,
          s(:send,
            s(:gvar, :$repeatDemo), :deiconify),
          s(:return)), nil),
      s(:gvasgn, :$repeatDemo,
        s(:send,
          s(:const, nil, :TkToplevel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :title),
              s(:str, "Repeating button"))))),
      s(:lvasgn, :f,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Frame), :new,
          s(:gvar, :$repeatDemo))),
      s(:lvasgn, :b,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Tile), :Button), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :class),
              s(:str, "Repeater")),
            s(:pair,
              s(:sym, :text),
              s(:str, "Press and hold"))))),
      s(:if,
        s(:send, nil, :version?,
          s(:str, "0.6")),
        s(:lvasgn, :p,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :Tile), :Progressbar), :new,
            s(:lvar, :f),
            s(:hash,
              s(:pair,
                s(:sym, :orient),
                s(:sym, :horizontal)),
              s(:pair,
                s(:sym, :maximum),
                s(:int, 10))))),
        s(:begin,
          s(:lvasgn, :p,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :Tile), :Progress), :new,
              s(:lvar, :f),
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :horizontal)),
                s(:pair,
                  s(:sym, :from),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :to),
                  s(:int, 10))))),
          s(:defs,
            s(:lvar, :p), :step,
            s(:args),
            s(:begin,
              s(:lvasgn, :i,
                s(:send,
                  s(:send,
                    s(:self), :get), :+,
                  s(:int, 1))),
              s(:if,
                s(:send,
                  s(:lvar, :i), :>,
                  s(:send,
                    s(:self), :to)),
                s(:lvasgn, :i,
                  s(:send,
                    s(:self), :from)), nil),
              s(:send,
                s(:self), :set,
                s(:lvar, :i)))))),
      s(:block,
        s(:send,
          s(:lvar, :b), :command),
        s(:args),
        s(:send,
          s(:lvar, :p), :step)),
      s(:send,
        s(:lvar, :b), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:false)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :none)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 6)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 6)))),
      s(:send,
        s(:lvar, :p), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :right)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 6)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 6)))),
      s(:send,
        s(:lvar, :f), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)))))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
