s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tkHTML")),
  s(:lvasgn, :file,
    s(:send,
      s(:const, nil, :ARGV), :[],
      s(:int, 0))),
  s(:class,
    s(:const, nil, :TkHTML_File_Viewer), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComm)),
      s(:cvasgn, :@@biggray,
        s(:send,
          s(:const, nil, :TkPhotoImage), :new,
          s(:hash,
            s(:pair,
              s(:sym, :data),
              s(:dstr,
                s(:str, "    R0lGODdhPAA+APAAALi4uAAAACwAAAAAPAA+AAACQISPqcvtD6OctNqLs968+w+G4kiW5omm\n"),
                s(:str, "    6sq27gvH8kzX9o3n+s73/g8MCofEovGITCqXzKbzCY1Kp9Sq9YrNFgsAO///\n")))))),
      s(:cvasgn, :@@smgray,
        s(:send,
          s(:const, nil, :TkPhotoImage), :new,
          s(:hash,
            s(:pair,
              s(:sym, :data),
              s(:dstr,
                s(:str, "    R0lGODdhOAAYAPAAALi4uAAAACwAAAAAOAAYAAACI4SPqcvtD6OctNqLs968+w+G4kiW5omm\n"),
                s(:str, "    6sq27gvH8kzX9m0VADv/\n")))))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :file,
            s(:nil))),
        s(:begin,
          s(:ivasgn, :@root,
            s(:send,
              s(:const, nil, :TkRoot), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :title),
                  s(:str, "HTML File Viewer")),
                s(:pair,
                  s(:sym, :iconname),
                  s(:str, "HV"))))),
          s(:ivasgn, :@fswin,
            s(:nil)),
          s(:ivasgn, :@html,
            s(:nil)),
          s(:ivasgn, :@html_fs,
            s(:nil)),
          s(:ivasgn, :@hotkey,
            s(:hash)),
          s(:ivasgn, :@applet_arg,
            s(:send,
              s(:const, nil, :TkVarAccess), :new_hash,
              s(:str, "AppletArg"))),
          s(:ivasgn, :@images,
            s(:hash)),
          s(:ivasgn, :@old_imgs,
            s(:hash)),
          s(:ivasgn, :@big_imgs,
            s(:hash)),
          s(:ivasgn, :@last_dir,
            s(:send,
              s(:const, nil, :Dir), :pwd)),
          s(:ivasgn, :@last_file,
            s(:str, "")),
          s(:ivasgn, :@key_block,
            s(:false)),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :HTML_Widget), :ClippingWindow), :bind,
            s(:str, "1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :ksym)),
              s(:send, nil, :key_press,
                s(:lvar, :w),
                s(:lvar, :ksym))),
            s(:str, "%W Down")),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :HTML_Widget), :ClippingWindow), :bind,
            s(:str, "3"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :ksym)),
              s(:send, nil, :key_press,
                s(:lvar, :w),
                s(:lvar, :ksym))),
            s(:str, "%W Up")),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :HTML_Widget), :ClippingWindow), :bind,
            s(:str, "2"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :ksym)),
              s(:send, nil, :key_press,
                s(:lvar, :w),
                s(:lvar, :ksym))),
            s(:str, "%W Down")),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :HTML_Widget), :ClippingWindow), :bind,
            s(:str, "KeyPress"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :ksym)),
              s(:send, nil, :key_press,
                s(:lvar, :w),
                s(:lvar, :ksym))),
            s(:str, "%W %K")),
          s(:lvasgn, :menu_spec,
            s(:array,
              s(:array,
                s(:array,
                  s(:str, "File"),
                  s(:int, 0)),
                s(:array,
                  s(:str, "Open"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :sel_load)),
                  s(:int, 0)),
                s(:array,
                  s(:str, "Full Screen"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :fullscreen)),
                  s(:int, 0)),
                s(:array,
                  s(:str, "Refresh"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :refresh)),
                  s(:int, 0)),
                s(:str, "---"),
                s(:array,
                  s(:str, "Exit"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :exit)),
                  s(:int, 1))))),
          s(:lvasgn, :mbar,
            s(:send,
              s(:ivar, :@root), :add_menubar,
              s(:lvar, :menu_spec))),
          s(:ivasgn, :@html,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :HTML_Widget), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 512)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 384)),
                s(:pair,
                  s(:sym, :padx),
                  s(:int, 5)),
                s(:pair,
                  s(:sym, :pady),
                  s(:int, 9)),
                s(:pair,
                  s(:sym, :formcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :form_cmd,
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :imagecommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :image_cmd,
                      s(:int, 1),
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :scriptcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :script_cmd,
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :appletcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :applet_cmd,
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :hyperlinkcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :hyper_cmd,
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :fontcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :pick_font,
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :appletcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :run_applet,
                      s(:str, "small"),
                      s(:splat,
                        s(:lvar, :args))))),
                s(:pair,
                  s(:sym, :bg),
                  s(:str, "white")),
                s(:pair,
                  s(:sym, :tablerelief),
                  s(:sym, :raised))))),
          s(:send,
            s(:ivar, :@html), :token_handler,
            s(:str, "meta"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:restarg, :args)),
              s(:send, nil, :meta,
                s(:ivar, :@html),
                s(:splat,
                  s(:lvar, :args))))),
          s(:lvasgn, :vscr,
            s(:send,
              s(:ivar, :@html), :yscrollbar,
              s(:send,
                s(:const, nil, :TkScrollbar), :new))),
          s(:lvasgn, :hscr,
            s(:send,
              s(:ivar, :@html), :xscrollbar,
              s(:send,
                s(:const, nil, :TkScrollbar), :new))),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:ivar, :@html),
            s(:lvar, :vscr),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:lvar, :hscr),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:ivar, :@root), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@root), :grid_columnconfigure,
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 0)))),
          s(:send,
            s(:ivar, :@root), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@root), :grid_rowconfigure,
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 0)))),
          s(:send,
            s(:send,
              s(:ivar, :@html), :clipwin), :focus),
          s(:send,
            s(:const, nil, :Tk), :update),
          s(:if,
            s(:and,
              s(:lvar, :file),
              s(:send,
                s(:lvar, :file), :!=,
                s(:str, ""))),
            s(:send, nil, :load_file,
              s(:lvar, :file)), nil))),
      s(:def, :pick_font,
        s(:args,
          s(:arg, :size),
          s(:arg, :attrs)),
        s(:send,
          s(:array,
            s(:begin,
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :attrs), :=~,
                    s(:regexp,
                      s(:str, "fixed"),
                      s(:regopt)))),
                s(:str, "courier"),
                s(:str, "charter"))),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 12), :*,
                  s(:begin,
                    s(:send,
                      s(:float, 1.2), :**,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :size), :to_f), :-,
                          s(:float, 4.0))))))), :to_i),
            s(:begin,
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :attrs), :=~,
                    s(:regexp,
                      s(:str, "italic"),
                      s(:regopt)))),
                s(:str, "italic"),
                s(:str, "roman"))),
            s(:begin,
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :attrs), :=~,
                    s(:regexp,
                      s(:str, "bold"),
                      s(:regopt)))),
                s(:str, "bold"),
                s(:str, "normal")))), :join,
          s(:str, " "))),
      s(:def, :pick_font_fs,
        s(:args,
          s(:arg, :size),
          s(:arg, :attrs)),
        s(:begin,
          s(:lvasgn, :baseFontSize,
            s(:int, 24)),
          s(:send,
            s(:array,
              s(:begin,
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :attrs), :=~,
                      s(:regexp,
                        s(:str, "fixed"),
                        s(:regopt)))),
                  s(:str, "courier"),
                  s(:str, "charter"))),
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :baseFontSize), :*,
                    s(:begin,
                      s(:send,
                        s(:float, 1.2), :**,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :size), :to_f), :-,
                            s(:float, 4.0))))))), :to_i),
              s(:begin,
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :attrs), :=~,
                      s(:regexp,
                        s(:str, "italic"),
                        s(:regopt)))),
                  s(:str, "italic"),
                  s(:str, "roman"))),
              s(:begin,
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :attrs), :=~,
                      s(:regexp,
                        s(:str, "bold"),
                        s(:regopt)))),
                  s(:str, "bold"),
                  s(:str, "normal")))), :join,
            s(:str, " ")))),
      s(:def, :hyper_cmd,
        s(:args,
          s(:restarg, :args)),
        s(:send, nil, :puts,
          s(:dstr,
            s(:str, "HyperlinkCommand: "),
            s(:begin,
              s(:send,
                s(:lvar, :args), :inspect))))),
      s(:def, :run_applet,
        s(:args,
          s(:arg, :size),
          s(:arg, :w),
          s(:arg, :arglist)),
        s(:begin,
          s(:send,
            s(:send, nil, :applet_arg), :value=,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:splat,
                s(:send, nil, :simplelist,
                  s(:lvar, :arglist))))),
          s(:if,
            s(:send,
              s(:ivar, :@applet_arg), :key?,
              s(:str, "src")), nil,
            s(:return)),
          s(:lvasgn, :src,
            s(:send,
              s(:ivar, :@html), :remove,
              s(:send,
                s(:ivar, :@applet_arg), :[],
                s(:str, "src")))),
          s(:send,
            s(:ivar, :@applet_arg), :[]=,
            s(:str, "window"),
            s(:lvar, :w)),
          s(:send,
            s(:ivar, :@applet_arg), :[]=,
            s(:str, "fontsize"),
            s(:lvar, :size)),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :Tk), :load_tclscript,
                s(:lvar, :src)),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:send, nil, :puts,
                  s(:dstr,
                    s(:str, "Applet error: "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message))))), nil)))),
      s(:def, :form_cmd,
        s(:args,
          s(:arg, :n),
          s(:arg, :cmd),
          s(:restarg, :args)), nil),
      s(:def, :move_big_image,
        s(:args,
          s(:arg, :b)),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@big_imgs), :key?,
              s(:lvar, :b)), nil,
            s(:return)),
          s(:send,
            s(:lvar, :b), :copy,
            s(:send,
              s(:ivar, :@big_imgs), :[],
              s(:lvar, :b))),
          s(:send,
            s(:send,
              s(:ivar, :@big_imgs), :[],
              s(:lvar, :b)), :delete),
          s(:send,
            s(:ivar, :@big_imgs), :delete,
            s(:lvar, :b)))),
      s(:def, :image_cmd,
        s(:args,
          s(:arg, :hs),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :fn,
            s(:send,
              s(:lvar, :args), :[],
              s(:int, 0))),
          s(:if,
            s(:send,
              s(:ivar, :@old_imgs), :key?,
              s(:lvar, :fn)),
            s(:return,
              s(:begin,
                s(:send,
                  s(:ivar, :@images), :[]=,
                  s(:lvar, :fn),
                  s(:send,
                    s(:ivar, :@old_imgs), :delete,
                    s(:lvar, :fn))))), nil),
          s(:kwbegin,
            s(:rescue,
              s(:lvasgn, :img,
                s(:send,
                  s(:const, nil, :TkPhotoImage), :new,
                  s(:hash,
                    s(:pair,
                      s(:sym, :file),
                      s(:lvar, :fn))))),
              s(:resbody, nil, nil,
                s(:return,
                  s(:begin,
                    s(:if,
                      s(:begin,
                        s(:lvar, :hs)),
                      s(:cvar, :@@smallgray),
                      s(:cvar, :@@biggray))))), nil)),
          s(:if,
            s(:lvar, :hs),
            s(:begin,
              s(:lvasgn, :img2,
                s(:send,
                  s(:const, nil, :TkPhotoImage), :new)),
              s(:send,
                s(:lvar, :img2), :copy,
                s(:lvar, :img),
                s(:hash,
                  s(:pair,
                    s(:sym, :subsample),
                    s(:array,
                      s(:int, 2),
                      s(:int, 2))))),
              s(:send,
                s(:lvar, :img), :delete),
              s(:lvasgn, :img,
                s(:lvar, :img2))), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :img), :width), :*,
                s(:send,
                  s(:lvar, :img), :height)), :>,
              s(:int, 20000)),
            s(:begin,
              s(:lvasgn, :b,
                s(:send,
                  s(:const, nil, :TkPhotoImage), :new,
                  s(:hash,
                    s(:pair,
                      s(:sym, :width),
                      s(:send,
                        s(:lvar, :img), :width)),
                    s(:pair,
                      s(:sym, :height),
                      s(:send,
                        s(:lvar, :img), :height))))),
              s(:send,
                s(:ivar, :@big_imgs), :[]=,
                s(:lvar, :b),
                s(:lvar, :img)),
              s(:lvasgn, :img,
                s(:lvar, :b)),
              s(:send,
                s(:const, nil, :Tk), :after_idle,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :move_big_image,
                    s(:lvar, :b))))), nil),
          s(:send,
            s(:ivar, :@images), :[]=,
            s(:lvar, :fn),
            s(:lvar, :img)),
          s(:lvar, :img))),
      s(:def, :script_cmd,
        s(:args,
          s(:restarg, :args)), nil),
      s(:def, :applet_cmd,
        s(:args,
          s(:arg, :w),
          s(:arg, :arglist)), nil),
      s(:def, :href_binding,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:lvasgn, :lst,
            s(:send,
              s(:lvar, :w), :href,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:if,
            s(:send,
              s(:lvar, :lst), :empty?), nil,
            s(:send, nil, :process_url,
              s(:lvar, :lst))))),
      s(:def, :sel_load,
        s(:args),
        s(:begin,
          s(:lvasgn, :filetypes,
            s(:array,
              s(:array,
                s(:str, "Html Files"),
                s(:array,
                  s(:str, ".html"),
                  s(:str, ".htm"))),
              s(:array,
                s(:str, "All Files"),
                s(:str, "*")))),
          s(:lvasgn, :f,
            s(:send,
              s(:const, nil, :Tk), :getOpenFile,
              s(:hash,
                s(:pair,
                  s(:sym, :initialdir),
                  s(:ivar, :@last_dir)),
                s(:pair,
                  s(:sym, :filetypes),
                  s(:lvar, :filetypes))))),
          s(:if,
            s(:send,
              s(:lvar, :f), :!=,
              s(:str, "")),
            s(:begin,
              s(:send, nil, :load_file,
                s(:lvar, :f)),
              s(:ivasgn, :@last_dir,
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:lvar, :f)))), nil))),
      s(:def, :clear_screen,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:ivar, :@html_fs),
              s(:send,
                s(:ivar, :@html_fs), :exist?)),
            s(:lvasgn, :w,
              s(:ivar, :@html_fs)),
            s(:lvasgn, :w,
              s(:ivar, :@html))),
          s(:send,
            s(:lvar, :w), :clear),
          s(:send,
            s(:ivar, :@old_imgs), :clear),
          s(:send,
            s(:ivar, :@big_imgs), :clear),
          s(:send,
            s(:ivar, :@hotkey), :clear),
          s(:block,
            s(:send,
              s(:ivar, :@images), :each),
            s(:args,
              s(:arg, :k),
              s(:arg, :v)),
            s(:send,
              s(:ivar, :@old_imgs), :[]=,
              s(:lvar, :k),
              s(:lvar, :v))),
          s(:send,
            s(:ivar, :@images), :clear))),
      s(:def, :read_file,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:kwbegin,
            s(:ensure,
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :fp,
                    s(:send, nil, :open,
                      s(:lvar, :name),
                      s(:str, "r"))),
                  s(:lvasgn, :ret,
                    s(:send,
                      s(:lvar, :fp), :read,
                      s(:send,
                        s(:const, nil, :File), :size,
                        s(:lvar, :name))))),
                s(:resbody, nil, nil,
                  s(:begin,
                    s(:lvasgn, :ret,
                      s(:nil)),
                    s(:lvasgn, :fp,
                      s(:nil)),
                    s(:send,
                      s(:const, nil, :Tk), :messageBox,
                      s(:hash,
                        s(:pair,
                          s(:sym, :icon),
                          s(:str, "error")),
                        s(:pair,
                          s(:sym, :message),
                          s(:dstr,
                            s(:str, "fail to open '"),
                            s(:begin,
                              s(:lvar, :name)),
                            s(:str, "'"))),
                        s(:pair,
                          s(:sym, :type),
                          s(:sym, :ok)))))), nil),
              s(:if,
                s(:lvar, :fp),
                s(:send,
                  s(:lvar, :fp), :close), nil))),
          s(:lvar, :ret))),
      s(:def, :process_url,
        s(:args,
          s(:arg, :url)),
        s(:case,
          s(:send,
            s(:lvar, :url), :[],
            s(:int, 0)),
          s(:when,
            s(:regexp,
              s(:str, "^file:"),
              s(:regopt)),
            s(:send, nil, :load_file,
              s(:send,
                s(:send,
                  s(:lvar, :url), :[],
                  s(:int, 0)), :[],
                s(:irange,
                  s(:int, 5),
                  s(:int, -1))))),
          s(:when,
            s(:regexp,
              s(:str, "^exec:"),
              s(:regopt)),
            s(:send,
              s(:const, nil, :Tk), :ip_eval,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :url), :[],
                    s(:int, 0)), :[],
                  s(:irange,
                    s(:int, 5),
                    s(:int, -1))), :tr,
                s(:str, "\\"),
                s(:str, " ")))),
          s(:send, nil, :load_file,
            s(:send,
              s(:lvar, :url), :[],
              s(:int, 0))))),
      s(:def, :load_file,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:if,
            s(:begin,
              s(:lvasgn, :doc,
                s(:send, nil, :read_file,
                  s(:lvar, :name)))), nil,
            s(:return)),
          s(:send, nil, :clear_screen),
          s(:ivasgn, :@last_file,
            s(:lvar, :name)),
          s(:if,
            s(:and,
              s(:ivar, :@html_fs),
              s(:send,
                s(:ivar, :@html_fs), :exist?)),
            s(:lvasgn, :w,
              s(:ivar, :@html_fs)),
            s(:lvasgn, :w,
              s(:ivar, :@html))),
          s(:send,
            s(:lvar, :w), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :base),
                s(:lvar, :name)))),
          s(:send,
            s(:lvar, :w), :parse,
            s(:lvar, :doc)),
          s(:send,
            s(:lvar, :w), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :cursor),
                s(:str, "top_left_arrow")))),
          s(:send,
            s(:ivar, :@old_imgs), :clear))),
      s(:def, :refresh,
        s(:args,
          s(:restarg, :args)),
        s(:if,
          s(:ivar, :@last_file),
          s(:send, nil, :load_file,
            s(:ivar, :@last_file)), nil)),
      s(:def, :meta,
        s(:args,
          s(:arg, :w),
          s(:arg, :tag),
          s(:arg, :alist)),
        s(:begin,
          s(:lvasgn, :v,
            s(:send,
              s(:const, nil, :Hash), :[],
              s(:splat,
                s(:send, nil, :simplelist,
                  s(:lvar, :alist))))),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :v), :key?,
                s(:str, "key")),
              s(:send,
                s(:lvar, :v), :key?,
                s(:str, "href"))),
            s(:send,
              s(:ivar, :@hotkey), :[]=,
              s(:send,
                s(:lvar, :v), :[],
                s(:str, "key")),
              s(:send,
                s(:lvar, :w), :resolve,
                s(:send,
                  s(:lvar, :v), :[],
                  s(:str, "href")))), nil),
          s(:if,
            s(:send,
              s(:lvar, :v), :key?,
              s(:str, "next")),
            s(:send,
              s(:ivar, :@hotkey), :[]=,
              s(:str, "Down"),
              s(:send,
                s(:lvar, :v), :[],
                s(:str, "next"))), nil),
          s(:if,
            s(:send,
              s(:lvar, :v), :key?,
              s(:str, "prev")),
            s(:send,
              s(:ivar, :@hotkey), :[]=,
              s(:str, "Up"),
              s(:send,
                s(:lvar, :v), :[],
                s(:str, "prev"))), nil),
          s(:if,
            s(:send,
              s(:lvar, :v), :key?,
              s(:str, "other")),
            s(:send,
              s(:ivar, :@hotkey), :[]=,
              s(:str, "o"),
              s(:send,
                s(:lvar, :v), :[],
                s(:str, "other"))), nil))),
      s(:def, :fullscreen_off,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@fswin), :destroy),
          s(:send,
            s(:ivar, :@root), :deiconify),
          s(:send,
            s(:const, nil, :Tk), :update),
          s(:send,
            s(:ivar, :@root), :raise),
          s(:send,
            s(:send,
              s(:ivar, :@html), :clipwin), :focus),
          s(:send, nil, :clear_screen),
          s(:send,
            s(:ivar, :@old_imgs), :clear),
          s(:send, nil, :refresh))),
      s(:def, :fullscreen,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:ivar, :@fswin),
              s(:send,
                s(:ivar, :@fswin), :exist?)),
            s(:begin,
              s(:send,
                s(:ivar, :@fswin), :deiconify),
              s(:send,
                s(:const, nil, :Tk), :update),
              s(:send,
                s(:ivar, :@fswin), :raise),
              s(:return)), nil),
          s(:lvasgn, :width,
            s(:send,
              s(:ivar, :@root), :winfo_screenwidth)),
          s(:lvasgn, :height,
            s(:send,
              s(:ivar, :@root), :winfo_screenheight)),
          s(:ivasgn, :@fswin,
            s(:send,
              s(:const, nil, :TkToplevel), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :overrideredirect),
                  s(:true)),
                s(:pair,
                  s(:sym, :geometry),
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :width)),
                    s(:str, "x"),
                    s(:begin,
                      s(:lvar, :height)),
                    s(:str, "+0+0")))))),
          s(:ivasgn, :@html_fs,
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :HTML_Widget), :new,
                s(:ivar, :@fswin),
                s(:hash,
                  s(:pair,
                    s(:sym, :padx),
                    s(:int, 5)),
                  s(:pair,
                    s(:sym, :pady),
                    s(:int, 9)),
                  s(:pair,
                    s(:sym, :formcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :form_cmd,
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :imagecommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :image_cmd,
                        s(:int, 0),
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :scriptcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :script_cmd,
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :appletcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :applet_cmd,
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :hyperlinkcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :hyper_cmd,
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :appletcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :run_applet,
                        s(:str, "big"),
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :fontcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send, nil, :pick_font_fs,
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:pair,
                    s(:sym, :bg),
                    s(:str, "white")),
                  s(:pair,
                    s(:sym, :tablerelief),
                    s(:sym, :raised)),
                  s(:pair,
                    s(:sym, :cursor),
                    s(:sym, :tcross)))),
              s(:args),
              s(:begin,
                s(:send, nil, :pack,
                  s(:hash,
                    s(:pair,
                      s(:sym, :fill),
                      s(:sym, :both)),
                    s(:pair,
                      s(:sym, :expand),
                      s(:true)))),
                s(:send, nil, :token_handler,
                  s(:str, "meta"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:restarg, :args)),
                    s(:send, nil, :meta,
                      s(:self),
                      s(:splat,
                        s(:lvar, :args)))))))),
          s(:send, nil, :clear_screen),
          s(:send,
            s(:ivar, :@old_imgs), :clear),
          s(:send, nil, :refresh),
          s(:send,
            s(:const, nil, :Tk), :update),
          s(:send,
            s(:send,
              s(:ivar, :@html_fs), :clipwin), :focus))),
      s(:def, :key_press,
        s(:args,
          s(:arg, :w),
          s(:arg, :keysym)),
        s(:begin,
          s(:if,
            s(:ivar, :@key_block),
            s(:return), nil),
          s(:ivasgn, :@key_block,
            s(:true)),
          s(:send,
            s(:const, nil, :Tk), :after,
            s(:int, 250),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:ivasgn, :@key_block,
                s(:false)))),
          s(:if,
            s(:send,
              s(:ivar, :@hotkey), :key?,
              s(:lvar, :keysym)),
            s(:send, nil, :process_url,
              s(:send,
                s(:ivar, :@hotkey), :[],
                s(:lvar, :keysym))), nil),
          s(:case,
            s(:lvar, :keysym),
            s(:when,
              s(:str, "Escape"),
              s(:if,
                s(:and,
                  s(:ivar, :@fswin),
                  s(:send,
                    s(:ivar, :@fswin), :exist?)),
                s(:send, nil, :fullscreen_off),
                s(:send, nil, :fullscreen))), nil))))),
  s(:send,
    s(:const, nil, :TkHTML_File_Viewer), :new,
    s(:lvar, :file)),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
