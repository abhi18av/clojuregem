s(:begin,
  s(:def, :random_N,
    s(:args),
    s(:or,
      s(:send,
        s(:ivar, :@RandomN), :[],
        s(:int, 0)),
      s(:int, 500))),
  s(:def, :demoRandom,
    s(:args,
      s(:arg, :t)),
    s(:begin,
      s(:send, nil, :init_pics,
        s(:str, "folder-*"),
        s(:str, "small-*")),
      s(:lvasgn, :height,
        s(:send,
          s(:send,
            s(:lvar, :t), :font), :metrics,
          s(:sym, :linespace))),
      s(:if,
        s(:send,
          s(:lvar, :height), :<,
          s(:int, 18)),
        s(:lvasgn, :height,
          s(:int, 18)), nil),
      s(:send,
        s(:lvar, :t), :configure,
        s(:hash,
          s(:pair,
            s(:sym, :itemheight),
            s(:lvar, :height)),
          s(:pair,
            s(:sym, :selectmode),
            s(:sym, :extended)),
          s(:pair,
            s(:sym, :showroot),
            s(:true)),
          s(:pair,
            s(:sym, :showrootbutton),
            s(:true)),
          s(:pair,
            s(:sym, :showbuttons),
            s(:true)),
          s(:pair,
            s(:sym, :showlines),
            s(:true)),
          s(:pair,
            s(:sym, :scrollmargin),
            s(:int, 16)),
          s(:pair,
            s(:sym, :xscrolldelay),
            s(:array,
              s(:int, 500),
              s(:int, 50))),
          s(:pair,
            s(:sym, :yscrolldelay),
            s(:array,
              s(:int, 500),
              s(:int, 50))))),
      s(:if,
        s(:gvar, :$Version_1_1_OrLater),
        s(:begin,
          s(:send,
            s(:lvar, :t), :column_create,
            s(:hash,
              s(:pair,
                s(:sym, :expand),
                s(:true)),
              s(:pair,
                s(:sym, :text),
                s(:str, "Item")),
              s(:pair,
                s(:sym, :itembackground),
                s(:array,
                  s(:str, "#e0e8f0"),
                  s(:array))),
              s(:pair,
                s(:sym, :tag),
                s(:str, "item")))),
          s(:send,
            s(:lvar, :t), :column_create,
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "Parent")),
              s(:pair,
                s(:sym, :justify),
                s(:sym, :center)),
              s(:pair,
                s(:sym, :itembackground),
                s(:array,
                  s(:str, "gray90"),
                  s(:array))),
              s(:pair,
                s(:sym, :tag),
                s(:str, "parent")))),
          s(:send,
            s(:lvar, :t), :column_create,
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "Depth")),
              s(:pair,
                s(:sym, :justify),
                s(:sym, :center)),
              s(:pair,
                s(:sym, :itembackground),
                s(:array,
                  s(:str, "linen"),
                  s(:array))),
              s(:pair,
                s(:sym, :tag),
                s(:str, "depth"))))),
        s(:begin,
          s(:send,
            s(:lvar, :t), :column_configure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :expand),
                s(:true)),
              s(:pair,
                s(:sym, :text),
                s(:str, "Item")),
              s(:pair,
                s(:sym, :itembackground),
                s(:array,
                  s(:str, "#e0e8f0"),
                  s(:array))),
              s(:pair,
                s(:sym, :tag),
                s(:str, "item")))),
          s(:send,
            s(:lvar, :t), :column_configure,
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "Parent")),
              s(:pair,
                s(:sym, :justify),
                s(:sym, :center)),
              s(:pair,
                s(:sym, :itembackground),
                s(:array,
                  s(:str, "gray90"),
                  s(:array))),
              s(:pair,
                s(:sym, :tag),
                s(:str, "parent")))),
          s(:send,
            s(:lvar, :t), :column_configure,
            s(:int, 2),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "Depth")),
              s(:pair,
                s(:sym, :justify),
                s(:sym, :center)),
              s(:pair,
                s(:sym, :itembackground),
                s(:array,
                  s(:str, "linen"),
                  s(:array))),
              s(:pair,
                s(:sym, :tag),
                s(:str, "depth")))))),
      s(:send,
        s(:lvar, :t), :element_create,
        s(:str, "e1"),
        s(:sym, :image),
        s(:hash,
          s(:pair,
            s(:sym, :image),
            s(:array,
              s(:send,
                s(:ivar, :@images), :[],
                s(:str, "folder-open")),
              s(:array,
                s(:str, "open")),
              s(:send,
                s(:ivar, :@images), :[],
                s(:str, "folder-closed")),
              s(:array))))),
      s(:send,
        s(:lvar, :t), :element_create,
        s(:str, "e2"),
        s(:sym, :image),
        s(:hash,
          s(:pair,
            s(:sym, :image),
            s(:send,
              s(:ivar, :@images), :[],
              s(:str, "small-file"))))),
      s(:send,
        s(:lvar, :t), :element_create,
        s(:str, "e3"),
        s(:sym, :text),
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:array,
              s(:ivar, :@SystemHighlightText),
              s(:array,
                s(:str, "selected"),
                s(:str, "focus")))))),
      s(:send,
        s(:lvar, :t), :element_create,
        s(:str, "e4"),
        s(:sym, :text),
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:str, "blue")))),
      s(:send,
        s(:lvar, :t), :element_create,
        s(:str, "e6"),
        s(:sym, :text)),
      s(:send,
        s(:lvar, :t), :element_create,
        s(:str, "e5"),
        s(:sym, :rect),
        s(:hash,
          s(:pair,
            s(:sym, :showfocus),
            s(:true)),
          s(:pair,
            s(:sym, :fill),
            s(:array,
              s(:ivar, :@SystemHighlight),
              s(:array,
                s(:str, "selected"),
                s(:str, "focus")),
              s(:str, "gray"),
              s(:array,
                s(:str, "selected"),
                s(:str, "!focus")))))),
      s(:lvasgn, :s,
        s(:send,
          s(:lvar, :t), :style_create,
          s(:str, "s1"))),
      s(:send,
        s(:lvar, :t), :style_elements,
        s(:lvar, :s),
        s(:array,
          s(:str, "e5"),
          s(:str, "e1"),
          s(:str, "e3"),
          s(:str, "e4"))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e1"),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:array,
              s(:int, 0),
              s(:int, 4))),
          s(:pair,
            s(:sym, :expand),
            s(:sym, :ns)))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e3"),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:array,
              s(:int, 0),
              s(:int, 4))),
          s(:pair,
            s(:sym, :expand),
            s(:sym, :ns)))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e4"),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:array,
              s(:int, 0),
              s(:int, 6))),
          s(:pair,
            s(:sym, :expand),
            s(:sym, :ns)))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e5"),
        s(:hash,
          s(:pair,
            s(:sym, :union),
            s(:array,
              s(:str, "e3"))),
          s(:pair,
            s(:sym, :iexpand),
            s(:sym, :ns)),
          s(:pair,
            s(:sym, :ipadx),
            s(:int, 2)))),
      s(:lvasgn, :s,
        s(:send,
          s(:lvar, :t), :style_create,
          s(:str, "s2"))),
      s(:send,
        s(:lvar, :t), :style_elements,
        s(:lvar, :s),
        s(:array,
          s(:str, "e5"),
          s(:str, "e2"),
          s(:str, "e3"))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e2"),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:array,
              s(:int, 0),
              s(:int, 4))),
          s(:pair,
            s(:sym, :expand),
            s(:sym, :ns)))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e3"),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:array,
              s(:int, 0),
              s(:int, 4))),
          s(:pair,
            s(:sym, :expand),
            s(:sym, :ns)))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e5"),
        s(:hash,
          s(:pair,
            s(:sym, :union),
            s(:array,
              s(:str, "e3"))),
          s(:pair,
            s(:sym, :iexpand),
            s(:sym, :ns)),
          s(:pair,
            s(:sym, :ipadx),
            s(:int, 2)))),
      s(:lvasgn, :s,
        s(:send,
          s(:lvar, :t), :style_create,
          s(:str, "s3"))),
      s(:send,
        s(:lvar, :t), :style_elements,
        s(:lvar, :s),
        s(:array,
          s(:str, "e6"))),
      s(:send,
        s(:lvar, :t), :style_layout,
        s(:lvar, :s),
        s(:str, "e6"),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:int, 6)),
          s(:pair,
            s(:sym, :expand),
            s(:sym, :ns)))),
      s(:send,
        s(:ivar, :@Priv), :[]=,
        s(:sym, :sensitive),
        s(:lvar, :t),
        s(:array,
          s(:array,
            s(:sym, :item),
            s(:str, "s1"),
            s(:str, "e5"),
            s(:str, "e1"),
            s(:str, "e3")),
          s(:array,
            s(:sym, :item),
            s(:str, "s2"),
            s(:str, "e5"),
            s(:str, "e2"),
            s(:str, "e3")))),
      s(:send,
        s(:ivar, :@Priv), :[]=,
        s(:sym, :dragimage),
        s(:lvar, :t),
        s(:array,
          s(:array,
            s(:sym, :item),
            s(:str, "s1"),
            s(:str, "e1"),
            s(:str, "e3")),
          s(:array,
            s(:sym, :item),
            s(:str, "s2"),
            s(:str, "e2"),
            s(:str, "e3")))),
      s(:lvasgn, :clicks,
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :Clock), :clicks)),
      s(:lvasgn, :items,
        s(:array,
          s(:send,
            s(:lvar, :t), :index,
            s(:sym, :root)))),
      s(:block,
        s(:send,
          s(:begin,
            s(:erange,
              s(:int, 1),
              s(:begin,
                s(:send, nil, :random_N)))), :each),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :item_i,
            s(:send,
              s(:lvar, :t), :item_create)),
          s(:lvasgn, :item_j,
            s(:nil)),
          s(:block,
            s(:send, nil, :loop),
            s(:args),
            s(:begin,
              s(:lvasgn, :j,
                s(:send, nil, :rand,
                  s(:lvar, :i))),
              s(:lvasgn, :item_j,
                s(:send,
                  s(:lvar, :items), :[],
                  s(:lvar, :j))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :t), :depth,
                    s(:lvar, :item_j)), :<,
                  s(:int, 5)),
                s(:break), nil))),
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:if,
              s(:send,
                s(:send, nil, :rand,
                  s(:int, 2)), :==,
                s(:int, 0)),
              s(:send,
                s(:lvar, :t), :item_collapse,
                s(:lvar, :item_i)), nil),
            s(:if,
              s(:send,
                s(:send, nil, :rand,
                  s(:int, 2)), :==,
                s(:int, 0)),
              s(:send,
                s(:lvar, :t), :collapse,
                s(:lvar, :item_i)), nil)),
          s(:if,
            s(:send,
              s(:send, nil, :rand,
                s(:int, 2)), :==,
              s(:int, 0)),
            s(:send,
              s(:lvar, :t), :item_lastchild,
              s(:lvar, :item_j),
              s(:lvar, :item_i)),
            s(:send,
              s(:lvar, :t), :item_firstchild,
              s(:lvar, :item_j),
              s(:lvar, :item_i))),
          s(:send,
            s(:lvar, :items), :<<,
            s(:lvar, :item_i)))),
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, "created "),
          s(:begin,
            s(:send,
              s(:send, nil, :random_N), :-,
              s(:int, 1))),
          s(:str, " items in "),
          s(:begin,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :Clock), :clicks), :-,
              s(:lvar, :clicks))),
          s(:str, " clicks"))),
      s(:lvasgn, :clicks,
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :Clock), :clicks)),
      s(:block,
        s(:send,
          s(:begin,
            s(:erange,
              s(:int, 0),
              s(:begin,
                s(:send, nil, :random_N)))), :each),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :item_i,
            s(:send,
              s(:lvar, :items), :[],
              s(:lvar, :i))),
          s(:lvasgn, :numChildren,
            s(:send,
              s(:lvar, :t), :item_numchildren,
              s(:lvar, :item_i))),
          s(:if,
            s(:send,
              s(:lvar, :numChildren), :>,
              s(:int, 0)),
            s(:begin,
              s(:if,
                s(:gvar, :$Version_1_1_OrLater),
                s(:send,
                  s(:lvar, :t), :item_configure,
                  s(:lvar, :item_i),
                  s(:hash,
                    s(:pair,
                      s(:sym, :button),
                      s(:true)))),
                s(:send,
                  s(:lvar, :t), :item_hasbutton,
                  s(:lvar, :item_i),
                  s(:true))),
              s(:send,
                s(:lvar, :t), :item_style_set,
                s(:lvar, :item_i),
                s(:int, 0),
                s(:str, "s1"),
                s(:int, 1),
                s(:str, "s3"),
                s(:int, 2),
                s(:str, "s3")),
              s(:send,
                s(:lvar, :t), :item_complex,
                s(:lvar, :item_i),
                s(:array,
                  s(:array,
                    s(:str, "e3"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:str, "Item "),
                          s(:begin,
                            s(:lvar, :i)))))),
                  s(:array,
                    s(:str, "e4"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:str, "("),
                          s(:begin,
                            s(:lvar, :numChildren)),
                          s(:str, ")")))))),
                s(:array,
                  s(:array,
                    s(:str, "e6"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:begin,
                            s(:send,
                              s(:lvar, :t), :item_parent,
                              s(:lvar, :item_i)))))))),
                s(:array,
                  s(:array,
                    s(:str, "e6"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:begin,
                            s(:send,
                              s(:lvar, :t), :depth,
                              s(:lvar, :item_i)))))))))),
            s(:begin,
              s(:send,
                s(:lvar, :t), :item_style_set,
                s(:lvar, :item_i),
                s(:int, 1),
                s(:str, "s3"),
                s(:int, 2),
                s(:str, "s3"),
                s(:int, 0),
                s(:str, "s2")),
              s(:send,
                s(:lvar, :t), :item_complex,
                s(:lvar, :item_i),
                s(:array,
                  s(:array,
                    s(:str, "e3"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:str, "Item "),
                          s(:begin,
                            s(:lvar, :i))))))),
                s(:array,
                  s(:array,
                    s(:str, "e6"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:begin,
                            s(:send,
                              s(:lvar, :t), :item_parent,
                              s(:lvar, :item_i)))))))),
                s(:array,
                  s(:array,
                    s(:str, "e6"),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:dstr,
                          s(:begin,
                            s(:send,
                              s(:lvar, :t), :depth,
                              s(:lvar, :item_i))))))))))))),
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, "configured "),
          s(:begin,
            s(:send, nil, :random_N)),
          s(:str, " items in "),
          s(:begin,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :Clock), :clicks), :-,
              s(:lvar, :clicks))),
          s(:str, " clicks"))),
      s(:lvasgn, :treeCtrlRandom,
        s(:send,
          s(:const, nil, :TkBindTag), :new)),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "Double-ButtonPress-1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :doubleButton1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "Control-ButtonPress-1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send,
              s(:ivar, :@Priv), :[]=,
              s(:str, "selectMode"),
              s(:sym, :toggle)),
            s(:send, nil, :randomButton1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "Shift-ButtonPress-1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send,
              s(:ivar, :@Priv), :[]=,
              s(:str, "selectMode"),
              s(:sym, :add)),
            s(:send, nil, :randomButton1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "ButtonPress-1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send,
              s(:ivar, :@Priv), :[]=,
              s(:str, "selectMode"),
              s(:sym, :set)),
            s(:send, nil, :randomButton1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "Button1-Motion"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send, nil, :randomMotion1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "Button1-Leave"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send, nil, :randomLeave1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :treeCtrlRandom), :bind,
        s(:str, "ButtonRelease-1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w),
            s(:arg, :x),
            s(:arg, :y)),
          s(:begin,
            s(:send, nil, :randomRelease1,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y)),
            s(:send,
              s(:const, nil, :Tk), :callback_break))),
        s(:str, "%W %x %y")),
      s(:send,
        s(:lvar, :t), :bindtags=,
        s(:array,
          s(:lvar, :t),
          s(:lvar, :treeCtrlRandom),
          s(:const,
            s(:const, nil, :Tk), :TreeCtrl),
          s(:send,
            s(:lvar, :t), :winfo_toplevel),
          s(:sym, :all))))),
  s(:def, :randomButton1,
    s(:args,
      s(:arg, :t),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:send,
        s(:lvar, :t), :set_focus),
      s(:lvasgn, :id,
        s(:send,
          s(:lvar, :t), :identify,
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:send, nil, :puts,
        s(:send,
          s(:lvar, :id), :inspect)),
      s(:send,
        s(:ivar, :@Priv), :[]=,
        s(:str, "buttonMode"),
        s(:str, "")),
      s(:if,
        s(:send,
          s(:lvar, :id), :empty?),
        s(:send,
          s(:lvar, :t), :selection_clear),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :id), :[],
              s(:int, 0)), :==,
            s(:str, "header")),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :buttonPress1,
            s(:lvar, :t),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :where),
                s(:lvasgn, :item),
                s(:lvasgn, :arg1),
                s(:lvasgn, :arg2),
                s(:lvasgn, :arg3),
                s(:lvasgn, :arg4)),
              s(:lvar, :id)),
            s(:case,
              s(:lvar, :arg1),
              s(:when,
                s(:str, "button"),
                s(:if,
                  s(:gvar, :$Version_1_1_OrLater),
                  s(:send,
                    s(:lvar, :t), :item_toggle,
                    s(:lvar, :item)),
                  s(:send,
                    s(:lvar, :t), :toggle,
                    s(:lvar, :item)))),
              s(:when,
                s(:str, "line"),
                s(:if,
                  s(:gvar, :$Version_1_1_OrLater),
                  s(:send,
                    s(:lvar, :t), :item_toggle,
                    s(:lvar, :arg2)),
                  s(:send,
                    s(:lvar, :t), :toggle,
                    s(:lvar, :arg2)))),
              s(:when,
                s(:str, "column"),
                s(:begin,
                  s(:lvasgn, :ok,
                    s(:false)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :id), :length), :==,
                      s(:int, 6)),
                    s(:begin,
                      s(:lvasgn, :column,
                        s(:send,
                          s(:lvar, :id), :[],
                          s(:int, 3))),
                      s(:lvasgn, :e,
                        s(:send,
                          s(:lvar, :id), :[],
                          s(:int, 5))),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:ivar, :@Priv), :list_element,
                            s(:sym, :sensitive),
                            s(:lvar, :t)), :each),
                        s(:args,
                          s(:arg, :lst)),
                        s(:begin,
                          s(:masgn,
                            s(:mlhs,
                              s(:lvasgn, :c),
                              s(:lvasgn, :s),
                              s(:splat,
                                s(:lvasgn, :eList))),
                            s(:send,
                              s(:const, nil, :TkComm), :simplelist,
                              s(:lvar, :lst))),
                          s(:if,
                            s(:send,
                              s(:lvar, :column), :!=,
                              s(:send,
                                s(:lvar, :t), :column_index,
                                s(:lvar, :c))),
                            s(:next), nil),
                          s(:if,
                            s(:send,
                              s(:send,
                                s(:lvar, :t), :item_style_set,
                                s(:lvar, :item),
                                s(:lvar, :c)), :!=,
                              s(:lvar, :s)),
                            s(:next), nil),
                          s(:if,
                            s(:send,
                              s(:block,
                                s(:send,
                                  s(:lvar, :eList), :find),
                                s(:args,
                                  s(:arg, :le)),
                                s(:send,
                                  s(:lvar, :le), :==,
                                  s(:lvar, :e))), :==,
                              s(:nil)),
                            s(:next), nil),
                          s(:lvasgn, :ok,
                            s(:true)),
                          s(:break)))), nil),
                  s(:if,
                    s(:lvar, :ok), nil,
                    s(:begin,
                      s(:send,
                        s(:lvar, :t), :selection_clear),
                      s(:return))),
                  s(:send,
                    s(:ivar, :@Priv), :[]=,
                    s(:sym, :drag),
                    s(:sym, :motion),
                    s(:int, 0)),
                  s(:send,
                    s(:ivar, :@Priv), :[]=,
                    s(:sym, :drag),
                    s(:sym, :x),
                    s(:send,
                      s(:lvar, :t), :canvasx,
                      s(:lvar, :x))),
                  s(:send,
                    s(:ivar, :@Priv), :[]=,
                    s(:sym, :drag),
                    s(:sym, :y),
                    s(:send,
                      s(:lvar, :t), :canvasy,
                      s(:lvar, :y))),
                  s(:send,
                    s(:ivar, :@Priv), :[]=,
                    s(:sym, :drop),
                    s(:str, "")),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:ivar, :@Priv), :[],
                        s(:str, "selectMode")), :==,
                      s(:str, "add")),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :beginExtend,
                      s(:lvar, :t),
                      s(:lvar, :item)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:ivar, :@Priv), :[],
                          s(:str, "selectMode")), :==,
                        s(:str, "toggle")),
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :beginToggle,
                        s(:lvar, :t),
                        s(:lvar, :item)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :t), :selection_includes,
                            s(:lvar, :item)), :!),
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :beginSelect,
                          s(:lvar, :t),
                          s(:lvar, :item)), nil))),
                  s(:send,
                    s(:lvar, :t), :activate,
                    s(:lvar, :item)),
                  s(:if,
                    s(:send,
                      s(:lvar, :t), :selection_includes,
                      s(:lvar, :item)),
                    s(:send,
                      s(:ivar, :@Priv), :[]=,
                      s(:str, "buttonMode"),
                      s(:str, "drag")), nil))), nil)))))),
  s(:def, :randomMotion1,
    s(:args,
      s(:arg, :t),
      s(:arg, :x),
      s(:arg, :y)),
    s(:case,
      s(:send,
        s(:ivar, :@Priv), :[],
        s(:str, "buttonMode")),
      s(:when,
        s(:str, "resize"),
        s(:str, "header"),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :motion1,
          s(:lvar, :t),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:when,
        s(:str, "drag"),
        s(:begin,
          s(:send, nil, :randomAutoScanCheck,
            s(:lvar, :t),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:send, nil, :randomMotion,
            s(:lvar, :t),
            s(:lvar, :x),
            s(:lvar, :y)))), nil)),
  s(:def, :randomMotion,
    s(:args,
      s(:arg, :t),
      s(:arg, :x),
      s(:arg, :y)),
    s(:case,
      s(:send,
        s(:ivar, :@Priv), :[],
        s(:str, "buttonMode")),
      s(:when,
        s(:str, "resize"),
        s(:str, "header"),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :motion1,
          s(:lvar, :t),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:when,
        s(:str, "drag"),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@Priv), :bool_element,
              s(:sym, :drag),
              s(:sym, :motion)), nil,
            s(:begin,
              s(:send,
                s(:ivar, :@Priv), :[]=,
                s(:sym, :selection),
                s(:send,
                  s(:lvar, :t), :selection_get)),
              s(:send,
                s(:ivar, :@Priv), :[]=,
                s(:sym, :drop),
                s(:str, "")),
              s(:send,
                s(:lvar, :t), :dragimage_clear),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@Priv), :list_element,
                    s(:sym, :selection)), :each),
                s(:args,
                  s(:arg, :i)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@Priv), :list_element,
                      s(:sym, :dragimage),
                      s(:lvar, :t)), :each),
                  s(:args,
                    s(:arg, :lst)),
                  s(:begin,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :c),
                        s(:lvasgn, :s),
                        s(:splat,
                          s(:lvasgn, :eList))),
                      s(:send,
                        s(:const, nil, :TkComm), :simplelist,
                        s(:lvar, :lst))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :t), :item_style_set,
                          s(:lvar, :i),
                          s(:lvar, :c)), :==,
                        s(:lvar, :s)),
                      s(:send,
                        s(:lvar, :t), :dragimage_add,
                        s(:lvar, :i),
                        s(:lvar, :c),
                        s(:splat,
                          s(:lvar, :eList))), nil)))),
              s(:send,
                s(:ivar, :@Priv), :[]=,
                s(:sym, :drag),
                s(:sym, :motion),
                s(:true)))),
          s(:lvasgn, :cursor,
            s(:str, "X_cursor")),
          s(:lvasgn, :drop,
            s(:str, "")),
          s(:lvasgn, :id,
            s(:send,
              s(:lvar, :t), :identify,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:lvasgn, :ok,
            s(:false)),
          s(:if,
            s(:and,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :id), :empty?), :!),
                s(:send,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 0)), :==,
                  s(:str, "item"))),
              s(:send,
                s(:send,
                  s(:lvar, :id), :length), :==,
                s(:int, 6))),
            s(:begin,
              s(:lvasgn, :item,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 1))),
              s(:lvasgn, :column,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 3))),
              s(:lvasgn, :e,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 5))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@Priv), :list_element,
                    s(:sym, :sensitive),
                    s(:lvar, :t)), :each),
                s(:args,
                  s(:arg, :lst)),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :c),
                      s(:lvasgn, :s),
                      s(:splat,
                        s(:lvasgn, :eList))),
                    s(:send,
                      s(:const, nil, :TkComm), :simplelist,
                      s(:lvar, :lst))),
                  s(:if,
                    s(:send,
                      s(:lvar, :column), :!=,
                      s(:send,
                        s(:lvar, :t), :column_index,
                        s(:lvar, :c))),
                    s(:next), nil),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :t), :item_style_set,
                        s(:lvar, :item),
                        s(:lvar, :c)), :!=,
                      s(:lvar, :s)),
                    s(:next), nil),
                  s(:if,
                    s(:block,
                      s(:send,
                        s(:lvar, :eList), :find),
                      s(:args,
                        s(:arg, :val)),
                      s(:send,
                        s(:send,
                          s(:lvar, :val), :to_s), :==,
                        s(:send,
                          s(:lvar, :e), :to_s))), nil,
                    s(:next)),
                  s(:lvasgn, :ok,
                    s(:true)),
                  s(:break))),
              s(:if,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@Priv), :list_element,
                      s(:sym, :sensitive),
                      s(:lvar, :t)), :find),
                  s(:args,
                    s(:arg, :val)),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TkComm), :simplelist,
                      s(:lvar, :val)), :index,
                    s(:lvar, :e))),
                s(:lvasgn, :ok,
                  s(:true)), nil)), nil),
          s(:if,
            s(:lvar, :ok),
            s(:if,
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@Priv), :list_element,
                    s(:sym, :selection)), :find),
                s(:args,
                  s(:arg, :val)),
                s(:send,
                  s(:send,
                    s(:lvar, :val), :to_s), :==,
                  s(:send,
                    s(:lvar, :item), :to_s))), nil,
              s(:begin,
                s(:lvasgn, :drop,
                  s(:lvar, :item)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:ivar, :@Priv), :list_element,
                      s(:sym, :selection)), :each),
                  s(:args,
                    s(:arg, :item2)),
                  s(:if,
                    s(:send,
                      s(:lvar, :t), :item_isancestor,
                      s(:lvar, :item2),
                      s(:lvar, :item)),
                    s(:begin,
                      s(:lvasgn, :drop,
                        s(:str, "")),
                      s(:break)), nil)),
                s(:if,
                  s(:send,
                    s(:lvar, :drop), :!=,
                    s(:str, "")),
                  s(:begin,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :x1),
                        s(:lvasgn, :y1),
                        s(:lvasgn, :x2),
                        s(:lvasgn, :y2)),
                      s(:send,
                        s(:lvar, :t), :item_bbox,
                        s(:lvar, :drop))),
                    s(:if,
                      s(:send,
                        s(:lvar, :y), :<,
                        s(:send,
                          s(:lvar, :y1), :+,
                          s(:int, 3))),
                      s(:begin,
                        s(:lvasgn, :cursor,
                          s(:str, "top_side")),
                        s(:send,
                          s(:ivar, :@Priv), :[]=,
                          s(:sym, :drop),
                          s(:sym, :pos),
                          s(:str, "prevsibling"))),
                      s(:if,
                        s(:send,
                          s(:lvar, :y), :>=,
                          s(:send,
                            s(:lvar, :y2), :-,
                            s(:int, 3))),
                        s(:begin,
                          s(:lvasgn, :cursor,
                            s(:str, "bottom_side")),
                          s(:send,
                            s(:ivar, :@Priv), :[]=,
                            s(:sym, :drop),
                            s(:sym, :pos),
                            s(:str, "nextsibling"))),
                        s(:begin,
                          s(:lvasgn, :cursor,
                            s(:str, "")),
                          s(:send,
                            s(:ivar, :@Priv), :[]=,
                            s(:sym, :drop),
                            s(:sym, :pos),
                            s(:str, "lastchild")))))), nil))), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :t), :[],
                s(:sym, :cursor)), :!=,
              s(:lvar, :cursor)),
            s(:send,
              s(:lvar, :t), :[]=,
              s(:sym, :cursor),
              s(:lvar, :cursor)), nil),
          s(:send,
            s(:lvar, :t), :selection_modify,
            s(:lvar, :drop),
            s(:send,
              s(:ivar, :@Priv), :[],
              s(:sym, :drop))),
          s(:send,
            s(:ivar, :@Priv), :[]=,
            s(:sym, :drop),
            s(:lvar, :drop)),
          s(:lvasgn, :x,
            s(:send,
              s(:send,
                s(:lvar, :t), :canvasx,
                s(:lvar, :x)), :-,
              s(:send,
                s(:ivar, :@Priv), :numeric_element,
                s(:sym, :drag),
                s(:sym, :x)))),
          s(:lvasgn, :y,
            s(:send,
              s(:send,
                s(:lvar, :t), :canvasx,
                s(:lvar, :y)), :-,
              s(:send,
                s(:ivar, :@Priv), :numeric_element,
                s(:sym, :drag),
                s(:sym, :y)))),
          s(:send,
            s(:lvar, :t), :dragimage_offset,
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:send,
            s(:lvar, :t), :dragimage_configure,
            s(:hash,
              s(:pair,
                s(:sym, :visible),
                s(:true)))))), nil)),
  s(:def, :randomLeave1,
    s(:args,
      s(:arg, :t),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:if,
        s(:send,
          s(:ivar, :@Priv), :exist?,
          s(:str, "buttonMode")), nil,
        s(:return)),
      s(:case,
        s(:send,
          s(:ivar, :@Priv), :[],
          s(:str, "buttonMode")),
        s(:when,
          s(:str, "header"),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :leave1,
            s(:lvar, :t),
            s(:lvar, :x),
            s(:lvar, :y))), nil))),
  s(:def, :randomRelease1,
    s(:args,
      s(:arg, :t),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:case,
        s(:send,
          s(:ivar, :@Priv), :[],
          s(:str, "buttonMode")),
        s(:when,
          s(:str, "resize"),
          s(:str, "header"),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :release1,
            s(:lvar, :t),
            s(:lvar, :x),
            s(:lvar, :y))),
        s(:when,
          s(:str, "drag"),
          s(:begin,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :autoScanCancel,
              s(:lvar, :t)),
            s(:send,
              s(:lvar, :t), :dragimage_configure,
              s(:hash,
                s(:pair,
                  s(:sym, :visible),
                  s(:false)))),
            s(:send,
              s(:lvar, :t), :selection_modify,
              s(:str, ""),
              s(:send,
                s(:ivar, :@Priv), :[],
                s(:sym, :drop))),
            s(:send,
              s(:lvar, :t), :[]=,
              s(:sym, :cursor),
              s(:str, "")),
            s(:if,
              s(:send,
                s(:send,
                  s(:ivar, :@Priv), :[],
                  s(:sym, :drop)), :!=,
                s(:str, "")),
              s(:send, nil, :randomDrop,
                s(:lvar, :t),
                s(:send,
                  s(:ivar, :@Priv), :[],
                  s(:sym, :drop)),
                s(:send,
                  s(:ivar, :@Priv), :list_element,
                  s(:sym, :selection)),
                s(:send,
                  s(:ivar, :@Priv), :[],
                  s(:sym, :drop),
                  s(:sym, :pos))), nil))), nil),
      s(:send,
        s(:ivar, :@Priv), :[]=,
        s(:str, "buttonMode"),
        s(:str, "")))),
  s(:def, :randomDrop,
    s(:args,
      s(:arg, :t),
      s(:arg, :target),
      s(:arg, :src),
      s(:arg, :pos)),
    s(:begin,
      s(:lvasgn, :parentList,
        s(:array)),
      s(:case,
        s(:lvar, :pos),
        s(:when,
          s(:str, "lastchild"),
          s(:lvasgn, :parent,
            s(:lvar, :target))),
        s(:when,
          s(:str, "prevsibling"),
          s(:lvasgn, :parent,
            s(:send,
              s(:lvar, :t), :item_parent,
              s(:lvar, :target)))),
        s(:when,
          s(:str, "nextsibling"),
          s(:lvasgn, :parent,
            s(:send,
              s(:lvar, :t), :item_parent,
              s(:lvar, :target)))), nil),
      s(:block,
        s(:send,
          s(:lvar, :src), :each),
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:lvasgn, :ignore,
            s(:false)),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :t), :item_ancestors,
                s(:lvar, :item)), :each),
            s(:args,
              s(:arg, :ancestor)),
            s(:if,
              s(:block,
                s(:send,
                  s(:lvar, :src), :find),
                s(:args,
                  s(:arg, :val)),
                s(:send,
                  s(:send,
                    s(:lvar, :val), :to_s), :==,
                  s(:send,
                    s(:lvar, :ancestor), :to_s))),
              s(:begin,
                s(:lvasgn, :ignore,
                  s(:true)),
                s(:break)), nil)),
          s(:if,
            s(:lvar, :ignore),
            s(:next), nil),
          s(:if,
            s(:block,
              s(:send,
                s(:lvar, :parentList), :find),
              s(:args,
                s(:arg, :val)),
              s(:send,
                s(:send,
                  s(:lvar, :val), :to_s), :==,
                s(:send,
                  s(:lvar, :item), :to_s))), nil,
            s(:send,
              s(:lvar, :parentList), :<<,
              s(:send,
                s(:lvar, :t), :item_parent,
                s(:lvar, :item)))),
          s(:send,
            s(:lvar, :t), :__send__,
            s(:dstr,
              s(:str, "item_"),
              s(:begin,
                s(:lvar, :pos))),
            s(:lvar, :target),
            s(:lvar, :item)),
          s(:send,
            s(:lvar, :t), :item_element_configure,
            s(:lvar, :item),
            s(:str, "parent"),
            s(:str, "e6"),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:lvar, :parent)))),
          s(:send,
            s(:lvar, :t), :item_element_configure,
            s(:lvar, :item),
            s(:str, "depth"),
            s(:str, "e6"),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:send,
                  s(:lvar, :t), :depth,
                  s(:lvar, :item))))),
          s(:lvasgn, :itemList,
            s(:array)),
          s(:lvasgn, :item,
            s(:send,
              s(:lvar, :t), :item_firstchild,
              s(:lvar, :item))),
          s(:if,
            s(:send,
              s(:lvar, :item), :!=,
              s(:str, "")),
            s(:send,
              s(:lvar, :itemList), :<<,
              s(:lvar, :item)), nil),
          s(:while,
            s(:lvasgn, :item,
              s(:send,
                s(:lvar, :itemList), :pop)),
            s(:begin,
              s(:send,
                s(:lvar, :t), :item_element_configure,
                s(:lvar, :item),
                s(:str, "depth"),
                s(:str, "e6"),
                s(:hash,
                  s(:pair,
                    s(:sym, :text),
                    s(:send,
                      s(:lvar, :t), :depth,
                      s(:lvar, :item))))),
              s(:lvasgn, :item2,
                s(:send,
                  s(:lvar, :t), :item_nextsibling,
                  s(:lvar, :item))),
              s(:if,
                s(:send,
                  s(:lvar, :item2), :!=,
                  s(:str, "")),
                s(:send,
                  s(:lvar, :itemList), :<<,
                  s(:lvar, :item2)), nil),
              s(:lvasgn, :item2,
                s(:send,
                  s(:lvar, :t), :item_firstchild,
                  s(:lvar, :item))),
              s(:if,
                s(:send,
                  s(:lvar, :item2), :!=,
                  s(:str, "")),
                s(:send,
                  s(:lvar, :itemList), :<<,
                  s(:lvar, :item2)), nil))))),
      s(:block,
        s(:send,
          s(:lvar, :parentList), :each),
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:lvasgn, :numChildren,
            s(:send,
              s(:lvar, :t), :item_numchildren,
              s(:lvar, :item))),
          s(:if,
            s(:send,
              s(:lvar, :numChildren), :==,
              s(:int, 0)),
            s(:begin,
              s(:if,
                s(:gvar, :$Version_1_1_OrLater),
                s(:send,
                  s(:lvar, :t), :item_configure,
                  s(:lvar, :item),
                  s(:hash,
                    s(:pair,
                      s(:sym, :button),
                      s(:false)))),
                s(:send,
                  s(:lvar, :t), :item_hasbutton,
                  s(:lvar, :item),
                  s(:false))),
              s(:send,
                s(:lvar, :t), :item_style_map,
                s(:lvar, :item),
                s(:str, "item"),
                s(:str, "s2"),
                s(:array,
                  s(:str, "e3"),
                  s(:str, "e3")))),
            s(:send,
              s(:lvar, :t), :item_element_configure,
              s(:lvar, :item),
              s(:str, "item"),
              s(:str, "e4"),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:dstr,
                    s(:str, "("),
                    s(:begin,
                      s(:lvar, :numChildren)),
                    s(:str, ")")))))))),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :t), :item_style_set,
            s(:lvar, :parent),
            s(:int, 0)), :!=,
          s(:str, "s1")),
        s(:begin,
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:send,
              s(:lvar, :t), :item_configure,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :button),
                  s(:true)))),
            s(:send,
              s(:lvar, :t), :item_hasbutton,
              s(:lvar, :parent),
              s(:true))),
          s(:send,
            s(:lvar, :t), :item_style_map,
            s(:lvar, :parent),
            s(:str, "item"),
            s(:str, "s1"),
            s(:array,
              s(:str, "e3"),
              s(:str, "e3")))), nil),
      s(:lvasgn, :numChildren,
        s(:send,
          s(:lvar, :t), :item_numchildren,
          s(:lvar, :parent))),
      s(:send,
        s(:lvar, :t), :item_element_configure,
        s(:lvar, :parent),
        s(:str, "item"),
        s(:str, "e4"),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:dstr,
              s(:str, "("),
              s(:begin,
                s(:lvar, :numChildren)),
              s(:str, ")"))))))),
  s(:def, :randomAutoScanCheck,
    s(:args,
      s(:arg, :t),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :x1),
          s(:lvasgn, :y1),
          s(:lvasgn, :x2),
          s(:lvasgn, :y2)),
        s(:send,
          s(:lvar, :t), :contentbox)),
      s(:lvasgn, :margin,
        s(:send,
          s(:lvar, :t), :winfo_pixels,
          s(:send,
            s(:lvar, :t), :scrollmargin))),
      s(:if,
        s(:or,
          s(:or,
            s(:or,
              s(:send,
                s(:lvar, :x), :<,
                s(:send,
                  s(:lvar, :x1), :+,
                  s(:lvar, :margin))),
              s(:send,
                s(:lvar, :x), :>=,
                s(:send,
                  s(:lvar, :x2), :-,
                  s(:lvar, :margin)))),
            s(:send,
              s(:lvar, :y), :<,
              s(:send,
                s(:lvar, :y1), :+,
                s(:lvar, :margin)))),
          s(:send,
            s(:lvar, :y), :>=,
            s(:send,
              s(:lvar, :y2), :-,
              s(:lvar, :margin)))),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@Priv), :exist?,
                s(:sym, :autoscan),
                s(:sym, :afterId),
                s(:lvar, :t)), :!),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :y), :>=,
                  s(:send,
                    s(:lvar, :y2), :-,
                    s(:lvar, :margin))),
                s(:begin,
                  s(:send,
                    s(:lvar, :t), :yview,
                    s(:sym, :scroll),
                    s(:int, 1),
                    s(:sym, :units)),
                  s(:lvasgn, :delay,
                    s(:send,
                      s(:lvar, :t), :yscrolldelay))),
                s(:if,
                  s(:send,
                    s(:lvar, :y), :<,
                    s(:send,
                      s(:lvar, :y1), :+,
                      s(:lvar, :margin))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :t), :yview,
                      s(:sym, :scroll),
                      s(:int, -1),
                      s(:sym, :units)),
                    s(:lvasgn, :delay,
                      s(:send,
                        s(:lvar, :t), :yscrolldelay))),
                  s(:if,
                    s(:send,
                      s(:lvar, :x), :>=,
                      s(:send,
                        s(:lvar, :x2), :-,
                        s(:lvar, :margin))),
                    s(:begin,
                      s(:send,
                        s(:lvar, :t), :xview,
                        s(:sym, :scroll),
                        s(:int, 1),
                        s(:sym, :units)),
                      s(:lvasgn, :delay,
                        s(:send,
                          s(:lvar, :t), :xscrolldelay))),
                    s(:if,
                      s(:send,
                        s(:lvar, :x), :<,
                        s(:send,
                          s(:lvar, :x1), :+,
                          s(:lvar, :margin))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :t), :xview,
                          s(:sym, :scroll),
                          s(:int, -1),
                          s(:sym, :units)),
                        s(:lvasgn, :delay,
                          s(:send,
                            s(:lvar, :t), :xscrolldelay))), nil)))),
              s(:if,
                s(:send,
                  s(:ivar, :@Priv), :exist?,
                  s(:sym, :autoscan),
                  s(:sym, :scanning),
                  s(:lvar, :t)),
                s(:if,
                  s(:send,
                    s(:lvar, :delay), :kind_of?,
                    s(:const, nil, :Array)),
                  s(:lvasgn, :delay,
                    s(:send,
                      s(:lvar, :delay), :[],
                      s(:int, 1))), nil),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :delay), :kind_of?,
                      s(:const, nil, :Array)),
                    s(:lvasgn, :delay,
                      s(:send,
                        s(:lvar, :delay), :[],
                        s(:int, 0))), nil),
                  s(:send,
                    s(:ivar, :@Priv), :[]=,
                    s(:sym, :autoscan),
                    s(:sym, :scanning),
                    s(:lvar, :t),
                    s(:true)))),
              s(:case,
                s(:send,
                  s(:ivar, :@Priv), :[],
                  s(:str, "buttonMode")),
                s(:when,
                  s(:str, "drag"),
                  s(:str, "marquee"),
                  s(:send, nil, :randomMotion,
                    s(:lvar, :t),
                    s(:lvar, :x),
                    s(:lvar, :y))), nil),
              s(:send,
                s(:ivar, :@Priv), :[]=,
                s(:sym, :autoscan),
                s(:sym, :afterId),
                s(:lvar, :t),
                s(:send,
                  s(:const, nil, :Tk), :after,
                  s(:lvar, :delay),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :randomAutoScanCheckAux,
                      s(:lvar, :t)))))), nil),
          s(:return)), nil),
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :TreeCtrl), :BindCallback), :autoScanCancel,
        s(:lvar, :t)))),
  s(:def, :randomAutoScanCheckAux,
    s(:args,
      s(:arg, :t)),
    s(:begin,
      s(:send,
        s(:ivar, :@Priv), :unset,
        s(:sym, :autoscan),
        s(:sym, :afterId),
        s(:lvar, :t)),
      s(:lvasgn, :x,
        s(:send,
          s(:send,
            s(:lvar, :t), :winfo_pointerx), :-,
          s(:send,
            s(:lvar, :t), :winfo_rootx))),
      s(:lvasgn, :y,
        s(:send,
          s(:send,
            s(:lvar, :t), :winfo_pointery), :-,
          s(:send,
            s(:lvar, :t), :winfo_rooty))),
      s(:send, nil, :randomAutoScanCheck,
        s(:lvar, :t),
        s(:lvar, :x),
        s(:lvar, :y)))),
  s(:def, :demoRandom2,
    s(:args,
      s(:arg, :t)),
    s(:begin,
      s(:send, nil, :demoRandom,
        s(:lvar, :t)),
      s(:send, nil, :init_pics,
        s(:str, "mac-*")),
      s(:send,
        s(:lvar, :t), :configure,
        s(:hash,
          s(:pair,
            s(:sym, :openbuttonimage),
            s(:send,
              s(:ivar, :@images), :[],
              s(:str, "mac-collapse"))),
          s(:pair,
            s(:sym, :closedbuttonimage),
            s(:send,
              s(:ivar, :@images), :[],
              s(:str, "mac-expand"))),
          s(:pair,
            s(:sym, :showlines),
            s(:false)))))))
