s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/treectrl")),
  s(:gvasgn, :$ScriptDir,
    s(:send,
      s(:const, nil, :File), :dirname,
      s(:send,
        s(:const, nil, :File), :expand_path,
        s(:str, "(string)")))),
  s(:gvasgn, :$HasColumnCreate,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :TreeCtrl), :HasColumnCreateCommand)),
  s(:gvasgn, :$Version_1_1_OrLater,
    s(:begin,
      s(:send,
        s(:send,
          s(:const, nil, :TkPackage), :vcompare,
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :TreeCtrl), :package_version),
          s(:str, "1.1")), :>=,
        s(:int, 0)))),
  s(:if,
    s(:const,
      s(:const, nil, :TkCore), :WITH_RUBY_VM), nil,
    s(:class,
      s(:const, nil, :Hash), nil,
      s(:alias,
        s(:sym, :key),
        s(:sym, :index)))),
  s(:class,
    s(:const, nil, :TkTreeCtrl_demo), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :dir)),
        s(:begin,
          s(:ivasgn, :@ScriptDir,
            s(:or,
              s(:lvar, :dir),
              s(:str, "."))),
          s(:ivasgn, :@thisPlatform,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :PLATFORM), :[],
              s(:str, "platform"))),
          s(:if,
            s(:and,
              s(:send,
                s(:ivar, :@thisPlatform), :==,
                s(:str, "unix")),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk), :windowingsystem), :==,
                s(:str, "aqua"))),
            s(:ivasgn, :@thisPlatform,
              s(:str, "macosx")), nil),
          s(:ivasgn, :@RandomN,
            s(:array,
              s(:int, 500))),
          s(:ivasgn, :@images,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:ivasgn, :@sel_images,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:ivasgn, :@popup,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:ivasgn, :@mTree,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:ivasgn, :@mHeader,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:ivasgn, :@non_clear_list,
            s(:array)),
          s(:ivasgn, :@demoCmd,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:ivasgn, :@demoFile,
            s(:send,
              s(:const, nil, :Hash), :new)),
          s(:lvasgn, :w,
            s(:send,
              s(:const, nil, :TkListbox), :new)),
          s(:ivasgn, :@SystemButtonFace,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :highlightbackground))),
          s(:ivasgn, :@SystemHighlight,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :selectbackground))),
          s(:ivasgn, :@SystemHighlightText,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :selectforeground))),
          s(:send,
            s(:lvar, :w), :destroy),
          s(:send, nil, :make_source_window),
          s(:send, nil, :make_menubar),
          s(:send, nil, :make_main_window),
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:send,
                    s(:ivar, :@tree2), :[],
                    s(:sym, :backgroundimage)),
                  s(:ivasgn, :@has_bgimg,
                    s(:true))),
                s(:resbody, nil, nil,
                  s(:ivasgn, :@has_bgimg,
                    s(:false))), nil)),
            s(:ivasgn, :@has_bgimg,
              s(:false))),
          s(:send, nil, :make_list_popup),
          s(:send, nil, :make_header_popup),
          s(:send, nil, :init_pics,
            s(:str, "sky")),
          s(:send,
            s(:ivar, :@tree2), :bind,
            s(:str, "ButtonPress-3"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :x),
                s(:arg, :y),
                s(:arg, :rootx),
                s(:arg, :rooty)),
              s(:send, nil, :show_list_popup,
                s(:lvar, :w),
                s(:lvar, :x),
                s(:lvar, :y),
                s(:lvar, :rootx),
                s(:lvar, :rooty))),
            s(:str, "%W %x %y %X %Y")),
          s(:if,
            s(:send,
              s(:ivar, :@thisPlatform), :==,
              s(:str, "windows")),
            s(:send,
              s(:ivar, :@tree2), :bind_remove,
              s(:str, "Control-ButtonPress-3")), nil),
          s(:send, nil, :init_demo_scripts_module),
          s(:send, nil, :load_demo_scripts),
          s(:send, nil, :init_demo_list),
          s(:send,
            s(:ivar, :@tree1), :notify_bind,
            s(:ivar, :@tree1),
            s(:str, "Selection"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :c),
                s(:arg, :t)),
              s(:if,
                s(:send,
                  s(:lvar, :c), :==,
                  s(:int, 1)),
                s(:begin,
                  s(:lvasgn, :item,
                    s(:send,
                      s(:send,
                        s(:lvar, :t), :selection_get), :[],
                      s(:int, 0))),
                  s(:send, nil, :demo_set,
                    s(:send,
                      s(:ivar, :@demoCmd), :[],
                      s(:lvar, :item)),
                    s(:send,
                      s(:ivar, :@demoFile), :[],
                      s(:lvar, :item)))), nil)),
            s(:str, "%c %T")),
          s(:send,
            s(:ivar, :@tree2), :notify_bind,
            s(:str, "DontDelete"),
            s(:str, "Selection"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :c),
                s(:arg, :t)),
              s(:if,
                s(:send,
                  s(:lvar, :c), :==,
                  s(:int, 1)),
                s(:send, nil, :display_styles_in_item,
                  s(:send,
                    s(:send,
                      s(:lvar, :t), :selection_get), :[],
                    s(:int, 0))), nil)),
            s(:str, "%c %T")))),
      s(:def, :init_pics,
        s(:args,
          s(:restarg, :args)),
        s(:block,
          s(:send,
            s(:lvar, :args), :each),
          s(:args,
            s(:arg, :pat)),
          s(:if,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TkImage), :names), :find),
              s(:args,
                s(:arg, :img)),
              s(:and,
                s(:begin,
                  s(:lvasgn, :name,
                    s(:send,
                      s(:ivar, :@images), :key,
                      s(:lvar, :img)))),
                s(:send,
                  s(:const, nil, :File), :fnmatch,
                  s(:lvar, :pat),
                  s(:lvar, :name)))), nil,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :Dir), :glob,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:ivar, :@ScriptDir),
                    s(:str, "pics"),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :pat)),
                      s(:str, ".gif")))), :each),
              s(:args,
                s(:arg, :file)),
              s(:begin,
                s(:lvasgn, :name,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:lvar, :file),
                    s(:str, ".gif"))),
                s(:lvasgn, :img,
                  s(:send,
                    s(:const, nil, :TkPhotoImage), :new,
                    s(:hash,
                      s(:pair,
                        s(:sym, :file),
                        s(:lvar, :file))))),
                s(:send,
                  s(:ivar, :@images), :[]=,
                  s(:lvar, :name),
                  s(:lvar, :img)),
                s(:send,
                  s(:ivar, :@sel_images), :[]=,
                  s(:lvar, :name),
                  s(:send,
                    s(:const, nil, :TkPhotoImage), :new)),
                s(:send,
                  s(:send,
                    s(:ivar, :@sel_images), :[],
                    s(:lvar, :name)), :copy,
                  s(:lvar, :img)),
                s(:send,
                  s(:const,
                    s(:const, nil, :Tk), :TreeCtrl), :image_tint,
                  s(:send,
                    s(:ivar, :@sel_images), :[],
                    s(:lvar, :name)),
                  s(:ivar, :@SystemHighlight),
                  s(:int, 128))))))),
      s(:send, nil, :private),
      s(:def, :make_menubar,
        s(:args),
        s(:begin,
          s(:lvasgn, :menuspec,
            s(:array,
              s(:array,
                s(:array,
                  s(:str, "File"))))),
          s(:if,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :PLATFORM), :[],
                s(:str, "platform")), :!=,
              s(:str, "unix")),
            s(:begin,
              s(:send,
                s(:const, nil, :TkConsole), :create),
              s(:send,
                s(:const, nil, :TkConsole), :eval,
                s(:str, ".console conf -height 8")),
              s(:send,
                s(:send,
                  s(:lvar, :menuspec), :[],
                  s(:int, 0)), :<<,
                s(:array,
                  s(:str, "Console"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:if,
                      s(:send,
                        s(:const, nil, :TkComm), :bool,
                        s(:send,
                          s(:const, nil, :TkConsole), :eval,
                          s(:str, "winfo ismapped ."))),
                      s(:send,
                        s(:const, nil, :TkConsole), :hide),
                      s(:send,
                        s(:const, nil, :TkConsole), :show)))))), nil),
          s(:send,
            s(:send,
              s(:lvar, :menuspec), :[],
              s(:int, 0)), :<<,
            s(:array,
              s(:str, "View Source"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :toggle_source_window)))),
          s(:send,
            s(:send,
              s(:lvar, :menuspec), :[],
              s(:int, 0)), :<<,
            s(:array,
              s(:str, "Quit"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :exit)))),
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :add_menubar,
            s(:lvar, :menuspec)))),
      s(:def, :make_source_window,
        s(:args),
        s(:begin,
          s(:ivasgn, :@src_top,
            s(:send,
              s(:const, nil, :TkToplevel), :new)),
          s(:lvasgn, :f,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:ivar, :@src_top),
              s(:hash,
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 0))))),
          s(:case,
            s(:ivar, :@thisPlatform),
            s(:when,
              s(:str, "unix"),
              s(:lvasgn, :font,
                s(:send,
                  s(:const, nil, :TkFont), :new,
                  s(:array,
                    s(:str, "Courier"),
                    s(:int, -12))))),
            s(:lvasgn, :font,
              s(:send,
                s(:const, nil, :TkFont), :new,
                s(:array,
                  s(:str, "Courier"),
                  s(:int, 9))))),
          s(:ivasgn, :@src_txt,
            s(:send,
              s(:const, nil, :TkText), :new,
              s(:lvar, :f),
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:lvar, :font)),
                s(:pair,
                  s(:sym, :tabs),
                  s(:send,
                    s(:lvar, :font), :measure,
                    s(:str, "1234"))),
                s(:pair,
                  s(:sym, :wrap),
                  s(:sym, :none))))),
          s(:lvasgn, :xscr,
            s(:send,
              s(:ivar, :@src_txt), :xscrollbar,
              s(:send,
                s(:const, nil, :TkScrollbar), :new,
                s(:lvar, :f)))),
          s(:lvasgn, :yscr,
            s(:send,
              s(:ivar, :@src_txt), :yscrollbar,
              s(:send,
                s(:const, nil, :TkScrollbar), :new,
                s(:lvar, :f)))),
          s(:send,
            s(:lvar, :f), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :expand),
                s(:true)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)))),
          s(:send,
            s(:lvar, :f), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :f), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@src_txt), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))),
          s(:send,
            s(:lvar, :xscr), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 1)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :we)))),
          s(:send,
            s(:lvar, :yscr), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 1)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ns)))),
          s(:send,
            s(:ivar, :@src_top), :protocol,
            s(:str, "WM_DELETE_WINDOW"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:ivar, :@src_top), :withdraw))),
          s(:send,
            s(:ivar, :@src_top), :geometry,
            s(:str, "-0+0")),
          s(:send,
            s(:ivar, :@src_top), :withdraw))),
      s(:def, :show_source,
        s(:args,
          s(:arg, :file)),
        s(:begin,
          s(:send,
            s(:ivar, :@src_top), :title,
            s(:dstr,
              s(:str, "Demo Source: "),
              s(:begin,
                s(:lvar, :file)))),
          s(:send,
            s(:ivar, :@src_txt), :value=,
            s(:send,
              s(:const, nil, :IO), :read,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ScriptDir),
                s(:lvar, :file)))),
          s(:send,
            s(:ivar, :@src_txt), :set_insert,
            s(:str, "1.0")))),
      s(:def, :toggle_source_window,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@src_top), :winfo_mapped?),
          s(:send,
            s(:ivar, :@src_top), :withdraw),
          s(:send,
            s(:ivar, :@src_top), :deiconify))),
      s(:def, :tree_plus_scrollbars_in_a_frame,
        s(:args,
          s(:arg, :parent),
          s(:arg, :h),
          s(:arg, :v)),
        s(:begin,
          s(:lvasgn, :f,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken))))),
          s(:case,
            s(:ivar, :@thisPlatform),
            s(:when,
              s(:str, "unix"),
              s(:lvasgn, :font,
                s(:send,
                  s(:const, nil, :TkFont), :new,
                  s(:array,
                    s(:str, "Helvetica"),
                    s(:int, -12))))),
            s(:lvasgn, :font,
              s(:send,
                s(:const, nil, :TkFont), :new,
                s(:array,
                  s(:str, "MS Sans"),
                  s(:int, 8))))),
          s(:lvasgn, :tree,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :TreeCtrl), :new,
              s(:lvar, :f),
              s(:hash,
                s(:pair,
                  s(:sym, :highlightthickness),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :font),
                  s(:lvar, :font))))),
          s(:send,
            s(:lvar, :tree), :[]=,
            s(:sym, :xscrollincrement),
            s(:int, 20)),
          s(:send,
            s(:lvar, :tree), :debug_configure,
            s(:hash,
              s(:pair,
                s(:sym, :enable),
                s(:false)),
              s(:pair,
                s(:sym, :display),
                s(:false)))),
          s(:if,
            s(:lvar, :h),
            s(:begin,
              s(:lvasgn, :h_scr,
                s(:send,
                  s(:const, nil, :TkScrollbar), :new,
                  s(:lvar, :f),
                  s(:hash,
                    s(:pair,
                      s(:sym, :orient),
                      s(:sym, :horizontal)),
                    s(:pair,
                      s(:sym, :command),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args,
                          s(:restarg, :args)),
                        s(:send,
                          s(:lvar, :tree), :xview,
                          s(:splat,
                            s(:lvar, :args)))))))),
              s(:send,
                s(:lvar, :tree), :notify_bind,
                s(:lvar, :h_scr),
                s(:str, "Scroll-x"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :w),
                    s(:arg, :l),
                    s(:arg, :u)),
                  s(:send,
                    s(:lvar, :w), :set,
                    s(:lvar, :l),
                    s(:lvar, :u))),
                s(:str, "%W %l %u")),
              s(:send,
                s(:lvar, :h_scr), :bind,
                s(:str, "ButtonPress-1"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :tree), :set_focus)))), nil),
          s(:if,
            s(:lvar, :v),
            s(:begin,
              s(:lvasgn, :v_scr,
                s(:send,
                  s(:const, nil, :TkScrollbar), :new,
                  s(:lvar, :f),
                  s(:hash,
                    s(:pair,
                      s(:sym, :orient),
                      s(:sym, :vertical)),
                    s(:pair,
                      s(:sym, :command),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args,
                          s(:restarg, :args)),
                        s(:send,
                          s(:lvar, :tree), :yview,
                          s(:splat,
                            s(:lvar, :args)))))))),
              s(:send,
                s(:lvar, :tree), :notify_bind,
                s(:lvar, :v_scr),
                s(:str, "Scroll-y"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :w),
                    s(:arg, :l),
                    s(:arg, :u)),
                  s(:send,
                    s(:lvar, :w), :set,
                    s(:lvar, :l),
                    s(:lvar, :u))),
                s(:str, "%W %l %u")),
              s(:send,
                s(:lvar, :v_scr), :bind,
                s(:str, "ButtonPress-1"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :tree), :set_focus)))), nil),
          s(:send,
            s(:lvar, :f), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :f), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :tree), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))),
          s(:if,
            s(:lvar, :h),
            s(:send,
              s(:lvar, :h_scr), :grid,
              s(:hash,
                s(:pair,
                  s(:sym, :row),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :column),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :sticky),
                  s(:sym, :we)))), nil),
          s(:if,
            s(:lvar, :v),
            s(:send,
              s(:lvar, :v_scr), :grid,
              s(:hash,
                s(:pair,
                  s(:sym, :row),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :column),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :sticky),
                  s(:sym, :ns)))), nil),
          s(:array,
            s(:lvar, :f),
            s(:lvar, :tree)))),
      s(:def, :make_main_window,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :title,
            s(:str, "Tk::TreeCtrl Demo")),
          s(:case,
            s(:ivar, :@thisPlatform),
            s(:when,
              s(:str, "macosx"),
              s(:send,
                s(:send,
                  s(:const, nil, :Tk), :root), :geometry,
                s(:str, "+40+40"))),
            s(:send,
              s(:send,
                s(:const, nil, :Tk), :root), :geometry,
              s(:str, "+0+30"))),
          s(:lvasgn, :pane1,
            s(:send,
              s(:const, nil, :TkPanedWindow), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :vertical)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 0))))),
          s(:lvasgn, :pane2,
            s(:send,
              s(:const, nil, :TkPanedWindow), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :horizontal)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 0))))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :f1),
              s(:ivasgn, :@tree1)),
            s(:send, nil, :tree_plus_scrollbars_in_a_frame,
              s(:nil),
              s(:false),
              s(:true))),
          s(:send,
            s(:ivar, :@tree1), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :showbuttons),
                s(:false)),
              s(:pair,
                s(:sym, :showlines),
                s(:sym, :false)),
              s(:pair,
                s(:sym, :showroot),
                s(:false)),
              s(:pair,
                s(:sym, :height),
                s(:int, 100)))),
          s(:if,
            s(:gvar, :$HasColumnCreate),
            s(:send,
              s(:ivar, :@tree1), :column_create,
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "List of Demos")),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :button),
                  s(:false)))),
            s(:send,
              s(:ivar, :@tree1), :column_configure,
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "List of Demos")),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :button),
                  s(:false))))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :f4),
              s(:ivasgn, :@tree4)),
            s(:send, nil, :tree_plus_scrollbars_in_a_frame,
              s(:nil),
              s(:false),
              s(:true))),
          s(:send,
            s(:ivar, :@tree4), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :showroot),
                s(:false)),
              s(:pair,
                s(:sym, :height),
                s(:int, 140)))),
          s(:if,
            s(:gvar, :$HasColumnCreate),
            s(:send,
              s(:ivar, :@tree4), :column_create,
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Elements and Styles")),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :button),
                  s(:false)))),
            s(:send,
              s(:ivar, :@tree4), :column_configure,
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Elements and Styles")),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :button),
                  s(:false))))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :f3),
              s(:ivasgn, :@tree3)),
            s(:send, nil, :tree_plus_scrollbars_in_a_frame,
              s(:nil),
              s(:false),
              s(:true))),
          s(:send,
            s(:ivar, :@tree3), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :showroot),
                s(:false)))),
          s(:if,
            s(:gvar, :$HasColumnCreate),
            s(:send,
              s(:ivar, :@tree3), :column_create,
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Styles in Item")),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :button),
                  s(:false)))),
            s(:send,
              s(:ivar, :@tree3), :column_configure,
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Styles in Item")),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :button),
                  s(:false))))),
          s(:send,
            s(:lvar, :pane1), :add,
            s(:lvar, :f1),
            s(:lvar, :f4),
            s(:lvar, :f3),
            s(:hash,
              s(:pair,
                s(:sym, :height),
                s(:int, 150)))),
          s(:send,
            s(:lvar, :pane1), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :expand),
                s(:true)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)))),
          s(:lvasgn, :f2_base,
            s(:send,
              s(:const, nil, :TkFrame), :new)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :f2),
              s(:ivasgn, :@tree2)),
            s(:send, nil, :tree_plus_scrollbars_in_a_frame,
              s(:lvar, :f2_base),
              s(:true),
              s(:true))),
          s(:send,
            s(:ivar, :@tree2), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :indent),
                s(:int, 19)))),
          s(:send,
            s(:ivar, :@tree2), :debug_configure,
            s(:hash,
              s(:pair,
                s(:sym, :enable),
                s(:false)),
              s(:pair,
                s(:sym, :display),
                s(:true)),
              s(:pair,
                s(:sym, :erasecolor),
                s(:str, "pink")),
              s(:pair,
                s(:sym, :displaydelay),
                s(:int, 30)))),
          s(:send,
            s(:ivar, :@tree2), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :borderwidth),
                s(:int, 6)),
              s(:pair,
                s(:sym, :relief),
                s(:sym, :ridge)),
              s(:pair,
                s(:sym, :highlightthickness),
                s(:int, 3)))),
          s(:send,
            s(:lvar, :f2_base), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :f2_base), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :f2), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 0)))),
          s(:send,
            s(:lvar, :pane2), :add,
            s(:lvar, :pane1),
            s(:hash,
              s(:pair,
                s(:sym, :width),
                s(:int, 200)))),
          s(:send,
            s(:lvar, :pane2), :add,
            s(:lvar, :f2_base),
            s(:hash,
              s(:pair,
                s(:sym, :width),
                s(:int, 450)))),
          s(:send,
            s(:lvar, :pane2), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :expand),
                s(:true)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)))),
          s(:send,
            s(:ivar, :@tree2), :notify_install_event,
            s(:str, "Header")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_detail,
            s(:str, "Header"),
            s(:str, "invoke")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_event,
            s(:str, "Drag")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_detail,
            s(:str, "Drag"),
            s(:str, "begin")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_detail,
            s(:str, "Drag"),
            s(:str, "end")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_detail,
            s(:str, "Drag"),
            s(:str, "receive")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_event,
            s(:str, "Edit")),
          s(:send,
            s(:ivar, :@tree2), :notify_install_detail,
            s(:str, "Edit"),
            s(:str, "accept")))),
      s(:def, :make_list_popup,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :bgimg),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :bgmode),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :debug),
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args,
                s(:arg, :h),
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :k),
                s(:send,
                  s(:const, nil, :TkVariable), :new)))),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :doublebuffer),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :linestyle),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :orient),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :selectmode),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :show),
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args,
                s(:arg, :h),
                s(:arg, :k)),
              s(:send,
                s(:lvar, :h), :[]=,
                s(:lvar, :k),
                s(:send,
                  s(:const, nil, :TkVariable), :new)))),
          s(:lvasgn, :menuspec,
            s(:array,
              s(:array,
                s(:str, "Collapse"),
                s(:array),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Expand"),
                s(:array),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))))),
          s(:if,
            s(:ivar, :@has_bgimg),
            s(:send,
              s(:lvar, :menuspec), :<<,
              s(:array,
                s(:str, "Background Image"),
                s(:array,
                  s(:array,
                    s(:str, "none"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :bgimg)),
                      s(:str, "none")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :backgroundimage=,
                            s(:str, "")))))),
                  s(:array,
                    s(:str, "sky"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :bgimg)),
                      s(:str, "sky")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :backgroundimage=,
                            s(:send,
                              s(:ivar, :@images), :[],
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :bgimg)), :value)))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false))))))), nil),
          s(:send,
            s(:lvar, :menuspec), :concat,
            s(:array,
              s(:array,
                s(:str, "Background Mode"),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "column"),
                      s(:str, "index"),
                      s(:str, "row"),
                      s(:str, "visindex")), :collect),
                  s(:args,
                    s(:arg, :val)),
                  s(:array,
                    s(:lvar, :val),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :bgmode)),
                      s(:lvar, :val)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :backgroundmode=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :bgmode)), :value))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Debug"),
                s(:array,
                  s(:array,
                    s(:str, "Data"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :debug)), :[],
                      s(:sym, :data)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :debug_configure,
                            s(:hash,
                              s(:pair,
                                s(:sym, :data),
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:ivar, :@popup), :[],
                                      s(:sym, :debug)), :[],
                                    s(:sym, :data)), :value)))))))),
                  s(:array,
                    s(:str, "Display"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :debug)), :[],
                      s(:sym, :display)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :debug_configure,
                            s(:hash,
                              s(:pair,
                                s(:sym, :display),
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:ivar, :@popup), :[],
                                      s(:sym, :debug)), :[],
                                    s(:sym, :display)), :value)))))))),
                  s(:array,
                    s(:str, "Enable"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :debug)), :[],
                      s(:sym, :enable)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :debug_configure,
                            s(:hash,
                              s(:pair,
                                s(:sym, :enable),
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:ivar, :@popup), :[],
                                      s(:sym, :debug)), :[],
                                    s(:sym, :enable)), :value))))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Buffering"),
                s(:array,
                  s(:array,
                    s(:str, "none"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :doublebuffer)),
                      s(:str, "none")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :doublebuffer=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :doublebuffer)), :value)))))),
                  s(:array,
                    s(:str, "item"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :doublebuffer)),
                      s(:str, "item")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :doublebuffer=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :doublebuffer)), :value)))))),
                  s(:array,
                    s(:str, "window"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :doublebuffer)),
                      s(:str, "window")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :doublebuffer=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :doublebuffer)), :value))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Line style"),
                s(:array,
                  s(:array,
                    s(:str, "dot"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :linestyle)),
                      s(:str, "dot")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :linestyle=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :linestyle)), :value)))))),
                  s(:array,
                    s(:str, "solid"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :linestyle)),
                      s(:str, "solid")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :linestyle=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :linestyle)), :value))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Orient"),
                s(:array,
                  s(:array,
                    s(:str, "Horizontal"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :orient)),
                      s(:str, "horizontal")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :orient=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :orient)), :value)))))),
                  s(:array,
                    s(:str, "Vertical"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :orient)),
                      s(:str, "vertical")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :orient=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :orient)), :value))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Selectmode"),
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "list"),
                      s(:str, "browse"),
                      s(:str, "extended"),
                      s(:str, "multiple"),
                      s(:str, "single")), :collect),
                  s(:args,
                    s(:arg, :val)),
                  s(:array,
                    s(:lvar, :val),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :selectmode)),
                      s(:lvar, :val)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :selectmode=,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :selectmode)), :value))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Show"),
                s(:array,
                  s(:array,
                    s(:str, "Buttons"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :show)), :[],
                      s(:sym, :buttons)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :showbuttons=,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :show)), :[],
                                s(:sym, :buttons)), :value)))))),
                  s(:array,
                    s(:str, "Header"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :show)), :[],
                      s(:sym, :header)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :showheader=,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :show)), :[],
                                s(:sym, :header)), :value)))))),
                  s(:array,
                    s(:str, "Lines"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :show)), :[],
                      s(:sym, :lines)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :showlines=,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :show)), :[],
                                s(:sym, :lines)), :value)))))),
                  s(:array,
                    s(:str, "Root"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :show)), :[],
                      s(:sym, :root)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :showroot=,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :show)), :[],
                                s(:sym, :root)), :value)))))),
                  s(:array,
                    s(:str, "Root Button"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :show)), :[],
                      s(:sym, :rootbutton)),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :showrootbutton=,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :show)), :[],
                                s(:sym, :rootbutton)), :value))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Visible"),
                s(:array),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))))),
          s(:lvasgn, :m,
            s(:send,
              s(:const, nil, :TkMenu), :new_menuspec,
              s(:lvar, :menuspec),
              s(:ivar, :@tree2),
              s(:false))),
          s(:send,
            s(:ivar, :@non_clear_list), :<<,
            s(:lvar, :m)),
          s(:send,
            s(:ivar, :@mTree), :[]=,
            s(:ivar, :@tree2),
            s(:lvar, :m)))),
      s(:def, :show_list_popup,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :rootx),
          s(:arg, :rooty)),
        s(:begin,
          s(:lvasgn, :id,
            s(:send,
              s(:lvar, :w), :identify,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:if,
            s(:send,
              s(:lvar, :id), :empty?), nil,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :==,
                s(:str, "header")),
              s(:begin,
                s(:lvasgn, :col,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 1))),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :column)), :value=,
                  s(:lvar, :col)),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :arrow)), :value=,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :col),
                    s(:sym, :arrow))),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :arrowside)), :value=,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :col),
                    s(:sym, :arrowside))),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :arrowgravity)), :value=,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :col),
                    s(:sym, :arrowgravity))),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :expand)), :value=,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :col),
                    s(:sym, :expand))),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :squeeze)), :value=,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :col),
                    s(:sym, :squeeze))),
                s(:send,
                  s(:send,
                    s(:ivar, :@popup), :[],
                    s(:sym, :justify)), :value=,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :col),
                    s(:sym, :justify))),
                s(:send,
                  s(:send,
                    s(:ivar, :@mHeader), :[],
                    s(:lvar, :w)), :popup,
                  s(:lvar, :rootx),
                  s(:lvar, :rooty)),
                s(:return)), nil)),
          s(:lvasgn, :m,
            s(:send,
              s(:send,
                s(:ivar, :@mTree), :[],
                s(:lvar, :w)), :entrycget,
              s(:str, "Collapse"),
              s(:sym, :menu))),
          s(:send,
            s(:lvar, :m), :delete,
            s(:int, 0),
            s(:sym, :end)),
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:send,
              s(:lvar, :m), :add_command,
              s(:hash,
                s(:pair,
                  s(:sym, :label),
                  s(:str, "All")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :w), :item_collapse,
                      s(:sym, :all)))))),
            s(:send,
              s(:lvar, :m), :add_command,
              s(:hash,
                s(:pair,
                  s(:sym, :label),
                  s(:str, "All")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :w), :collapse,
                      s(:sym, :all))))))),
          s(:if,
            s(:send,
              s(:lvar, :id), :empty?), nil,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :==,
                s(:str, "item")),
              s(:begin,
                s(:lvasgn, :item,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 1))),
                s(:if,
                  s(:gvar, :$Version_1_1_OrLater),
                  s(:begin,
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :item_collapse,
                              s(:lvar, :item)))))),
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)),
                            s(:str, " (recurse)"))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :item_collapse_recurse,
                              s(:lvar, :item))))))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :collapse,
                              s(:lvar, :item)))))),
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)),
                            s(:str, " (recurse)"))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :collapse_recurse,
                              s(:lvar, :item))))))))), nil)),
          s(:lvasgn, :m,
            s(:send,
              s(:send,
                s(:ivar, :@mTree), :[],
                s(:lvar, :w)), :entrycget,
              s(:str, "Expand"),
              s(:sym, :menu))),
          s(:send,
            s(:lvar, :m), :delete,
            s(:int, 0),
            s(:sym, :end)),
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:send,
              s(:lvar, :m), :add_command,
              s(:hash,
                s(:pair,
                  s(:sym, :label),
                  s(:str, "All")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :w), :item_expand,
                      s(:sym, :all)))))),
            s(:send,
              s(:lvar, :m), :add_command,
              s(:hash,
                s(:pair,
                  s(:sym, :label),
                  s(:str, "All")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :w), :expand,
                      s(:sym, :all))))))),
          s(:if,
            s(:send,
              s(:lvar, :id), :empty?), nil,
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :id), :[],
                  s(:int, 0)), :==,
                s(:str, "item")),
              s(:begin,
                s(:lvasgn, :item,
                  s(:send,
                    s(:lvar, :id), :[],
                    s(:int, 1))),
                s(:if,
                  s(:gvar, :$Version_1_1_OrLater),
                  s(:begin,
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :item_expand,
                              s(:lvar, :item)))))),
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)),
                            s(:str, " (recurse)"))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :item_expand_recurse,
                              s(:lvar, :item))))))),
                  s(:begin,
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :expand,
                              s(:lvar, :item)))))),
                    s(:send,
                      s(:lvar, :m), :add_command,
                      s(:hash,
                        s(:pair,
                          s(:sym, :label),
                          s(:dstr,
                            s(:str, "Item "),
                            s(:begin,
                              s(:lvar, :item)),
                            s(:str, " (recurse)"))),
                        s(:pair,
                          s(:sym, :command),
                          s(:block,
                            s(:send, nil, :proc),
                            s(:args),
                            s(:send,
                              s(:lvar, :w), :expand_recurse,
                              s(:lvar, :item))))))))), nil)),
          s(:block,
            s(:send,
              s(:array,
                s(:sym, :data),
                s(:sym, :display),
                s(:sym, :enable)), :each),
            s(:args,
              s(:arg, :k)),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@popup), :[],
                  s(:sym, :debug)), :[],
                s(:lvar, :k)), :value=,
              s(:send,
                s(:lvar, :w), :debug_cget,
                s(:lvar, :k)))),
          s(:if,
            s(:ivar, :@has_bgimg),
            s(:send,
              s(:send,
                s(:ivar, :@popup), :[],
                s(:sym, :bgimg)), :value=,
              s(:send,
                s(:ivar, :@images), :key,
                s(:send,
                  s(:lvar, :w), :[],
                  s(:sym, :backgroundimage)))), nil),
          s(:send,
            s(:send,
              s(:ivar, :@popup), :[],
              s(:sym, :bgmode)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :backgroundmode))),
          s(:send,
            s(:send,
              s(:ivar, :@popup), :[],
              s(:sym, :doublebuffer)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :doublebuffer))),
          s(:send,
            s(:send,
              s(:ivar, :@popup), :[],
              s(:sym, :linestyle)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :linestyle))),
          s(:send,
            s(:send,
              s(:ivar, :@popup), :[],
              s(:sym, :orient)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :orient))),
          s(:send,
            s(:send,
              s(:ivar, :@popup), :[],
              s(:sym, :selectmode)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :selectmode))),
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@popup), :[],
                s(:sym, :show)), :[],
              s(:sym, :buttons)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :showbuttons))),
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@popup), :[],
                s(:sym, :show)), :[],
              s(:sym, :header)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :showheader))),
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@popup), :[],
                s(:sym, :show)), :[],
              s(:sym, :lines)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :showlines))),
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@popup), :[],
                s(:sym, :show)), :[],
              s(:sym, :root)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :showroot))),
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@popup), :[],
                s(:sym, :show)), :[],
              s(:sym, :rootbutton)), :value=,
            s(:send,
              s(:lvar, :w), :[],
              s(:sym, :showrootbutton))),
          s(:lvasgn, :m,
            s(:send,
              s(:send,
                s(:ivar, :@mTree), :[],
                s(:lvar, :w)), :entrycget,
              s(:str, "Visible"),
              s(:sym, :menu))),
          s(:send,
            s(:lvar, :m), :delete,
            s(:int, 0),
            s(:sym, :end)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :visible),
            s(:array)),
          s(:block,
            s(:send,
              s(:begin,
                s(:erange,
                  s(:int, 0),
                  s(:begin,
                    s(:send,
                      s(:lvar, :w), :numcolumns)))), :each),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:send,
                s(:send,
                  s(:ivar, :@popup), :[],
                  s(:sym, :visible)), :[]=,
                s(:lvar, :i),
                s(:send,
                  s(:const, nil, :TkVariable), :new,
                  s(:send,
                    s(:lvar, :w), :column_cget,
                    s(:lvar, :i),
                    s(:sym, :visible)))),
              s(:lvasgn, :txt,
                s(:send,
                  s(:lvar, :w), :column_cget,
                  s(:lvar, :i),
                  s(:sym, :text))),
              s(:lvasgn, :img_name,
                s(:send,
                  s(:lvar, :w), :column_cget,
                  s(:lvar, :i),
                  s(:sym, :image))),
              s(:if,
                s(:send,
                  s(:lvar, :img_name), :kind_of?,
                  s(:const, nil, :TkImage)),
                s(:lvasgn, :img_name,
                  s(:send,
                    s(:ivar, :@images), :key,
                    s(:lvar, :img_name))), nil),
              s(:send,
                s(:lvar, :m), :add_checkbutton,
                s(:hash,
                  s(:pair,
                    s(:sym, :variable),
                    s(:send,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :visible)), :[],
                      s(:lvar, :i))),
                  s(:pair,
                    s(:sym, :label),
                    s(:dstr,
                      s(:str, "Column "),
                      s(:begin,
                        s(:lvar, :i)),
                      s(:str, " \""),
                      s(:begin,
                        s(:lvar, :txt)),
                      s(:str, "\" ["),
                      s(:begin,
                        s(:lvar, :img_name)),
                      s(:str, "]"))),
                  s(:pair,
                    s(:sym, :command),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send,
                        s(:lvar, :w), :column_configure,
                        s(:lvar, :i),
                        s(:hash,
                          s(:pair,
                            s(:sym, :visible),
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:ivar, :@popup), :[],
                                  s(:sym, :visible)), :[],
                                s(:lvar, :i)), :value)))))))))),
          s(:send,
            s(:send,
              s(:ivar, :@mTree), :[],
              s(:lvar, :w)), :popup,
            s(:lvar, :rootx),
            s(:lvar, :rooty)))),
      s(:def, :make_header_popup,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@popup), :[],
              s(:sym, :column)), nil,
            s(:send,
              s(:ivar, :@popup), :[]=,
              s(:sym, :column),
              s(:send,
                s(:const, nil, :TkVariable), :new))),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :arrow),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :arrowside),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :arrowgravity),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :expand),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :squeeze),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:send,
            s(:ivar, :@popup), :[]=,
            s(:sym, :justify),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:lvasgn, :menuspec,
            s(:array,
              s(:array,
                s(:str, "Arrow"),
                s(:array,
                  s(:array,
                    s(:str, "None"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrow)),
                      s(:str, "none")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrow),
                                s(:sym, :none)))))))),
                  s(:array,
                    s(:str, "Up"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrow)),
                      s(:str, "up")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrow),
                                s(:sym, :up)))))))),
                  s(:array,
                    s(:str, "Down"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrow)),
                      s(:str, "down")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrow),
                                s(:sym, :down)))))))),
                  s(:str, "---"),
                  s(:array,
                    s(:str, "Side Left"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrowside)),
                      s(:str, "left")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrowside),
                                s(:sym, :left)))))))),
                  s(:array,
                    s(:str, "Side Right"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrowside)),
                      s(:str, "right")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrowside),
                                s(:sym, :right)))))))),
                  s(:str, "---"),
                  s(:array,
                    s(:str, "Gravity Left"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrowgravity)),
                      s(:str, "left")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrowgravity),
                                s(:sym, :left)))))))),
                  s(:array,
                    s(:str, "Gravity Right"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :arrowgravity)),
                      s(:str, "right")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :arrowgravity),
                                s(:sym, :right))))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))),
              s(:array,
                s(:str, "Expand"),
                s(:send,
                  s(:ivar, :@popup), :[],
                  s(:sym, :expand)),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :command),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send,
                        s(:ivar, :@tree2), :column_configure,
                        s(:send,
                          s(:send,
                            s(:ivar, :@popup), :[],
                            s(:sym, :column)), :value),
                        s(:hash,
                          s(:pair,
                            s(:sym, :expand),
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :expand)), :value)))))))),
              s(:array,
                s(:str, "Squeeze"),
                s(:send,
                  s(:ivar, :@popup), :[],
                  s(:sym, :squeeze)),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :command),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send,
                        s(:ivar, :@tree2), :column_configure,
                        s(:send,
                          s(:send,
                            s(:ivar, :@popup), :[],
                            s(:sym, :column)), :value),
                        s(:hash,
                          s(:pair,
                            s(:sym, :squeeze),
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :squeeze)), :value)))))))),
              s(:array,
                s(:str, "Justify"),
                s(:array,
                  s(:array,
                    s(:str, "Left"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :justify)),
                      s(:str, "left")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :justify),
                                s(:sym, :left)))))))),
                  s(:array,
                    s(:str, "Center"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :justify)),
                      s(:str, "center")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :justify),
                                s(:sym, :center)))))))),
                  s(:array,
                    s(:str, "Right"),
                    s(:array,
                      s(:send,
                        s(:ivar, :@popup), :[],
                        s(:sym, :justify)),
                      s(:str, "right")),
                    s(:nil),
                    s(:str, ""),
                    s(:hash,
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:ivar, :@tree2), :column_configure,
                            s(:send,
                              s(:send,
                                s(:ivar, :@popup), :[],
                                s(:sym, :column)), :value),
                            s(:hash,
                              s(:pair,
                                s(:sym, :justify),
                                s(:sym, :right))))))))),
                s(:nil),
                s(:str, ""),
                s(:hash,
                  s(:pair,
                    s(:sym, :menu_config),
                    s(:hash,
                      s(:pair,
                        s(:sym, :tearoff),
                        s(:false)))))))),
          s(:lvasgn, :m,
            s(:send,
              s(:const, nil, :TkMenu), :new_menuspec,
              s(:lvar, :menuspec),
              s(:ivar, :@tree2),
              s(:false))),
          s(:send,
            s(:ivar, :@non_clear_list), :<<,
            s(:lvar, :m)),
          s(:send,
            s(:ivar, :@mHeader), :[]=,
            s(:ivar, :@tree2),
            s(:lvar, :m)))),
      s(:def, :init_demo_scripts_module,
        s(:args),
        s(:begin,
          s(:ivasgn, :@demo_scripts,
            s(:send,
              s(:const, nil, :Module), :new)),
          s(:lvasgn, :master,
            s(:self)),
          s(:lvasgn, :has_bgimg,
            s(:ivar, :@has_bgimg)),
          s(:lvasgn, :scriptDir,
            s(:ivar, :@ScriptDir)),
          s(:lvasgn, :thisPlatform,
            s(:ivar, :@thisPlatform)),
          s(:lvasgn, :randomN,
            s(:ivar, :@RandomN)),
          s(:lvasgn, :images,
            s(:ivar, :@images)),
          s(:lvasgn, :sel_images,
            s(:ivar, :@sel_images)),
          s(:lvasgn, :systemButtonFace,
            s(:ivar, :@SystemButtonFace)),
          s(:lvasgn, :systemHighlight,
            s(:ivar, :@SystemHighlight)),
          s(:lvasgn, :systemHighlightText,
            s(:ivar, :@SystemHighlightText)),
          s(:defs,
            s(:lvar, :master), :_pub_display_styles_in_item,
            s(:args,
              s(:arg, :item)),
            s(:send, nil, :display_styles_in_item,
              s(:lvar, :item))),
          s(:lvasgn, :proc_disp_styles_in_item,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :item)),
              s(:send,
                s(:lvar, :master), :_pub_display_styles_in_item,
                s(:lvar, :item)))),
          s(:block,
            s(:send,
              s(:ivar, :@demo_scripts), :instance_eval),
            s(:args),
            s(:begin,
              s(:ivasgn, :@master,
                s(:lvar, :master)),
              s(:ivasgn, :@has_bgimg,
                s(:lvar, :has_bgimg)),
              s(:ivasgn, :@display_styles_in_item,
                s(:lvar, :proc_disp_styles_in_item)),
              s(:ivasgn, :@Priv,
                s(:send,
                  s(:const, nil, :TkVarAccess), :new,
                  s(:str, "::TreeCtrl::Priv"))),
              s(:ivasgn, :@ScriptDir,
                s(:lvar, :scriptDir)),
              s(:ivasgn, :@thisPlatform,
                s(:lvar, :thisPlatform)),
              s(:ivasgn, :@RandomN,
                s(:lvar, :randomN)),
              s(:ivasgn, :@images,
                s(:lvar, :images)),
              s(:ivasgn, :@sel_images,
                s(:lvar, :sel_images)),
              s(:ivasgn, :@SystemButtonFace,
                s(:lvar, :systemButtonFace)),
              s(:ivasgn, :@SystemHighlight,
                s(:lvar, :systemHighlight)),
              s(:ivasgn, :@SystemHighlightText,
                s(:lvar, :systemHighlightText)))),
          s(:sclass,
            s(:ivar, :@demo_scripts),
            s(:begin,
              s(:def, :_get_binding,
                s(:args),
                s(:send, nil, :binding)),
              s(:send, nil, :private,
                s(:sym, :_get_binding)),
              s(:def, :load_demo,
                s(:args,
                  s(:arg, :file)),
                s(:begin,
                  s(:if,
                    s(:gvar, :$DEBUG),
                    s(:send, nil, :puts,
                      s(:dstr,
                        s(:str, "load \""),
                        s(:begin,
                          s(:lvar, :file)),
                        s(:str, "\""))), nil),
                  s(:kwbegin,
                    s(:rescue,
                      s(:send, nil, :eval,
                        s(:send,
                          s(:send,
                            s(:const, nil, :IO), :readlines,
                            s(:lvar, :file)), :join),
                        s(:send, nil, :_get_binding)),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :Exception)),
                        s(:lvasgn, :e),
                        s(:begin,
                          s(:lvasgn, :bt,
                            s(:send,
                              s(:lvar, :e), :backtrace)),
                          s(:if,
                            s(:send,
                              s(:send,
                                s(:lvar, :bt), :[],
                                s(:int, 0)), :=~,
                              s(:regexp,
                                s(:str, "^([^:]+):(\\d+):"),
                                s(:regopt))),
                            s(:lvasgn, :errline,
                              s(:send,
                                s(:nth_ref, 2), :to_i)),
                            s(:send, nil, :raise,
                              s(:lvar, :e))),
                          s(:if,
                            s(:send,
                              s(:send,
                                s(:lvar, :bt), :[],
                                s(:int, 1)), :=~,
                              s(:regexp,
                                s(:str, "^([^:]+):(\\d+):"),
                                s(:regopt))),
                            s(:begin,
                              s(:send,
                                s(:lvar, :bt), :unshift,
                                s(:dstr,
                                  s(:begin,
                                    s(:lvar, :file)),
                                  s(:str, ":"),
                                  s(:begin,
                                    s(:send,
                                      s(:send,
                                        s(:lvar, :errline), :-,
                                        s(:send,
                                          s(:nth_ref, 2), :to_i)), :+,
                                      s(:int, 1))))),
                              s(:send, nil, :raise,
                                s(:lvar, :e))),
                            s(:send, nil, :raise,
                              s(:lvar, :e))))), nil)))),
              s(:def, :init_pics,
                s(:args,
                  s(:restarg, :args)),
                s(:send,
                  s(:ivar, :@master), :init_pics,
                  s(:splat,
                    s(:lvar, :args)))))))),
      s(:def, :load_demo_scripts,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:str, "bitmaps"),
              s(:str, "explorer"),
              s(:str, "help"),
              s(:str, "imovie"),
              s(:str, "layout"),
              s(:str, "mailwasher"),
              s(:str, "outlook-folders"),
              s(:str, "outlook-newgroup"),
              s(:str, "random"),
              s(:str, "www-options")), :each),
          s(:args,
            s(:arg, :f)),
          s(:send,
            s(:ivar, :@demo_scripts), :load_demo,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@ScriptDir),
              s(:dstr,
                s(:begin,
                  s(:lvar, :f)),
                s(:str, ".rb")))))),
      s(:def, :init_demo_list,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree1), :element_create,
            s(:str, "e1"),
            s(:sym, :text),
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:array,
                  s(:ivar, :@SystemHighlightText),
                  s(:array,
                    s(:str, "selected"),
                    s(:str, "focus")))))),
          s(:send,
            s(:ivar, :@tree1), :element_create,
            s(:str, "e2"),
            s(:sym, :rect),
            s(:hash,
              s(:pair,
                s(:sym, :showfocus),
                s(:true)),
              s(:pair,
                s(:sym, :fill),
                s(:array,
                  s(:ivar, :@SystemHighlight),
                  s(:array,
                    s(:str, "selected"),
                    s(:str, "focus")),
                  s(:str, "gray"),
                  s(:array,
                    s(:str, "selected"),
                    s(:str, "!focus")))))),
          s(:send,
            s(:ivar, :@tree1), :style_create,
            s(:str, "s1")),
          s(:send,
            s(:ivar, :@tree1), :style_elements,
            s(:str, "s1"),
            s(:array,
              s(:str, "e2"),
              s(:str, "e1"))),
          s(:send,
            s(:ivar, :@tree1), :style_layout,
            s(:str, "s1"),
            s(:str, "e2"),
            s(:hash,
              s(:pair,
                s(:sym, :union),
                s(:array,
                  s(:str, "e1"))),
              s(:pair,
                s(:sym, :ipadx),
                s(:int, 2)),
              s(:pair,
                s(:sym, :ipady),
                s(:array,
                  s(:int, 0),
                  s(:int, 1))),
              s(:pair,
                s(:sym, :iexpand),
                s(:sym, :e)))),
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:send,
              s(:ivar, :@tree1), :defaultstyle=,
              s(:str, "s1")), nil),
          s(:block,
            s(:send,
              s(:array,
                s(:array,
                  s(:dstr,
                    s(:str, "Random "),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@RandomN), :[],
                        s(:int, 0))),
                    s(:str, " Items")),
                  s(:sym, :demoRandom),
                  s(:str, "random.rb")),
                s(:array,
                  s(:dstr,
                    s(:str, "Random "),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@RandomN), :[],
                        s(:int, 0))),
                    s(:str, " Items, Button Images")),
                  s(:sym, :demoRandom2),
                  s(:str, "random.rb")),
                s(:array,
                  s(:str, "Outlook Express (Folders)"),
                  s(:sym, :demoOutlookFolders),
                  s(:str, "outlook-folders.rb")),
                s(:array,
                  s(:str, "Outlook Express (Newsgroup)"),
                  s(:sym, :demoOutlookNewsgroup),
                  s(:str, "outlook-newgroup.rb")),
                s(:array,
                  s(:str, "Explorer (Details)"),
                  s(:sym, :demoExplorerDetails),
                  s(:str, "explorer.rb")),
                s(:array,
                  s(:str, "Explorer (List)"),
                  s(:sym, :demoExplorerList),
                  s(:str, "explorer.rb")),
                s(:array,
                  s(:str, "Explorer (Large icons)"),
                  s(:sym, :demoExplorerLargeIcons),
                  s(:str, "explorer.rb")),
                s(:array,
                  s(:str, "Explorer (Small icons)"),
                  s(:sym, :demoExplorerSmallIcons),
                  s(:str, "explorer.rb")),
                s(:array,
                  s(:str, "Internet Options"),
                  s(:sym, :demoInternetOptions),
                  s(:str, "www-options.rb")),
                s(:array,
                  s(:str, "Help Contents"),
                  s(:sym, :demoHelpContents),
                  s(:str, "help.rb")),
                s(:array,
                  s(:str, "Layout"),
                  s(:sym, :demoLayout),
                  s(:str, "layout.rb")),
                s(:array,
                  s(:str, "MailWasher"),
                  s(:sym, :demoMailWasher),
                  s(:str, "mailwasher.rb")),
                s(:array,
                  s(:str, "Bitmaps"),
                  s(:sym, :demoBitmaps),
                  s(:str, "bitmaps.rb")),
                s(:array,
                  s(:str, "iMovie"),
                  s(:sym, :demoIMovie),
                  s(:str, "imovie.rb"))), :each),
            s(:args,
              s(:arg, :label),
              s(:arg, :cmd),
              s(:arg, :file)),
            s(:begin,
              s(:lvasgn, :item,
                s(:send,
                  s(:ivar, :@tree1), :item_create)),
              s(:send,
                s(:ivar, :@tree1), :item_lastchild,
                s(:sym, :root),
                s(:lvar, :item)),
              s(:if,
                s(:gvar, :$Version_1_1_OrLater), nil,
                s(:send,
                  s(:ivar, :@tree1), :item_style_set,
                  s(:lvar, :item),
                  s(:int, 0),
                  s(:str, "s1"))),
              s(:send,
                s(:ivar, :@tree1), :item_text,
                s(:lvar, :item),
                s(:int, 0),
                s(:lvar, :label)),
              s(:send,
                s(:ivar, :@demoCmd), :[]=,
                s(:lvar, :item),
                s(:lvar, :cmd)),
              s(:send,
                s(:ivar, :@demoFile), :[]=,
                s(:lvar, :item),
                s(:lvar, :file)))),
          s(:send,
            s(:ivar, :@tree1), :yview_moveto,
            s(:float, 0.0)))),
      s(:def, :demo_set,
        s(:args,
          s(:arg, :cmd),
          s(:arg, :file)),
        s(:begin,
          s(:send, nil, :demo_clear),
          s(:lvasgn, :clicks,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :Clock), :clicks)),
          s(:send,
            s(:ivar, :@demo_scripts), :__send__,
            s(:lvar, :cmd),
            s(:ivar, :@tree2)),
          s(:lvasgn, :clicks,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :Clock), :clicks), :-,
              s(:lvar, :clicks))),
          s(:send, nil, :puts,
            s(:dstr,
              s(:str, "set list in "),
              s(:begin,
                s(:send,
                  s(:str, "%.2g"), :%,
                  s(:begin,
                    s(:send,
                      s(:lvar, :clicks), :/,
                      s(:float, 1000000.0))))),
              s(:str, " seconds ("),
              s(:begin,
                s(:lvar, :clicks)),
              s(:str, " clicks)"))),
          s(:send,
            s(:ivar, :@tree2), :xview_moveto,
            s(:int, 0)),
          s(:send,
            s(:ivar, :@tree2), :yview_moveto,
            s(:int, 0)),
          s(:send,
            s(:const, nil, :Tk), :update),
          s(:send, nil, :display_styles_in_list),
          s(:send, nil, :show_source,
            s(:lvar, :file)))),
      s(:def, :display_styles_in_list,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@tree4), :style_names), :empty?),
            s(:begin,
              s(:send,
                s(:ivar, :@tree4), :element_create,
                s(:str, "e1"),
                s(:sym, :text),
                s(:hash,
                  s(:pair,
                    s(:sym, :fill),
                    s(:array,
                      s(:ivar, :@SystemHighlightText),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "focus")))))),
              s(:send,
                s(:ivar, :@tree4), :element_create,
                s(:str, "e2"),
                s(:sym, :text),
                s(:hash,
                  s(:pair,
                    s(:sym, :fill),
                    s(:array,
                      s(:ivar, :@SystemHighlightText),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "focus")),
                      s(:str, ""),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "!focus")),
                      s(:str, "blue"),
                      s(:array))))),
              s(:send,
                s(:ivar, :@tree4), :element_create,
                s(:str, "e3"),
                s(:sym, :rect),
                s(:hash,
                  s(:pair,
                    s(:sym, :showfocus),
                    s(:true)),
                  s(:pair,
                    s(:sym, :fill),
                    s(:array,
                      s(:ivar, :@SystemHighlight),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "focus")),
                      s(:str, "gray"),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "!focus")))))),
              s(:send,
                s(:ivar, :@tree4), :style_create,
                s(:str, "s1")),
              s(:send,
                s(:ivar, :@tree4), :style_elements,
                s(:str, "s1"),
                s(:array,
                  s(:str, "e3"),
                  s(:str, "e1"))),
              s(:send,
                s(:ivar, :@tree4), :style_layout,
                s(:str, "s1"),
                s(:str, "e3"),
                s(:hash,
                  s(:pair,
                    s(:sym, :union),
                    s(:array,
                      s(:str, "e1"))),
                  s(:pair,
                    s(:sym, :ipadx),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :ipady),
                    s(:array,
                      s(:int, 0),
                      s(:int, 1))))),
              s(:send,
                s(:ivar, :@tree4), :style_create,
                s(:str, "s2")),
              s(:send,
                s(:ivar, :@tree4), :style_elements,
                s(:str, "s2"),
                s(:array,
                  s(:str, "e3"),
                  s(:str, "e1"),
                  s(:str, "e2"))),
              s(:send,
                s(:ivar, :@tree4), :style_layout,
                s(:str, "s2"),
                s(:str, "e1"),
                s(:hash,
                  s(:pair,
                    s(:sym, :padx),
                    s(:array,
                      s(:int, 0),
                      s(:int, 4))))),
              s(:send,
                s(:ivar, :@tree4), :style_layout,
                s(:str, "s2"),
                s(:str, "e3"),
                s(:hash,
                  s(:pair,
                    s(:sym, :union),
                    s(:array,
                      s(:str, "e1"),
                      s(:str, "e2"))),
                  s(:pair,
                    s(:sym, :ipadx),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :ipady),
                    s(:array,
                      s(:int, 0),
                      s(:int, 1)))))), nil),
          s(:send,
            s(:ivar, :@tree4), :item_delete,
            s(:sym, :all)),
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@tree2), :element_names), :sort), :each),
            s(:args,
              s(:arg, :elem)),
            s(:begin,
              s(:if,
                s(:gvar, :$Version_1_1_OrLater),
                s(:begin,
                  s(:lvasgn, :item,
                    s(:send,
                      s(:ivar, :@tree4), :item_create,
                      s(:hash,
                        s(:pair,
                          s(:sym, :button),
                          s(:true))))),
                  s(:send,
                    s(:ivar, :@tree4), :item_collapse,
                    s(:lvar, :item))),
                s(:begin,
                  s(:lvasgn, :item,
                    s(:send,
                      s(:ivar, :@tree4), :item_create)),
                  s(:send,
                    s(:ivar, :@tree4), :item_hasbutton,
                    s(:lvar, :item),
                    s(:true)),
                  s(:send,
                    s(:ivar, :@tree4), :collapse,
                    s(:lvar, :item)))),
              s(:send,
                s(:ivar, :@tree4), :item_style_set,
                s(:lvar, :item),
                s(:int, 0),
                s(:str, "s1")),
              s(:send,
                s(:ivar, :@tree4), :item_text,
                s(:lvar, :item),
                s(:int, 0),
                s(:dstr,
                  s(:str, "Element "),
                  s(:begin,
                    s(:lvar, :elem)),
                  s(:str, " ("),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@tree2), :element_type,
                      s(:lvar, :elem))),
                  s(:str, ")"))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@tree2), :element_configinfo,
                    s(:lvar, :elem)), :each),
                s(:args,
                  s(:arg, :name),
                  s(:arg, :x),
                  s(:arg, :y),
                  s(:arg, :default),
                  s(:arg, :current)),
                s(:begin,
                  s(:lvasgn, :item2,
                    s(:send,
                      s(:ivar, :@tree4), :item_create)),
                  s(:if,
                    s(:send,
                      s(:lvar, :default), :==,
                      s(:lvar, :current)),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@tree4), :item_style_set,
                        s(:lvar, :item2),
                        s(:int, 0),
                        s(:str, "s1")),
                      s(:send,
                        s(:ivar, :@tree4), :item_complex,
                        s(:lvar, :item2),
                        s(:array,
                          s(:array,
                            s(:str, "e1"),
                            s(:hash,
                              s(:pair,
                                s(:sym, :text),
                                s(:dstr,
                                  s(:begin,
                                    s(:lvar, :name)),
                                  s(:str, " "),
                                  s(:begin,
                                    s(:send,
                                      s(:lvar, :current), :inspect))))))))),
                    s(:begin,
                      s(:send,
                        s(:ivar, :@tree4), :item_style_set,
                        s(:lvar, :item2),
                        s(:int, 0),
                        s(:str, "s2")),
                      s(:send,
                        s(:ivar, :@tree4), :item_complex,
                        s(:lvar, :item2),
                        s(:array,
                          s(:array,
                            s(:str, "e1"),
                            s(:hash,
                              s(:pair,
                                s(:sym, :text),
                                s(:lvar, :name)))),
                          s(:array,
                            s(:str, "e2"),
                            s(:hash,
                              s(:pair,
                                s(:sym, :text),
                                s(:send,
                                  s(:lvar, :current), :inspect)))))))),
                  s(:send,
                    s(:ivar, :@tree4), :item_lastchild,
                    s(:lvar, :item),
                    s(:lvar, :item2)))),
              s(:send,
                s(:ivar, :@tree4), :item_lastchild,
                s(:sym, :root),
                s(:lvar, :item)))),
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@tree2), :style_names), :sort), :each),
            s(:args,
              s(:arg, :sty)),
            s(:begin,
              s(:if,
                s(:gvar, :$Version_1_1_OrLater),
                s(:begin,
                  s(:lvasgn, :item,
                    s(:send,
                      s(:ivar, :@tree4), :item_create,
                      s(:hash,
                        s(:pair,
                          s(:sym, :button),
                          s(:true))))),
                  s(:send,
                    s(:ivar, :@tree4), :item_collapse,
                    s(:lvar, :item))),
                s(:begin,
                  s(:lvasgn, :item,
                    s(:send,
                      s(:ivar, :@tree4), :item_create)),
                  s(:send,
                    s(:ivar, :@tree4), :item_hasbutton,
                    s(:lvar, :item),
                    s(:true)),
                  s(:send,
                    s(:ivar, :@tree4), :collapse,
                    s(:lvar, :item)))),
              s(:send,
                s(:ivar, :@tree4), :item_style_set,
                s(:lvar, :item),
                s(:int, 0),
                s(:str, "s1")),
              s(:send,
                s(:ivar, :@tree4), :item_text,
                s(:lvar, :item),
                s(:int, 0),
                s(:dstr,
                  s(:str, "Style "),
                  s(:begin,
                    s(:lvar, :sty)))),
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@tree2), :style_elements,
                    s(:lvar, :sty)), :each),
                s(:args,
                  s(:arg, :elem)),
                s(:begin,
                  s(:if,
                    s(:gvar, :$Version_1_1_OrLater),
                    s(:begin,
                      s(:lvasgn, :item2,
                        s(:send,
                          s(:ivar, :@tree4), :item_create,
                          s(:hash,
                            s(:pair,
                              s(:sym, :button),
                              s(:true))))),
                      s(:send,
                        s(:ivar, :@tree4), :item_collapse,
                        s(:lvar, :item2))),
                    s(:begin,
                      s(:lvasgn, :item2,
                        s(:send,
                          s(:ivar, :@tree4), :item_create)),
                      s(:send,
                        s(:ivar, :@tree4), :item_hasbutton,
                        s(:lvar, :item2),
                        s(:true)),
                      s(:send,
                        s(:ivar, :@tree4), :collapse,
                        s(:lvar, :item2)))),
                  s(:send,
                    s(:ivar, :@tree4), :item_style_set,
                    s(:lvar, :item2),
                    s(:int, 0),
                    s(:str, "s1")),
                  s(:send,
                    s(:ivar, :@tree4), :item_text,
                    s(:lvar, :item2),
                    s(:int, 0),
                    s(:dstr,
                      s(:str, "Element "),
                      s(:begin,
                        s(:lvar, :elem)),
                      s(:str, " ("),
                      s(:begin,
                        s(:send,
                          s(:ivar, :@tree2), :element_type,
                          s(:lvar, :elem))),
                      s(:str, ")"))),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:ivar, :@tree2), :style_layout,
                        s(:lvar, :sty),
                        s(:lvar, :elem)), :each),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:begin,
                      s(:lvasgn, :item3,
                        s(:send,
                          s(:ivar, :@tree4), :item_create)),
                      s(:if,
                        s(:gvar, :$Version_1_1_OrLater), nil,
                        s(:send,
                          s(:ivar, :@tree4), :item_hasbutton,
                          s(:lvar, :item3),
                          s(:false))),
                      s(:send,
                        s(:ivar, :@tree4), :item_style_set,
                        s(:lvar, :item3),
                        s(:int, 0),
                        s(:str, "s1")),
                      s(:send,
                        s(:ivar, :@tree4), :item_text,
                        s(:lvar, :item3),
                        s(:int, 0),
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :k)),
                          s(:str, " "),
                          s(:begin,
                            s(:send,
                              s(:lvar, :v), :inspect)))),
                      s(:send,
                        s(:ivar, :@tree4), :item_lastchild,
                        s(:lvar, :item2),
                        s(:lvar, :item3)))),
                  s(:send,
                    s(:ivar, :@tree4), :item_lastchild,
                    s(:lvar, :item),
                    s(:lvar, :item2)))),
              s(:send,
                s(:ivar, :@tree4), :item_lastchild,
                s(:sym, :root),
                s(:lvar, :item)))),
          s(:send,
            s(:ivar, :@tree4), :xview_moveto,
            s(:int, 0)),
          s(:send,
            s(:ivar, :@tree4), :yview_moveto,
            s(:int, 0)))),
      s(:def, :display_styles_in_item,
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:send,
            s(:ivar, :@tree3), :column_configure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:dstr,
                  s(:str, "Styles in item "),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@tree2), :index,
                      s(:lvar, :item))))))),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@tree3), :style_names), :empty?),
            s(:begin,
              s(:send,
                s(:ivar, :@tree3), :element_create,
                s(:str, "e1"),
                s(:sym, :text),
                s(:hash,
                  s(:pair,
                    s(:sym, :fill),
                    s(:array,
                      s(:ivar, :@SystemHighlightText),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "focus")))))),
              s(:send,
                s(:ivar, :@tree3), :element_create,
                s(:str, "e2"),
                s(:sym, :text),
                s(:hash,
                  s(:pair,
                    s(:sym, :fill),
                    s(:array,
                      s(:ivar, :@SystemHighlightText),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "focus")),
                      s(:str, ""),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "!focus")),
                      s(:str, "blue"),
                      s(:array))))),
              s(:send,
                s(:ivar, :@tree3), :element_create,
                s(:str, "e3"),
                s(:sym, :rect),
                s(:hash,
                  s(:pair,
                    s(:sym, :showfocus),
                    s(:true)),
                  s(:pair,
                    s(:sym, :fill),
                    s(:array,
                      s(:ivar, :@SystemHighlight),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "focus")),
                      s(:str, "gray"),
                      s(:array,
                        s(:str, "selected"),
                        s(:str, "!focus")))))),
              s(:send,
                s(:ivar, :@tree3), :style_create,
                s(:str, "s1")),
              s(:send,
                s(:ivar, :@tree3), :style_elements,
                s(:str, "s1"),
                s(:array,
                  s(:str, "e3"),
                  s(:str, "e1"))),
              s(:send,
                s(:ivar, :@tree3), :style_layout,
                s(:str, "s1"),
                s(:str, "e3"),
                s(:hash,
                  s(:pair,
                    s(:sym, :union),
                    s(:array,
                      s(:str, "e1"))),
                  s(:pair,
                    s(:sym, :ipadx),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :ipady),
                    s(:array,
                      s(:int, 0),
                      s(:int, 1))))),
              s(:send,
                s(:ivar, :@tree3), :style_create,
                s(:str, "s2")),
              s(:send,
                s(:ivar, :@tree3), :style_elements,
                s(:str, "s2"),
                s(:array,
                  s(:str, "e3"),
                  s(:str, "e1"),
                  s(:str, "e2"))),
              s(:send,
                s(:ivar, :@tree3), :style_layout,
                s(:str, "s2"),
                s(:str, "e1"),
                s(:hash,
                  s(:pair,
                    s(:sym, :padx),
                    s(:array,
                      s(:int, 0),
                      s(:int, 4))))),
              s(:send,
                s(:ivar, :@tree3), :style_layout,
                s(:str, "s2"),
                s(:str, "e3"),
                s(:hash,
                  s(:pair,
                    s(:sym, :union),
                    s(:array,
                      s(:str, "e1"),
                      s(:str, "e2"))),
                  s(:pair,
                    s(:sym, :ipadx),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :ipady),
                    s(:array,
                      s(:int, 0),
                      s(:int, 1)))))), nil),
          s(:send,
            s(:ivar, :@tree3), :item_delete,
            s(:sym, :all)),
          s(:lvasgn, :column,
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@tree2), :item_style_set,
                s(:lvar, :item)), :each),
            s(:args,
              s(:arg, :sty)),
            s(:begin,
              s(:lvasgn, :item2,
                s(:send,
                  s(:ivar, :@tree3), :item_create)),
              s(:if,
                s(:gvar, :$Version_1_1_OrLater),
                s(:send,
                  s(:ivar, :@tree3), :item_collapse,
                  s(:lvar, :item2)),
                s(:send,
                  s(:ivar, :@tree3), :collapse,
                  s(:lvar, :item2))),
              s(:send,
                s(:ivar, :@tree3), :item_style_set,
                s(:lvar, :item2),
                s(:int, 0),
                s(:str, "s1")),
              s(:send,
                s(:ivar, :@tree3), :item_element_configure,
                s(:lvar, :item2),
                s(:int, 0),
                s(:str, "e1"),
                s(:hash,
                  s(:pair,
                    s(:sym, :text),
                    s(:dstr,
                      s(:str, "Column "),
                      s(:begin,
                        s(:lvar, :column)),
                      s(:str, ": Style "),
                      s(:begin,
                        s(:lvar, :sty)))))),
              s(:lvasgn, :button,
                s(:false)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :sty), :to_s), :empty?), nil,
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:ivar, :@tree2), :item_style_elements,
                        s(:lvar, :item),
                        s(:lvar, :column)), :each),
                    s(:args,
                      s(:arg, :elem)),
                    s(:begin,
                      s(:lvasgn, :button,
                        s(:true)),
                      s(:if,
                        s(:gvar, :$Version_1_1_OrLater),
                        s(:lvasgn, :item3,
                          s(:send,
                            s(:ivar, :@tree3), :item_create,
                            s(:hash,
                              s(:pair,
                                s(:sym, :button),
                                s(:true))))),
                        s(:begin,
                          s(:lvasgn, :item3,
                            s(:send,
                              s(:ivar, :@tree3), :item_create)),
                          s(:send,
                            s(:ivar, :@tree3), :item_hasbutton,
                            s(:lvar, :item3),
                            s(:true)))),
                      s(:if,
                        s(:gvar, :$Version_1_1_OrLater),
                        s(:send,
                          s(:ivar, :@tree3), :item_collapse,
                          s(:lvar, :item3)),
                        s(:send,
                          s(:ivar, :@tree3), :collapse,
                          s(:lvar, :item3))),
                      s(:send,
                        s(:ivar, :@tree3), :item_style_set,
                        s(:lvar, :item3),
                        s(:int, 0),
                        s(:str, "s1")),
                      s(:send,
                        s(:ivar, :@tree3), :item_element_configure,
                        s(:lvar, :item3),
                        s(:int, 0),
                        s(:str, "e1"),
                        s(:hash,
                          s(:pair,
                            s(:sym, :text),
                            s(:dstr,
                              s(:str, "Element "),
                              s(:begin,
                                s(:lvar, :elem)),
                              s(:str, " ("),
                              s(:begin,
                                s(:send,
                                  s(:ivar, :@tree2), :element_type,
                                  s(:lvar, :elem))),
                              s(:str, ")"))))),
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:ivar, :@tree2), :item_element_configinfo,
                            s(:lvar, :item),
                            s(:lvar, :column),
                            s(:lvar, :elem)), :each),
                        s(:args,
                          s(:arg, :name),
                          s(:arg, :x),
                          s(:arg, :y),
                          s(:arg, :default),
                          s(:arg, :current)),
                        s(:begin,
                          s(:lvasgn, :item4,
                            s(:send,
                              s(:ivar, :@tree3), :item_create)),
                          s(:lvasgn, :masterDefault,
                            s(:send,
                              s(:ivar, :@tree2), :element_cget,
                              s(:lvar, :elem),
                              s(:lvar, :name))),
                          s(:lvasgn, :sameAsMaster,
                            s(:begin,
                              s(:send,
                                s(:lvar, :masterDefault), :==,
                                s(:lvar, :current)))),
                          s(:if,
                            s(:and,
                              s(:send,
                                s(:lvar, :sameAsMaster), :!),
                              s(:send,
                                s(:lvar, :current), :==,
                                s(:str, ""))),
                            s(:begin,
                              s(:lvasgn, :sameAsMaster,
                                s(:true)),
                              s(:lvasgn, :current,
                                s(:lvar, :masterDefault))), nil),
                          s(:if,
                            s(:lvar, :sameAsMaster),
                            s(:begin,
                              s(:send,
                                s(:ivar, :@tree3), :item_style_set,
                                s(:lvar, :item4),
                                s(:int, 0),
                                s(:str, "s1")),
                              s(:send,
                                s(:ivar, :@tree3), :item_complex,
                                s(:lvar, :item4),
                                s(:array,
                                  s(:array,
                                    s(:str, "e1"),
                                    s(:hash,
                                      s(:pair,
                                        s(:sym, :text),
                                        s(:dstr,
                                          s(:begin,
                                            s(:lvar, :name)),
                                          s(:str, " "),
                                          s(:begin,
                                            s(:send,
                                              s(:lvar, :current), :inspect))))))))),
                            s(:begin,
                              s(:send,
                                s(:ivar, :@tree3), :item_style_set,
                                s(:lvar, :item4),
                                s(:int, 0),
                                s(:str, "s2")),
                              s(:send,
                                s(:ivar, :@tree3), :item_complex,
                                s(:lvar, :item4),
                                s(:array,
                                  s(:array,
                                    s(:str, "e1"),
                                    s(:hash,
                                      s(:pair,
                                        s(:sym, :text),
                                        s(:lvar, :name)))),
                                  s(:array,
                                    s(:str, "e2"),
                                    s(:hash,
                                      s(:pair,
                                        s(:sym, :text),
                                        s(:send,
                                          s(:lvar, :current), :inspect)))))))),
                          s(:send,
                            s(:ivar, :@tree3), :item_lastchild,
                            s(:lvar, :item3),
                            s(:lvar, :item4)))),
                      s(:send,
                        s(:ivar, :@tree3), :item_lastchild,
                        s(:lvar, :item2),
                        s(:lvar, :item3)))),
                  s(:if,
                    s(:gvar, :$Version_1_1_OrLater),
                    s(:if,
                      s(:lvar, :button),
                      s(:send,
                        s(:ivar, :@tree3), :item_configure,
                        s(:lvar, :item2),
                        s(:hash,
                          s(:pair,
                            s(:sym, :button),
                            s(:true)))), nil),
                    s(:if,
                      s(:lvar, :button),
                      s(:send,
                        s(:ivar, :@tree3), :item_hasbutton,
                        s(:lvar, :item2),
                        s(:true)), nil)))),
              s(:send,
                s(:ivar, :@tree3), :item_lastchild,
                s(:sym, :root),
                s(:lvar, :item2)),
              s(:op_asgn,
                s(:lvasgn, :column), :+,
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@tree3), :xview_moveto,
            s(:int, 0)),
          s(:send,
            s(:ivar, :@tree3), :yview_moveto,
            s(:int, 0)))),
      s(:def, :demo_clear,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tree2), :item_delete,
            s(:sym, :all)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@tree2), :notify_bindinfo,
                s(:ivar, :@tree2)), :each),
            s(:args,
              s(:arg, :ev)),
            s(:send,
              s(:ivar, :@tree2), :notify_bind_remove,
              s(:ivar, :@tree2),
              s(:lvar, :ev))),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@tree2), :state_names), :each),
            s(:args,
              s(:arg, :st)),
            s(:send,
              s(:ivar, :@tree2), :state_undefine,
              s(:lvar, :st))),
          s(:send,
            s(:ivar, :@tree3), :item_delete,
            s(:sym, :all)),
          s(:while,
            s(:begin,
              s(:send,
                s(:send,
                  s(:ivar, :@tree2), :numcolumns), :>,
                s(:int, 0))),
            s(:send,
              s(:ivar, :@tree2), :column_delete,
              s(:int, 0))),
          s(:send,
            s(:ivar, :@tree2), :style_delete,
            s(:splat,
              s(:begin,
                s(:send,
                  s(:ivar, :@tree2), :style_names)))),
          s(:send,
            s(:ivar, :@tree2), :element_delete,
            s(:splat,
              s(:begin,
                s(:send,
                  s(:ivar, :@tree2), :element_names)))),
          s(:if,
            s(:gvar, :$Version_1_1_OrLater),
            s(:begin,
              s(:send,
                s(:ivar, :@tree2), :item_configure,
                s(:sym, :root),
                s(:hash,
                  s(:pair,
                    s(:sym, :button),
                    s(:false)))),
              s(:send,
                s(:ivar, :@tree2), :item_expand,
                s(:sym, :root))),
            s(:begin,
              s(:send,
                s(:ivar, :@tree2), :item_hasbutton,
                s(:sym, :root),
                s(:false)),
              s(:send,
                s(:ivar, :@tree2), :expand,
                s(:sym, :root)))),
          s(:if,
            s(:ivar, :@has_bgimg),
            s(:send,
              s(:ivar, :@tree2), :configure,
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :vertical)),
                s(:pair,
                  s(:sym, :wrap),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :xscrollincrement),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :yscrollincrement),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :itemheight),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :showheader),
                  s(:true)),
                s(:pair,
                  s(:sym, :background),
                  s(:str, "white")),
                s(:pair,
                  s(:sym, :scrollmargin),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :xscrolldelay),
                  s(:int, 50)),
                s(:pair,
                  s(:sym, :yscrolldelay),
                  s(:int, 50)),
                s(:pair,
                  s(:sym, :openbuttonimage),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :closedbuttonimage),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :backgroundmode),
                  s(:sym, :row)),
                s(:pair,
                  s(:sym, :treecolumn),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :indent),
                  s(:int, 19)),
                s(:pair,
                  s(:sym, :defaultstyle),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :backgroundimage),
                  s(:str, "")))),
            s(:send,
              s(:ivar, :@tree2), :configure,
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :vertical)),
                s(:pair,
                  s(:sym, :wrap),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :xscrollincrement),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :yscrollincrement),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :itemheight),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :showheader),
                  s(:true)),
                s(:pair,
                  s(:sym, :background),
                  s(:str, "white")),
                s(:pair,
                  s(:sym, :scrollmargin),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :xscrolldelay),
                  s(:int, 50)),
                s(:pair,
                  s(:sym, :yscrolldelay),
                  s(:int, 50)),
                s(:pair,
                  s(:sym, :openbuttonimage),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :closedbuttonimage),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :backgroundmode),
                  s(:sym, :row)),
                s(:pair,
                  s(:sym, :treecolumn),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :indent),
                  s(:int, 19))))),
          s(:send,
            s(:ivar, :@tree2), :bindtags=,
            s(:array,
              s(:ivar, :@tree2),
              s(:const,
                s(:const, nil, :Tk), :TreeCtrl),
              s(:send,
                s(:ivar, :@tree2), :winfo_toplevel),
              s(:sym, :all))),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@tree2), :winfo_children), :each),
            s(:args,
              s(:arg, :w)),
            s(:if,
              s(:send,
                s(:ivar, :@non_clear_list), :include?,
                s(:lvar, :w)), nil,
              s(:send,
                s(:lvar, :w), :destroy))))))),
  s(:send,
    s(:const, nil, :TkTreeCtrl_demo), :new,
    s(:gvar, :$ScriptDir)),
  s(:def, :cursor_window,
    s(:args,
      s(:optarg, :top,
        s(:nil))),
    s(:begin,
      s(:if,
        s(:and,
          s(:send,
            s(:lvar, :top), :kind_of?,
            s(:const, nil, :TkWindow)),
          s(:send,
            s(:lvar, :top), :winfo_exist?)),
        s(:send,
          s(:lvar, :top), :destroy), nil),
      s(:lvasgn, :top,
        s(:send,
          s(:const, nil, :TkToplevel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :title),
              s(:str, "Cursor Window"))))),
      s(:lvasgn, :c,
        s(:send,
          s(:send,
            s(:const, nil, :TkCanvas), :new,
            s(:lvar, :top),
            s(:hash,
              s(:pair,
                s(:sym, :background),
                s(:str, "white")),
              s(:pair,
                s(:sym, :width),
                s(:send,
                  s(:int, 50), :*,
                  s(:int, 10))),
              s(:pair,
                s(:sym, :highlightthickness),
                s(:int, 0)),
              s(:pair,
                s(:sym, :borderwidth),
                s(:int, 0)))), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :expand),
              s(:true)),
            s(:pair,
              s(:sym, :fill),
              s(:sym, :both))))),
      s(:lvasgn, :cursors,
        s(:array,
          s(:str, "X_cursor"),
          s(:str, "arrow"),
          s(:str, "based_arrow_down"),
          s(:str, "based_arrow_up"),
          s(:str, "boat"),
          s(:str, "bogosity"),
          s(:str, "bottom_left_corner"),
          s(:str, "bottom_right_corner"),
          s(:str, "bottom_side"),
          s(:str, "bottom_tee"),
          s(:str, "box_spiral"),
          s(:str, "center_ptr"),
          s(:str, "circle"),
          s(:str, "clock"),
          s(:str, "coffee_mug"),
          s(:str, "cross"),
          s(:str, "cross_reverse"),
          s(:str, "crosshair"),
          s(:str, "diamond_cross"),
          s(:str, "dot"),
          s(:str, "dotbox"),
          s(:str, "double_arrow"),
          s(:str, "draft_large"),
          s(:str, "draft_small"),
          s(:str, "draped_box"),
          s(:str, "exchange"),
          s(:str, "fleur"),
          s(:str, "gobbler"),
          s(:str, "gumby"),
          s(:str, "hand1"),
          s(:str, "hand2"),
          s(:str, "heart"),
          s(:str, "icon"),
          s(:str, "iron_cross"),
          s(:str, "left_ptr"),
          s(:str, "left_side"),
          s(:str, "left_tee"),
          s(:str, "leftbutton"),
          s(:str, "ll_angle"),
          s(:str, "lr_angle"),
          s(:str, "man"),
          s(:str, "middlebutton"),
          s(:str, "mouse"),
          s(:str, "pencil"),
          s(:str, "pirate"),
          s(:str, "plus"),
          s(:str, "question_arrow"),
          s(:str, "right_ptr"),
          s(:str, "right_side"),
          s(:str, "right_tee"),
          s(:str, "rightbutton"),
          s(:str, "rtl_logo"),
          s(:str, "sailboat"),
          s(:str, "sb_down_arrow"),
          s(:str, "sb_h_double_arrow"),
          s(:str, "sb_left_arrow"),
          s(:str, "sb_right_arrow"),
          s(:str, "sb_up_arrow"),
          s(:str, "sb_v_double_arrow"),
          s(:str, "shuttle"),
          s(:str, "sizing"),
          s(:str, "spider"),
          s(:str, "spraycan"),
          s(:str, "star"),
          s(:str, "target"),
          s(:str, "tcross"),
          s(:str, "top_left_arrow"),
          s(:str, "top_left_corner"),
          s(:str, "top_right_corner"),
          s(:str, "top_side"),
          s(:str, "top_tee"),
          s(:str, "trek"),
          s(:str, "ul_angle"),
          s(:str, "umbrella"),
          s(:str, "ur_angle"),
          s(:str, "watch"),
          s(:str, "xterm"))),
      s(:lvasgn, :orig_cursor,
        s(:send,
          s(:lvar, :c), :cursor)),
      s(:lvasgn, :col,
        s(:int, 0)),
      s(:lvasgn, :row,
        s(:int, 0)),
      s(:block,
        s(:send,
          s(:lvar, :cursors), :each),
        s(:args,
          s(:arg, :cur)),
        s(:begin,
          s(:lvasgn, :x,
            s(:send,
              s(:lvar, :col), :*,
              s(:int, 50))),
          s(:lvasgn, :y,
            s(:send,
              s(:lvar, :row), :*,
              s(:int, 40))),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :cursor=,
                  s(:lvar, :cur)),
                s(:lvasgn, :r,
                  s(:send,
                    s(:const, nil, :TkcRectangle), :new,
                    s(:lvar, :c),
                    s(:lvar, :x),
                    s(:lvar, :y),
                    s(:send,
                      s(:lvar, :x), :+,
                      s(:int, 50)),
                    s(:send,
                      s(:lvar, :y), :+,
                      s(:int, 40)),
                    s(:hash,
                      s(:pair,
                        s(:sym, :fill),
                        s(:str, "gray90")),
                      s(:pair,
                        s(:sym, :outline),
                        s(:str, "black")),
                      s(:pair,
                        s(:sym, :width),
                        s(:int, 2))))),
                s(:lvasgn, :t,
                  s(:send,
                    s(:const, nil, :TkcText), :new,
                    s(:lvar, :c),
                    s(:send,
                      s(:lvar, :x), :+,
                      s(:send,
                        s(:int, 50), :/,
                        s(:int, 2))),
                    s(:send,
                      s(:lvar, :y), :+,
                      s(:int, 4)),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:lvar, :cur)),
                      s(:pair,
                        s(:sym, :anchor),
                        s(:sym, :n)),
                      s(:pair,
                        s(:sym, :width),
                        s(:int, 42))))),
                s(:op_asgn,
                  s(:lvasgn, :col), :+,
                  s(:int, 1)),
                s(:if,
                  s(:send,
                    s(:lvar, :col), :>=,
                    s(:int, 10)),
                  s(:begin,
                    s(:lvasgn, :col,
                      s(:int, 0)),
                    s(:op_asgn,
                      s(:lvasgn, :row), :+,
                      s(:int, 1))), nil),
                s(:send,
                  s(:lvar, :r), :bind,
                  s(:str, "Enter"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:begin,
                      s(:send,
                        s(:lvar, :c), :cursor=,
                        s(:lvar, :cur)),
                      s(:send,
                        s(:lvar, :r), :fill=,
                        s(:str, "linen"))))),
                s(:send,
                  s(:lvar, :r), :bind,
                  s(:str, "Leave"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:begin,
                      s(:send,
                        s(:lvar, :c), :cursor=,
                        s(:str, "")),
                      s(:send,
                        s(:lvar, :r), :fill=,
                        s(:str, "gray90"))))),
                s(:send,
                  s(:lvar, :t), :bind,
                  s(:str, "Enter"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :c), :cursor=,
                      s(:lvar, :cur)))),
                s(:send,
                  s(:lvar, :t), :bind,
                  s(:str, "Leave"),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :c), :cursor=,
                      s(:str, ""))))),
              s(:resbody, nil, nil,
                s(:send,
                  s(:lvar, :c), :cursor=,
                  s(:lvar, :orig_cursor))), nil)))),
      s(:send,
        s(:lvar, :c), :cursor=,
        s(:lvar, :orig_cursor)),
      s(:send,
        s(:lvar, :c), :height=,
        s(:send,
          s(:begin,
            s(:send,
              s(:lvar, :row), :+,
              s(:int, 1))), :*,
          s(:int, 40))))),
  s(:send, nil, :cursor_window),
  s(:if,
    s(:and,
      s(:send,
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :PLATFORM), :[],
          s(:str, "platform")), :==,
        s(:str, "unix")),
      s(:send,
        s(:send,
          s(:const, nil, :Tk), :windowingsystem), :!=,
        s(:str, "aqua"))),
    s(:begin,
      s(:def, :show_loupe,
        s(:args,
          s(:optarg, :setting,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :loupe,
            s(:if,
              s(:begin,
                s(:send,
                  s(:lvar, :setting), :kind_of?,
                  s(:const, nil, :Hash))),
              s(:lvar, :setting),
              s(:hash))),
          s(:if,
            s(:send,
              s(:lvar, :loupe), :[],
              s(:sym, :zoom)), nil,
            s(:send,
              s(:lvar, :loupe), :[]=,
              s(:sym, :zoom),
              s(:int, 3))),
          s(:if,
            s(:send,
              s(:lvar, :loupe), :[],
              s(:sym, :x)), nil,
            s(:send,
              s(:lvar, :loupe), :[]=,
              s(:sym, :x),
              s(:int, 0))),
          s(:if,
            s(:send,
              s(:lvar, :loupe), :[],
              s(:sym, :y)), nil,
            s(:send,
              s(:lvar, :loupe), :[]=,
              s(:sym, :y),
              s(:int, 0))),
          s(:if,
            s(:send,
              s(:lvar, :loupe), :[],
              s(:sym, :auto)), nil,
            s(:send,
              s(:lvar, :loupe), :[]=,
              s(:sym, :auto),
              s(:true))),
          s(:if,
            s(:send,
              s(:lvar, :loupe), :[],
              s(:sym, :delay)), nil,
            s(:send,
              s(:lvar, :loupe), :[]=,
              s(:sym, :delay),
              s(:int, 500))),
          s(:if,
            s(:send,
              s(:lvar, :loupe), :[],
              s(:sym, :image)), nil,
            s(:send,
              s(:lvar, :loupe), :[]=,
              s(:sym, :image),
              s(:send,
                s(:const, nil, :TkPhotoImage), :new,
                s(:hash,
                  s(:pair,
                    s(:sym, :width),
                    s(:int, 150)),
                  s(:pair,
                    s(:sym, :height),
                    s(:int, 150)))))),
          s(:lvasgn, :top,
            s(:send,
              s(:const, nil, :TkToplevel), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :geometry),
                  s(:str, "-0+30")),
                s(:pair,
                  s(:sym, :title),
                  s(:str, "A little screen magnifier for X11"))))),
          s(:send,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:lvar, :top),
              s(:hash,
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:lvar, :loupe), :[],
                    s(:sym, :image))))), :pack),
          s(:send,
            s(:send,
              s(:const, nil, :TkTimer), :new,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :loupe), :[],
                  s(:sym, :delay))),
              s(:int, -1),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :x),
                      s(:lvasgn, :y)),
                    s(:send,
                      s(:const, nil, :TkWinfo), :pointerxy,
                      s(:send,
                        s(:const, nil, :Tk), :root))),
                  s(:if,
                    s(:or,
                      s(:or,
                        s(:send,
                          s(:lvar, :loupe), :[],
                          s(:sym, :auto)),
                        s(:send,
                          s(:send,
                            s(:lvar, :loupe), :[],
                            s(:sym, :x)), :!=,
                          s(:lvar, :x))),
                      s(:send,
                        s(:send,
                          s(:lvar, :loupe), :[],
                          s(:sym, :y)), :!=,
                        s(:lvar, :y))),
                    s(:begin,
                      s(:lvasgn, :w,
                        s(:send,
                          s(:send,
                            s(:lvar, :loupe), :[],
                            s(:sym, :image)), :width)),
                      s(:lvasgn, :h,
                        s(:send,
                          s(:send,
                            s(:lvar, :loupe), :[],
                            s(:sym, :image)), :height)),
                      s(:send,
                        s(:const,
                          s(:const, nil, :Tk), :TreeCtrl), :loupe,
                        s(:send,
                          s(:lvar, :loupe), :[],
                          s(:sym, :image)),
                        s(:lvar, :x),
                        s(:lvar, :y),
                        s(:lvar, :w),
                        s(:lvar, :h),
                        s(:send,
                          s(:lvar, :loupe), :[],
                          s(:sym, :zoom))),
                      s(:send,
                        s(:lvar, :loupe), :[]=,
                        s(:sym, :x),
                        s(:lvar, :x)),
                      s(:send,
                        s(:lvar, :loupe), :[]=,
                        s(:sym, :y),
                        s(:lvar, :y))), nil)))), :start))),
      s(:send, nil, :show_loupe)), nil),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
