s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tktable")),
  s(:lvasgn, :data,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash)),
  s(:lvasgn, :rows,
    s(:int, 10)),
  s(:lvasgn, :cols,
    s(:int, 10)),
  s(:block,
    s(:send,
      s(:begin,
        s(:irange,
          s(:begin,
            s(:send,
              s(:begin,
                s(:lvar, :rows)), :-@)),
          s(:lvar, :rows))), :each),
    s(:args,
      s(:arg, :x)),
    s(:block,
      s(:send,
        s(:begin,
          s(:irange,
            s(:begin,
              s(:send,
                s(:begin,
                  s(:lvar, :cols)), :-@)),
            s(:lvar, :cols))), :each),
      s(:args,
        s(:arg, :y)),
      s(:send,
        s(:lvar, :data), :[]=,
        s(:lvar, :x),
        s(:lvar, :y),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, " x "),
          s(:begin,
            s(:lvar, :y)))))),
  s(:lvasgn, :lbl,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "TkTable :command Example"))))),
  s(:lvasgn, :cur_var,
    s(:send,
      s(:const, nil, :TkVariable), :new)),
  s(:lvasgn, :current,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:hash,
        s(:pair,
          s(:sym, :textvariable),
          s(:lvar, :cur_var)),
        s(:pair,
          s(:sym, :width),
          s(:int, 5))))),
  s(:lvasgn, :ent_var,
    s(:send,
      s(:const, nil, :TkVariable), :new)),
  s(:lvasgn, :entry,
    s(:send,
      s(:const, nil, :TkEntry), :new,
      s(:hash,
        s(:pair,
          s(:sym, :textvariable),
          s(:lvar, :ent_var))))),
  s(:lvasgn, :table,
    s(:send,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :new,
      s(:hash,
        s(:pair,
          s(:sym, :rows),
          s(:lvar, :rows)),
        s(:pair,
          s(:sym, :cols),
          s(:lvar, :cols)),
        s(:pair,
          s(:sym, :command),
          s(:array,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :mode),
                s(:arg, :cell),
                s(:arg, :val)),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :mode), :==,
                    s(:sym, :w))),
                s(:send,
                  s(:lvar, :data), :[]=,
                  s(:lvar, :cell),
                  s(:lvar, :val)),
                s(:kwbegin,
                  s(:rescue,
                    s(:send,
                      s(:lvar, :data), :[],
                      s(:lvar, :cell)),
                    s(:resbody, nil, nil,
                      s(:str, "")), nil)))),
            s(:str, "%i %C %s"))),
        s(:pair,
          s(:sym, :width),
          s(:int, 6)),
        s(:pair,
          s(:sym, :height),
          s(:int, 6)),
        s(:pair,
          s(:sym, :titlerows),
          s(:int, 1)),
        s(:pair,
          s(:sym, :titlecols),
          s(:int, 1)),
        s(:pair,
          s(:sym, :roworigin),
          s(:int, -1)),
        s(:pair,
          s(:sym, :colorigin),
          s(:int, -1)),
        s(:pair,
          s(:sym, :rowstretchmode),
          s(:sym, :last)),
        s(:pair,
          s(:sym, :colstretchmode),
          s(:sym, :last)),
        s(:pair,
          s(:sym, :rowtagcommand),
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :row)),
            s(:begin,
              s(:lvasgn, :row,
                s(:send, nil, :Integer,
                  s(:lvar, :row))),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :row), :>,
                      s(:int, 0)),
                    s(:send,
                      s(:send,
                        s(:lvar, :row), :%,
                        s(:int, 2)), :==,
                      s(:int, 1)))),
                s(:str, "OddRow"),
                s(:str, ""))))),
        s(:pair,
          s(:sym, :coltagcommand),
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :col)),
            s(:begin,
              s(:lvasgn, :col,
                s(:send, nil, :Integer,
                  s(:lvar, :col))),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :col), :>,
                      s(:int, 0)),
                    s(:send,
                      s(:send,
                        s(:lvar, :col), :%,
                        s(:int, 2)), :==,
                      s(:int, 1)))),
                s(:str, "OddCol"),
                s(:str, ""))))),
        s(:pair,
          s(:sym, :selectmode),
          s(:sym, :extended)),
        s(:pair,
          s(:sym, :flashmode),
          s(:true)),
        s(:pair,
          s(:sym, :rowstretch),
          s(:sym, :unset)),
        s(:pair,
          s(:sym, :colstretch),
          s(:sym, :unset)),
        s(:pair,
          s(:sym, :browsecommand),
          s(:array,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :s)),
              s(:begin,
                s(:send,
                  s(:lvar, :cur_var), :value=,
                  s(:lvar, :s)),
                s(:send,
                  s(:lvar, :ent_var), :value=,
                  s(:send,
                    s(:lvar, :w), :get,
                    s(:lvar, :s))))),
            s(:str, "%W %S"))),
        s(:pair,
          s(:sym, :validate),
          s(:true)),
        s(:pair,
          s(:sym, :validatecommand),
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :e)),
            s(:begin,
              s(:send,
                s(:lvar, :ent_var), :value=,
                s(:send,
                  s(:lvar, :e), :new_value)),
              s(:true))))))),
  s(:lvasgn, :sx,
    s(:send,
      s(:lvar, :table), :xscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:lvasgn, :sy,
    s(:send,
      s(:lvar, :table), :yscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:send,
    s(:lvar, :entry), :bind,
    s(:str, "Return"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :table), :curvalue=,
        s(:send,
          s(:lvar, :w), :value))),
    s(:str, "%W")),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :lbl),
    s(:str, "-"),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :current),
    s(:lvar, :entry),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :table),
    s(:str, "-"),
    s(:lvar, :sy),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :sx),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_columnconfig,
    s(:int, 1),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_rowconfig,
    s(:int, 2),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "OddRow"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "orange")),
      s(:pair,
        s(:sym, :fg),
        s(:str, "purple")))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "OddCol"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "brown")),
      s(:pair,
        s(:sym, :fg),
        s(:str, "pink")))),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Table is "),
      s(:begin,
        s(:send,
          s(:lvar, :table), :path)))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
