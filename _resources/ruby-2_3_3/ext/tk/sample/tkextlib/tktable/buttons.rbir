s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tktable")),
  s(:lvasgn, :tab,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash)),
  s(:lvasgn, :rows,
    s(:int, 20)),
  s(:lvasgn, :cols,
    s(:int, 20)),
  s(:lvasgn, :table,
    s(:send,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :new,
      s(:hash,
        s(:pair,
          s(:sym, :rows),
          s(:send,
            s(:lvar, :rows), :+,
            s(:int, 1))),
        s(:pair,
          s(:sym, :cols),
          s(:send,
            s(:lvar, :cols), :+,
            s(:int, 1))),
        s(:pair,
          s(:sym, :variable),
          s(:lvar, :tab)),
        s(:pair,
          s(:sym, :titlerows),
          s(:int, 1)),
        s(:pair,
          s(:sym, :titlecols),
          s(:int, 1)),
        s(:pair,
          s(:sym, :roworigin),
          s(:int, -1)),
        s(:pair,
          s(:sym, :colorigin),
          s(:int, -1)),
        s(:pair,
          s(:sym, :colwidth),
          s(:int, 4)),
        s(:pair,
          s(:sym, :width),
          s(:int, 8)),
        s(:pair,
          s(:sym, :height),
          s(:int, 8)),
        s(:pair,
          s(:sym, :cursor),
          s(:str, "top_left_arrow")),
        s(:pair,
          s(:sym, :borderwidth),
          s(:int, 2)),
        s(:pair,
          s(:sym, :flashmode),
          s(:false)),
        s(:pair,
          s(:sym, :state),
          s(:sym, :disabled))))),
  s(:lvasgn, :sx,
    s(:send,
      s(:lvar, :table), :xscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:lvasgn, :sy,
    s(:send,
      s(:lvar, :table), :yscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :table),
    s(:lvar, :sy),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :sx),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_columnconfig,
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_rowconfig,
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "OFF"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "red")),
      s(:pair,
        s(:sym, :relief),
        s(:sym, :raised)))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "ON"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "green")),
      s(:pair,
        s(:sym, :relief),
        s(:sym, :sunken)))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "sel"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "gray75")),
      s(:pair,
        s(:sym, :relief),
        s(:sym, :flat)))),
  s(:send,
    s(:lvar, :table), :bind,
    s(:str, "Leave"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :w), :selection_clear_all)),
    s(:str, "%W")),
  s(:send,
    s(:lvar, :table), :bind,
    s(:str, "Motion"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w),
        s(:arg, :x),
        s(:arg, :y)),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :w), :selection_include?,
            s(:send,
              s(:const, nil, :TkComm), :_at,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:send,
            s(:const, nil, :Tk), :callback_break), nil),
        s(:send,
          s(:lvar, :w), :selection_clear_all),
        s(:send,
          s(:lvar, :w), :selection_set,
          s(:send,
            s(:const, nil, :TkComm), :_at,
            s(:lvar, :x),
            s(:lvar, :y))),
        s(:send,
          s(:const, nil, :Tk), :callback_break))),
    s(:str, "%W %x %y")),
  s(:send,
    s(:lvar, :table), :bind,
    s(:str, "1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :w),
        s(:arg, :x),
        s(:arg, :y)),
      s(:begin,
        s(:lvasgn, :rc,
          s(:send,
            s(:lvar, :w), :index,
            s(:send,
              s(:const, nil, :TkComm), :_at,
              s(:lvar, :x),
              s(:lvar, :y)))),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :tab), :[],
              s(:lvar, :rc)), :==,
            s(:str, "ON")),
          s(:begin,
            s(:send,
              s(:lvar, :tab), :[]=,
              s(:lvar, :rc),
              s(:str, "OFF")),
            s(:send,
              s(:lvar, :w), :tag_cell,
              s(:str, "OFF"),
              s(:lvar, :rc))),
          s(:begin,
            s(:send,
              s(:lvar, :tab), :[]=,
              s(:lvar, :rc),
              s(:str, "ON")),
            s(:send,
              s(:lvar, :w), :tag_cell,
              s(:str, "ON"),
              s(:lvar, :rc)))))),
    s(:str, "%W %x %y")),
  s(:block,
    s(:send,
      s(:int, 0), :step,
      s(:lvar, :rows)),
    s(:args,
      s(:arg, :i)),
    s(:begin,
      s(:send,
        s(:lvar, :tab), :[]=,
        s(:lvar, :i),
        s(:int, -1),
        s(:lvar, :i)),
      s(:block,
        s(:send,
          s(:int, 0), :step,
          s(:lvar, :cols)),
        s(:args,
          s(:arg, :j)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :i), :==,
              s(:int, 0)),
            s(:send,
              s(:lvar, :tab), :[]=,
              s(:int, -1),
              s(:lvar, :j),
              s(:lvar, :j)), nil),
          s(:send,
            s(:lvar, :tab), :[]=,
            s(:lvar, :i),
            s(:lvar, :j),
            s(:str, "OFF")),
          s(:send,
            s(:lvar, :table), :tag_cell,
            s(:str, "OFF"),
            s(:dstr,
              s(:begin,
                s(:lvar, :i)),
              s(:str, ","),
              s(:begin,
                s(:lvar, :j)))))))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
