s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tktable")),
  s(:lvasgn, :rows,
    s(:int, 10)),
  s(:lvasgn, :cols,
    s(:int, 10)),
  s(:def, :colorize,
    s(:args,
      s(:arg, :num)),
    s(:begin,
      s(:lvasgn, :num,
        s(:send, nil, :Integer,
          s(:lvar, :num))),
      s(:if,
        s(:begin,
          s(:and,
            s(:send,
              s(:lvar, :num), :>,
              s(:int, 0)),
            s(:send,
              s(:send,
                s(:lvar, :num), :%,
                s(:int, 2)), :==,
              s(:int, 1)))),
        s(:return,
          s(:str, "colored")), nil))),
  s(:def, :fill_headers,
    s(:args,
      s(:arg, :w),
      s(:optarg, :r,
        s(:int, 10)),
      s(:optarg, :c,
        s(:int, 10))),
    s(:begin,
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 1),
              s(:begin,
                s(:send,
                  s(:lvar, :r), :-,
                  s(:int, 1))))), :each),
        s(:args,
          s(:arg, :i)),
        s(:send,
          s(:lvar, :w), :set,
          s(:array,
            s(:lvar, :i),
            s(:int, 0)),
          s(:send,
            s(:lvar, :i), :to_s))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 1),
              s(:begin,
                s(:send,
                  s(:lvar, :c), :-,
                  s(:int, 1))))), :each),
        s(:args,
          s(:arg, :j)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :j), :%,
              s(:int, 3)), :==,
            s(:int, 1)),
          s(:send,
            s(:lvar, :w), :set,
            s(:array,
              s(:int, 0),
              s(:lvar, :j)),
            s(:str, "AlphaNum")),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :j), :%,
                s(:int, 2)), :==,
              s(:int, 1)),
            s(:send,
              s(:lvar, :w), :set,
              s(:array,
                s(:int, 0),
                s(:lvar, :j)),
              s(:str, "Alpha")),
            s(:if,
              s(:send,
                s(:lvar, :j), :!=,
                s(:int, 0)),
              s(:send,
                s(:lvar, :w), :set,
                s(:array,
                  s(:int, 0),
                  s(:lvar, :j)),
                s(:str, "Real")), nil)))))),
  s(:def, :validate_proc,
    s(:args,
      s(:arg, :c),
      s(:arg, :val)),
    s(:begin,
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :c), :%,
            s(:int, 3)), :==,
          s(:int, 1)),
        s(:lvasgn, :regexp,
          s(:regexp,
            s(:str, "^[A-Za-z0-9 ]*$"),
            s(:regopt))),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :c), :%,
              s(:int, 2)), :==,
            s(:int, 1)),
          s(:lvasgn, :regexp,
            s(:regexp,
              s(:str, "^[A-Za-z ]*$"),
              s(:regopt))),
          s(:if,
            s(:send,
              s(:lvar, :c), :!=,
              s(:int, 0)),
            s(:lvasgn, :regexp,
              s(:regexp,
                s(:str, "^[-+]?[0-9]*\\.?[0-9]*([0-9]\\.?e[-+]?[0-9]*)?$"),
                s(:regopt))), nil))),
      s(:if,
        s(:send,
          s(:lvar, :val), :=~,
          s(:lvar, :regexp)),
        s(:return,
          s(:true)),
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :bell),
          s(:return,
            s(:false)))))),
  s(:lvasgn, :lbl,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "TkTable v1 Validated Table Example"))))),
  s(:lvasgn, :table,
    s(:send,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :new,
      s(:hash,
        s(:pair,
          s(:sym, :rows),
          s(:lvar, :rows)),
        s(:pair,
          s(:sym, :cols),
          s(:lvar, :cols)),
        s(:pair,
          s(:sym, :cache),
          s(:int, 1)),
        s(:pair,
          s(:sym, :width),
          s(:int, 5)),
        s(:pair,
          s(:sym, :height),
          s(:int, 5)),
        s(:pair,
          s(:sym, :titlerows),
          s(:int, 1)),
        s(:pair,
          s(:sym, :titlecols),
          s(:int, 1)),
        s(:pair,
          s(:sym, :coltagcommand),
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :n)),
            s(:send, nil, :colorize,
              s(:lvar, :n)))),
        s(:pair,
          s(:sym, :flashmode),
          s(:true)),
        s(:pair,
          s(:sym, :selectmode),
          s(:sym, :extended)),
        s(:pair,
          s(:sym, :colstretch),
          s(:sym, :unset)),
        s(:pair,
          s(:sym, :rowstretch),
          s(:sym, :unset)),
        s(:pair,
          s(:sym, :validate),
          s(:true)),
        s(:pair,
          s(:sym, :validatecommand),
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :e)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :e), :widget), :tag_include?,
                s(:str, "title"),
                s(:send,
                  s(:lvar, :e), :index)), nil,
              s(:send, nil, :validate_proc,
                s(:send,
                  s(:lvar, :e), :column),
                s(:send,
                  s(:lvar, :e), :new_value)))))))),
  s(:send, nil, :fill_headers,
    s(:lvar, :table)),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "colored"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "lightblue")))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "title"),
    s(:hash,
      s(:pair,
        s(:sym, :fg),
        s(:str, "red")))),
  s(:send,
    s(:lvar, :table), :set_width,
    s(:int, 0),
    s(:int, 3)),
  s(:lvasgn, :sx,
    s(:send,
      s(:lvar, :table), :xscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:lvasgn, :sy,
    s(:send,
      s(:lvar, :table), :yscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:lvasgn, :btn,
    s(:send,
      s(:const, nil, :TkButton), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Exit")),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :exit)))))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :lbl),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :table),
    s(:lvar, :sy),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :sx),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :btn),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_columnconfig,
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_rowconfig,
    s(:int, 1),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Table is "),
      s(:begin,
        s(:send,
          s(:lvar, :table), :path)))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
