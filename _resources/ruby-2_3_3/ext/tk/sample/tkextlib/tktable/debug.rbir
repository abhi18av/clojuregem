s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/tktable")),
  s(:lvasgn, :ary,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash)),
  s(:lvasgn, :rows,
    s(:int, 25)),
  s(:lvasgn, :cols,
    s(:int, 20)),
  s(:block,
    s(:send,
      s(:begin,
        s(:irange,
          s(:begin,
            s(:send,
              s(:begin,
                s(:lvar, :rows)), :-@)),
          s(:lvar, :rows))), :each),
    s(:args,
      s(:arg, :x)),
    s(:block,
      s(:send,
        s(:begin,
          s(:irange,
            s(:begin,
              s(:send,
                s(:begin,
                  s(:lvar, :cols)), :-@)),
            s(:lvar, :cols))), :each),
      s(:args,
        s(:arg, :y)),
      s(:send,
        s(:lvar, :ary), :[]=,
        s(:lvar, :x),
        s(:lvar, :y),
        s(:dstr,
          s(:str, "r"),
          s(:begin,
            s(:lvar, :x)),
          s(:str, ",c"),
          s(:begin,
            s(:lvar, :y)))))),
  s(:lvasgn, :lbl,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "TkTable v2 Example"))))),
  s(:lvasgn, :table,
    s(:send,
      s(:const,
        s(:const, nil, :Tk), :TkTable), :new,
      s(:hash,
        s(:pair,
          s(:sym, :rows),
          s(:lvar, :rows)),
        s(:pair,
          s(:sym, :cols),
          s(:lvar, :cols)),
        s(:pair,
          s(:sym, :variable),
          s(:lvar, :ary)),
        s(:pair,
          s(:sym, :width),
          s(:int, 6)),
        s(:pair,
          s(:sym, :height),
          s(:int, 6)),
        s(:pair,
          s(:sym, :titlerows),
          s(:int, 1)),
        s(:pair,
          s(:sym, :titlecols),
          s(:int, 2)),
        s(:pair,
          s(:sym, :roworigin),
          s(:int, -5)),
        s(:pair,
          s(:sym, :colorigin),
          s(:int, -2)),
        s(:pair,
          s(:sym, :coltagcommand),
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :col)),
            s(:begin,
              s(:lvasgn, :col,
                s(:send, nil, :Integer,
                  s(:lvar, :col))),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :col), :>,
                      s(:int, 0)),
                    s(:send,
                      s(:send,
                        s(:lvar, :col), :%,
                        s(:int, 2)), :==,
                      s(:int, 1)))),
                s(:str, "OddCol"),
                s(:str, ""))))),
        s(:pair,
          s(:sym, :selectmode),
          s(:sym, :extended)),
        s(:pair,
          s(:sym, :flashmode),
          s(:true)),
        s(:pair,
          s(:sym, :rowstretch),
          s(:sym, :unset)),
        s(:pair,
          s(:sym, :colstretch),
          s(:sym, :unset)),
        s(:pair,
          s(:sym, :selecttitles),
          s(:false)),
        s(:pair,
          s(:sym, :drawmode),
          s(:sym, :single))))),
  s(:lvasgn, :sx,
    s(:send,
      s(:lvar, :table), :xscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:lvasgn, :sy,
    s(:send,
      s(:lvar, :table), :yscrollbar,
      s(:send,
        s(:const, nil, :TkScrollbar), :new))),
  s(:lvasgn, :btn,
    s(:send,
      s(:const, nil, :TkButton), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Exit")),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :exit)))))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :lbl),
    s(:str, "-"),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :table),
    s(:lvar, :sy),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :sx),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :btn),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :columnspan),
        s(:int, 2)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_columnconfig,
    s(:int, 0),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :grid_rowconfig,
    s(:int, 1),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "OddCol"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "brown")),
      s(:pair,
        s(:sym, :fg),
        s(:str, "pink")))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "title"),
    s(:hash,
      s(:pair,
        s(:sym, :bg),
        s(:str, "red")),
      s(:pair,
        s(:sym, :fg),
        s(:str, "green")),
      s(:pair,
        s(:sym, :relief),
        s(:sym, :sunken)))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "dis"),
    s(:hash,
      s(:pair,
        s(:sym, :state),
        s(:sym, :disabled)))),
  s(:lvasgn, :first,
    s(:send,
      s(:lvar, :table), :[],
      s(:sym, :colorigin))),
  s(:block,
    s(:send,
      s(:array,
        s(:str, "n"),
        s(:str, "s"),
        s(:str, "e"),
        s(:str, "w"),
        s(:str, "nw"),
        s(:str, "ne"),
        s(:str, "sw"),
        s(:str, "se"),
        s(:str, "c")), :each_with_index),
    s(:args,
      s(:arg, :anchor),
      s(:arg, :idx)),
    s(:begin,
      s(:send,
        s(:lvar, :table), :tag_configure,
        s(:lvar, :anchor),
        s(:hash,
          s(:pair,
            s(:sym, :anchor),
            s(:lvar, :anchor)))),
      s(:send,
        s(:lvar, :table), :tag_row,
        s(:lvar, :anchor),
        s(:lvar, :idx)),
      s(:send,
        s(:lvar, :table), :set,
        s(:array,
          s(:lvar, :idx),
          s(:lvar, :first)),
        s(:lvar, :anchor)))),
  s(:lvasgn, :courier,
    s(:send,
      s(:const, nil, :TkFont), :new,
      s(:hash,
        s(:pair,
          s(:sym, :family),
          s(:str, "Courier")),
        s(:pair,
          s(:sym, :size),
          s(:int, 10))))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "s"),
    s(:hash,
      s(:pair,
        s(:sym, :font),
        s(:lvar, :courier)),
      s(:pair,
        s(:sym, :justify),
        s(:sym, :center)))),
  s(:lvasgn, :logo,
    s(:send,
      s(:const, nil, :TkPhotoImage), :new,
      s(:hash,
        s(:pair,
          s(:sym, :file),
          s(:send,
            s(:const, nil, :File), :join,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "(string)"))),
            s(:str, "tcllogo.gif")))))),
  s(:send,
    s(:lvar, :table), :tag_configure,
    s(:str, "logo"),
    s(:hash,
      s(:pair,
        s(:sym, :image),
        s(:lvar, :logo)),
      s(:pair,
        s(:sym, :showtext),
        s(:true)))),
  s(:send,
    s(:lvar, :table), :tag_cell,
    s(:str, "logo"),
    s(:array,
      s(:int, 1),
      s(:int, 2)),
    s(:array,
      s(:int, 2),
      s(:int, 3)),
    s(:array,
      s(:int, 4),
      s(:int, 1))),
  s(:send,
    s(:lvar, :table), :tag_cell,
    s(:str, "dis"),
    s(:array,
      s(:int, 2),
      s(:int, 1)),
    s(:array,
      s(:int, 1),
      s(:int, -1)),
    s(:array,
      s(:int, 3),
      s(:int, 0))),
  s(:send,
    s(:lvar, :table), :set_width,
    s(:array,
      s(:int, -2),
      s(:int, 8)),
    s(:array,
      s(:int, -1),
      s(:int, 9)),
    s(:array,
      s(:int, 0),
      s(:int, 12)),
    s(:array,
      s(:int, 4),
      s(:int, 14))),
  s(:send,
    s(:lvar, :table), :set,
    s(:array,
      s(:int, 1),
      s(:int, 1)),
    s(:str, "multi-line\ntext\nmight be\ninteresting"),
    s(:array,
      s(:int, 3),
      s(:int, 2)),
    s(:str, "more\nmulti-line\nplaying\n"),
    s(:array,
      s(:int, 2),
      s(:int, 2)),
    s(:str, "null\u0000byte")),
  s(:lvasgn, :l,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :table),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Window s")),
        s(:pair,
          s(:sym, :bg),
          s(:str, "yellow"))))),
  s(:send,
    s(:lvar, :table), :window_configure,
    s(:array,
      s(:int, 6),
      s(:int, 0)),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :s)),
      s(:pair,
        s(:sym, :window),
        s(:lvar, :l)))),
  s(:lvasgn, :l,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :table),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Window ne")),
        s(:pair,
          s(:sym, :bg),
          s(:str, "yellow"))))),
  s(:send,
    s(:lvar, :table), :window_configure,
    s(:array,
      s(:int, 4),
      s(:int, -1)),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ne)),
      s(:pair,
        s(:sym, :window),
        s(:lvar, :l)))),
  s(:lvasgn, :l,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :table),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Window ew")),
        s(:pair,
          s(:sym, :bg),
          s(:str, "yellow"))))),
  s(:send,
    s(:lvar, :table), :window_configure,
    s(:array,
      s(:int, 5),
      s(:int, 3)),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :ew)),
      s(:pair,
        s(:sym, :window),
        s(:lvar, :l)))),
  s(:lvasgn, :l,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :table),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Window news")),
        s(:pair,
          s(:sym, :bg),
          s(:str, "yellow"))))),
  s(:send,
    s(:lvar, :table), :window_configure,
    s(:array,
      s(:int, -5),
      s(:int, 1)),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)),
      s(:pair,
        s(:sym, :window),
        s(:lvar, :l)))),
  s(:lvasgn, :l,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:send,
        s(:lvar, :table), :winfo_parent),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Sibling l")),
        s(:pair,
          s(:sym, :bg),
          s(:str, "orange"))))),
  s(:send,
    s(:lvar, :table), :window_configure,
    s(:array,
      s(:int, 5),
      s(:int, 1)),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:sym, :news)),
      s(:pair,
        s(:sym, :window),
        s(:lvar, :l)))),
  s(:if,
    s(:send,
      s(:send,
        s(:lvar, :table), :span_list), :empty?),
    s(:send,
      s(:lvar, :table), :set_spans,
      s(:array,
        s(:int, -1),
        s(:int, -2)),
      s(:array,
        s(:int, 0),
        s(:int, 3)),
      s(:array,
        s(:int, 1),
        s(:int, 2)),
      s(:array,
        s(:int, 0),
        s(:int, 5)),
      s(:array,
        s(:int, 3),
        s(:int, 2)),
      s(:array,
        s(:int, 2),
        s(:int, 2)),
      s(:array,
        s(:int, 6),
        s(:int, 0)),
      s(:array,
        s(:int, 4),
        s(:int, 0))), nil),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Table is "),
      s(:begin,
        s(:send,
          s(:lvar, :table), :path)),
      s(:str, " with array "),
      s(:begin,
        s(:begin,
          s(:send,
            s(:lvar, :table), :[],
            s(:str, "variable")))))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
