s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/blt")),
  s(:lvasgn, :length,
    s(:int, 250000)),
  s(:lvasgn, :graph,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :Tk), :BLT), :Graph), :new,
      s(:hash,
        s(:pair,
          s(:sym, :title),
          s(:dstr,
            s(:str, "Scatter Plot\n"),
            s(:begin,
              s(:lvar, :length)),
            s(:str, " points")))))),
  s(:send,
    s(:lvar, :graph), :xaxis_configure,
    s(:hash,
      s(:pair,
        s(:sym, :loose),
        s(:false)),
      s(:pair,
        s(:sym, :title),
        s(:str, "X Axis Label")))),
  s(:send,
    s(:lvar, :graph), :yaxis_configure,
    s(:hash,
      s(:pair,
        s(:sym, :title),
        s(:str, "Y Axis Label")))),
  s(:send,
    s(:lvar, :graph), :legend_configure,
    s(:hash,
      s(:pair,
        s(:sym, :activerelief),
        s(:sym, :sunken)),
      s(:pair,
        s(:sym, :background),
        s(:str, "")))),
  s(:send,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Table), :add,
    s(:send,
      s(:const, nil, :Tk), :root),
    s(:lvar, :graph),
    s(:array,
      s(:int, 0),
      s(:int, 0)),
    s(:hash,
      s(:pair,
        s(:sym, :fill),
        s(:sym, :both)))),
  s(:lvasgn, :x,
    s(:send,
      s(:const, nil, :Array), :new,
      s(:lvar, :length))),
  s(:lvasgn, :y,
    s(:send,
      s(:const, nil, :Array), :new,
      s(:lvar, :length))),
  s(:block,
    s(:send,
      s(:begin,
        s(:erange,
          s(:int, 0),
          s(:lvar, :length))), :each),
    s(:args,
      s(:arg, :i)),
    s(:begin,
      s(:send,
        s(:lvar, :x), :[]=,
        s(:lvar, :i),
        s(:send, nil, :rand)),
      s(:send,
        s(:lvar, :y), :[]=,
        s(:lvar, :i),
        s(:send, nil, :rand)))),
  s(:lvasgn, :plot,
    s(:send,
      s(:const,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :BLT), :PlotComponent), :Element), :new,
      s(:lvar, :graph),
      s(:hash,
        s(:pair,
          s(:sym, :symbol),
          s(:sym, :square)),
        s(:pair,
          s(:sym, :color),
          s(:str, "green4")),
        s(:pair,
          s(:sym, :fill),
          s(:str, "green2")),
        s(:pair,
          s(:sym, :linewidth),
          s(:int, 0)),
        s(:pair,
          s(:sym, :outlinewidth),
          s(:int, 1)),
        s(:pair,
          s(:sym, :pixels),
          s(:int, 4)),
        s(:pair,
          s(:sym, :label),
          s(:str, "plot")),
        s(:pair,
          s(:sym, :xdata),
          s(:lvar, :x)),
        s(:pair,
          s(:sym, :ydata),
          s(:lvar, :y))))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :minsize,
    s(:int, 0),
    s(:int, 0)),
  s(:send,
    s(:const,
      s(:const, nil, :Tk), :BLT), :zoom_stack,
    s(:lvar, :graph)),
  s(:send,
    s(:const,
      s(:const, nil, :Tk), :BLT), :crosshairs,
    s(:lvar, :graph)),
  s(:send,
    s(:const,
      s(:const, nil, :Tk), :BLT), :active_legend,
    s(:lvar, :graph)),
  s(:send,
    s(:const,
      s(:const, nil, :Tk), :BLT), :closest_point,
    s(:lvar, :graph)),
  s(:send,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Busy), :hold,
    s(:lvar, :graph)),
  s(:send,
    s(:const, nil, :Tk), :update),
  s(:send,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :BLT), :Busy), :release,
    s(:lvar, :graph)),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
