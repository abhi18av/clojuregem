s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/ICONS")),
  s(:class,
    s(:const, nil, :ViewIcons), nil,
    s(:begin,
      s(:send, nil, :private),
      s(:def, :_create_controls,
        s(:args),
        s(:begin,
          s(:ivasgn, :@controls,
            s(:lvasgn, :base,
              s(:send,
                s(:const, nil, :TkFrame), :new))),
          s(:lvasgn, :columns,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :base))),
          s(:lvasgn, :line1,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :height),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken))))),
          s(:lvasgn, :line2,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :height),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken))))),
          s(:lvasgn, :lbl_library,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:ivar, :@boldfont)),
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Library"))))),
          s(:lvasgn, :lbl_groups,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:ivar, :@boldfont)),
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Groups"))))),
          s(:lvasgn, :lbl_columns,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:ivar, :@boldfont)),
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Columns"))))),
          s(:lvasgn, :ent_library,
            s(:send,
              s(:const, nil, :TkEntry), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 50)),
                s(:pair,
                  s(:sym, :textvariable),
                  s(:ivar, :@library))))),
          s(:lvasgn, :ent_groups,
            s(:send,
              s(:const, nil, :TkEntry), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 50)),
                s(:pair,
                  s(:sym, :textvariable),
                  s(:ivar, :@groups))))),
          s(:lvasgn, :btn_browse,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Browse")),
                s(:pair,
                  s(:sym, :command),
                  s(:send, nil, :method,
                    s(:sym, :select_icons)))))),
          s(:lvasgn, :btn_view,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "View")),
                s(:pair,
                  s(:sym, :command),
                  s(:send, nil, :method,
                    s(:sym, :display_icons)))))),
          s(:lvasgn, :btn_exit,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :base),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Exit")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :exit)))))),
          s(:ivasgn, :@column_btns,
            s(:hash)),
          s(:block,
            s(:send,
              s(:int, 6), :step,
              s(:int, 20),
              s(:int, 2)),
            s(:args,
              s(:arg, :i)),
            s(:send,
              s(:ivar, :@column_btns), :[]=,
              s(:lvar, :i),
              s(:send,
                s(:send,
                  s(:const, nil, :TkButton), :new,
                  s(:lvar, :columns),
                  s(:hash,
                    s(:pair,
                      s(:sym, :text),
                      s(:send,
                        s(:lvar, :i), :to_s)),
                    s(:pair,
                      s(:sym, :width),
                      s(:int, 2)),
                    s(:pair,
                      s(:sym, :command),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args),
                        s(:send, nil, :set_columns,
                          s(:lvar, :i)))))), :pack,
                s(:hash,
                  s(:pair,
                    s(:sym, :side),
                    s(:sym, :left)))))),
          s(:send,
            s(:send,
              s(:ivar, :@column_btns), :[],
              s(:ivar, :@columns)), :[]=,
            s(:sym, :relief),
            s(:sym, :sunken)),
          s(:send,
            s(:lvar, :lbl_library), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :ent_library), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :btn_browse), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 2)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :line1), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 1)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :columnspan),
                s(:int, 3)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :lbl_groups), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 2)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :ent_groups), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 2)),
              s(:pair,
                s(:sym, :column),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :btn_view), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 2)),
              s(:pair,
                s(:sym, :column),
                s(:int, 2)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :line1), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 3)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :columnspan),
                s(:int, 3)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :lbl_columns), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 4)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :columns), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 4)),
              s(:pair,
                s(:sym, :column),
                s(:int, 1)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 2)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :btn_exit), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 4)),
              s(:pair,
                s(:sym, :column),
                s(:int, 2)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :base), :pack),
          s(:send,
            s(:lvar, :ent_library), :bind,
            s(:str, "Return"),
            s(:send, nil, :method,
              s(:sym, :display_icons)),
            s(:str, "")),
          s(:send,
            s(:lvar, :ent_groups), :bind,
            s(:str, "Return"),
            s(:send, nil, :method,
              s(:sym, :display_icons)),
            s(:str, "")))),
      s(:def, :_create_display,
        s(:args),
        s(:begin,
          s(:lvasgn, :base,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken))))),
          s(:ivasgn, :@icons_window,
            s(:lvasgn, :icons,
              s(:send,
                s(:const, nil, :TkCanvas), :new,
                s(:lvar, :base)))),
          s(:lvasgn, :xscr,
            s(:send,
              s(:lvar, :icons), :xscrollbar,
              s(:send,
                s(:const, nil, :TkScrollbar), :new,
                s(:lvar, :base)))),
          s(:lvasgn, :yscr,
            s(:send,
              s(:lvar, :icons), :yscrollbar,
              s(:send,
                s(:const, nil, :TkScrollbar), :new,
                s(:lvar, :base)))),
          s(:send,
            s(:lvar, :icons), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :news)))),
          s(:send,
            s(:lvar, :yscr), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 1)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ns)))),
          s(:send,
            s(:lvar, :xscr), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 1)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:sym, :ew)))),
          s(:send,
            s(:lvar, :base), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :base), :grid_columnconfigure,
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 0)))),
          s(:send,
            s(:lvar, :base), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :base), :grid_rowconfigure,
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 0)))),
          s(:ivasgn, :@icons_layout,
            s(:send,
              s(:send,
                s(:const, nil, :TkFrame), :new,
                s(:lvar, :icons)), :pack)),
          s(:send,
            s(:const, nil, :TkcWindow), :create,
            s(:lvar, :icons),
            s(:int, 0),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :nw)),
              s(:pair,
                s(:sym, :window),
                s(:ivar, :@icons_layout)))),
          s(:send,
            s(:ivar, :@icons_layout), :bind,
            s(:str, "Configure"),
            s(:send, nil, :method,
              s(:sym, :layout_resize)),
            s(:str, "")),
          s(:send,
            s(:lvar, :base), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :expand),
                s(:true)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)))))),
      s(:def, :_create_info_window,
        s(:args),
        s(:ivasgn, :@info_window,
          s(:block,
            s(:send,
              s(:const, nil, :TkToplevel), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :background),
                  s(:str, "lightyellow")),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :solid)))),
            s(:args,
              s(:arg, :w)),
            s(:begin,
              s(:lvasgn, :lbl_name,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :text),
                      s(:str, "Name")),
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :font),
                      s(:ivar, :@boldfont)),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:lvasgn, :lbl_grps,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :text),
                      s(:str, "Groups")),
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :font),
                      s(:ivar, :@boldfont)),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:lvasgn, :lbl_type,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :text),
                      s(:str, "Type")),
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :font),
                      s(:ivar, :@boldfont)),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:lvasgn, :lbl_size,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :text),
                      s(:str, "Size")),
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :font),
                      s(:ivar, :@boldfont)),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:send,
                s(:lvar, :lbl_name), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:send,
                s(:lvar, :lbl_grps), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:send,
                s(:lvar, :lbl_type), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 2)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:send,
                s(:lvar, :lbl_size), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 3)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:ivasgn, :@name,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:ivasgn, :@grps,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:ivasgn, :@type,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:ivasgn, :@size,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:lvar, :w),
                  s(:hash,
                    s(:pair,
                      s(:sym, :background),
                      s(:str, "lightyellow")),
                    s(:pair,
                      s(:sym, :justify),
                      s(:sym, :left))))),
              s(:send,
                s(:ivar, :@name), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:send,
                s(:ivar, :@grps), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:send,
                s(:ivar, :@type), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 2)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:send,
                s(:ivar, :@size), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :row),
                    s(:int, 3)),
                  s(:pair,
                    s(:sym, :column),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :sticky),
                    s(:sym, :w)))),
              s(:def, :name,
                s(:args,
                  s(:arg, :txt)),
                s(:send,
                  s(:ivar, :@name), :[]=,
                  s(:str, "text"),
                  s(:lvar, :txt))),
              s(:def, :groups,
                s(:args,
                  s(:arg, :txt)),
                s(:send,
                  s(:ivar, :@grps), :[]=,
                  s(:str, "text"),
                  s(:lvar, :txt))),
              s(:def, :type,
                s(:args,
                  s(:arg, :txt)),
                s(:send,
                  s(:ivar, :@type), :[]=,
                  s(:str, "text"),
                  s(:lvar, :txt))),
              s(:def, :size,
                s(:args,
                  s(:arg, :txt)),
                s(:send,
                  s(:ivar, :@size), :[]=,
                  s(:str, "text"),
                  s(:lvar, :txt))),
              s(:send, nil, :overrideredirect,
                s(:true)),
              s(:send, nil, :withdraw))))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :init_path,
            s(:const,
              s(:const, nil, :Tk), :LIBRARY))),
        s(:begin,
          s(:if,
            s(:lvar, :init_path), nil,
            s(:lvasgn, :init_path,
              s(:const,
                s(:const, nil, :Tk), :LIBRARY))),
          s(:lvasgn, :init_path,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :init_path))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :directory?,
              s(:lvar, :init_path)),
            s(:begin,
              s(:ivasgn, :@initial_dir,
                s(:lvar, :init_path)),
              s(:ivasgn, :@initial_file,
                s(:str, "tkIcons"))),
            s(:begin,
              s(:ivasgn, :@initial_dir,
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:lvar, :init_path))),
              s(:ivasgn, :@initial_file,
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:lvar, :init_path))))),
          s(:if,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :PLATFORM), :[],
                s(:str, "platform")), :==,
              s(:str, "unix")),
            s(:send,
              s(:const, nil, :TkOption), :add,
              s(:str, "*HighlightThickness"),
              s(:int, 0)), nil),
          s(:ivasgn, :@columns,
            s(:int, 14)),
          s(:ivasgn, :@command,
            s(:str, "")),
          s(:ivasgn, :@delay_timer,
            s(:nil)),
          s(:lvasgn, :dummy,
            s(:send,
              s(:const, nil, :TkLabel), :new)),
          s(:ivasgn, :@font,
            s(:send,
              s(:lvar, :dummy), :font)),
          s(:ivasgn, :@boldfont,
            s(:send,
              s(:const, nil, :TkFont), :new,
              s(:ivar, :@font),
              s(:hash,
                s(:pair,
                  s(:sym, :weight),
                  s(:sym, :bold))))),
          s(:ivasgn, :@icons,
            s(:hash)),
          s(:ivasgn, :@icon_name,
            s(:hash)),
          s(:ivasgn, :@icon_info,
            s(:hash)),
          s(:ivasgn, :@library,
            s(:send,
              s(:const, nil, :TkVariable), :new,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@initial_dir),
                s(:ivar, :@initial_file)))),
          s(:ivasgn, :@groups,
            s(:send,
              s(:const, nil, :TkVariable), :new,
              s(:str, "*"))),
          s(:send, nil, :_create_controls),
          s(:send, nil, :_create_display),
          s(:send, nil, :_create_info_window),
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :title,
            s(:str, "viewIcons")),
          s(:send, nil, :layout_resize),
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :resizable,
            s(:false),
            s(:true)),
          s(:send, nil, :display_icons))),
      s(:def, :init_info,
        s(:args,
          s(:arg, :item),
          s(:arg, :name)),
        s(:begin,
          s(:send,
            s(:ivar, :@icon_name), :[]=,
            s(:lvar, :item),
            s(:lvar, :name)),
          s(:send,
            s(:lvar, :item), :bind,
            s(:str, "Button-1"),
            s(:send, nil, :method,
              s(:sym, :clip_info)),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :item), :bind,
            s(:str, "Enter"),
            s(:send, nil, :method,
              s(:sym, :delay_info)),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :item), :bind,
            s(:str, "Leave"),
            s(:send, nil, :method,
              s(:sym, :cancel_info)),
            s(:str, "")))),
      s(:def, :delay_info,
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:send, nil, :cancel_info),
          s(:ivasgn, :@delay_timer,
            s(:send,
              s(:send,
                s(:const, nil, :TkTimer), :new,
                s(:int, 200),
                s(:int, 1),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :show_info,
                    s(:lvar, :item)))), :start)))),
      s(:def, :cancel_info,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@delay_timer),
            s(:begin,
              s(:send,
                s(:ivar, :@delay_timer), :cancel),
              s(:ivasgn, :@delay_timer,
                s(:nil))), nil),
          s(:send,
            s(:ivar, :@info_window), :withdraw))),
      s(:def, :show_info,
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :groups),
              s(:lvasgn, :type),
              s(:lvasgn, :size)),
            s(:send,
              s(:ivar, :@icon_info), :[],
              s(:send,
                s(:ivar, :@icon_name), :[],
                s(:lvar, :item)))),
          s(:send,
            s(:ivar, :@info_window), :name,
            s(:lvar, :name)),
          s(:send,
            s(:ivar, :@info_window), :groups,
            s(:lvar, :groups)),
          s(:send,
            s(:ivar, :@info_window), :type,
            s(:lvar, :type)),
          s(:send,
            s(:ivar, :@info_window), :size,
            s(:lvar, :size)),
          s(:lvasgn, :info_x,
            s(:send,
              s(:send,
                s(:lvar, :item), :winfo_rootx), :+,
              s(:int, 10))),
          s(:lvasgn, :info_y,
            s(:send,
              s(:send,
                s(:lvar, :item), :winfo_rooty), :+,
              s(:send,
                s(:lvar, :item), :winfo_height))),
          s(:send,
            s(:ivar, :@info_window), :geometry,
            s(:dstr,
              s(:str, "+"),
              s(:begin,
                s(:lvar, :info_x)),
              s(:str, "+"),
              s(:begin,
                s(:lvar, :info_y)))),
          s(:send,
            s(:ivar, :@info_window), :deiconify),
          s(:send,
            s(:ivar, :@info_window), :raise),
          s(:ivasgn, :@delay_timer,
            s(:nil)))),
      s(:def, :primary_transfer,
        s(:args,
          s(:arg, :offset),
          s(:arg, :max_chars)),
        s(:ivar, :@command)),
      s(:def, :lost_selection,
        s(:args),
        s(:ivasgn, :@command,
          s(:str, ""))),
      s(:def, :clip_info,
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:ivar, :@icon_name), :[],
              s(:lvar, :item))),
          s(:lvasgn, :data_width,
            s(:int, 60)),
          s(:lvasgn, :cmd,
            s(:dstr,
              s(:begin,
                s(:lvar, :name)),
              s(:str, " = TkPhotoImage.new(:data=><<'EOD')\n"))),
          s(:lvasgn, :icon_data,
            s(:send,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Tk), :ICONS), :query,
                  s(:lvar, :name),
                  s(:hash,
                    s(:pair,
                      s(:sym, :file),
                      s(:send,
                        s(:ivar, :@library), :value)),
                    s(:pair,
                      s(:sym, :items),
                      s(:str, "d")))), :[],
                s(:int, 0)), :[],
              s(:int, 0))),
          s(:block,
            s(:send,
              s(:lvar, :icon_data), :scan,
              s(:regexp,
                s(:str, ".{1,"),
                s(:begin,
                  s(:lvar, :data_width)),
                s(:str, "}"),
                s(:regopt, :m))),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :cmd), :<<,
                  s(:str, "   ")), :<<,
                s(:lvar, :s)), :<<,
              s(:str, "\n"))),
          s(:send,
            s(:lvar, :cmd), :<<,
            s(:str, "EOD\n")),
          s(:ivasgn, :@command,
            s(:lvar, :cmd)),
          s(:send,
            s(:const, nil, :TkClipboard), :clear),
          s(:send,
            s(:const, nil, :TkClipboard), :append,
            s(:ivar, :@command)),
          s(:if,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :PLATFORM), :[],
                s(:str, "platform")), :==,
              s(:str, "unix")),
            s(:begin,
              s(:send,
                s(:const, nil, :TkSelection), :handle,
                s(:send,
                  s(:const, nil, :Tk), :root),
                s(:send, nil, :method,
                  s(:sym, :primary_transfer)),
                s(:hash,
                  s(:pair,
                    s(:sym, :selection),
                    s(:str, "PRIMARY")))),
              s(:send,
                s(:const, nil, :TkSelection), :set_owner,
                s(:send,
                  s(:const, nil, :Tk), :root),
                s(:hash,
                  s(:pair,
                    s(:sym, :selection),
                    s(:str, "PRIMARY")),
                  s(:pair,
                    s(:sym, :command),
                    s(:send, nil, :method,
                      s(:sym, :lost_selection)))))), nil),
          s(:send,
            s(:const, nil, :Tk), :bell))),
      s(:def, :layout_resize,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :update),
          s(:lvasgn, :bbox,
            s(:send,
              s(:ivar, :@icons_window), :bbox,
              s(:str, "all"))),
          s(:lvasgn, :width,
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@controls), :winfo_width), :-,
                s(:send,
                  s(:send,
                    s(:ivar, :@icons_window), :yscrollbar), :winfo_width)), :-,
              s(:int, 8))),
          s(:send,
            s(:ivar, :@icons_window), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :width),
                s(:lvar, :width)),
              s(:pair,
                s(:sym, :scrollregion),
                s(:lvar, :bbox)),
              s(:pair,
                s(:sym, :xscrollincrement),
                s(:str, "0.1i")),
              s(:pair,
                s(:sym, :yscrollincrement),
                s(:str, "0.1i")))))),
      s(:def, :select_icons,
        s(:args),
        s(:begin,
          s(:lvasgn, :new_lib,
            s(:send,
              s(:const, nil, :Tk), :getOpenFile,
              s(:hash,
                s(:pair,
                  s(:sym, :initialdir),
                  s(:ivar, :@initial_dir)),
                s(:pair,
                  s(:sym, :initialfile),
                  s(:str, "tkIcons")),
                s(:pair,
                  s(:sym, :title),
                  s(:str, "Select Icon Library")),
                s(:pair,
                  s(:sym, :filetypes),
                  s(:array,
                    s(:array,
                      s(:str, "Icon Libraries"),
                      s(:array,
                        s(:str, "tkIcons*"))),
                    s(:array,
                      s(:str, "All Files"),
                      s(:array,
                        s(:str, "*")))))))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :new_lib), :length), :!=,
              s(:int, 0)),
            s(:send,
              s(:ivar, :@library), :value=,
              s(:lvar, :new_lib)), nil),
          s(:send, nil, :display_icons))),
      s(:def, :display_icons,
        s(:args),
        s(:begin,
          s(:lvasgn, :column,
            s(:int, 0)),
          s(:lvasgn, :limit,
            s(:send,
              s(:ivar, :@columns), :-,
              s(:int, 1))),
          s(:lvasgn, :row,
            s(:int, 0)),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:ivar, :@library), :value)), nil,
            s(:begin,
              s(:send,
                s(:const, nil, :Tk), :messageBox,
                s(:hash,
                  s(:pair,
                    s(:sym, :icon),
                    s(:str, "warning")),
                  s(:pair,
                    s(:sym, :message),
                    s(:str, "File does not exist")),
                  s(:pair,
                    s(:sym, :title),
                    s(:str, "viewIcons")))),
              s(:return))),
          s(:lvasgn, :cursor,
            s(:send,
              s(:send,
                s(:const, nil, :Tk), :root), :[],
              s(:sym, :cursor))),
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :[]=,
            s(:sym, :cursor),
            s(:str, "watch")),
          s(:send,
            s(:const,
              s(:const, nil, :Tk), :ICONS), :delete,
            s(:ivar, :@icons)),
          s(:if,
            s(:ivar, :@icons_frame),
            s(:send,
              s(:ivar, :@icons_frame), :destroy), nil),
          s(:ivasgn, :@icons_frame,
            s(:send,
              s(:send,
                s(:const, nil, :TkFrame), :new,
                s(:ivar, :@icons_layout)), :pack)),
          s(:ivasgn, :@icons,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :ICONS), :create,
              s(:hash,
                s(:pair,
                  s(:sym, :file),
                  s(:send,
                    s(:ivar, :@library), :value)),
                s(:pair,
                  s(:sym, :group),
                  s(:send,
                    s(:ivar, :@groups), :value))))),
          s(:block,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :ICONS), :query,
                s(:hash,
                  s(:pair,
                    s(:sym, :file),
                    s(:send,
                      s(:ivar, :@library), :value)),
                  s(:pair,
                    s(:sym, :group),
                    s(:send,
                      s(:ivar, :@groups), :value)))), :each),
            s(:args,
              s(:arg, :inf)),
            s(:begin,
              s(:lvasgn, :name,
                s(:send,
                  s(:lvar, :inf), :[],
                  s(:int, 0))),
              s(:send,
                s(:ivar, :@icon_info), :[]=,
                s(:lvar, :name),
                s(:lvar, :inf)),
              s(:lvasgn, :lbl,
                s(:send,
                  s(:const, nil, :TkLabel), :new,
                  s(:ivar, :@icons_frame),
                  s(:hash,
                    s(:pair,
                      s(:sym, :image),
                      s(:dstr,
                        s(:str, "::icon::"),
                        s(:begin,
                          s(:lvar, :name))))))),
              s(:send,
                s(:lvar, :lbl), :grid,
                s(:hash,
                  s(:pair,
                    s(:sym, :column),
                    s(:lvar, :column)),
                  s(:pair,
                    s(:sym, :row),
                    s(:lvar, :row)),
                  s(:pair,
                    s(:sym, :padx),
                    s(:int, 3)),
                  s(:pair,
                    s(:sym, :pady),
                    s(:int, 3)))),
              s(:send, nil, :init_info,
                s(:lvar, :lbl),
                s(:lvar, :name)),
              s(:if,
                s(:send,
                  s(:lvar, :column), :==,
                  s(:lvar, :limit)),
                s(:begin,
                  s(:lvasgn, :column,
                    s(:int, 0)),
                  s(:op_asgn,
                    s(:lvasgn, :row), :+,
                    s(:int, 1))),
                s(:op_asgn,
                  s(:lvasgn, :column), :+,
                  s(:int, 1))))),
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :[]=,
            s(:sym, :cursor),
            s(:lvar, :cursor)))),
      s(:def, :set_columns,
        s(:args,
          s(:arg, :columns)),
        s(:begin,
          s(:ivasgn, :@columns,
            s(:lvar, :columns)),
          s(:block,
            s(:send,
              s(:int, 6), :step,
              s(:int, 20),
              s(:int, 2)),
            s(:args,
              s(:arg, :i)),
            s(:send,
              s(:send,
                s(:ivar, :@column_btns), :[],
                s(:lvar, :i)), :[]=,
              s(:sym, :relief),
              s(:sym, :raised))),
          s(:send,
            s(:send,
              s(:ivar, :@column_btns), :[],
              s(:ivar, :@columns)), :[]=,
            s(:sym, :relief),
            s(:sym, :sunken)),
          s(:send, nil, :display_icons))))),
  s(:send,
    s(:const, nil, :ViewIcons), :new,
    s(:send,
      s(:const, nil, :ARGV), :[],
      s(:int, 0))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
