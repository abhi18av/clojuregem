s(:begin,
  s(:if,
    s(:send,
      s(:const, nil, :Object), :const_defined?,
      s(:str, "DemoVar")), nil,
    s(:send, nil, :fail,
      s(:const, nil, :RuntimeError),
      s(:str, "This is NOT a stand alone script. This script is called from 'demo.rb'. "))),
  s(:module,
    s(:const, nil, :DemoBasic),
    s(:begin,
      s(:cvasgn, :@@var,
        s(:send,
          s(:const, nil, :TkVariable), :new_hash)),
      s(:cvasgn, :@@after,
        s(:nil)),
      s(:cvasgn, :@@count,
        s(:int, 0)),
      s(:defs,
        s(:self), :create,
        s(:args,
          s(:arg, :nb)),
        s(:begin,
          s(:lvasgn, :frame,
            s(:send,
              s(:lvar, :nb), :insert,
              s(:str, "end"),
              s(:str, "demoBasic"),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Basic"))))),
          s(:lvasgn, :topf,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :frame))),
          s(:lvasgn, :titf1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :TitleFrame), :new,
              s(:lvar, :topf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Label"))))),
          s(:lvasgn, :titf2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :TitleFrame), :new,
              s(:lvar, :topf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Entry"))))),
          s(:lvasgn, :titf3,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :TitleFrame), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Button and ArrowButton"))))),
          s(:send, nil, :_label,
            s(:send,
              s(:lvar, :titf1), :get_frame)),
          s(:send, nil, :_entry,
            s(:send,
              s(:lvar, :titf2), :get_frame)),
          s(:send, nil, :_button,
            s(:send,
              s(:lvar, :titf3), :get_frame)),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :titf1),
            s(:lvar, :titf2),
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))),
          s(:send,
            s(:lvar, :topf), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))),
          s(:send,
            s(:lvar, :titf3), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))))),
      s(:defs,
        s(:self), :_label,
        s(:args,
          s(:arg, :parent)),
        s(:begin,
          s(:lvasgn, :lab,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Label), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "This is a Label widget")),
                s(:pair,
                  s(:sym, :helptext),
                  s(:str, "Label widget"))))),
          s(:lvasgn, :chk,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Disabled")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:cvar, :@@var), :ref,
                    s(:lvar, :lab),
                    s(:str, "state"))),
                s(:pair,
                  s(:sym, :onvalue),
                  s(:str, "disabled")),
                s(:pair,
                  s(:sym, :offvalue),
                  s(:str, "normal")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :lab), :[]=,
                      s(:sym, :state),
                      s(:send,
                        s(:cvar, :@@var), :[],
                        s(:lvar, :lab),
                        s(:str, "state")))))))),
          s(:send,
            s(:lvar, :lab), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :chk), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)))))),
      s(:defs,
        s(:self), :_entry,
        s(:args,
          s(:arg, :parent)),
        s(:begin,
          s(:lvasgn, :ent,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Entry), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Press enter")),
                s(:pair,
                  s(:sym, :helptext),
                  s(:str, "Entry widtet")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:begin,
                      s(:send,
                        s(:cvar, :@@var), :[]=,
                        s(:str, "entcmd"),
                        s(:str, "command called")),
                      s(:send,
                        s(:const, nil, :Tk), :after,
                        s(:int, 500),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send,
                            s(:cvar, :@@var), :[]=,
                            s(:str, "entcmd"),
                            s(:str, "")))))))))),
          s(:lvasgn, :chk1,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Disabled")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:cvar, :@@var), :ref,
                    s(:lvar, :ent),
                    s(:str, "state"))),
                s(:pair,
                  s(:sym, :onvalue),
                  s(:str, "disabled")),
                s(:pair,
                  s(:sym, :offvalue),
                  s(:str, "normal")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :ent), :state=,
                      s(:send,
                        s(:cvar, :@@var), :[],
                        s(:lvar, :ent),
                        s(:str, "state")))))))),
          s(:lvasgn, :chk2,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Non editable")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:cvar, :@@var), :ref,
                    s(:lvar, :ent),
                    s(:str, "editable"))),
                s(:pair,
                  s(:sym, :onvalue),
                  s(:false)),
                s(:pair,
                  s(:sym, :offvalue),
                  s(:true)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :ent), :editable=,
                      s(:send,
                        s(:cvar, :@@var), :[],
                        s(:lvar, :ent),
                        s(:str, "editable")))))))),
          s(:lvasgn, :lab,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :textvariable),
                  s(:send,
                    s(:cvar, :@@var), :ref,
                    s(:str, "entcmd"))),
                s(:pair,
                  s(:sym, :foreground),
                  s(:str, "red"))))),
          s(:send,
            s(:lvar, :ent), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :pady),
                s(:int, 4)),
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :chk1),
            s(:lvar, :chk2),
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)))),
          s(:send,
            s(:lvar, :lab), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :pady),
                s(:int, 4)))))),
      s(:defs,
        s(:self), :_button,
        s(:args,
          s(:arg, :parent)),
        s(:begin,
          s(:lvasgn, :frame,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :parent))),
          s(:lvasgn, :but,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Button), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Press me!")),
                s(:pair,
                  s(:sym, :repeatdelay),
                  s(:int, 300)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_butcmd,
                      s(:str, "command")))),
                s(:pair,
                  s(:sym, :helptext),
                  s(:str, "This is a Button widget"))))),
          s(:lvasgn, :sep1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Separator), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :vertical))))),
          s(:lvasgn, :arr1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ArrowButton), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :type),
                  s(:sym, :button)),
                s(:pair,
                  s(:sym, :width),
                  s(:int, 25)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 25)),
                s(:pair,
                  s(:sym, :repeatdelay),
                  s(:int, 300)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_butcmd,
                      s(:str, "command")))),
                s(:pair,
                  s(:sym, :helptext),
                  s(:str, "This is an ArrowButton widget\nof type button"))))),
          s(:lvasgn, :sep2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Separator), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :vertical))))),
          s(:lvasgn, :arr2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ArrowButton), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :type),
                  s(:sym, :arrow)),
                s(:pair,
                  s(:sym, :width),
                  s(:int, 25)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 25)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :ipadx),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :ipady),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :repeatdelay),
                  s(:int, 300)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_butcmd,
                      s(:str, "command")))),
                s(:pair,
                  s(:sym, :helptext),
                  s(:str, "This is an ArrowButton widget\nof type arrow"))))),
          s(:send,
            s(:lvar, :but), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :sep1), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :y)))),
          s(:send,
            s(:lvar, :arr1), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :sep2), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :y)))),
          s(:send,
            s(:lvar, :arr2), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :frame), :pack),
          s(:send,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :Separator), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :orient),
                  s(:sym, :horizontal)))), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 10)))),
          s(:lvasgn, :labf1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :LabelFrame), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Command")),
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :top)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1))))),
          s(:lvasgn, :subf,
            s(:send,
              s(:lvar, :labf1), :get_frame)),
          s(:lvasgn, :chk1,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Disabled")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:cvar, :@@var), :ref,
                    s(:str, "bstate"))),
                s(:pair,
                  s(:sym, :onvalue),
                  s(:str, "disabled")),
                s(:pair,
                  s(:sym, :offvalue),
                  s(:str, "normal")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_bstate,
                      s(:send,
                        s(:cvar, :@@var), :[],
                        s(:str, "bstate")),
                      s(:lvar, :but),
                      s(:lvar, :arr1),
                      s(:lvar, :arr2))))))),
          s(:lvasgn, :chk2,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Use armcommand/\ndisarmcommand")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:cvar, :@@var), :ref,
                    s(:str, "barmcmd"))),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_barmcmd,
                      s(:send,
                        s(:cvar, :@@var), :[],
                        s(:str, "barmcmd")),
                      s(:lvar, :but),
                      s(:lvar, :arr1),
                      s(:lvar, :arr2))))))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :chk1),
            s(:lvar, :chk2),
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)))),
          s(:lvasgn, :label,
            s(:send,
              s(:send,
                s(:const, nil, :TkLabel), :new,
                s(:lvar, :parent),
                s(:hash,
                  s(:pair,
                    s(:sym, :textvariable),
                    s(:send,
                      s(:cvar, :@@var), :ref,
                      s(:str, "butcmd"))),
                  s(:pair,
                    s(:sym, :foreground),
                    s(:str, "red")))), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :bottom)),
                s(:pair,
                  s(:sym, :pady),
                  s(:int, 4))))),
          s(:lvasgn, :labf2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :LabelFrame), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Direction")),
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :top)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1))))),
          s(:lvasgn, :subf,
            s(:send,
              s(:lvar, :labf2), :get_frame)),
          s(:send,
            s(:cvar, :@@var), :[]=,
            s(:str, "bside"),
            s(:sym, :top)),
          s(:block,
            s(:send,
              s(:array,
                s(:sym, :top),
                s(:sym, :left),
                s(:sym, :bottom),
                s(:sym, :right)), :each),
            s(:args,
              s(:arg, :dir)),
            s(:send,
              s(:send,
                s(:const, nil, :TkRadiobutton), :new,
                s(:lvar, :subf),
                s(:hash,
                  s(:pair,
                    s(:sym, :text),
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :dir)),
                      s(:str, " arrow"))),
                  s(:pair,
                    s(:sym, :variable),
                    s(:send,
                      s(:cvar, :@@var), :ref,
                      s(:str, "bside"))),
                  s(:pair,
                    s(:sym, :value),
                    s(:lvar, :dir)),
                  s(:pair,
                    s(:sym, :command),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send, nil, :_bside,
                        s(:send,
                          s(:cvar, :@@var), :[],
                          s(:str, "bside")),
                        s(:lvar, :arr1),
                        s(:lvar, :arr2)))))), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w))))),
          s(:lvasgn, :labf3,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :LabelFrame), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Relief")),
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :top)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1))))),
          s(:lvasgn, :subf,
            s(:send,
              s(:lvar, :labf3), :get_frame)),
          s(:send,
            s(:cvar, :@@var), :[]=,
            s(:str, "brelief"),
            s(:sym, :raised)),
          s(:block,
            s(:send,
              s(:array,
                s(:array,
                  s(:str, "raised"),
                  s(:str, "sunken"),
                  s(:str, "ridge"),
                  s(:str, "groove")),
                s(:array,
                  s(:str, "flat"),
                  s(:str, "solid"),
                  s(:str, "link"))), :each),
            s(:args,
              s(:arg, :lrelief)),
            s(:begin,
              s(:lvasgn, :f,
                s(:send,
                  s(:const, nil, :TkFrame), :new,
                  s(:lvar, :subf))),
              s(:block,
                s(:send,
                  s(:lvar, :lrelief), :each),
                s(:args,
                  s(:arg, :relief)),
                s(:send,
                  s(:send,
                    s(:const, nil, :TkRadiobutton), :new,
                    s(:lvar, :f),
                    s(:hash,
                      s(:pair,
                        s(:sym, :text),
                        s(:lvar, :relief)),
                      s(:pair,
                        s(:sym, :variable),
                        s(:send,
                          s(:cvar, :@@var), :ref,
                          s(:str, "brelief"))),
                      s(:pair,
                        s(:sym, :value),
                        s(:lvar, :relief)),
                      s(:pair,
                        s(:sym, :command),
                        s(:block,
                          s(:send, nil, :proc),
                          s(:args),
                          s(:send, nil, :_brelief,
                            s(:send,
                              s(:cvar, :@@var), :[],
                              s(:str, "brelief")),
                            s(:lvar, :but),
                            s(:lvar, :arr1),
                            s(:lvar, :arr2)))))), :pack,
                  s(:hash,
                    s(:pair,
                      s(:sym, :anchor),
                      s(:sym, :w))))),
              s(:send,
                s(:lvar, :f), :pack,
                s(:hash,
                  s(:pair,
                    s(:sym, :side),
                    s(:sym, :left)),
                  s(:pair,
                    s(:sym, :padx),
                    s(:int, 2)),
                  s(:pair,
                    s(:sym, :anchor),
                    s(:sym, :n)))))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :labf1),
            s(:lvar, :labf2),
            s(:lvar, :labf3),
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :y)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)))))),
      s(:defs,
        s(:self), :_bstate,
        s(:args,
          s(:arg, :state),
          s(:arg, :but),
          s(:arg, :arr1),
          s(:arg, :arr2)),
        s(:block,
          s(:send,
            s(:array,
              s(:lvar, :but),
              s(:lvar, :arr1),
              s(:lvar, :arr2)), :each),
          s(:args,
            s(:arg, :b)),
          s(:send,
            s(:lvar, :b), :[]=,
            s(:sym, :state),
            s(:lvar, :state)))),
      s(:defs,
        s(:self), :_brelief,
        s(:args,
          s(:arg, :relief),
          s(:arg, :but),
          s(:arg, :arr1),
          s(:arg, :arr2)),
        s(:begin,
          s(:send,
            s(:lvar, :but), :[]=,
            s(:sym, :relief),
            s(:lvar, :relief)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :relief), :to_s), :!=,
              s(:str, "link")),
            s(:block,
              s(:send,
                s(:array,
                  s(:lvar, :arr1),
                  s(:lvar, :arr2)), :each),
              s(:args,
                s(:arg, :arr)),
              s(:send,
                s(:lvar, :arr), :[]=,
                s(:sym, :relief),
                s(:lvar, :relief))), nil))),
      s(:defs,
        s(:self), :_bside,
        s(:args,
          s(:arg, :side),
          s(:restarg, :args)),
        s(:block,
          s(:send,
            s(:lvar, :args), :each),
          s(:args,
            s(:arg, :arr)),
          s(:send,
            s(:lvar, :arr), :[]=,
            s(:sym, :dir),
            s(:lvar, :side)))),
      s(:defs,
        s(:self), :_barmcmd,
        s(:args,
          s(:arg, :value),
          s(:arg, :but),
          s(:arg, :arr1),
          s(:arg, :arr2)),
        s(:if,
          s(:send,
            s(:const, nil, :TkComm), :bool,
            s(:lvar, :value)),
          s(:begin,
            s(:send,
              s(:lvar, :but), :configure,
              s(:hash,
                s(:pair,
                  s(:sym, :armcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_butcmd,
                      s(:str, "arm")))),
                s(:pair,
                  s(:sym, :disarmcommand),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_butcmd,
                      s(:str, "disarm")))),
                s(:pair,
                  s(:sym, :command),
                  s(:str, "")))),
            s(:block,
              s(:send,
                s(:array,
                  s(:lvar, :arr1),
                  s(:lvar, :arr2)), :each),
              s(:args,
                s(:arg, :arr)),
              s(:send,
                s(:lvar, :arr), :configure,
                s(:hash,
                  s(:pair,
                    s(:sym, :armcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send, nil, :_butcmd,
                        s(:str, "arm")))),
                  s(:pair,
                    s(:sym, :disarmcommand),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send, nil, :_butcmd,
                        s(:str, "disarm")))),
                  s(:pair,
                    s(:sym, :command),
                    s(:str, "")))))),
          s(:begin,
            s(:send,
              s(:lvar, :but), :configure,
              s(:hash,
                s(:pair,
                  s(:sym, :armcommand),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :disarmcommand),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_butcmd,
                      s(:str, "command")))))),
            s(:block,
              s(:send,
                s(:array,
                  s(:lvar, :arr1),
                  s(:lvar, :arr2)), :each),
              s(:args,
                s(:arg, :arr)),
              s(:send,
                s(:lvar, :arr), :configure,
                s(:hash,
                  s(:pair,
                    s(:sym, :armcommand),
                    s(:str, "")),
                  s(:pair,
                    s(:sym, :disarmcommand),
                    s(:str, "")),
                  s(:pair,
                    s(:sym, :command),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:send, nil, :_butcmd,
                        s(:str, "command")))))))))),
      s(:defs,
        s(:self), :_butcmd,
        s(:args,
          s(:arg, :reason)),
        s(:begin,
          s(:if,
            s(:cvar, :@@after), nil,
            s(:cvasgn, :@@after,
              s(:send,
                s(:const, nil, :TkTimer), :new,
                s(:int, 500),
                s(:int, 1),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:cvar, :@@var), :[]=,
                    s(:str, "butcmd"),
                    s(:str, "")))))),
          s(:send,
            s(:cvar, :@@after), :stop),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :reason), :==,
                s(:str, "arm"))),
            s(:begin,
              s(:op_asgn,
                s(:cvasgn, :@@count), :+,
                s(:int, 1)),
              s(:send,
                s(:cvar, :@@var), :[]=,
                s(:str, "butcmd"),
                s(:dstr,
                  s(:begin,
                    s(:lvar, :reason)),
                  s(:str, " command called ("),
                  s(:begin,
                    s(:cvar, :@@count)),
                  s(:str, ")")))),
            s(:begin,
              s(:cvasgn, :@@count,
                s(:int, 0)),
              s(:send,
                s(:cvar, :@@var), :[]=,
                s(:str, "butcmd"),
                s(:dstr,
                  s(:begin,
                    s(:lvar, :reason)),
                  s(:str, " command called"))))),
          s(:send,
            s(:cvar, :@@after), :start))))))
