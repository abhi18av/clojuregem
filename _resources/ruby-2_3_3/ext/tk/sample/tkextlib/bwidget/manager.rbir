s(:begin,
  s(:if,
    s(:send,
      s(:const, nil, :Object), :const_defined?,
      s(:str, "DemoVar")), nil,
    s(:send, nil, :fail,
      s(:const, nil, :RuntimeError),
      s(:str, "This is NOT a stand alone script. This script is called from 'demo.rb'. "))),
  s(:module,
    s(:const, nil, :DemoManager),
    s(:begin,
      s(:cvasgn, :@@progress,
        s(:send,
          s(:const, nil, :TkVariable), :new,
          s(:false))),
      s(:cvasgn, :@@status,
        s(:send,
          s(:const, nil, :TkVariable), :new,
          s(:str, "Compute in progress..."))),
      s(:cvasgn, :@@homogeneous,
        s(:send,
          s(:const, nil, :TkVariable), :new,
          s(:false))),
      s(:cvasgn, :@@constw,
        s(:send,
          s(:const, nil, :TkVariable), :new)),
      s(:cvasgn, :@@afterobj,
        s(:nil)),
      s(:defs,
        s(:self), :create,
        s(:args,
          s(:arg, :nb)),
        s(:begin,
          s(:lvasgn, :frame,
            s(:send,
              s(:lvar, :nb), :insert,
              s(:str, "end"),
              s(:str, "demoManager"),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Manager"))))),
          s(:lvasgn, :topf,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:lvar, :frame))),
          s(:lvasgn, :titf1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :TitleFrame), :new,
              s(:lvar, :topf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "MainFrame"))))),
          s(:lvasgn, :titf2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :TitleFrame), :new,
              s(:lvar, :topf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "NoteBook"))))),
          s(:lvasgn, :titf3,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :TitleFrame), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Paned & ScrolledWindow"))))),
          s(:send, nil, :_mainframe,
            s(:send,
              s(:lvar, :titf1), :get_frame)),
          s(:send, nil, :_notebook,
            s(:send,
              s(:lvar, :titf2), :get_frame)),
          s(:send, nil, :_paned,
            s(:send,
              s(:lvar, :titf3), :get_frame)),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :titf1),
            s(:lvar, :titf2),
            s(:hash,
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :topf),
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :titf3),
            s(:hash,
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))),
          s(:lvar, :frame))),
      s(:defs,
        s(:self), :_mainframe,
        s(:args,
          s(:arg, :parent)),
        s(:begin,
          s(:lvasgn, :labf1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :LabelFrame), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Toolbar")),
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :top)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 2))))),
          s(:lvasgn, :subf,
            s(:send,
              s(:lvar, :labf1), :get_frame)),
          s(:lvasgn, :chk1,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "View toolbar 1")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:const, nil, :DemoVar), :toolbar1)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:send,
                        s(:const, nil, :DemoVar), :mainframe), :show_toolbar,
                      s(:int, 0),
                      s(:send,
                        s(:send,
                          s(:const, nil, :DemoVar), :toolbar1), :value))))))),
          s(:lvasgn, :chk2,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "View toolbar 2")),
                s(:pair,
                  s(:sym, :variable),
                  s(:send,
                    s(:const, nil, :DemoVar), :toolbar2)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:send,
                        s(:const, nil, :DemoVar), :mainframe), :show_toolbar,
                      s(:int, 1),
                      s(:send,
                        s(:send,
                          s(:const, nil, :DemoVar), :toolbar2), :value))))))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :chk1),
            s(:lvar, :chk2),
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))),
          s(:send,
            s(:lvar, :labf1), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)))),
          s(:lvasgn, :labf2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :LabelFrame), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Status bar")),
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :top)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :w)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 2))))),
          s(:lvasgn, :subf,
            s(:send,
              s(:lvar, :labf2), :get_frame)),
          s(:lvasgn, :chk1,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Show Progress\nindicator")),
                s(:pair,
                  s(:sym, :justify),
                  s(:sym, :left)),
                s(:pair,
                  s(:sym, :variable),
                  s(:cvar, :@@progress)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_show_progress)))))),
          s(:send,
            s(:lvar, :chk1), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :labf1),
            s(:lvar, :labf2),
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)))))),
      s(:defs,
        s(:self), :_notebook,
        s(:args,
          s(:arg, :parent)),
        s(:send,
          s(:send,
            s(:const, nil, :TkCheckbutton), :new,
            s(:lvar, :parent),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "Homogeneous label")),
              s(:pair,
                s(:sym, :variable),
                s(:cvar, :@@homogeneous)),
              s(:pair,
                s(:sym, :command),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :DemoVar), :notebook), :[]=,
                    s(:sym, :homogeneous),
                    s(:send,
                      s(:cvar, :@@homogeneous), :value)))))), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :side),
              s(:sym, :left)),
            s(:pair,
              s(:sym, :anchor),
              s(:sym, :n)),
            s(:pair,
              s(:sym, :fill),
              s(:sym, :x))))),
      s(:defs,
        s(:self), :_paned,
        s(:args,
          s(:arg, :parent)),
        s(:begin,
          s(:lvasgn, :pw1,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :PanedWindow), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :top))))),
          s(:lvasgn, :pane,
            s(:send,
              s(:lvar, :pw1), :add,
              s(:hash,
                s(:pair,
                  s(:sym, :minsize),
                  s(:int, 100))))),
          s(:lvasgn, :pw2,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :PanedWindow), :new,
              s(:lvar, :pane),
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :left))))),
          s(:lvasgn, :pane1,
            s(:send,
              s(:lvar, :pw2), :add,
              s(:hash,
                s(:pair,
                  s(:sym, :minsize),
                  s(:int, 100))))),
          s(:lvasgn, :pane2,
            s(:send,
              s(:lvar, :pw2), :add,
              s(:hash,
                s(:pair,
                  s(:sym, :minsize),
                  s(:int, 100))))),
          s(:lvasgn, :pane3,
            s(:send,
              s(:lvar, :pw1), :add,
              s(:hash,
                s(:pair,
                  s(:sym, :minsize),
                  s(:int, 100))))),
          s(:block,
            s(:send,
              s(:array,
                s(:lvar, :pane1),
                s(:lvar, :pane2)), :each),
            s(:args,
              s(:arg, :pane)),
            s(:begin,
              s(:lvasgn, :sw,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Tk), :BWidget), :ScrolledWindow), :new,
                  s(:lvar, :pane))),
              s(:lvasgn, :lb,
                s(:send,
                  s(:const, nil, :TkListbox), :new,
                  s(:lvar, :sw),
                  s(:hash,
                    s(:pair,
                      s(:sym, :height),
                      s(:int, 8)),
                    s(:pair,
                      s(:sym, :width),
                      s(:int, 20)),
                    s(:pair,
                      s(:sym, :highlightthickness),
                      s(:int, 0))))),
              s(:block,
                s(:send,
                  s(:begin,
                    s(:irange,
                      s(:int, 1),
                      s(:int, 8))), :each),
                s(:args,
                  s(:arg, :i)),
                s(:send,
                  s(:lvar, :lb), :insert,
                  s(:str, "end"),
                  s(:dstr,
                    s(:str, "Valur "),
                    s(:begin,
                      s(:lvar, :i))))),
              s(:send,
                s(:lvar, :sw), :set_widget,
                s(:lvar, :lb)),
              s(:send,
                s(:lvar, :sw), :pack,
                s(:hash,
                  s(:pair,
                    s(:sym, :fill),
                    s(:sym, :both)),
                  s(:pair,
                    s(:sym, :expand),
                    s(:true)))))),
          s(:lvasgn, :sw,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ScrolledWindow), :new,
              s(:lvar, :pane3),
              s(:hash,
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 2))))),
          s(:lvasgn, :sf,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :BWidget), :ScrollableFrame), :new,
              s(:lvar, :sw))),
          s(:send,
            s(:lvar, :sw), :set_widget,
            s(:lvar, :sf)),
          s(:lvasgn, :subf,
            s(:send,
              s(:lvar, :sf), :get_frame)),
          s(:lvasgn, :lab,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "This is a ScrollableFrame"))))),
          s(:lvasgn, :chk,
            s(:send,
              s(:const, nil, :TkCheckbutton), :new,
              s(:lvar, :subf),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Constrained with")),
                s(:pair,
                  s(:sym, :variable),
                  s(:cvar, :@@constw)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :sf), :[]=,
                      s(:str, "constrainedwidth"),
                      s(:send,
                        s(:cvar, :@@constw), :value))))))),
          s(:send,
            s(:lvar, :lab), :pack),
          s(:send,
            s(:lvar, :chk), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :w)))),
          s(:send,
            s(:lvar, :chk), :bind,
            s(:str, "FocusIn"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:lvar, :sf), :see,
                s(:lvar, :chk)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 0),
                  s(:int, 20))), :each),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:lvasgn, :ent,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkEntry), :new,
                    s(:lvar, :subf),
                    s(:hash,
                      s(:pair,
                        s(:sym, :width),
                        s(:int, 50)))), :pack,
                  s(:hash,
                    s(:pair,
                      s(:sym, :fill),
                      s(:sym, :x)),
                    s(:pair,
                      s(:sym, :pady),
                      s(:int, 4))))),
              s(:send,
                s(:lvar, :ent), :bind,
                s(:str, "FocusIn"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :sf), :see,
                    s(:lvar, :ent)))),
              s(:send,
                s(:lvar, :ent), :insert,
                s(:str, "end"),
                s(:dstr,
                  s(:str, "Text field "),
                  s(:begin,
                    s(:lvar, :i)))))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :sw),
            s(:lvar, :pw2),
            s(:lvar, :pw1),
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))))),
      s(:defs,
        s(:self), :_show_progress,
        s(:args),
        s(:begin,
          s(:if,
            s(:cvar, :@@afterobj), nil,
            s(:cvasgn, :@@afterobj,
              s(:send,
                s(:const, nil, :TkTimer), :new,
                s(:int, 30),
                s(:int, -1),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :_update_progress))))),
          s(:if,
            s(:send,
              s(:cvar, :@@progress), :bool),
            s(:begin,
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :status), :value=,
                s(:str, "Compute in progress...")),
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :prgindic), :value=,
                s(:int, 0)),
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :mainframe), :show_statusbar,
                s(:sym, :progression)),
              s(:if,
                s(:send,
                  s(:cvar, :@@afterobj), :running?), nil,
                s(:send,
                  s(:cvar, :@@afterobj), :start))),
            s(:begin,
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :status), :value=,
                s(:str, "")),
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :mainframe), :show_statusbar,
                s(:sym, :status)),
              s(:send,
                s(:cvar, :@@afterobj), :stop))))),
      s(:defs,
        s(:self), :_update_progress,
        s(:args),
        s(:if,
          s(:send,
            s(:cvar, :@@progress), :bool),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :prgindic), :numeric), :<,
              s(:int, 100)),
            s(:op_asgn,
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :prgindic), :numeric), :+,
              s(:int, 5)),
            s(:begin,
              s(:send,
                s(:cvar, :@@progress), :value=,
                s(:false)),
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :mainframe), :show_statusbar,
                s(:sym, :status)),
              s(:send,
                s(:send,
                  s(:const, nil, :DemoVar), :status), :value=,
                s(:str, "Done")),
              s(:send,
                s(:cvar, :@@afterobj), :stop),
              s(:send,
                s(:const, nil, :Tk), :after,
                s(:int, 500),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :DemoVar), :status), :value=,
                    s(:str, "")))))),
          s(:send,
            s(:cvar, :@@afterobj), :stop))))))
