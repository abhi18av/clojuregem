s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:send, nil, :require,
    s(:str, "tkextlib/vu/charts")),
  s(:lvasgn, :c,
    s(:send,
      s(:send,
        s(:const, nil, :TkCanvas), :new), :pack)),
  s(:kwbegin,
    s(:rescue,
      s(:lvasgn, :st,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :Vu), :TkcSticker), :new,
          s(:lvar, :c),
          s(:int, 0),
          s(:int, 0),
          s(:int, 10),
          s(:int, 10))),
      s(:resbody, nil, nil,
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :messageBox,
            s(:hash,
              s(:pair,
                s(:sym, :type),
                s(:str, "ok")),
              s(:pair,
                s(:sym, :title),
                s(:str, "No sticker Item")),
              s(:pair,
                s(:sym, :message),
                s(:str, "This build of vu does not include the sticker item")))),
          s(:send, nil, :exit))), nil)),
  s(:send,
    s(:lvar, :c), :destroy),
  s(:lvasgn, :sti_conf,
    s(:array,
      s(:array,
        s(:int, 10),
        s(:int, 10),
        s(:int, 350),
        s(:int, 350)),
      s(:send,
        s(:const, nil, :Tk), :UTF8_String,
        s(:str, "Sticker \\u00E4\\u00F6\\u00FC\\u00DF\\u0040\\u00B2\\u00B3\\u00BC\\u00BD\\u00BE")),
      s(:sym, :center))),
  s(:lvasgn, :txt_conf,
    s(:array,
      s(:array,
        s(:int, 250),
        s(:int, 250)),
      s(:send,
        s(:const, nil, :Tk), :UTF8_String,
        s(:str, "Text    \\u00E4\\u00F6\\u00FC\\u00DF\\u0040\\u00B2\\u00B3\\u00BC\\u00BD\\u00BE")),
      s(:sym, :center))),
  s(:lvasgn, :fnt,
    s(:send,
      s(:const, nil, :TkFont), :new,
      s(:str, "Helvetica 24 bold"))),
  s(:lvasgn, :c,
    s(:send,
      s(:send,
        s(:const, nil, :TkCanvas), :new,
        s(:hash,
          s(:pair,
            s(:sym, :width),
            s(:int, 500)),
          s(:pair,
            s(:sym, :height),
            s(:int, 500)),
          s(:pair,
            s(:sym, :bg),
            s(:str, "aquamarine3")))), :pack)),
  s(:lvasgn, :sti,
    s(:block,
      s(:send,
        s(:const,
          s(:const,
            s(:const, nil, :Tk), :Vu), :TkcSticker), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :sti_conf), :[],
          s(:int, 0))),
      s(:args),
      s(:begin,
        s(:send, nil, :anchor,
          s(:send,
            s(:lvar, :sti_conf), :[],
            s(:int, 2))),
        s(:send, nil, :bar,
          s(:str, "black")),
        s(:send, nil, :color,
          s(:str, "red")),
        s(:send, nil, :fill,
          s(:str, "")),
        s(:send, nil, :font,
          s(:lvar, :fnt)),
        s(:send, nil, :lefttrunc,
          s(:int, 0)),
        s(:send, nil, :outline,
          s(:str, "")),
        s(:send, nil, :relheight,
          s(:float, 0.0)),
        s(:send, nil, :relwidth,
          s(:float, 0.0)),
        s(:send, nil, :relx,
          s(:float, 0.0)),
        s(:send, nil, :rely,
          s(:float, 0.0)),
        s(:send, nil, :space,
          s(:int, 0)),
        s(:send, nil, :stipple,
          s(:str, "")),
        s(:send, nil, :tags,
          s(:str, "sti")),
        s(:send, nil, :text,
          s(:send,
            s(:lvar, :sti_conf), :[],
            s(:int, 1))),
        s(:send, nil, :width,
          s(:int, 0)),
        s(:send, nil, :orient,
          s(:sym, :vertical)),
        s(:send, nil, :minwidth,
          s(:int, 0)),
        s(:send, nil, :minheight,
          s(:int, 0)),
        s(:send, nil, :maxwidth,
          s(:int, 32767)),
        s(:send, nil, :maxheight,
          s(:int, 32767))))),
  s(:lvasgn, :txt,
    s(:block,
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :txt_conf), :[],
          s(:int, 0))),
      s(:args),
      s(:begin,
        s(:send, nil, :activefill,
          s(:str, "")),
        s(:send, nil, :activestipple,
          s(:str, "")),
        s(:send, nil, :anchor,
          s(:send,
            s(:lvar, :txt_conf), :[],
            s(:int, 2))),
        s(:send, nil, :disabledfill,
          s(:str, "")),
        s(:send, nil, :disabledstipple,
          s(:str, "")),
        s(:send, nil, :fill,
          s(:str, "blue")),
        s(:send, nil, :font,
          s(:lvar, :fnt)),
        s(:send, nil, :justify,
          s(:sym, :left)),
        s(:send, nil, :offset,
          s(:str, "0,0")),
        s(:send, nil, :state,
          s(:str, "")),
        s(:send, nil, :stipple,
          s(:str, "")),
        s(:send, nil, :tags,
          s(:array,
            s(:str, "tex"))),
        s(:send, nil, :text,
          s(:send,
            s(:lvar, :txt_conf), :[],
            s(:int, 1))),
        s(:send, nil, :width,
          s(:int, 0))))),
  s(:send,
    s(:lvar, :c), :bind,
    s(:str, "2"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:begin,
        s(:send,
          s(:lvar, :sti), :[]=,
          s(:sym, :orient),
          s(:sym, :horizontal)),
        s(:send,
          s(:lvar, :txt), :[]=,
          s(:sym, :width),
          s(:int, 0))))),
  s(:send,
    s(:lvar, :c), :bind,
    s(:str, "3"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:begin,
        s(:send,
          s(:lvar, :sti), :[]=,
          s(:sym, :orient),
          s(:sym, :vertical)),
        s(:send,
          s(:lvar, :txt), :[]=,
          s(:sym, :width),
          s(:int, 1))))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :bind,
    s(:str, "p"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:begin,
        s(:send,
          s(:lvar, :c), :postscript,
          s(:hash,
            s(:pair,
              s(:sym, :file),
              s(:str, "DEMO.ps")))),
        s(:send, nil, :puts,
          s(:str, "DEMO.ps printed"))))),
  s(:send,
    s(:send,
      s(:const, nil, :Tk), :root), :bind,
    s(:str, "q"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :exit))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
