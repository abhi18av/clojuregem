s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :ScrollbarComposite),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComposite)),
      s(:def, :component_construct_keys,
        s(:args),
        s(:array)),
      s(:send, nil, :private,
        s(:sym, :component_construct_keys)),
      s(:def, :create_component,
        s(:args,
          s(:optarg, :keys,
            s(:hash))), nil),
      s(:send, nil, :private,
        s(:sym, :create_component)),
      s(:def, :component_delegates,
        s(:args), nil),
      s(:send, nil, :private,
        s(:sym, :component_delegates)),
      s(:def, :define_delegates,
        s(:args),
        s(:begin,
          s(:send, nil, :option_methods,
            s(:array,
              s(:sym, :scrollbarwidth),
              s(:sym, :get_scrollbarwidth))),
          s(:send, nil, :delegate_alias,
            s(:str, "scrollbarrelief"),
            s(:str, "relief"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate_alias,
            s(:str, "framebackground"),
            s(:str, "background"),
            s(:ivar, :@frame),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate_alias,
            s(:str, "activeframebackground"),
            s(:str, "activebackground"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "DEFAULT"),
            s(:ivar, :@component)),
          s(:send, nil, :delegate,
            s(:str, "troughcolor"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "repeatdelay"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "repeatinterval"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "borderwidth"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "relief"),
            s(:ivar, :@frame)),
          s(:send, nil, :component_delegates))),
      s(:send, nil, :private,
        s(:sym, :define_delegates)),
      s(:casgn, nil, :DEFAULT_VSCROLL,
        s(:true)),
      s(:casgn, nil, :DEFAULT_HSCROLL,
        s(:true)),
      s(:def, :initialize_composite,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:ivasgn, :@v_scroll,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "orient"),
                  s(:str, "vertical"))))),
          s(:ivasgn, :@h_scroll,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "orient"),
                  s(:str, "horizontal"))))),
          s(:lvasgn, :construct_keys,
            s(:hash)),
          s(:block,
            s(:send,
              s(:begin,
                s(:send,
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:send, nil, :component_construct_keys), :map),
                      s(:args,
                        s(:arg, :k)),
                      s(:send,
                        s(:lvar, :k), :to_s))), :&,
                  s(:send,
                    s(:lvar, :keys), :keys))), :each),
            s(:args,
              s(:arg, :k)),
            s(:send,
              s(:lvar, :construct_keys), :[]=,
              s(:lvar, :k),
              s(:send,
                s(:lvar, :keys), :delete,
                s(:lvar, :k)))),
          s(:ivasgn, :@component,
            s(:send, nil, :create_component,
              s(:lvar, :construct_keys))),
          s(:ivasgn, :@path,
            s(:send,
              s(:ivar, :@component), :path)),
          s(:send,
            s(:ivar, :@component), :xscrollbar,
            s(:ivar, :@h_scroll)),
          s(:send,
            s(:ivar, :@component), :yscrollbar,
            s(:ivar, :@v_scroll)),
          s(:send,
            s(:const, nil, :TkGrid), :rowconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 1)),
              s(:pair,
                s(:str, "minsize"),
                s(:int, 0)))),
          s(:send,
            s(:const, nil, :TkGrid), :columnconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 1)),
              s(:pair,
                s(:str, "minsize"),
                s(:int, 0)))),
          s(:send,
            s(:ivar, :@component), :grid,
            s(:hash,
              s(:pair,
                s(:str, "row"),
                s(:int, 0)),
              s(:pair,
                s(:str, "column"),
                s(:int, 0)),
              s(:pair,
                s(:str, "sticky"),
                s(:str, "news")))),
          s(:send, nil, :vscroll,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "vscroll")),
              s(:args),
              s(:const,
                s(:send,
                  s(:self), :class), :DEFAULT_VSCROLL))),
          s(:send, nil, :hscroll,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "hscroll")),
              s(:args),
              s(:const,
                s(:send,
                  s(:self), :class), :DEFAULT_HSCROLL))),
          s(:send, nil, :define_delegates),
          s(:if,
            s(:send,
              s(:lvar, :keys), :empty?), nil,
            s(:send, nil, :configure,
              s(:lvar, :keys))))),
      s(:send, nil, :private,
        s(:sym, :initialize_composite)),
      s(:def, :get_scrollbarwidth,
        s(:args),
        s(:send,
          s(:ivar, :@v_scroll), :width)),
      s(:def, :set_scrollbarwidth,
        s(:args,
          s(:arg, :width)),
        s(:begin,
          s(:send,
            s(:ivar, :@v_scroll), :width,
            s(:lvar, :width)),
          s(:send,
            s(:ivar, :@h_scroll), :width,
            s(:lvar, :width)))),
      s(:alias,
        s(:sym, :scrollbarwidth),
        s(:sym, :set_scrollbarwidth)),
      s(:def, :hook_vscroll_on,
        s(:args,
          s(:restarg, :args)), nil),
      s(:def, :hook_vscroll_off,
        s(:args,
          s(:restarg, :args)), nil),
      s(:def, :hook_hscroll_on,
        s(:args,
          s(:restarg, :args)), nil),
      s(:def, :hook_hscroll_off,
        s(:args,
          s(:restarg, :args)), nil),
      s(:send, nil, :private,
        s(:sym, :hook_vscroll_on),
        s(:sym, :hook_vscroll_off),
        s(:sym, :hook_hscroll_on),
        s(:sym, :hook_hscroll_off)),
      s(:def, :vscroll,
        s(:args,
          s(:arg, :mode),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :st,
            s(:send,
              s(:const, nil, :TkGrid), :info,
              s(:ivar, :@v_scroll))),
          s(:if,
            s(:and,
              s(:lvar, :mode),
              s(:send,
                s(:send,
                  s(:lvar, :st), :size), :==,
                s(:int, 0))),
            s(:begin,
              s(:send,
                s(:ivar, :@v_scroll), :grid,
                s(:hash,
                  s(:pair,
                    s(:str, "row"),
                    s(:int, 0)),
                  s(:pair,
                    s(:str, "column"),
                    s(:int, 1)),
                  s(:pair,
                    s(:str, "sticky"),
                    s(:str, "ns")))),
              s(:send, nil, :hook_vscroll_on,
                s(:splat,
                  s(:lvar, :args)))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :mode), :!),
                s(:send,
                  s(:send,
                    s(:lvar, :st), :size), :!=,
                  s(:int, 0))),
              s(:begin,
                s(:send,
                  s(:ivar, :@v_scroll), :ungrid),
                s(:send, nil, :hook_vscroll_off,
                  s(:splat,
                    s(:lvar, :args)))), nil)),
          s(:self))),
      s(:def, :hscroll,
        s(:args,
          s(:arg, :mode),
          s(:restarg, :args)),
        s(:begin,
          s(:lvasgn, :st,
            s(:send,
              s(:const, nil, :TkGrid), :info,
              s(:ivar, :@h_scroll))),
          s(:if,
            s(:and,
              s(:lvar, :mode),
              s(:send,
                s(:send,
                  s(:lvar, :st), :size), :==,
                s(:int, 0))),
            s(:begin,
              s(:send,
                s(:ivar, :@h_scroll), :grid,
                s(:hash,
                  s(:pair,
                    s(:str, "row"),
                    s(:int, 1)),
                  s(:pair,
                    s(:str, "column"),
                    s(:int, 0)),
                  s(:pair,
                    s(:str, "sticky"),
                    s(:str, "ew")))),
              s(:send, nil, :hook_hscroll_on,
                s(:splat,
                  s(:lvar, :args)))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :mode), :!),
                s(:send,
                  s(:send,
                    s(:lvar, :st), :size), :!=,
                  s(:int, 0))),
              s(:begin,
                s(:send,
                  s(:ivar, :@h_scroll), :ungrid),
                s(:send, nil, :hook_hscroll_off,
                  s(:splat,
                    s(:lvar, :args)))), nil)),
          s(:self))))),
  s(:class,
    s(:const, nil, :TkTextFrame),
    s(:const, nil, :TkText),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Tk), :ScrollbarComposite)),
      s(:def, :create_component,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:ivasgn, :@text,
            s(:send,
              s(:const, nil, :TkText), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "wrap"),
                  s(:str, "none"))))),
          s(:if,
            s(:send,
              s(:lvar, :keys), :empty?), nil,
            s(:send,
              s(:ivar, :@text), :configure,
              s(:lvar, :keys))),
          s(:send, nil, :option_methods,
            s(:array,
              s(:sym, :textbackground),
              s(:nil),
              s(:sym, :textbg_info)),
            s(:sym, :textborderwidth),
            s(:sym, :textrelief)),
          s(:ivar, :@text))),
      s(:send, nil, :private,
        s(:sym, :create_component)),
      s(:def, :hook_hscroll_on,
        s(:args,
          s(:optarg, :wrap_mode,
            s(:nil))),
        s(:if,
          s(:lvar, :wrap_mode),
          s(:send, nil, :wrap,
            s(:lvar, :wrap_mode)),
          s(:send, nil, :wrap,
            s(:str, "none")))),
      s(:def, :hook_hscroll_off,
        s(:args,
          s(:arg, :wrap_mode)),
        s(:send, nil, :wrap,
          s(:lvar, :wrap_mode))),
      s(:def, :hscroll,
        s(:args,
          s(:arg, :mode),
          s(:optarg, :wrap_mode,
            s(:str, "char"))),
        s(:zsuper)),
      s(:def, :textbackground,
        s(:args,
          s(:optarg, :color,
            s(:nil))),
        s(:if,
          s(:lvar, :color),
          s(:send,
            s(:ivar, :@text), :background,
            s(:lvar, :color)),
          s(:send,
            s(:ivar, :@text), :background))),
      s(:def, :textbg_info,
        s(:args),
        s(:begin,
          s(:lvasgn, :info,
            s(:send,
              s(:ivar, :@text), :configinfo,
              s(:sym, :background))),
          s(:if,
            s(:const,
              s(:const, nil, :TkComm), :GET_CONFIGINFO_AS_ARRAY),
            s(:begin,
              s(:send,
                s(:lvar, :info), :[]=,
                s(:int, 0),
                s(:str, "textbackground")),
              s(:lvar, :info)),
            s(:hash,
              s(:pair,
                s(:str, "textbackground"),
                s(:send,
                  s(:lvar, :info), :[],
                  s(:str, "background"))))))),
      s(:def, :set_textborderwidth,
        s(:args,
          s(:arg, :width)),
        s(:send,
          s(:ivar, :@text), :borderwidth,
          s(:lvar, :width))),
      s(:def, :get_textborderwidth,
        s(:args),
        s(:send,
          s(:ivar, :@text), :borderwidth)),
      s(:def, :textborderwidth,
        s(:args,
          s(:optarg, :width,
            s(:nil))),
        s(:if,
          s(:lvar, :width),
          s(:send, nil, :set_textborderwidth,
            s(:lvar, :width)),
          s(:send, nil, :get_textborderwidth))),
      s(:def, :textrelief,
        s(:args,
          s(:arg, :type)),
        s(:send,
          s(:ivar, :@text), :relief,
          s(:lvar, :type))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:begin,
      s(:send,
        s(:send,
          s(:const, nil, :TkLabel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "TkTextFrame is an example of Tk::ScrollbarComposite module.")))), :pack),
      s(:lvasgn, :f,
        s(:send,
          s(:send,
            s(:const, nil, :TkFrame), :new), :pack,
          s(:hash,
            s(:pair,
              s(:str, "fill"),
              s(:str, "x"))))),
      s(:lvasgn, :t,
        s(:send,
          s(:send,
            s(:const, nil, :TkTextFrame), :new,
            s(:hash,
              s(:pair,
                s(:sym, :textborderwidth),
                s(:int, 3)),
              s(:pair,
                s(:sym, :textrelief),
                s(:sym, :ridge)),
              s(:pair,
                s(:sym, :scrollbarrelief),
                s(:sym, :ridge)))), :pack)),
      s(:send, nil, :p,
        s(:send,
          s(:lvar, :t), :configinfo)),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "vscr OFF")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :t), :vscroll,
                  s(:false)))))), :pack,
        s(:hash,
          s(:pair,
            s(:str, "side"),
            s(:str, "right")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "vscr ON")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :t), :vscroll,
                  s(:true)))))), :pack,
        s(:hash,
          s(:pair,
            s(:str, "side"),
            s(:str, "right")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "hscr ON")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :t), :hscroll,
                  s(:true)))))), :pack,
        s(:hash,
          s(:pair,
            s(:str, "side"),
            s(:str, "left")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "hscr OFF")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :t), :hscroll,
                  s(:false)))))), :pack,
        s(:hash,
          s(:pair,
            s(:str, "side"),
            s(:str, "left")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkFrame), :new), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :pady),
            s(:int, 10)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkLabel), :new,
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "The following is another example of Tk::ScrollbarComposite module.")))), :pack),
      s(:class,
        s(:const, nil, :ScrListbox),
        s(:const, nil, :TkListbox),
        s(:begin,
          s(:send, nil, :include,
            s(:const,
              s(:const, nil, :Tk), :ScrollbarComposite)),
          s(:casgn, nil, :DEFAULT_HSCROLL,
            s(:false)),
          s(:def, :create_component,
            s(:args,
              s(:optarg, :keys,
                s(:hash))),
            s(:send,
              s(:const, nil, :TkListbox), :new,
              s(:ivar, :@frame),
              s(:lvar, :keys))),
          s(:send, nil, :private,
            s(:sym, :create_component)))),
      s(:lvasgn, :f,
        s(:send,
          s(:send,
            s(:const, nil, :TkFrame), :new), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :pady),
              s(:int, 5))))),
      s(:lvasgn, :lbox,
        s(:send,
          s(:send,
            s(:const, nil, :ScrListbox), :new,
            s(:lvar, :f)), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :side),
              s(:sym, :left))))),
      s(:send,
        s(:lvar, :lbox), :value=,
        s(:array,
          s(:str, "aa"),
          s(:str, "bb"),
          s(:str, "cc"),
          s(:str, "dd"),
          s(:str, "eeeeeeeeeeeeeeeeeeeeeeeeee"),
          s(:str, "ffffffffff"),
          s(:str, "gg"),
          s(:str, "hh"),
          s(:str, "ii"),
          s(:str, "jj"),
          s(:str, "kk"),
          s(:str, "ll"),
          s(:str, "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm"),
          s(:str, "nn"),
          s(:str, "oo"),
          s(:str, "pp"),
          s(:str, "qq"))),
      s(:lvasgn, :fb,
        s(:send,
          s(:send,
            s(:const, nil, :TkFrame), :new,
            s(:lvar, :f)), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :expand),
              s(:true)),
            s(:pair,
              s(:sym, :fill),
              s(:sym, :y)),
            s(:pair,
              s(:sym, :padx),
              s(:int, 5))))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :fb),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "lbox hscr OFF")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :lbox), :hscroll,
                  s(:false)))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :fb),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "lbox hscr ON")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :lbox), :hscroll,
                  s(:true)))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkFrame), :new,
          s(:lvar, :fb)), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :pady),
            s(:int, 5)),
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :fb),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "lbox vscr OFF")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :lbox), :vscroll,
                  s(:false)))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :fb),
          s(:hash,
            s(:pair,
              s(:str, "text"),
              s(:str, "lbox vscr ON")),
            s(:pair,
              s(:str, "command"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :lbox), :vscroll,
                  s(:true)))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))),
      s(:send,
        s(:const, nil, :Tk), :mainloop)), nil))
