s(:begin,
  s(:def, :rulerMkTab,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_rulerInfo)),
      s(:send,
        s(:const, nil, :TkcPolygon), :new,
        s(:lvar, :c),
        s(:lvar, :x),
        s(:lvar, :y),
        s(:send,
          s(:lvar, :x), :+,
          s(:send,
            s(:lvar, :v), :size)),
        s(:send,
          s(:lvar, :y), :+,
          s(:send,
            s(:lvar, :v), :size)),
        s(:send,
          s(:lvar, :x), :-,
          s(:send,
            s(:lvar, :v), :size)),
        s(:send,
          s(:lvar, :y), :+,
          s(:send,
            s(:lvar, :v), :size))))),
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$ruler_demo)),
      s(:gvar, :$ruler_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$ruler_demo), :destroy),
      s(:gvasgn, :$ruler_demo,
        s(:nil))), nil),
  s(:gvasgn, :$ruler_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Ruler Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "ruler")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$ruler_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:block,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:str, "font"),
          s(:gvar, :$font)),
        s(:pair,
          s(:str, "wraplength"),
          s(:str, "5i")),
        s(:pair,
          s(:str, "justify"),
          s(:str, "left")),
        s(:pair,
          s(:str, "text"),
          s(:str, "このキャンバスwidgetはルーラーの模型です。ルーラーの右にあるのはタブストップの井戸で、ここから引っ張ってくることによってタブストップを作ることができます。また、すでにあるタブストップを動かすこともできます。タブストップを上方または下方にかすれて表示されるまでドラッグすると、マウスボタンを離した時にそのタブストップは消えます。")))),
    s(:args),
    s(:send, nil, :pack,
      s(:hash,
        s(:pair,
          s(:str, "side"),
          s(:str, "top"))))),
  s(:gvasgn, :$ruler_buttons,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "閉じる")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$ruler_demo)),
                    s(:gvasgn, :$ruler_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "コード参照")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "ruler")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes"))))))),
  s(:send,
    s(:gvar, :$ruler_buttons), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:gvasgn, :$ruler_canvas,
    s(:send,
      s(:const, nil, :TkCanvas), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:str, "width"),
          s(:str, "14.8c")),
        s(:pair,
          s(:str, "height"),
          s(:str, "2.5c"))))),
  s(:send,
    s(:gvar, :$ruler_canvas), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")))),
  s(:if,
    s(:send,
      s(:const, nil, :Struct), :const_defined?,
      s(:str, "RulerInfo")), nil,
    s(:gvasgn, :$demo_rulerInfo,
      s(:send,
        s(:send,
          s(:const, nil, :Struct), :new,
          s(:str, "RulerInfo"),
          s(:sym, :grid),
          s(:sym, :left),
          s(:sym, :right),
          s(:sym, :x),
          s(:sym, :y),
          s(:sym, :top),
          s(:sym, :bottom),
          s(:sym, :size),
          s(:sym, :normalStyle),
          s(:sym, :activeStyle),
          s(:sym, :deleteStyle)), :new))),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :grid=,
    s(:str, ".25c")),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :left=,
    s(:send,
      s(:const, nil, :TkWinfo), :fpixels,
      s(:gvar, :$ruler_canvas),
      s(:str, "1c"))),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :right=,
    s(:send,
      s(:const, nil, :TkWinfo), :fpixels,
      s(:gvar, :$ruler_canvas),
      s(:str, "13c"))),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :top=,
    s(:send,
      s(:const, nil, :TkWinfo), :fpixels,
      s(:gvar, :$ruler_canvas),
      s(:str, "1c"))),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :bottom=,
    s(:send,
      s(:const, nil, :TkWinfo), :fpixels,
      s(:gvar, :$ruler_canvas),
      s(:str, "1.5c"))),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :size=,
    s(:send,
      s(:const, nil, :TkWinfo), :fpixels,
      s(:gvar, :$ruler_canvas),
      s(:str, ".2c"))),
  s(:send,
    s(:gvar, :$demo_rulerInfo), :normalStyle=,
    s(:hash,
      s(:pair,
        s(:str, "fill"),
        s(:str, "black")))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :TkWinfo), :depth,
        s(:gvar, :$ruler_canvas)), :>,
      s(:int, 1)),
    s(:begin,
      s(:send,
        s(:gvar, :$demo_rulerInfo), :activeStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "red")),
          s(:pair,
            s(:str, "stipple"),
            s(:str, "")))),
      s(:send,
        s(:gvar, :$demo_rulerInfo), :deleteStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "red")),
          s(:pair,
            s(:str, "stipple"),
            s(:send,
              s(:str, "@"), :+,
              s(:send,
                s(:array,
                  s(:gvar, :$demo_dir),
                  s(:str, ".."),
                  s(:str, "images"),
                  s(:str, "gray25.xbm")), :join,
                s(:const,
                  s(:const, nil, :File), :Separator))))))),
    s(:begin,
      s(:send,
        s(:gvar, :$demo_rulerInfo), :activeStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "black")),
          s(:pair,
            s(:str, "stipple"),
            s(:str, "")))),
      s(:send,
        s(:gvar, :$demo_rulerInfo), :deleteStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "black")),
          s(:pair,
            s(:str, "stipple"),
            s(:send,
              s(:str, "@"), :+,
              s(:send,
                s(:array,
                  s(:gvar, :$demo_dir),
                  s(:str, ".."),
                  s(:str, "images"),
                  s(:str, "gray25.xbm")), :join,
                s(:const,
                  s(:const, nil, :File), :Separator)))))))),
  s(:send,
    s(:const, nil, :TkcLine), :new,
    s(:gvar, :$ruler_canvas),
    s(:str, "1c"),
    s(:str, "0.5c"),
    s(:str, "1c"),
    s(:str, "1c"),
    s(:str, "13c"),
    s(:str, "1c"),
    s(:str, "13c"),
    s(:str, "0.5c"),
    s(:hash,
      s(:pair,
        s(:str, "width"),
        s(:int, 1)))),
  s(:block,
    s(:send,
      s(:begin,
        s(:irange,
          s(:int, 0),
          s(:int, 11))), :each),
    s(:args,
      s(:arg, :i)),
    s(:begin,
      s(:lvasgn, :x,
        s(:send,
          s(:lvar, :i), :+,
          s(:int, 1))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:gvar, :$ruler_canvas),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, "c")),
        s(:str, "1c"),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, "c")),
        s(:str, "0.6c"),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:gvar, :$ruler_canvas),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".25c")),
        s(:str, "1c"),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".25c")),
        s(:str, "0.8c"),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:gvar, :$ruler_canvas),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".5c")),
        s(:str, "1c"),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".5c")),
        s(:str, "0.7c"),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:gvar, :$ruler_canvas),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".75c")),
        s(:str, "1c"),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".75c")),
        s(:str, "0.8c"),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:gvar, :$ruler_canvas),
        s(:dstr,
          s(:begin,
            s(:lvar, :x)),
          s(:str, ".15c")),
        s(:str, "0.75c"),
        s(:hash,
          s(:pair,
            s(:str, "text"),
            s(:lvar, :i)),
          s(:pair,
            s(:str, "anchor"),
            s(:str, "sw")))))),
  s(:gvasgn, :$rulerTag_well,
    s(:send,
      s(:const, nil, :TkcTag), :new,
      s(:gvar, :$ruler_canvas))),
  s(:send,
    s(:gvar, :$ruler_canvas), :addtag_withtag,
    s(:gvar, :$rulerTag_well),
    s(:send,
      s(:const, nil, :TkcRectangle), :new,
      s(:gvar, :$ruler_canvas),
      s(:str, "13.2c"),
      s(:str, "1c"),
      s(:str, "13.8c"),
      s(:str, "0.5c"),
      s(:hash,
        s(:pair,
          s(:str, "outline"),
          s(:str, "black")),
        s(:pair,
          s(:str, "fill"),
          s(:send,
            s(:begin,
              s(:send,
                s(:gvar, :$ruler_canvas), :configinfo,
                s(:str, "background"))), :[],
            s(:int, 4)))))),
  s(:send,
    s(:gvar, :$ruler_canvas), :addtag_withtag,
    s(:gvar, :$rulerTag_well),
    s(:send, nil, :rulerMkTab,
      s(:gvar, :$ruler_canvas),
      s(:send,
        s(:const, nil, :TkWinfo), :pixels,
        s(:gvar, :$ruler_canvas),
        s(:str, "13.5c")),
      s(:send,
        s(:const, nil, :TkWinfo), :pixels,
        s(:gvar, :$ruler_canvas),
        s(:str, ".65c")))),
  s(:send,
    s(:gvar, :$rulerTag_well), :bind,
    s(:str, "1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :x),
        s(:arg, :y)),
      s(:send, nil, :rulerNewTab,
        s(:gvar, :$ruler_canvas),
        s(:lvar, :x),
        s(:lvar, :y))),
    s(:str, "%x %y")),
  s(:send,
    s(:gvar, :$ruler_canvas), :itembind,
    s(:str, "tab"),
    s(:str, "1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :x),
        s(:arg, :y)),
      s(:send, nil, :rulerSelectTab,
        s(:gvar, :$ruler_canvas),
        s(:lvar, :x),
        s(:lvar, :y))),
    s(:str, "%x %y")),
  s(:send,
    s(:gvar, :$ruler_canvas), :bind,
    s(:str, "B1-Motion"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :x),
        s(:arg, :y)),
      s(:send, nil, :rulerMoveTab,
        s(:gvar, :$ruler_canvas),
        s(:lvar, :x),
        s(:lvar, :y))),
    s(:str, "%x %y")),
  s(:send,
    s(:gvar, :$ruler_canvas), :bind,
    s(:str, "Any-ButtonRelease-1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :rulerReleaseTab,
        s(:gvar, :$ruler_canvas)))),
  s(:def, :rulerNewTab,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_rulerInfo)),
      s(:send,
        s(:lvar, :c), :addtag_withtag,
        s(:str, "active"),
        s(:send, nil, :rulerMkTab,
          s(:lvar, :c),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:send,
        s(:lvar, :c), :addtag_withtag,
        s(:str, "tab"),
        s(:str, "active")),
      s(:send,
        s(:lvar, :v), :x=,
        s(:lvar, :x)),
      s(:send,
        s(:lvar, :v), :y=,
        s(:lvar, :y)),
      s(:send, nil, :rulerMoveTab,
        s(:lvar, :c),
        s(:lvar, :x),
        s(:lvar, :y)))),
  s(:def, :rulerSelectTab,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_rulerInfo)),
      s(:send,
        s(:lvar, :v), :x=,
        s(:send,
          s(:lvar, :c), :canvasx,
          s(:lvar, :x),
          s(:send,
            s(:lvar, :v), :grid))),
      s(:send,
        s(:lvar, :v), :y=,
        s(:send,
          s(:send,
            s(:lvar, :v), :top), :+,
          s(:int, 2))),
      s(:send,
        s(:lvar, :c), :addtag_withtag,
        s(:str, "active"),
        s(:str, "current")),
      s(:send,
        s(:lvar, :c), :itemconfigure,
        s(:str, "active"),
        s(:send,
          s(:lvar, :v), :activeStyle)),
      s(:send,
        s(:lvar, :c), :raise,
        s(:str, "active")))),
  s(:def, :rulerMoveTab,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_rulerInfo)),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :c), :find_withtag,
            s(:str, "active")), :==,
          s(:array)),
        s(:return), nil),
      s(:lvasgn, :cx,
        s(:send,
          s(:lvar, :c), :canvasx,
          s(:lvar, :x),
          s(:send,
            s(:lvar, :v), :grid))),
      s(:lvasgn, :cy,
        s(:send,
          s(:lvar, :c), :canvasy,
          s(:lvar, :y))),
      s(:if,
        s(:send,
          s(:lvar, :cx), :<,
          s(:send,
            s(:lvar, :v), :left)),
        s(:lvasgn, :cx,
          s(:send,
            s(:lvar, :v), :left)), nil),
      s(:if,
        s(:send,
          s(:lvar, :cx), :>,
          s(:send,
            s(:lvar, :v), :right)),
        s(:lvasgn, :cx,
          s(:send,
            s(:lvar, :v), :right)), nil),
      s(:if,
        s(:begin,
          s(:and,
            s(:send,
              s(:lvar, :cy), :>=,
              s(:send,
                s(:lvar, :v), :top)),
            s(:send,
              s(:lvar, :cy), :<=,
              s(:send,
                s(:lvar, :v), :bottom)))),
        s(:begin,
          s(:lvasgn, :cy,
            s(:send,
              s(:send,
                s(:lvar, :v), :top), :+,
              s(:int, 2))),
          s(:send,
            s(:lvar, :c), :itemconfigure,
            s(:str, "active"),
            s(:send,
              s(:lvar, :v), :activeStyle))),
        s(:begin,
          s(:lvasgn, :cy,
            s(:send,
              s(:send,
                s(:lvar, :cy), :-,
                s(:send,
                  s(:lvar, :v), :size)), :-,
              s(:int, 2))),
          s(:send,
            s(:lvar, :c), :itemconfigure,
            s(:str, "active"),
            s(:send,
              s(:lvar, :v), :deleteStyle)))),
      s(:send,
        s(:lvar, :c), :move,
        s(:str, "active"),
        s(:send,
          s(:lvar, :cx), :-,
          s(:send,
            s(:lvar, :v), :x)),
        s(:send,
          s(:lvar, :cy), :-,
          s(:send,
            s(:lvar, :v), :y))),
      s(:send,
        s(:lvar, :v), :x=,
        s(:lvar, :cx)),
      s(:send,
        s(:lvar, :v), :y=,
        s(:lvar, :cy)))),
  s(:def, :rulerReleaseTab,
    s(:args,
      s(:arg, :c)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_rulerInfo)),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :c), :find_withtag,
            s(:str, "active")), :==,
          s(:array)),
        s(:return), nil),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :!=,
          s(:send,
            s(:send,
              s(:lvar, :v), :top), :+,
            s(:int, 2))),
        s(:send,
          s(:lvar, :c), :delete,
          s(:str, "active")),
        s(:begin,
          s(:send,
            s(:lvar, :c), :itemconfigure,
            s(:str, "active"),
            s(:send,
              s(:lvar, :v), :normalStyle)),
          s(:send,
            s(:lvar, :c), :dtag,
            s(:str, "active")))))))
