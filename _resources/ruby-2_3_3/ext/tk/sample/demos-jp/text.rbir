s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$text_demo)),
      s(:gvar, :$text_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$text_demo), :destroy),
      s(:gvasgn, :$text_demo,
        s(:nil))), nil),
  s(:gvasgn, :$text_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Text Demonstration - Basic Facilities")),
        s(:send, nil, :iconname,
          s(:str, "text")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$text_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:if,
    s(:begin,
      s(:send,
        s(:begin,
          s(:send,
            s(:block,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Tk), :TK_VERSION), :split,
                  s(:str, ".")), :collect),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:lvar, :n), :to_i)), :<=>,
            s(:array,
              s(:int, 8),
              s(:int, 4)))), :<,
        s(:int, 0))),
    s(:lvasgn, :undo_support,
      s(:false)),
    s(:lvasgn, :undo_support,
      s(:true))),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "閉じる")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$text_demo)),
                    s(:gvasgn, :$text_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "コード参照")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "text")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))))), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:block,
    s(:send,
      s(:const, nil, :TkText), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :t)),
    s(:begin,
      s(:send, nil, :relief,
        s(:str, "sunken")),
      s(:send, nil, :bd,
        s(:int, 2)),
      s(:send, nil, :setgrid,
        s(:int, 1)),
      s(:send, nil, :height,
        s(:int, 30)),
      s(:block,
        s(:send,
          s(:const, nil, :TkScrollbar), :new,
          s(:lvar, :base_frame)),
        s(:args,
          s(:arg, :s)),
        s(:begin,
          s(:send, nil, :pack,
            s(:hash,
              s(:pair,
                s(:str, "side"),
                s(:str, "right")),
              s(:pair,
                s(:str, "fill"),
                s(:str, "y")))),
          s(:send, nil, :command,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:restarg, :args)),
              s(:send,
                s(:lvar, :t), :yview,
                s(:splat,
                  s(:lvar, :args))))),
          s(:send,
            s(:lvar, :t), :yscrollcommand,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :first),
                s(:arg, :last)),
              s(:send,
                s(:lvar, :s), :set,
                s(:lvar, :first),
                s(:lvar, :last)))))),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:str, "expand"),
            s(:str, "yes")),
          s(:pair,
            s(:str, "fill"),
            s(:str, "both")))),
      s(:send, nil, :insert,
        s(:str, "0.0"),
        s(:dstr,
          s(:str, "このウィンドウはテキスト widget です。1行またはそれ以上のテキストを表\n"),
          s(:str, "示・編集することができます。以下はテキスト widget でできる操作について\n"),
          s(:str, "まとめたものです。\n"),
          s(:str, "\n"),
          s(:str, "1. スクロール。スクロールバーでテキストの表示部分を動かすことができます。\n"),
          s(:str, "\n"),
          s(:str, "2. スキャニング。テキストのウィンドウでマウスボタン2 (中ボタンを) を押\n"),
          s(:str, "して上下にドラッグしてください。そうするとテキストが高速でドラッグされ、\n"),
          s(:str, "内容をざっと眺めることができます。\n"),
          s(:str, "\n"),
          s(:str, "3. テキストの挿入。マウスボタン1 (左ボタン) を押し、挿入カーソルをセッ\n"),
          s(:str, "トしてからテキストを入力してください。入力したものが widget に入ります。\n"),
          s(:str, "\n"),
          s(:str, "4. 選択。ある範囲の文字を選択するにはマウスボタン1 を押し、ドラッグし\n"),
          s(:str, "てください。一度ボタンを離したら、シフトキーを押しながらボタン1 を押す\n"),
          s(:str, "ことで選択範囲の調整ができます。これは選択範囲の最後をマウスカーソルに\n"),
          s(:str, "最も近い位置にリセットし、ボタンを離す前にマウスをドラッグすることでさ\n"),
          s(:str, "らに選択範囲を調整できます。ダブルクリックでワードを、またトリプルクリッ\n"),
          s(:str, "クで行全体を選択することができます。\n"),
          s(:str, "\n"),
          s(:str, "5. 消去と置換。テキストを消去するには、消去したい文字を選択してバック\n"),
          s(:str, "スペースかデリートキーを入力してください。あるいは、新しいテキストを\n"),
          s(:str, "入力すると選択されたテキストと置換されます。\n"),
          s(:str, "\n"),
          s(:str, "6. 選択部分のコピー。選択部分をこのウィンドウの中のどこかにコピーする\n"),
          s(:str, "には、まずコピーしたい所を選択(ここで、あるいは別のアプリケーションで)\n"),
          s(:str, "し、ボタン 2 をクリックして、挿入カーソルの位置にコピーしてください。\n"),
          s(:str, "\n"),
          s(:str, "7. 編集。テキスト widget は Emacs のキーバインドに加えて標準的なの Motif\n"),
          s(:str, "の編集機能をサポートしています。バックスペースとコントロール-H は挿入\n"),
          s(:str, "カーソルの左側の文字を削除します。デリートキーとコントロール-D は挿入\n"),
          s(:str, "カーソルの右側の文字を削除します。Meta-バックスペースは挿入カーソルの\n"),
          s(:str, "右側の単語を削除し、Meta-D は挿入カーソルの左側の単語を削除します。\n"),
          s(:str, "コントロール-K は挿入カーソルから行末までを削除し、その位置に改行\n"),
          s(:str, "しかなかった場合は、改行を削除します。"),
          s(:begin,
            s(:if,
              s(:lvar, :undo_support),
              s(:begin,
                s(:lvasgn, :undo_text,
                  s(:str, "Control-z は最後に行った変更の取り消し(undo)を行い、")),
                s(:case,
                  s(:send,
                    s(:gvar, :$tk_platform), :[],
                    s(:str, "platform")),
                  s(:when,
                    s(:str, "unix"),
                    s(:str, "macintosh"),
                    s(:send,
                      s(:lvar, :undo_text), :<<,
                      s(:str, "Control-Shift-z"))),
                  s(:send,
                    s(:lvar, :undo_text), :<<,
                    s(:str, "Control-y"))),
                s(:send,
                  s(:lvar, :undo_text), :<<,
                  s(:str, "はundoした変更の再適用(redo)を行います。"))),
              s(:str, ""))),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "\n"),
          s(:str, "8. ウィンドウのリサイズ。この widget は \"setGrid\" オプションをオンにし\n"),
          s(:str, "てありますので、ウィンドウをリサイズする時には高さと幅は常に文字高と文\n"),
          s(:str, "字幅の整数倍になります。また、ウィンドウを狭くした場合には長い行が自動\n"),
          s(:str, "的に折り返され、常に全ての内容が見えるようになっています。\n"))),
      s(:send, nil, :set_insert,
        s(:str, "0.0")))))
