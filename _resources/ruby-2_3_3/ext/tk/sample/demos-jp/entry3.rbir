s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$entry3_demo)),
      s(:gvar, :$entry3_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$entry3_demo), :destroy),
      s(:gvasgn, :$entry3_demo,
        s(:nil))), nil),
  s(:gvasgn, :$entry3_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Constrained Entry Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "entry3")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$entry3_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :font),
          s(:gvar, :$font)),
        s(:pair,
          s(:sym, :wraplength),
          s(:str, "5i")),
        s(:pair,
          s(:sym, :justify),
          s(:sym, :left)),
        s(:pair,
          s(:sym, :text),
          s(:str, "以下には４種類のエントリボックスが表示されています．各エントリボックスは，\nマウスクリックで選択し文字を打ち込むことが可能ですが，それぞれがどのような\n入力を受け付けることができるかには制約が設けられています．\n一つめのエントリボックスは整数と見なされる文字列か入力文字がない空の状態か\nの場合だけを受け付け，問題がある場合はエントリボックスが点滅します\n（フォーカスが去る時にチェックされます）．\n二つめのエントリボックスは，入力された文字列の長さが\n１０文字未満の場合だけを受け付け，制限を越えて書き込もうとしたときには\nベルを鳴らして知らせます．\n三つめは米国の電話番号を受け付けるエントリボックスです．\nアルファベットは，電話機のダイヤル上で対応づけられている数字に変換されます．\n不適切な文字が入力されたり数字以外の文字の位置に数字を入力しようとしたり\nした場合には警告のベルが鳴ります．\n四つめのエントリボックスは，８文字までの入力を受け付ける\nパスワードフィールドです（８文字以上は特に警告を出すことなく無視されます）．\n入力された文字はアスタリスク記号に置き換えて表示されます．\n")))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :side),
        s(:sym, :top)))),
  s(:block,
    s(:send,
      s(:const, nil, :TkFrame), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :f)),
    s(:begin,
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :pady),
            s(:str, "2m")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "閉じる")),
            s(:pair,
              s(:sym, :width),
              s(:int, 15)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:gvar, :$entry3_demo), :destroy),
                  s(:gvasgn, :$entry3_demo,
                    s(:nil))))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "コード参照")),
            s(:pair,
              s(:sym, :width),
              s(:int, 15)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :showCode,
                  s(:str, "entry3")))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))))),
  s(:def, :focusAndFlash,
    s(:args,
      s(:arg, :widget),
      s(:arg, :fg),
      s(:arg, :bg),
      s(:optarg, :count,
        s(:int, 5))),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :count), :<=,
          s(:int, 0)),
        s(:return), nil),
      s(:if,
        s(:and,
          s(:and,
            s(:and,
              s(:lvar, :fg),
              s(:send,
                s(:send,
                  s(:lvar, :fg), :empty?), :!)),
            s(:lvar, :bg)),
          s(:send,
            s(:send,
              s(:lvar, :bg), :empty?), :!)),
        s(:send,
          s(:send,
            s(:const, nil, :TkTimer), :new,
            s(:int, 200),
            s(:lvar, :count),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:lvar, :widget), :configure,
                s(:hash,
                  s(:pair,
                    s(:sym, :foreground),
                    s(:lvar, :bg)),
                  s(:pair,
                    s(:sym, :background),
                    s(:lvar, :fg))))),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:lvar, :widget), :configure,
                s(:hash,
                  s(:pair,
                    s(:sym, :foreground),
                    s(:lvar, :fg)),
                  s(:pair,
                    s(:sym, :background),
                    s(:lvar, :bg)))))), :start),
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :bell),
          s(:send,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TkTimer), :new,
                  s(:int, 200),
                  s(:lvar, :count),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :widget), :configure,
                      s(:hash,
                        s(:pair,
                          s(:sym, :foreground),
                          s(:str, "white")),
                        s(:pair,
                          s(:sym, :background),
                          s(:str, "black"))))),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :widget), :configure,
                      s(:hash,
                        s(:pair,
                          s(:sym, :foreground),
                          s(:str, "black")),
                        s(:pair,
                          s(:sym, :background),
                          s(:str, "white")))))), :at_end),
              s(:args),
              s(:kwbegin,
                s(:rescue,
                  s(:send,
                    s(:lvar, :widget), :configure,
                    s(:hash,
                      s(:pair,
                        s(:sym, :foreground),
                        s(:lvar, :fg)),
                      s(:pair,
                        s(:sym, :background),
                        s(:lvar, :bg)))),
                  s(:resbody, nil, nil, nil), nil))), :start))),
      s(:send,
        s(:lvar, :widget), :focus,
        s(:true)))),
  s(:lvasgn, :l1,
    s(:send,
      s(:const, nil, :TkLabelFrame), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "整数エントリ"))))),
  s(:block,
    s(:send,
      s(:const, nil, :TkEntry), :new,
      s(:lvar, :l1),
      s(:hash,
        s(:pair,
          s(:sym, :validate),
          s(:sym, :focus)),
        s(:pair,
          s(:sym, :vcmd),
          s(:array,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :s)),
              s(:or,
                s(:send,
                  s(:lvar, :s), :==,
                  s(:str, "")),
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^[+-]?\\d+$"),
                    s(:regopt)),
                  s(:lvar, :s)))),
            s(:str, "%P"))))),
    s(:args,
      s(:arg, :e)),
    s(:begin,
      s(:lvasgn, :fg,
        s(:send,
          s(:lvar, :e), :foreground)),
      s(:lvasgn, :bg,
        s(:send,
          s(:lvar, :e), :background)),
      s(:send, nil, :invalidcommand,
        s(:array,
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :w)),
            s(:send, nil, :focusAndFlash,
              s(:lvar, :w),
              s(:lvar, :fg),
              s(:lvar, :bg))),
          s(:str, "%W"))),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :padx),
            s(:str, "1m")),
          s(:pair,
            s(:sym, :pady),
            s(:str, "1m")))))),
  s(:lvasgn, :l2,
    s(:send,
      s(:const, nil, :TkLabelFrame), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "長さ制約付きエントリ"))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkEntry), :new,
      s(:lvar, :l2),
      s(:hash,
        s(:pair,
          s(:sym, :validate),
          s(:sym, :key)),
        s(:pair,
          s(:sym, :invcmd),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:const, nil, :Tk), :bell))),
        s(:pair,
          s(:sym, :vcmd),
          s(:array,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:send,
                  s(:lvar, :s), :length), :<,
                s(:int, 10))),
            s(:str, "%P"))))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :fill),
        s(:sym, :x)),
      s(:pair,
        s(:sym, :expand),
        s(:true)),
      s(:pair,
        s(:sym, :padx),
        s(:str, "1m")),
      s(:pair,
        s(:sym, :pady),
        s(:str, "1m")))),
  s(:lvasgn, :entry3content,
    s(:send,
      s(:const, nil, :TkVariable), :new,
      s(:str, "1-(000)-000-0000"))),
  s(:gvasgn, :$phoneNumberMap,
    s(:hash)),
  s(:block,
    s(:send,
      s(:send,
        s(:const, nil, :Hash), :[],
        s(:splat,
          s(:begin,
            s(:array,
              s(:str, "abc"),
              s(:str, "2"),
              s(:str, "def"),
              s(:str, "3"),
              s(:str, "ghi"),
              s(:str, "4"),
              s(:str, "jkl"),
              s(:str, "5"),
              s(:str, "mno"),
              s(:str, "6"),
              s(:str, "pqrs"),
              s(:str, "7"),
              s(:str, "tuv"),
              s(:str, "8"),
              s(:str, "wxyz"),
              s(:str, "9"))))), :each),
    s(:args,
      s(:arg, :chars),
      s(:arg, :n)),
    s(:block,
      s(:send,
        s(:send,
          s(:lvar, :chars), :split,
          s(:str, "")), :each),
      s(:args,
        s(:arg, :c)),
      s(:begin,
        s(:send,
          s(:gvar, :$phoneNumberMap), :[]=,
          s(:lvar, :c),
          s(:lvar, :n)),
        s(:send,
          s(:gvar, :$phoneNumberMap), :[]=,
          s(:send,
            s(:lvar, :c), :upcase),
          s(:lvar, :n))))),
  s(:def, :phoneSkipLeft,
    s(:args,
      s(:arg, :widget)),
    s(:begin,
      s(:lvasgn, :idx,
        s(:send,
          s(:lvar, :widget), :index,
          s(:str, "insert"))),
      s(:if,
        s(:send,
          s(:lvar, :idx), :==,
          s(:int, 8)),
        s(:send,
          s(:lvar, :widget), :cursor=,
          s(:send,
            s(:lvar, :idx), :-,
            s(:int, 2))),
        s(:if,
          s(:or,
            s(:send,
              s(:lvar, :idx), :==,
              s(:int, 7)),
            s(:send,
              s(:lvar, :idx), :==,
              s(:int, 12))),
          s(:send,
            s(:lvar, :widget), :cursor=,
            s(:send,
              s(:lvar, :idx), :-,
              s(:int, 1))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :<=,
              s(:int, 3)),
            s(:begin,
              s(:send,
                s(:const, nil, :Tk), :bell),
              s(:send,
                s(:const, nil, :Tk), :callback_break)), nil))))),
  s(:def, :phoneSkipRight,
    s(:args,
      s(:arg, :widget),
      s(:optarg, :add,
        s(:int, 0))),
    s(:begin,
      s(:lvasgn, :idx,
        s(:send,
          s(:lvar, :widget), :index,
          s(:str, "insert"))),
      s(:if,
        s(:begin,
          s(:send,
            s(:send,
              s(:lvar, :idx), :+,
              s(:lvar, :add)), :==,
            s(:int, 5))),
        s(:send,
          s(:lvar, :widget), :cursor=,
          s(:send,
            s(:lvar, :idx), :+,
            s(:int, 2))),
        s(:if,
          s(:begin,
            s(:or,
              s(:send,
                s(:send,
                  s(:lvar, :idx), :+,
                  s(:lvar, :add)), :==,
                s(:int, 6)),
              s(:send,
                s(:send,
                  s(:lvar, :idx), :+,
                  s(:lvar, :add)), :==,
                s(:int, 10)))),
          s(:send,
            s(:lvar, :widget), :cursor=,
            s(:send,
              s(:lvar, :idx), :+,
              s(:int, 1))),
          s(:if,
            s(:begin,
              s(:and,
                s(:send,
                  s(:send,
                    s(:lvar, :idx), :+,
                    s(:lvar, :add)), :==,
                  s(:int, 15)),
                s(:send,
                  s(:lvar, :add), :==,
                  s(:int, 0)))),
            s(:begin,
              s(:send,
                s(:const, nil, :Tk), :bell),
              s(:send,
                s(:const, nil, :Tk), :callback_break)), nil))))),
  s(:def, :validatePhoneChange,
    s(:args,
      s(:arg, :widget),
      s(:arg, :vmode),
      s(:arg, :idx),
      s(:arg, :char)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :idx), :==,
          s(:nil)),
        s(:return,
          s(:true)), nil),
      s(:send,
        s(:const, nil, :Tk), :after_idle,
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:lvar, :widget), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :validate),
                s(:lvar, :vmode)),
              s(:pair,
                s(:sym, :invcmd),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:const, nil, :Tk), :bell))))))),
      s(:if,
        s(:and,
          s(:send,
            s(:begin,
              s(:or,
                s(:or,
                  s(:or,
                    s(:or,
                      s(:send,
                        s(:lvar, :idx), :<,
                        s(:int, 3)),
                      s(:send,
                        s(:lvar, :idx), :==,
                        s(:int, 6))),
                    s(:send,
                      s(:lvar, :idx), :==,
                      s(:int, 7))),
                  s(:send,
                    s(:lvar, :idx), :==,
                    s(:int, 11))),
                s(:send,
                  s(:lvar, :idx), :>,
                  s(:int, 15)))), :!),
          s(:send,
            s(:lvar, :char), :=~,
            s(:regexp,
              s(:str, "[0-9A-Za-z]"),
              s(:regopt)))),
        s(:begin,
          s(:send,
            s(:lvar, :widget), :delete,
            s(:lvar, :idx)),
          s(:send,
            s(:lvar, :widget), :insert,
            s(:lvar, :idx),
            s(:or,
              s(:send,
                s(:gvar, :$phoneNumberMap), :[],
                s(:lvar, :char)),
              s(:lvar, :char))),
          s(:send,
            s(:const, nil, :Tk), :after_idle,
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :phoneSkipRight,
                s(:lvar, :widget),
                s(:int, -1)))),
          s(:return,
            s(:true))), nil),
      s(:return,
        s(:false)))),
  s(:lvasgn, :l3,
    s(:send,
      s(:const, nil, :TkLabelFrame), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "米国電話番号エントリ"))))),
  s(:block,
    s(:send,
      s(:const, nil, :TkEntry), :new,
      s(:lvar, :l3),
      s(:hash,
        s(:pair,
          s(:sym, :validate),
          s(:sym, :key)),
        s(:pair,
          s(:sym, :invcmd),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:const, nil, :Tk), :bell))),
        s(:pair,
          s(:sym, :textvariable),
          s(:lvar, :entry3content)),
        s(:pair,
          s(:sym, :vcmd),
          s(:array,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :v),
                s(:arg, :i),
                s(:arg, :s)),
              s(:send, nil, :validatePhoneChange,
                s(:lvar, :w),
                s(:lvar, :v),
                s(:lvar, :i),
                s(:lvar, :s))),
            s(:str, "%W %v %i %S"))))),
    s(:args,
      s(:arg, :e)),
    s(:begin,
      s(:send, nil, :bind,
        s(:str, "FocusIn"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :d),
            s(:arg, :w)),
          s(:if,
            s(:send,
              s(:lvar, :d), :!=,
              s(:str, "NotifyAncestor")),
            s(:begin,
              s(:send,
                s(:lvar, :w), :cursor=,
                s(:int, 3)),
              s(:send,
                s(:const, nil, :Tk), :after_idle,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :w), :selection_clear)))), nil)),
        s(:str, "%d %W")),
      s(:send, nil, :bind,
        s(:str, "Left"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w)),
          s(:send, nil, :phoneSkipLeft,
            s(:lvar, :w))),
        s(:str, "%W")),
      s(:send, nil, :bind,
        s(:str, "Right"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :w)),
          s(:send, nil, :phoneSkipRight,
            s(:lvar, :w))),
        s(:str, "%W")),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :padx),
            s(:str, "1m")),
          s(:pair,
            s(:sym, :pady),
            s(:str, "1m")))))),
  s(:lvasgn, :l4,
    s(:send,
      s(:const, nil, :TkLabelFrame), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "パスワードエントリ"))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkEntry), :new,
      s(:lvar, :l4),
      s(:hash,
        s(:pair,
          s(:sym, :validate),
          s(:sym, :key)),
        s(:pair,
          s(:sym, :show),
          s(:str, "*")),
        s(:pair,
          s(:sym, :vcmd),
          s(:array,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:send,
                  s(:lvar, :s), :length), :<=,
                s(:int, 8))),
            s(:str, "%P"))))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :fill),
        s(:sym, :x)),
      s(:pair,
        s(:sym, :expand),
        s(:true)),
      s(:pair,
        s(:sym, :padx),
        s(:str, "1m")),
      s(:pair,
        s(:sym, :pady),
        s(:str, "1m")))),
  s(:block,
    s(:send,
      s(:const, nil, :TkFrame), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :f)),
    s(:begin,
      s(:send, nil, :lower),
      s(:send,
        s(:const, nil, :TkGrid), :configure,
        s(:lvar, :l1),
        s(:lvar, :l2),
        s(:hash,
          s(:pair,
            s(:sym, :in),
            s(:lvar, :f)),
          s(:pair,
            s(:sym, :padx),
            s(:str, "3m")),
          s(:pair,
            s(:sym, :pady),
            s(:str, "1m")),
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :ew)))),
      s(:send,
        s(:const, nil, :TkGrid), :configure,
        s(:lvar, :l3),
        s(:lvar, :l4),
        s(:hash,
          s(:pair,
            s(:sym, :in),
            s(:lvar, :f)),
          s(:pair,
            s(:sym, :padx),
            s(:str, "3m")),
          s(:pair,
            s(:sym, :pady),
            s(:str, "1m")),
          s(:pair,
            s(:sym, :sticky),
            s(:sym, :ew)))),
      s(:send,
        s(:const, nil, :TkGrid), :columnconfigure,
        s(:lvar, :f),
        s(:array,
          s(:int, 0),
          s(:int, 1)),
        s(:hash,
          s(:pair,
            s(:sym, :uniform),
            s(:int, 1)))),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))))))
