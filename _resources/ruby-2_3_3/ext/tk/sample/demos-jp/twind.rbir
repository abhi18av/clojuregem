s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$twind_demo)),
      s(:gvar, :$twind_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$twind_demo), :destroy),
      s(:gvasgn, :$twind_demo,
        s(:nil))), nil),
  s(:gvasgn, :$twind_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Text Demonstration - Embedded Windows")),
        s(:send, nil, :iconname,
          s(:str, "Embedded Windows")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$twind_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:gvasgn, :$twind_buttons,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "閉じる")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$twind_demo)),
                    s(:gvasgn, :$twind_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "コード参照")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "twind")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes"))))))),
  s(:send,
    s(:gvar, :$twind_buttons), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:gvasgn, :$twind_text,
    s(:nil)),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame),
        s(:hash,
          s(:pair,
            s(:str, "highlightthickness"),
            s(:int, 2)),
          s(:pair,
            s(:str, "borderwidth"),
            s(:int, 2)),
          s(:pair,
            s(:str, "relief"),
            s(:str, "sunken")))),
      s(:args,
        s(:arg, :f)),
      s(:gvasgn, :$twind_text,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkText), :new,
              s(:lvar, :f),
              s(:hash,
                s(:pair,
                  s(:str, "setgrid"),
                  s(:str, "true")),
                s(:pair,
                  s(:str, "font"),
                  s(:gvar, :$font)),
                s(:pair,
                  s(:str, "width"),
                  s(:str, "70")),
                s(:pair,
                  s(:str, "height"),
                  s(:int, 35)),
                s(:pair,
                  s(:str, "wrap"),
                  s(:str, "word")),
                s(:pair,
                  s(:str, "highlightthickness"),
                  s(:int, 0)),
                s(:pair,
                  s(:str, "borderwidth"),
                  s(:int, 0)))),
            s(:args,
              s(:arg, :t)),
            s(:send,
              s(:block,
                s(:send,
                  s(:const, nil, :TkScrollbar), :new,
                  s(:lvar, :f)),
                s(:args,
                  s(:arg, :s)),
                s(:begin,
                  s(:send, nil, :command,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:restarg, :args)),
                      s(:send,
                        s(:lvar, :t), :yview,
                        s(:splat,
                          s(:lvar, :args))))),
                  s(:send,
                    s(:lvar, :t), :yscrollcommand,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args,
                        s(:arg, :first),
                        s(:arg, :last)),
                      s(:send,
                        s(:lvar, :s), :set,
                        s(:lvar, :first),
                        s(:lvar, :last)))))), :pack,
              s(:hash,
                s(:pair,
                  s(:str, "side"),
                  s(:str, "right")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "y"))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")),
            s(:pair,
              s(:str, "fill"),
              s(:str, "both")))))), :pack,
    s(:hash,
      s(:pair,
        s(:str, "expand"),
        s(:str, "yes")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "both")))),
  s(:gvasgn, :$tag_center,
    s(:send,
      s(:const, nil, :TkTextTag), :new,
      s(:gvar, :$twind_text),
      s(:hash,
        s(:pair,
          s(:str, "justify"),
          s(:str, "center")),
        s(:pair,
          s(:str, "spacing1"),
          s(:str, "5m")),
        s(:pair,
          s(:str, "spacing3"),
          s(:str, "5m"))))),
  s(:gvasgn, :$tag_buttons,
    s(:send,
      s(:const, nil, :TkTextTag), :new,
      s(:gvar, :$twind_text),
      s(:hash,
        s(:pair,
          s(:str, "lmargin1"),
          s(:str, "1c")),
        s(:pair,
          s(:str, "lmargin2"),
          s(:str, "1c")),
        s(:pair,
          s(:str, "rmargin"),
          s(:str, "1c")),
        s(:pair,
          s(:str, "spacing1"),
          s(:str, "3m")),
        s(:pair,
          s(:str, "spacing2"),
          s(:int, 0)),
        s(:pair,
          s(:str, "spacing3"),
          s(:int, 0))))),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "テキストwidget上に他のwidgetを組み込むことができます。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "組み込みウィンドウと呼ばれ、任意のwidgetが可能です。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "例えば、ここに2つのボタンwidgetが組み込まれています。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "最初のボタンをクリックすと水平方向のスクロールを")),
  s(:send,
    s(:const, nil, :TkTextWindow), :new,
    s(:gvar, :$twind_text),
    s(:str, "end"),
    s(:hash,
      s(:pair,
        s(:str, "window"),
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:gvar, :$twind_text)),
          s(:args),
          s(:begin,
            s(:send, nil, :text,
              s(:str, "オン")),
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :textWindOn,
                  s(:gvar, :$twind_text),
                  s(:gvar, :$twind_buttons)))),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow"))))))),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "にします。また2つめのボタンをクリックすると\n")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "水平方向のスクロールを")),
  s(:send,
    s(:const, nil, :TkTextWindow), :new,
    s(:gvar, :$twind_text),
    s(:str, "end"),
    s(:hash,
      s(:pair,
        s(:str, "window"),
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:gvar, :$twind_text)),
          s(:args),
          s(:begin,
            s(:send, nil, :text,
              s(:str, "オフ")),
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :textWindOff,
                  s(:gvar, :$twind_text)))),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow"))))))),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "にします。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "もうひとつの例です。")),
  s(:send,
    s(:const, nil, :TkTextWindow), :new,
    s(:gvar, :$twind_text),
    s(:str, "end"),
    s(:hash,
      s(:pair,
        s(:str, "window"),
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:gvar, :$twind_text)),
          s(:args),
          s(:begin,
            s(:send, nil, :text,
              s(:str, "ここをクリック")),
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :textWindPlot,
                  s(:gvar, :$twind_text)))),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow"))))))),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "すると、x-yプロットがここに現れます。")),
  s(:gvasgn, :$mark_plot,
    s(:send,
      s(:const, nil, :TkTextMark), :new,
      s(:gvar, :$twind_text),
      s(:str, "insert"))),
  s(:send,
    s(:gvar, :$mark_plot), :gravity=,
    s(:str, "left")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "マウスでデータを描画することができます。")),
  s(:send,
    s(:const, nil, :TkTextWindow), :new,
    s(:gvar, :$twind_text),
    s(:str, "end"),
    s(:hash,
      s(:pair,
        s(:str, "window"),
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:gvar, :$twind_text)),
          s(:args),
          s(:begin,
            s(:send, nil, :text,
              s(:str, "消去")),
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :textWindDel,
                  s(:gvar, :$twind_text)))),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow"))))))),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:dstr,
      s(:str, "をクリックすると元に戻ります。\n"),
      s(:str, "\n"))),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "組み込みウィンドウだけをテキストwidget上に、実際の")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "テキストはなしで組み込むことは便利です。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "この場合は、テキストwidgetはウィンドウマネージャの")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "ように動作します。例えば、ここにはテキストwidgetに")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "よってボタンがきれいに並べられています。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "これらのボタンで背景色を変えることができます")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "(\"Default\"で元の色に戻すことができます)。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "\"Short\"というボタンをクリックすると文字列の長さが")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "変わります。すると自動的にテキストwidgetが")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:str, "レイアウトを整えてくれます。")),
  s(:send,
    s(:gvar, :$twind_text), :insert,
    s(:str, "end"),
    s(:dstr,
      s(:str, "もう一度同じボタンを押すと元に戻ります。\n"),
      s(:str, "\n"))),
  s(:send,
    s(:const, nil, :TkTextWindow), :new,
    s(:gvar, :$twind_text),
    s(:str, "end"),
    s(:hash,
      s(:pair,
        s(:str, "window"),
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:gvar, :$twind_text)),
          s(:args,
            s(:arg, :b)),
          s(:begin,
            s(:send, nil, :text,
              s(:str, "デフォルト")),
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :embDefBg,
                  s(:gvar, :$twind_text)))),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow")),
            s(:send,
              s(:gvar, :$tag_buttons), :add,
              s(:str, "end"))))),
      s(:pair,
        s(:str, "padx"),
        s(:int, 3)))),
  s(:lvasgn, :embToggle,
    s(:send,
      s(:const, nil, :TkVariable), :new,
      s(:str, "Short"))),
  s(:send,
    s(:const, nil, :TkTextWindow), :new,
    s(:gvar, :$twind_text),
    s(:str, "end"),
    s(:hash,
      s(:pair,
        s(:str, "window"),
        s(:block,
          s(:send,
            s(:const, nil, :TkCheckButton), :new,
            s(:gvar, :$twind_text)),
          s(:args),
          s(:begin,
            s(:send, nil, :textvariable,
              s(:lvar, :embToggle)),
            s(:send, nil, :indicatoron,
              s(:int, 0)),
            s(:send, nil, :variable,
              s(:lvar, :embToggle)),
            s(:send, nil, :onvalue,
              s(:str, "A much longer string")),
            s(:send, nil, :offvalue,
              s(:str, "Short")),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow")),
            s(:send, nil, :pady,
              s(:int, 5)),
            s(:send, nil, :padx,
              s(:int, 2))))),
      s(:pair,
        s(:str, "padx"),
        s(:int, 3)),
      s(:pair,
        s(:str, "pady"),
        s(:int, 2)))),
  s(:block,
    s(:send,
      s(:array,
        s(:str, "AntiqueWhite3"),
        s(:str, "Bisque1"),
        s(:str, "Bisque2"),
        s(:str, "Bisque3"),
        s(:str, "Bisque4"),
        s(:str, "SlateBlue3"),
        s(:str, "RoyalBlue1"),
        s(:str, "SteelBlue2"),
        s(:str, "DeepSkyBlue3"),
        s(:str, "LightBlue1"),
        s(:str, "DarkSlateGray1"),
        s(:str, "Aquamarine2"),
        s(:str, "DarkSeaGreen2"),
        s(:str, "SeaGreen1"),
        s(:str, "Yellow1"),
        s(:str, "IndianRed1"),
        s(:str, "IndianRed2"),
        s(:str, "Tan1"),
        s(:str, "Tan4")), :each),
    s(:args,
      s(:arg, :twind_color)),
    s(:send,
      s(:const, nil, :TkTextWindow), :new,
      s(:gvar, :$twind_text),
      s(:str, "end"),
      s(:hash,
        s(:pair,
          s(:str, "window"),
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:gvar, :$twind_text)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:lvar, :twind_color)),
              s(:send, nil, :cursor,
                s(:str, "top_left_arrow")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:gvar, :$twind_text), :bg,
                    s(:lvar, :twind_color))))))),
        s(:pair,
          s(:str, "padx"),
          s(:int, 3)),
        s(:pair,
          s(:str, "pady"),
          s(:int, 2))))),
  s(:def, :textWindOn,
    s(:args,
      s(:arg, :w),
      s(:arg, :f)),
    s(:begin,
      s(:if,
        s(:defined?,
          s(:gvar, :$twind_scroll)),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:gvar, :$twind_scroll), :destroy),
              s(:resbody, nil, nil, nil), nil)),
          s(:gvasgn, :$twind_scroll,
            s(:nil))), nil),
      s(:lvasgn, :base,
        s(:send,
          s(:const, nil, :TkWinfo), :parent,
          s(:send,
            s(:const, nil, :TkWinfo), :parent,
            s(:lvar, :w)))),
      s(:gvasgn, :$twind_scroll,
        s(:block,
          s(:send,
            s(:const, nil, :TkScrollbar), :new,
            s(:lvar, :base)),
          s(:args,
            s(:arg, :s)),
          s(:begin,
            s(:send, nil, :orient,
              s(:str, "horizontal")),
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:restarg, :args)),
                s(:send,
                  s(:lvar, :w), :xview,
                  s(:splat,
                    s(:lvar, :args))))),
            s(:send,
              s(:lvar, :w), :xscrollcommand,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :first),
                  s(:arg, :last)),
                s(:send,
                  s(:lvar, :s), :set,
                  s(:lvar, :first),
                  s(:lvar, :last)))),
            s(:send,
              s(:lvar, :w), :wrap,
              s(:str, "none")),
            s(:send, nil, :pack,
              s(:hash,
                s(:pair,
                  s(:str, "after"),
                  s(:lvar, :f)),
                s(:pair,
                  s(:str, "side"),
                  s(:str, "bottom")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "x"))))))),
      s(:return,
        s(:nil)))),
  s(:def, :textWindOff,
    s(:args,
      s(:arg, :w)),
    s(:begin,
      s(:if,
        s(:defined?,
          s(:gvar, :$twind_scroll)),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:gvar, :$twind_scroll), :destroy),
              s(:resbody, nil, nil, nil), nil)),
          s(:gvasgn, :$twind_scroll,
            s(:nil))), nil),
      s(:send,
        s(:lvar, :w), :xscrollcommand,
        s(:str, "")),
      s(:send,
        s(:lvar, :w), :wrap,
        s(:str, "word")))),
  s(:def, :textWindPlot,
    s(:args,
      s(:arg, :t)),
    s(:begin,
      s(:if,
        s(:and,
          s(:begin,
            s(:defined?,
              s(:gvar, :$twind_plot))),
          s(:begin,
            s(:send,
              s(:const, nil, :TkWinfo), :exist?,
              s(:gvar, :$twind_plot)))),
        s(:return), nil),
      s(:gvasgn, :$twind_plot,
        s(:block,
          s(:send,
            s(:const, nil, :TkCanvas), :new,
            s(:lvar, :t)),
          s(:args),
          s(:begin,
            s(:send, nil, :relief,
              s(:str, "sunken")),
            s(:send, nil, :width,
              s(:int, 450)),
            s(:send, nil, :height,
              s(:int, 300)),
            s(:send, nil, :cursor,
              s(:str, "top_left_arrow"))))),
      s(:if,
        s(:send,
          s(:gvar, :$tk_version), :=~,
          s(:regexp,
            s(:str, "^4.*"),
            s(:regopt))),
        s(:lvasgn, :font,
          s(:str, "-Adobe-Helvetica-Medium-R-Normal--*-180-*-*-*-*-*-*")),
        s(:lvasgn, :font,
          s(:str, "Helvetica 18"))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:gvar, :$twind_plot),
        s(:int, 100),
        s(:int, 250),
        s(:int, 400),
        s(:int, 250),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 2)))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:gvar, :$twind_plot),
        s(:int, 100),
        s(:int, 250),
        s(:int, 100),
        s(:int, 50),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 2)))),
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:gvar, :$twind_plot),
        s(:int, 225),
        s(:int, 20),
        s(:hash,
          s(:pair,
            s(:str, "text"),
            s(:str, "A Simple Plot")),
          s(:pair,
            s(:str, "font"),
            s(:lvar, :font)),
          s(:pair,
            s(:str, "fill"),
            s(:str, "brown")))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 0),
              s(:int, 10))), :each),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :x,
            s(:send,
              s(:int, 100), :+,
              s(:begin,
                s(:send,
                  s(:lvar, :i), :*,
                  s(:int, 30))))),
          s(:send,
            s(:const, nil, :TkcLine), :new,
            s(:gvar, :$twind_plot),
            s(:lvar, :x),
            s(:int, 250),
            s(:lvar, :x),
            s(:int, 245),
            s(:hash,
              s(:pair,
                s(:str, "width"),
                s(:int, 2)))),
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:gvar, :$twind_plot),
            s(:lvar, :x),
            s(:int, 254),
            s(:hash,
              s(:pair,
                s(:str, "text"),
                s(:send,
                  s(:int, 10), :*,
                  s(:lvar, :i))),
              s(:pair,
                s(:str, "font"),
                s(:lvar, :font)),
              s(:pair,
                s(:str, "anchor"),
                s(:str, "n")))))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 0),
              s(:int, 5))), :each),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :y,
            s(:send,
              s(:int, 250), :-,
              s(:begin,
                s(:send,
                  s(:lvar, :i), :*,
                  s(:int, 40))))),
          s(:send,
            s(:const, nil, :TkcLine), :new,
            s(:gvar, :$twind_plot),
            s(:int, 100),
            s(:lvar, :y),
            s(:int, 105),
            s(:lvar, :y),
            s(:hash,
              s(:pair,
                s(:str, "width"),
                s(:int, 2)))),
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:gvar, :$twind_plot),
            s(:int, 96),
            s(:lvar, :y),
            s(:hash,
              s(:pair,
                s(:str, "text"),
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:lvar, :i), :*,
                      s(:int, 50))),
                  s(:str, ".0"))),
              s(:pair,
                s(:str, "font"),
                s(:lvar, :font)),
              s(:pair,
                s(:str, "anchor"),
                s(:str, "e")))))),
      s(:for,
        s(:mlhs,
          s(:lvasgn, :xx),
          s(:lvasgn, :yy)),
        s(:array,
          s(:array,
            s(:int, 12),
            s(:int, 56)),
          s(:array,
            s(:int, 20),
            s(:int, 94)),
          s(:array,
            s(:int, 33),
            s(:int, 98)),
          s(:array,
            s(:int, 32),
            s(:int, 120)),
          s(:array,
            s(:int, 61),
            s(:int, 180)),
          s(:array,
            s(:int, 75),
            s(:int, 160)),
          s(:array,
            s(:int, 98),
            s(:int, 223))),
        s(:begin,
          s(:lvasgn, :x,
            s(:send,
              s(:int, 100), :+,
              s(:begin,
                s(:send,
                  s(:int, 3), :*,
                  s(:lvar, :xx))))),
          s(:lvasgn, :y,
            s(:send,
              s(:int, 250), :-,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:int, 4), :*,
                    s(:lvar, :yy))), :/,
                s(:int, 5)))),
          s(:lvasgn, :item,
            s(:send,
              s(:const, nil, :TkcOval), :new,
              s(:gvar, :$twind_plot),
              s(:send,
                s(:lvar, :x), :-,
                s(:int, 6)),
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 6)),
              s(:send,
                s(:lvar, :x), :+,
                s(:int, 6)),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 6)),
              s(:hash,
                s(:pair,
                  s(:str, "width"),
                  s(:int, 1)),
                s(:pair,
                  s(:str, "outline"),
                  s(:str, "black")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "SkyBlue2"))))),
          s(:send,
            s(:lvar, :item), :addtag,
            s(:str, "point")))),
      s(:send,
        s(:gvar, :$twind_plot), :itembind,
        s(:str, "point"),
        s(:str, "Any-Enter"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:gvar, :$twind_plot), :itemconfigure,
            s(:str, "current"),
            s(:str, "fill"),
            s(:str, "red")))),
      s(:send,
        s(:gvar, :$twind_plot), :itembind,
        s(:str, "point"),
        s(:str, "Any-Leave"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:gvar, :$twind_plot), :itemconfigure,
            s(:str, "current"),
            s(:str, "fill"),
            s(:str, "SkyBlue2")))),
      s(:send,
        s(:gvar, :$twind_plot), :itembind,
        s(:str, "point"),
        s(:str, "1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:send, nil, :embPlotDown,
            s(:gvar, :$twind_plot),
            s(:lvar, :x),
            s(:lvar, :y))),
        s(:str, "%x %y")),
      s(:send,
        s(:gvar, :$twind_plot), :itembind,
        s(:str, "point"),
        s(:str, "ButtonRelease-1"),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:gvar, :$twind_plot), :dtag,
            s(:str, "selected")))),
      s(:send,
        s(:gvar, :$twind_plot), :bind,
        s(:str, "B1-Motion"),
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:send, nil, :embPlotMove,
            s(:gvar, :$twind_plot),
            s(:lvar, :x),
            s(:lvar, :y))),
        s(:str, "%x %y")),
      s(:while,
        s(:begin,
          s(:send,
            s(:send,
              s(:gvar, :$twind_text), :get,
              s(:gvar, :$mark_plot)), :=~,
            s(:regexp,
              s(:str, "[ \\t\\n]"),
              s(:regopt)))),
        s(:send,
          s(:gvar, :$twind_text), :delete,
          s(:gvar, :$mark_plot))),
      s(:send,
        s(:gvar, :$twind_text), :insert,
        s(:gvar, :$mark_plot),
        s(:str, "\n")),
      s(:send,
        s(:const, nil, :TkTextWindow), :new,
        s(:gvar, :$twind_text),
        s(:gvar, :$mark_plot),
        s(:hash,
          s(:pair,
            s(:str, "window"),
            s(:gvar, :$twind_plot)))),
      s(:send,
        s(:gvar, :$tag_center), :add,
        s(:gvar, :$mark_plot)),
      s(:send,
        s(:gvar, :$twind_text), :insert,
        s(:gvar, :$mark_plot),
        s(:str, "\n")))),
  s(:gvasgn, :$embPlot,
    s(:hash,
      s(:pair,
        s(:str, "lastX"),
        s(:int, 0)),
      s(:pair,
        s(:str, "lastY"),
        s(:int, 0)))),
  s(:def, :embPlotDown,
    s(:args,
      s(:arg, :w),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:send,
        s(:lvar, :w), :dtag,
        s(:str, "selected")),
      s(:send,
        s(:lvar, :w), :addtag_withtag,
        s(:str, "selected"),
        s(:str, "current")),
      s(:send,
        s(:lvar, :w), :raise,
        s(:str, "current")),
      s(:send,
        s(:gvar, :$embPlot), :[]=,
        s(:str, "lastX"),
        s(:lvar, :x)),
      s(:send,
        s(:gvar, :$embPlot), :[]=,
        s(:str, "lastY"),
        s(:lvar, :y)))),
  s(:def, :embPlotMove,
    s(:args,
      s(:arg, :w),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:send,
        s(:lvar, :w), :move,
        s(:str, "selected"),
        s(:send,
          s(:lvar, :x), :-,
          s(:send,
            s(:gvar, :$embPlot), :[],
            s(:str, "lastX"))),
        s(:send,
          s(:lvar, :y), :-,
          s(:send,
            s(:gvar, :$embPlot), :[],
            s(:str, "lastY")))),
      s(:send,
        s(:gvar, :$embPlot), :[]=,
        s(:str, "lastX"),
        s(:lvar, :x)),
      s(:send,
        s(:gvar, :$embPlot), :[]=,
        s(:str, "lastY"),
        s(:lvar, :y)))),
  s(:def, :textWindDel,
    s(:args,
      s(:arg, :w)),
    s(:if,
      s(:and,
        s(:begin,
          s(:defined?,
            s(:gvar, :$twind_text))),
        s(:send,
          s(:const, nil, :TkWinfo), :exist?,
          s(:gvar, :$twind_plot))),
      s(:begin,
        s(:send,
          s(:gvar, :$twind_text), :delete,
          s(:gvar, :$twind_plot)),
        s(:gvasgn, :$twind_plot,
          s(:nil)),
        s(:while,
          s(:begin,
            s(:send,
              s(:send,
                s(:gvar, :$twind_text), :get,
                s(:gvar, :$mark_plot)), :=~,
              s(:regexp,
                s(:str, "[ \\t\\n]"),
                s(:regopt)))),
          s(:send,
            s(:gvar, :$twind_text), :delete,
            s(:gvar, :$mark_plot))),
        s(:send,
          s(:gvar, :$twind_text), :insert,
          s(:gvar, :$mark_plot),
          s(:str, "  "))), nil)),
  s(:def, :embDefBg,
    s(:args,
      s(:arg, :w)),
    s(:send,
      s(:lvar, :w), :[]=,
      s(:str, "background"),
      s(:send,
        s(:send,
          s(:lvar, :w), :configinfo,
          s(:str, "background")), :[],
        s(:int, 3)))))
