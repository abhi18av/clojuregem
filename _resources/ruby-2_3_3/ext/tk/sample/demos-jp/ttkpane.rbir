s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$ttkpane_demo)),
      s(:gvar, :$ttkpane_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$ttkpane_demo), :destroy),
      s(:gvasgn, :$ttkpane_demo,
        s(:nil))), nil),
  s(:gvasgn, :$ttkpane_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Themed Nested Panes")),
        s(:send, nil, :iconname,
          s(:str, "ttkpane")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$ttkpane_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:send,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Label), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :font),
          s(:gvar, :$font)),
        s(:pair,
          s(:sym, :wraplength),
          s(:str, "4i")),
        s(:pair,
          s(:sym, :justify),
          s(:sym, :left)),
        s(:pair,
          s(:sym, :text),
          s(:str, "このデモは，埋め込み関係にあるテーマ付きペインドウィンドウを示しています．\nそれぞれの大きさは，含まれているペインの間にあるエリアをつかんで\n境界をドラッグすることで変更できます．\n")))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :side),
        s(:sym, :top)),
      s(:pair,
        s(:sym, :fill),
        s(:sym, :x)))),
  s(:send,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Separator), :new,
      s(:lvar, :base_frame)), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :side),
        s(:sym, :top)),
      s(:pair,
        s(:sym, :fill),
        s(:sym, :x)))),
  s(:block,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Frame), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :frame)),
    s(:begin,
      s(:lvasgn, :sep,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Separator), :new,
          s(:lvar, :frame))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :sep),
        s(:hash,
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 4)),
          s(:pair,
            s(:sym, :row),
            s(:int, 0)),
          s(:pair,
            s(:sym, :sticky),
            s(:str, "ew")),
          s(:pair,
            s(:sym, :pady),
            s(:int, 2)))),
      s(:send, nil, :TkGrid,
        s(:str, "x"),
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Button), :new,
          s(:lvar, :frame),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "コード参照")),
            s(:pair,
              s(:sym, :image),
              s(:send,
                s(:gvar, :$image), :[],
                s(:str, "view"))),
            s(:pair,
              s(:sym, :compound),
              s(:sym, :left)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :showCode,
                  s(:str, "ttkpane")))))),
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Button), :new,
          s(:lvar, :frame),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "閉じる")),
            s(:pair,
              s(:sym, :image),
              s(:send,
                s(:gvar, :$image), :[],
                s(:str, "delete"))),
            s(:pair,
              s(:sym, :compound),
              s(:sym, :left)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:gvar, :$ttkpane_demo), :destroy),
                  s(:gvasgn, :$ttkpane_demo,
                    s(:nil))))))),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:int, 4)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 4)))),
      s(:send, nil, :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))))),
  s(:lvasgn, :frame,
    s(:send,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Frame), :new,
        s(:lvar, :base_frame)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:lvasgn, :outer,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Panedwindow), :new,
      s(:lvar, :frame),
      s(:hash,
        s(:pair,
          s(:sym, :orient),
          s(:sym, :horizontal))))),
  s(:send,
    s(:lvar, :outer), :add,
    s(:lvasgn, :in_left,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Panedwindow), :new,
        s(:lvar, :outer),
        s(:hash,
          s(:pair,
            s(:sym, :orient),
            s(:sym, :vertical)))))),
  s(:send,
    s(:lvar, :outer), :add,
    s(:lvasgn, :in_right,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Panedwindow), :new,
        s(:lvar, :outer),
        s(:hash,
          s(:pair,
            s(:sym, :orient),
            s(:sym, :vertical)))))),
  s(:send,
    s(:lvar, :in_left), :add,
    s(:lvasgn, :left_top,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Labelframe), :new,
        s(:lvar, :in_left),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "ボタン")))))),
  s(:send,
    s(:lvar, :in_left), :add,
    s(:lvasgn, :left_bot,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Labelframe), :new,
        s(:lvar, :in_left),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "時計")))))),
  s(:send,
    s(:lvar, :in_right), :add,
    s(:lvasgn, :right_top,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Labelframe), :new,
        s(:lvar, :in_right),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "プログレス")))))),
  s(:send,
    s(:lvar, :in_right), :add,
    s(:lvasgn, :right_bot,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Labelframe), :new,
        s(:lvar, :in_right),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:str, "テキスト")))))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :windowingsystem), :==,
      s(:str, "aqua")),
    s(:block,
      s(:send,
        s(:array,
          s(:lvar, :left_top),
          s(:lvar, :left_bot),
          s(:lvar, :right_top),
          s(:lvar, :right_bot)), :each),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :w), :padding,
        s(:int, 3))), nil),
  s(:send,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Button), :new,
      s(:lvar, :left_top),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "押してね")),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:const, nil, :Tk), :messageBox,
              s(:hash,
                s(:pair,
                  s(:sym, :type),
                  s(:str, "ok")),
                s(:pair,
                  s(:sym, :icon),
                  s(:str, "info")),
                s(:pair,
                  s(:sym, :message),
                  s(:str, "いてて！")),
                s(:pair,
                  s(:sym, :detail),
                  s(:str, "That hurt...")),
                s(:pair,
                  s(:sym, :parent),
                  s(:lvar, :base_frame)),
                s(:pair,
                  s(:sym, :title),
                  s(:str, "Button Pressed")))))))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :pady),
        s(:int, 5)))),
  s(:lvasgn, :zones_list,
    s(:array,
      s(:array,
        s(:str, ":Europe/Berlin")),
      s(:array,
        s(:str, ":America/Argentina/Buenos_Aires"),
        s(:str, ":America/Buenos_Aires")),
      s(:array,
        s(:str, ":Africa/Johannesburg")),
      s(:array,
        s(:str, ":Europe/London")),
      s(:array,
        s(:str, ":America/Los_Angeles")),
      s(:array,
        s(:str, ":Europe/Moscow")),
      s(:array,
        s(:str, ":America/New_York")),
      s(:array,
        s(:str, ":Asia/Singapore")),
      s(:array,
        s(:str, ":Australia/Sydney")),
      s(:array,
        s(:str, ":Asia/Tokyo")))),
  s(:lvasgn, :zones,
    s(:array)),
  s(:if,
    s(:or,
      s(:send,
        s(:gvar, :$tk_major_ver), :>,
        s(:int, 8)),
      s(:begin,
        s(:and,
          s(:send,
            s(:gvar, :$tk_major_ver), :==,
            s(:int, 8)),
          s(:send,
            s(:gvar, :$tk_minor_ver), :>=,
            s(:int, 5))))),
    s(:begin,
      s(:lvasgn, :tzinfo,
        s(:sym, :tcl)),
      s(:block,
        s(:send,
          s(:lvar, :zones_list), :each),
        s(:args,
          s(:arg, :list)),
        s(:block,
          s(:send,
            s(:lvar, :list), :each),
          s(:args,
            s(:arg, :zone)),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const, nil, :Tk), :tk_call,
                s(:str, "clock"),
                s(:str, "format"),
                s(:str, "0"),
                s(:str, "-timezone"),
                s(:lvar, :zone)),
              s(:resbody,
                s(:array,
                  s(:const, nil, :RuntimeError)), nil, nil),
              s(:begin,
                s(:send,
                  s(:lvar, :zones), :<<,
                  s(:array,
                    s(:lvar, :zone),
                    s(:send,
                      s(:send,
                        s(:lvar, :zone), :[],
                        s(:regexp,
                          s(:str, "[^/:]+$"),
                          s(:regopt))), :tr,
                      s(:str, "_"),
                      s(:str, " ")))),
                s(:break))))))),
    s(:begin,
      s(:kwbegin,
        s(:rescue,
          s(:begin,
            s(:send, nil, :require,
              s(:str, "tzinfo")),
            s(:lvasgn, :tzinfo,
              s(:sym, :tzinfo))),
          s(:resbody,
            s(:array,
              s(:const, nil, :Exception)), nil,
            s(:kwbegin,
              s(:rescue,
                s(:begin,
                  s(:send, nil, :require,
                    s(:str, "tzfile")),
                  s(:lvasgn, :tzinfo,
                    s(:sym, :tzfile))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :Exception)), nil,
                  s(:lvasgn, :tzinfo,
                    s(:nil))), nil))), nil)),
      s(:case,
        s(:lvar, :tzinfo),
        s(:when,
          s(:sym, :tzinfo),
          s(:block,
            s(:send,
              s(:lvar, :zones_list), :each),
            s(:args,
              s(:arg, :list)),
            s(:block,
              s(:send,
                s(:lvar, :list), :each),
              s(:args,
                s(:arg, :zone)),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :tz,
                    s(:send,
                      s(:const,
                        s(:const, nil, :TZInfo), :Timezone), :get,
                      s(:send,
                        s(:lvar, :zone), :[],
                        s(:regexp,
                          s(:str, "[^:]+$"),
                          s(:regopt))))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :Exception)), nil, nil),
                  s(:begin,
                    s(:send,
                      s(:lvar, :zones), :<<,
                      s(:array,
                        s(:lvar, :tz),
                        s(:send,
                          s(:send,
                            s(:lvar, :zone), :[],
                            s(:regexp,
                              s(:str, "[^/:]+$"),
                              s(:regopt))), :tr,
                          s(:str, "_"),
                          s(:str, " ")))),
                    s(:break))))))),
        s(:when,
          s(:sym, :tzfile),
          s(:block,
            s(:send,
              s(:lvar, :zones_list), :each),
            s(:args,
              s(:arg, :list)),
            s(:block,
              s(:send,
                s(:lvar, :list), :each),
              s(:args,
                s(:arg, :zone)),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :tz,
                    s(:send,
                      s(:const, nil, :TZFile), :create,
                      s(:send,
                        s(:lvar, :zone), :[],
                        s(:regexp,
                          s(:str, "[^:]+$"),
                          s(:regopt))))),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :Exception)), nil, nil),
                  s(:begin,
                    s(:send,
                      s(:lvar, :zones), :<<,
                      s(:array,
                        s(:lvar, :tz),
                        s(:send,
                          s(:send,
                            s(:lvar, :zone), :[],
                            s(:regexp,
                              s(:str, "[^/:]+$"),
                              s(:regopt))), :tr,
                          s(:str, "_"),
                          s(:str, " ")))),
                    s(:break))))))),
        s(:block,
          s(:send,
            s(:array,
              s(:int, -7),
              s(:int, -4),
              s(:int, -2),
              s(:int, -1),
              s(:int, 0),
              s(:int, 1),
              s(:int, 3),
              s(:int, 8),
              s(:int, 9),
              s(:int, 10)), :each),
          s(:args,
            s(:arg, :zone)),
          s(:send,
            s(:lvar, :zones), :<<,
            s(:array,
              s(:lvar, :zone),
              s(:send,
                s(:str, "UTC%+03d00"), :%,
                s(:lvar, :zone)))))))),
  s(:lvasgn, :time,
    s(:send,
      s(:const, nil, :TkVariable), :new_hash)),
  s(:case,
    s(:lvar, :tzinfo),
    s(:when,
      s(:sym, :tcl),
      s(:lvasgn, :update_proc,
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :now),
            s(:arg, :tz),
            s(:arg, :label)),
          s(:send,
            s(:lvar, :time), :[]=,
            s(:lvar, :label),
            s(:send,
              s(:const, nil, :Tk), :tk_call,
              s(:str, "clock"),
              s(:str, "format"),
              s(:send,
                s(:lvar, :now), :tv_sec),
              s(:str, "-timezone"),
              s(:lvar, :tz),
              s(:str, "-format"),
              s(:str, "%T")))))),
    s(:when,
      s(:sym, :tzinfo),
      s(:lvasgn, :update_proc,
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :now),
            s(:arg, :tz),
            s(:arg, :label)),
          s(:send,
            s(:lvar, :time), :[]=,
            s(:lvar, :label),
            s(:send,
              s(:send,
                s(:lvar, :tz), :utc_to_local,
                s(:lvar, :now)), :strftime,
              s(:str, "%H:%M:%S")))))),
    s(:when,
      s(:sym, :tzfile),
      s(:lvasgn, :update_proc,
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :now),
            s(:arg, :tz),
            s(:arg, :label)),
          s(:send,
            s(:lvar, :time), :[]=,
            s(:lvar, :label),
            s(:send,
              s(:send,
                s(:lvar, :tz), :at,
                s(:send,
                  s(:lvar, :now), :tv_sec)), :strftime,
              s(:str, "%H:%M:%S")))))),
    s(:lvasgn, :update_proc,
      s(:block,
        s(:send, nil, :proc),
        s(:args,
          s(:arg, :now),
          s(:arg, :tz),
          s(:arg, :label)),
        s(:send,
          s(:lvar, :time), :[]=,
          s(:lvar, :label),
          s(:send,
            s(:begin,
              s(:send,
                s(:lvar, :now), :+,
                s(:begin,
                  s(:send,
                    s(:lvar, :tz), :*,
                    s(:int, 3600))))), :strftime,
            s(:str, "%H:%M:%S")))))),
  s(:block,
    s(:send,
      s(:lvar, :zones), :each_with_index),
    s(:args,
      s(:mlhs,
        s(:arg, :zone),
        s(:arg, :label)),
      s(:arg, :idx)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :idx), :>,
          s(:int, 0)),
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :Ttk), :Separator), :new,
            s(:lvar, :left_bot)), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :fill),
              s(:sym, :x)))), nil),
      s(:send,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Label), :new,
          s(:lvar, :left_bot),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:lvar, :label)),
            s(:pair,
              s(:sym, :anchor),
              s(:str, "w")))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))),
      s(:send,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Label), :new,
          s(:lvar, :left_bot),
          s(:hash,
            s(:pair,
              s(:sym, :textvariable),
              s(:send,
                s(:lvar, :time), :ref,
                s(:lvar, :label))),
            s(:pair,
              s(:sym, :anchor),
              s(:str, "w")))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)))))),
  s(:lvasgn, :every,
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:begin,
        s(:lvasgn, :now,
          s(:send,
            s(:send,
              s(:const, nil, :Time), :now), :utc)),
        s(:block,
          s(:send,
            s(:lvar, :zones), :each),
          s(:args,
            s(:arg, :zone),
            s(:arg, :label)),
          s(:send,
            s(:lvar, :update_proc), :call,
            s(:lvar, :now),
            s(:lvar, :zone),
            s(:lvar, :label)))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkRTTimer), :new,
      s(:int, 1000),
      s(:int, -1),
      s(:lvar, :every)), :start,
    s(:int, 0),
    s(:lvar, :every)),
  s(:send,
    s(:send,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Progressbar), :new,
        s(:lvar, :right_top),
        s(:hash,
          s(:pair,
            s(:sym, :mode),
            s(:sym, :indeterminate)))), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true)))), :start),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :windowingsystem), :!=,
      s(:str, "aqua")),
    s(:begin,
      s(:lvasgn, :f,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Frame), :new,
          s(:lvar, :right_bot),
          s(:hash,
            s(:pair,
              s(:sym, :style),
              s(:const,
                s(:const, nil, :Ttk), :Entry))))),
      s(:lvasgn, :txt,
        s(:send,
          s(:const, nil, :TkText), :new,
          s(:lvar, :frame),
          s(:hash,
            s(:pair,
              s(:sym, :wrap),
              s(:sym, :word)),
            s(:pair,
              s(:sym, :width),
              s(:int, 30)),
            s(:pair,
              s(:sym, :borderwidth),
              s(:int, 0))))),
      s(:send,
        s(:lvar, :txt), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :in),
            s(:lvar, :f)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 2)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 2)))),
      s(:lvasgn, :scr,
        s(:send,
          s(:lvar, :txt), :yscrollbar,
          s(:send,
            s(:const,
              s(:const, nil, :Ttk), :Scrollbar), :new,
            s(:lvar, :frame)))),
      s(:send,
        s(:lvar, :scr), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :right)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :y)),
          s(:pair,
            s(:sym, :in),
            s(:lvar, :right_bot)))),
      s(:send,
        s(:lvar, :f), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))),
      s(:send,
        s(:lvar, :outer), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :expand),
            s(:true))))),
    s(:begin,
      s(:lvasgn, :txt,
        s(:send,
          s(:const, nil, :TkText), :new,
          s(:lvar, :frame),
          s(:hash,
            s(:pair,
              s(:sym, :wrap),
              s(:sym, :word)),
            s(:pair,
              s(:sym, :width),
              s(:int, 30)),
            s(:pair,
              s(:sym, :borderwidth),
              s(:int, 0))))),
      s(:lvasgn, :scr,
        s(:send,
          s(:lvar, :txt), :yscrollbar,
          s(:send,
            s(:const, nil, :TkScrollbar), :new,
            s(:lvar, :frame)))),
      s(:send,
        s(:lvar, :scr), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :right)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :y)),
          s(:pair,
            s(:sym, :in),
            s(:lvar, :right_bot)))),
      s(:send,
        s(:lvar, :txt), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :in),
            s(:lvar, :right_bot)))),
      s(:send,
        s(:lvar, :outer), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 10)),
          s(:pair,
            s(:sym, :pady),
            s(:array,
              s(:int, 6),
              s(:int, 10))))))))
