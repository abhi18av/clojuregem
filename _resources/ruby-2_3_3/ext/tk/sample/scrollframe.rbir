s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const,
      s(:const, nil, :Tk), :RbWidget), nil),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :RbWidget), :ScrollFrame),
    s(:const, nil, :TkFrame),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComposite)),
      s(:casgn, nil, :DEFAULT_WIDTH,
        s(:int, 200)),
      s(:casgn, nil, :DEFAULT_HEIGHT,
        s(:int, 200)),
      s(:def, :initialize_composite,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:send,
            s(:ivar, :@frame), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :width),
                s(:const, nil, :DEFAULT_WIDTH)),
              s(:pair,
                s(:sym, :height),
                s(:const, nil, :DEFAULT_HEIGHT)))),
          s(:ivasgn, :@h_scroll,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "orient"),
                  s(:str, "horizontal"))))),
          s(:ivasgn, :@v_scroll,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "orient"),
                  s(:str, "vertical"))))),
          s(:ivasgn, :@canvas,
            s(:send,
              s(:const, nil, :TkCanvas), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :selectborderwidth),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :highlightthickness),
                  s(:int, 0))))),
          s(:send,
            s(:const, nil, :TkGrid), :rowconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 1)),
              s(:pair,
                s(:str, "minsize"),
                s(:int, 0)))),
          s(:send,
            s(:const, nil, :TkGrid), :columnconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 1)),
              s(:pair,
                s(:str, "minsize"),
                s(:int, 0)))),
          s(:send,
            s(:ivar, :@canvas), :grid,
            s(:hash,
              s(:pair,
                s(:str, "row"),
                s(:int, 0)),
              s(:pair,
                s(:str, "column"),
                s(:int, 0)),
              s(:pair,
                s(:str, "sticky"),
                s(:str, "news")))),
          s(:send,
            s(:ivar, :@frame), :grid_propagate,
            s(:false)),
          s(:send,
            s(:ivar, :@canvas), :xscrollbar,
            s(:ivar, :@h_scroll)),
          s(:send,
            s(:ivar, :@canvas), :yscrollbar,
            s(:ivar, :@v_scroll)),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:lvasgn, :framekeys,
            s(:hash)),
          s(:if,
            s(:send,
              s(:lvar, :keys), :key?,
              s(:str, "classname")),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "class"),
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "classname"))), nil),
          s(:if,
            s(:ivasgn, :@classname,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "class"))),
            s(:send,
              s(:lvar, :framekeys), :[]=,
              s(:str, "class"),
              s(:ivar, :@classname)), nil),
          s(:if,
            s(:ivasgn, :@colormap,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "colormap"))),
            s(:send,
              s(:lvar, :framekeys), :[]=,
              s(:str, "colormap"),
              s(:ivar, :@colormap)), nil),
          s(:if,
            s(:ivasgn, :@container,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "container"))),
            s(:send,
              s(:lvar, :framekeys), :[]=,
              s(:str, "container"),
              s(:ivar, :@container)), nil),
          s(:if,
            s(:ivasgn, :@visual,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "visual"))),
            s(:send,
              s(:lvar, :framekeys), :[]=,
              s(:str, "visual"),
              s(:ivar, :@visual)), nil),
          s(:if,
            s(:send,
              s(:ivar, :@classname), :kind_of?,
              s(:const, nil, :TkBindTag)),
            s(:begin,
              s(:ivasgn, :@db_class,
                s(:ivar, :@classname)),
              s(:ivasgn, :@classname,
                s(:send,
                  s(:ivar, :@classname), :id))),
            s(:if,
              s(:ivar, :@classname),
              s(:ivasgn, :@db_class,
                s(:send,
                  s(:const, nil, :TkDatabaseClass), :new,
                  s(:ivar, :@classname))),
              s(:begin,
                s(:ivasgn, :@db_class,
                  s(:send,
                    s(:self), :class)),
                s(:ivasgn, :@classname,
                  s(:const,
                    s(:ivar, :@db_class), :WidgetClassName))))),
          s(:ivasgn, :@base,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:ivar, :@canvas),
              s(:lvar, :framekeys))),
          s(:ivasgn, :@cwin,
            s(:send,
              s(:const, nil, :TkcWindow), :new,
              s(:ivar, :@canvas),
              s(:array,
                s(:int, 0),
                s(:int, 0)),
              s(:hash,
                s(:pair,
                  s(:sym, :window),
                  s(:ivar, :@base)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:str, "nw"))))),
          s(:send,
            s(:ivar, :@canvas), :scrollregion,
            s(:send,
              s(:ivar, :@cwin), :bbox)),
          s(:block,
            s(:send,
              s(:ivar, :@base), :bind,
              s(:str, "Configure")),
            s(:args),
            s(:send, nil, :_reset_scrollregion,
              s(:nil),
              s(:nil))),
          s(:ivasgn, :@path,
            s(:send,
              s(:ivar, :@base), :path)),
          s(:send, nil, :vscroll,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "vscroll")),
              s(:args),
              s(:true))),
          s(:send, nil, :hscroll,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "hscroll")),
              s(:args),
              s(:true))),
          s(:send, nil, :option_methods,
            s(:sym, :scrollbarwidth)),
          s(:send, nil, :delegate_alias,
            s(:str, "scrollbarrelief"),
            s(:str, "relief"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "DEFAULT"),
            s(:ivar, :@base)),
          s(:send, nil, :delegate,
            s(:str, "background"),
            s(:ivar, :@frame),
            s(:ivar, :@base),
            s(:ivar, :@canvas),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "width"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "height"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "activebackground"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "troughcolor"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "repeatdelay"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "repeatinterval"),
            s(:ivar, :@h_scroll),
            s(:ivar, :@v_scroll)),
          s(:send, nil, :delegate,
            s(:str, "borderwidth"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "relief"),
            s(:ivar, :@frame)),
          s(:if,
            s(:send,
              s(:lvar, :keys), :empty?), nil,
            s(:send, nil, :configure,
              s(:lvar, :keys))))),
      s(:def, :_reset_scrollregion,
        s(:args,
          s(:optarg, :h_mod,
            s(:nil)),
          s(:optarg, :v_mod,
            s(:nil))),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :cx1),
              s(:lvasgn, :cy1),
              s(:lvasgn, :cx2),
              s(:lvasgn, :cy2)),
            s(:send,
              s(:ivar, :@canvas), :scrollregion)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :x1),
              s(:lvasgn, :y1),
              s(:lvasgn, :x2),
              s(:lvasgn, :y2)),
            s(:send,
              s(:ivar, :@cwin), :bbox)),
          s(:send,
            s(:ivar, :@canvas), :scrollregion,
            s(:array,
              s(:lvar, :x1),
              s(:lvar, :y1),
              s(:lvar, :x2),
              s(:lvar, :y2))),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :h_mod), :nil?),
              s(:send,
                s(:lvar, :v_mod), :nil?)),
            s(:begin,
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :x2), :!=,
                    s(:lvar, :cx2)),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TkGrid), :info,
                        s(:ivar, :@h_scroll)), :size), :==,
                    s(:int, 0))),
                s(:begin,
                  s(:send,
                    s(:ivar, :@frame), :grid_propagate,
                    s(:true)),
                  s(:send,
                    s(:ivar, :@canvas), :width=,
                    s(:lvar, :x2)),
                  s(:send,
                    s(:const, nil, :Tk), :update_idletasks),
                  s(:send,
                    s(:ivar, :@frame), :grid_propagate,
                    s(:false))), nil),
              s(:if,
                s(:and,
                  s(:send,
                    s(:lvar, :y2), :!=,
                    s(:lvar, :cy2)),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TkGrid), :info,
                        s(:ivar, :@v_scroll)), :size), :==,
                    s(:int, 0))),
                s(:begin,
                  s(:send,
                    s(:ivar, :@frame), :grid_propagate,
                    s(:true)),
                  s(:send,
                    s(:ivar, :@canvas), :height=,
                    s(:lvar, :y2)),
                  s(:send,
                    s(:const, nil, :Tk), :update_idletasks),
                  s(:send,
                    s(:ivar, :@frame), :grid_propagate,
                    s(:false))), nil)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :h_mod), :==,
                  s(:false)),
                s(:send,
                  s(:ivar, :@h_scroll), :ungrid), nil),
              s(:if,
                s(:send,
                  s(:lvar, :v_mod), :==,
                  s(:false)),
                s(:send,
                  s(:ivar, :@v_scroll), :ungrid), nil),
              s(:lvasgn, :h_flag,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TkGrid), :info,
                        s(:ivar, :@h_scroll)), :size), :==,
                    s(:int, 0)))),
              s(:lvasgn, :v_flag,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :TkGrid), :info,
                        s(:ivar, :@v_scroll)), :size), :==,
                    s(:int, 0)))),
              s(:send,
                s(:ivar, :@frame), :grid_propagate,
                s(:true)),
              s(:send,
                s(:ivar, :@canvas), :width=,
                s(:if,
                  s(:begin,
                    s(:lvar, :h_flag)),
                  s(:lvar, :x2),
                  s(:send,
                    s(:ivar, :@canvas), :winfo_width))),
              s(:send,
                s(:ivar, :@canvas), :height=,
                s(:if,
                  s(:begin,
                    s(:lvar, :v_flag)),
                  s(:lvar, :y2),
                  s(:send,
                    s(:ivar, :@canvas), :winfo_height))),
              s(:if,
                s(:lvar, :h_mod),
                s(:send,
                  s(:ivar, :@h_scroll), :grid,
                  s(:hash,
                    s(:pair,
                      s(:str, "row"),
                      s(:int, 1)),
                    s(:pair,
                      s(:str, "column"),
                      s(:int, 0)),
                    s(:pair,
                      s(:str, "sticky"),
                      s(:str, "ew")))), nil),
              s(:if,
                s(:lvar, :v_mod),
                s(:send,
                  s(:ivar, :@v_scroll), :grid,
                  s(:hash,
                    s(:pair,
                      s(:str, "row"),
                      s(:int, 0)),
                    s(:pair,
                      s(:str, "column"),
                      s(:int, 1)),
                    s(:pair,
                      s(:str, "sticky"),
                      s(:str, "ns")))), nil),
              s(:send,
                s(:const, nil, :Tk), :update_idletasks),
              s(:send,
                s(:ivar, :@frame), :grid_propagate,
                s(:false)))))),
      s(:send, nil, :private,
        s(:sym, :_reset_scrollregion)),
      s(:def, :bind,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@frame), :bind,
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :bind_append,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@frame), :bind_append,
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :bind_remove,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@frame), :bind_remove,
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :bindinfo,
        s(:args,
          s(:restarg, :args)),
        s(:send,
          s(:ivar, :@frame), :bindinfo,
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :scrollbarwidth,
        s(:args,
          s(:optarg, :width,
            s(:nil))),
        s(:if,
          s(:lvar, :width),
          s(:begin,
            s(:send,
              s(:ivar, :@h_scroll), :width,
              s(:lvar, :width)),
            s(:send,
              s(:ivar, :@v_scroll), :width,
              s(:lvar, :width))),
          s(:send,
            s(:ivar, :@h_scroll), :width))),
      s(:def, :vscroll,
        s(:args,
          s(:arg, :mode)),
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :update_idletasks),
          s(:lvasgn, :st,
            s(:send,
              s(:const, nil, :TkGrid), :info,
              s(:ivar, :@v_scroll))),
          s(:if,
            s(:and,
              s(:lvar, :mode),
              s(:send,
                s(:send,
                  s(:lvar, :st), :size), :==,
                s(:int, 0))),
            s(:begin,
              s(:send,
                s(:ivar, :@v_scroll), :grid,
                s(:hash,
                  s(:pair,
                    s(:str, "row"),
                    s(:int, 0)),
                  s(:pair,
                    s(:str, "column"),
                    s(:int, 1)),
                  s(:pair,
                    s(:str, "sticky"),
                    s(:str, "ns")))),
              s(:send, nil, :_reset_scrollregion,
                s(:nil),
                s(:true))),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :mode), :!),
                s(:send,
                  s(:send,
                    s(:lvar, :st), :size), :!=,
                  s(:int, 0))),
              s(:send, nil, :_reset_scrollregion,
                s(:nil),
                s(:false)),
              s(:send, nil, :_reset_scrollregion,
                s(:nil),
                s(:nil)))),
          s(:self))),
      s(:def, :hscroll,
        s(:args,
          s(:arg, :mode)),
        s(:begin,
          s(:send,
            s(:const, nil, :Tk), :update_idletasks),
          s(:lvasgn, :st,
            s(:send,
              s(:const, nil, :TkGrid), :info,
              s(:ivar, :@h_scroll))),
          s(:if,
            s(:and,
              s(:lvar, :mode),
              s(:send,
                s(:send,
                  s(:lvar, :st), :size), :==,
                s(:int, 0))),
            s(:send, nil, :_reset_scrollregion,
              s(:true),
              s(:nil)),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :mode), :!),
                s(:send,
                  s(:send,
                    s(:lvar, :st), :size), :!=,
                  s(:int, 0))),
              s(:send, nil, :_reset_scrollregion,
                s(:false),
                s(:nil)),
              s(:send, nil, :_reset_scrollregion,
                s(:nil),
                s(:nil)))),
          s(:self))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:begin,
      s(:lvasgn, :f,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :Tk), :RbWidget), :ScrollFrame), :new,
          s(:hash,
            s(:pair,
              s(:sym, :scrollbarwidth),
              s(:int, 10)),
            s(:pair,
              s(:sym, :width),
              s(:int, 300)),
            s(:pair,
              s(:sym, :height),
              s(:int, 200))))),
      s(:send,
        s(:lvar, :f), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "foo button")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :puts,
                  s(:str, "foo")))))), :pack),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "baaar button")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :puts,
                  s(:str, "baaar")))))), :pack),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "baz button")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :puts,
                  s(:str, "baz")))))), :pack),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "hoge hoge button")),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :puts,
                  s(:str, "hoge hoge")))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)))),
      s(:block,
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 3000)),
        s(:args),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:send,
                s(:const, nil, :TkText), :new,
                s(:lvar, :f)), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :expand),
                  s(:true)),
                s(:pair,
                  s(:sym, :fill),
                  s(:sym, :both))))),
          s(:send,
            s(:lvar, :t), :insert,
            s(:sym, :end),
            s(:str, "An example of Tk::RbWidget::ScrollFrame widget.\n\n")),
          s(:send,
            s(:lvar, :t), :insert,
            s(:sym, :end),
            s(:str, "Here is a text widget.\n")),
          s(:send,
            s(:lvar, :t), :insert,
            s(:sym, :end),
            s(:str, "Please resize the application window, ")),
          s(:send,
            s(:lvar, :t), :insert,
            s(:sym, :end),
            s(:str, "and try the scrollbars ")),
          s(:send,
            s(:lvar, :t), :insert,
            s(:sym, :end),
            s(:str, "to move the view of packed widgets.\n")))),
      s(:block,
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 6000)),
        s(:args),
        s(:send,
          s(:lvar, :f), :vscroll,
          s(:false))),
      s(:block,
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 9000)),
        s(:args),
        s(:send,
          s(:lvar, :f), :vscroll,
          s(:true))),
      s(:block,
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 12000)),
        s(:args),
        s(:send,
          s(:lvar, :f), :hscroll,
          s(:false))),
      s(:block,
        s(:send,
          s(:const, nil, :Tk), :after,
          s(:int, 15000)),
        s(:args),
        s(:send,
          s(:lvar, :f), :hscroll,
          s(:true))),
      s(:send,
        s(:const, nil, :Tk), :mainloop)), nil))
