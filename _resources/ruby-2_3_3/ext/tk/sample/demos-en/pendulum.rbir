s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$pendulum_demo)),
      s(:gvar, :$pendulum_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$pendulum_demo), :destroy),
      s(:gvasgn, :$pendulum_demo,
        s(:nil))), nil),
  s(:gvasgn, :$pendulum_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Pendulum Animation Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "pendulum")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$pendulum_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:lvasgn, :msg,
    s(:block,
      s(:send,
        s(:const, nil, :TkLabel), :new,
        s(:lvar, :base_frame)),
      s(:args),
      s(:begin,
        s(:send, nil, :font,
          s(:gvar, :$font)),
        s(:send, nil, :wraplength,
          s(:str, "4i")),
        s(:send, nil, :justify,
          s(:str, "left")),
        s(:send, nil, :text,
          s(:str, "This demonstration shows how Ruby/Tk can be used to carry out animations that are linked to simulations of physical systems. In the left canvas is a graphical representation of the physical system itself, a simple pendulum, and in the right canvas is a graph of the phase space of the system, which is a plot of the angle (relative to the vertical) against the angular velocity. The pendulum bob may be repositioned by clicking and dragging anywhere on the left canvas."))))),
  s(:send,
    s(:lvar, :msg), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")))),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Dismiss")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$pendulum_demo)),
                    s(:gvasgn, :$pendulum_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "See Code")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "pendulum")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))))), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:class,
    s(:const, nil, :PendulumAnimationDemo), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :frame)),
        s(:begin,
          s(:ivasgn, :@pane,
            s(:send,
              s(:send,
                s(:const, nil, :TkPanedWindow), :new,
                s(:lvar, :frame),
                s(:hash,
                  s(:pair,
                    s(:sym, :orient),
                    s(:sym, :horizontal)))), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :fill),
                  s(:sym, :both)),
                s(:pair,
                  s(:sym, :expand),
                  s(:true))))),
          s(:ivasgn, :@lf1,
            s(:send,
              s(:const, nil, :TkLabelFrame), :new,
              s(:ivar, :@pane),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Pendulum Simulation"))))),
          s(:ivasgn, :@lf2,
            s(:send,
              s(:const, nil, :TkLabelFrame), :new,
              s(:ivar, :@pane),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Phase Space"))))),
          s(:ivasgn, :@c,
            s(:send,
              s(:const, nil, :TkCanvas), :new,
              s(:ivar, :@lf1),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 320)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 200)),
                s(:pair,
                  s(:sym, :background),
                  s(:str, "white")),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken))))),
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:ivar, :@c),
            s(:int, 5),
            s(:int, 5),
            s(:hash,
              s(:pair,
                s(:sym, :anchor),
                s(:sym, :nw)),
              s(:pair,
                s(:sym, :text),
                s(:str, "Click to Adjust Bob Start Position")))),
          s(:ivasgn, :@plate,
            s(:send,
              s(:const, nil, :TkcLine), :new,
              s(:ivar, :@c),
              s(:int, 0),
              s(:int, 25),
              s(:int, 320),
              s(:int, 25),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :fill),
                  s(:str, "grey50"))))),
          s(:ivasgn, :@rod,
            s(:send,
              s(:const, nil, :TkcLine), :new,
              s(:ivar, :@c),
              s(:int, 1),
              s(:int, 1),
              s(:int, 1),
              s(:int, 1),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :fill),
                  s(:str, "black"))))),
          s(:ivasgn, :@bob,
            s(:send,
              s(:const, nil, :TkcOval), :new,
              s(:ivar, :@c),
              s(:int, 1),
              s(:int, 1),
              s(:int, 2),
              s(:int, 2),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :fill),
                  s(:str, "yellow")),
                s(:pair,
                  s(:sym, :outline),
                  s(:str, "black"))))),
          s(:send,
            s(:const, nil, :TkcOval), :new,
            s(:ivar, :@c),
            s(:int, 155),
            s(:int, 20),
            s(:int, 165),
            s(:int, 30),
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:str, "grey50")),
              s(:pair,
                s(:sym, :outline),
                s(:str, "")))),
          s(:send,
            s(:ivar, :@c), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))),
          s(:ivasgn, :@k,
            s(:send,
              s(:const, nil, :TkCanvas), :new,
              s(:ivar, :@lf2),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 320)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 200)),
                s(:pair,
                  s(:sym, :background),
                  s(:str, "white")),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :sunken))))),
          s(:ivasgn, :@y_axis,
            s(:send,
              s(:const, nil, :TkcLine), :new,
              s(:ivar, :@k),
              s(:int, 160),
              s(:int, 200),
              s(:int, 160),
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :fill),
                  s(:str, "grey75")),
                s(:pair,
                  s(:sym, :arrow),
                  s(:sym, :last))))),
          s(:ivasgn, :@x_axis,
            s(:send,
              s(:const, nil, :TkcLine), :new,
              s(:ivar, :@k),
              s(:int, 0),
              s(:int, 100),
              s(:int, 320),
              s(:int, 100),
              s(:hash,
                s(:pair,
                  s(:sym, :fill),
                  s(:str, "grey75")),
                s(:pair,
                  s(:sym, :arrow),
                  s(:sym, :last))))),
          s(:ivasgn, :@graph,
            s(:hash)),
          s(:block,
            s(:send,
              s(:int, 90), :step,
              s(:int, 0),
              s(:int, -10)),
            s(:args,
              s(:arg, :i)),
            s(:send,
              s(:ivar, :@graph), :[]=,
              s(:lvar, :i),
              s(:send,
                s(:const, nil, :TkcLine), :new,
                s(:ivar, :@k),
                s(:int, 0),
                s(:int, 0),
                s(:int, 1),
                s(:int, 1),
                s(:hash,
                  s(:pair,
                    s(:sym, :smooth),
                    s(:true)),
                  s(:pair,
                    s(:sym, :fill),
                    s(:dstr,
                      s(:str, "grey"),
                      s(:begin,
                        s(:lvar, :i)))))))),
          s(:ivasgn, :@label_theta,
            s(:send,
              s(:const, nil, :TkcText), :new,
              s(:ivar, :@k),
              s(:int, 0),
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :ne)),
                s(:pair,
                  s(:sym, :text),
                  s(:str, "q")),
                s(:pair,
                  s(:sym, :font),
                  s(:str, "Symbol 8"))))),
          s(:ivasgn, :@label_dtheta,
            s(:send,
              s(:const, nil, :TkcText), :new,
              s(:ivar, :@k),
              s(:int, 0),
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :anchor),
                  s(:sym, :ne)),
                s(:pair,
                  s(:sym, :text),
                  s(:str, "dq")),
                s(:pair,
                  s(:sym, :font),
                  s(:str, "Symbol 8"))))),
          s(:send,
            s(:ivar, :@k), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))),
          s(:ivasgn, :@points,
            s(:array)),
          s(:ivasgn, :@theta,
            s(:float, 45.0)),
          s(:ivasgn, :@dTheta,
            s(:float, 0.0)),
          s(:ivasgn, :@length,
            s(:int, 150)),
          s(:ivasgn, :@timer,
            s(:block,
              s(:send,
                s(:const, nil, :TkTimer), :new,
                s(:int, 15)),
              s(:args),
              s(:send, nil, :repeat))),
          s(:send,
            s(:ivar, :@c), :bindtags_unshift,
            s(:lvasgn, :btag,
              s(:send,
                s(:const, nil, :TkBindTag), :new))),
          s(:block,
            s(:send,
              s(:lvar, :btag), :bind,
              s(:str, "Destroy")),
            s(:args),
            s(:send,
              s(:ivar, :@timer), :stop)),
          s(:send,
            s(:lvar, :btag), :bind,
            s(:str, "1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:begin,
                s(:send,
                  s(:ivar, :@timer), :stop),
                s(:send, nil, :showPendulum,
                  s(:send,
                    s(:lvar, :x), :to_i),
                  s(:send,
                    s(:lvar, :y), :to_i)))),
            s(:str, "%x %y")),
          s(:send,
            s(:lvar, :btag), :bind,
            s(:str, "B1-Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send, nil, :showPendulum,
                s(:send,
                  s(:lvar, :x), :to_i),
                s(:send,
                  s(:lvar, :y), :to_i))),
            s(:str, "%x %y")),
          s(:send,
            s(:lvar, :btag), :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:begin,
                s(:send, nil, :showPendulum,
                  s(:send,
                    s(:lvar, :x), :to_i),
                  s(:send,
                    s(:lvar, :y), :to_i)),
                s(:send,
                  s(:ivar, :@timer), :start))),
            s(:str, "%x %y")),
          s(:send,
            s(:lvar, :btag), :bind,
            s(:str, "Configure"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send,
                s(:ivar, :@plate), :coords,
                s(:int, 0),
                s(:int, 25),
                s(:send,
                  s(:lvar, :w), :to_i),
                s(:int, 25))),
            s(:str, "%w")),
          s(:send,
            s(:ivar, :@k), :bind,
            s(:str, "Configure"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :h),
                s(:arg, :w)),
              s(:begin,
                s(:lvasgn, :h,
                  s(:send,
                    s(:lvar, :h), :to_i)),
                s(:lvasgn, :w,
                  s(:send,
                    s(:lvar, :w), :to_i)),
                s(:ivasgn, :@psh,
                  s(:send,
                    s(:lvar, :h), :/,
                    s(:int, 2))),
                s(:ivasgn, :@psw,
                  s(:send,
                    s(:lvar, :w), :/,
                    s(:int, 2))),
                s(:send,
                  s(:ivar, :@x_axis), :coords,
                  s(:int, 2),
                  s(:ivar, :@psh),
                  s(:send,
                    s(:lvar, :w), :-,
                    s(:int, 2)),
                  s(:ivar, :@psh)),
                s(:send,
                  s(:ivar, :@y_axis), :coords,
                  s(:ivar, :@psw),
                  s(:send,
                    s(:lvar, :h), :-,
                    s(:int, 2)),
                  s(:ivar, :@psw),
                  s(:int, 2)),
                s(:send,
                  s(:ivar, :@label_theta), :coords,
                  s(:send,
                    s(:ivar, :@psw), :-,
                    s(:int, 4)),
                  s(:int, 6)),
                s(:send,
                  s(:ivar, :@label_dtheta), :coords,
                  s(:send,
                    s(:lvar, :w), :-,
                    s(:int, 6)),
                  s(:send,
                    s(:ivar, :@psh), :+,
                    s(:int, 4))))),
            s(:str, "%h %w")),
          s(:send,
            s(:const, nil, :Tk), :update),
          s(:send,
            s(:ivar, :@pane), :add,
            s(:ivar, :@lf1)),
          s(:send,
            s(:ivar, :@pane), :add,
            s(:ivar, :@lf2)),
          s(:send, nil, :showPendulum),
          s(:send,
            s(:ivar, :@timer), :start,
            s(:int, 500)))),
      s(:def, :showPendulum,
        s(:args,
          s(:optarg, :x,
            s(:nil)),
          s(:optarg, :y,
            s(:nil))),
        s(:begin,
          s(:if,
            s(:and,
              s(:and,
                s(:lvar, :x),
                s(:lvar, :y)),
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :x), :!=,
                    s(:int, 160)),
                  s(:send,
                    s(:lvar, :y), :!=,
                    s(:int, 25))))),
            s(:begin,
              s(:ivasgn, :@dTheta,
                s(:float, 0.0)),
              s(:lvasgn, :x2,
                s(:send,
                  s(:lvar, :x), :-,
                  s(:int, 160))),
              s(:lvasgn, :y2,
                s(:send,
                  s(:lvar, :y), :-,
                  s(:int, 25))),
              s(:ivasgn, :@length,
                s(:send,
                  s(:const, nil, :Math), :hypot,
                  s(:lvar, :x2),
                  s(:lvar, :y2))),
              s(:ivasgn, :@theta,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Math), :atan2,
                      s(:lvar, :x2),
                      s(:lvar, :y2)), :*,
                    s(:int, 180)), :/,
                  s(:const,
                    s(:const, nil, :Math), :PI)))),
            s(:begin,
              s(:lvasgn, :angle,
                s(:send,
                  s(:send,
                    s(:ivar, :@theta), :*,
                    s(:const,
                      s(:const, nil, :Math), :PI)), :/,
                  s(:int, 180))),
              s(:lvasgn, :x,
                s(:send,
                  s(:int, 160), :+,
                  s(:send,
                    s(:ivar, :@length), :*,
                    s(:send,
                      s(:const, nil, :Math), :sin,
                      s(:lvar, :angle))))),
              s(:lvasgn, :y,
                s(:send,
                  s(:int, 25), :+,
                  s(:send,
                    s(:ivar, :@length), :*,
                    s(:send,
                      s(:const, nil, :Math), :cos,
                      s(:lvar, :angle))))))),
          s(:send,
            s(:ivar, :@rod), :coords,
            s(:int, 160),
            s(:int, 25),
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:send,
            s(:ivar, :@bob), :coords,
            s(:send,
              s(:lvar, :x), :-,
              s(:int, 15)),
            s(:send,
              s(:lvar, :y), :-,
              s(:int, 15)),
            s(:send,
              s(:lvar, :x), :+,
              s(:int, 15)),
            s(:send,
              s(:lvar, :y), :+,
              s(:int, 15))))),
      s(:def, :showPhase,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:ivar, :@psw),
              s(:ivar, :@psh)), nil,
            s(:begin,
              s(:ivasgn, :@psw,
                s(:send,
                  s(:send,
                    s(:ivar, :@k), :width), :/,
                  s(:int, 2))),
              s(:ivasgn, :@psh,
                s(:send,
                  s(:send,
                    s(:ivar, :@k), :height), :/,
                  s(:int, 2))))),
          s(:send,
            s(:send,
              s(:ivar, :@points), :<<,
              s(:send,
                s(:ivar, :@theta), :+,
                s(:ivar, :@psw))), :<<,
            s(:send,
              s(:send,
                s(:int, -20), :*,
                s(:ivar, :@dTheta)), :+,
              s(:ivar, :@psh))),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@points), :length), :>,
              s(:int, 100)),
            s(:ivasgn, :@points,
              s(:send,
                s(:ivar, :@points), :[],
                s(:irange,
                  s(:int, -100),
                  s(:int, -1)))), nil),
          s(:block,
            s(:send,
              s(:begin,
                s(:erange,
                  s(:int, 0),
                  s(:int, 100))), :step,
              s(:int, 10)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:lvasgn, :first,
                s(:send,
                  s(:lvar, :i), :-@)),
              s(:lvasgn, :last,
                s(:send,
                  s(:int, 11), :-,
                  s(:lvar, :i))),
              s(:if,
                s(:send,
                  s(:lvar, :last), :>=,
                  s(:int, 0)),
                s(:lvasgn, :last,
                  s(:int, -1)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :first), :>,
                  s(:lvar, :last)),
                s(:next), nil),
              s(:lvasgn, :lst,
                s(:send,
                  s(:ivar, :@points), :[],
                  s(:irange,
                    s(:lvar, :first),
                    s(:lvar, :last)))),
              s(:if,
                s(:and,
                  s(:lvar, :lst),
                  s(:send,
                    s(:send,
                      s(:lvar, :lst), :length), :>=,
                    s(:int, 4))),
                s(:send,
                  s(:send,
                    s(:ivar, :@graph), :[],
                    s(:lvar, :i)), :coords,
                  s(:lvar, :lst)), nil))))),
      s(:def, :recomputeAngle,
        s(:args),
        s(:begin,
          s(:lvasgn, :scaling,
            s(:send,
              s(:send,
                s(:float, 3000.0), :/,
                s(:ivar, :@length)), :/,
              s(:ivar, :@length))),
          s(:lvasgn, :firstDDTheta,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@theta), :*,
                      s(:const,
                        s(:const, nil, :Math), :PI)), :/,
                    s(:int, 180))), :-@), :*,
              s(:lvar, :scaling))),
          s(:lvasgn, :midDTheta,
            s(:send,
              s(:ivar, :@dTheta), :+,
              s(:lvar, :firstDDTheta))),
          s(:lvasgn, :midTheta,
            s(:send,
              s(:ivar, :@theta), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:ivar, :@dTheta), :+,
                    s(:lvar, :midDTheta))), :/,
                s(:int, 2)))),
          s(:lvasgn, :midDDTheta,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sin,
                  s(:send,
                    s(:send,
                      s(:lvar, :midTheta), :*,
                      s(:const,
                        s(:const, nil, :Math), :PI)), :/,
                    s(:int, 180))), :-@), :*,
              s(:lvar, :scaling))),
          s(:lvasgn, :midDTheta,
            s(:send,
              s(:ivar, :@dTheta), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :firstDDTheta), :+,
                    s(:lvar, :midDDTheta))), :/,
                s(:int, 2)))),
          s(:lvasgn, :midTheta,
            s(:send,
              s(:ivar, :@theta), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:ivar, :@dTheta), :+,
                    s(:lvar, :midDTheta))), :/,
                s(:int, 2)))),
          s(:lvasgn, :midDDTheta,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sin,
                  s(:send,
                    s(:send,
                      s(:lvar, :midTheta), :*,
                      s(:const,
                        s(:const, nil, :Math), :PI)), :/,
                    s(:int, 180))), :-@), :*,
              s(:lvar, :scaling))),
          s(:lvasgn, :lastDTheta,
            s(:send,
              s(:lvar, :midDTheta), :+,
              s(:lvar, :midDDTheta))),
          s(:lvasgn, :lastTheta,
            s(:send,
              s(:lvar, :midTheta), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :midDTheta), :+,
                    s(:lvar, :lastDTheta))), :/,
                s(:int, 2)))),
          s(:lvasgn, :lastDDTheta,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sin,
                  s(:send,
                    s(:send,
                      s(:lvar, :lastTheta), :*,
                      s(:const,
                        s(:const, nil, :Math), :PI)), :/,
                    s(:int, 180))), :-@), :*,
              s(:lvar, :scaling))),
          s(:lvasgn, :lastDTheta,
            s(:send,
              s(:lvar, :midDTheta), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :midDDTheta), :+,
                    s(:lvar, :lastDDTheta))), :/,
                s(:int, 2)))),
          s(:lvasgn, :lastTheta,
            s(:send,
              s(:lvar, :midTheta), :+,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :midDTheta), :+,
                    s(:lvar, :lastDTheta))), :/,
                s(:int, 2)))),
          s(:ivasgn, :@dTheta,
            s(:lvar, :lastDTheta)),
          s(:ivasgn, :@theta,
            s(:lvar, :lastTheta)))),
      s(:def, :repeat,
        s(:args),
        s(:begin,
          s(:send, nil, :recomputeAngle),
          s(:send, nil, :showPendulum),
          s(:send, nil, :showPhase))))),
  s(:send,
    s(:const, nil, :PendulumAnimationDemo), :new,
    s(:lvar, :base_frame)))
