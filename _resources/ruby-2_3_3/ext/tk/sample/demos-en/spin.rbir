s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$spin_demo)),
      s(:gvar, :$spin_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$spin_demo), :destroy),
      s(:gvasgn, :$spin_demo,
        s(:nil))), nil),
  s(:gvasgn, :$spin_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Spinbox Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "spin")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$spin_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :font),
          s(:gvar, :$font)),
        s(:pair,
          s(:sym, :wraplength),
          s(:str, "5i")),
        s(:pair,
          s(:sym, :justify),
          s(:sym, :left)),
        s(:pair,
          s(:sym, :text),
          s(:dstr,
            s(:str, "Three different spin-boxes are displayed below.  \nYou can add characters by pointing, clicking and typing.  \nThe normal Motif editing characters are supported, along with \nmany Emacs bindings.  For example, Backspace and Control-h \ndelete the character to the left of the insertion cursor and \nDelete and Control-d delete the chararacter to the right of the \ninsertion cursor.  For values that are too large to fit in the \nwindow all at once, you can scan through the value by dragging \nwith mouse button2 pressed.  Note that the first spin-box will \nonly permit you to type in integers, and the third selects from \na list of Australian cities.\n"),
            s(:str, "If your Tk library linked to Ruby doesn't include a 'spinbox' widget, \nthis demo doesn't work. Please use later version of Tk \nwhich supports a 'spinbox' widget.\n"))))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :side),
        s(:sym, :top)))),
  s(:block,
    s(:send,
      s(:const, nil, :TkFrame), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :f)),
    s(:begin,
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :pady),
            s(:str, "2m")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Dismiss")),
            s(:pair,
              s(:sym, :width),
              s(:int, 15)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:gvar, :$spin_demo), :destroy),
                  s(:gvasgn, :$spin_demo,
                    s(:nil))))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "See Code")),
            s(:pair,
              s(:sym, :width),
              s(:int, 15)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :showCode,
                  s(:str, "spin")))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))))),
  s(:lvasgn, :australianCities,
    s(:array,
      s(:str, "Canberra"),
      s(:str, "Sydney"),
      s(:str, "Melbourne"),
      s(:str, "Perth"),
      s(:str, "Adelaide"),
      s(:str, "Brisbane"),
      s(:str, "Hobart"),
      s(:str, "Darwin"),
      s(:str, "Alice Springs"))),
  s(:block,
    s(:send,
      s(:array,
        s(:send,
          s(:const, nil, :TkSpinbox), :new,
          s(:lvar, :base_frame),
          s(:hash,
            s(:pair,
              s(:sym, :from),
              s(:int, 1)),
            s(:pair,
              s(:sym, :to),
              s(:int, 10)),
            s(:pair,
              s(:sym, :width),
              s(:int, 10)),
            s(:pair,
              s(:sym, :validate),
              s(:sym, :key)),
            s(:pair,
              s(:sym, :validatecommand),
              s(:array,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :s)),
                  s(:or,
                    s(:send,
                      s(:lvar, :s), :==,
                      s(:str, "")),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "^[+-]?\\d+$"),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:str, "%P"))))),
        s(:send,
          s(:const, nil, :TkSpinbox), :new,
          s(:lvar, :base_frame),
          s(:hash,
            s(:pair,
              s(:sym, :from),
              s(:int, 0)),
            s(:pair,
              s(:sym, :to),
              s(:int, 3)),
            s(:pair,
              s(:sym, :increment),
              s(:float, 0.5)),
            s(:pair,
              s(:sym, :format),
              s(:str, "%05.2f")),
            s(:pair,
              s(:sym, :width),
              s(:int, 10)))),
        s(:send,
          s(:const, nil, :TkSpinbox), :new,
          s(:lvar, :base_frame),
          s(:hash,
            s(:pair,
              s(:sym, :values),
              s(:lvar, :australianCities)),
            s(:pair,
              s(:sym, :width),
              s(:int, 10))))), :each),
    s(:args,
      s(:arg, :sbox)),
    s(:send,
      s(:lvar, :sbox), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :side),
          s(:sym, :top)),
        s(:pair,
          s(:sym, :pady),
          s(:int, 5)),
        s(:pair,
          s(:sym, :padx),
          s(:int, 10))))))
