s(:begin,
  s(:def, :arrowSetup,
    s(:args,
      s(:arg, :c)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_arrowInfo)),
      s(:lvasgn, :tags,
        s(:send,
          s(:lvar, :c), :gettags,
          s(:str, "current"))),
      s(:if,
        s(:send,
          s(:lvar, :tags), :!=,
          s(:array)),
        s(:lvasgn, :cur,
          s(:block,
            s(:send,
              s(:lvar, :tags), :find),
            s(:args,
              s(:arg, :t)),
            s(:and,
              s(:send,
                s(:lvar, :t), :kind_of?,
                s(:const, nil, :String)),
              s(:send,
                s(:lvar, :t), :=~,
                s(:regexp,
                  s(:str, "^box[1-3]$"),
                  s(:regopt)))))),
        s(:lvasgn, :cur,
          s(:nil))),
      s(:send,
        s(:lvar, :c), :delete,
        s(:str, "all")),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :v), :x1),
        s(:send,
          s(:lvar, :v), :y),
        s(:send,
          s(:lvar, :v), :x2),
        s(:send,
          s(:lvar, :v), :y),
        s(:send,
          s(:hash,
            s(:pair,
              s(:str, "width"),
              s(:send,
                s(:int, 10), :*,
                s(:send,
                  s(:lvar, :v), :width))),
            s(:pair,
              s(:str, "arrowshape"),
              s(:array,
                s(:send,
                  s(:int, 10), :*,
                  s(:send,
                    s(:lvar, :v), :a)),
                s(:send,
                  s(:int, 10), :*,
                  s(:send,
                    s(:lvar, :v), :b)),
                s(:send,
                  s(:int, 10), :*,
                  s(:send,
                    s(:lvar, :v), :c)))),
            s(:pair,
              s(:str, "arrow"),
              s(:str, "last"))), :update,
          s(:send,
            s(:lvar, :v), :bigLineStyle))),
      s(:lvasgn, :xtip,
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :-,
          s(:send,
            s(:int, 10), :*,
            s(:send,
              s(:lvar, :v), :b)))),
      s(:lvasgn, :deltaY,
        s(:send,
          s(:send,
            s(:int, 10), :*,
            s(:send,
              s(:lvar, :v), :c)), :+,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :width)))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :v), :x2),
        s(:send,
          s(:lvar, :v), :y),
        s(:lvar, :xtip),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :+,
          s(:lvar, :deltaY)),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :-,
          s(:send,
            s(:int, 10), :*,
            s(:send,
              s(:lvar, :v), :a))),
        s(:send,
          s(:lvar, :v), :y),
        s(:lvar, :xtip),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:lvar, :deltaY)),
        s(:send,
          s(:lvar, :v), :x2),
        s(:send,
          s(:lvar, :v), :y),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 2)),
          s(:pair,
            s(:str, "capstyle"),
            s(:str, "round")),
          s(:pair,
            s(:str, "joinstyle"),
            s(:str, "round")))),
      s(:send,
        s(:const, nil, :TkcRectangle), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :x2), :-,
            s(:send,
              s(:int, 10), :*,
              s(:send,
                s(:lvar, :v), :a))), :-,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :x2), :-,
            s(:send,
              s(:int, 10), :*,
              s(:send,
                s(:lvar, :v), :a))), :+,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :+,
          s(:int, 5)),
        s(:send,
          s(:hash,
            s(:pair,
              s(:str, "tags"),
              s(:array,
                s(:str, "box1"),
                s(:gvar, :$arrowTag_box)))), :update,
          s(:send,
            s(:lvar, :v), :boxStyle))),
      s(:send,
        s(:const, nil, :TkcRectangle), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :xtip), :-,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :y), :-,
            s(:lvar, :deltaY)), :-,
          s(:int, 5)),
        s(:send,
          s(:lvar, :xtip), :+,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :y), :-,
            s(:lvar, :deltaY)), :+,
          s(:int, 5)),
        s(:send,
          s(:hash,
            s(:pair,
              s(:str, "tags"),
              s(:array,
                s(:str, "box2"),
                s(:gvar, :$arrowTag_box)))), :update,
          s(:send,
            s(:lvar, :v), :boxStyle))),
      s(:send,
        s(:const, nil, :TkcRectangle), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x1), :-,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :y), :-,
            s(:send,
              s(:int, 5), :*,
              s(:send,
                s(:lvar, :v), :width))), :-,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:lvar, :v), :x1), :+,
          s(:int, 5)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :y), :-,
            s(:send,
              s(:int, 5), :*,
              s(:send,
                s(:lvar, :v), :width))), :+,
          s(:int, 5)),
        s(:send,
          s(:hash,
            s(:pair,
              s(:str, "tags"),
              s(:array,
                s(:str, "box3"),
                s(:gvar, :$arrowTag_box)))), :update,
          s(:send,
            s(:lvar, :v), :boxStyle))),
      s(:if,
        s(:lvar, :cur),
        s(:send,
          s(:lvar, :c), :itemconfigure,
          s(:lvar, :cur),
          s(:send,
            s(:lvar, :v), :activeStyle)), nil),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :+,
          s(:int, 50)),
        s(:int, 0),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :+,
          s(:int, 50)),
        s(:int, 1000),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:int, 2)))),
      s(:lvasgn, :tmp,
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :+,
          s(:int, 100))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:lvar, :tmp),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:int, 125)),
        s(:lvar, :tmp),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:int, 75)),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:send,
              s(:lvar, :v), :width)),
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:array,
              s(:send,
                s(:lvar, :v), :a),
              s(:send,
                s(:lvar, :v), :b),
              s(:send,
                s(:lvar, :v), :c))))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :tmp), :-,
          s(:int, 25)),
        s(:send,
          s(:lvar, :v), :y),
        s(:send,
          s(:lvar, :tmp), :+,
          s(:int, 25)),
        s(:send,
          s(:lvar, :v), :y),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:send,
              s(:lvar, :v), :width)),
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:array,
              s(:send,
                s(:lvar, :v), :a),
              s(:send,
                s(:lvar, :v), :b),
              s(:send,
                s(:lvar, :v), :c))))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:lvar, :tmp), :-,
          s(:int, 25)),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :+,
          s(:int, 75)),
        s(:send,
          s(:lvar, :tmp), :+,
          s(:int, 25)),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :+,
          s(:int, 125)),
        s(:hash,
          s(:pair,
            s(:str, "width"),
            s(:send,
              s(:lvar, :v), :width)),
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:array,
              s(:send,
                s(:lvar, :v), :a),
              s(:send,
                s(:lvar, :v), :b),
              s(:send,
                s(:lvar, :v), :c))))),
      s(:lvasgn, :tmp,
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :+,
          s(:int, 10))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:lvar, :tmp),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :width))),
        s(:lvar, :tmp),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:lvar, :deltaY)),
        s(:hash,
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:send,
              s(:lvar, :v), :smallTips)))),
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :+,
          s(:int, 15)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :v), :y), :-,
            s(:lvar, :deltaY)), :+,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :c))),
        s(:hash,
          s(:pair,
            s(:str, "text"),
            s(:send,
              s(:lvar, :v), :c)),
          s(:pair,
            s(:str, "anchor"),
            s(:str, "w")))),
      s(:lvasgn, :tmp,
        s(:send,
          s(:send,
            s(:lvar, :v), :x1), :-,
          s(:int, 10))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:lvar, :tmp),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :-,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :width))),
        s(:lvar, :tmp),
        s(:send,
          s(:send,
            s(:lvar, :v), :y), :+,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :width))),
        s(:hash,
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:send,
              s(:lvar, :v), :smallTips)))),
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x1), :-,
          s(:int, 15)),
        s(:send,
          s(:lvar, :v), :y),
        s(:hash,
          s(:pair,
            s(:str, "text"),
            s(:send,
              s(:lvar, :v), :width)),
          s(:pair,
            s(:str, "anchor"),
            s(:str, "e")))),
      s(:lvasgn, :tmp,
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :v), :y), :+,
              s(:send,
                s(:int, 5), :*,
                s(:send,
                  s(:lvar, :v), :width))), :+,
            s(:send,
              s(:int, 10), :*,
              s(:send,
                s(:lvar, :v), :c))), :+,
          s(:int, 10))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :-,
          s(:send,
            s(:int, 10), :*,
            s(:send,
              s(:lvar, :v), :a))),
        s(:lvar, :tmp),
        s(:send,
          s(:lvar, :v), :x2),
        s(:lvar, :tmp),
        s(:hash,
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:send,
              s(:lvar, :v), :smallTips)))),
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :-,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :a))),
        s(:send,
          s(:lvar, :tmp), :+,
          s(:int, 5)),
        s(:hash,
          s(:pair,
            s(:str, "text"),
            s(:send,
              s(:lvar, :v), :a)),
          s(:pair,
            s(:str, "anchor"),
            s(:str, "n")))),
      s(:lvasgn, :tmp,
        s(:send,
          s(:lvar, :tmp), :+,
          s(:int, 25))),
      s(:send,
        s(:const, nil, :TkcLine), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :-,
          s(:send,
            s(:int, 10), :*,
            s(:send,
              s(:lvar, :v), :b))),
        s(:lvar, :tmp),
        s(:send,
          s(:lvar, :v), :x2),
        s(:lvar, :tmp),
        s(:hash,
          s(:pair,
            s(:str, "arrow"),
            s(:str, "both")),
          s(:pair,
            s(:str, "arrowshape"),
            s(:send,
              s(:lvar, :v), :smallTips)))),
      s(:send,
        s(:const, nil, :TkcText), :new,
        s(:lvar, :c),
        s(:send,
          s(:send,
            s(:lvar, :v), :x2), :-,
          s(:send,
            s(:int, 5), :*,
            s(:send,
              s(:lvar, :v), :b))),
        s(:send,
          s(:lvar, :tmp), :+,
          s(:int, 5)),
        s(:hash,
          s(:pair,
            s(:str, "text"),
            s(:send,
              s(:lvar, :v), :b)),
          s(:pair,
            s(:str, "anchor"),
            s(:str, "n")))),
      s(:if,
        s(:send,
          s(:gvar, :$tk_version), :=~,
          s(:regexp,
            s(:str, "^4.*"),
            s(:regopt))),
        s(:begin,
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:lvar, :c),
            s(:send,
              s(:lvar, :v), :x1),
            s(:int, 310),
            s(:hash,
              s(:pair,
                s(:str, "text"),
                s(:dstr,
                  s(:str, "'width'=>"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :width)))),
              s(:pair,
                s(:str, "anchor"),
                s(:str, "w")),
              s(:pair,
                s(:str, "font"),
                s(:str, "-*-Helvetica-Medium-R-Normal--*-180-*-*-*-*-*-*")))),
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:lvar, :c),
            s(:send,
              s(:lvar, :v), :x1),
            s(:int, 330),
            s(:hash,
              s(:pair,
                s(:str, "text"),
                s(:dstr,
                  s(:str, "'arrowshape'=>["),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :a)),
                  s(:str, ", "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :b)),
                  s(:str, ", "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :c)),
                  s(:str, "]"))),
              s(:pair,
                s(:str, "anchor"),
                s(:str, "w")),
              s(:pair,
                s(:str, "font"),
                s(:str, "-*-Helvetica-Medium-R-Normal--*-180-*-*-*-*-*-*"))))),
        s(:begin,
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:lvar, :c),
            s(:send,
              s(:lvar, :v), :x1),
            s(:int, 310),
            s(:hash,
              s(:pair,
                s(:str, "text"),
                s(:dstr,
                  s(:str, "'width'=>"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :width)))),
              s(:pair,
                s(:str, "anchor"),
                s(:str, "w")),
              s(:pair,
                s(:str, "font"),
                s(:str, "Helvetica 18")))),
          s(:send,
            s(:const, nil, :TkcText), :new,
            s(:lvar, :c),
            s(:send,
              s(:lvar, :v), :x1),
            s(:int, 330),
            s(:hash,
              s(:pair,
                s(:str, "text"),
                s(:dstr,
                  s(:str, "'arrowshape'=>["),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :a)),
                  s(:str, ", "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :b)),
                  s(:str, ", "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :v), :c)),
                  s(:str, "]"))),
              s(:pair,
                s(:str, "anchor"),
                s(:str, "w")),
              s(:pair,
                s(:str, "font"),
                s(:str, "Helvetica 18")))))),
      s(:op_asgn,
        s(:send,
          s(:lvar, :v), :count), :+,
        s(:int, 1)))),
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$arrow_demo)),
      s(:gvar, :$arrow_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$arrow_demo), :destroy),
      s(:gvasgn, :$arrow_demo,
        s(:nil))), nil),
  s(:gvasgn, :$arrow_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Arrowhead Editor Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "arrow")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$arrow_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:block,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:str, "font"),
          s(:gvar, :$font)),
        s(:pair,
          s(:str, "wraplength"),
          s(:str, "5i")),
        s(:pair,
          s(:str, "justify"),
          s(:str, "left")),
        s(:pair,
          s(:str, "text"),
          s(:str, "This widget allows you to experiment with different widths and arrowhead shapes for lines in canvases.  To change the line width or the shape of the arrowhead, drag any of the three boxes attached to the oversized arrow.  The arrows on the right give examples at normal scale.  The text at the bottom shows the configuration options as you'd enter them for a canvas line item.")))),
    s(:args),
    s(:send, nil, :pack,
      s(:hash,
        s(:pair,
          s(:str, "side"),
          s(:str, "top"))))),
  s(:gvasgn, :$arrow_buttons,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Dismiss")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$arrow_demo)),
                    s(:gvasgn, :$arrow_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Show Code")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "arrow")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes"))))))),
  s(:send,
    s(:gvar, :$arrow_buttons), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:gvasgn, :$arrow_canvas,
    s(:send,
      s(:const, nil, :TkCanvas), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:str, "width"),
          s(:int, 500)),
        s(:pair,
          s(:str, "height"),
          s(:int, 350)),
        s(:pair,
          s(:str, "relief"),
          s(:str, "sunken")),
        s(:pair,
          s(:str, "borderwidth"),
          s(:int, 2))))),
  s(:send,
    s(:gvar, :$arrow_canvas), :pack,
    s(:hash,
      s(:pair,
        s(:str, "expand"),
        s(:str, "yes")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "both")))),
  s(:if,
    s(:send,
      s(:const, nil, :Struct), :const_defined?,
      s(:str, "ArrowInfo")), nil,
    s(:gvasgn, :$demo_arrowInfo,
      s(:send,
        s(:send,
          s(:const, nil, :Struct), :new,
          s(:str, "ArrowInfo"),
          s(:sym, :a),
          s(:sym, :b),
          s(:sym, :c),
          s(:sym, :width),
          s(:sym, :motionProc),
          s(:sym, :x1),
          s(:sym, :x2),
          s(:sym, :y),
          s(:sym, :smallTips),
          s(:sym, :count),
          s(:sym, :bigLineStyle),
          s(:sym, :boxStyle),
          s(:sym, :activeStyle)), :new))),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :a=,
    s(:int, 8)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :b=,
    s(:int, 10)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :c=,
    s(:int, 3)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :width=,
    s(:int, 2)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :motionProc=,
    s(:block,
      s(:send, nil, :proc),
      s(:args), nil)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :x1=,
    s(:int, 40)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :x2=,
    s(:int, 350)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :y=,
    s(:int, 150)),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :smallTips=,
    s(:array,
      s(:int, 5),
      s(:int, 5),
      s(:int, 2))),
  s(:send,
    s(:gvar, :$demo_arrowInfo), :count=,
    s(:int, 0)),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :TkWinfo), :depth,
        s(:gvar, :$arrow_canvas)), :>,
      s(:int, 1)),
    s(:begin,
      s(:send,
        s(:gvar, :$demo_arrowInfo), :bigLineStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "SkyBlue1")))),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :boxStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "")),
          s(:pair,
            s(:str, "outline"),
            s(:str, "black")),
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :activeStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "red")),
          s(:pair,
            s(:str, "outline"),
            s(:str, "black")),
          s(:pair,
            s(:str, "width"),
            s(:int, 1))))),
    s(:begin,
      s(:send,
        s(:gvar, :$demo_arrowInfo), :bigLineStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "black")),
          s(:pair,
            s(:str, "stipple"),
            s(:send,
              s(:str, "@"), :+,
              s(:send,
                s(:array,
                  s(:gvar, :$demo_dir),
                  s(:str, ".."),
                  s(:str, "images"),
                  s(:str, "grey.25")), :join,
                s(:const,
                  s(:const, nil, :File), :Separator)))))),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :boxStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "")),
          s(:pair,
            s(:str, "outline"),
            s(:str, "black")),
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :activeStyle=,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "black")),
          s(:pair,
            s(:str, "outline"),
            s(:str, "black")),
          s(:pair,
            s(:str, "width"),
            s(:int, 1)))))),
  s(:gvasgn, :$arrowTag_box,
    s(:send,
      s(:const, nil, :TkcTag), :new,
      s(:gvar, :$arrow_canvas))),
  s(:send, nil, :arrowSetup,
    s(:gvar, :$arrow_canvas)),
  s(:send,
    s(:gvar, :$arrowTag_box), :bind,
    s(:str, "Enter"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:gvar, :$arrow_canvas), :itemconfigure,
        s(:str, "current"),
        s(:send,
          s(:gvar, :$demo_arrowInfo), :activeStyle)))),
  s(:send,
    s(:gvar, :$arrowTag_box), :bind,
    s(:str, "Leave"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:gvar, :$arrow_canvas), :itemconfigure,
        s(:str, "current"),
        s(:send,
          s(:gvar, :$demo_arrowInfo), :boxStyle)))),
  s(:send,
    s(:gvar, :$arrowTag_box), :bind,
    s(:str, "B1-Enter"),
    s(:block,
      s(:send, nil, :proc),
      s(:args), nil)),
  s(:send,
    s(:gvar, :$arrowTag_box), :bind,
    s(:str, "B1-Leave"),
    s(:block,
      s(:send, nil, :proc),
      s(:args), nil)),
  s(:send,
    s(:gvar, :$arrow_canvas), :itembind,
    s(:str, "box1"),
    s(:str, "1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :motionProc=,
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:send, nil, :arrowMove1,
            s(:gvar, :$arrow_canvas),
            s(:lvar, :x),
            s(:lvar, :y)))))),
  s(:send,
    s(:gvar, :$arrow_canvas), :itembind,
    s(:str, "box2"),
    s(:str, "1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :motionProc=,
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:send, nil, :arrowMove2,
            s(:gvar, :$arrow_canvas),
            s(:lvar, :x),
            s(:lvar, :y)))))),
  s(:send,
    s(:gvar, :$arrow_canvas), :itembind,
    s(:str, "box3"),
    s(:str, "1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:gvar, :$demo_arrowInfo), :motionProc=,
        s(:block,
          s(:send, nil, :proc),
          s(:args,
            s(:arg, :x),
            s(:arg, :y)),
          s(:send, nil, :arrowMove3,
            s(:gvar, :$arrow_canvas),
            s(:lvar, :x),
            s(:lvar, :y)))))),
  s(:send,
    s(:gvar, :$arrowTag_box), :bind,
    s(:str, "B1-Motion"),
    s(:block,
      s(:send, nil, :proc),
      s(:args,
        s(:arg, :x),
        s(:arg, :y)),
      s(:send,
        s(:send,
          s(:gvar, :$demo_arrowInfo), :motionProc), :call,
        s(:lvar, :x),
        s(:lvar, :y))),
    s(:str, "%x %y")),
  s(:send,
    s(:gvar, :$arrow_canvas), :bind,
    s(:str, "Any-ButtonRelease-1"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :arrowSetup,
        s(:gvar, :$arrow_canvas)))),
  s(:def, :arrowMove1,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_arrowInfo)),
      s(:lvasgn, :newA,
        s(:send,
          s(:begin,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :v), :x2), :+,
                s(:int, 5)), :-,
              s(:send,
                s(:send,
                  s(:lvar, :c), :canvasx,
                  s(:lvar, :x)), :round))), :/,
          s(:int, 10))),
      s(:if,
        s(:send,
          s(:lvar, :newA), :<,
          s(:int, 0)),
        s(:lvasgn, :newA,
          s(:int, 0)), nil),
      s(:if,
        s(:send,
          s(:lvar, :newA), :>,
          s(:int, 25)),
        s(:lvasgn, :newA,
          s(:int, 25)), nil),
      s(:if,
        s(:send,
          s(:lvar, :newA), :!=,
          s(:send,
            s(:lvar, :v), :a)),
        s(:begin,
          s(:send,
            s(:lvar, :c), :move,
            s(:str, "box1"),
            s(:send,
              s(:int, 10), :*,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :v), :a), :-,
                  s(:lvar, :newA)))),
            s(:int, 0)),
          s(:send,
            s(:lvar, :v), :a=,
            s(:lvar, :newA))), nil))),
  s(:def, :arrowMove2,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_arrowInfo)),
      s(:lvasgn, :newB,
        s(:send,
          s(:begin,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :v), :x2), :+,
                s(:int, 5)), :-,
              s(:send,
                s(:send,
                  s(:lvar, :c), :canvasx,
                  s(:lvar, :x)), :round))), :/,
          s(:int, 10))),
      s(:if,
        s(:send,
          s(:lvar, :newB), :<,
          s(:int, 0)),
        s(:lvasgn, :newB,
          s(:int, 0)), nil),
      s(:if,
        s(:send,
          s(:lvar, :newB), :>,
          s(:int, 25)),
        s(:lvasgn, :newB,
          s(:int, 25)), nil),
      s(:lvasgn, :newC,
        s(:send,
          s(:begin,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :v), :y), :+,
                  s(:int, 5)), :-,
                s(:send,
                  s(:send,
                    s(:lvar, :c), :canvasy,
                    s(:lvar, :y)), :round)), :-,
              s(:send,
                s(:int, 5), :*,
                s(:send,
                  s(:lvar, :v), :width)))), :/,
          s(:int, 10))),
      s(:if,
        s(:send,
          s(:lvar, :newC), :<,
          s(:int, 0)),
        s(:lvasgn, :newC,
          s(:int, 0)), nil),
      s(:if,
        s(:send,
          s(:lvar, :newC), :>,
          s(:int, 20)),
        s(:lvasgn, :newC,
          s(:int, 20)), nil),
      s(:if,
        s(:or,
          s(:send,
            s(:lvar, :newB), :!=,
            s(:send,
              s(:lvar, :v), :b)),
          s(:send,
            s(:lvar, :newC), :!=,
            s(:send,
              s(:lvar, :v), :c))),
        s(:begin,
          s(:send,
            s(:lvar, :c), :move,
            s(:str, "box2"),
            s(:send,
              s(:int, 10), :*,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :v), :b), :-,
                  s(:lvar, :newB)))),
            s(:send,
              s(:int, 10), :*,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :v), :c), :-,
                  s(:lvar, :newC))))),
          s(:send,
            s(:lvar, :v), :b=,
            s(:lvar, :newB)),
          s(:send,
            s(:lvar, :v), :c=,
            s(:lvar, :newC))), nil))),
  s(:def, :arrowMove3,
    s(:args,
      s(:arg, :c),
      s(:arg, :x),
      s(:arg, :y)),
    s(:begin,
      s(:lvasgn, :v,
        s(:gvar, :$demo_arrowInfo)),
      s(:lvasgn, :newWidth,
        s(:send,
          s(:begin,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :v), :y), :+,
                s(:int, 2)), :-,
              s(:send,
                s(:send,
                  s(:lvar, :c), :canvasy,
                  s(:lvar, :y)), :round))), :/,
          s(:int, 5))),
      s(:if,
        s(:send,
          s(:lvar, :newWidth), :<,
          s(:int, 0)),
        s(:lvasgn, :newWidth,
          s(:int, 0)), nil),
      s(:if,
        s(:send,
          s(:lvar, :newWidth), :>,
          s(:int, 20)),
        s(:lvasgn, :newWidth,
          s(:int, 20)), nil),
      s(:if,
        s(:send,
          s(:lvar, :newWidth), :!=,
          s(:send,
            s(:lvar, :v), :width)),
        s(:begin,
          s(:send,
            s(:lvar, :c), :move,
            s(:str, "box3"),
            s(:int, 0),
            s(:send,
              s(:int, 5), :*,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :v), :width), :-,
                  s(:lvar, :newWidth))))),
          s(:send,
            s(:lvar, :v), :width=,
            s(:lvar, :newWidth))), nil))))
