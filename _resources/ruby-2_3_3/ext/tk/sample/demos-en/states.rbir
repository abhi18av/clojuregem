s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$states_demo)),
      s(:gvar, :$states_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$states_demo), :destroy),
      s(:gvasgn, :$states_demo,
        s(:nil))), nil),
  s(:gvasgn, :$states_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Listbox Demonstration (states)")),
        s(:send, nil, :iconname,
          s(:str, "states")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$states_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:lvasgn, :msg,
    s(:block,
      s(:send,
        s(:const, nil, :TkLabel), :new,
        s(:lvar, :base_frame)),
      s(:args),
      s(:begin,
        s(:send, nil, :font,
          s(:gvar, :$font)),
        s(:send, nil, :wraplength,
          s(:str, "4i")),
        s(:send, nil, :justify,
          s(:str, "left")),
        s(:send, nil, :text,
          s(:str, "A listbox containing the 50 states is displayed below, along with a scrollbar.  You can scan the list either using the scrollbar or by scanning.  To scan, press button 2 in the widget and drag up or down."))))),
  s(:send,
    s(:lvar, :msg), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")))),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Dismiss")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$states_demo)),
                    s(:gvasgn, :$states_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Show Code")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "states")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))))), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:lvasgn, :states_lbox,
    s(:nil)),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame),
        s(:hash,
          s(:pair,
            s(:str, "borderwidth"),
            s(:str, ".5c")))),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:lvasgn, :s,
          s(:send,
            s(:const, nil, :TkScrollbar), :new,
            s(:lvar, :w))),
        s(:lvasgn, :states_lbox,
          s(:block,
            s(:send,
              s(:const, nil, :TkListbox), :new,
              s(:lvar, :w)),
            s(:args),
            s(:begin,
              s(:send, nil, :setgrid,
                s(:int, 1)),
              s(:send, nil, :height,
                s(:int, 12)),
              s(:send, nil, :yscrollcommand,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :first),
                    s(:arg, :last)),
                  s(:send,
                    s(:lvar, :s), :set,
                    s(:lvar, :first),
                    s(:lvar, :last))))))),
        s(:send,
          s(:lvar, :s), :command,
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:restarg, :args)),
            s(:send,
              s(:lvar, :states_lbox), :yview,
              s(:splat,
                s(:lvar, :args))))),
        s(:send,
          s(:lvar, :s), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "right")),
            s(:pair,
              s(:str, "fill"),
              s(:str, "y")))),
        s(:send,
          s(:lvar, :states_lbox), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:int, 1)),
            s(:pair,
              s(:str, "fill"),
              s(:str, "both")))))), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")),
      s(:pair,
        s(:str, "expand"),
        s(:str, "yes")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "y")))),
  s(:lvasgn, :ins_data,
    s(:array,
      s(:str, "Alabama"),
      s(:str, "Alaska"),
      s(:str, "Arizona"),
      s(:str, "Arkansas"),
      s(:str, "California"),
      s(:str, "Colorado"),
      s(:str, "Connecticut"),
      s(:str, "Delaware"),
      s(:str, "Florida"),
      s(:str, "Georgia"),
      s(:str, "Hawaii"),
      s(:str, "Idaho"),
      s(:str, "Illinois"),
      s(:str, "Indiana"),
      s(:str, "Iowa"),
      s(:str, "Kansas"),
      s(:str, "Kentucky"),
      s(:str, "Louisiana"),
      s(:str, "Maine"),
      s(:str, "Maryland"),
      s(:str, "Massachusetts"),
      s(:str, "Michigan"),
      s(:str, "Minnesota"),
      s(:str, "Mississippi"),
      s(:str, "Missouri"),
      s(:str, "Montana"),
      s(:str, "Nebraska"),
      s(:str, "Nevada"),
      s(:str, "New_Hampshire"),
      s(:str, "New_Jersey"),
      s(:str, "New_Mexico"),
      s(:str, "New_York"),
      s(:str, "North_Carolina"),
      s(:str, "North_Dakota"),
      s(:str, "Ohio"),
      s(:str, "Oklahoma"),
      s(:str, "Oregon"),
      s(:str, "Pennsylvania"),
      s(:str, "Rhode_Island"),
      s(:str, "South_Carolina"),
      s(:str, "South_Dakota"),
      s(:str, "Tennessee"),
      s(:str, "Texas"),
      s(:str, "Utah"),
      s(:str, "Vermont"),
      s(:str, "Virginia"),
      s(:str, "Washington"),
      s(:str, "West_Virginia"),
      s(:str, "Wisconsin"),
      s(:str, "Wyoming"))),
  s(:send,
    s(:lvar, :states_lbox), :insert,
    s(:int, 0),
    s(:splat,
      s(:lvar, :ins_data))))
