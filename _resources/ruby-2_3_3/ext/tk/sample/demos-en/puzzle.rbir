s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$puzzle_demo)),
      s(:gvar, :$puzzle_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$puzzle_demo), :destroy),
      s(:gvasgn, :$puzzle_demo,
        s(:nil))), nil),
  s(:gvasgn, :$puzzle_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "15-Puzzle Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "15-Puzzle")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$puzzle_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:lvasgn, :msg,
    s(:block,
      s(:send,
        s(:const, nil, :TkLabel), :new,
        s(:lvar, :base_frame)),
      s(:args),
      s(:begin,
        s(:send, nil, :font,
          s(:gvar, :$font)),
        s(:send, nil, :wraplength,
          s(:str, "4i")),
        s(:send, nil, :justify,
          s(:str, "left")),
        s(:send, nil, :text,
          s(:str, "A 15-puzzle appears below as a collection of buttons.  Click on any of the pieces next to the space, and that piece will slide over the space.  Continue this until the pieces are arranged in numerical order from upper-left to lower-right."))))),
  s(:send,
    s(:lvar, :msg), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")))),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args,
        s(:arg, :frame)),
      s(:begin,
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Dismiss")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :tmppath,
                      s(:gvar, :$puzzle_demo)),
                    s(:gvasgn, :$puzzle_demo,
                      s(:nil)),
                    s(:send,
                      s(:lvar, :tmppath), :destroy)))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))),
        s(:send,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:lvar, :frame)),
            s(:args),
            s(:begin,
              s(:send, nil, :text,
                s(:str, "Show Code")),
              s(:send, nil, :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :showCode,
                    s(:str, "puzzle")))))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "side"),
              s(:str, "left")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "yes")))))), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "bottom")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "2m")))),
  s(:kwbegin,
    s(:rescue,
      s(:if,
        s(:send,
          s(:send,
            s(:const, nil, :Tk), :windowingsystem), :==,
          s(:str, "aqua")),
        s(:begin,
          s(:lvasgn, :frameWidth,
            s(:int, 168)),
          s(:lvasgn, :frameHeight,
            s(:int, 168))),
        s(:if,
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :default_widget_set), :==,
            s(:sym, :Ttk)),
          s(:begin,
            s(:lvasgn, :frameWidth,
              s(:int, 148)),
            s(:lvasgn, :frameHeight,
              s(:int, 124))),
          s(:begin,
            s(:lvasgn, :frameWidth,
              s(:int, 120)),
            s(:lvasgn, :frameHeight,
              s(:int, 120))))),
      s(:resbody, nil, nil,
        s(:begin,
          s(:lvasgn, :frameWidth,
            s(:int, 120)),
          s(:lvasgn, :frameHeight,
            s(:int, 120)))), nil)),
  s(:lvasgn, :depend_on_button_width,
    s(:false)),
  s(:lvasgn, :s,
    s(:send,
      s(:const, nil, :TkScrollbar), :new,
      s(:lvar, :base_frame))),
  s(:lvasgn, :base,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :base_frame)),
      s(:args),
      s(:begin,
        s(:send, nil, :width,
          s(:lvar, :frameWidth)),
        s(:send, nil, :height,
          s(:lvar, :frameHeight)),
        s(:send, nil, :borderwidth,
          s(:int, 2)),
        s(:send, nil, :relief,
          s(:str, "sunken")),
        s(:send, nil, :bg,
          s(:send,
            s(:lvar, :s), :[],
            s(:str, "troughcolor")))))),
  s(:send,
    s(:lvar, :s), :destroy),
  s(:send,
    s(:lvar, :base), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")),
      s(:pair,
        s(:str, "padx"),
        s(:str, "1c")),
      s(:pair,
        s(:str, "pady"),
        s(:str, "1c")))),
  s(:def, :def_puzzleswitch_proc,
    s(:args,
      s(:arg, :w),
      s(:arg, :num)),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :puzzleSwitch,
        s(:lvar, :w),
        s(:lvar, :num)))),
  s(:gvasgn, :$xpos,
    s(:hash)),
  s(:gvasgn, :$ypos,
    s(:hash)),
  s(:lvasgn, :order,
    s(:array,
      s(:int, 3),
      s(:int, 1),
      s(:int, 6),
      s(:int, 2),
      s(:int, 5),
      s(:int, 7),
      s(:int, 15),
      s(:int, 13),
      s(:int, 4),
      s(:int, 11),
      s(:int, 8),
      s(:int, 9),
      s(:int, 14),
      s(:int, 10),
      s(:int, 12))),
  s(:block,
    s(:send,
      s(:begin,
        s(:irange,
          s(:int, 0),
          s(:int, 14))), :each),
    s(:args,
      s(:arg, :i)),
    s(:begin,
      s(:lvasgn, :num,
        s(:send,
          s(:lvar, :order), :[],
          s(:lvar, :i))),
      s(:send,
        s(:gvar, :$xpos), :[]=,
        s(:lvar, :num),
        s(:send,
          s(:begin,
            s(:send,
              s(:lvar, :i), :%,
              s(:int, 4))), :*,
          s(:float, 0.25))),
      s(:send,
        s(:gvar, :$ypos), :[]=,
        s(:lvar, :num),
        s(:send,
          s(:begin,
            s(:send,
              s(:lvar, :i), :/,
              s(:int, 4))), :*,
          s(:float, 0.25))),
      s(:send,
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:lvar, :base)),
          s(:args,
            s(:arg, :w)),
          s(:begin,
            s(:send, nil, :relief,
              s(:str, "raised")),
            s(:send, nil, :text,
              s(:lvar, :num)),
            s(:send, nil, :highlightthickness,
              s(:int, 0)),
            s(:send, nil, :command,
              s(:send, nil, :def_puzzleswitch_proc,
                s(:lvar, :w),
                s(:lvar, :num))),
            s(:if,
              s(:and,
                s(:lvar, :depend_on_button_width),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :w), :winfo_reqwidth), :*,
                      s(:int, 4)), :>,
                    s(:send,
                      s(:lvar, :base), :width)))),
              s(:send,
                s(:lvar, :base), :width=,
                s(:send,
                  s(:send,
                    s(:lvar, :w), :winfo_reqwidth), :*,
                  s(:int, 4))), nil))), :place,
        s(:hash,
          s(:pair,
            s(:str, "relx"),
            s(:send,
              s(:gvar, :$xpos), :[],
              s(:lvar, :num))),
          s(:pair,
            s(:str, "rely"),
            s(:send,
              s(:gvar, :$ypos), :[],
              s(:lvar, :num))),
          s(:pair,
            s(:str, "relwidth"),
            s(:float, 0.25)),
          s(:pair,
            s(:str, "relheight"),
            s(:float, 0.25)))))),
  s(:send,
    s(:gvar, :$xpos), :[]=,
    s(:str, "space"),
    s(:float, 0.75)),
  s(:send,
    s(:gvar, :$ypos), :[]=,
    s(:str, "space"),
    s(:float, 0.75)),
  s(:def, :puzzleSwitch,
    s(:args,
      s(:arg, :w),
      s(:arg, :num)),
    s(:if,
      s(:or,
        s(:begin,
          s(:and,
            s(:and,
              s(:and,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$ypos), :[],
                      s(:lvar, :num)), :>=,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:gvar, :$ypos), :[],
                          s(:str, "space")), :-,
                        s(:float, 0.01))))),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$ypos), :[],
                      s(:lvar, :num)), :<=,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:gvar, :$ypos), :[],
                          s(:str, "space")), :+,
                        s(:float, 0.01)))))),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:gvar, :$xpos), :[],
                    s(:lvar, :num)), :>=,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:gvar, :$xpos), :[],
                        s(:str, "space")), :-,
                      s(:float, 0.26)))))),
            s(:begin,
              s(:send,
                s(:send,
                  s(:gvar, :$xpos), :[],
                  s(:lvar, :num)), :<=,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$xpos), :[],
                      s(:str, "space")), :+,
                    s(:float, 0.26))))))),
        s(:begin,
          s(:and,
            s(:and,
              s(:and,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$xpos), :[],
                      s(:lvar, :num)), :>=,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:gvar, :$xpos), :[],
                          s(:str, "space")), :-,
                        s(:float, 0.01))))),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$xpos), :[],
                      s(:lvar, :num)), :<=,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:gvar, :$xpos), :[],
                          s(:str, "space")), :+,
                        s(:float, 0.01)))))),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:gvar, :$ypos), :[],
                    s(:lvar, :num)), :>=,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:gvar, :$ypos), :[],
                        s(:str, "space")), :-,
                      s(:float, 0.26)))))),
            s(:begin,
              s(:send,
                s(:send,
                  s(:gvar, :$ypos), :[],
                  s(:lvar, :num)), :<=,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$ypos), :[],
                      s(:str, "space")), :+,
                    s(:float, 0.26)))))))),
      s(:begin,
        s(:lvasgn, :tmp,
          s(:send,
            s(:gvar, :$xpos), :[],
            s(:str, "space"))),
        s(:send,
          s(:gvar, :$xpos), :[]=,
          s(:str, "space"),
          s(:send,
            s(:gvar, :$xpos), :[],
            s(:lvar, :num))),
        s(:send,
          s(:gvar, :$xpos), :[]=,
          s(:lvar, :num),
          s(:lvar, :tmp)),
        s(:lvasgn, :tmp,
          s(:send,
            s(:gvar, :$ypos), :[],
            s(:str, "space"))),
        s(:send,
          s(:gvar, :$ypos), :[]=,
          s(:str, "space"),
          s(:send,
            s(:gvar, :$ypos), :[],
            s(:lvar, :num))),
        s(:send,
          s(:gvar, :$ypos), :[]=,
          s(:lvar, :num),
          s(:lvar, :tmp)),
        s(:send,
          s(:lvar, :w), :place,
          s(:hash,
            s(:pair,
              s(:str, "relx"),
              s(:send,
                s(:gvar, :$xpos), :[],
                s(:lvar, :num))),
            s(:pair,
              s(:str, "rely"),
              s(:send,
                s(:gvar, :$ypos), :[],
                s(:lvar, :num)))))), nil)))
