s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$paned1_demo)),
      s(:gvar, :$paned1_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$paned1_demo), :destroy),
      s(:gvasgn, :$paned1_demo,
        s(:nil))), nil),
  s(:gvasgn, :$paned1_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Horizontal Paned Window Demonstration")),
        s(:send, nil, :iconname,
          s(:str, "paned1")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:gvar, :$paned1_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :font),
          s(:gvar, :$font)),
        s(:pair,
          s(:sym, :wraplength),
          s(:str, "4i")),
        s(:pair,
          s(:sym, :justify),
          s(:sym, :left)),
        s(:pair,
          s(:sym, :text),
          s(:dstr,
            s(:str, "The sash between the two coloured windows below can be used to divide the area between them.  Use the left mouse button to resize without redrawing by just moving the sash, and use the middle mouse button to resize opaquely (always redrawing the windows in each position.)\n"),
            s(:str, "If your Tk library linked to Ruby doesn't include a 'panedwindow', this demo doesn't work. Please use later version of Tk which supports a 'panedwindow'.\n"))))), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :side),
        s(:sym, :top)))),
  s(:block,
    s(:send,
      s(:const, nil, :TkFrame), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :f)),
    s(:begin,
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :bottom)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :pady),
            s(:str, "2m")))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Dismiss")),
            s(:pair,
              s(:sym, :width),
              s(:int, 15)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:gvar, :$paned1_demo), :destroy),
                  s(:gvasgn, :$paned1_demo,
                    s(:nil))))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))),
      s(:send,
        s(:send,
          s(:const, nil, :TkButton), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "See Code")),
            s(:pair,
              s(:sym, :width),
              s(:int, 15)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :showCode,
                  s(:str, "paned1")))))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))))),
  s(:block,
    s(:send,
      s(:const, nil, :TkPanedwindow), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :orient),
          s(:sym, :horizontal)))),
    s(:args,
      s(:arg, :f)),
    s(:begin,
      s(:send, nil, :add,
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :Label), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "This is the\nleft side")),
            s(:pair,
              s(:sym, :bg),
              s(:str, "yellow")))),
        s(:send,
          s(:const,
            s(:const, nil, :Tk), :Label), :new,
          s(:lvar, :f),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "This is the\nright side")),
            s(:pair,
              s(:sym, :bg),
              s(:str, "cyan"))))),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:sym, :side),
            s(:sym, :top)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :both)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 2)),
          s(:pair,
            s(:sym, :padx),
            s(:str, "2m")))))))
