s(:begin,
  s(:if,
    s(:and,
      s(:defined?,
        s(:gvar, :$toolbar_demo)),
      s(:gvar, :$toolbar_demo)),
    s(:begin,
      s(:send,
        s(:gvar, :$toolbar_demo), :destroy),
      s(:gvasgn, :$toolbar_demo,
        s(:nil))), nil),
  s(:gvasgn, :$toolbar_demo,
    s(:block,
      s(:send,
        s(:const, nil, :TkToplevel), :new),
      s(:args,
        s(:arg, :w)),
      s(:begin,
        s(:send, nil, :title,
          s(:str, "Ttk Menu Buttons")),
        s(:send, nil, :iconname,
          s(:str, "toolbar")),
        s(:send, nil, :positionWindow,
          s(:lvar, :w))))),
  s(:lvasgn, :base_frame,
    s(:send,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Frame), :new,
        s(:gvar, :$toolbar_demo)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :windowingsystem), :!=,
      s(:str, "aqua")),
    s(:lvasgn, :msg,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Label), :new,
        s(:lvar, :base_frame),
        s(:hash,
          s(:pair,
            s(:sym, :wraplength),
            s(:str, "4i")),
          s(:pair,
            s(:sym, :text),
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :UTF8_String), :new,
              s(:str, "This is a demonstration of how to do \na toolbar that is styled correctly \nand which can be torn off (this feature reqrires Tcl/Tk8.5). \nThe buttons are configured to be \\u201Ctoolbar style\\u201D buttons by \ntelling them that they are to use the Toolbutton style. At the left \nend of the toolbar is a simple marker that the cursor changes to a \nmovement icon over; drag that away from the toolbar to tear off the \nwhole toolbar into a separate toplevel widget. When the dragged-off \ntoolbar is no longer needed, just close it like any normal toplevel \nand it will reattach to the window it was torn off from.\n")))))),
    s(:lvasgn, :msg,
      s(:send,
        s(:const,
          s(:const, nil, :Ttk), :Label), :new,
        s(:lvar, :base_frame),
        s(:hash,
          s(:pair,
            s(:sym, :wraplength),
            s(:str, "4i")),
          s(:pair,
            s(:sym, :text),
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :UTF8_String), :new,
              s(:str, "This is a demonstration of how to do \na toolbar that is styled correctly. The buttons are configured to \nbe \\u201Ctoolbar style\\u201D buttons by telling them that they are \nto use the Toolbutton style.\n"))))))),
  s(:lvasgn, :tbar_base,
    s(:send,
      s(:const,
        s(:const, nil, :Tk), :Frame), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :widgetname),
          s(:str, "toolbar"))))),
  s(:lvasgn, :sep,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Separator), :new,
      s(:lvar, :base_frame))),
  s(:lvasgn, :to_base,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Frame), :new,
      s(:lvar, :tbar_base),
      s(:hash,
        s(:pair,
          s(:sym, :cursor),
          s(:str, "fleur"))))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :windowingsystem), :!=,
      s(:str, "aqua")),
    s(:begin,
      s(:lvasgn, :to,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Separator), :new,
          s(:lvar, :to_base),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical))))),
      s(:lvasgn, :to2,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Separator), :new,
          s(:lvar, :to_base),
          s(:hash,
            s(:pair,
              s(:sym, :orient),
              s(:sym, :vertical))))),
      s(:send,
        s(:lvar, :to), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :y)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 2)),
          s(:pair,
            s(:sym, :side),
            s(:sym, :left)))),
      s(:send,
        s(:lvar, :to2), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :y)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :side),
            s(:sym, :left))))), nil),
  s(:lvasgn, :contents,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Frame), :new,
      s(:lvar, :tbar_base))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :to_base),
    s(:lvar, :contents),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:str, "nsew")))),
  s(:send,
    s(:lvar, :tbar_base), :grid_columnconfigure,
    s(:lvar, :contents),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :contents), :grid_columnconfigure,
    s(:int, 1000),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :windowingsystem), :!=,
      s(:str, "aqua")),
    s(:begin,
      s(:block,
        s(:send,
          s(:lvar, :to_base), :bind,
          s(:str, "B1-Motion"),
          s(:str, "%X %Y")),
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send,
          s(:lvar, :tbar_base), :tearoff,
          s(:lvar, :to_base),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:block,
        s(:send,
          s(:lvar, :to), :bind,
          s(:str, "B1-Motion"),
          s(:str, "%X %Y")),
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send,
          s(:lvar, :tbar_base), :tearoff,
          s(:lvar, :to_base),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:block,
        s(:send,
          s(:lvar, :to2), :bind,
          s(:str, "B1-Motion"),
          s(:str, "%X %Y")),
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send,
          s(:lvar, :tbar_base), :tearoff,
          s(:lvar, :to_base),
          s(:lvar, :x),
          s(:lvar, :y))),
      s(:defs,
        s(:lvar, :tbar_base), :tearoff,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:lvasgn, :on_win,
            s(:send,
              s(:const, nil, :TkWinfo), :containing,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:if,
            s(:begin,
              s(:and,
                s(:lvar, :on_win),
                s(:send,
                  s(:send,
                    s(:lvar, :on_win), :path), :=~,
                  s(:regexp,
                    s(:str, "^"),
                    s(:begin,
                      s(:ivar, :@path)),
                    s(:str, "(\\.|$)"),
                    s(:regopt))))), nil,
            s(:return)),
          s(:send,
            s(:self), :grid_remove),
          s(:send,
            s(:lvar, :w), :grid_remove),
          s(:send,
            s(:self), :wm_manage),
          s(:block,
            s(:send,
              s(:self), :wm_protocol,
              s(:str, "WM_DELETE_WINDOW")),
            s(:args),
            s(:send,
              s(:self), :untearoff,
              s(:lvar, :w))))),
      s(:defs,
        s(:lvar, :tbar_base), :untearoff,
        s(:args,
          s(:arg, :w)),
        s(:begin,
          s(:send,
            s(:self), :wm_forget),
          s(:send,
            s(:lvar, :w), :grid),
          s(:send,
            s(:self), :grid)))), nil),
  s(:lvasgn, :text,
    s(:send,
      s(:const, nil, :TkText), :new,
      s(:lvar, :base_frame),
      s(:hash,
        s(:pair,
          s(:sym, :width),
          s(:int, 40)),
        s(:pair,
          s(:sym, :height),
          s(:int, 10))))),
  s(:lvasgn, :tb_btn,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Button), :new,
      s(:lvar, :tbar_base),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Button")),
        s(:pair,
          s(:sym, :style),
          s(:str, "Toolbutton")),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:lvar, :text), :insert,
              s(:sym, :end),
              s(:str, "Button Pressed\n"))))))),
  s(:lvasgn, :tb_chk,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Checkbutton), :new,
      s(:lvar, :tbar_base),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Check")),
        s(:pair,
          s(:sym, :style),
          s(:str, "Toolbutton")),
        s(:pair,
          s(:sym, :variable),
          s(:begin,
            s(:lvasgn, :check,
              s(:send,
                s(:const, nil, :TkVariable), :new)))),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:lvar, :text), :insert,
              s(:sym, :end),
              s(:dstr,
                s(:str, "Check is "),
                s(:begin,
                  s(:send,
                    s(:lvar, :check), :value)),
                s(:str, "\n")))))))),
  s(:lvasgn, :tb_mbtn,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Menubutton), :new,
      s(:lvar, :tbar_base),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Menu"))))),
  s(:lvasgn, :tb_combo,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Combobox), :new,
      s(:lvar, :tbar_base),
      s(:hash,
        s(:pair,
          s(:sym, :value),
          s(:send,
            s(:const, nil, :TkFont), :families)),
        s(:pair,
          s(:sym, :state),
          s(:sym, :readonly))))),
  s(:send,
    s(:lvar, :tb_mbtn), :menu,
    s(:lvasgn, :menu,
      s(:send,
        s(:const,
          s(:const, nil, :Tk), :Menu), :new,
        s(:lvar, :tb_mbtn)))),
  s(:send,
    s(:lvar, :menu), :add,
    s(:sym, :command),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Just")),
      s(:pair,
        s(:sym, :command),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:lvar, :text), :insert,
            s(:sym, :end),
            s(:str, "Just\n")))))),
  s(:send,
    s(:lvar, :menu), :add,
    s(:sym, :command),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "An")),
      s(:pair,
        s(:sym, :command),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:lvar, :text), :insert,
            s(:sym, :end),
            s(:str, "An\n")))))),
  s(:send,
    s(:lvar, :menu), :add,
    s(:sym, :command),
    s(:hash,
      s(:pair,
        s(:sym, :label),
        s(:str, "Example")),
      s(:pair,
        s(:sym, :command),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:lvar, :text), :insert,
            s(:sym, :end),
            s(:str, "Example\n")))))),
  s(:block,
    s(:send,
      s(:lvar, :tb_combo), :bind,
      s(:str, "<ComboboxSelected>")),
    s(:args),
    s(:send,
      s(:send,
        s(:lvar, :text), :font), :family=,
      s(:send,
        s(:lvar, :tb_combo), :get))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :tb_btn),
    s(:lvar, :tb_chk),
    s(:lvar, :tb_mbtn),
    s(:lvar, :tb_combo),
    s(:hash,
      s(:pair,
        s(:sym, :in),
        s(:lvar, :contents)),
      s(:pair,
        s(:sym, :padx),
        s(:int, 2)),
      s(:pair,
        s(:sym, :sticky),
        s(:str, "ns")))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :tbar_base),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:str, "ew")))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :sep),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:str, "ew")))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :msg),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:str, "ew")))),
  s(:send,
    s(:const, nil, :Tk), :grid,
    s(:lvar, :text),
    s(:hash,
      s(:pair,
        s(:sym, :sticky),
        s(:str, "nsew")))),
  s(:send,
    s(:lvar, :base_frame), :grid_rowconfigure,
    s(:lvar, :text),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:send,
    s(:lvar, :base_frame), :grid_columnconfigure,
    s(:lvar, :text),
    s(:hash,
      s(:pair,
        s(:sym, :weight),
        s(:int, 1)))),
  s(:block,
    s(:send,
      s(:const,
        s(:const, nil, :Ttk), :Frame), :new,
      s(:lvar, :base_frame)),
    s(:args,
      s(:arg, :frame)),
    s(:begin,
      s(:lvasgn, :sep,
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Separator), :new,
          s(:lvar, :frame))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :sep),
        s(:hash,
          s(:pair,
            s(:sym, :columnspan),
            s(:int, 4)),
          s(:pair,
            s(:sym, :row),
            s(:int, 0)),
          s(:pair,
            s(:sym, :sticky),
            s(:str, "ew")),
          s(:pair,
            s(:sym, :pady),
            s(:int, 2)))),
      s(:send, nil, :TkGrid,
        s(:str, "x"),
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Button), :new,
          s(:lvar, :frame),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "See Code")),
            s(:pair,
              s(:sym, :image),
              s(:send,
                s(:gvar, :$image), :[],
                s(:str, "view"))),
            s(:pair,
              s(:sym, :compound),
              s(:sym, :left)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :showCode,
                  s(:str, "toolbar")))))),
        s(:send,
          s(:const,
            s(:const, nil, :Ttk), :Button), :new,
          s(:lvar, :frame),
          s(:hash,
            s(:pair,
              s(:sym, :text),
              s(:str, "Dismiss")),
            s(:pair,
              s(:sym, :image),
              s(:send,
                s(:gvar, :$image), :[],
                s(:str, "delete"))),
            s(:pair,
              s(:sym, :compound),
              s(:sym, :left)),
            s(:pair,
              s(:sym, :command),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:gvar, :$toolbar_demo), :destroy),
                  s(:gvasgn, :$toolbar_demo,
                    s(:nil))))))),
        s(:hash,
          s(:pair,
            s(:sym, :padx),
            s(:int, 4)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 4)))),
      s(:send, nil, :grid_columnconfigure,
        s(:int, 0),
        s(:hash,
          s(:pair,
            s(:sym, :weight),
            s(:int, 1)))),
      s(:send,
        s(:const, nil, :Tk), :grid,
        s(:lvar, :frame),
        s(:hash,
          s(:pair,
            s(:sym, :sticky),
            s(:str, "ew")))))))
