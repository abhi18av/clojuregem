s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const, nil, :Knights_Tour), nil,
    s(:begin,
      s(:def, :valid_moves,
        s(:args,
          s(:arg, :square)),
        s(:begin,
          s(:lvasgn, :moves,
            s(:array)),
          s(:block,
            s(:send,
              s(:array,
                s(:array,
                  s(:int, -1),
                  s(:int, -2)),
                s(:array,
                  s(:int, -2),
                  s(:int, -1)),
                s(:array,
                  s(:int, -2),
                  s(:int, 1)),
                s(:array,
                  s(:int, -1),
                  s(:int, 2)),
                s(:array,
                  s(:int, 1),
                  s(:int, 2)),
                s(:array,
                  s(:int, 2),
                  s(:int, 1)),
                s(:array,
                  s(:int, 2),
                  s(:int, -1)),
                s(:array,
                  s(:int, 1),
                  s(:int, -2))), :each),
            s(:args,
              s(:arg, :col_delta),
              s(:arg, :row_delta)),
            s(:begin,
              s(:lvasgn, :col,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :square), :%,
                      s(:int, 8))), :+,
                  s(:lvar, :col_delta))),
              s(:lvasgn, :row,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :square), :div,
                      s(:int, 8))), :+,
                  s(:lvar, :row_delta))),
              s(:if,
                s(:and,
                  s(:and,
                    s(:and,
                      s(:send,
                        s(:lvar, :row), :>,
                        s(:int, -1)),
                      s(:send,
                        s(:lvar, :row), :<,
                        s(:int, 8))),
                    s(:send,
                      s(:lvar, :col), :>,
                      s(:int, -1))),
                  s(:send,
                    s(:lvar, :col), :<,
                    s(:int, 8))),
                s(:send,
                  s(:lvar, :moves), :<<,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :row), :*,
                        s(:int, 8)), :+,
                      s(:lvar, :col)))), nil))),
          s(:lvar, :moves))),
      s(:def, :check_square,
        s(:args,
          s(:arg, :square)),
        s(:send,
          s(:block,
            s(:send,
              s(:send, nil, :valid_moves,
                s(:lvar, :square)), :find_all),
            s(:args,
              s(:arg, :pos)),
            s(:send,
              s(:send,
                s(:ivar, :@visited), :include?,
                s(:lvar, :pos)), :!)), :length)),
      s(:def, :next_square,
        s(:args,
          s(:arg, :square)),
        s(:begin,
          s(:lvasgn, :minimum,
            s(:int, 9)),
          s(:lvasgn, :nxt,
            s(:int, -1)),
          s(:block,
            s(:send,
              s(:send, nil, :valid_moves,
                s(:lvar, :square)), :each),
            s(:args,
              s(:arg, :pos)),
            s(:if,
              s(:send,
                s(:ivar, :@visited), :include?,
                s(:lvar, :pos)), nil,
              s(:begin,
                s(:lvasgn, :cnt,
                  s(:send, nil, :check_square,
                    s(:lvar, :pos))),
                s(:if,
                  s(:send,
                    s(:lvar, :cnt), :<,
                    s(:lvar, :minimum)),
                  s(:begin,
                    s(:lvasgn, :minimum,
                      s(:lvar, :cnt)),
                    s(:lvasgn, :nxt,
                      s(:lvar, :pos))),
                  s(:if,
                    s(:send,
                      s(:lvar, :cnt), :==,
                      s(:lvar, :minimum)),
                    s(:lvasgn, :nxt,
                      s(:send, nil, :edgemost,
                        s(:lvar, :nxt),
                        s(:lvar, :pos))), nil))))),
          s(:lvar, :nxt))),
      s(:def, :edgemost,
        s(:args,
          s(:arg, :nxt),
          s(:arg, :pos)),
        s(:begin,
          s(:lvasgn, :col_A,
            s(:send,
              s(:int, 3), :-,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:float, 3.5), :-,
                        s(:send,
                          s(:lvar, :nxt), :%,
                          s(:int, 8)))), :abs), :to_i)))),
          s(:lvasgn, :col_B,
            s(:send,
              s(:int, 3), :-,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:float, 3.5), :-,
                        s(:send,
                          s(:lvar, :pos), :%,
                          s(:int, 8)))), :abs), :to_i)))),
          s(:lvasgn, :row_A,
            s(:send,
              s(:int, 3), :-,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:float, 3.5), :-,
                        s(:send,
                          s(:lvar, :nxt), :div,
                          s(:int, 8)))), :abs), :to_i)))),
          s(:lvasgn, :row_B,
            s(:send,
              s(:int, 3), :-,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:float, 3.5), :-,
                        s(:send,
                          s(:lvar, :pos), :div,
                          s(:int, 8)))), :abs), :to_i)))),
          s(:if,
            s(:begin,
              s(:send,
                s(:send,
                  s(:lvar, :col_A), :*,
                  s(:lvar, :row_A)), :<,
                s(:send,
                  s(:lvar, :col_B), :*,
                  s(:lvar, :row_B)))),
            s(:lvar, :nxt),
            s(:lvar, :pos)))),
      s(:def, :_N,
        s(:args,
          s(:arg, :square)),
        s(:send,
          s(:str, "%c%d"), :%,
          s(:array,
            s(:begin,
              s(:send,
                s(:int, 97), :+,
                s(:send,
                  s(:lvar, :square), :%,
                  s(:int, 8)))),
            s(:begin,
              s(:send,
                s(:send,
                  s(:lvar, :square), :div,
                  s(:int, 8)), :+,
                s(:int, 1)))))),
      s(:def, :move_piece,
        s(:args,
          s(:arg, :last),
          s(:arg, :square)),
        s(:begin,
          s(:send,
            s(:ivar, :@log), :insert,
            s(:sym, :end),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:ivar, :@visited), :length)),
              s(:str, ". "),
              s(:begin,
                s(:send, nil, :_N,
                  s(:lvar, :last))),
              s(:str, " -> "),
              s(:begin,
                s(:send, nil, :_N,
                  s(:lvar, :square))),
              s(:str, "\n")),
            s(:str, "")),
          s(:send,
            s(:ivar, :@log), :see,
            s(:sym, :end)),
          s(:send,
            s(:ivar, :@board), :itemconfigure,
            s(:send,
              s(:int, 1), :+,
              s(:lvar, :last)),
            s(:hash,
              s(:pair,
                s(:sym, :state),
                s(:sym, :normal)),
              s(:pair,
                s(:sym, :outline),
                s(:str, "black")))),
          s(:send,
            s(:ivar, :@board), :itemconfigure,
            s(:send,
              s(:int, 1), :+,
              s(:lvar, :square)),
            s(:hash,
              s(:pair,
                s(:sym, :state),
                s(:sym, :normal)),
              s(:pair,
                s(:sym, :outline),
                s(:str, "red")))),
          s(:send,
            s(:ivar, :@knight), :coords,
            s(:send,
              s(:send,
                s(:ivar, :@board), :coords,
                s(:send,
                  s(:int, 1), :+,
                  s(:lvar, :square))), :[],
              s(:irange,
                s(:int, 0),
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@visited), :<<,
            s(:lvar, :square)),
          s(:if,
            s(:send,
              s(:begin,
                s(:lvasgn, :nxt,
                  s(:send, nil, :next_square,
                    s(:lvar, :square)))), :!=,
              s(:int, -1)),
            s(:ivasgn, :@after_id,
              s(:block,
                s(:send,
                  s(:const, nil, :Tk), :after,
                  s(:send,
                    s(:ivar, :@delay), :numeric)),
                s(:args),
                s(:rescue,
                  s(:send, nil, :move_piece,
                    s(:lvar, :square),
                    s(:lvar, :nxt)),
                  s(:resbody, nil, nil,
                    s(:nil)), nil))),
            s(:begin,
              s(:send,
                s(:ivar, :@start_btn), :state,
                s(:sym, :normal)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:ivar, :@visited), :length), :==,
                  s(:int, 64)),
                s(:if,
                  s(:send,
                    s(:ivar, :@initial), :==,
                    s(:lvar, :square)),
                  s(:send,
                    s(:ivar, :@log), :insert,
                    s(:sym, :end),
                    s(:str, "Closed tour!")),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@log), :insert,
                      s(:sym, :end),
                      s(:str, "Success\n"),
                      s(:hash)),
                    s(:if,
                      s(:send,
                        s(:ivar, :@continuous), :bool),
                      s(:block,
                        s(:send,
                          s(:const, nil, :Tk), :after,
                          s(:send,
                            s(:send,
                              s(:ivar, :@delay), :numeric), :*,
                            s(:int, 2))),
                        s(:args),
                        s(:send, nil, :tour,
                          s(:send, nil, :rand,
                            s(:int, 64)))), nil))),
                s(:send,
                  s(:ivar, :@log), :insert,
                  s(:sym, :end),
                  s(:str, "FAILED!\n"),
                  s(:hash))))))),
      s(:def, :tour,
        s(:args,
          s(:optarg, :square,
            s(:nil))),
        s(:begin,
          s(:send,
            s(:ivar, :@visited), :clear),
          s(:send,
            s(:ivar, :@log), :clear),
          s(:send,
            s(:ivar, :@start_btn), :state,
            s(:sym, :disabled)),
          s(:block,
            s(:send,
              s(:int, 1), :upto,
              s(:int, 64)),
            s(:args,
              s(:arg, :n)),
            s(:send,
              s(:ivar, :@board), :itemconfigure,
              s(:lvar, :n),
              s(:hash,
                s(:pair,
                  s(:sym, :state),
                  s(:sym, :disabled)),
                s(:pair,
                  s(:sym, :outline),
                  s(:str, "black"))))),
          s(:if,
            s(:lvar, :square), nil,
            s(:lvasgn, :square,
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@board), :find_closest,
                      s(:splat,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:ivar, :@knight), :coords), :<<,
                              s(:int, 0)), :<<,
                            s(:int, 65))))), :[],
                    s(:int, 0)), :to_i), :-,
                s(:int, 1)))),
          s(:ivasgn, :@initial,
            s(:lvar, :square)),
          s(:block,
            s(:send,
              s(:const, nil, :Tk), :after_idle),
            s(:args),
            s(:rescue,
              s(:send, nil, :move_piece,
                s(:ivar, :@initial),
                s(:ivar, :@initial)),
              s(:resbody, nil, nil,
                s(:nil)), nil)))),
      s(:def, :_stop,
        s(:args),
        s(:rescue,
          s(:send,
            s(:const, nil, :Tk), :after_cancel,
            s(:ivar, :@after_id)),
          s(:resbody, nil, nil,
            s(:nil)), nil)),
      s(:def, :_exit,
        s(:args),
        s(:begin,
          s(:send, nil, :_stop),
          s(:send,
            s(:gvar, :$knightstour), :destroy))),
      s(:def, :set_delay,
        s(:args,
          s(:arg, :new)),
        s(:send,
          s(:ivar, :@delay), :numeric=,
          s(:send,
            s(:lvar, :new), :to_i))),
      s(:def, :drag_start,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:send,
            s(:lvar, :w), :dtag,
            s(:str, "selected")),
          s(:send,
            s(:lvar, :w), :addtag,
            s(:str, "selected"),
            s(:sym, :withtag),
            s(:str, "current")),
          s(:ivasgn, :@dragging,
            s(:array,
              s(:lvar, :x),
              s(:lvar, :y))))),
      s(:def, :drag_motion,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:if,
            s(:ivar, :@dragging), nil,
            s(:return)),
          s(:send,
            s(:lvar, :w), :move,
            s(:str, "selected"),
            s(:send,
              s(:lvar, :x), :-,
              s(:send,
                s(:ivar, :@dragging), :[],
                s(:int, 0))),
            s(:send,
              s(:lvar, :y), :-,
              s(:send,
                s(:ivar, :@dragging), :[],
                s(:int, 1)))),
          s(:ivasgn, :@dragging,
            s(:array,
              s(:lvar, :x),
              s(:lvar, :y))))),
      s(:def, :drag_end,
        s(:args,
          s(:arg, :w),
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:lvasgn, :square,
            s(:send,
              s(:lvar, :w), :find_closest,
              s(:lvar, :x),
              s(:lvar, :y),
              s(:int, 0),
              s(:int, 65))),
          s(:send,
            s(:lvar, :w), :coords,
            s(:str, "selected"),
            s(:send,
              s(:send,
                s(:lvar, :w), :coords,
                s(:lvar, :square)), :[],
              s(:irange,
                s(:int, 0),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :w), :dtag,
            s(:str, "selected")),
          s(:ivasgn, :@dragging,
            s(:nil)))),
      s(:def, :make_SeeDismiss,
        s(:args),
        s(:begin,
          s(:lvasgn, :frame,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Frame), :new,
              s(:gvar, :$knightstour))),
          s(:lvasgn, :sep,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Separator), :new,
              s(:lvar, :frame))),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:lvar, :sep),
            s(:hash,
              s(:pair,
                s(:sym, :columnspan),
                s(:int, 4)),
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:str, "ew")),
              s(:pair,
                s(:sym, :pady),
                s(:int, 2)))),
          s(:send, nil, :TkGrid,
            s(:str, "x"),
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Button), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "See Code")),
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:gvar, :$image), :[],
                    s(:str, "view"))),
                s(:pair,
                  s(:sym, :compound),
                  s(:sym, :left)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :showCode,
                      s(:str, "knightstour")))))),
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Button), :new,
              s(:lvar, :frame),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Dismiss")),
                s(:pair,
                  s(:sym, :image),
                  s(:send,
                    s(:gvar, :$image), :[],
                    s(:str, "delete"))),
                s(:pair,
                  s(:sym, :compound),
                  s(:sym, :left)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:begin,
                      s(:send,
                        s(:gvar, :$knightstour), :destroy),
                      s(:gvasgn, :$knightstour,
                        s(:nil))))))),
            s(:hash,
              s(:pair,
                s(:sym, :padx),
                s(:int, 4)),
              s(:pair,
                s(:sym, :pady),
                s(:int, 4)))),
          s(:send,
            s(:lvar, :frame), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:lvar, :frame))),
      s(:def, :create_gui,
        s(:args,
          s(:optarg, :parent,
            s(:nil))),
        s(:begin,
          s(:rescue,
            s(:send,
              s(:gvar, :$knightstour), :destroy),
            s(:resbody, nil, nil,
              s(:nil)), nil),
          s(:gvasgn, :$knightstour,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :Toplevel), :new,
              s(:lvar, :parent),
              s(:hash,
                s(:pair,
                  s(:sym, :title),
                  s(:str, "Knight's tour"))))),
          s(:send,
            s(:gvar, :$knightstour), :withdraw),
          s(:lvasgn, :base_f,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Frame), :new,
              s(:gvar, :$knightstour))),
          s(:ivasgn, :@board,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :Canvas), :new,
              s(:lvar, :base_f),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 240)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 240))))),
          s(:ivasgn, :@log,
            s(:send,
              s(:const,
                s(:const, nil, :Tk), :Text), :new,
              s(:lvar, :base_f),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 12)),
                s(:pair,
                  s(:sym, :height),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :font),
                  s(:str, "Arial 8")),
                s(:pair,
                  s(:sym, :background),
                  s(:str, "white"))))),
          s(:lvasgn, :scr,
            s(:send,
              s(:ivar, :@log), :yscrollbar,
              s(:send,
                s(:const,
                  s(:const, nil, :Ttk), :Scrollbar), :new,
                s(:lvar, :base_f)))),
          s(:ivasgn, :@visited,
            s(:array)),
          s(:ivasgn, :@delay,
            s(:send,
              s(:const, nil, :TkVariable), :new,
              s(:int, 600))),
          s(:ivasgn, :@continuous,
            s(:send,
              s(:const, nil, :TkVariable), :new,
              s(:false))),
          s(:lvasgn, :tool_f,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Frame), :new,
              s(:gvar, :$knightstour))),
          s(:lvasgn, :label,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Label), :new,
              s(:lvar, :tool_f),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Speed"))))),
          s(:lvasgn, :scale,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Scale), :new,
              s(:lvar, :tool_f),
              s(:hash,
                s(:pair,
                  s(:sym, :from),
                  s(:int, 8)),
                s(:pair,
                  s(:sym, :to),
                  s(:int, 2000)),
                s(:pair,
                  s(:sym, :variable),
                  s(:ivar, :@delay)),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :n)),
                    s(:send, nil, :set_delay,
                      s(:lvar, :n))))))),
          s(:lvasgn, :check,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Checkbutton), :new,
              s(:lvar, :tool_f),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Repeat")),
                s(:pair,
                  s(:sym, :variable),
                  s(:ivar, :@continuous))))),
          s(:ivasgn, :@start_btn,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Button), :new,
              s(:lvar, :tool_f),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Start")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :tour)))))),
          s(:ivasgn, :@exit_btn,
            s(:send,
              s(:const,
                s(:const, nil, :Ttk), :Button), :new,
              s(:lvar, :tool_f),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Exit")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send, nil, :_exit)))))),
          s(:block,
            s(:send,
              s(:int, 7), :downto,
              s(:int, 0)),
            s(:args,
              s(:arg, :row)),
            s(:block,
              s(:send,
                s(:int, 0), :upto,
                s(:int, 7)),
              s(:args,
                s(:arg, :col)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :col), :&,
                            s(:int, 1))), :^,
                        s(:begin,
                          s(:send,
                            s(:lvar, :row), :&,
                            s(:int, 1))))), :zero?),
                  s(:begin,
                    s(:lvasgn, :fill,
                      s(:str, "bisque")),
                    s(:lvasgn, :dfill,
                      s(:str, "bisque3"))),
                  s(:begin,
                    s(:lvasgn, :fill,
                      s(:str, "tan3")),
                    s(:lvasgn, :dfill,
                      s(:str, "tan4")))),
                s(:lvasgn, :coords,
                  s(:array,
                    s(:send,
                      s(:send,
                        s(:lvar, :col), :*,
                        s(:int, 30)), :+,
                      s(:int, 4)),
                    s(:send,
                      s(:send,
                        s(:lvar, :row), :*,
                        s(:int, 30)), :+,
                      s(:int, 4)),
                    s(:send,
                      s(:send,
                        s(:lvar, :col), :*,
                        s(:int, 30)), :+,
                      s(:int, 30)),
                    s(:send,
                      s(:send,
                        s(:lvar, :row), :*,
                        s(:int, 30)), :+,
                      s(:int, 30)))),
                s(:send,
                  s(:ivar, :@board), :create,
                  s(:const, nil, :TkcRectangle),
                  s(:lvar, :coords),
                  s(:hash,
                    s(:pair,
                      s(:sym, :fill),
                      s(:lvar, :fill)),
                    s(:pair,
                      s(:sym, :disabledfill),
                      s(:lvar, :dfill)),
                    s(:pair,
                      s(:sym, :width),
                      s(:int, 2)),
                    s(:pair,
                      s(:sym, :state),
                      s(:sym, :disabled))))))),
          s(:ivasgn, :@knight_font,
            s(:send,
              s(:const, nil, :TkFont), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :size),
                  s(:int, -24))))),
          s(:ivasgn, :@knight,
            s(:send,
              s(:const, nil, :TkcText), :new,
              s(:ivar, :@board),
              s(:int, 0),
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:ivar, :@knight_font)),
                s(:pair,
                  s(:sym, :text),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Tk), :UTF8_String), :new,
                    s(:str, "\\u265e"))),
                s(:pair,
                  s(:sym, :anchor),
                  s(:str, "nw")),
                s(:pair,
                  s(:sym, :fill),
                  s(:str, "black")),
                s(:pair,
                  s(:sym, :activefill),
                  s(:str, "#600000"))))),
          s(:send,
            s(:ivar, :@knight), :coords,
            s(:send,
              s(:send,
                s(:ivar, :@board), :coords,
                s(:send,
                  s(:send, nil, :rand,
                    s(:int, 64)), :+,
                  s(:int, 1))), :[],
              s(:irange,
                s(:int, 0),
                s(:int, 1)))),
          s(:block,
            s(:send,
              s(:ivar, :@knight), :bind,
              s(:str, "ButtonPress-1"),
              s(:str, "%W %x %y")),
            s(:args,
              s(:arg, :w),
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :drag_start,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:block,
            s(:send,
              s(:ivar, :@knight), :bind,
              s(:str, "Motion"),
              s(:str, "%W %x %y")),
            s(:args,
              s(:arg, :w),
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :drag_motion,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:block,
            s(:send,
              s(:ivar, :@knight), :bind,
              s(:str, "ButtonRelease-1"),
              s(:str, "%W %x %y")),
            s(:args,
              s(:arg, :w),
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :drag_end,
              s(:lvar, :w),
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:ivar, :@board),
            s(:ivar, :@log),
            s(:lvar, :scr),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:str, "news")))),
          s(:send,
            s(:lvar, :base_f), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:lvar, :base_f), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:lvar, :base_f),
            s(:str, "-"),
            s(:str, "-"),
            s(:str, "-"),
            s(:str, "-"),
            s(:str, "-"),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:str, "news")))),
          s(:lvasgn, :widgets,
            s(:array,
              s(:lvar, :label),
              s(:lvar, :scale),
              s(:lvar, :check),
              s(:ivar, :@start_btn))),
          s(:lvasgn, :sg,
            s(:nil)),
          s(:if,
            s(:gvar, :$RubyTk_WidgetDemo), nil,
            s(:begin,
              s(:send,
                s(:lvar, :widgets), :<<,
                s(:ivar, :@exit_btn)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :Tk), :windowingsystem), :!=,
                  s(:str, "aqua")),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Ttk), :SizeGrip), :new,
                    s(:lvar, :tool_f)), :pack,
                  s(:hash,
                    s(:pair,
                      s(:sym, :side),
                      s(:sym, :right)),
                    s(:pair,
                      s(:sym, :anchor),
                      s(:str, "se")))), nil))),
          s(:send,
            s(:const, nil, :Tk), :pack,
            s(:lvar, :widgets),
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :right)))),
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Tk), :windowingsystem), :==,
              s(:str, "aqua")),
            s(:begin,
              s(:send,
                s(:const, nil, :TkPack), :configure,
                s(:lvar, :widgets),
                s(:hash,
                  s(:pair,
                    s(:sym, :padx),
                    s(:array,
                      s(:int, 4),
                      s(:int, 4))),
                  s(:pair,
                    s(:sym, :pady),
                    s(:array,
                      s(:int, 12),
                      s(:int, 12))))),
              s(:send,
                s(:const, nil, :TkPack), :configure,
                s(:send,
                  s(:lvar, :widgets), :[],
                  s(:int, 0)),
                s(:hash,
                  s(:pair,
                    s(:sym, :padx),
                    s(:array,
                      s(:int, 4),
                      s(:int, 24))))),
              s(:send,
                s(:const, nil, :TkPack), :configure,
                s(:send,
                  s(:lvar, :widgets), :[],
                  s(:int, -1)),
                s(:hash,
                  s(:pair,
                    s(:sym, :padx),
                    s(:array,
                      s(:int, 16),
                      s(:int, 4)))))), nil),
          s(:send,
            s(:const, nil, :Tk), :grid,
            s(:lvar, :tool_f),
            s(:str, "-"),
            s(:str, "-"),
            s(:str, "-"),
            s(:str, "-"),
            s(:str, "-"),
            s(:hash,
              s(:pair,
                s(:sym, :sticky),
                s(:str, "ew")))),
          s(:if,
            s(:gvar, :$RubyTk_WidgetDemo),
            s(:send,
              s(:const, nil, :Tk), :grid,
              s(:send, nil, :make_SeeDismiss),
              s(:str, "-"),
              s(:str, "-"),
              s(:str, "-"),
              s(:str, "-"),
              s(:str, "-"),
              s(:hash,
                s(:pair,
                  s(:sym, :sticky),
                  s(:str, "ew")))), nil),
          s(:send,
            s(:gvar, :$knightstour), :grid_rowconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:send,
            s(:gvar, :$knightstour), :grid_columnconfigure,
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)))),
          s(:block,
            s(:send,
              s(:gvar, :$knightstour), :bind,
              s(:str, "Control-F2")),
            s(:args),
            s(:send,
              s(:const, nil, :TkConsole), :show)),
          s(:block,
            s(:send,
              s(:gvar, :$knightstour), :bind,
              s(:str, "Return")),
            s(:args),
            s(:send,
              s(:ivar, :@start_btn), :invoke)),
          s(:block,
            s(:send,
              s(:gvar, :$knightstour), :bind,
              s(:str, "Escape")),
            s(:args),
            s(:send,
              s(:ivar, :@exit_btn), :invoke)),
          s(:block,
            s(:send,
              s(:gvar, :$knightstour), :bind,
              s(:str, "Destroy")),
            s(:args),
            s(:send, nil, :_stop)),
          s(:block,
            s(:send,
              s(:gvar, :$knightstour), :protocol,
              s(:str, "WM_DELETE_WINDOW")),
            s(:args),
            s(:send, nil, :_exit)),
          s(:send,
            s(:gvar, :$knightstour), :deiconify),
          s(:send,
            s(:gvar, :$knightstour), :tkwait_destroy))),
      s(:def, :initialize,
        s(:args,
          s(:optarg, :parent,
            s(:nil))),
        s(:send, nil, :create_gui,
          s(:lvar, :parent))))),
  s(:if,
    s(:gvar, :$RubyTk_WidgetDemo), nil,
    s(:send,
      s(:send,
        s(:const, nil, :Tk), :root), :withdraw)),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:block,
      s(:send,
        s(:const, nil, :Thread), :new),
      s(:args),
      s(:send,
        s(:const, nil, :Tk), :mainloop)), nil),
  s(:send,
    s(:const, nil, :Knights_Tour), :new))
