s(:begin,
  s(:send, nil, :require,
    s(:str, "multi-tk")),
  s(:lvasgn, :trusted_slave,
    s(:send,
      s(:const, nil, :MultiTkIp), :new_slave)),
  s(:lvasgn, :safe_slave1,
    s(:send,
      s(:const, nil, :MultiTkIp), :new_safeTk)),
  s(:lvasgn, :safe_slave2,
    s(:send,
      s(:const, nil, :MultiTkIp), :new_safeTk,
      s(:hash,
        s(:pair,
          s(:str, "fill"),
          s(:sym, :none)),
        s(:pair,
          s(:str, "expand"),
          s(:false))))),
  s(:lvasgn, :cmd,
    s(:block,
      s(:send,
        s(:const, nil, :Proc), :new),
      s(:args,
        s(:arg, :txt)),
      s(:begin,
        s(:if,
          s(:send,
            s(:const,
              s(:const, nil, :TkCore), :INTERP), :safe?), nil,
          s(:lvasgn, :root,
            s(:send,
              s(:const, nil, :TkRoot), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :title),
                  s(:str, "timer sample")))))),
        s(:lvasgn, :label,
          s(:send,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :parent),
                  s(:lvar, :root)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :raised)),
                s(:pair,
                  s(:sym, :width),
                  s(:int, 10)))), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :bottom)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both))))),
        s(:lvasgn, :tick,
          s(:block,
            s(:send, nil, :proc),
            s(:args,
              s(:arg, :aobj)),
            s(:begin,
              s(:lvasgn, :cnt,
                s(:send,
                  s(:send,
                    s(:lvar, :aobj), :return_value), :+,
                  s(:int, 5))),
              s(:send,
                s(:lvar, :label), :text,
                s(:send, nil, :format,
                  s(:str, "%d.%02d"),
                  s(:splat,
                    s(:begin,
                      s(:send,
                        s(:lvar, :cnt), :divmod,
                        s(:int, 100)))))),
              s(:lvar, :cnt)))),
        s(:lvasgn, :timer,
          s(:send,
            s(:send,
              s(:const, nil, :TkTimer), :new,
              s(:int, 50),
              s(:int, -1),
              s(:lvar, :tick)), :start,
            s(:int, 0),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:begin,
                s(:send,
                  s(:lvar, :label), :text,
                  s(:str, "0.00")),
                s(:int, 0))))),
        s(:lvasgn, :b_start,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Start")),
                s(:pair,
                  s(:sym, :state),
                  s(:sym, :disabled)))),
            s(:args),
            s(:send, nil, :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :left)),
                s(:pair,
                  s(:sym, :fill),
                  s(:sym, :both)),
                s(:pair,
                  s(:sym, :expand),
                  s(:true)))))),
        s(:lvasgn, :b_stop,
          s(:block,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "Stop")),
                s(:pair,
                  s(:sym, :state),
                  s(:sym, :normal)))),
            s(:args),
            s(:send, nil, :pack,
              s(:hash,
                s(:pair,
                  s(:str, "side"),
                  s(:str, "left")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "both")),
                s(:pair,
                  s(:str, "expand"),
                  s(:str, "yes")))))),
        s(:block,
          s(:send,
            s(:lvar, :b_start), :command),
          s(:args),
          s(:begin,
            s(:send,
              s(:lvar, :timer), :continue),
            s(:send,
              s(:lvar, :b_stop), :state,
              s(:sym, :normal)),
            s(:send,
              s(:lvar, :b_start), :state,
              s(:sym, :disabled)))),
        s(:block,
          s(:send,
            s(:lvar, :b_stop), :command),
          s(:args),
          s(:begin,
            s(:send,
              s(:lvar, :timer), :stop),
            s(:send,
              s(:lvar, :b_start), :state,
              s(:sym, :normal)),
            s(:send,
              s(:lvar, :b_stop), :state,
              s(:sym, :disabled)))),
        s(:block,
          s(:send,
            s(:const, nil, :TkButton), :new,
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "Reset")),
              s(:pair,
                s(:sym, :state),
                s(:sym, :normal)))),
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :command),
              s(:args),
              s(:send,
                s(:lvar, :timer), :reset)),
            s(:send, nil, :pack,
              s(:hash,
                s(:pair,
                  s(:str, "side"),
                  s(:str, "right")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "both")),
                s(:pair,
                  s(:str, "expand"),
                  s(:str, "yes")))))),
        s(:lvasgn, :ev_quit,
          s(:send,
            s(:const, nil, :TkVirtualEvent), :new,
            s(:str, "Control-c"),
            s(:str, "Control-q"))),
        s(:send,
          s(:send,
            s(:send,
              s(:const, nil, :Tk), :root), :bind,
            s(:lvar, :ev_quit),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:const, nil, :Tk), :exit))), :focus)))),
  s(:send,
    s(:lvar, :trusted_slave), :eval_proc,
    s(:lvar, :cmd),
    s(:str, "trusted")),
  s(:send,
    s(:lvar, :safe_slave1), :eval_proc,
    s(:lvar, :cmd),
    s(:str, "safe1")),
  s(:send,
    s(:lvar, :safe_slave2), :eval_proc,
    s(:lvar, :cmd),
    s(:str, "safe2")),
  s(:send,
    s(:lvar, :cmd), :call,
    s(:str, "master")),
  s(:send,
    s(:send,
      s(:const, nil, :TkTimer), :new,
      s(:int, 2000),
      s(:int, -1),
      s(:block,
        s(:send, nil, :proc),
        s(:args),
        s(:send, nil, :p,
          s(:array,
            s(:str, "safe1"),
            s(:send,
              s(:lvar, :safe_slave1), :deleted?))))), :start),
  s(:send,
    s(:send,
      s(:const, nil, :TkTimer), :new,
      s(:int, 2000),
      s(:int, -1),
      s(:block,
        s(:send, nil, :proc),
        s(:args),
        s(:send, nil, :p,
          s(:array,
            s(:str, "safe2"),
            s(:send,
              s(:lvar, :safe_slave2), :deleted?))))), :start),
  s(:send,
    s(:send,
      s(:const, nil, :TkTimer), :new,
      s(:int, 2000),
      s(:int, -1),
      s(:block,
        s(:send, nil, :proc),
        s(:args),
        s(:send, nil, :p,
          s(:array,
            s(:str, "trusted"),
            s(:send,
              s(:lvar, :trusted_slave), :deleted?))))), :start),
  s(:send,
    s(:send,
      s(:const, nil, :TkTimer), :new,
      s(:int, 5000),
      s(:int, 1),
      s(:block,
        s(:send, nil, :proc),
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :safe_slave1), :eval_proc),
            s(:args),
            s(:send,
              s(:send,
                s(:const, nil, :Tk), :root), :destroy)),
          s(:send,
            s(:lvar, :safe_slave1), :delete),
          s(:send, nil, :print,
            s(:str, "*** The safe_slave1 is deleted by the timer.\n"))))), :start),
  s(:send,
    s(:send,
      s(:const, nil, :TkTimer), :new,
      s(:int, 10000),
      s(:int, 1),
      s(:block,
        s(:send, nil, :proc),
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:lvar, :trusted_slave), :eval_proc),
            s(:args),
            s(:send,
              s(:send,
                s(:const, nil, :Tk), :root), :destroy)),
          s(:send,
            s(:lvar, :trusted_slave), :delete),
          s(:send, nil, :print,
            s(:str, "*** The trusted_slave is deleted by the timer.\n"))))), :start),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
