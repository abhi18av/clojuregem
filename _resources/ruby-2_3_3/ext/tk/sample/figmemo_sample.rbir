s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "tkextlib/tkimg")),
      s(:resbody,
        s(:array,
          s(:const, nil, :Exception)), nil, nil), nil)),
  s(:class,
    s(:const, nil, :TkScrolledCanvas),
    s(:const, nil, :TkCanvas),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComposite)),
      s(:def, :initialize_composite,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:ivasgn, :@h_scr,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame))),
          s(:ivasgn, :@v_scr,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame))),
          s(:ivasgn, :@canvas,
            s(:send,
              s(:const, nil, :TkCanvas), :new,
              s(:ivar, :@frame))),
          s(:ivasgn, :@path,
            s(:send,
              s(:ivar, :@canvas), :path)),
          s(:send,
            s(:ivar, :@canvas), :xscrollbar,
            s(:ivar, :@h_scr)),
          s(:send,
            s(:ivar, :@canvas), :yscrollbar,
            s(:ivar, :@v_scr)),
          s(:send,
            s(:const, nil, :TkGrid), :rowconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)),
              s(:pair,
                s(:sym, :minsize),
                s(:int, 0)))),
          s(:send,
            s(:const, nil, :TkGrid), :columnconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:sym, :weight),
                s(:int, 1)),
              s(:pair,
                s(:sym, :minsize),
                s(:int, 0)))),
          s(:send,
            s(:ivar, :@canvas), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:str, "news")))),
          s(:send,
            s(:ivar, :@h_scr), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 1)),
              s(:pair,
                s(:sym, :column),
                s(:int, 0)),
              s(:pair,
                s(:sym, :sticky),
                s(:str, "ew")))),
          s(:send,
            s(:ivar, :@v_scr), :grid,
            s(:hash,
              s(:pair,
                s(:sym, :row),
                s(:int, 0)),
              s(:pair,
                s(:sym, :column),
                s(:int, 1)),
              s(:pair,
                s(:sym, :sticky),
                s(:str, "ns")))),
          s(:send, nil, :delegate,
            s(:str, "DEFAULT"),
            s(:ivar, :@canvas)),
          s(:send, nil, :delegate,
            s(:str, "background"),
            s(:ivar, :@canvas),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:send, nil, :delegate,
            s(:str, "activebackground"),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:send, nil, :delegate,
            s(:str, "troughcolor"),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:send, nil, :delegate,
            s(:str, "repeatdelay"),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:send, nil, :delegate,
            s(:str, "repeatinterval"),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:send, nil, :delegate,
            s(:str, "borderwidth"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "relief"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate_alias,
            s(:str, "canvasborderwidth"),
            s(:str, "borderwidth"),
            s(:ivar, :@canvas)),
          s(:send, nil, :delegate_alias,
            s(:str, "canvasrelief"),
            s(:str, "relief"),
            s(:ivar, :@canvas)),
          s(:send, nil, :delegate_alias,
            s(:str, "scrollbarborderwidth"),
            s(:str, "borderwidth"),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:send, nil, :delegate_alias,
            s(:str, "scrollbarrelief"),
            s(:str, "relief"),
            s(:ivar, :@h_scr),
            s(:ivar, :@v_scr)),
          s(:if,
            s(:send,
              s(:lvar, :keys), :empty?), nil,
            s(:send, nil, :configure,
              s(:lvar, :keys))))))),
  s(:class,
    s(:const, nil, :PhotoCanvas),
    s(:const, nil, :TkScrolledCanvas),
    s(:begin,
      s(:casgn, nil, :USAGE,
        s(:dstr,
          s(:str, "--- WHAT IS ---\n"),
          s(:str, "You can write comments on the loaded image, and save it as a Postscipt\n"),
          s(:str, "file (original image file is not modified). Each comment is drawn as a\n"),
          s(:str, "set of an indicator circle, an arrow, and a memo text. See the following\n"),
          s(:str, "how to write comments.\n"),
          s(:str, "This can save the list of memo texts to another file. It may useful to\n"),
          s(:str, "search the saved Postscript file by the comments on them.\n"),
          s(:str, "This may not support multibyte characters (multibyte texts are broken on\n"),
          s(:str, "a Postscript file). It depends on features of canvas widgets of Tcl/Tk\n"),
          s(:str, "libraries linked your Ruby/Tk. If you use Tcl/Tk8.0-jp (Japanized Tcl/Tk),\n"),
          s(:str, "you can (possibly) get a Japanese Postscript file.\n"),
          s(:str, "\n"),
          s(:str, "--- BINDINGS ---\n"),
          s(:str, "* Button-1 : draw comments by following steps\n"),
          s(:str, "    1st - Set center of a indicator circle.\n"),
          s(:str, "    2nd - Set head position of an arrow.\n"),
          s(:str, "    3rd - Set tail position of an arrow, and show an entry box.\n"),
          s(:str, "          Input a memo text and hit 'Enter' key to entry the comment.\n"),
          s(:str, "\n"),
          s(:str, "* Button-2-drag : scroll the canvas\n"),
          s(:str, "\n"),
          s(:str, "* Button-3 : when drawing, cancel current drawing\n"),
          s(:str, "\n"),
          s(:str, "* Double-Button-3 : delete the clicked comment (text, arrow, and circle)\n"))),
      s(:def, :initialize,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:send,
            s(:self), :highlightthickness=,
            s(:int, 0)),
          s(:send,
            s(:self), :selectborderwidth=,
            s(:int, 0)),
          s(:ivasgn, :@photo,
            s(:send,
              s(:const, nil, :TkPhotoImage), :new)),
          s(:ivasgn, :@img,
            s(:send,
              s(:const, nil, :TkcImage), :new,
              s(:self),
              s(:int, 0),
              s(:int, 0),
              s(:hash,
                s(:pair,
                  s(:sym, :image),
                  s(:ivar, :@photo))))),
          s(:lvasgn, :width,
            s(:send,
              s(:self), :width)),
          s(:lvasgn, :height,
            s(:send,
              s(:self), :height)),
          s(:ivasgn, :@scr_region,
            s(:array,
              s(:send,
                s(:lvar, :width), :-@),
              s(:send,
                s(:lvar, :height), :-@),
              s(:lvar, :width),
              s(:lvar, :height))),
          s(:send,
            s(:self), :scrollregion,
            s(:ivar, :@scr_region)),
          s(:send,
            s(:self), :xview_moveto,
            s(:float, 0.25)),
          s(:send,
            s(:self), :yview_moveto,
            s(:float, 0.25)),
          s(:ivasgn, :@col,
            s(:str, "red")),
          s(:ivasgn, :@font,
            s(:str, "Helvetica -12")),
          s(:ivasgn, :@memo_id_num,
            s(:int, -1)),
          s(:ivasgn, :@memo_id_head,
            s(:str, "memo_")),
          s(:ivasgn, :@memo_id_tag,
            s(:nil)),
          s(:ivasgn, :@overlap_d,
            s(:int, 2)),
          s(:ivasgn, :@state,
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:ivasgn, :@border,
            s(:int, 2)),
          s(:ivasgn, :@selectborder,
            s(:int, 1)),
          s(:ivasgn, :@delta,
            s(:send,
              s(:ivar, :@border), :+,
              s(:ivar, :@selectborder))),
          s(:ivasgn, :@entry,
            s(:send,
              s(:const, nil, :TkEntry), :new,
              s(:self),
              s(:hash,
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :ridge)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:ivar, :@border)),
                s(:pair,
                  s(:sym, :selectborderwidth),
                  s(:ivar, :@selectborder)),
                s(:pair,
                  s(:sym, :highlightthickness),
                  s(:int, 0))))),
          s(:block,
            s(:send,
              s(:ivar, :@entry), :bind,
              s(:str, "Return")),
            s(:args),
            s(:send,
              s(:ivar, :@state), :value=,
              s(:int, 0))),
          s(:ivasgn, :@mode,
            s(:lvasgn, :old_mode,
              s(:int, 0))),
          s(:send, nil, :_state0),
          s(:block,
            s(:send, nil, :bind,
              s(:str, "2"),
              s(:sym, :x),
              s(:sym, :y)),
            s(:args,
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :scan_mark,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:block,
            s(:send, nil, :bind,
              s(:str, "B2-Motion"),
              s(:sym, :x),
              s(:sym, :y)),
            s(:args,
              s(:arg, :x),
              s(:arg, :y)),
            s(:send, nil, :scan_dragto,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:block,
            s(:send, nil, :bind,
              s(:str, "3")),
            s(:args),
            s(:begin,
              s(:if,
                s(:send,
                  s(:begin,
                    s(:lvasgn, :old_mode,
                      s(:ivar, :@mode))), :==,
                  s(:int, 0)),
                s(:next), nil),
              s(:block,
                s(:send,
                  s(:ivar, :@items), :each),
                s(:args,
                  s(:arg, :item)),
                s(:send,
                  s(:lvar, :item), :delete)),
              s(:send, nil, :_state0))),
          s(:block,
            s(:send, nil, :bind,
              s(:str, "Double-3"),
              s(:sym, :widget),
              s(:sym, :x),
              s(:sym, :y)),
            s(:args,
              s(:arg, :w),
              s(:arg, :x),
              s(:arg, :y)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :old_mode), :!=,
                  s(:int, 0)),
                s(:next), nil),
              s(:lvasgn, :x,
                s(:send,
                  s(:lvar, :w), :canvasx,
                  s(:lvar, :x))),
              s(:lvasgn, :y,
                s(:send,
                  s(:lvar, :w), :canvasy,
                  s(:lvar, :y))),
              s(:lvasgn, :tag,
                s(:nil)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :w), :find_overlapping,
                    s(:send,
                      s(:lvar, :x), :-,
                      s(:ivar, :@overlap_d)),
                    s(:send,
                      s(:lvar, :y), :-,
                      s(:ivar, :@overlap_d)),
                    s(:send,
                      s(:lvar, :x), :+,
                      s(:ivar, :@overlap_d)),
                    s(:send,
                      s(:lvar, :y), :+,
                      s(:ivar, :@overlap_d))), :find),
                s(:args,
                  s(:arg, :item)),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:send,
                            s(:lvar, :item), :tags), :find),
                        s(:args,
                          s(:arg, :name)),
                        s(:if,
                          s(:send,
                            s(:lvar, :name), :=~,
                            s(:regexp,
                              s(:str, "^("),
                              s(:begin,
                                s(:ivar, :@memo_id_head)),
                              s(:str, "\\d+)$"),
                              s(:regopt))),
                          s(:lvasgn, :tag,
                            s(:nth_ref, 1)), nil)), :empty?)), :!)),
              s(:if,
                s(:lvar, :tag),
                s(:send,
                  s(:lvar, :w), :delete,
                  s(:lvar, :tag)), nil))))),
      s(:send, nil, :private),
      s(:def, :_state0,
        s(:args),
        s(:begin,
          s(:ivasgn, :@mode,
            s(:int, 0)),
          s(:op_asgn,
            s(:ivasgn, :@memo_id_num), :+,
            s(:int, 1)),
          s(:ivasgn, :@memo_id_tag,
            s(:send,
              s(:ivar, :@memo_id_head), :+,
              s(:send,
                s(:ivar, :@memo_id_num), :to_s))),
          s(:ivasgn, :@target,
            s(:nil)),
          s(:ivasgn, :@items,
            s(:array)),
          s(:ivasgn, :@mark,
            s(:array,
              s(:int, 0),
              s(:int, 0))),
          s(:send, nil, :bind_remove,
            s(:str, "Motion")),
          s(:send, nil, :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send, nil, :_state1,
                s(:lvar, :x),
                s(:lvar, :y))),
            s(:str, "%x"),
            s(:str, "%y")))),
      s(:def, :_state1,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:ivasgn, :@mode,
            s(:int, 1)),
          s(:ivasgn, :@target,
            s(:send,
              s(:const, nil, :TkcOval), :new,
              s(:self),
              s(:array,
                s(:send, nil, :canvasx,
                  s(:lvar, :x)),
                s(:send, nil, :canvasy,
                  s(:lvar, :y))),
              s(:array,
                s(:send, nil, :canvasx,
                  s(:lvar, :x)),
                s(:send, nil, :canvasy,
                  s(:lvar, :y))),
              s(:hash,
                s(:pair,
                  s(:sym, :outline),
                  s(:ivar, :@col)),
                s(:pair,
                  s(:sym, :width),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :tags),
                  s(:array,
                    s(:ivar, :@memo_id_tag)))))),
          s(:send,
            s(:ivar, :@items), :<<,
            s(:ivar, :@target)),
          s(:ivasgn, :@mark,
            s(:array,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:send, nil, :bind,
            s(:str, "Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send, nil, :_state2,
                s(:lvar, :x),
                s(:lvar, :y))),
            s(:str, "%x"),
            s(:str, "%y")),
          s(:send, nil, :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send, nil, :_state3,
                s(:lvar, :x),
                s(:lvar, :y))),
            s(:str, "%x"),
            s(:str, "%y")))),
      s(:def, :_state2,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:ivasgn, :@mode,
            s(:int, 2)),
          s(:lvasgn, :r,
            s(:send, nil, :Integer,
              s(:send,
                s(:const, nil, :Math), :sqrt,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :x), :-,
                        s(:send,
                          s(:ivar, :@mark), :[],
                          s(:int, 0)))), :**,
                    s(:int, 2)), :+,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :y), :-,
                        s(:send,
                          s(:ivar, :@mark), :[],
                          s(:int, 1)))), :**,
                    s(:int, 2)))))),
          s(:send,
            s(:ivar, :@target), :coords,
            s(:array,
              s(:send, nil, :canvasx,
                s(:send,
                  s(:send,
                    s(:ivar, :@mark), :[],
                    s(:int, 0)), :-,
                  s(:lvar, :r))),
              s(:send, nil, :canvasy,
                s(:send,
                  s(:send,
                    s(:ivar, :@mark), :[],
                    s(:int, 1)), :-,
                  s(:lvar, :r)))),
            s(:array,
              s(:send, nil, :canvasx,
                s(:send,
                  s(:send,
                    s(:ivar, :@mark), :[],
                    s(:int, 0)), :+,
                  s(:lvar, :r))),
              s(:send, nil, :canvasy,
                s(:send,
                  s(:send,
                    s(:ivar, :@mark), :[],
                    s(:int, 1)), :+,
                  s(:lvar, :r))))))),
      s(:def, :_state3,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:ivasgn, :@mode,
            s(:int, 3)),
          s(:ivasgn, :@target,
            s(:send,
              s(:const, nil, :TkcLine), :new,
              s(:self),
              s(:array,
                s(:send, nil, :canvasx,
                  s(:lvar, :x)),
                s(:send, nil, :canvasy,
                  s(:lvar, :y))),
              s(:array,
                s(:send, nil, :canvasx,
                  s(:lvar, :x)),
                s(:send, nil, :canvasy,
                  s(:lvar, :y))),
              s(:hash,
                s(:pair,
                  s(:sym, :arrow),
                  s(:sym, :first)),
                s(:pair,
                  s(:sym, :arrowshape),
                  s(:array,
                    s(:int, 10),
                    s(:int, 14),
                    s(:int, 5))),
                s(:pair,
                  s(:sym, :fill),
                  s(:ivar, :@col)),
                s(:pair,
                  s(:sym, :tags),
                  s(:array,
                    s(:ivar, :@memo_id_tag)))))),
          s(:send,
            s(:ivar, :@items), :<<,
            s(:ivar, :@target)),
          s(:ivasgn, :@mark,
            s(:array,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:send, nil, :bind,
            s(:str, "Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send, nil, :_state4,
                s(:lvar, :x),
                s(:lvar, :y))),
            s(:str, "%x"),
            s(:str, "%y")),
          s(:send, nil, :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :x),
                s(:arg, :y)),
              s(:send, nil, :_state5,
                s(:lvar, :x),
                s(:lvar, :y))),
            s(:str, "%x"),
            s(:str, "%y")))),
      s(:def, :_state4,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:ivasgn, :@mode,
            s(:int, 4)),
          s(:send,
            s(:ivar, :@target), :coords,
            s(:array,
              s(:send, nil, :canvasx,
                s(:send,
                  s(:ivar, :@mark), :[],
                  s(:int, 0))),
              s(:send, nil, :canvasy,
                s(:send,
                  s(:ivar, :@mark), :[],
                  s(:int, 1)))),
            s(:array,
              s(:send, nil, :canvasx,
                s(:lvar, :x)),
              s(:send, nil, :canvasy,
                s(:lvar, :y)))))),
      s(:def, :_state5,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:ivasgn, :@mode,
            s(:int, 5)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :x), :-,
                s(:send,
                  s(:ivar, :@mark), :[],
                  s(:int, 0))), :>=,
              s(:int, 0)),
            s(:begin,
              s(:lvasgn, :justify,
                s(:str, "left")),
              s(:lvasgn, :dx,
                s(:send,
                  s(:ivar, :@delta), :-@)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :y), :-,
                    s(:send,
                      s(:ivar, :@mark), :[],
                      s(:int, 1))), :>=,
                  s(:int, 0)),
                s(:begin,
                  s(:lvasgn, :anchor,
                    s(:str, "nw")),
                  s(:lvasgn, :dy,
                    s(:send,
                      s(:ivar, :@delta), :-@))),
                s(:begin,
                  s(:lvasgn, :anchor,
                    s(:str, "sw")),
                  s(:lvasgn, :dy,
                    s(:ivar, :@delta))))),
            s(:begin,
              s(:lvasgn, :justify,
                s(:str, "right")),
              s(:lvasgn, :dx,
                s(:ivar, :@delta)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :y), :-,
                    s(:send,
                      s(:ivar, :@mark), :[],
                      s(:int, 1))), :>=,
                  s(:int, 0)),
                s(:begin,
                  s(:lvasgn, :anchor,
                    s(:str, "ne")),
                  s(:lvasgn, :dy,
                    s(:send,
                      s(:ivar, :@delta), :-@))),
                s(:begin,
                  s(:lvasgn, :anchor,
                    s(:str, "se")),
                  s(:lvasgn, :dy,
                    s(:ivar, :@delta)))))),
          s(:send, nil, :bind_remove,
            s(:str, "Motion")),
          s(:send,
            s(:ivar, :@entry), :value=,
            s(:str, "")),
          s(:send,
            s(:ivar, :@entry), :configure,
            s(:hash,
              s(:pair,
                s(:sym, :justify),
                s(:lvar, :justify)),
              s(:pair,
                s(:sym, :font),
                s(:ivar, :@font)),
              s(:pair,
                s(:sym, :foreground),
                s(:ivar, :@col)))),
          s(:lvasgn, :ewin,
            s(:send,
              s(:const, nil, :TkcWindow), :new,
              s(:self),
              s(:array,
                s(:send,
                  s(:send, nil, :canvasx,
                    s(:lvar, :x)), :+,
                  s(:lvar, :dx)),
                s(:send,
                  s(:send, nil, :canvasy,
                    s(:lvar, :y)), :+,
                  s(:lvar, :dy))),
              s(:hash,
                s(:pair,
                  s(:sym, :window),
                  s(:ivar, :@entry)),
                s(:pair,
                  s(:sym, :state),
                  s(:sym, :normal)),
                s(:pair,
                  s(:sym, :anchor),
                  s(:lvar, :anchor)),
                s(:pair,
                  s(:sym, :tags),
                  s(:array,
                    s(:ivar, :@memo_id_tag)))))),
          s(:send,
            s(:ivar, :@entry), :focus),
          s(:send,
            s(:ivar, :@entry), :grab),
          s(:send,
            s(:ivar, :@state), :wait),
          s(:send,
            s(:ivar, :@entry), :grab_release),
          s(:send,
            s(:lvar, :ewin), :delete),
          s(:ivasgn, :@target,
            s(:send,
              s(:const, nil, :TkcText), :new,
              s(:self),
              s(:array,
                s(:send, nil, :canvasx,
                  s(:lvar, :x)),
                s(:send, nil, :canvasy,
                  s(:lvar, :y))),
              s(:hash,
                s(:pair,
                  s(:sym, :anchor),
                  s(:lvar, :anchor)),
                s(:pair,
                  s(:sym, :justify),
                  s(:lvar, :justify)),
                s(:pair,
                  s(:sym, :fill),
                  s(:ivar, :@col)),
                s(:pair,
                  s(:sym, :font),
                  s(:ivar, :@font)),
                s(:pair,
                  s(:sym, :text),
                  s(:send,
                    s(:ivar, :@entry), :value)),
                s(:pair,
                  s(:sym, :tags),
                  s(:array,
                    s(:ivar, :@memo_id_tag)))))),
          s(:send, nil, :_state0))),
      s(:send, nil, :public),
      s(:def, :load_photo,
        s(:args,
          s(:arg, :filename)),
        s(:send,
          s(:ivar, :@photo), :configure,
          s(:hash,
            s(:pair,
              s(:sym, :file),
              s(:lvar, :filename))))),
      s(:def, :modified?,
        s(:args),
        s(:send,
          s(:begin,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send, nil, :find_withtag,
                    s(:str, "all")), :-,
                  s(:array,
                    s(:ivar, :@img)))), :empty?)), :!)),
      s(:def, :fig_erase,
        s(:args),
        s(:block,
          s(:send,
            s(:begin,
              s(:send,
                s(:send, nil, :find_withtag,
                  s(:str, "all")), :-,
                s(:array,
                  s(:ivar, :@img)))), :each),
          s(:args,
            s(:arg, :item)),
          s(:send,
            s(:lvar, :item), :delete))),
      s(:def, :reset_region,
        s(:args),
        s(:begin,
          s(:lvasgn, :width,
            s(:send,
              s(:ivar, :@photo), :width)),
          s(:lvasgn, :height,
            s(:send,
              s(:ivar, :@photo), :height)),
          s(:if,
            s(:send,
              s(:lvar, :width), :>,
              s(:send,
                s(:ivar, :@scr_region), :[],
                s(:int, 2))),
            s(:begin,
              s(:send,
                s(:ivar, :@scr_region), :[]=,
                s(:int, 0),
                s(:send,
                  s(:lvar, :width), :-@)),
              s(:send,
                s(:ivar, :@scr_region), :[]=,
                s(:int, 2),
                s(:lvar, :width))), nil),
          s(:if,
            s(:send,
              s(:lvar, :height), :>,
              s(:send,
                s(:ivar, :@scr_region), :[],
                s(:int, 3))),
            s(:begin,
              s(:send,
                s(:ivar, :@scr_region), :[]=,
                s(:int, 1),
                s(:send,
                  s(:lvar, :height), :-@)),
              s(:send,
                s(:ivar, :@scr_region), :[]=,
                s(:int, 3),
                s(:lvar, :height))), nil),
          s(:send,
            s(:self), :scrollregion,
            s(:ivar, :@scr_region)),
          s(:send,
            s(:self), :xview_moveto,
            s(:float, 0.25)),
          s(:send,
            s(:self), :yview_moveto,
            s(:float, 0.25)))),
      s(:def, :get_texts,
        s(:args),
        s(:begin,
          s(:lvasgn, :ret,
            s(:array)),
          s(:block,
            s(:send,
              s(:send, nil, :find_withtag,
                s(:str, "all")), :each),
            s(:args,
              s(:arg, :item)),
            s(:if,
              s(:send,
                s(:lvar, :item), :kind_of?,
                s(:const, nil, :TkcText)),
              s(:send,
                s(:lvar, :ret), :<<,
                s(:send,
                  s(:lvar, :item), :[],
                  s(:sym, :text))), nil)),
          s(:lvar, :ret))))),
  s(:def, :open_file,
    s(:args,
      s(:arg, :canvas),
      s(:arg, :fname)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :canvas), :modified?),
        s(:begin,
          s(:lvasgn, :ret,
            s(:send,
              s(:const, nil, :Tk), :messageBox,
              s(:hash,
                s(:pair,
                  s(:sym, :icon),
                  s(:str, "warning")),
                s(:pair,
                  s(:sym, :type),
                  s(:str, "okcancel")),
                s(:pair,
                  s(:sym, :default),
                  s(:str, "cancel")),
                s(:pair,
                  s(:sym, :message),
                  s(:str, "Canvas may be modified. Really erase? "))))),
          s(:if,
            s(:send,
              s(:lvar, :ret), :==,
              s(:str, "cancel")),
            s(:return), nil)), nil),
      s(:lvasgn, :filetypes,
        s(:array,
          s(:array,
            s(:str, "GIF Files"),
            s(:str, ".gif")),
          s(:array,
            s(:str, "GIF Files"),
            s(:array),
            s(:str, "GIFF")),
          s(:array,
            s(:str, "PPM Files"),
            s(:str, ".ppm")),
          s(:array,
            s(:str, "PGM Files"),
            s(:str, ".pgm")))),
      s(:kwbegin,
        s(:rescue,
          s(:if,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Tk), :Img), :package_version), :!=,
              s(:str, "")),
            s(:begin,
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "JPEG Files"),
                  s(:array,
                    s(:str, ".jpg"),
                    s(:str, ".jpeg")))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "PNG Files"),
                  s(:str, ".png"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "PostScript Files"),
                  s(:str, ".ps"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "PDF Files"),
                  s(:str, ".pdf"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "Windows Bitmap Files"),
                  s(:str, ".bmp"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "Windows Icon Files"),
                  s(:str, ".ico"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "PCX Files"),
                  s(:str, ".pcx"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "Pixmap Files"),
                  s(:str, ".pixmap"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "SGI Files"),
                  s(:str, ".sgi"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "Sun Raster Files"),
                  s(:str, ".sun"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "TGA Files"),
                  s(:str, ".tga"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "TIFF Files"),
                  s(:str, ".tiff"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "XBM Files"),
                  s(:str, ".xbm"))),
              s(:send,
                s(:lvar, :filetypes), :<<,
                s(:array,
                  s(:str, "XPM Files"),
                  s(:str, ".xpm")))), nil),
          s(:resbody, nil, nil, nil), nil)),
      s(:send,
        s(:lvar, :filetypes), :<<,
        s(:array,
          s(:str, "ALL Files"),
          s(:str, "*"))),
      s(:lvasgn, :fpath,
        s(:send,
          s(:const, nil, :Tk), :getOpenFile,
          s(:hash,
            s(:pair,
              s(:sym, :filetypes),
              s(:lvar, :filetypes))))),
      s(:if,
        s(:send,
          s(:lvar, :fpath), :empty?),
        s(:return), nil),
      s(:kwbegin,
        s(:rescue,
          s(:send,
            s(:lvar, :canvas), :load_photo,
            s(:lvar, :fpath)),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:send,
              s(:const, nil, :Tk), :messageBox,
              s(:hash,
                s(:pair,
                  s(:sym, :icon),
                  s(:str, "error")),
                s(:pair,
                  s(:sym, :type),
                  s(:str, "ok")),
                s(:pair,
                  s(:sym, :message),
                  s(:dstr,
                    s(:str, "Fail to read '"),
                    s(:begin,
                      s(:lvar, :fpath)),
                    s(:str, "'.\n"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message))))))), nil)),
      s(:send,
        s(:lvar, :canvas), :fig_erase),
      s(:send,
        s(:lvar, :canvas), :reset_region),
      s(:send,
        s(:lvar, :fname), :value=,
        s(:lvar, :fpath)))),
  s(:def, :save_memo,
    s(:args,
      s(:arg, :canvas),
      s(:arg, :fname)),
    s(:begin,
      s(:lvasgn, :initname,
        s(:send,
          s(:lvar, :fname), :value)),
      s(:if,
        s(:send,
          s(:lvar, :initname), :!=,
          s(:str, "-")),
        s(:begin,
          s(:lvasgn, :initname,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:lvar, :initname),
              s(:send,
                s(:const, nil, :File), :extname,
                s(:lvar, :initname)))),
          s(:lvasgn, :fpath,
            s(:send,
              s(:const, nil, :Tk), :getSaveFile,
              s(:hash,
                s(:pair,
                  s(:sym, :filetypes),
                  s(:array,
                    s(:array,
                      s(:str, "Text Files"),
                      s(:str, ".txt")),
                    s(:array,
                      s(:str, "ALL Files"),
                      s(:str, "*")))),
                s(:pair,
                  s(:sym, :initialfile),
                  s(:lvar, :initname)))))),
        s(:lvasgn, :fpath,
          s(:send,
            s(:const, nil, :Tk), :getSaveFile,
            s(:hash,
              s(:pair,
                s(:sym, :filetypes),
                s(:array,
                  s(:array,
                    s(:str, "Text Files"),
                    s(:str, ".txt")),
                  s(:array,
                    s(:str, "ALL Files"),
                    s(:str, "*")))))))),
      s(:if,
        s(:send,
          s(:lvar, :fpath), :empty?),
        s(:return), nil),
      s(:kwbegin,
        s(:rescue,
          s(:lvasgn, :fid,
            s(:send, nil, :open,
              s(:lvar, :fpath),
              s(:str, "w"))),
          s(:resbody, nil,
            s(:lvasgn, :e),
            s(:send,
              s(:const, nil, :Tk), :messageBox,
              s(:hash,
                s(:pair,
                  s(:sym, :icon),
                  s(:str, "error")),
                s(:pair,
                  s(:sym, :type),
                  s(:str, "ok")),
                s(:pair,
                  s(:sym, :message),
                  s(:dstr,
                    s(:str, "Fail to open '"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :fname), :value)),
                    s(:str, "'.\n"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :e), :message))))))), nil)),
      s(:kwbegin,
        s(:ensure,
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :canvas), :get_texts), :each),
            s(:args,
              s(:arg, :txt)),
            s(:send,
              s(:lvar, :fid), :print,
              s(:lvar, :txt),
              s(:str, "\n"))),
          s(:send,
            s(:lvar, :fid), :close))))),
  s(:def, :ps_print,
    s(:args,
      s(:arg, :canvas),
      s(:arg, :fname)),
    s(:begin,
      s(:lvasgn, :initname,
        s(:send,
          s(:lvar, :fname), :value)),
      s(:if,
        s(:send,
          s(:lvar, :initname), :!=,
          s(:str, "-")),
        s(:begin,
          s(:lvasgn, :initname,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:lvar, :initname),
              s(:send,
                s(:const, nil, :File), :extname,
                s(:lvar, :initname)))),
          s(:lvasgn, :fpath,
            s(:send,
              s(:const, nil, :Tk), :getSaveFile,
              s(:hash,
                s(:pair,
                  s(:sym, :filetypes),
                  s(:array,
                    s(:array,
                      s(:str, "Postscript Files"),
                      s(:str, ".ps")),
                    s(:array,
                      s(:str, "ALL Files"),
                      s(:str, "*")))),
                s(:pair,
                  s(:sym, :initialfile),
                  s(:lvar, :initname)))))),
        s(:lvasgn, :fpath,
          s(:send,
            s(:const, nil, :Tk), :getSaveFile,
            s(:hash,
              s(:pair,
                s(:sym, :filetypes),
                s(:array,
                  s(:array,
                    s(:str, "Postscript Files"),
                    s(:str, ".ps")),
                  s(:array,
                    s(:str, "ALL Files"),
                    s(:str, "*")))))))),
      s(:if,
        s(:send,
          s(:lvar, :fpath), :empty?),
        s(:return), nil),
      s(:lvasgn, :bbox,
        s(:send,
          s(:lvar, :canvas), :bbox,
          s(:str, "all"))),
      s(:send,
        s(:lvar, :canvas), :postscript,
        s(:hash,
          s(:pair,
            s(:sym, :file),
            s(:lvar, :fpath)),
          s(:pair,
            s(:sym, :x),
            s(:send,
              s(:lvar, :bbox), :[],
              s(:int, 0))),
          s(:pair,
            s(:sym, :y),
            s(:send,
              s(:lvar, :bbox), :[],
              s(:int, 1))),
          s(:pair,
            s(:sym, :width),
            s(:send,
              s(:send,
                s(:lvar, :bbox), :[],
                s(:int, 2)), :-,
              s(:send,
                s(:lvar, :bbox), :[],
                s(:int, 0)))),
          s(:pair,
            s(:sym, :height),
            s(:send,
              s(:send,
                s(:lvar, :bbox), :[],
                s(:int, 3)), :-,
              s(:send,
                s(:lvar, :bbox), :[],
                s(:int, 1)))))))),
  s(:def, :quit,
    s(:args,
      s(:arg, :canvas)),
    s(:begin,
      s(:lvasgn, :ret,
        s(:send,
          s(:const, nil, :Tk), :messageBox,
          s(:hash,
            s(:pair,
              s(:sym, :icon),
              s(:str, "warning")),
            s(:pair,
              s(:sym, :type),
              s(:str, "okcancel")),
            s(:pair,
              s(:sym, :default),
              s(:str, "cancel")),
            s(:pair,
              s(:sym, :message),
              s(:str, "Realy quit? "))))),
      s(:if,
        s(:send,
          s(:lvar, :ret), :==,
          s(:str, "ok")),
        s(:send, nil, :exit), nil))),
  s(:lvasgn, :root,
    s(:send,
      s(:const, nil, :TkRoot), :new,
      s(:hash,
        s(:pair,
          s(:sym, :title),
          s(:str, "Fig Memo"))))),
  s(:lvasgn, :canvas,
    s(:send,
      s(:send,
        s(:const, nil, :PhotoCanvas), :new,
        s(:lvar, :root)), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :both)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:lvasgn, :usage_frame,
    s(:send,
      s(:const, nil, :TkFrame), :new,
      s(:lvar, :root),
      s(:hash,
        s(:pair,
          s(:sym, :relief),
          s(:sym, :ridge)),
        s(:pair,
          s(:sym, :borderwidth),
          s(:int, 2))))),
  s(:lvasgn, :hide_btn,
    s(:send,
      s(:const, nil, :TkButton), :new,
      s(:lvar, :usage_frame),
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "hide usage")),
        s(:pair,
          s(:sym, :font),
          s(:hash,
            s(:pair,
              s(:sym, :size),
              s(:int, 8)))),
        s(:pair,
          s(:sym, :pady),
          s(:int, 1)),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:lvar, :usage_frame), :unpack)))))),
  s(:send,
    s(:lvar, :hide_btn), :pack,
    s(:hash,
      s(:pair,
        s(:sym, :anchor),
        s(:str, "e")),
      s(:pair,
        s(:sym, :padx),
        s(:int, 5)))),
  s(:lvasgn, :usage,
    s(:send,
      s(:send,
        s(:const, nil, :TkLabel), :new,
        s(:lvar, :usage_frame),
        s(:hash,
          s(:pair,
            s(:sym, :text),
            s(:const,
              s(:const, nil, :PhotoCanvas), :USAGE)),
          s(:pair,
            s(:sym, :font),
            s(:str, "Helvetica 8")),
          s(:pair,
            s(:sym, :justify),
            s(:sym, :left)))), :pack)),
  s(:lvasgn, :show_usage,
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send,
        s(:lvar, :usage_frame), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :before),
            s(:lvar, :canvas)),
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :expand),
            s(:true)))))),
  s(:lvasgn, :fname,
    s(:send,
      s(:const, nil, :TkVariable), :new,
      s(:str, "-"))),
  s(:lvasgn, :f,
    s(:send,
      s(:send,
        s(:const, nil, :TkFrame), :new,
        s(:lvar, :root),
        s(:hash,
          s(:pair,
            s(:sym, :relief),
            s(:sym, :sunken)),
          s(:pair,
            s(:sym, :borderwidth),
            s(:int, 1)))), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :x))))),
  s(:lvasgn, :label,
    s(:send,
      s(:send,
        s(:const, nil, :TkLabel), :new,
        s(:lvar, :f),
        s(:hash,
          s(:pair,
            s(:sym, :textvariable),
            s(:lvar, :fname)),
          s(:pair,
            s(:sym, :font),
            s(:hash,
              s(:pair,
                s(:sym, :size),
                s(:int, -12)),
              s(:pair,
                s(:sym, :weight),
                s(:sym, :bold)))),
          s(:pair,
            s(:sym, :anchor),
            s(:str, "w")))), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :side),
          s(:sym, :left)),
        s(:pair,
          s(:sym, :fill),
          s(:sym, :x)),
        s(:pair,
          s(:sym, :padx),
          s(:int, 10))))),
  s(:lvasgn, :mspec,
    s(:array,
      s(:array,
        s(:array,
          s(:str, "File"),
          s(:int, 0)),
        s(:array,
          s(:str, "Show Usage"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send,
              s(:lvar, :show_usage), :call)),
          s(:int, 5)),
        s(:str, "---"),
        s(:array,
          s(:str, "Open Image File"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :open_file,
              s(:lvar, :canvas),
              s(:lvar, :fname))),
          s(:int, 0)),
        s(:array,
          s(:str, "Save Memo Texts"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :save_memo,
              s(:lvar, :canvas),
              s(:lvar, :fname))),
          s(:int, 0)),
        s(:str, "---"),
        s(:array,
          s(:str, "Save Postscript"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :ps_print,
              s(:lvar, :canvas),
              s(:lvar, :fname))),
          s(:int, 5)),
        s(:str, "---"),
        s(:array,
          s(:str, "Quit"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :quit,
              s(:lvar, :canvas))),
          s(:int, 0))))),
  s(:send,
    s(:lvar, :root), :add_menubar,
    s(:lvar, :mspec)),
  s(:block,
    s(:send,
      s(:lvar, :root), :protocol,
      s(:sym, :WM_DELETE_WINDOW)),
    s(:args),
    s(:send, nil, :quit,
      s(:lvar, :canvas))),
  s(:send,
    s(:lvar, :show_usage), :call),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
