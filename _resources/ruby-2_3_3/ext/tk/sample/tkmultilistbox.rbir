s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const, nil, :TkMultiListbox),
    s(:const, nil, :TkListbox),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComposite)),
      s(:def, :initialize_composite,
        s(:args,
          s(:arg, :lbox_height),
          s(:arg, :title_info),
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:or,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :title_info), :kind_of?,
                    s(:const, nil, :Array)), :!)),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :title_info), :size), :<,
                  s(:int, 2)))),
            s(:send, nil, :raise), nil),
          s(:ivasgn, :@width_total,
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:lvar, :title_info), :each),
            s(:args,
              s(:arg, :title),
              s(:arg, :width)),
            s(:op_asgn,
              s(:ivasgn, :@width_total), :+,
              s(:send,
                s(:lvar, :width), :to_f))),
          s(:ivasgn, :@v_scroll,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "orient"),
                  s(:str, "vertical"))))),
          s(:ivasgn, :@base_list,
            s(:array)),
          s(:ivasgn, :@rel_list,
            s(:array)),
          s(:ivasgn, :@title_list,
            s(:array)),
          s(:ivasgn, :@lbox_list,
            s(:array)),
          s(:ivasgn, :@hscr_list,
            s(:array)),
          s(:ivasgn, :@name_index,
            s(:hash)),
          s(:ivasgn, :@f_title,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "width"),
                  s(:ivar, :@width_total))))),
          s(:ivasgn, :@f_lbox,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "width"),
                  s(:ivar, :@width_total)),
                s(:pair,
                  s(:str, "height"),
                  s(:lvar, :lbox_height))))),
          s(:ivasgn, :@f_hscr,
            s(:send,
              s(:const, nil, :TkFrame), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:str, "width"),
                  s(:ivar, :@width_total)),
                s(:pair,
                  s(:str, "height"),
                  s(:send,
                    s(:send,
                      s(:ivar, :@v_scroll), :cget,
                      s(:str, "width")), :+,
                    s(:send,
                      s(:int, 2), :*,
                      s(:send,
                        s(:ivar, :@v_scroll), :cget,
                        s(:str, "borderwidth")))))))),
          s(:send,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:ivar, :@f_title),
              s(:hash,
                s(:pair,
                  s(:str, "text"),
                  s(:str, " ")))), :pack),
          s(:lvasgn, :sum,
            s(:float, 0.0)),
          s(:send,
            s(:ivar, :@rel_list), :<<,
            s(:send,
              s(:lvar, :sum), :/,
              s(:ivar, :@width_total))),
          s(:block,
            s(:send,
              s(:lvar, :title_info), :each_with_index),
            s(:args,
              s(:mlhs,
                s(:arg, :label),
                s(:arg, :width)),
              s(:arg, :idx)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:ivar, :@name_index), :include?,
                  s(:lvar, :label)),
                s(:send,
                  s(:send,
                    s(:ivar, :@name_index), :[],
                    s(:lvar, :label)), :<<,
                  s(:lvar, :idx)),
                s(:send,
                  s(:ivar, :@name_index), :[]=,
                  s(:lvar, :label),
                  s(:array,
                    s(:lvar, :idx)))),
              s(:op_asgn,
                s(:lvasgn, :sum), :+,
                s(:lvar, :width)),
              s(:send,
                s(:ivar, :@rel_list), :<<,
                s(:send,
                  s(:lvar, :sum), :/,
                  s(:ivar, :@width_total))),
              s(:lvasgn, :f,
                s(:send,
                  s(:const, nil, :TkFrame), :new,
                  s(:ivar, :@f_title),
                  s(:hash,
                    s(:pair,
                      s(:str, "width"),
                      s(:lvar, :width))))),
              s(:lvasgn, :base,
                s(:array,
                  s(:lvar, :f))),
              s(:send,
                s(:ivar, :@title_list), :<<,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkLabel), :new,
                    s(:lvar, :f),
                    s(:hash,
                      s(:pair,
                        s(:str, "text"),
                        s(:lvar, :label)))), :pack,
                  s(:hash,
                    s(:pair,
                      s(:str, "fill"),
                      s(:str, "x"))))),
              s(:send,
                s(:lvar, :f), :place,
                s(:hash,
                  s(:pair,
                    s(:str, "relx"),
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))),
                  s(:pair,
                    s(:str, "y"),
                    s(:int, 0)),
                  s(:pair,
                    s(:str, "anchor"),
                    s(:str, "nw")),
                  s(:pair,
                    s(:str, "width"),
                    s(:int, -6)),
                  s(:pair,
                    s(:str, "relwidth"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@rel_list), :[],
                        s(:send,
                          s(:lvar, :idx), :+,
                          s(:int, 1))), :-,
                      s(:send,
                        s(:ivar, :@rel_list), :[],
                        s(:lvar, :idx)))))),
              s(:lvasgn, :f,
                s(:send,
                  s(:const, nil, :TkFrame), :new,
                  s(:ivar, :@f_lbox),
                  s(:hash,
                    s(:pair,
                      s(:str, "width"),
                      s(:lvar, :width))))),
              s(:send,
                s(:lvar, :base), :<<,
                s(:lvar, :f)),
              s(:send,
                s(:ivar, :@lbox_list), :<<,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkListbox), :new,
                    s(:lvar, :f)), :pack,
                  s(:hash,
                    s(:pair,
                      s(:str, "fill"),
                      s(:str, "both")),
                    s(:pair,
                      s(:str, "expand"),
                      s(:true))))),
              s(:send,
                s(:lvar, :f), :place,
                s(:hash,
                  s(:pair,
                    s(:str, "relx"),
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))),
                  s(:pair,
                    s(:str, "y"),
                    s(:int, 0)),
                  s(:pair,
                    s(:str, "anchor"),
                    s(:str, "nw")),
                  s(:pair,
                    s(:str, "width"),
                    s(:int, -4)),
                  s(:pair,
                    s(:str, "relwidth"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@rel_list), :[],
                        s(:send,
                          s(:lvar, :idx), :+,
                          s(:int, 1))), :-,
                      s(:send,
                        s(:ivar, :@rel_list), :[],
                        s(:lvar, :idx)))),
                  s(:pair,
                    s(:str, "relheight"),
                    s(:float, 1.0)))),
              s(:lvasgn, :f,
                s(:send,
                  s(:const, nil, :TkFrame), :new,
                  s(:ivar, :@f_hscr),
                  s(:hash,
                    s(:pair,
                      s(:str, "width"),
                      s(:lvar, :width))))),
              s(:send,
                s(:lvar, :base), :<<,
                s(:lvar, :f)),
              s(:send,
                s(:ivar, :@hscr_list), :<<,
                s(:send,
                  s(:send,
                    s(:const, nil, :TkScrollbar), :new,
                    s(:lvar, :f),
                    s(:hash,
                      s(:pair,
                        s(:str, "orient"),
                        s(:str, "horizontal")))), :pack,
                  s(:hash,
                    s(:pair,
                      s(:str, "fill"),
                      s(:str, "x")),
                    s(:pair,
                      s(:str, "anchor"),
                      s(:str, "w"))))),
              s(:send,
                s(:lvar, :f), :place,
                s(:hash,
                  s(:pair,
                    s(:str, "relx"),
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))),
                  s(:pair,
                    s(:str, "y"),
                    s(:int, 0)),
                  s(:pair,
                    s(:str, "anchor"),
                    s(:str, "nw")),
                  s(:pair,
                    s(:str, "width"),
                    s(:int, -4)),
                  s(:pair,
                    s(:str, "relwidth"),
                    s(:send,
                      s(:send,
                        s(:ivar, :@rel_list), :[],
                        s(:send,
                          s(:lvar, :idx), :+,
                          s(:int, 1))), :-,
                      s(:send,
                        s(:ivar, :@rel_list), :[],
                        s(:lvar, :idx)))))),
              s(:send,
                s(:send,
                  s(:ivar, :@lbox_list), :[],
                  s(:lvar, :idx)), :xscrollcommand,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :first),
                    s(:arg, :last)),
                  s(:send,
                    s(:send,
                      s(:ivar, :@hscr_list), :[],
                      s(:lvar, :idx)), :set,
                    s(:lvar, :first),
                    s(:lvar, :last)))),
              s(:send,
                s(:send,
                  s(:ivar, :@hscr_list), :[],
                  s(:lvar, :idx)), :command,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:restarg, :args)),
                  s(:send,
                    s(:send,
                      s(:ivar, :@lbox_list), :[],
                      s(:lvar, :idx)), :xview,
                    s(:splat,
                      s(:lvar, :args))))),
              s(:send,
                s(:ivar, :@base_list), :<<,
                s(:lvar, :base)))),
          s(:ivasgn, :@tab_list,
            s(:array,
              s(:nil))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@rel_list), :size), :-,
                      s(:int, 2))))), :each),
            s(:args,
              s(:arg, :idx)),
            s(:begin,
              s(:lvasgn, :tab,
                s(:send,
                  s(:const, nil, :TkFrame), :new,
                  s(:ivar, :@f_title),
                  s(:hash,
                    s(:pair,
                      s(:str, "cursor"),
                      s(:str, "sb_h_double_arrow")),
                    s(:pair,
                      s(:str, "width"),
                      s(:int, 6)),
                    s(:pair,
                      s(:str, "borderwidth"),
                      s(:int, 2)),
                    s(:pair,
                      s(:str, "relief"),
                      s(:str, "raised"))))),
              s(:send,
                s(:ivar, :@tab_list), :<<,
                s(:lvar, :tab)),
              s(:send,
                s(:lvar, :tab), :place,
                s(:hash,
                  s(:pair,
                    s(:str, "relx"),
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))),
                  s(:pair,
                    s(:str, "anchor"),
                    s(:str, "ne")),
                  s(:pair,
                    s(:str, "relheight"),
                    s(:float, 0.95)))),
              s(:send,
                s(:lvar, :tab), :bind,
                s(:str, "Button-1"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :x)),
                  s(:begin,
                    s(:ivasgn, :@x,
                      s(:lvar, :x)),
                    s(:ivasgn, :@frame_width,
                      s(:send,
                        s(:send,
                          s(:const, nil, :TkWinfo), :width,
                          s(:ivar, :@f_title)), :to_f)))),
                s(:str, "%X")),
              s(:send,
                s(:lvar, :tab), :bind,
                s(:str, "B1-Motion"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :x),
                    s(:arg, :idx)),
                  s(:send, nil, :resize,
                    s(:lvar, :x),
                    s(:send,
                      s(:lvar, :idx), :to_i))),
                s(:dstr,
                  s(:str, "%X "),
                  s(:begin,
                    s(:lvar, :idx)))))),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :lbox)),
            s(:send,
              s(:lvar, :lbox), :yscrollcommand,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :first),
                  s(:arg, :last)),
                s(:send,
                  s(:ivar, :@v_scroll), :set,
                  s(:lvar, :first),
                  s(:lvar, :last))))),
          s(:send,
            s(:ivar, :@v_scroll), :command,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:restarg, :args)),
              s(:block,
                s(:send,
                  s(:ivar, :@lbox_list), :each),
                s(:args,
                  s(:arg, :lbox)),
                s(:send,
                  s(:lvar, :lbox), :yview,
                  s(:splat,
                    s(:lvar, :args)))))),
          s(:ivasgn, :@mode,
            s(:hash)),
          s(:send,
            s(:ivar, :@mode), :[]=,
            s(:str, "browse"),
            s(:send, nil, :browse_mode_bindtag)),
          s(:send,
            s(:ivar, :@mode), :[]=,
            s(:str, "single"),
            s(:send, nil, :single_mode_bindtag)),
          s(:send,
            s(:ivar, :@mode), :[]=,
            s(:str, "extended"),
            s(:send, nil, :extended_mode_bindtag)),
          s(:send,
            s(:ivar, :@mode), :[]=,
            s(:str, "multiple"),
            s(:send, nil, :multiple_mode_bindtag)),
          s(:ivasgn, :@current_mode,
            s(:str, "browse")),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:begin,
              s(:send,
                s(:lvar, :l), :bind,
                s(:str, "Shift-Key-Left"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :w)),
                  s(:begin,
                    s(:send, nil, :focus_shift,
                      s(:lvar, :w),
                      s(:int, -1)),
                    s(:send,
                      s(:const, nil, :Tk), :callback_break))),
                s(:str, "%W")),
              s(:send,
                s(:lvar, :l), :bind,
                s(:str, "Shift-Key-Right"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :w)),
                  s(:begin,
                    s(:send, nil, :focus_shift,
                      s(:lvar, :w),
                      s(:int, 1)),
                    s(:send,
                      s(:const, nil, :Tk), :callback_break))),
                s(:str, "%W")),
              s(:send,
                s(:lvar, :l), :bind,
                s(:str, "Button-2"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :x),
                    s(:arg, :y)),
                  s(:begin,
                    s(:ivasgn, :@lbox_mark_x,
                      s(:lvar, :x)),
                    s(:block,
                      s(:send,
                        s(:ivar, :@lbox_list), :each),
                      s(:args,
                        s(:arg, :lbox)),
                      s(:send,
                        s(:lvar, :lbox), :scan_mark,
                        s(:lvar, :x),
                        s(:lvar, :y))))),
                s(:str, "%x %y")),
              s(:send,
                s(:lvar, :l), :bind,
                s(:str, "B2-Motion"),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :x),
                    s(:arg, :y)),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:ivar, :@lbox_list), :each),
                      s(:args,
                        s(:arg, :lbox)),
                      s(:send,
                        s(:lvar, :lbox), :scan_dragto,
                        s(:ivar, :@lbox_mark_x),
                        s(:lvar, :y))),
                    s(:send,
                      s(:lvar, :l), :scan_dragto,
                      s(:lvar, :x),
                      s(:lvar, :y)))),
                s(:str, "%x %y")),
              s(:send,
                s(:lvar, :l), :bindtags,
                s(:send,
                  s(:send,
                    s(:lvar, :l), :bindtags), :unshift,
                  s(:send,
                    s(:ivar, :@mode), :[],
                    s(:ivar, :@current_mode)))))),
          s(:send,
            s(:const, nil, :TkGrid), :rowconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 0)))),
          s(:send,
            s(:const, nil, :TkGrid), :rowconfigure,
            s(:ivar, :@frame),
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 1)))),
          s(:send,
            s(:const, nil, :TkGrid), :rowconfigure,
            s(:ivar, :@frame),
            s(:int, 2),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 0)))),
          s(:send,
            s(:const, nil, :TkGrid), :columnconfigure,
            s(:ivar, :@frame),
            s(:int, 0),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 1)))),
          s(:send,
            s(:const, nil, :TkGrid), :columnconfigure,
            s(:ivar, :@frame),
            s(:int, 1),
            s(:hash,
              s(:pair,
                s(:str, "weight"),
                s(:int, 0)))),
          s(:send,
            s(:ivar, :@v_scroll), :grid,
            s(:hash,
              s(:pair,
                s(:str, "row"),
                s(:int, 1)),
              s(:pair,
                s(:str, "column"),
                s(:int, 1)),
              s(:pair,
                s(:str, "sticky"),
                s(:str, "ns")))),
          s(:send,
            s(:ivar, :@f_title), :grid,
            s(:hash,
              s(:pair,
                s(:str, "row"),
                s(:int, 0)),
              s(:pair,
                s(:str, "column"),
                s(:int, 0)),
              s(:pair,
                s(:str, "sticky"),
                s(:str, "news")))),
          s(:send,
            s(:ivar, :@f_lbox), :grid,
            s(:hash,
              s(:pair,
                s(:str, "row"),
                s(:int, 1)),
              s(:pair,
                s(:str, "column"),
                s(:int, 0)),
              s(:pair,
                s(:str, "sticky"),
                s(:str, "news")))),
          s(:send,
            s(:ivar, :@f_hscr), :grid,
            s(:hash,
              s(:pair,
                s(:str, "row"),
                s(:int, 2)),
              s(:pair,
                s(:str, "column"),
                s(:int, 0)),
              s(:pair,
                s(:str, "sticky"),
                s(:str, "ew")))),
          s(:send,
            s(:ivar, :@frame), :bind,
            s(:str, "Configure"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :reconstruct))),
          s(:ivasgn, :@path,
            s(:send,
              s(:send,
                s(:ivar, :@lbox_list), :[],
                s(:int, 0)), :path)),
          s(:if,
            s(:lvar, :keys), nil,
            s(:lvasgn, :keys,
              s(:hash))),
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:lvasgn, :sel_mode,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "mode"))),
          s(:if,
            s(:lvar, :sel_mode),
            s(:send, nil, :mode,
              s(:lvar, :sel_mode)), nil),
          s(:lvasgn, :width,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "scrollbarwidth"))),
          s(:if,
            s(:lvar, :width),
            s(:send, nil, :scrollbarwidth,
              s(:lvar, :width)), nil),
          s(:lvasgn, :title_font,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "titlefont"))),
          s(:lvasgn, :title_fg,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "titleforeground"))),
          s(:lvasgn, :title_bg,
            s(:send,
              s(:lvar, :keys), :delete,
              s(:str, "titlebackground"))),
          s(:if,
            s(:or,
              s(:or,
                s(:lvar, :title_font),
                s(:lvar, :title_fg)),
              s(:lvar, :title_bg)),
            s(:send, nil, :titleconfig,
              s(:lvar, :title_font),
              s(:lvar, :title_fg),
              s(:lvar, :title_bg)), nil),
          s(:send, nil, :delegate,
            s(:str, "DEFAULT"),
            s(:splat,
              s(:ivar, :@lbox_list))),
          s(:send, nil, :delegate,
            s(:str, "activebackground"),
            s(:ivar, :@v_scroll),
            s(:splat,
              s(:ivar, :@hscr_list))),
          s(:send, nil, :delegate,
            s(:str, "troughcolor"),
            s(:ivar, :@v_scroll),
            s(:splat,
              s(:ivar, :@hscr_list))),
          s(:send, nil, :delegate,
            s(:str, "repeatdelay"),
            s(:ivar, :@v_scroll),
            s(:splat,
              s(:ivar, :@hscr_list))),
          s(:send, nil, :delegate,
            s(:str, "repeatinterval"),
            s(:ivar, :@v_scroll),
            s(:splat,
              s(:ivar, :@hscr_list))),
          s(:send, nil, :delegate,
            s(:str, "borderwidth"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "relief"),
            s(:ivar, :@frame)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :keys), :size), :>,
              s(:int, 0)),
            s(:send, nil, :configure,
              s(:lvar, :keys)), nil))),
      s(:send, nil, :private,
        s(:sym, :initialize_composite)),
      s(:def, :mode,
        s(:args,
          s(:arg, :sel_mode)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:begin,
            s(:lvasgn, :tags,
              s(:send,
                s(:lvar, :l), :bindtags)),
            s(:lvasgn, :tags,
              s(:send,
                s(:lvar, :tags), :-,
                s(:array,
                  s(:send,
                    s(:ivar, :@mode), :[],
                    s(:ivar, :@current_mode))))),
            s(:send,
              s(:lvar, :l), :bindtags,
              s(:send,
                s(:lvar, :tags), :unshift,
                s(:send,
                  s(:ivar, :@mode), :[],
                  s(:lvar, :sel_mode)))),
            s(:ivasgn, :@current_mode,
              s(:lvar, :sel_mode))))),
      s(:def, :scrollbarwidth,
        s(:args,
          s(:arg, :width)),
        s(:begin,
          s(:send,
            s(:ivar, :@v_scroll), :[]=,
            s(:str, "width"),
            s(:lvar, :width)),
          s(:block,
            s(:send,
              s(:ivar, :@hscr_list), :each),
            s(:args,
              s(:arg, :hscr)),
            s(:send,
              s(:lvar, :hscr), :[]=,
              s(:str, "width"),
              s(:lvar, :width))),
          s(:send,
            s(:ivar, :@f_hscr), :[]=,
            s(:str, "height"),
            s(:send,
              s(:lvar, :width), :+,
              s(:send,
                s(:int, 2), :*,
                s(:send,
                  s(:ivar, :@v_scroll), :cget,
                  s(:str, "borderwidth"))))))),
      s(:def, :titleconfig,
        s(:args,
          s(:arg, :font),
          s(:arg, :fg),
          s(:arg, :bg)),
        s(:begin,
          s(:lvasgn, :keys,
            s(:hash)),
          s(:if,
            s(:lvar, :font),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "font"),
              s(:lvar, :font)), nil),
          s(:if,
            s(:lvar, :fg),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "foreground"),
              s(:lvar, :fg)), nil),
          s(:if,
            s(:lvar, :bg),
            s(:send,
              s(:lvar, :keys), :[]=,
              s(:str, "background"),
              s(:lvar, :bg)), nil),
          s(:block,
            s(:send,
              s(:ivar, :@title_list), :each),
            s(:args,
              s(:arg, :label)),
            s(:send,
              s(:lvar, :label), :configure,
              s(:lvar, :keys))))),
      s(:def, :titlelabels,
        s(:args,
          s(:restarg, :indices)),
        s(:send,
          s(:ivar, :@title_list), :[],
          s(:splat,
            s(:lvar, :indices)))),
      s(:def, :columns,
        s(:args,
          s(:restarg, :indices)),
        s(:send,
          s(:ivar, :@lbox_list), :[],
          s(:splat,
            s(:lvar, :indices)))),
      s(:def, :activate,
        s(:args,
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :lbox)),
          s(:send,
            s(:lvar, :lbox), :activate,
            s(:lvar, :idx)))),
      s(:def, :bbox,
        s(:args,
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :collect),
          s(:args,
            s(:arg, :lbox)),
          s(:send,
            s(:lvar, :lbox), :bbox,
            s(:lvar, :idx)))),
      s(:def, :delete,
        s(:args,
          s(:restarg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :collect),
          s(:args,
            s(:arg, :lbox)),
          s(:send,
            s(:lvar, :lbox), :delete,
            s(:splat,
              s(:lvar, :idx))))),
      s(:def, :get,
        s(:args,
          s(:restarg, :idx)),
        s(:if,
          s(:send,
            s(:send,
              s(:lvar, :idx), :size), :==,
            s(:int, 1)),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :collect),
            s(:args,
              s(:arg, :lbox)),
            s(:send,
              s(:lvar, :lbox), :get,
              s(:splat,
                s(:lvar, :idx)))),
          s(:begin,
            s(:lvasgn, :list,
              s(:block,
                s(:send,
                  s(:ivar, :@lbox_list), :collect),
                s(:args,
                  s(:arg, :lbox)),
                s(:send,
                  s(:lvar, :lbox), :get,
                  s(:splat,
                    s(:lvar, :idx))))),
            s(:lvasgn, :result,
              s(:array)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :list), :[],
                  s(:int, 0)), :each_with_index),
              s(:args,
                s(:arg, :line),
                s(:arg, :index)),
              s(:send,
                s(:lvar, :result), :<<,
                s(:block,
                  s(:send,
                    s(:lvar, :list), :collect),
                  s(:args,
                    s(:arg, :lines)),
                  s(:send,
                    s(:lvar, :lines), :[],
                    s(:lvar, :index))))),
            s(:lvar, :result)))),
      s(:def, :_line_array_to_hash,
        s(:args,
          s(:arg, :line)),
        s(:begin,
          s(:lvasgn, :result,
            s(:hash)),
          s(:block,
            s(:send,
              s(:ivar, :@name_index), :each_pair),
            s(:args,
              s(:arg, :label),
              s(:arg, :indices)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :indices), :size), :==,
                s(:int, 1)),
              s(:send,
                s(:lvar, :result), :[]=,
                s(:lvar, :label),
                s(:send,
                  s(:lvar, :line), :[],
                  s(:send,
                    s(:lvar, :indices), :[],
                    s(:int, 0)))),
              s(:send,
                s(:lvar, :result), :[]=,
                s(:lvar, :label),
                s(:block,
                  s(:send,
                    s(:lvar, :indices), :collect),
                  s(:args,
                    s(:arg, :index)),
                  s(:send,
                    s(:lvar, :line), :[],
                    s(:lvar, :index)))))),
          s(:lvar, :result))),
      s(:send, nil, :private,
        s(:sym, :_line_array_to_hash)),
      s(:def, :get_by_hash,
        s(:args,
          s(:restarg, :idx)),
        s(:begin,
          s(:lvasgn, :get_result,
            s(:send, nil, :get,
              s(:splat,
                s(:lvar, :idx)))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :idx), :size), :==,
              s(:int, 1)),
            s(:send, nil, :_line_array_to_hash,
              s(:lvar, :get_result)),
            s(:block,
              s(:send,
                s(:lvar, :get_result), :collect),
              s(:args,
                s(:arg, :line)),
              s(:send, nil, :_line_array_to_hash,
                s(:lvar, :line)))))),
      s(:def, :insert,
        s(:args,
          s(:arg, :idx),
          s(:restarg, :lines)),
        s(:begin,
          s(:lvasgn, :lbox_ins,
            s(:array)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 0),
                  s(:send,
                    s(:ivar, :@lbox_list), :size))), :each),
            s(:args),
            s(:send,
              s(:lvar, :lbox_ins), :<<,
              s(:array))),
          s(:block,
            s(:send,
              s(:lvar, :lines), :each),
            s(:args,
              s(:arg, :line)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :line), :kind_of?,
                  s(:const, nil, :Hash)),
                s(:begin,
                  s(:lvasgn, :array,
                    s(:array)),
                  s(:block,
                    s(:send,
                      s(:ivar, :@name_index), :each_pair),
                    s(:args,
                      s(:arg, :label),
                      s(:arg, :indices)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :indices), :size), :==,
                        s(:int, 1)),
                      s(:send,
                        s(:lvar, :array), :[]=,
                        s(:send,
                          s(:lvar, :indices), :[],
                          s(:int, 0)),
                        s(:send,
                          s(:lvar, :line), :[],
                          s(:lvar, :label))),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :line), :[],
                            s(:lvar, :label)), :kind_of?,
                          s(:const, nil, :Array)),
                        s(:block,
                          s(:send,
                            s(:lvar, :indices), :each_with_index),
                          s(:args,
                            s(:arg, :index),
                            s(:arg, :num)),
                          s(:send,
                            s(:lvar, :array), :[]=,
                            s(:lvar, :index),
                            s(:send,
                              s(:send,
                                s(:lvar, :line), :[],
                                s(:lvar, :label)), :[],
                              s(:lvar, :num)))),
                        s(:send,
                          s(:lvar, :array), :[]=,
                          s(:send,
                            s(:lvar, :indices), :[],
                            s(:int, 0)),
                          s(:send,
                            s(:lvar, :line), :[],
                            s(:lvar, :label)))))),
                  s(:lvasgn, :line,
                    s(:lvar, :array))), nil),
              s(:block,
                s(:send,
                  s(:ivar, :@name_index), :each_pair),
                s(:args,
                  s(:arg, :label),
                  s(:arg, :indices)),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :indices), :size), :==,
                    s(:int, 1)),
                  s(:send,
                    s(:send,
                      s(:lvar, :lbox_ins), :[],
                      s(:send,
                        s(:lvar, :indices), :[],
                        s(:int, 0))), :<<,
                    s(:send,
                      s(:lvar, :line), :[],
                      s(:send,
                        s(:lvar, :indices), :[],
                        s(:int, 0)))),
                  s(:block,
                    s(:send,
                      s(:lvar, :indices), :each),
                    s(:args,
                      s(:arg, :index)),
                    s(:send,
                      s(:send,
                        s(:lvar, :lbox_ins), :[],
                        s(:lvar, :index)), :<<,
                      s(:send,
                        s(:lvar, :line), :[],
                        s(:lvar, :index)))))))),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each_with_index),
            s(:args,
              s(:arg, :lbox),
              s(:arg, :index)),
            s(:if,
              s(:send,
                s(:lvar, :lbox_ins), :[],
                s(:lvar, :index)),
              s(:send,
                s(:lvar, :lbox), :insert,
                s(:lvar, :idx),
                s(:splat,
                  s(:send,
                    s(:lvar, :lbox_ins), :[],
                    s(:lvar, :index)))), nil)))),
      s(:def, :selection_anchor,
        s(:args,
          s(:arg, :index)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :lbox)),
          s(:send,
            s(:lvar, :lbox), :selection_anchor,
            s(:lvar, :index)))),
      s(:def, :selection_clear,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :lbox)),
          s(:send,
            s(:lvar, :lbox), :selection_clear,
            s(:lvar, :first),
            s(:lvasgn, :last,
              s(:const, nil, :None))))),
      s(:def, :selection_set,
        s(:args,
          s(:arg, :first),
          s(:optarg, :last,
            s(:const, nil, :None))),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :lbox)),
          s(:send,
            s(:lvar, :lbox), :selection_set,
            s(:lvar, :first),
            s(:lvasgn, :last,
              s(:const, nil, :None))))),
      s(:send, nil, :private),
      s(:def, :reconstruct,
        s(:args),
        s(:block,
          s(:send,
            s(:begin,
              s(:irange,
                s(:int, 0),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@rel_list), :size), :-,
                    s(:int, 2))))), :each),
          s(:args,
            s(:arg, :idx)),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :title),
                s(:lvasgn, :lbox),
                s(:lvasgn, :hscr)),
              s(:send,
                s(:ivar, :@base_list), :[],
                s(:lvar, :idx))),
            s(:send,
              s(:lvar, :title), :place,
              s(:hash,
                s(:pair,
                  s(:str, "relwidth"),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:send,
                        s(:lvar, :idx), :+,
                        s(:int, 1))), :-,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx)))))),
            s(:send,
              s(:lvar, :lbox), :place,
              s(:hash,
                s(:pair,
                  s(:str, "relwidth"),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:send,
                        s(:lvar, :idx), :+,
                        s(:int, 1))), :-,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx)))),
                s(:pair,
                  s(:str, "relheight"),
                  s(:float, 1.0)))),
            s(:send,
              s(:lvar, :hscr), :place,
              s(:hash,
                s(:pair,
                  s(:str, "relwidth"),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:send,
                        s(:lvar, :idx), :+,
                        s(:int, 1))), :-,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx)))))),
            s(:lvasgn, :tab,
              s(:send,
                s(:ivar, :@tab_list), :[],
                s(:lvar, :idx))),
            s(:if,
              s(:lvar, :tab),
              s(:send,
                s(:lvar, :tab), :place,
                s(:hash,
                  s(:pair,
                    s(:str, "relx"),
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))))), nil)))),
      s(:def, :resize,
        s(:args,
          s(:arg, :x),
          s(:arg, :idx)),
        s(:begin,
          s(:lvasgn, :delta,
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :x), :-,
                  s(:ivar, :@x))), :/,
              s(:ivar, :@frame_width))),
          s(:if,
            s(:send,
              s(:lvar, :delta), :<,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :-,
                      s(:int, 1))), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx))), :+,
                s(:float, 0.02))),
            s(:lvasgn, :delta,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :-,
                      s(:int, 1))), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx))), :+,
                s(:float, 0.02))),
            s(:if,
              s(:send,
                s(:lvar, :delta), :>,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:send,
                        s(:lvar, :idx), :+,
                        s(:int, 1))), :-,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))), :-,
                  s(:float, 0.02))),
              s(:lvasgn, :delta,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:send,
                        s(:lvar, :idx), :+,
                        s(:int, 1))), :-,
                    s(:send,
                      s(:ivar, :@rel_list), :[],
                      s(:lvar, :idx))), :-,
                  s(:float, 0.02))), nil)),
          s(:op_asgn,
            s(:send,
              s(:ivar, :@rel_list), :[],
              s(:lvar, :idx)), :+,
            s(:lvar, :delta)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :title),
              s(:lvasgn, :lbox),
              s(:lvasgn, :hscr)),
            s(:send,
              s(:ivar, :@base_list), :[],
              s(:send,
                s(:lvar, :idx), :-,
                s(:int, 1)))),
          s(:send,
            s(:lvar, :title), :place,
            s(:hash,
              s(:pair,
                s(:str, "relwidth"),
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx)), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :-,
                      s(:int, 1))))))),
          s(:send,
            s(:lvar, :lbox), :place,
            s(:hash,
              s(:pair,
                s(:str, "relwidth"),
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx)), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :-,
                      s(:int, 1))))),
              s(:pair,
                s(:str, "relheight"),
                s(:float, 1.0)))),
          s(:send,
            s(:lvar, :hscr), :place,
            s(:hash,
              s(:pair,
                s(:str, "relwidth"),
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx)), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :-,
                      s(:int, 1))))))),
          s(:send,
            s(:send,
              s(:ivar, :@tab_list), :[],
              s(:lvar, :idx)), :place,
            s(:hash,
              s(:pair,
                s(:str, "relx"),
                s(:send,
                  s(:ivar, :@rel_list), :[],
                  s(:lvar, :idx))))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :title),
              s(:lvasgn, :lbox),
              s(:lvasgn, :hscr)),
            s(:send,
              s(:ivar, :@base_list), :[],
              s(:lvar, :idx))),
          s(:send,
            s(:lvar, :title), :place,
            s(:hash,
              s(:pair,
                s(:str, "relwidth"),
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :+,
                      s(:int, 1))), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx)))),
              s(:pair,
                s(:str, "relx"),
                s(:send,
                  s(:ivar, :@rel_list), :[],
                  s(:lvar, :idx))))),
          s(:send,
            s(:lvar, :lbox), :place,
            s(:hash,
              s(:pair,
                s(:str, "relwidth"),
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :+,
                      s(:int, 1))), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx)))),
              s(:pair,
                s(:str, "relx"),
                s(:send,
                  s(:ivar, :@rel_list), :[],
                  s(:lvar, :idx))),
              s(:pair,
                s(:str, "relheight"),
                s(:float, 1.0)))),
          s(:send,
            s(:lvar, :hscr), :place,
            s(:hash,
              s(:pair,
                s(:str, "relwidth"),
                s(:send,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:send,
                      s(:lvar, :idx), :+,
                      s(:int, 1))), :-,
                  s(:send,
                    s(:ivar, :@rel_list), :[],
                    s(:lvar, :idx)))),
              s(:pair,
                s(:str, "relx"),
                s(:send,
                  s(:ivar, :@rel_list), :[],
                  s(:lvar, :idx))))),
          s(:ivasgn, :@x,
            s(:lvar, :x)))),
      s(:def, :browse_mode_bindtag,
        s(:args),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:const, nil, :TkBindTag), :new)),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:begin,
                s(:send,
                  s(:lvar, :w), :focus),
                s(:send, nil, :select_line,
                  s(:lvar, :w),
                  s(:send,
                    s(:lvar, :w), :nearest,
                    s(:lvar, :y))))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "B1-Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Shift-Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Up"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_shift,
                s(:lvar, :w),
                s(:int, -1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Down"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_shift,
                s(:lvar, :w),
                s(:int, 1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Home"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:int, 0))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-End"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:str, "end"))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "space"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:send,
                    s(:lvar, :w), :index,
                    s(:str, "active")), :to_i))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Select"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:send,
                    s(:lvar, :w), :index,
                    s(:str, "active")), :to_i))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-slash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:send,
                    s(:lvar, :w), :index,
                    s(:str, "active")), :to_i))),
            s(:str, "%W")),
          s(:lvar, :t))),
      s(:def, :single_mode_bindtag,
        s(:args),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:const, nil, :TkBindTag), :new)),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:begin,
                s(:send,
                  s(:lvar, :w), :focus),
                s(:send, nil, :select_only,
                  s(:lvar, :w),
                  s(:send,
                    s(:lvar, :w), :nearest,
                    s(:lvar, :y))))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Shift-Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Up"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_shift,
                s(:lvar, :w),
                s(:int, -1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Down"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_shift,
                s(:lvar, :w),
                s(:int, 1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Home"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:int, 0))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-End"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:str, "end"))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "space"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:send,
                    s(:lvar, :w), :index,
                    s(:str, "active")), :to_i))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Select"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:send,
                    s(:lvar, :w), :index,
                    s(:str, "active")), :to_i))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-slash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line,
                s(:lvar, :w),
                s(:send,
                  s(:send,
                    s(:lvar, :w), :index,
                    s(:str, "active")), :to_i))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-backslash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:block,
                s(:send,
                  s(:ivar, :@lbox_list), :each),
                s(:args,
                  s(:arg, :l)),
                s(:send,
                  s(:lvar, :l), :selection_clear,
                  s(:int, 0),
                  s(:str, "end"))))),
          s(:lvar, :t))),
      s(:def, :extended_mode_bindtag,
        s(:args),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:const, nil, :TkBindTag), :new)),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:begin,
                s(:send,
                  s(:lvar, :w), :focus),
                s(:send, nil, :select_only,
                  s(:lvar, :w),
                  s(:send,
                    s(:lvar, :w), :nearest,
                    s(:lvar, :y))))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "B1-Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :select_range,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Shift-Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :select_range,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Shift-B1-Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :select_range,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :select_toggle,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-B1-Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :select_drag,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Up"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :active_shift,
                s(:lvar, :w),
                s(:int, -1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Down"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :active_shift,
                s(:lvar, :w),
                s(:int, 1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Shift-Up"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_expand,
                s(:lvar, :w),
                s(:int, -1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Shift-Down"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_expand,
                s(:lvar, :w),
                s(:int, 1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Home"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line2,
                s(:lvar, :w),
                s(:int, 0))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-End"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line2,
                s(:lvar, :w),
                s(:str, "end"))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Shift-Home"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_range,
                s(:lvar, :w),
                s(:int, 0))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Shift-End"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_range,
                s(:lvar, :w),
                s(:str, "end"))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "space"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_active,
                s(:lvar, :w))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Select"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_active,
                s(:lvar, :w))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-slash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_all)),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-backslash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :clear_all)),
            s(:str, "%W")),
          s(:lvar, :t))),
      s(:def, :multiple_mode_bindtag,
        s(:args),
        s(:begin,
          s(:lvasgn, :t,
            s(:send,
              s(:const, nil, :TkBindTag), :new)),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Button-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:begin,
                s(:send,
                  s(:lvar, :w), :focus),
                s(:send, nil, :select_line3,
                  s(:lvar, :w),
                  s(:send,
                    s(:lvar, :w), :nearest,
                    s(:lvar, :y))))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w),
                s(:arg, :y)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:send,
                  s(:lvar, :w), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%W %y")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Up"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :active_shift,
                s(:lvar, :w),
                s(:int, -1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Key-Down"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :active_shift,
                s(:lvar, :w),
                s(:int, 1))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Home"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line2,
                s(:lvar, :w),
                s(:int, 0))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-End"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_line2,
                s(:lvar, :w),
                s(:str, "end"))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Shift-Home"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:int, 0))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-Shift-End"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :active_line,
                s(:lvar, :w),
                s(:str, "end"))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "space"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_active,
                s(:lvar, :w))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Select"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_active,
                s(:lvar, :w))),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-slash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :select_all)),
            s(:str, "%W")),
          s(:send,
            s(:lvar, :t), :bind,
            s(:str, "Control-backslash"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :w)),
              s(:send, nil, :clear_all)),
            s(:str, "%W")),
          s(:lvar, :t))),
      s(:def, :active_line,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:send,
            s(:lvar, :l), :activate,
            s(:lvar, :idx)))),
      s(:def, :select_only,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:begin,
            s(:send,
              s(:lvar, :l), :selection_clear,
              s(:int, 0),
              s(:str, "end")),
            s(:send,
              s(:lvar, :l), :selection_anchor,
              s(:lvar, :idx)),
            s(:send,
              s(:lvar, :l), :selection_set,
              s(:str, "anchor"))))),
      s(:def, :select_range,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:begin,
            s(:send,
              s(:lvar, :l), :selection_clear,
              s(:int, 0),
              s(:str, "end")),
            s(:send,
              s(:lvar, :l), :selection_set,
              s(:str, "anchor"),
              s(:lvar, :idx))))),
      s(:def, :select_toggle,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:begin,
          s(:lvasgn, :st,
            s(:send,
              s(:lvar, :w), :selection_includes,
              s(:lvar, :idx))),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:begin,
              s(:send,
                s(:lvar, :l), :selection_anchor,
                s(:lvar, :idx)),
              s(:if,
                s(:send,
                  s(:lvar, :st), :==,
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :l), :selection_clear,
                  s(:lvar, :idx)),
                s(:send,
                  s(:lvar, :l), :selection_set,
                  s(:lvar, :idx))))))),
      s(:def, :select_drag,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:begin,
          s(:lvasgn, :st,
            s(:send,
              s(:lvar, :w), :selection_includes,
              s(:str, "anchor"))),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:if,
              s(:send,
                s(:lvar, :st), :==,
                s(:int, 1)),
              s(:send,
                s(:lvar, :l), :selection_set,
                s(:str, "anchor"),
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_clear,
                s(:str, "anchor"),
                s(:lvar, :idx)))))),
      s(:def, :select_line,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:begin,
              s(:send,
                s(:lvar, :l), :selection_clear,
                s(:int, 0),
                s(:str, "end")),
              s(:send,
                s(:lvar, :l), :activate,
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_anchor,
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_set,
                s(:str, "anchor")))),
          s(:send,
            s(:lvar, :w), :selection_set,
            s(:str, "anchor")))),
      s(:def, :select_line2,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:begin,
            s(:send,
              s(:lvar, :l), :activate,
              s(:lvar, :idx)),
            s(:send,
              s(:lvar, :l), :selection_anchor,
              s(:lvar, :idx)),
            s(:send,
              s(:lvar, :l), :selection_set,
              s(:str, "anchor"))))),
      s(:def, :select_line3,
        s(:args,
          s(:arg, :w),
          s(:arg, :idx)),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:send,
            s(:lvar, :l), :selection_set,
            s(:lvar, :idx)))),
      s(:def, :select_active,
        s(:args,
          s(:arg, :w)),
        s(:begin,
          s(:lvasgn, :idx,
            s(:send,
              s(:send, nil, :l), :activate,
              s(:lvar, :idx))),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:send,
              s(:lvar, :l), :selection_set,
              s(:lvar, :idx))))),
      s(:def, :select_expand,
        s(:args,
          s(:arg, :w),
          s(:arg, :dir)),
        s(:begin,
          s(:lvasgn, :idx,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :w), :index,
                  s(:str, "active")), :to_i), :+,
              s(:lvar, :dir))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :<,
              s(:int, 0)),
            s(:lvasgn, :idx,
              s(:int, 0)),
            s(:if,
              s(:send,
                s(:lvar, :idx), :>=,
                s(:send,
                  s(:lvar, :w), :size)),
              s(:lvasgn, :idx,
                s(:send,
                  s(:send,
                    s(:lvar, :w), :size), :-,
                  s(:int, 1))), nil)),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:begin,
              s(:send,
                s(:lvar, :l), :activate,
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_set,
                s(:lvar, :idx)))))),
      s(:def, :active_shift,
        s(:args,
          s(:arg, :w),
          s(:arg, :dir)),
        s(:begin,
          s(:lvasgn, :idx,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :w), :index,
                  s(:str, "active")), :to_i), :+,
              s(:lvar, :dir))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :<,
              s(:int, 0)),
            s(:lvasgn, :idx,
              s(:int, 0)),
            s(:if,
              s(:send,
                s(:lvar, :idx), :>=,
                s(:send,
                  s(:lvar, :w), :size)),
              s(:lvasgn, :idx,
                s(:send,
                  s(:send,
                    s(:lvar, :w), :size), :-,
                  s(:int, 1))), nil)),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:begin,
              s(:send,
                s(:lvar, :l), :activate,
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_anchor,
                s(:lvar, :idx)))))),
      s(:def, :select_shift,
        s(:args,
          s(:arg, :w),
          s(:arg, :dir)),
        s(:begin,
          s(:lvasgn, :idx,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :w), :index,
                  s(:str, "anchor")), :to_i), :+,
              s(:lvar, :dir))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :<,
              s(:int, 0)),
            s(:lvasgn, :idx,
              s(:int, 0)),
            s(:if,
              s(:send,
                s(:lvar, :idx), :>=,
                s(:send,
                  s(:lvar, :w), :size)),
              s(:lvasgn, :idx,
                s(:send,
                  s(:send,
                    s(:lvar, :w), :size), :-,
                  s(:int, 1))), nil)),
          s(:block,
            s(:send,
              s(:ivar, :@lbox_list), :each),
            s(:args,
              s(:arg, :l)),
            s(:begin,
              s(:send,
                s(:lvar, :l), :selection_clear,
                s(:int, 0),
                s(:str, "end")),
              s(:send,
                s(:lvar, :l), :activate,
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_anchor,
                s(:lvar, :idx)),
              s(:send,
                s(:lvar, :l), :selection_set,
                s(:str, "anchor")))))),
      s(:def, :select_all,
        s(:args),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:send,
            s(:lvar, :l), :selection_set,
            s(:int, 0),
            s(:str, "end")))),
      s(:def, :clear_all,
        s(:args),
        s(:block,
          s(:send,
            s(:ivar, :@lbox_list), :each),
          s(:args,
            s(:arg, :l)),
          s(:send,
            s(:lvar, :l), :selection_clear,
            s(:int, 0),
            s(:str, "end")))),
      s(:def, :focus_shift,
        s(:args,
          s(:arg, :w),
          s(:arg, :dir)),
        s(:begin,
          s(:lvasgn, :idx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox_list), :index,
                s(:lvar, :w)), :+,
              s(:lvar, :dir))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :<,
              s(:int, 0)),
            s(:return), nil),
          s(:if,
            s(:send,
              s(:lvar, :idx), :>=,
              s(:send,
                s(:ivar, :@lbox_list), :size)),
            s(:return), nil),
          s(:send,
            s(:send,
              s(:ivar, :@lbox_list), :[],
              s(:lvar, :idx)), :focus))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:begin,
      s(:lvasgn, :f,
        s(:send,
          s(:send,
            s(:const, nil, :TkFrame), :new,
            s(:nil),
            s(:hash,
              s(:pair,
                s(:str, "width"),
                s(:int, 300)),
              s(:pair,
                s(:str, "height"),
                s(:int, 200)))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "fill"),
              s(:str, "both")),
            s(:pair,
              s(:str, "expand"),
              s(:str, "true"))))),
      s(:lvasgn, :l,
        s(:send,
          s(:send,
            s(:const, nil, :TkMultiListbox), :new,
            s(:lvar, :f),
            s(:int, 150),
            s(:array,
              s(:array,
                s(:str, "L1"),
                s(:int, 100)),
              s(:array,
                s(:str, "L2"),
                s(:int, 200)),
              s(:array,
                s(:str, "L3"),
                s(:int, 50))),
            s(:hash,
              s(:pair,
                s(:str, "titlefont"),
                s(:str, "courier")),
              s(:pair,
                s(:str, "titleforeground"),
                s(:str, "yellow")),
              s(:pair,
                s(:str, "titlebackground"),
                s(:str, "navy")))), :pack,
          s(:hash,
            s(:pair,
              s(:str, "fill"),
              s(:str, "both")),
            s(:pair,
              s(:str, "expand"),
              s(:true))))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 1),
          s(:int, 2),
          s(:int, 3))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6)),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:str, "aaaaaaaaaaaaaaa"),
          s(:str, "bbbbbbbbbbbbbb"),
          s(:str, "ccccccccccccccccc"))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 1),
          s(:int, 2),
          s(:int, 3))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6)),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:str, "aaaaaaaaaaaaaaa"),
          s(:str, "bbbbbbbbbbbbbb"),
          s(:str, "ccccccccccccccccc"))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 1),
          s(:int, 2),
          s(:int, 3))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6)),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:str, "aaaaaaaaaaaaaaa"),
          s(:str, "bbbbbbbbbbbbbb"),
          s(:str, "ccccccccccccccccc"))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 1),
          s(:int, 2),
          s(:int, 3))),
      s(:send,
        s(:lvar, :l), :insert,
        s(:str, "end"),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6)),
        s(:array,
          s(:int, 4),
          s(:int, 5),
          s(:int, 6))),
      s(:send, nil, :p,
        s(:send,
          s(:lvar, :l), :columns,
          s(:int, 1))),
      s(:send, nil, :p,
        s(:send,
          s(:lvar, :l), :columns,
          s(:irange,
            s(:int, 1),
            s(:int, 3)))),
      s(:send, nil, :p,
        s(:send,
          s(:lvar, :l), :columns,
          s(:int, 1),
          s(:int, 2))),
      s(:send,
        s(:const, nil, :Tk), :mainloop)), nil))
