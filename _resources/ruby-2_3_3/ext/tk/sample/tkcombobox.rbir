s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:module,
    s(:const, nil, :Tk),
    s(:module,
      s(:const, nil, :RbWidget),
      s(:begin,
        s(:class,
          s(:const, nil, :AutoScrollListbox),
          s(:const, nil, :TkListbox), nil),
        s(:class,
          s(:const, nil, :Combobox),
          s(:const, nil, :TkEntry), nil)))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :RbWidget), :AutoScrollListbox), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComposite)),
      s(:cvasgn, :@@up_bmp,
        s(:send,
          s(:const, nil, :TkBitmapImage), :new,
          s(:hash,
            s(:pair,
              s(:sym, :data),
              s(:dstr,
                s(:str, "#define up_arrow_width 9\n"),
                s(:str, "#define up_arrow_height 9\n"),
                s(:str, "static unsigned char up_arrow_bits[] = {\n"),
                s(:str, "   0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x38, 0x00, 0x38, 0x00, 0x7c, 0x00,\n"),
                s(:str, "   0x7c, 0x00, 0xfe, 0x00, 0x00, 0x00};\n")))))),
      s(:cvasgn, :@@down_bmp,
        s(:send,
          s(:const, nil, :TkBitmapImage), :new,
          s(:hash,
            s(:pair,
              s(:sym, :data),
              s(:dstr,
                s(:str, "#define up_arrow_width 9\n"),
                s(:str, "#define up_arrow_height 9\n"),
                s(:str, "static unsigned char down_arrow_bits[] = {\n"),
                s(:str, "   0x00, 0x00, 0xfe, 0x00, 0x7c, 0x00, 0x7c, 0x00, 0x38, 0x00, 0x38, 0x00,\n"),
                s(:str, "   0x10, 0x00, 0x10, 0x00, 0x00, 0x00};\n")))))),
      s(:send, nil, :private),
      s(:def, :initialize_composite,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:ivasgn, :@initwait,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "startwait")),
              s(:args),
              s(:int, 300))),
          s(:ivasgn, :@interval,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "interval")),
              s(:args),
              s(:int, 150))),
          s(:op_asgn,
            s(:ivasgn, :@initwait), :-,
            s(:ivar, :@interval)),
          s(:if,
            s(:send,
              s(:ivar, :@initwait), :<,
              s(:int, 0)),
            s(:ivasgn, :@initwait,
              s(:int, 0)), nil),
          s(:ivasgn, :@lbox,
            s(:send,
              s(:const, nil, :TkListbox), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 0))))),
          s(:ivasgn, :@path,
            s(:send,
              s(:ivar, :@lbox), :path)),
          s(:send,
            s(:const, nil, :TkPack), :propagate,
            s(:ivar, :@lbox),
            s(:false)),
          s(:ivasgn, :@scr,
            s(:send,
              s(:const, nil, :TkScrollbar), :new,
              s(:ivar, :@frame),
              s(:hash,
                s(:pair,
                  s(:sym, :width),
                  s(:int, 10))))),
          s(:send,
            s(:ivar, :@lbox), :yscrollcommand,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:ivar, :@scr), :set,
                  s(:splat,
                    s(:lvar, :args))),
                s(:send, nil, :_config_proc)))),
          s(:send,
            s(:ivar, :@scr), :command,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:restarg, :args)),
              s(:begin,
                s(:send,
                  s(:ivar, :@lbox), :yview,
                  s(:splat,
                    s(:lvar, :args))),
                s(:send, nil, :_config_proc)))),
          s(:ivasgn, :@up_arrow,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:ivar, :@lbox),
              s(:hash,
                s(:pair,
                  s(:sym, :image),
                  s(:cvar, :@@up_bmp)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :raised)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1))))),
          s(:ivasgn, :@down_arrow,
            s(:send,
              s(:const, nil, :TkLabel), :new,
              s(:ivar, :@lbox),
              s(:hash,
                s(:pair,
                  s(:sym, :image),
                  s(:cvar, :@@down_bmp)),
                s(:pair,
                  s(:sym, :relief),
                  s(:sym, :raised)),
                s(:pair,
                  s(:sym, :borderwidth),
                  s(:int, 1))))),
          s(:send, nil, :_init_binding),
          s(:send,
            s(:ivar, :@lbox), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:sym, :true)))),
          s(:send, nil, :delegate,
            s(:str, "DEFAULT"),
            s(:ivar, :@lbox)),
          s(:send, nil, :delegate,
            s(:str, "background"),
            s(:ivar, :@frame),
            s(:ivar, :@scr)),
          s(:send, nil, :delegate,
            s(:str, "activebackground"),
            s(:ivar, :@scr)),
          s(:send, nil, :delegate,
            s(:str, "troughcolor"),
            s(:ivar, :@scr)),
          s(:send, nil, :delegate,
            s(:str, "repeatdelay"),
            s(:ivar, :@scr)),
          s(:send, nil, :delegate,
            s(:str, "repeatinterval"),
            s(:ivar, :@scr)),
          s(:send, nil, :delegate,
            s(:str, "relief"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "borderwidth"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate_alias,
            s(:str, "arrowrelief"),
            s(:str, "relief"),
            s(:ivar, :@up_arrow),
            s(:ivar, :@down_arrow)),
          s(:send, nil, :delegate_alias,
            s(:str, "arrowborderwidth"),
            s(:str, "borderwidth"),
            s(:ivar, :@up_arrow),
            s(:ivar, :@down_arrow)),
          s(:block,
            s(:send, nil, :scrollbar,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "scrollbar"))),
            s(:args),
            s(:false)),
          s(:if,
            s(:send,
              s(:lvar, :keys), :empty?), nil,
            s(:send, nil, :configure,
              s(:lvar, :keys))))),
      s(:def, :_show_up_arrow,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@up_arrow), :winfo_mapped?), nil,
          s(:send,
            s(:ivar, :@up_arrow), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :top)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))))),
      s(:def, :_show_down_arrow,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@down_arrow), :winfo_mapped?), nil,
          s(:send,
            s(:ivar, :@down_arrow), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :bottom)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))))),
      s(:def, :_set_sel,
        s(:args,
          s(:arg, :idx)),
        s(:begin,
          s(:send,
            s(:ivar, :@lbox), :activate,
            s(:lvar, :idx)),
          s(:send,
            s(:ivar, :@lbox), :selection_clear,
            s(:int, 0),
            s(:str, "end")),
          s(:send,
            s(:ivar, :@lbox), :selection_set,
            s(:lvar, :idx)))),
      s(:def, :_check_sel,
        s(:args,
          s(:arg, :cidx),
          s(:optarg, :tidx,
            s(:nil)),
          s(:optarg, :bidx,
            s(:nil))),
        s(:begin,
          s(:send, nil, :_set_sel,
            s(:lvar, :cidx)),
          s(:if,
            s(:lvar, :tidx), nil,
            s(:begin,
              s(:lvasgn, :tidx,
                s(:send,
                  s(:ivar, :@lbox), :nearest,
                  s(:int, 0))),
              s(:if,
                s(:send,
                  s(:lvar, :tidx), :>,
                  s(:int, 0)),
                s(:op_asgn,
                  s(:lvasgn, :tidx), :+,
                  s(:int, 1)), nil))),
          s(:if,
            s(:lvar, :bidx), nil,
            s(:begin,
              s(:lvasgn, :bidx,
                s(:send,
                  s(:ivar, :@lbox), :nearest,
                  s(:int, 10000))),
              s(:if,
                s(:send,
                  s(:lvar, :bidx), :<,
                  s(:send,
                    s(:send,
                      s(:ivar, :@lbox), :index,
                      s(:str, "end")), :-,
                    s(:int, 1))),
                s(:op_asgn,
                  s(:lvasgn, :bidx), :-,
                  s(:int, 1)), nil))),
          s(:if,
            s(:send,
              s(:lvar, :cidx), :>,
              s(:lvar, :bidx)),
            s(:send, nil, :_set_sel,
              s(:lvar, :bidx)), nil),
          s(:if,
            s(:send,
              s(:lvar, :cidx), :<,
              s(:lvar, :tidx)),
            s(:send, nil, :_set_sel,
              s(:lvar, :tidx)), nil))),
      s(:def, :_up_proc,
        s(:args),
        s(:begin,
          s(:lvasgn, :cidx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :curselection), :[],
              s(:int, 0))),
          s(:lvasgn, :idx,
            s(:send,
              s(:ivar, :@lbox), :nearest,
              s(:int, 0))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :>=,
              s(:int, 0)),
            s(:begin,
              s(:send,
                s(:ivar, :@lbox), :see,
                s(:send,
                  s(:lvar, :idx), :-,
                  s(:int, 1))),
              s(:send, nil, :_set_sel,
                s(:lvar, :idx)),
              s(:if,
                s(:send,
                  s(:lvar, :idx), :==,
                  s(:int, 1)),
                s(:send,
                  s(:ivar, :@up_arrow), :pack_forget), nil),
              s(:if,
                s(:send,
                  s(:lvar, :idx), :==,
                  s(:int, 0)),
                s(:send,
                  s(:ivar, :@up_timer), :stop), nil),
              s(:if,
                s(:send,
                  s(:send,
                    s(:ivar, :@lbox), :bbox,
                    s(:str, "end")), :==,
                  s(:array)),
                s(:send, nil, :_show_down_arrow), nil)), nil),
          s(:if,
            s(:and,
              s(:and,
                s(:lvar, :cidx),
                s(:send,
                  s(:lvar, :cidx), :>,
                  s(:int, 0))),
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :idx), :==,
                    s(:int, 0)),
                  s(:send,
                    s(:lvar, :cidx), :==,
                    s(:send,
                      s(:ivar, :@lbox), :nearest,
                      s(:int, 10000)))))),
            s(:send, nil, :_set_sel,
              s(:send,
                s(:lvar, :cidx), :-,
                s(:int, 1))), nil))),
      s(:def, :_down_proc,
        s(:args),
        s(:begin,
          s(:lvasgn, :cidx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :curselection), :[],
              s(:int, 0))),
          s(:lvasgn, :eidx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :index,
                s(:str, "end")), :-,
              s(:int, 1))),
          s(:lvasgn, :idx,
            s(:send,
              s(:ivar, :@lbox), :nearest,
              s(:int, 10000))),
          s(:if,
            s(:send,
              s(:lvar, :idx), :<=,
              s(:lvar, :eidx)),
            s(:begin,
              s(:send,
                s(:ivar, :@lbox), :see,
                s(:send,
                  s(:lvar, :idx), :+,
                  s(:int, 1))),
              s(:if,
                s(:send,
                  s(:lvar, :cidx), :<,
                  s(:lvar, :eidx)),
                s(:send, nil, :_set_sel,
                  s(:send,
                    s(:lvar, :cidx), :+,
                    s(:int, 1))), nil),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :idx), :+,
                    s(:int, 1)), :==,
                  s(:lvar, :eidx)),
                s(:send,
                  s(:ivar, :@down_arrow), :pack_forget), nil),
              s(:if,
                s(:send,
                  s(:lvar, :idx), :==,
                  s(:lvar, :eidx)),
                s(:send,
                  s(:ivar, :@down_timer), :stop), nil),
              s(:if,
                s(:send,
                  s(:send,
                    s(:ivar, :@lbox), :bbox,
                    s(:int, 0)), :==,
                  s(:array)),
                s(:send, nil, :_show_up_arrow), nil)), nil),
          s(:if,
            s(:and,
              s(:and,
                s(:lvar, :cidx),
                s(:send,
                  s(:lvar, :cidx), :<,
                  s(:lvar, :eidx))),
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :eidx), :==,
                    s(:lvar, :idx)),
                  s(:send,
                    s(:lvar, :cidx), :==,
                    s(:send,
                      s(:ivar, :@lbox), :nearest,
                      s(:int, 0)))))),
            s(:send, nil, :_set_sel,
              s(:send,
                s(:lvar, :cidx), :+,
                s(:int, 1))), nil))),
      s(:def, :_key_UP_proc,
        s(:args),
        s(:begin,
          s(:lvasgn, :cidx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :curselection), :[],
              s(:int, 0))),
          s(:if,
            s(:lvar, :cidx), nil,
            s(:send, nil, :_set_sel,
              s(:lvasgn, :cidx,
                s(:send,
                  s(:ivar, :@lbox), :index,
                  s(:str, "activate"))))),
          s(:op_asgn,
            s(:lvasgn, :cidx), :-,
            s(:int, 1)),
          s(:if,
            s(:send,
              s(:lvar, :cidx), :==,
              s(:int, 0)),
            s(:send,
              s(:ivar, :@up_arrow), :pack_forget),
            s(:if,
              s(:send,
                s(:lvar, :cidx), :==,
                s(:send,
                  s(:ivar, :@lbox), :nearest,
                  s(:int, 0))),
              s(:send,
                s(:ivar, :@lbox), :see,
                s(:send,
                  s(:lvar, :cidx), :-,
                  s(:int, 1))), nil)))),
      s(:def, :_key_DOWN_proc,
        s(:args),
        s(:begin,
          s(:lvasgn, :cidx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :curselection), :[],
              s(:int, 0))),
          s(:if,
            s(:lvar, :cidx), nil,
            s(:send, nil, :_set_sel,
              s(:lvasgn, :cidx,
                s(:send,
                  s(:ivar, :@lbox), :index,
                  s(:str, "activate"))))),
          s(:op_asgn,
            s(:lvasgn, :cidx), :+,
            s(:int, 1)),
          s(:if,
            s(:send,
              s(:lvar, :cidx), :==,
              s(:send,
                s(:send,
                  s(:ivar, :@lbox), :index,
                  s(:str, "end")), :-,
                s(:int, 1))),
            s(:send,
              s(:ivar, :@down_arrow), :pack_forget),
            s(:if,
              s(:send,
                s(:lvar, :cidx), :==,
                s(:send,
                  s(:ivar, :@lbox), :nearest,
                  s(:int, 10000))),
              s(:send,
                s(:ivar, :@lbox), :see,
                s(:send,
                  s(:lvar, :cidx), :+,
                  s(:int, 1))), nil)))),
      s(:def, :_config_proc,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :size), :==,
              s(:int, 0)),
            s(:begin,
              s(:send,
                s(:ivar, :@up_arrow), :pack_forget),
              s(:send,
                s(:ivar, :@down_arrow), :pack_forget),
              s(:return)), nil),
          s(:lvasgn, :tidx,
            s(:send,
              s(:ivar, :@lbox), :nearest,
              s(:int, 0))),
          s(:lvasgn, :bidx,
            s(:send,
              s(:ivar, :@lbox), :nearest,
              s(:int, 10000))),
          s(:if,
            s(:send,
              s(:lvar, :tidx), :>,
              s(:int, 0)),
            s(:begin,
              s(:send, nil, :_show_up_arrow),
              s(:op_asgn,
                s(:lvasgn, :tidx), :+,
                s(:int, 1))),
            s(:if,
              s(:send,
                s(:ivar, :@up_timer), :running?), nil,
              s(:send,
                s(:ivar, :@up_arrow), :pack_forget))),
          s(:if,
            s(:send,
              s(:lvar, :bidx), :<,
              s(:send,
                s(:send,
                  s(:ivar, :@lbox), :index,
                  s(:str, "end")), :-,
                s(:int, 1))),
            s(:begin,
              s(:send, nil, :_show_down_arrow),
              s(:op_asgn,
                s(:lvasgn, :bidx), :-,
                s(:int, 1))),
            s(:if,
              s(:send,
                s(:ivar, :@down_timer), :running?), nil,
              s(:send,
                s(:ivar, :@down_arrow), :pack_forget))),
          s(:lvasgn, :cidx,
            s(:send,
              s(:send,
                s(:ivar, :@lbox), :curselection), :[],
              s(:int, 0))),
          s(:if,
            s(:lvar, :cidx),
            s(:send, nil, :_check_sel,
              s(:lvar, :cidx),
              s(:lvar, :tidx),
              s(:lvar, :bidx)), nil))),
      s(:def, :_init_binding,
        s(:args),
        s(:begin,
          s(:ivasgn, :@up_timer,
            s(:send,
              s(:const, nil, :TkAfter), :new,
              s(:ivar, :@interval),
              s(:int, -1),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :_up_proc)))),
          s(:ivasgn, :@down_timer,
            s(:send,
              s(:const, nil, :TkAfter), :new,
              s(:ivar, :@interval),
              s(:int, -1),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :_down_proc)))),
          s(:send,
            s(:ivar, :@up_timer), :set_start_proc,
            s(:ivar, :@initwait),
            s(:block,
              s(:send, nil, :proc),
              s(:args), nil)),
          s(:send,
            s(:ivar, :@down_timer), :set_start_proc,
            s(:ivar, :@initwait),
            s(:block,
              s(:send, nil, :proc),
              s(:args), nil)),
          s(:send,
            s(:ivar, :@up_arrow), :bind,
            s(:str, "Enter"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:ivar, :@up_timer), :start))),
          s(:send,
            s(:ivar, :@up_arrow), :bind,
            s(:str, "Leave"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:if,
                s(:send,
                  s(:ivar, :@up_arrow), :winfo_mapped?),
                s(:send,
                  s(:ivar, :@up_timer), :stop), nil))),
          s(:send,
            s(:ivar, :@down_arrow), :bind,
            s(:str, "Enter"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:ivar, :@down_timer), :start))),
          s(:send,
            s(:ivar, :@down_arrow), :bind,
            s(:str, "Leave"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:if,
                s(:send,
                  s(:ivar, :@down_arrow), :winfo_mapped?),
                s(:send,
                  s(:ivar, :@down_timer), :stop), nil))),
          s(:send,
            s(:ivar, :@lbox), :bind,
            s(:str, "Configure"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :_config_proc))),
          s(:send,
            s(:ivar, :@lbox), :bind,
            s(:str, "Enter"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :y)),
              s(:send, nil, :_set_sel,
                s(:send,
                  s(:ivar, :@lbox), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%y")),
          s(:send,
            s(:ivar, :@lbox), :bind,
            s(:str, "Motion"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :y)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:ivar, :@up_timer), :running?),
                  s(:send,
                    s(:ivar, :@up_timer), :stop), nil),
                s(:if,
                  s(:send,
                    s(:ivar, :@down_timer), :running?),
                  s(:send,
                    s(:ivar, :@down_timer), :stop), nil),
                s(:send, nil, :_check_sel,
                  s(:send,
                    s(:ivar, :@lbox), :nearest,
                    s(:lvar, :y))))),
            s(:str, "%y")),
          s(:send,
            s(:ivar, :@lbox), :bind,
            s(:str, "Up"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :_key_UP_proc))),
          s(:send,
            s(:ivar, :@lbox), :bind,
            s(:str, "Down"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :_key_DOWN_proc))))),
      s(:send, nil, :public),
      s(:def, :scrollbar,
        s(:args,
          s(:arg, :mode)),
        s(:if,
          s(:lvar, :mode),
          s(:send,
            s(:ivar, :@scr), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :right)),
              s(:pair,
                s(:sym, :fill),
                s(:sym, :y)))),
          s(:send,
            s(:ivar, :@scr), :pack_forget))))),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :Tk), :RbWidget), :Combobox),
    s(:const, nil, :TkEntry),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TkComposite)),
      s(:cvasgn, :@@down_btn_bmp,
        s(:send,
          s(:const, nil, :TkBitmapImage), :new,
          s(:hash,
            s(:pair,
              s(:sym, :data),
              s(:dstr,
                s(:str, "#define down_arrow_width 11\n"),
                s(:str, "#define down_arrow_height 11\n"),
                s(:str, "static unsigned char down_arrow_bits[] = {\n"),
                s(:str, "   0x00, 0x00, 0xfe, 0x03, 0xfc, 0x01, 0xfc, 0x01, 0xf8, 0x00, 0xf8, 0x00,\n"),
                s(:str, "   0x70, 0x00, 0x70, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00};\n")))))),
      s(:cvasgn, :@@up_btn_bmp,
        s(:send,
          s(:const, nil, :TkBitmapImage), :new,
          s(:hash,
            s(:pair,
              s(:sym, :data),
              s(:dstr,
                s(:str, "#define up_arrow_width 11\n"),
                s(:str, "#define up_arrow_height 11\n"),
                s(:str, "static unsigned char up_arrow_bits[] = {\n"),
                s(:str, "   0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x70, 0x00, 0x70, 0x00, 0xf8, 0x00,\n"),
                s(:str, "   0xf8, 0x00, 0xfc, 0x01, 0xfc, 0x01, 0xfe, 0x03, 0x00, 0x00};\n")))))),
      s(:def, :_button_proc,
        s(:args,
          s(:optarg, :dir,
            s(:true))),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@ent), :state), :==,
              s(:str, "disabled")),
            s(:return), nil),
          s(:send,
            s(:ivar, :@btn), :relief,
            s(:sym, :sunken)),
          s(:lvasgn, :x,
            s(:send,
              s(:ivar, :@frame), :winfo_rootx)),
          s(:lvasgn, :y,
            s(:send,
              s(:ivar, :@frame), :winfo_rooty)),
          s(:if,
            s(:lvar, :dir),
            s(:send,
              s(:ivar, :@top), :geometry,
              s(:dstr,
                s(:str, "+"),
                s(:begin,
                  s(:lvar, :x)),
                s(:str, "+"),
                s(:begin,
                  s(:send,
                    s(:lvar, :y), :+,
                    s(:send,
                      s(:ivar, :@frame), :winfo_height))))),
            s(:begin,
              s(:send,
                s(:ivar, :@btn), :image,
                s(:cvar, :@@up_btn_bmp)),
              s(:send,
                s(:ivar, :@top), :geometry,
                s(:dstr,
                  s(:str, "+"),
                  s(:begin,
                    s(:lvar, :x)),
                  s(:str, "+"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :y), :-,
                      s(:send,
                        s(:ivar, :@top), :winfo_reqheight))))))),
          s(:send,
            s(:ivar, :@top), :deiconify),
          s(:send,
            s(:ivar, :@lst), :focus),
          s(:if,
            s(:begin,
              s(:lvasgn, :idx,
                s(:send,
                  s(:send, nil, :values), :index,
                  s(:send,
                    s(:ivar, :@ent), :value)))),
            s(:begin,
              s(:send,
                s(:ivar, :@lst), :see,
                s(:send,
                  s(:lvar, :idx), :-,
                  s(:int, 1))),
              s(:send,
                s(:ivar, :@lst), :activate,
                s(:lvar, :idx)),
              s(:send,
                s(:ivar, :@lst), :selection_set,
                s(:lvar, :idx))),
            s(:if,
              s(:send,
                s(:send,
                  s(:ivar, :@lst), :size), :>,
                s(:int, 0)),
              s(:begin,
                s(:send,
                  s(:ivar, :@lst), :see,
                  s(:int, 0)),
                s(:send,
                  s(:ivar, :@lst), :activate,
                  s(:int, 0)),
                s(:send,
                  s(:ivar, :@lst), :selection_set,
                  s(:int, 0))), nil)),
          s(:send,
            s(:ivar, :@top), :grab),
          s(:kwbegin,
            s(:ensure,
              s(:rescue,
                s(:begin,
                  s(:send,
                    s(:ivar, :@wait_var), :tkwait),
                  s(:if,
                    s(:send,
                      s(:begin,
                        s(:lvasgn, :idx,
                          s(:send,
                            s(:ivar, :@wait_var), :to_i))), :>=,
                      s(:int, 0)),
                    s(:send, nil, :_set_entry_value,
                      s(:send,
                        s(:ivar, :@lst), :get,
                        s(:lvar, :idx))), nil),
                  s(:send,
                    s(:ivar, :@top), :withdraw),
                  s(:send,
                    s(:ivar, :@btn), :relief,
                    s(:sym, :raised)),
                  s(:send,
                    s(:ivar, :@btn), :image,
                    s(:cvar, :@@down_btn_bmp))),
                s(:resbody, nil, nil, nil), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:send,
                      s(:ivar, :@top), :grab,
                      s(:sym, :release)),
                    s(:send,
                      s(:ivar, :@ent), :focus)),
                  s(:resbody, nil, nil, nil), nil)))))),
      s(:send, nil, :private,
        s(:sym, :_button_proc)),
      s(:def, :_init_bindings,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@btn), :bind,
            s(:str, "1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :_button_proc,
                s(:true)))),
          s(:send,
            s(:ivar, :@btn), :bind,
            s(:str, "3"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :_button_proc,
                s(:false)))),
          s(:send,
            s(:ivar, :@lst), :bind,
            s(:str, "1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :y)),
              s(:send,
                s(:ivar, :@wait_var), :value=,
                s(:send,
                  s(:ivar, :@lst), :nearest,
                  s(:lvar, :y)))),
            s(:str, "%y")),
          s(:send,
            s(:ivar, :@lst), :bind,
            s(:str, "Return"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:ivar, :@wait_var), :value=,
                s(:send,
                  s(:send,
                    s(:ivar, :@lst), :curselection), :[],
                  s(:int, 0))))),
          s(:lvasgn, :cancel,
            s(:send,
              s(:const, nil, :TkVirtualEvent), :new,
              s(:str, "2"),
              s(:str, "3"),
              s(:str, "Escape"))),
          s(:send,
            s(:ivar, :@lst), :bind,
            s(:lvar, :cancel),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:ivar, :@wait_var), :value=,
                s(:int, -1)))))),
      s(:send, nil, :private,
        s(:sym, :_init_bindings)),
      s(:def, :_set_entry_value,
        s(:args,
          s(:arg, :val)),
        s(:send,
          s(:send,
            s(:ivar, :@ent), :textvariable), :value=,
          s(:lvar, :val))),
      s(:send, nil, :private,
        s(:sym, :_set_entry_value)),
      s(:def, :_state_control,
        s(:args,
          s(:optarg, :value,
            s(:const, nil, :None))),
        s(:if,
          s(:send,
            s(:lvar, :value), :==,
            s(:const, nil, :None)),
          s(:send,
            s(:ivar, :@ent), :state),
          s(:begin,
            s(:send,
              s(:ivar, :@ent), :state,
              s(:send,
                s(:lvar, :value), :to_s)),
            s(:case,
              s(:lvasgn, :value,
                s(:send,
                  s(:ivar, :@ent), :state)),
              s(:when,
                s(:str, "normal"),
                s(:str, "readonly"),
                s(:send,
                  s(:ivar, :@btn), :state,
                  s(:str, "normal"))),
              s(:when,
                s(:str, "disabled"),
                s(:send,
                  s(:ivar, :@btn), :state,
                  s(:str, "disabled"))), nil)))),
      s(:send, nil, :private,
        s(:sym, :_state_control)),
      s(:def, :__methodcall_optkeys,
        s(:args),
        s(:hash,
          s(:pair,
            s(:str, "state"),
            s(:sym, :_state_control)))),
      s(:send, nil, :private,
        s(:sym, :__methodcall_optkeys)),
      s(:def, :_textvariable_control,
        s(:args,
          s(:optarg, :var,
            s(:const, nil, :None))),
        s(:if,
          s(:send,
            s(:lvar, :var), :==,
            s(:const, nil, :None)),
          s(:if,
            s(:begin,
              s(:send,
                s(:begin,
                  s(:lvasgn, :var,
                    s(:send,
                      s(:ivar, :@ent), :textvariable))), :===,
                s(:ivar, :@default_var))),
            s(:nil),
            s(:lvar, :var)),
          s(:begin,
            s(:ivasgn, :@var,
              s(:lvar, :var)),
            s(:send, nil, :tk_send,
              s(:str, "configure"),
              s(:str, "-textvariable"),
              s(:if,
                s(:begin,
                  s(:ivar, :@var)),
                s(:lvar, :var),
                s(:ivar, :@default_var)))))),
      s(:send, nil, :private,
        s(:sym, :_textvariable_control)),
      s(:def, :initialize_composite,
        s(:args,
          s(:optarg, :keys,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :keys,
            s(:send, nil, :_symbolkey2str,
              s(:lvar, :keys))),
          s(:ivasgn, :@btn,
            s(:send,
              s(:send,
                s(:const, nil, :TkLabel), :new,
                s(:ivar, :@frame),
                s(:hash,
                  s(:pair,
                    s(:sym, :relief),
                    s(:sym, :raised)),
                  s(:pair,
                    s(:sym, :borderwidth),
                    s(:int, 2)),
                  s(:pair,
                    s(:sym, :image),
                    s(:cvar, :@@down_btn_bmp)))), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :right)),
                s(:pair,
                  s(:sym, :ipadx),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :fill),
                  s(:sym, :y))))),
          s(:ivasgn, :@ent,
            s(:send,
              s(:send,
                s(:const, nil, :TkEntry), :new,
                s(:ivar, :@frame)), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :left))))),
          s(:ivasgn, :@path,
            s(:send,
              s(:ivar, :@ent), :path)),
          s(:ivasgn, :@top,
            s(:block,
              s(:send,
                s(:const, nil, :TkToplevel), :new,
                s(:ivar, :@btn),
                s(:hash,
                  s(:pair,
                    s(:sym, :borderwidth),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :relief),
                    s(:sym, :raised)))),
              s(:args),
              s(:begin,
                s(:send, nil, :withdraw),
                s(:send, nil, :transient),
                s(:send, nil, :overrideredirect,
                  s(:true))))),
          s(:lvasgn, :startwait,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "startwait")),
              s(:args),
              s(:int, 300))),
          s(:lvasgn, :interval,
            s(:block,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "interval")),
              s(:args),
              s(:int, 150))),
          s(:ivasgn, :@lst,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Tk), :RbWidget), :AutoScrollListbox), :new,
              s(:ivar, :@top),
              s(:hash,
                s(:pair,
                  s(:sym, :scrollbar),
                  s(:true)),
                s(:pair,
                  s(:sym, :startwait),
                  s(:lvar, :startwait)),
                s(:pair,
                  s(:sym, :interval),
                  s(:lvar, :interval))))),
          s(:send,
            s(:ivar, :@lst), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :both)),
              s(:pair,
                s(:sym, :expand),
                s(:true)))),
          s(:ivasgn, :@ent_list,
            s(:array)),
          s(:ivasgn, :@wait_var,
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:ivasgn, :@var,
            s(:ivasgn, :@default_var,
              s(:send,
                s(:const, nil, :TkVariable), :new))),
          s(:send,
            s(:ivar, :@ent), :textvariable,
            s(:ivar, :@default_var)),
          s(:send, nil, :_init_bindings),
          s(:send, nil, :option_methods,
            s(:hash,
              s(:pair,
                s(:str, "textvariable"),
                s(:sym, :_textvariable_control)))),
          s(:send, nil, :delegate,
            s(:str, "DEFAULT"),
            s(:ivar, :@ent)),
          s(:send, nil, :delegate,
            s(:str, "height"),
            s(:ivar, :@lst)),
          s(:send, nil, :delegate,
            s(:str, "relief"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "borderwidth"),
            s(:ivar, :@frame)),
          s(:send, nil, :delegate,
            s(:str, "arrowrelief"),
            s(:ivar, :@lst)),
          s(:send, nil, :delegate,
            s(:str, "arrowborderwidth"),
            s(:ivar, :@lst)),
          s(:send, nil, :delegate,
            s(:str, "state"),
            s(:false)),
          s(:if,
            s(:lvasgn, :mode,
              s(:send,
                s(:lvar, :keys), :delete,
                s(:str, "scrollbar"))),
            s(:send, nil, :scrollbar,
              s(:lvar, :mode)), nil),
          s(:if,
            s(:send,
              s(:lvar, :keys), :empty?), nil,
            s(:send, nil, :configure,
              s(:lvar, :keys))))),
      s(:send, nil, :private,
        s(:sym, :initialize_composite)),
      s(:def, :scrollbar,
        s(:args,
          s(:arg, :mode)),
        s(:send,
          s(:ivar, :@lst), :scrollbar,
          s(:lvar, :mode))),
      s(:def, :_reset_width,
        s(:args),
        s(:begin,
          s(:lvasgn, :len,
            s(:send,
              s(:ivar, :@ent), :width)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@lst), :get,
                s(:int, 0),
                s(:str, "end")), :each),
            s(:args,
              s(:arg, :l)),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :l), :length), :>,
                s(:lvar, :len)),
              s(:lvasgn, :len,
                s(:send,
                  s(:lvar, :l), :length)), nil)),
          s(:send,
            s(:ivar, :@lst), :width,
            s(:send,
              s(:lvar, :len), :+,
              s(:int, 1))))),
      s(:send, nil, :private,
        s(:sym, :_reset_width)),
      s(:def, :add,
        s(:args,
          s(:arg, :ent)),
        s(:begin,
          s(:lvasgn, :ent,
            s(:send,
              s(:lvar, :ent), :to_s)),
          s(:if,
            s(:send,
              s(:ivar, :@ent_list), :index,
              s(:lvar, :ent)), nil,
            s(:begin,
              s(:send,
                s(:ivar, :@ent_list), :<<,
                s(:lvar, :ent)),
              s(:send,
                s(:ivar, :@lst), :insert,
                s(:str, "end"),
                s(:lvar, :ent)))),
          s(:send, nil, :_reset_width),
          s(:self))),
      s(:def, :remove,
        s(:args,
          s(:arg, :ent)),
        s(:begin,
          s(:lvasgn, :ent,
            s(:send,
              s(:lvar, :ent), :to_s)),
          s(:send,
            s(:ivar, :@ent_list), :delete,
            s(:lvar, :ent)),
          s(:if,
            s(:lvasgn, :idx,
              s(:send,
                s(:send,
                  s(:ivar, :@lst), :get,
                  s(:int, 0),
                  s(:str, "end")), :index,
                s(:lvar, :ent))),
            s(:send,
              s(:ivar, :@lst), :delete,
              s(:lvar, :idx)), nil),
          s(:send, nil, :_reset_width),
          s(:self))),
      s(:def, :values,
        s(:args,
          s(:optarg, :ary,
            s(:nil))),
        s(:if,
          s(:lvar, :ary),
          s(:begin,
            s(:send,
              s(:ivar, :@lst), :delete,
              s(:int, 0),
              s(:str, "end")),
            s(:send,
              s(:ivar, :@ent_list), :clear),
            s(:block,
              s(:send,
                s(:lvar, :ary), :each),
              s(:args,
                s(:arg, :ent)),
              s(:send, nil, :add,
                s(:lvar, :ent))),
            s(:send, nil, :_reset_width),
            s(:self)),
          s(:send,
            s(:ivar, :@lst), :get,
            s(:int, 0),
            s(:str, "end")))),
      s(:def, :see,
        s(:args,
          s(:arg, :idx)),
        s(:send,
          s(:ivar, :@lst), :see,
          s(:send,
            s(:send,
              s(:ivar, :@lst), :index,
              s(:lvar, :idx)), :-,
            s(:int, 1)))),
      s(:def, :list_index,
        s(:args,
          s(:arg, :idx)),
        s(:send,
          s(:ivar, :@lst), :index,
          s(:lvar, :idx))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:begin,
      s(:lvasgn, :v,
        s(:send,
          s(:const, nil, :TkVariable), :new)),
      s(:lvasgn, :e,
        s(:send,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :RbWidget), :Combobox), :new,
            s(:hash,
              s(:pair,
                s(:sym, :height),
                s(:int, 7)),
              s(:pair,
                s(:sym, :scrollbar),
                s(:true)),
              s(:pair,
                s(:sym, :textvariable),
                s(:lvar, :v)),
              s(:pair,
                s(:sym, :arrowrelief),
                s(:sym, :flat)),
              s(:pair,
                s(:sym, :arrowborderwidth),
                s(:int, 0)),
              s(:pair,
                s(:sym, :startwait),
                s(:int, 400)),
              s(:pair,
                s(:sym, :interval),
                s(:int, 200)))), :pack)),
      s(:send,
        s(:lvar, :e), :values,
        s(:array,
          s(:str, "aa"),
          s(:str, "bb"),
          s(:str, "cc"),
          s(:str, "dd"),
          s(:str, "ee"),
          s(:str, "ff"),
          s(:str, "gg"),
          s(:str, "hh"),
          s(:str, "ii"),
          s(:str, "jj"),
          s(:str, "kk"),
          s(:str, "ll"),
          s(:str, "mm"),
          s(:str, "nn"),
          s(:str, "oo"),
          s(:str, "pp"),
          s(:str, "qq"),
          s(:str, "rr"),
          s(:str, "ss"),
          s(:str, "tt"),
          s(:str, "uu"))),
      s(:send,
        s(:lvar, :e), :value=,
        s(:str, "cc")),
      s(:send,
        s(:block,
          s(:send,
            s(:const, nil, :TkFrame), :new),
          s(:args,
            s(:arg, :f)),
          s(:begin,
            s(:lvasgn, :fnt,
              s(:send,
                s(:const, nil, :TkFont), :new,
                s(:str, "Helvetica 10"))),
            s(:send,
              s(:send,
                s(:const, nil, :TkLabel), :new,
                s(:lvar, :f),
                s(:hash,
                  s(:pair,
                    s(:sym, :font),
                    s(:lvar, :fnt)),
                  s(:pair,
                    s(:sym, :text),
                    s(:str, "TkCombobox value :")))), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :left)))),
            s(:send,
              s(:send,
                s(:const, nil, :TkLabel), :new,
                s(:lvar, :f),
                s(:hash,
                  s(:pair,
                    s(:sym, :font),
                    s(:lvar, :fnt)),
                  s(:pair,
                    s(:sym, :textvariable),
                    s(:lvar, :v)))), :pack,
              s(:hash,
                s(:pair,
                  s(:sym, :side),
                  s(:sym, :left)))))), :pack),
      s(:send,
        s(:send,
          s(:const, nil, :TkFrame), :new,
          s(:hash,
            s(:pair,
              s(:sym, :relief),
              s(:sym, :raised)),
            s(:pair,
              s(:sym, :borderwidth),
              s(:int, 2)),
            s(:pair,
              s(:sym, :height),
              s(:int, 3)))), :pack,
        s(:hash,
          s(:pair,
            s(:sym, :fill),
            s(:sym, :x)),
          s(:pair,
            s(:sym, :expand),
            s(:true)),
          s(:pair,
            s(:sym, :padx),
            s(:int, 5)),
          s(:pair,
            s(:sym, :pady),
            s(:int, 3)))),
      s(:lvasgn, :l,
        s(:send,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Tk), :RbWidget), :AutoScrollListbox), :new,
            s(:nil),
            s(:hash,
              s(:pair,
                s(:sym, :relief),
                s(:sym, :groove)),
              s(:pair,
                s(:sym, :borderwidth),
                s(:int, 4)),
              s(:pair,
                s(:sym, :height),
                s(:int, 7)),
              s(:pair,
                s(:sym, :width),
                s(:int, 20)))), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :fill),
              s(:sym, :both)),
            s(:pair,
              s(:sym, :expand),
              s(:true))))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 0),
              s(:int, 20))), :each),
        s(:args,
          s(:arg, :i)),
        s(:send,
          s(:lvar, :l), :insert,
          s(:str, "end"),
          s(:dstr,
            s(:str, "line "),
            s(:begin,
              s(:lvar, :i))))),
      s(:block,
        s(:send,
          s(:const, nil, :TkFrame), :new,
          s(:hash,
            s(:pair,
              s(:sym, :relief),
              s(:sym, :ridge)),
            s(:pair,
              s(:sym, :borderwidth),
              s(:int, 3)))),
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:self),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "ON")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :l), :scrollbar,
                      s(:true)))))), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :left)))),
          s(:send,
            s(:send,
              s(:const, nil, :TkButton), :new,
              s(:self),
              s(:hash,
                s(:pair,
                  s(:sym, :text),
                  s(:str, "OFF")),
                s(:pair,
                  s(:sym, :command),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:send,
                      s(:lvar, :l), :scrollbar,
                      s(:false)))))), :pack,
            s(:hash,
              s(:pair,
                s(:sym, :side),
                s(:sym, :right)))),
          s(:send, nil, :pack,
            s(:hash,
              s(:pair,
                s(:sym, :fill),
                s(:sym, :x)))))),
      s(:send,
        s(:const, nil, :Tk), :mainloop)), nil))
