s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:class,
    s(:const, nil, :Button_clone),
    s(:const, nil, :TkLabel),
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:ivasgn, :@command,
            s(:nil)),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :args), :[],
                s(:int, -1)), :kind_of?,
              s(:const, nil, :Hash)),
            s(:begin,
              s(:lvasgn, :keys,
                s(:send, nil, :_symbolkey2str,
                  s(:send,
                    s(:lvar, :args), :pop))),
              s(:ivasgn, :@command,
                s(:send,
                  s(:lvar, :keys), :delete,
                  s(:str, "command"))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "highlightthickness")), nil,
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "highlightthickness"),
                  s(:int, 1))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "padx")), nil,
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "padx"),
                  s(:str, "3m"))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "pady")), nil,
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "pady"),
                  s(:str, "1m"))),
              s(:if,
                s(:send,
                  s(:lvar, :keys), :key?,
                  s(:str, "relief")), nil,
                s(:send,
                  s(:lvar, :keys), :[]=,
                  s(:str, "relief"),
                  s(:str, "raised"))),
              s(:send,
                s(:lvar, :args), :push,
                s(:lvar, :keys))), nil),
          s(:super,
            s(:splat,
              s(:lvar, :args))),
          s(:ivasgn, :@press,
            s(:false)),
          s(:send,
            s(:self), :bind,
            s(:str, "Enter"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send,
                s(:self), :background,
                s(:send,
                  s(:self), :activebackground)))),
          s(:send,
            s(:self), :bind,
            s(:str, "Leave"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:begin,
                s(:ivasgn, :@press,
                  s(:false)),
                s(:send,
                  s(:self), :background,
                  s(:send,
                    s(:self), :highlightbackground)),
                s(:send,
                  s(:self), :relief,
                  s(:str, "raised"))))),
          s(:send,
            s(:self), :bind,
            s(:str, "ButtonPress-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:begin,
                s(:ivasgn, :@press,
                  s(:true)),
                s(:send,
                  s(:self), :relief,
                  s(:str, "sunken"))))),
          s(:send,
            s(:self), :bind,
            s(:str, "ButtonRelease-1"),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:begin,
                s(:send,
                  s(:self), :relief,
                  s(:str, "raised")),
                s(:if,
                  s(:and,
                    s(:ivar, :@press),
                    s(:ivar, :@command)),
                  s(:send,
                    s(:ivar, :@command), :call), nil),
                s(:ivasgn, :@press,
                  s(:false))))))),
      s(:def, :command,
        s(:args,
          s(:optarg, :cmd,
            s(:send,
              s(:const, nil, :Proc), :new))),
        s(:ivasgn, :@command,
          s(:lvar, :cmd))),
      s(:def, :invoke,
        s(:args),
        s(:if,
          s(:ivar, :@command),
          s(:send,
            s(:ivar, :@command), :call),
          s(:str, ""))))),
  s(:send,
    s(:send,
      s(:const, nil, :TkLabel), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:dstr,
            s(:str, "This is a sample of 'event binding'.\n"),
            s(:str, "The first button is a normal button widget.\n"),
            s(:str, "And the second one is a normal label widget\n"),
            s(:str, "but with some bindings like a button widget.\n"))))), :pack),
  s(:lvasgn, :lbl,
    s(:send,
      s(:send,
        s(:const, nil, :TkLabel), :new,
        s(:hash,
          s(:pair,
            s(:sym, :foreground),
            s(:str, "red")))), :pack,
      s(:hash,
        s(:pair,
          s(:sym, :pady),
          s(:int, 3))))),
  s(:lvasgn, :v,
    s(:send,
      s(:const, nil, :TkVariable), :new,
      s(:int, 0))),
  s(:send,
    s(:block,
      s(:send,
        s(:const, nil, :TkFrame), :new),
      s(:args,
        s(:arg, :f)),
      s(:begin,
        s(:send,
          s(:send,
            s(:const, nil, :TkLabel), :new,
            s(:lvar, :f),
            s(:hash,
              s(:pair,
                s(:sym, :text),
                s(:str, "click count : ")))), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :side),
              s(:sym, :left)))),
        s(:send,
          s(:send,
            s(:const, nil, :TkLabel), :new,
            s(:lvar, :f),
            s(:hash,
              s(:pair,
                s(:sym, :textvariable),
                s(:lvar, :v)))), :pack,
          s(:hash,
            s(:pair,
              s(:sym, :side),
              s(:sym, :left)))))), :pack),
  s(:block,
    s(:send,
      s(:const, nil, :TkButton), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "normal Button widget")),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:begin,
              s(:send, nil, :puts,
                s(:str, "button is clicked!!")),
              s(:send,
                s(:lvar, :lbl), :text,
                s(:str, "button is clicked!!")),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :v), :numeric), :+,
                s(:int, 1))))))),
    s(:args),
    s(:send, nil, :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :x)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:block,
    s(:send,
      s(:const, nil, :Button_clone), :new,
      s(:hash,
        s(:pair,
          s(:sym, :text),
          s(:str, "Label with Button binding")),
        s(:pair,
          s(:sym, :command),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:begin,
              s(:send, nil, :puts,
                s(:str, "label is clicked!!")),
              s(:send,
                s(:lvar, :lbl), :text,
                s(:str, "label is clicked!!")),
              s(:op_asgn,
                s(:send,
                  s(:lvar, :v), :numeric), :+,
                s(:int, 1))))))),
    s(:args),
    s(:send, nil, :pack,
      s(:hash,
        s(:pair,
          s(:sym, :fill),
          s(:sym, :x)),
        s(:pair,
          s(:sym, :expand),
          s(:true))))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
