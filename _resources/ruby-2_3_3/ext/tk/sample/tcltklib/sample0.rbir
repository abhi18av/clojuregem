s(:begin,
  s(:send, nil, :require,
    s(:str, "tcltklib")),
  s(:def, :test,
    s(:args),
    s(:begin,
      s(:lvasgn, :ip1,
        s(:send,
          s(:const, nil, :TclTkIp), :new)),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_return_value), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_eval,
            s(:str, "puts {abc}")), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_return_value), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_eval,
            s(:str, "button .lab -text exit -command \"destroy .\"")), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_return_value), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_eval,
            s(:str, "pack .lab")), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_return_value), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_eval,
            s(:str, "puts [ruby {print \"print by ruby\\n\"; \"puts by tcl/tk\"}]")), :inspect),
        s(:str, "\n")),
      s(:send, nil, :print,
        s(:send,
          s(:send,
            s(:lvar, :ip1), :_return_value), :inspect),
        s(:str, "\n")),
      s(:lvasgn, :ip2,
        s(:send,
          s(:const, nil, :TclTkIp), :new)),
      s(:send,
        s(:lvar, :ip2), :_eval,
        s(:str, "button .lab -text test -command \"puts test ; destroy .\"")),
      s(:send,
        s(:lvar, :ip2), :_eval,
        s(:str, "pack .lab")),
      s(:send,
        s(:const, nil, :TclTkLib), :mainloop))),
  s(:send, nil, :test),
  s(:send,
    s(:const, nil, :GC), :start),
  s(:send, nil, :print,
    s(:str, "exit\n")))
