s(:begin,
  s(:send, nil, :require,
    s(:str, "tcltk")),
  s(:class,
    s(:const, nil, :Test1), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :ip,
            s(:send,
              s(:const, nil, :TclTkInterpreter), :new)),
          s(:lvasgn, :c,
            s(:send,
              s(:lvar, :ip), :commands)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :append),
              s(:lvasgn, :bind),
              s(:lvasgn, :button),
              s(:lvasgn, :destroy),
              s(:lvasgn, :incr),
              s(:lvasgn, :info),
              s(:lvasgn, :label),
              s(:lvasgn, :place),
              s(:lvasgn, :set),
              s(:lvasgn, :wm)),
            s(:send,
              s(:lvar, :c), :values_at,
              s(:str, "append"),
              s(:str, "bind"),
              s(:str, "button"),
              s(:str, "destroy"),
              s(:str, "incr"),
              s(:str, "info"),
              s(:str, "label"),
              s(:str, "place"),
              s(:str, "set"),
              s(:str, "wm"))),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :info), :e,
              s(:str, "command"),
              s(:str, "r*")),
            s(:str, "\n")),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :info), :e,
              s(:str, "command r*")),
            s(:str, "\n")),
          s(:send, nil, :print,
            s(:send,
              s(:send,
                s(:lvar, :c), :[],
                s(:str, "info")), :e,
              s(:str, "command"),
              s(:str, "r*")),
            s(:str, "\n")),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :ip), :info,
              s(:str, "command"),
              s(:str, "r*")),
            s(:str, "\n")),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:str, "20"))),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :v1), :get),
            s(:str, "\n")),
          s(:send,
            s(:lvar, :v1), :set,
            s(:int, 40)),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :v1), :get),
            s(:str, "\n")),
          s(:send,
            s(:lvar, :set), :e,
            s(:lvar, :v1),
            s(:int, 30)),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :set), :e,
              s(:lvar, :v1)),
            s(:str, "\n")),
          s(:send,
            s(:lvar, :incr), :e,
            s(:lvar, :v1)),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :v1), :get),
            s(:str, "\n")),
          s(:send,
            s(:lvar, :append), :e,
            s(:lvar, :v1),
            s(:int, 10)),
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :v1), :get),
            s(:str, "\n")),
          s(:lvasgn, :root,
            s(:send,
              s(:lvar, :ip), :rootwidget)),
          s(:send,
            s(:lvar, :root), :e,
            s(:str, "configure -height 300 -width 300")),
          s(:send,
            s(:lvar, :wm), :e,
            s(:str, "title"),
            s(:lvar, :root),
            s(:gvar, :$0)),
          s(:lvasgn, :l1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :root),
              s(:lvar, :label),
              s(:str, "-text {type `x' to print}"))),
          s(:send,
            s(:lvar, :place), :e,
            s(:lvar, :l1),
            s(:str, "-x 0 -rely 0.0 -relwidth 1 -relheight 0.1")),
          s(:lvasgn, :l2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :root),
              s(:str, "label"))),
          s(:send,
            s(:lvar, :l2), :e,
            s(:str, "configure -text {type `q' to exit}")),
          s(:send,
            s(:lvar, :place), :e,
            s(:lvar, :l2),
            s(:str, "-x 0 -rely 0.1 -relwidth 1 -relheight 0.1")),
          s(:lvasgn, :c1,
            s(:send,
              s(:const, nil, :TclTkCallback), :new,
              s(:lvar, :ip),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :sample,
                  s(:lvar, :ip),
                  s(:lvar, :root))))),
          s(:lvasgn, :b1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :root),
              s(:lvar, :button),
              s(:str, "-text sample -command"),
              s(:lvar, :c1))),
          s(:send,
            s(:lvar, :place), :e,
            s(:lvar, :b1),
            s(:str, "-x 0 -rely 0.2 -relwidth 1 -relheight 0.1")),
          s(:lvasgn, :c2,
            s(:send,
              s(:const, nil, :TclTkCallback), :new,
              s(:lvar, :ip),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send,
                  s(:lvar, :destroy), :e,
                  s(:lvar, :root))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :root),
              s(:lvar, :button),
              s(:str, "-text exit -command"),
              s(:lvar, :c2))),
          s(:send,
            s(:lvar, :place), :e,
            s(:lvar, :b2),
            s(:str, "-x 0 -rely 0.3 -relwidth 1 -relheight 0.1")),
          s(:lvasgn, :c3,
            s(:send,
              s(:const, nil, :TclTkCallback), :new,
              s(:lvar, :ip),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:begin,
                  s(:send, nil, :print,
                    s(:str, "q pressed\n")),
                  s(:send,
                    s(:lvar, :destroy), :e,
                    s(:lvar, :root)))))),
          s(:send,
            s(:lvar, :bind), :e,
            s(:lvar, :root),
            s(:str, "q"),
            s(:lvar, :c3)),
          s(:lvasgn, :c4,
            s(:send,
              s(:const, nil, :TclTkCallback), :new,
              s(:lvar, :ip),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :i)),
                s(:send, nil, :print,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, " pressed\n")))),
              s(:str, "%A"))),
          s(:send,
            s(:lvar, :bind), :e,
            s(:lvar, :root),
            s(:str, "x"),
            s(:lvar, :c4)),
          s(:lvasgn, :cb,
            s(:array,
              s(:lvar, :c1),
              s(:lvar, :c2),
              s(:lvar, :c3),
              s(:lvar, :c4))),
          s(:lvasgn, :c5,
            s(:send,
              s(:const, nil, :TclTkCallback), :new,
              s(:lvar, :ip),
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :w)),
                s(:send,
                  s(:const, nil, :TclTk), :dcb,
                  s(:lvar, :cb),
                  s(:lvar, :root),
                  s(:lvar, :w))),
              s(:str, "%W"))),
          s(:send,
            s(:lvar, :bind), :e,
            s(:lvar, :root),
            s(:str, "<Destroy>"),
            s(:lvar, :c5)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvar, :c5)),
          s(:lvasgn, :i1,
            s(:send,
              s(:const, nil, :TclTkImage), :new,
              s(:lvar, :ip),
              s(:str, "photo"),
              s(:str, "-file maru.gif"))),
          s(:lvasgn, :l3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :root),
              s(:lvar, :label),
              s(:str, "-relief raised -image"),
              s(:lvar, :i1))),
          s(:send,
            s(:lvar, :place), :e,
            s(:lvar, :l3),
            s(:str, "-x 0 -rely 0.4 -relwidth 0.2 -relheight 0.2")),
          s(:lvasgn, :i2,
            s(:send,
              s(:const, nil, :TclTkImage), :new,
              s(:lvar, :ip),
              s(:str, "photo"))),
          s(:send,
            s(:lvar, :i2), :e,
            s(:str, "copy"),
            s(:lvar, :i1)),
          s(:send,
            s(:lvar, :i2), :e,
            s(:str, "configure -gamma 0.5")),
          s(:lvasgn, :l4,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :root),
              s(:lvar, :label),
              s(:str, "-relief raised -image"),
              s(:lvar, :i2))),
          s(:send,
            s(:lvar, :place), :e,
            s(:lvar, :l4),
            s(:str, "-relx 0.2 -rely 0.4 -relwidth 0.2 -relheight 0.2")))),
      s(:def, :sample,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :bind),
              s(:lvasgn, :button),
              s(:lvasgn, :destroy),
              s(:lvasgn, :grid),
              s(:lvasgn, :toplevel),
              s(:lvasgn, :wm)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "bind"),
              s(:str, "button"),
              s(:str, "destroy"),
              s(:str, "grid"),
              s(:str, "toplevel"),
              s(:str, "wm"))),
          s(:lvasgn, :t1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:lvar, :toplevel))),
          s(:send,
            s(:lvar, :wm), :e,
            s(:str, "title"),
            s(:lvar, :t1),
            s(:str, "sample")),
          s(:lvasgn, :cb,
            s(:array)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :w)),
                  s(:send,
                    s(:const, nil, :TclTk), :dcb,
                    s(:lvar, :cb),
                    s(:lvar, :t1),
                    s(:lvar, :w))),
                s(:str, "%W")))),
          s(:send,
            s(:lvar, :bind), :e,
            s(:lvar, :t1),
            s(:str, "<Destroy>"),
            s(:lvar, :c)),
          s(:lvasgn, :wid,
            s(:array)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :destroy), :e,
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text close -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_label,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text label -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_button,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text button -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_checkbutton,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text checkbutton -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_radiobutton,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text radiobutton -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_scale,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text scale -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_entry,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text entry -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_text,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text text -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_raise,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text raise/lower -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_modal,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text message/modal -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_menu,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text menu -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_listbox,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text listbox/scrollbar"),
              s(:str, "-command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :test_canvas,
                    s(:lvar, :ip),
                    s(:lvar, :t1)))))),
          s(:send,
            s(:lvar, :wid), :push,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text canvas -command"),
              s(:lvar, :c))),
          s(:lvasgn, :ro,
            s(:lvasgn, :co,
              s(:int, 0))),
          s(:block,
            s(:send,
              s(:lvar, :wid), :each),
            s(:args,
              s(:arg, :w)),
            s(:begin,
              s(:send,
                s(:lvar, :grid), :e,
                s(:lvar, :w),
                s(:str, "-row"),
                s(:lvar, :ro),
                s(:str, "-column"),
                s(:lvar, :co),
                s(:str, "-sticky news")),
              s(:op_asgn,
                s(:lvasgn, :ro), :+,
                s(:int, 1)),
              s(:if,
                s(:send,
                  s(:lvar, :ro), :==,
                  s(:int, 7)),
                s(:begin,
                  s(:lvasgn, :ro,
                    s(:int, 0)),
                  s(:op_asgn,
                    s(:lvasgn, :co), :+,
                    s(:int, 1))), nil))))),
      s(:def, :inittoplevel,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent),
          s(:arg, :title)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :bind),
              s(:lvasgn, :button),
              s(:lvasgn, :destroy),
              s(:lvasgn, :toplevel),
              s(:lvasgn, :wm)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "bind"),
              s(:str, "button"),
              s(:str, "destroy"),
              s(:str, "toplevel"),
              s(:str, "wm"))),
          s(:lvasgn, :t1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:lvar, :toplevel))),
          s(:send,
            s(:lvar, :wm), :e,
            s(:str, "title"),
            s(:lvar, :t1),
            s(:lvar, :title)),
          s(:lvasgn, :cb,
            s(:array)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :w)),
                  s(:send,
                    s(:const, nil, :TclTk), :dcb,
                    s(:lvar, :cb),
                    s(:lvar, :t1),
                    s(:lvar, :w))),
                s(:str, "%W")))),
          s(:send,
            s(:lvar, :bind), :e,
            s(:lvar, :t1),
            s(:str, "<Destroy>"),
            s(:lvar, :c)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :destroy), :e,
                    s(:lvar, :t1)))))),
          s(:lvasgn, :b1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text close -command"),
              s(:lvar, :c))),
          s(:return,
            s(:lvar, :t1),
            s(:lvar, :b1),
            s(:lvar, :cb)))),
      s(:def, :test_label,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :button),
              s(:lvasgn, :global),
              s(:lvasgn, :label),
              s(:lvasgn, :pack)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "button"),
              s(:str, "global"),
              s(:str, "label"),
              s(:str, "pack"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "label"))),
          s(:lvasgn, :l1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-text {default(flat)}"))),
          s(:lvasgn, :l2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-text raised -relief raised"))),
          s(:lvasgn, :l3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-text sunken -relief sunken"))),
          s(:lvasgn, :l4,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-text groove -relief groove"))),
          s(:lvasgn, :l5,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-text ridge -relief ridge"))),
          s(:lvasgn, :l6,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-bitmap error"))),
          s(:lvasgn, :l7,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-bitmap questhead"))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :l1),
            s(:lvar, :l2),
            s(:lvar, :l3),
            s(:lvar, :l4),
            s(:lvar, :l5),
            s(:lvar, :l6),
            s(:lvar, :l7),
            s(:str, "-pady 3")),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :v1), :set,
            s(:int, 100)),
          s(:lvasgn, :l6,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-textvariable"),
              s(:lvar, :v1))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :global), :e,
                      s(:lvar, :v1)),
                    s(:send,
                      s(:lvar, :v1), :set,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :v1), :get), :to_i), :+,
                        s(:int, 10)))))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text +10 -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :global), :e,
                      s(:lvar, :v1)),
                    s(:send,
                      s(:lvar, :v1), :set,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :v1), :get), :to_i), :-,
                        s(:int, 10)))))))),
          s(:lvasgn, :b3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text -10 -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :l6),
            s(:lvar, :b2),
            s(:lvar, :b3)))),
      s(:def, :test_button,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :button),
              s(:lvasgn, :pack)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "button"),
              s(:str, "pack"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "button"))),
          s(:lvasgn, :b3,
            s(:lvasgn, :b4,
              s(:nil))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :b3), :e,
                      s(:str, "flash")),
                    s(:send,
                      s(:lvar, :b4), :e,
                      s(:str, "flash"))))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text flash -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :b2), :e,
                    s(:str, "configure -state normal")))))),
          s(:lvasgn, :b3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text normal -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :b2), :e,
                    s(:str, "configure -state disabled")))))),
          s(:lvasgn, :b4,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text disable -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :b2),
            s(:lvar, :b3),
            s(:lvar, :b4)))),
      s(:def, :test_checkbutton,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :checkbutton),
              s(:lvasgn, :global),
              s(:lvasgn, :pack)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "checkbutton"),
              s(:str, "global"),
              s(:str, "pack"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "checkbutton"))),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v1)),
          s(:lvasgn, :ch1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :checkbutton),
              s(:str, "-onvalue on -offvalue off"),
              s(:str, "-textvariable"),
              s(:lvar, :v1),
              s(:str, "-variable"),
              s(:lvar, :v1))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :ch1)))),
      s(:def, :test_radiobutton,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :global),
              s(:lvasgn, :label),
              s(:lvasgn, :pack),
              s(:lvasgn, :radiobutton)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "global"),
              s(:str, "label"),
              s(:str, "pack"),
              s(:str, "radiobutton"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "radiobutton"))),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :v1), :set,
            s(:str, "{}")),
          s(:lvasgn, :l1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :label),
              s(:str, "-textvariable"),
              s(:lvar, :v1))),
          s(:lvasgn, :ra1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :radiobutton),
              s(:str, "-text radio1 -value r1 -variable"),
              s(:lvar, :v1))),
          s(:lvasgn, :ra2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :radiobutton),
              s(:str, "-text radio2 -value r2 -variable"),
              s(:lvar, :v1))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :global), :e,
                      s(:lvar, :v1)),
                    s(:send,
                      s(:lvar, :v1), :set,
                      s(:str, "{}"))))))),
          s(:lvasgn, :ra3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :radiobutton),
              s(:str, "-text clear -value r3 -variable"),
              s(:lvar, :v1),
              s(:str, "-command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :l1),
            s(:lvar, :ra1),
            s(:lvar, :ra2),
            s(:lvar, :ra3)))),
      s(:def, :test_scale,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :global),
              s(:lvasgn, :pack),
              s(:lvasgn, :scale)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "global"),
              s(:str, "pack"),
              s(:str, "scale"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "scale"))),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :v1), :set,
            s(:int, 219)),
          s(:lvasgn, :sca1,
            s(:nil)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :global), :e,
                      s(:lvar, :v1)),
                    s(:lvasgn, :v,
                      s(:send,
                        s(:lvar, :v1), :get)),
                    s(:send,
                      s(:lvar, :sca1), :e,
                      s(:str, "configure -background"),
                      s(:send, nil, :format,
                        s(:str, "#%02x%02x%02x"),
                        s(:lvar, :v),
                        s(:lvar, :v),
                        s(:lvar, :v)))))))),
          s(:lvasgn, :sca1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :scale),
              s(:str, "-label scale -orient h -from 0 -to 255 -variable"),
              s(:lvar, :v1),
              s(:str, "-command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :sca1)))),
      s(:def, :test_entry,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :button),
              s(:lvasgn, :entry),
              s(:lvasgn, :global),
              s(:lvasgn, :pack)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "button"),
              s(:str, "entry"),
              s(:str, "global"),
              s(:str, "pack"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "entry"))),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :v1), :set,
            s(:str, "{}")),
          s(:lvasgn, :en1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :entry),
              s(:str, "-textvariable"),
              s(:lvar, :v1))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :global), :e,
                      s(:lvar, :v1)),
                    s(:send, nil, :print,
                      s(:send,
                        s(:lvar, :v1), :get),
                      s(:str, "\n")),
                    s(:send,
                      s(:lvar, :v1), :set,
                      s(:str, "{}"))))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text print -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :en1),
            s(:lvar, :b2)))),
      s(:def, :test_text,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :button),
              s(:lvasgn, :pack),
              s(:lvasgn, :text)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "button"),
              s(:str, "pack"),
              s(:str, "text"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "text"))),
          s(:lvasgn, :te1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :text))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send, nil, :print,
                      s(:send,
                        s(:lvar, :te1), :e,
                        s(:str, "get 1.0 end"))),
                    s(:send,
                      s(:lvar, :te1), :e,
                      s(:str, "delete 1.0 end"))))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text print -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :te1),
            s(:lvar, :b2)))),
      s(:def, :test_raise,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :button),
              s(:lvasgn, :frame),
              s(:lvasgn, :lower),
              s(:lvasgn, :pack),
              s(:lvasgn, :raise)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "button"),
              s(:str, "frame"),
              s(:str, "lower"),
              s(:str, "pack"),
              s(:str, "raise"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "raise/lower"))),
          s(:lvasgn, :f1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :frame))),
          s(:lvasgn, :b2,
            s(:nil)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :raise), :e,
                    s(:lvar, :f1),
                    s(:lvar, :b2)))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text raise -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:lvar, :lower), :e,
                    s(:lvar, :f1),
                    s(:lvar, :b2)))))),
          s(:lvasgn, :b3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text lower -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :lower), :e,
            s(:lvar, :f1),
            s(:lvar, :b3)),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b2),
            s(:lvar, :b3),
            s(:str, "-in"),
            s(:lvar, :f1)),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :f1)))),
      s(:def, :test_modal,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :button),
              s(:lvasgn, :frame),
              s(:lvasgn, :message),
              s(:lvasgn, :pack),
              s(:lvasgn, :tk_chooseColor),
              s(:lvasgn, :tk_getOpenFile),
              s(:lvasgn, :tk_messageBox)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "button"),
              s(:str, "frame"),
              s(:str, "message"),
              s(:str, "pack"),
              s(:str, "tk_chooseColor"),
              s(:str, "tk_getOpenFile"),
              s(:str, "tk_messageBox"))),
          s(:lvasgn, :tk_dialog,
            s(:send,
              s(:const, nil, :TclTkLibCommand), :new,
              s(:lvar, :ip),
              s(:str, "tk_dialog"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "message/modal"))),
          s(:lvasgn, :mes,
            s(:str, "これは message ウィジェットのテストです.")),
          s(:op_asgn,
            s(:lvasgn, :mes), :+,
            s(:str, "以下は modal なウィジェットのテストです.")),
          s(:lvasgn, :me1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :message),
              s(:dstr,
                s(:str, "-text {"),
                s(:begin,
                  s(:lvar, :mes)),
                s(:str, "}")))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :print,
                    s(:send,
                      s(:lvar, :tk_messageBox), :e,
                      s(:str, "-type yesnocancel -message messageBox"),
                      s(:str, "-icon error -default cancel -title messageBox")),
                    s(:str, "\n")))))),
          s(:lvasgn, :b2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text messageBox -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :print,
                    s(:send,
                      s(:lvar, :tk_dialog), :e,
                      s(:send,
                        s(:const, nil, :TclTkWidget), :new,
                        s(:lvar, :ip),
                        s(:lvar, :t1),
                        s(:lvar, :frame)),
                      s(:str, "dialog dialog error 2 yes no cancel")),
                    s(:str, "\n")))))),
          s(:lvasgn, :b3,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text dialog -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :print,
                    s(:send,
                      s(:lvar, :tk_chooseColor), :e,
                      s(:str, "-title chooseColor")),
                    s(:str, "\n")))))),
          s(:lvasgn, :b4,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text chooseColor -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :print,
                    s(:send,
                      s(:lvar, :tk_getOpenFile), :e,
                      s(:str, "-defaultextension .rb"),
                      s(:str, "-filetypes {{{Ruby Script} {.rb}} {{All Files} {*}}}"),
                      s(:str, "-title getOpenFile")),
                    s(:str, "\n")))))),
          s(:lvasgn, :b5,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :button),
              s(:str, "-text getOpenFile -command"),
              s(:lvar, :c))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :me1),
            s(:lvar, :b2),
            s(:lvar, :b3),
            s(:lvar, :b4),
            s(:lvar, :b5)))),
      s(:def, :test_menu,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :global),
              s(:lvasgn, :menu),
              s(:lvasgn, :menubutton),
              s(:lvasgn, :pack)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "global"),
              s(:str, "menu"),
              s(:str, "menubutton"),
              s(:str, "pack"))),
          s(:lvasgn, :tk_optionMenu,
            s(:send,
              s(:const, nil, :TclTkLibCommand), :new,
              s(:lvar, :ip),
              s(:str, "tk_optionMenu"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "menu"))),
          s(:lvasgn, :mb1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :menubutton),
              s(:str, "-text menu"))),
          s(:lvasgn, :me1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :mb1),
              s(:lvar, :menu))),
          s(:send,
            s(:lvar, :mb1), :e,
            s(:str, "configure -menu"),
            s(:lvar, :me1)),
          s(:lvasgn, :me11,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :me1),
              s(:lvar, :menu))),
          s(:lvasgn, :v1,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :v1), :set,
            s(:str, "r1")),
          s(:send,
            s(:lvar, :me11), :e,
            s(:str, "add radiobutton -label radio1 -value r1 -variable"),
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :me11), :e,
            s(:str, "add radiobutton -label radio2 -value r2 -variable"),
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :me11), :e,
            s(:str, "add radiobutton -label radio3 -value r3 -variable"),
            s(:lvar, :v1)),
          s(:send,
            s(:lvar, :me1), :e,
            s(:str, "add cascade -label cascade -menu"),
            s(:lvar, :me11)),
          s(:lvasgn, :v2,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v2)),
          s(:send,
            s(:lvar, :v2), :set,
            s(:str, "none")),
          s(:send,
            s(:lvar, :me1), :e,
            s(:str, "add checkbutton -label check -variable"),
            s(:lvar, :v2)),
          s(:send,
            s(:lvar, :me1), :e,
            s(:str, "add separator")),
          s(:lvasgn, :v3,
            s(:nil)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :global), :e,
                      s(:lvar, :v1),
                      s(:lvar, :v2),
                      s(:lvar, :v3)),
                    s(:send, nil, :print,
                      s(:str, "v1: "),
                      s(:send,
                        s(:lvar, :v1), :get),
                      s(:str, ", v2: "),
                      s(:send,
                        s(:lvar, :v2), :get),
                      s(:str, ", v3: "),
                      s(:send,
                        s(:lvar, :v3), :get),
                      s(:str, "\n"))))))),
          s(:send,
            s(:lvar, :me1), :e,
            s(:str, "add command -label print -command"),
            s(:lvar, :c)),
          s(:lvasgn, :v3,
            s(:send,
              s(:const, nil, :TclTkVariable), :new,
              s(:lvar, :ip),
              s(:nil))),
          s(:send,
            s(:lvar, :global), :e,
            s(:lvar, :v3)),
          s(:send,
            s(:lvar, :v3), :set,
            s(:str, "opt2")),
          s(:lvasgn, :om1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :tk_optionMenu),
              s(:lvar, :v3),
              s(:str, "opt1 opt2 opt3 opt4"))),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :mb1),
            s(:lvar, :om1),
            s(:str, "-side left")))),
      s(:def, :test_listbox,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :clipboard),
              s(:lvasgn, :frame),
              s(:lvasgn, :grid),
              s(:lvasgn, :listbox),
              s(:lvasgn, :lower),
              s(:lvasgn, :menu),
              s(:lvasgn, :menubutton),
              s(:lvasgn, :pack),
              s(:lvasgn, :scrollbar),
              s(:lvasgn, :selection)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "clipboard"),
              s(:str, "frame"),
              s(:str, "grid"),
              s(:str, "listbox"),
              s(:str, "lower"),
              s(:str, "menu"),
              s(:str, "menubutton"),
              s(:str, "pack"),
              s(:str, "scrollbar"),
              s(:str, "selection"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "listbox"))),
          s(:lvasgn, :f1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :frame))),
          s(:lvasgn, :li1,
            s(:lvasgn, :sc1,
              s(:lvasgn, :sc2,
                s(:nil)))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c1,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :li1), :e,
                    s(:str, "xview"),
                    s(:lvar, :i)))))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c2,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :li1), :e,
                    s(:str, "yview"),
                    s(:lvar, :i)))))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c3,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :sc1), :e,
                    s(:str, "set"),
                    s(:lvar, :i)))))),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c4,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :sc2), :e,
                    s(:str, "set"),
                    s(:lvar, :i)))))),
          s(:lvasgn, :li1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :f1),
              s(:lvar, :listbox),
              s(:str, "-xscrollcommand"),
              s(:lvar, :c3),
              s(:str, "-yscrollcommand"),
              s(:lvar, :c4),
              s(:str, "-selectmode extended -exportselection true"))),
          s(:for,
            s(:lvasgn, :i),
            s(:irange,
              s(:int, 1),
              s(:int, 20)),
            s(:send,
              s(:lvar, :li1), :e,
              s(:dstr,
                s(:str, "insert end {line "),
                s(:begin,
                  s(:lvar, :i)),
                s(:str, " line "),
                s(:begin,
                  s(:lvar, :i)),
                s(:str, " line "),
                s(:begin,
                  s(:lvar, :i)),
                s(:str, " line "),
                s(:begin,
                  s(:lvar, :i)),
                s(:str, " line "),
                s(:begin,
                  s(:lvar, :i)),
                s(:str, "}")))),
          s(:lvasgn, :sc1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :f1),
              s(:lvar, :scrollbar),
              s(:str, "-orient horizontal -command"),
              s(:lvar, :c1))),
          s(:lvasgn, :sc2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :f1),
              s(:lvar, :scrollbar),
              s(:str, "-orient vertical -command"),
              s(:lvar, :c2))),
          s(:lvasgn, :mb1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :menubutton),
              s(:str, "-text edit"))),
          s(:lvasgn, :me1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :mb1),
              s(:lvar, :menu))),
          s(:send,
            s(:lvar, :mb1), :e,
            s(:str, "configure -menu"),
            s(:lvar, :me1)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :clipboard), :e,
                      s(:str, "clear")),
                    s(:send,
                      s(:lvar, :clipboard), :e,
                      s(:dstr,
                        s(:str, "append {"),
                        s(:begin,
                          s(:send,
                            s(:lvar, :selection), :e,
                            s(:str, "get"))),
                        s(:str, "}")))))))),
          s(:send,
            s(:lvar, :me1), :e,
            s(:str, "add command -label {selection -> clipboard} -command"),
            s(:lvar, :c)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :li1), :e,
                      s(:str, "delete 0 end")),
                    s(:block,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :selection), :e,
                            s(:str, "get -selection CLIPBOARD")), :split,
                          s(:regexp,
                            s(:str, "\\n"),
                            s(:regopt))), :each),
                      s(:args,
                        s(:arg, :line)),
                      s(:send,
                        s(:lvar, :li1), :e,
                        s(:dstr,
                          s(:str, "insert end {"),
                          s(:begin,
                            s(:lvar, :line)),
                          s(:str, "}"))))))))),
          s(:send,
            s(:lvar, :me1), :e,
            s(:str, "add command -label {clipboard -> listbox} -command"),
            s(:lvar, :c)),
          s(:send,
            s(:lvar, :grid), :e,
            s(:lvar, :li1),
            s(:str, "-row 0 -column 0 -sticky news")),
          s(:send,
            s(:lvar, :grid), :e,
            s(:lvar, :sc1),
            s(:str, "-row 1 -column 0 -sticky ew")),
          s(:send,
            s(:lvar, :grid), :e,
            s(:lvar, :sc2),
            s(:str, "-row 0 -column 1 -sticky ns")),
          s(:send,
            s(:lvar, :grid), :e,
            s(:str, "rowconfigure"),
            s(:lvar, :f1),
            s(:str, "0 -weight 100")),
          s(:send,
            s(:lvar, :grid), :e,
            s(:str, "columnconfigure"),
            s(:lvar, :f1),
            s(:str, "0 -weight 100")),
          s(:lvasgn, :f2,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :frame))),
          s(:send,
            s(:lvar, :lower), :e,
            s(:lvar, :f2),
            s(:lvar, :b1)),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :b1),
            s(:lvar, :mb1),
            s(:str, "-in"),
            s(:lvar, :f2),
            s(:str, "-side left")),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :f2),
            s(:lvar, :f1)))),
      s(:def, :test_canvas,
        s(:args,
          s(:arg, :ip),
          s(:arg, :parent)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :canvas),
              s(:lvasgn, :lower),
              s(:lvasgn, :pack)),
            s(:send,
              s(:send,
                s(:lvar, :ip), :commands), :values_at,
              s(:str, "canvas"),
              s(:str, "lower"),
              s(:str, "pack"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :t1),
              s(:lvasgn, :b1),
              s(:lvasgn, :cb)),
            s(:send, nil, :inittoplevel,
              s(:lvar, :ip),
              s(:lvar, :parent),
              s(:str, "canvas"))),
          s(:lvasgn, :ca1,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:lvar, :ip),
              s(:lvar, :t1),
              s(:lvar, :canvas),
              s(:str, "-width 400 -height 300"))),
          s(:send,
            s(:lvar, :lower), :e,
            s(:lvar, :ca1),
            s(:lvar, :b1)),
          s(:lvasgn, :idr,
            s(:send,
              s(:lvar, :ca1), :e,
              s(:str, "create rectangle 10 10 20 20"))),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create oval 60 10 100 50")),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create polygon 110 10 110 30 140 10")),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create line 150 10 150 30 190 10")),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create arc 200 10 250 50 -start 0 -extent 90 -style pieslice")),
          s(:lvasgn, :i1,
            s(:send,
              s(:const, nil, :TclTkImage), :new,
              s(:lvar, :ip),
              s(:str, "photo"),
              s(:str, "-file maru.gif"))),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create image 100 100 -image"),
            s(:lvar, :i1)),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create bitmap 260 50 -bitmap questhead")),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create text 320 50 -text {drag rectangle}")),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "create window 200 200 -window"),
            s(:lvar, :b1)),
          s(:send,
            s(:lvar, :cb), :push,
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:lvar, :ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args,
                    s(:arg, :i)),
                  s(:begin,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :x),
                        s(:lvasgn, :y)),
                      s(:send,
                        s(:lvar, :i), :split,
                        s(:regexp,
                          s(:str, " "),
                          s(:regopt)))),
                    s(:lvasgn, :x,
                      s(:send,
                        s(:lvar, :x), :to_f)),
                    s(:lvasgn, :y,
                      s(:send,
                        s(:lvar, :y), :to_f)),
                    s(:send,
                      s(:lvar, :ca1), :e,
                      s(:dstr,
                        s(:str, "coords current "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :x), :-,
                            s(:int, 5))),
                        s(:str, " "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :y), :-,
                            s(:int, 5))),
                        s(:str, " "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :x), :+,
                            s(:int, 5))),
                        s(:str, " "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :y), :+,
                            s(:int, 5))))))),
                s(:str, "%x %y")))),
          s(:send,
            s(:lvar, :ca1), :e,
            s(:str, "bind"),
            s(:lvar, :idr),
            s(:str, "<B1-Motion>"),
            s(:lvar, :c)),
          s(:send,
            s(:lvar, :pack), :e,
            s(:lvar, :ca1)))))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :ARGV), :size), :==,
      s(:int, 0)),
    s(:begin,
      s(:send, nil, :print,
        s(:dstr,
          s(:begin,
            s(:gvar, :$0)),
          s(:str, " n で, n 個のインタプリタを起動します.\n"))),
      s(:lvasgn, :n,
        s(:int, 1))),
    s(:lvasgn, :n,
      s(:send,
        s(:send,
          s(:const, nil, :ARGV), :[],
          s(:int, 0)), :to_i))),
  s(:send, nil, :print,
    s(:str, "start\n")),
  s(:lvasgn, :ip,
    s(:array)),
  s(:for,
    s(:lvasgn, :i),
    s(:irange,
      s(:int, 1),
      s(:lvar, :n)),
    s(:send,
      s(:lvar, :ip), :push,
      s(:send,
        s(:const, nil, :Test1), :new))),
  s(:send,
    s(:const, nil, :TclTk), :mainloop),
  s(:send, nil, :print,
    s(:str, "exit from mainloop\n")),
  s(:lvasgn, :ip,
    s(:array)),
  s(:if,
    s(:gvar, :$DEBUG),
    s(:send, nil, :print,
      s(:str, "GC.start\n")), nil),
  s(:if,
    s(:gvar, :$DEBUG),
    s(:send,
      s(:const, nil, :GC), :start), nil),
  s(:send, nil, :print,
    s(:str, "end\n")),
  s(:send, nil, :exit))
