s(:begin,
  s(:send, nil, :require,
    s(:str, "observer")),
  s(:send, nil, :require,
    s(:str, "tcltk")),
  s(:gvasgn, :$ip,
    s(:send,
      s(:const, nil, :TclTkInterpreter), :new)),
  s(:gvasgn, :$root,
    s(:send,
      s(:gvar, :$ip), :rootwidget)),
  s(:masgn,
    s(:mlhs,
      s(:gvasgn, :$button),
      s(:gvasgn, :$canvas),
      s(:gvasgn, :$checkbutton),
      s(:gvasgn, :$frame),
      s(:gvasgn, :$label),
      s(:gvasgn, :$pack),
      s(:gvasgn, :$update),
      s(:gvasgn, :$wm)),
    s(:send,
      s(:send,
        s(:gvar, :$ip), :commands), :values_at,
      s(:str, "button"),
      s(:str, "canvas"),
      s(:str, "checkbutton"),
      s(:str, "frame"),
      s(:str, "label"),
      s(:str, "pack"),
      s(:str, "update"),
      s(:str, "wm"))),
  s(:class,
    s(:const, nil, :Othello), nil,
    s(:begin,
      s(:casgn, nil, :EMPTY,
        s(:int, 0)),
      s(:casgn, nil, :BLACK,
        s(:int, 1)),
      s(:casgn, nil, :WHITE,
        s(:send,
          s(:const, nil, :BLACK), :-@)),
      s(:send, nil, :attr,
        s(:sym, :in_com_turn)),
      s(:send, nil, :attr,
        s(:sym, :game_over)),
      s(:class,
        s(:const, nil, :Board), nil,
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :Observable)),
          s(:casgn, nil, :DIRECTIONS,
            s(:array,
              s(:array,
                s(:int, -1),
                s(:int, -1)),
              s(:array,
                s(:int, -1),
                s(:int, 0)),
              s(:array,
                s(:int, -1),
                s(:int, 1)),
              s(:array,
                s(:int, 0),
                s(:int, -1)),
              s(:array,
                s(:int, 0),
                s(:int, 1)),
              s(:array,
                s(:int, 1),
                s(:int, -1)),
              s(:array,
                s(:int, 1),
                s(:int, 0)),
              s(:array,
                s(:int, 1),
                s(:int, 1)))),
          s(:send, nil, :attr_accessor,
            s(:sym, :com_disk)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :othello)),
            s(:begin,
              s(:ivasgn, :@othello,
                s(:lvar, :othello)),
              s(:send, nil, :reset))),
          s(:def, :notify_observers,
            s(:args,
              s(:restarg, :arg)),
            s(:if,
              s(:send,
                s(:ivar, :@observer_peers), :!=,
                s(:nil)),
              s(:super,
                s(:splat,
                  s(:lvar, :arg))), nil)),
          s(:def, :reset,
            s(:args),
            s(:begin,
              s(:ivasgn, :@data,
                s(:array,
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :WHITE),
                    s(:const, nil, :BLACK),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :BLACK),
                    s(:const, nil, :WHITE),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)),
                  s(:array,
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY),
                    s(:const, nil, :EMPTY)))),
              s(:send, nil, :changed),
              s(:send, nil, :notify_observers))),
          s(:def, :man_disk,
            s(:args),
            s(:return,
              s(:send,
                s(:ivar, :@com_disk), :-@))),
          s(:def, :other_disk,
            s(:args,
              s(:arg, :disk)),
            s(:return,
              s(:send,
                s(:lvar, :disk), :-@))),
          s(:def, :get_disk,
            s(:args,
              s(:arg, :row),
              s(:arg, :col)),
            s(:return,
              s(:send,
                s(:send,
                  s(:ivar, :@data), :[],
                  s(:lvar, :row)), :[],
                s(:lvar, :col)))),
          s(:def, :reverse_to,
            s(:args,
              s(:arg, :row),
              s(:arg, :col),
              s(:arg, :my_disk),
              s(:arg, :dir_y),
              s(:arg, :dir_x)),
            s(:begin,
              s(:lvasgn, :y,
                s(:lvar, :row)),
              s(:lvasgn, :x,
                s(:lvar, :col)),
              s(:until_post,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@data), :[],
                      s(:lvar, :y)), :[],
                    s(:lvar, :x)), :==,
                  s(:lvar, :my_disk)),
                s(:kwbegin,
                  s(:op_asgn,
                    s(:lvasgn, :y), :+,
                    s(:lvar, :dir_y)),
                  s(:op_asgn,
                    s(:lvasgn, :x), :+,
                    s(:lvar, :dir_x)),
                  s(:if,
                    s(:or,
                      s(:or,
                        s(:or,
                          s(:or,
                            s(:send,
                              s(:lvar, :y), :<,
                              s(:int, 0)),
                            s(:send,
                              s(:lvar, :x), :<,
                              s(:int, 0))),
                          s(:send,
                            s(:lvar, :y), :>,
                            s(:int, 7))),
                        s(:send,
                          s(:lvar, :x), :>,
                          s(:int, 7))),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@data), :[],
                            s(:lvar, :y)), :[],
                          s(:lvar, :x)), :==,
                        s(:const, nil, :EMPTY))),
                    s(:return), nil))),
              s(:until_post,
                s(:and,
                  s(:send,
                    s(:lvar, :y), :==,
                    s(:lvar, :row)),
                  s(:send,
                    s(:lvar, :x), :==,
                    s(:lvar, :col))),
                s(:kwbegin,
                  s(:send,
                    s(:send,
                      s(:ivar, :@data), :[],
                      s(:lvar, :y)), :[]=,
                    s(:lvar, :x),
                    s(:lvar, :my_disk)),
                  s(:send, nil, :changed),
                  s(:send, nil, :notify_observers,
                    s(:lvar, :y),
                    s(:lvar, :x)),
                  s(:op_asgn,
                    s(:lvasgn, :y), :-,
                    s(:lvar, :dir_y)),
                  s(:op_asgn,
                    s(:lvasgn, :x), :-,
                    s(:lvar, :dir_x)))))),
          s(:def, :put_disk,
            s(:args,
              s(:arg, :row),
              s(:arg, :col),
              s(:arg, :disk)),
            s(:begin,
              s(:send,
                s(:send,
                  s(:ivar, :@data), :[],
                  s(:lvar, :row)), :[]=,
                s(:lvar, :col),
                s(:lvar, :disk)),
              s(:send, nil, :changed),
              s(:send, nil, :notify_observers,
                s(:lvar, :row),
                s(:lvar, :col)),
              s(:block,
                s(:send,
                  s(:const, nil, :DIRECTIONS), :each),
                s(:args,
                  s(:arg, :dir)),
                s(:send, nil, :reverse_to,
                  s(:lvar, :row),
                  s(:lvar, :col),
                  s(:lvar, :disk),
                  s(:splat,
                    s(:lvar, :dir)))))),
          s(:def, :count_disk,
            s(:args,
              s(:arg, :disk)),
            s(:begin,
              s(:lvasgn, :num,
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:ivar, :@data), :each),
                s(:args,
                  s(:arg, :rows)),
                s(:block,
                  s(:send,
                    s(:lvar, :rows), :each),
                  s(:args,
                    s(:arg, :d)),
                  s(:if,
                    s(:send,
                      s(:lvar, :d), :==,
                      s(:lvar, :disk)),
                    s(:op_asgn,
                      s(:lvasgn, :num), :+,
                      s(:int, 1)), nil))),
              s(:return,
                s(:lvar, :num)))),
          s(:def, :count_point_to,
            s(:args,
              s(:arg, :row),
              s(:arg, :col),
              s(:arg, :my_disk),
              s(:arg, :dir_y),
              s(:arg, :dir_x)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@data), :[],
                      s(:lvar, :row)), :[],
                    s(:lvar, :col)), :!=,
                  s(:const, nil, :EMPTY)),
                s(:return,
                  s(:int, 0)), nil),
              s(:lvasgn, :count,
                s(:int, 0)),
              s(:block,
                s(:send, nil, :loop),
                s(:args),
                s(:begin,
                  s(:op_asgn,
                    s(:lvasgn, :row), :+,
                    s(:lvar, :dir_y)),
                  s(:op_asgn,
                    s(:lvasgn, :col), :+,
                    s(:lvar, :dir_x)),
                  s(:if,
                    s(:or,
                      s(:or,
                        s(:or,
                          s(:send,
                            s(:lvar, :row), :<,
                            s(:int, 0)),
                          s(:send,
                            s(:lvar, :col), :<,
                            s(:int, 0))),
                        s(:send,
                          s(:lvar, :row), :>,
                          s(:int, 7))),
                      s(:send,
                        s(:lvar, :col), :>,
                        s(:int, 7))),
                    s(:break), nil),
                  s(:case,
                    s(:send,
                      s(:send,
                        s(:ivar, :@data), :[],
                        s(:lvar, :row)), :[],
                      s(:lvar, :col)),
                    s(:when,
                      s(:lvar, :my_disk),
                      s(:return,
                        s(:lvar, :count))),
                    s(:when,
                      s(:send, nil, :other_disk,
                        s(:lvar, :my_disk)),
                      s(:op_asgn,
                        s(:lvasgn, :count), :+,
                        s(:int, 1))),
                    s(:when,
                      s(:const, nil, :EMPTY),
                      s(:break)), nil))),
              s(:return,
                s(:int, 0)))),
          s(:def, :count_point,
            s(:args,
              s(:arg, :row),
              s(:arg, :col),
              s(:arg, :my_disk)),
            s(:begin,
              s(:lvasgn, :count,
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:const, nil, :DIRECTIONS), :each),
                s(:args,
                  s(:arg, :dir)),
                s(:op_asgn,
                  s(:lvasgn, :count), :+,
                  s(:send, nil, :count_point_to,
                    s(:lvar, :row),
                    s(:lvar, :col),
                    s(:lvar, :my_disk),
                    s(:splat,
                      s(:lvar, :dir))))),
              s(:return,
                s(:lvar, :count)))),
          s(:def, :corner?,
            s(:args,
              s(:arg, :row),
              s(:arg, :col)),
            s(:return,
              s(:or,
                s(:or,
                  s(:or,
                    s(:begin,
                      s(:and,
                        s(:send,
                          s(:lvar, :row), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:lvar, :col), :==,
                          s(:int, 0)))),
                    s(:begin,
                      s(:and,
                        s(:send,
                          s(:lvar, :row), :==,
                          s(:int, 0)),
                        s(:send,
                          s(:lvar, :col), :==,
                          s(:int, 7))))),
                  s(:begin,
                    s(:and,
                      s(:send,
                        s(:lvar, :row), :==,
                        s(:int, 7)),
                      s(:send,
                        s(:lvar, :col), :==,
                        s(:int, 0))))),
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :row), :==,
                      s(:int, 7)),
                    s(:send,
                      s(:lvar, :col), :==,
                      s(:int, 7))))))),
          s(:def, :search,
            s(:args,
              s(:arg, :my_disk)),
            s(:begin,
              s(:lvasgn, :max,
                s(:int, 0)),
              s(:lvasgn, :max_row,
                s(:nil)),
              s(:lvasgn, :max_col,
                s(:nil)),
              s(:for,
                s(:lvasgn, :row),
                s(:irange,
                  s(:int, 0),
                  s(:int, 7)),
                s(:for,
                  s(:lvasgn, :col),
                  s(:irange,
                    s(:int, 0),
                    s(:int, 7)),
                  s(:begin,
                    s(:lvasgn, :buf,
                      s(:send, nil, :count_point,
                        s(:lvar, :row),
                        s(:lvar, :col),
                        s(:lvar, :my_disk))),
                    s(:if,
                      s(:or,
                        s(:begin,
                          s(:and,
                            s(:send, nil, :corner?,
                              s(:lvar, :row),
                              s(:lvar, :col)),
                            s(:send,
                              s(:lvar, :buf), :>,
                              s(:int, 0)))),
                        s(:send,
                          s(:lvar, :max), :<,
                          s(:lvar, :buf))),
                      s(:begin,
                        s(:lvasgn, :max,
                          s(:lvar, :buf)),
                        s(:lvasgn, :max_row,
                          s(:lvar, :row)),
                        s(:lvasgn, :max_col,
                          s(:lvar, :col))), nil)))),
              s(:return,
                s(:lvar, :max_row),
                s(:lvar, :max_col)))))),
      s(:class,
        s(:const, nil, :BoardView),
        s(:const, nil, :TclTkWidget),
        s(:begin,
          s(:casgn, nil, :BACK_GROUND_COLOR,
            s(:str, "DarkGreen")),
          s(:casgn, nil, :HILIT_BG_COLOR,
            s(:str, "green")),
          s(:casgn, nil, :BORDER_COLOR,
            s(:str, "black")),
          s(:casgn, nil, :BLACK_COLOR,
            s(:str, "black")),
          s(:casgn, nil, :WHITE_COLOR,
            s(:str, "white")),
          s(:casgn, nil, :STOP_COLOR,
            s(:str, "red")),
          s(:send, nil, :attr,
            s(:sym, :left)),
          s(:send, nil, :attr,
            s(:sym, :top)),
          s(:send, nil, :attr,
            s(:sym, :right)),
          s(:send, nil, :attr,
            s(:sym, :bottom)),
          s(:class,
            s(:const, nil, :Square), nil,
            s(:begin,
              s(:send, nil, :attr,
                s(:sym, :oval),
                s(:const, nil, :TRUE)),
              s(:send, nil, :attr,
                s(:sym, :row)),
              s(:send, nil, :attr,
                s(:sym, :col)),
              s(:def, :initialize,
                s(:args,
                  s(:arg, :view),
                  s(:arg, :row),
                  s(:arg, :col)),
                s(:begin,
                  s(:ivasgn, :@view,
                    s(:lvar, :view)),
                  s(:ivasgn, :@id,
                    s(:send,
                      s(:ivar, :@view), :e,
                      s(:str, "create rectangle"),
                      s(:splat,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :view), :tk_rect,
                              s(:send,
                                s(:send,
                                  s(:lvar, :view), :left), :+,
                                s(:lvar, :col)),
                              s(:send,
                                s(:send,
                                  s(:lvar, :view), :top), :+,
                                s(:lvar, :row)),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :view), :left), :+,
                                  s(:lvar, :col)), :+,
                                s(:int, 1)),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :view), :top), :+,
                                  s(:lvar, :row)), :+,
                                s(:int, 1))), :<<,
                            s(:dstr,
                              s(:str, "-fill "),
                              s(:begin,
                                s(:const, nil, :BACK_GROUND_COLOR)))))))),
                  s(:ivasgn, :@row,
                    s(:lvar, :row)),
                  s(:ivasgn, :@col,
                    s(:lvar, :col)),
                  s(:send,
                    s(:ivar, :@view), :e,
                    s(:str, "itemconfigure"),
                    s(:ivar, :@id),
                    s(:dstr,
                      s(:str, "-width 0.5m -outline "),
                      s(:begin,
                        s(:const, nil, :BORDER_COLOR)))),
                  s(:send,
                    s(:ivar, :@view), :e,
                    s(:str, "bind"),
                    s(:ivar, :@id),
                    s(:str, "<Any-Enter>"),
                    s(:send,
                      s(:const, nil, :TclTkCallback), :new,
                      s(:gvar, :$ip),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args),
                        s(:if,
                          s(:send,
                            s(:ivar, :@oval), :==,
                            s(:nil)),
                          s(:send,
                            s(:lvar, :view), :e,
                            s(:str, "itemconfigure"),
                            s(:ivar, :@id),
                            s(:dstr,
                              s(:str, "-fill "),
                              s(:begin,
                                s(:const, nil, :HILIT_BG_COLOR)))), nil)))),
                  s(:send,
                    s(:ivar, :@view), :e,
                    s(:str, "bind"),
                    s(:ivar, :@id),
                    s(:str, "<Any-Leave>"),
                    s(:send,
                      s(:const, nil, :TclTkCallback), :new,
                      s(:gvar, :$ip),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args),
                        s(:send,
                          s(:lvar, :view), :e,
                          s(:str, "itemconfigure"),
                          s(:ivar, :@id),
                          s(:dstr,
                            s(:str, "-fill "),
                            s(:begin,
                              s(:const, nil, :BACK_GROUND_COLOR))))))),
                  s(:send,
                    s(:ivar, :@view), :e,
                    s(:str, "bind"),
                    s(:ivar, :@id),
                    s(:str, "<ButtonRelease-1>"),
                    s(:send,
                      s(:const, nil, :TclTkCallback), :new,
                      s(:gvar, :$ip),
                      s(:block,
                        s(:send, nil, :proc),
                        s(:args),
                        s(:send,
                          s(:lvar, :view), :click_square,
                          s(:self))))))),
              s(:def, :blink,
                s(:args,
                  s(:arg, :color)),
                s(:begin,
                  s(:send,
                    s(:ivar, :@view), :e,
                    s(:str, "itemconfigure"),
                    s(:ivar, :@id),
                    s(:dstr,
                      s(:str, "-fill "),
                      s(:begin,
                        s(:lvar, :color)))),
                  s(:send,
                    s(:gvar, :$update), :e),
                  s(:send, nil, :sleep,
                    s(:float, 0.1)),
                  s(:send,
                    s(:ivar, :@view), :e,
                    s(:str, "itemconfigure"),
                    s(:ivar, :@id),
                    s(:dstr,
                      s(:str, "-fill "),
                      s(:begin,
                        s(:const, nil, :BACK_GROUND_COLOR)))))))),
          s(:def, :initialize,
            s(:args,
              s(:arg, :othello),
              s(:arg, :board)),
            s(:begin,
              s(:super,
                s(:gvar, :$ip),
                s(:gvar, :$root),
                s(:gvar, :$canvas)),
              s(:ivasgn, :@othello,
                s(:lvar, :othello)),
              s(:ivasgn, :@board,
                s(:lvar, :board)),
              s(:send,
                s(:ivar, :@board), :add_observer,
                s(:self)),
              s(:ivasgn, :@squares,
                s(:send,
                  s(:const, nil, :Array), :new,
                  s(:int, 8))),
              s(:for,
                s(:lvasgn, :i),
                s(:irange,
                  s(:int, 0),
                  s(:int, 7)),
                s(:send,
                  s(:ivar, :@squares), :[]=,
                  s(:lvar, :i),
                  s(:send,
                    s(:const, nil, :Array), :new,
                    s(:int, 8)))),
              s(:ivasgn, :@left,
                s(:int, 1)),
              s(:ivasgn, :@top,
                s(:float, 0.5)),
              s(:ivasgn, :@right,
                s(:send,
                  s(:ivar, :@left), :+,
                  s(:int, 8))),
              s(:ivasgn, :@bottom,
                s(:send,
                  s(:ivar, :@top), :+,
                  s(:int, 8))),
              s(:lvasgn, :i,
                s(:send,
                  s(:self), :e,
                  s(:str, "create rectangle"),
                  s(:splat,
                    s(:send, nil, :tk_rect,
                      s(:ivar, :@left),
                      s(:ivar, :@top),
                      s(:ivar, :@right),
                      s(:ivar, :@bottom))))),
              s(:send,
                s(:self), :e,
                s(:str, "itemconfigure"),
                s(:lvar, :i),
                s(:dstr,
                  s(:str, "-width 1m -outline "),
                  s(:begin,
                    s(:const, nil, :BORDER_COLOR)),
                  s(:str, " -fill "),
                  s(:begin,
                    s(:const, nil, :BACK_GROUND_COLOR)))),
              s(:for,
                s(:lvasgn, :row),
                s(:irange,
                  s(:int, 0),
                  s(:int, 7)),
                s(:for,
                  s(:lvasgn, :col),
                  s(:irange,
                    s(:int, 0),
                    s(:int, 7)),
                  s(:send,
                    s(:send,
                      s(:ivar, :@squares), :[],
                      s(:lvar, :row)), :[]=,
                    s(:lvar, :col),
                    s(:send,
                      s(:const, nil, :Square), :new,
                      s(:self),
                      s(:lvar, :row),
                      s(:lvar, :col))))),
              s(:send, nil, :update))),
          s(:def, :tk_rect,
            s(:args,
              s(:arg, :left),
              s(:arg, :top),
              s(:arg, :right),
              s(:arg, :bottom)),
            s(:return,
              s(:send,
                s(:send,
                  s(:lvar, :left), :to_s), :+,
                s(:str, "c")),
              s(:send,
                s(:send,
                  s(:lvar, :top), :to_s), :+,
                s(:str, "c")),
              s(:send,
                s(:send,
                  s(:lvar, :right), :to_s), :+,
                s(:str, "c")),
              s(:send,
                s(:send,
                  s(:lvar, :bottom), :to_s), :+,
                s(:str, "c")))),
          s(:def, :clear,
            s(:args),
            s(:block,
              s(:send, nil, :each_square),
              s(:args,
                s(:arg, :square)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :square), :oval), :!=,
                  s(:nil)),
                s(:begin,
                  s(:send,
                    s(:self), :e,
                    s(:str, "delete"),
                    s(:send,
                      s(:lvar, :square), :oval)),
                  s(:send,
                    s(:lvar, :square), :oval=,
                    s(:nil))), nil))),
          s(:def, :draw_disk,
            s(:args,
              s(:arg, :row),
              s(:arg, :col),
              s(:arg, :disk)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :disk), :==,
                  s(:const, nil, :EMPTY)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@squares), :[],
                            s(:lvar, :row)), :[],
                          s(:lvar, :col)), :oval), :!=,
                      s(:nil)),
                    s(:begin,
                      s(:send,
                        s(:self), :e,
                        s(:str, "delete"),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:ivar, :@squares), :[],
                              s(:lvar, :row)), :[],
                            s(:lvar, :col)), :oval)),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:ivar, :@squares), :[],
                            s(:lvar, :row)), :[],
                          s(:lvar, :col)), :oval=,
                        s(:nil))), nil),
                  s(:return)), nil),
              s(:send,
                s(:gvar, :$update), :e),
              s(:send, nil, :sleep,
                s(:float, 0.05)),
              s(:lvasgn, :oval,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@squares), :[],
                      s(:lvar, :row)), :[],
                    s(:lvar, :col)), :oval)),
              s(:if,
                s(:send,
                  s(:lvar, :oval), :==,
                  s(:nil)),
                s(:begin,
                  s(:lvasgn, :oval,
                    s(:send,
                      s(:self), :e,
                      s(:str, "create oval"),
                      s(:splat,
                        s(:send, nil, :tk_rect,
                          s(:send,
                            s(:send,
                              s(:ivar, :@left), :+,
                              s(:lvar, :col)), :+,
                            s(:float, 0.2)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@top), :+,
                              s(:lvar, :row)), :+,
                            s(:float, 0.2)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@left), :+,
                              s(:lvar, :col)), :+,
                            s(:float, 0.8)),
                          s(:send,
                            s(:send,
                              s(:ivar, :@top), :+,
                              s(:lvar, :row)), :+,
                            s(:float, 0.8)))))),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@squares), :[],
                        s(:lvar, :row)), :[],
                      s(:lvar, :col)), :oval=,
                    s(:lvar, :oval))), nil),
              s(:case,
                s(:lvar, :disk),
                s(:when,
                  s(:const, nil, :BLACK),
                  s(:lvasgn, :color,
                    s(:const, nil, :BLACK_COLOR))),
                s(:when,
                  s(:const, nil, :WHITE),
                  s(:lvasgn, :color,
                    s(:const, nil, :WHITE_COLOR))),
                s(:send, nil, :fail,
                  s(:send, nil, :format,
                    s(:str, "Unknown disk type: %d"),
                    s(:lvar, :disk)))),
              s(:send,
                s(:self), :e,
                s(:str, "itemconfigure"),
                s(:lvar, :oval),
                s(:dstr,
                  s(:str, "-outline "),
                  s(:begin,
                    s(:lvar, :color)),
                  s(:str, " -fill "),
                  s(:begin,
                    s(:lvar, :color)))))),
          s(:def, :update,
            s(:args,
              s(:optarg, :row,
                s(:nil)),
              s(:optarg, :col,
                s(:nil))),
            s(:begin,
              s(:if,
                s(:and,
                  s(:lvar, :row),
                  s(:lvar, :col)),
                s(:send, nil, :draw_disk,
                  s(:lvar, :row),
                  s(:lvar, :col),
                  s(:send,
                    s(:ivar, :@board), :get_disk,
                    s(:lvar, :row),
                    s(:lvar, :col))),
                s(:block,
                  s(:send, nil, :each_square),
                  s(:args,
                    s(:arg, :square)),
                  s(:send, nil, :draw_disk,
                    s(:send,
                      s(:lvar, :square), :row),
                    s(:send,
                      s(:lvar, :square), :col),
                    s(:send,
                      s(:ivar, :@board), :get_disk,
                      s(:send,
                        s(:lvar, :square), :row),
                      s(:send,
                        s(:lvar, :square), :col))))),
              s(:send,
                s(:ivar, :@othello), :show_point))),
          s(:def, :each_square,
            s(:args),
            s(:block,
              s(:send,
                s(:ivar, :@squares), :each),
              s(:args,
                s(:arg, :rows)),
              s(:block,
                s(:send,
                  s(:lvar, :rows), :each),
                s(:args,
                  s(:arg, :square)),
                s(:yield,
                  s(:lvar, :square))))),
          s(:def, :click_square,
            s(:args,
              s(:arg, :square)),
            s(:begin,
              s(:if,
                s(:or,
                  s(:or,
                    s(:send,
                      s(:ivar, :@othello), :in_com_turn),
                    s(:send,
                      s(:ivar, :@othello), :game_over)),
                  s(:send,
                    s(:send,
                      s(:ivar, :@board), :count_point,
                      s(:send,
                        s(:lvar, :square), :row),
                      s(:send,
                        s(:lvar, :square), :col),
                      s(:send,
                        s(:ivar, :@board), :man_disk)), :==,
                    s(:int, 0))),
                s(:begin,
                  s(:send,
                    s(:lvar, :square), :blink,
                    s(:const, nil, :STOP_COLOR)),
                  s(:return)), nil),
              s(:send,
                s(:ivar, :@board), :put_disk,
                s(:send,
                  s(:lvar, :square), :row),
                s(:send,
                  s(:lvar, :square), :col),
                s(:send,
                  s(:ivar, :@board), :man_disk)),
              s(:send,
                s(:ivar, :@othello), :com_turn))),
          s(:send, nil, :private,
            s(:sym, :draw_disk)),
          s(:send, nil, :public,
            s(:sym, :update)))),
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:ivasgn, :@msg_label,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:gvar, :$ip),
              s(:gvar, :$root),
              s(:gvar, :$label))),
          s(:send,
            s(:gvar, :$pack), :e,
            s(:ivar, :@msg_label)),
          s(:ivasgn, :@board,
            s(:send,
              s(:const, nil, :Board), :new,
              s(:self))),
          s(:ivasgn, :@board_view,
            s(:send,
              s(:const, nil, :BoardView), :new,
              s(:self),
              s(:ivar, :@board))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :x1),
              s(:lvasgn, :y1),
              s(:lvasgn, :x2),
              s(:lvasgn, :y2)),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@board_view), :e,
                    s(:str, "bbox all")), :split,
                  s(:regexp,
                    s(:str, " "),
                    s(:regopt))), :collect),
              s(:args,
                s(:arg, :i)),
              s(:send,
                s(:lvar, :i), :to_f))),
          s(:send,
            s(:ivar, :@board_view), :e,
            s(:str, "configure -width"),
            s(:send,
              s(:lvar, :x2), :-,
              s(:lvar, :x1))),
          s(:send,
            s(:ivar, :@board_view), :e,
            s(:str, "configure -height"),
            s(:send,
              s(:lvar, :y2), :-,
              s(:lvar, :y1))),
          s(:send,
            s(:ivar, :@board_view), :e,
            s(:str, "configure -scrollregion {"),
            s(:send,
              s(:ivar, :@board_view), :e,
              s(:str, "bbox all")),
            s(:str, "}")),
          s(:send,
            s(:gvar, :$pack), :e,
            s(:ivar, :@board_view),
            s(:str, "-fill both -expand true")),
          s(:lvasgn, :panel,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:gvar, :$ip),
              s(:gvar, :$root),
              s(:gvar, :$frame))),
          s(:ivasgn, :@play_black,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:gvar, :$ip),
              s(:lvar, :panel),
              s(:gvar, :$checkbutton),
              s(:str, "-text {com is black} -command"),
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:gvar, :$ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :switch_side))))),
          s(:send,
            s(:gvar, :$pack), :e,
            s(:ivar, :@play_black),
            s(:str, "-side left")),
          s(:lvasgn, :quit,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:gvar, :$ip),
              s(:lvar, :panel),
              s(:gvar, :$button),
              s(:str, "-text Quit -command"),
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:gvar, :$ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :exit))))),
          s(:send,
            s(:gvar, :$pack), :e,
            s(:lvar, :quit),
            s(:str, "-side right -fill x")),
          s(:lvasgn, :reset,
            s(:send,
              s(:const, nil, :TclTkWidget), :new,
              s(:gvar, :$ip),
              s(:lvar, :panel),
              s(:gvar, :$button),
              s(:str, "-text Reset -command"),
              s(:send,
                s(:const, nil, :TclTkCallback), :new,
                s(:gvar, :$ip),
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send, nil, :reset_game))))),
          s(:send,
            s(:gvar, :$pack), :e,
            s(:lvar, :reset),
            s(:str, "-side right -fill x")),
          s(:send,
            s(:gvar, :$pack), :e,
            s(:lvar, :panel),
            s(:str, "-side bottom -fill x")),
          s(:send,
            s(:gvar, :$wm), :e,
            s(:str, "title"),
            s(:gvar, :$root),
            s(:str, "Othello")),
          s(:send,
            s(:gvar, :$wm), :e,
            s(:str, "iconname"),
            s(:gvar, :$root),
            s(:str, "Othello")),
          s(:send,
            s(:ivar, :@board), :com_disk=,
            s(:const, nil, :WHITE)),
          s(:ivasgn, :@game_over,
            s(:const, nil, :FALSE)),
          s(:send,
            s(:const, nil, :TclTk), :mainloop))),
      s(:def, :switch_side,
        s(:args),
        s(:if,
          s(:ivar, :@in_com_turn),
          s(:send,
            s(:ivar, :@play_black), :e,
            s(:str, "toggle")),
          s(:begin,
            s(:send,
              s(:ivar, :@board), :com_disk=,
              s(:send,
                s(:ivar, :@board), :man_disk)),
            s(:if,
              s(:ivar, :@game_over), nil,
              s(:send, nil, :com_turn))))),
      s(:def, :reset_game,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@board), :com_disk), :==,
              s(:const, nil, :BLACK)),
            s(:begin,
              s(:send,
                s(:ivar, :@board), :com_disk=,
                s(:const, nil, :WHITE)),
              s(:send,
                s(:ivar, :@play_black), :e,
                s(:str, "toggle"))), nil),
          s(:send,
            s(:ivar, :@board_view), :clear),
          s(:send,
            s(:ivar, :@board), :reset),
          s(:send,
            s(:gvar, :$wm), :e,
            s(:str, "title"),
            s(:gvar, :$root),
            s(:str, "Othello")),
          s(:ivasgn, :@game_over,
            s(:const, nil, :FALSE)))),
      s(:def, :com_turn,
        s(:args),
        s(:begin,
          s(:ivasgn, :@in_com_turn,
            s(:const, nil, :TRUE)),
          s(:send,
            s(:gvar, :$update), :e),
          s(:send, nil, :sleep,
            s(:float, 0.5)),
          s(:while_post,
            s(:send,
              s(:send,
                s(:ivar, :@board), :search,
                s(:send,
                  s(:ivar, :@board), :man_disk)), :==,
              s(:array,
                s(:nil),
                s(:nil))),
            s(:kwbegin,
              s(:lvasgn, :com_disk,
                s(:send,
                  s(:ivar, :@board), :count_disk,
                  s(:send,
                    s(:ivar, :@board), :com_disk))),
              s(:lvasgn, :man_disk,
                s(:send,
                  s(:ivar, :@board), :count_disk,
                  s(:send,
                    s(:ivar, :@board), :man_disk))),
              s(:if,
                s(:send,
                  s(:send,
                    s(:ivar, :@board), :count_disk,
                    s(:const, nil, :EMPTY)), :==,
                  s(:int, 0)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :man_disk), :==,
                      s(:lvar, :com_disk)),
                    s(:send,
                      s(:gvar, :$wm), :e,
                      s(:str, "title"),
                      s(:gvar, :$root),
                      s(:str, "{Othello - Draw!}")),
                    s(:if,
                      s(:send,
                        s(:lvar, :man_disk), :>,
                        s(:lvar, :com_disk)),
                      s(:send,
                        s(:gvar, :$wm), :e,
                        s(:str, "title"),
                        s(:gvar, :$root),
                        s(:str, "{Othello - You Win!}")),
                      s(:send,
                        s(:gvar, :$wm), :e,
                        s(:str, "title"),
                        s(:gvar, :$root),
                        s(:str, "{Othello - You Loose!}")))),
                  s(:ivasgn, :@game_over,
                    s(:const, nil, :TRUE)),
                  s(:break)),
                s(:if,
                  s(:send,
                    s(:lvar, :com_disk), :==,
                    s(:int, 0)),
                  s(:begin,
                    s(:send,
                      s(:gvar, :$wm), :e,
                      s(:str, "title"),
                      s(:gvar, :$root),
                      s(:str, "{Othello - You Win!}")),
                    s(:ivasgn, :@game_over,
                      s(:const, nil, :TRUE)),
                    s(:break)),
                  s(:if,
                    s(:send,
                      s(:lvar, :man_disk), :==,
                      s(:int, 0)),
                    s(:begin,
                      s(:send,
                        s(:gvar, :$wm), :e,
                        s(:str, "title"),
                        s(:gvar, :$root),
                        s(:str, "{Othello - You Loose!}")),
                      s(:ivasgn, :@game_over,
                        s(:const, nil, :TRUE)),
                      s(:break)), nil))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :row),
                  s(:lvasgn, :col)),
                s(:send,
                  s(:ivar, :@board), :search,
                  s(:send,
                    s(:ivar, :@board), :com_disk))),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :row), :==,
                    s(:nil)),
                  s(:send,
                    s(:lvar, :col), :==,
                    s(:nil))),
                s(:break), nil),
              s(:send,
                s(:ivar, :@board), :put_disk,
                s(:lvar, :row),
                s(:lvar, :col),
                s(:send,
                  s(:ivar, :@board), :com_disk)))),
          s(:ivasgn, :@in_com_turn,
            s(:const, nil, :FALSE)))),
      s(:def, :show_point,
        s(:args),
        s(:begin,
          s(:lvasgn, :black,
            s(:send,
              s(:ivar, :@board), :count_disk,
              s(:const, nil, :BLACK))),
          s(:lvasgn, :white,
            s(:send,
              s(:ivar, :@board), :count_disk,
              s(:const, nil, :WHITE))),
          s(:send,
            s(:ivar, :@msg_label), :e,
            s(:str, "configure -text"),
            s(:dstr,
              s(:str, "{"),
              s(:begin,
                s(:send, nil, :format,
                  s(:str, "BLACK: %.2d    WHITE: %.2d"),
                  s(:lvar, :black),
                  s(:lvar, :white))),
              s(:str, "}"))))))),
  s(:send,
    s(:const, nil, :Othello), :new))
