s(:begin,
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:lvasgn, :radio_var,
    s(:send,
      s(:const, nil, :TkVariable), :new,
      s(:str, "y"))),
  s(:lvasgn, :menu_spec,
    s(:array,
      s(:array,
        s(:array,
          s(:str, "File"),
          s(:int, 0)),
        s(:hash,
          s(:pair,
            s(:sym, :label),
            s(:str, "Open")),
          s(:pair,
            s(:sym, :command),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :puts,
                s(:str, "Open clicked")))),
          s(:pair,
            s(:sym, :underline),
            s(:int, 0))),
        s(:str, "---"),
        s(:array,
          s(:str, "Check_A"),
          s(:send,
            s(:const, nil, :TkVariable), :new,
            s(:true)),
          s(:int, 6)),
        s(:hash,
          s(:pair,
            s(:sym, :type),
            s(:str, "checkbutton")),
          s(:pair,
            s(:sym, :label),
            s(:str, "Check_B")),
          s(:pair,
            s(:sym, :variable),
            s(:send,
              s(:const, nil, :TkVariable), :new)),
          s(:pair,
            s(:sym, :underline),
            s(:int, 6))),
        s(:str, "---"),
        s(:array,
          s(:str, "Radio_X"),
          s(:array,
            s(:lvar, :radio_var),
            s(:str, "x")),
          s(:int, 6),
          s(:str, ""),
          s(:hash,
            s(:pair,
              s(:sym, :foreground),
              s(:str, "black")))),
        s(:array,
          s(:str, "Radio_Y"),
          s(:array,
            s(:lvar, :radio_var),
            s(:str, "y")),
          s(:int, 6)),
        s(:array,
          s(:str, "Radio_Z"),
          s(:array,
            s(:lvar, :radio_var),
            s(:str, "z")),
          s(:int, 6)),
        s(:str, "---"),
        s(:array,
          s(:str, "cascade"),
          s(:array,
            s(:array,
              s(:str, "sss"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :p,
                  s(:str, "sss"))),
              s(:int, 0)),
            s(:array,
              s(:str, "ttt"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :p,
                  s(:str, "ttt"))),
              s(:int, 0)),
            s(:array,
              s(:str, "uuu"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :p,
                  s(:str, "uuu"))),
              s(:int, 0)),
            s(:array,
              s(:str, "vvv"),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :p,
                  s(:str, "vvv"))),
              s(:int, 0))),
          s(:int, 0),
          s(:str, ""),
          s(:hash,
            s(:pair,
              s(:sym, :font),
              s(:str, "Courier 16 italic")),
            s(:pair,
              s(:sym, :menu_config),
              s(:hash,
                s(:pair,
                  s(:sym, :font),
                  s(:str, "Times -18 bold")),
                s(:pair,
                  s(:sym, :foreground),
                  s(:str, "black")))))),
        s(:str, "---"),
        s(:array,
          s(:str, "Quit"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :exit)),
          s(:int, 0))),
      s(:array,
        s(:array,
          s(:str, "Edit"),
          s(:int, 0)),
        s(:array,
          s(:str, "Cut"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :puts,
              s(:str, "Cut clicked"))),
          s(:int, 2)),
        s(:array,
          s(:str, "Copy"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :puts,
              s(:str, "Copy clicked"))),
          s(:int, 0)),
        s(:array,
          s(:str, "Paste"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :puts,
              s(:str, "Paste clicked"))),
          s(:int, 0))),
      s(:array,
        s(:array,
          s(:str, "Help"),
          s(:int, 0),
          s(:hash,
            s(:pair,
              s(:sym, :menu_name),
              s(:str, "help")))),
        s(:array,
          s(:str, "About This"),
          s(:block,
            s(:send, nil, :proc),
            s(:args),
            s(:send, nil, :puts,
              s(:str, "Ruby/Tk menubar sample 1"))),
          s(:int, 6))))),
  s(:lvasgn, :menubar,
    s(:send,
      s(:const, nil, :TkMenubar), :new,
      s(:nil),
      s(:lvar, :menu_spec),
      s(:hash,
        s(:pair,
          s(:str, "tearoff"),
          s(:false)),
        s(:pair,
          s(:str, "foreground"),
          s(:str, "grey40")),
        s(:pair,
          s(:str, "activeforeground"),
          s(:str, "red")),
        s(:pair,
          s(:str, "font"),
          s(:str, "Helvetica 12 bold"))))),
  s(:send,
    s(:lvar, :menubar), :pack,
    s(:hash,
      s(:pair,
        s(:str, "side"),
        s(:str, "top")),
      s(:pair,
        s(:str, "fill"),
        s(:str, "x")))),
  s(:send,
    s(:send,
      s(:send,
        s(:const, nil, :TkText), :new,
        s(:hash,
          s(:pair,
            s(:sym, :wrap),
            s(:str, "word")))), :pack), :insert,
    s(:str, "1.0"),
    s(:str, "Please read the sample source, and check how to override default configure options of menu entries on a menu_spec. Maybe, on windows, this menubar does not work properly about keyboard shortcuts. Then, please use \"menu\" option of root/toplevel widget (see sample/menubar2.rb).")),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
