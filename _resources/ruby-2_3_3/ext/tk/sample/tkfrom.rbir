s(:begin,
  s(:send, nil, :require,
    s(:str, "parsedate")),
  s(:send, nil, :require,
    s(:str, "base64")),
  s(:send, nil, :include,
    s(:const, nil, :ParseDate)),
  s(:class,
    s(:const, nil, :Mail), nil,
    s(:begin,
      s(:defs,
        s(:const, nil, :Mail), :new,
        s(:args,
          s(:arg, :f)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :f), :kind_of?,
                s(:const, nil, :IO)), :!),
            s(:begin,
              s(:lvasgn, :f,
                s(:send, nil, :open,
                  s(:lvar, :f),
                  s(:str, "r"))),
              s(:lvasgn, :me,
                s(:super,
                  s(:lvar, :f))),
              s(:send,
                s(:lvar, :f), :close)),
            s(:lvasgn, :me,
              s(:zsuper))),
          s(:return,
            s(:lvar, :me)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :f)),
        s(:begin,
          s(:ivasgn, :@header,
            s(:hash)),
          s(:ivasgn, :@body,
            s(:array)),
          s(:while,
            s(:lvasgn, :line,
              s(:send,
                s(:lvar, :f), :gets)),
            s(:begin,
              s(:send,
                s(:gvar, :$_), :chop!),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^From "),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:next), nil),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^$"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:break), nil),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^(\\S+):\\s*(.*)"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:send,
                  s(:ivar, :@header), :[]=,
                  s(:lvasgn, :attr,
                    s(:send,
                      s(:nth_ref, 1), :capitalize)),
                  s(:nth_ref, 2)),
                s(:if,
                  s(:lvar, :attr),
                  s(:begin,
                    s(:send, nil, :sub,
                      s(:regexp,
                        s(:str, "^\\s*"),
                        s(:regopt)),
                      s(:str, "")),
                    s(:op_asgn,
                      s(:send,
                        s(:ivar, :@header), :[],
                        s(:lvar, :attr)), :+,
                      s(:send,
                        s(:str, "\n"), :+,
                        s(:gvar, :$_)))), nil)))),
          s(:if,
            s(:gvar, :$_), nil,
            s(:return)),
          s(:while,
            s(:lvasgn, :line,
              s(:send,
                s(:lvar, :f), :gets)),
            s(:begin,
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^From "),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:break), nil),
              s(:send,
                s(:ivar, :@body), :push,
                s(:gvar, :$_)))))),
      s(:def, :header,
        s(:args),
        s(:return,
          s(:ivar, :@header))),
      s(:def, :body,
        s(:args),
        s(:return,
          s(:ivar, :@body))))),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :ARGV), :length), :==,
      s(:int, 0)),
    s(:if,
      s(:send,
        s(:const, nil, :ENV), :[],
        s(:str, "MAIL")),
      s(:send,
        s(:const, nil, :ARGV), :[]=,
        s(:int, 0),
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "MAIL"))),
      s(:if,
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "USER")),
        s(:send,
          s(:const, nil, :ARGV), :[]=,
          s(:int, 0),
          s(:send,
            s(:str, "/var/spool/mail/"), :+,
            s(:send,
              s(:const, nil, :ENV), :[],
              s(:str, "USER")))),
        s(:if,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "LOGNAME")),
          s(:send,
            s(:const, nil, :ARGV), :[]=,
            s(:int, 0),
            s(:send,
              s(:str, "/var/spool/mail/"), :+,
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "LOGNAME")))), nil))), nil),
  s(:send, nil, :require,
    s(:str, "tk")),
  s(:lvasgn, :list,
    s(:lvasgn, :scroll,
      s(:nil))),
  s(:block,
    s(:send,
      s(:const, nil, :TkFrame), :new),
    s(:args,
      s(:arg, :f)),
    s(:begin,
      s(:lvasgn, :list,
        s(:block,
          s(:send,
            s(:const, nil, :TkListbox), :new,
            s(:lvar, :f)),
          s(:args),
          s(:begin,
            s(:send, nil, :yscroll,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:restarg, :idx)),
                s(:send,
                  s(:lvar, :scroll), :set,
                  s(:splat,
                    s(:lvar, :idx))))),
            s(:send, nil, :relief,
              s(:str, "raised")),
            s(:send, nil, :width,
              s(:int, 80)),
            s(:send, nil, :height,
              s(:int, 5)),
            s(:send, nil, :setgrid,
              s(:str, "yes")),
            s(:send, nil, :pack,
              s(:hash,
                s(:pair,
                  s(:str, "side"),
                  s(:str, "left")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "both")),
                s(:pair,
                  s(:str, "expand"),
                  s(:str, "yes"))))))),
      s(:lvasgn, :scroll,
        s(:block,
          s(:send,
            s(:const, nil, :TkScrollbar), :new,
            s(:lvar, :f)),
          s(:args),
          s(:begin,
            s(:send, nil, :command,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :idx)),
                s(:send,
                  s(:lvar, :list), :yview,
                  s(:splat,
                    s(:lvar, :idx))))),
            s(:send, nil, :pack,
              s(:hash,
                s(:pair,
                  s(:str, "side"),
                  s(:str, "right")),
                s(:pair,
                  s(:str, "fill"),
                  s(:str, "y"))))))),
      s(:send, nil, :pack))),
  s(:lvasgn, :root,
    s(:send,
      s(:const, nil, :Tk), :root)),
  s(:block,
    s(:send,
      s(:const, nil, :TkButton), :new,
      s(:lvar, :root)),
    s(:args),
    s(:begin,
      s(:send, nil, :text,
        s(:str, "Dismiss")),
      s(:send, nil, :command,
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send, nil, :exit))),
      s(:send, nil, :pack,
        s(:hash,
          s(:pair,
            s(:str, "fill"),
            s(:str, "both")),
          s(:pair,
            s(:str, "expand"),
            s(:str, "yes")))))),
  s(:send,
    s(:lvar, :root), :bind,
    s(:str, "Control-c"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :exit))),
  s(:send,
    s(:lvar, :root), :bind,
    s(:str, "Control-q"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :exit))),
  s(:send,
    s(:lvar, :root), :bind,
    s(:str, "space"),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :exit))),
  s(:gvasgn, :$outcount,
    s(:int, 0)),
  s(:for,
    s(:lvasgn, :file),
    s(:const, nil, :ARGV),
    s(:begin,
      s(:if,
        s(:send,
          s(:const, nil, :File), :exist?,
          s(:lvar, :file)), nil,
        s(:next)),
      s(:lvasgn, :atime,
        s(:send,
          s(:const, nil, :File), :atime,
          s(:lvar, :file))),
      s(:lvasgn, :mtime,
        s(:send,
          s(:const, nil, :File), :mtime,
          s(:lvar, :file))),
      s(:lvasgn, :f,
        s(:send, nil, :open,
          s(:lvar, :file),
          s(:str, "r"))),
      s(:kwbegin,
        s(:ensure,
          s(:until,
            s(:send,
              s(:lvar, :f), :eof),
            s(:begin,
              s(:lvasgn, :mail,
                s(:send,
                  s(:const, nil, :Mail), :new,
                  s(:lvar, :f))),
              s(:lvasgn, :date,
                s(:send,
                  s(:send,
                    s(:lvar, :mail), :header), :[],
                  s(:str, "Date"))),
              s(:if,
                s(:lvar, :date), nil,
                s(:next)),
              s(:lvasgn, :from,
                s(:send,
                  s(:send,
                    s(:lvar, :mail), :header), :[],
                  s(:str, "From"))),
              s(:lvasgn, :subj,
                s(:send,
                  s(:send,
                    s(:lvar, :mail), :header), :[],
                  s(:str, "Subject"))),
              s(:lvasgn, :y,
                s(:lvasgn, :m,
                  s(:lvasgn, :d,
                    s(:int, 0)))),
              s(:if,
                s(:lvar, :date),
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :y),
                    s(:lvasgn, :m),
                    s(:lvasgn, :d)),
                  s(:send, nil, :parsedate,
                    s(:lvar, :date))), nil),
              s(:if,
                s(:lvar, :from), nil,
                s(:lvasgn, :from,
                  s(:str, "sombody@somewhere"))),
              s(:if,
                s(:lvar, :subj), nil,
                s(:lvasgn, :subj,
                  s(:str, "(nil)"))),
              s(:lvasgn, :from,
                s(:send, nil, :decode_b,
                  s(:lvar, :from))),
              s(:lvasgn, :subj,
                s(:send, nil, :decode_b,
                  s(:lvar, :subj))),
              s(:send,
                s(:lvar, :list), :insert,
                s(:str, "end"),
                s(:send, nil, :format,
                  s(:str, "%-02d/%02d/%02d [%-28.28s] %s"),
                  s(:lvar, :y),
                  s(:lvar, :m),
                  s(:lvar, :d),
                  s(:lvar, :from),
                  s(:lvar, :subj))),
              s(:op_asgn,
                s(:gvasgn, :$outcount), :+,
                s(:int, 1)))),
          s(:begin,
            s(:send,
              s(:lvar, :f), :close),
            s(:send,
              s(:const, nil, :File), :utime,
              s(:lvar, :atime),
              s(:lvar, :mtime),
              s(:lvar, :file)),
            s(:send,
              s(:lvar, :list), :see,
              s(:str, "end"))))))),
  s(:lvasgn, :limit,
    s(:int, 10000)),
  s(:if,
    s(:send,
      s(:gvar, :$outcount), :==,
      s(:int, 0)),
    s(:begin,
      s(:send,
        s(:lvar, :list), :insert,
        s(:str, "end"),
        s(:str, "You have no mail.")),
      s(:lvasgn, :limit,
        s(:int, 2000))), nil),
  s(:send,
    s(:const, nil, :Tk), :after,
    s(:lvar, :limit),
    s(:block,
      s(:send, nil, :proc),
      s(:args),
      s(:send, nil, :exit))),
  s(:send,
    s(:const, nil, :Tk), :mainloop))
