s(:begin,
  s(:send, nil, :require,
    s(:str, "logger")),
  s(:class,
    s(:const, nil, :MyApp),
    s(:const,
      s(:const, nil, :Logger), :Application),
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :a),
          s(:arg, :b),
          s(:arg, :c)),
        s(:begin,
          s(:super,
            s(:str, "MyApp")),
          s(:lvasgn, :logfile,
            s(:str, "app.log")),
          s(:send,
            s(:self), :log=,
            s(:lvar, :logfile)),
          s(:send,
            s(:self), :level=,
            s(:const, nil, :INFO)),
          s(:ivasgn, :@a,
            s(:lvar, :a)),
          s(:ivasgn, :@b,
            s(:lvar, :b)),
          s(:ivasgn, :@c,
            s(:lvar, :c)))),
      s(:def, :run,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:str, "Started.")),
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:str, "This block isn't evaled because 'debug' is not severe here.")),
          s(:block,
            s(:send,
              s(:ivar, :@log), :debug),
            s(:args),
            s(:send,
              s(:str, "Result = "), :<<,
              s(:send, nil, :foo,
                s(:int, 0)))),
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:str, "So nothing is dumped.")),
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:str, "This block is evaled because 'info' is enough severe here.")),
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:send,
              s(:str, "Result = "), :<<,
              s(:send, nil, :foo,
                s(:int, 0)))),
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:str, "Above causes exception, so not reached here.")),
          s(:block,
            s(:send,
              s(:ivar, :@log), :info),
            s(:args),
            s(:str, "Finished.")))),
      s(:send, nil, :private),
      s(:def, :foo,
        s(:args,
          s(:arg, :var)),
        s(:send,
          s(:int, 1), :/,
          s(:lvar, :var))))),
  s(:lvasgn, :status,
    s(:send,
      s(:send,
        s(:const, nil, :MyApp), :new,
        s(:int, 1),
        s(:int, 2),
        s(:int, 3)), :start)),
  s(:if,
    s(:send,
      s(:lvar, :status), :!=,
      s(:int, 0)),
    s(:begin,
      s(:send, nil, :puts,
        s(:str, "Some error(s) occurred.")),
      s(:send, nil, :puts,
        s(:str, "See \"app.log\"."))), nil))
