s(:begin,
  s(:class,
    s(:const, nil, :Board), nil,
    s(:begin,
      s(:def, :clr,
        s(:args),
        s(:send, nil, :print,
          s(:str, "\e[2J"))),
      s(:def, :pos,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send, nil, :printf,
          s(:str, "\e[%d;%dH"),
          s(:send,
            s(:lvar, :y), :+,
            s(:int, 1)),
          s(:send,
            s(:send,
              s(:lvar, :x), :*,
              s(:int, 2)), :+,
            s(:int, 1)))),
      s(:def, :colorstr,
        s(:args,
          s(:arg, :id),
          s(:arg, :s)),
        s(:send, nil, :printf,
          s(:str, "\e[%dm%s\e[0m"),
          s(:lvar, :id),
          s(:lvar, :s))),
      s(:def, :put,
        s(:args,
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :col),
          s(:arg, :str)),
        s(:begin,
          s(:send, nil, :pos,
            s(:lvar, :x),
            s(:lvar, :y)),
          s(:send, nil, :colorstr,
            s(:int, 43),
            s(:lvar, :str)),
          s(:send, nil, :pos,
            s(:int, 0),
            s(:ivar, :@hi)),
          s(:send, nil, :print,
            s(:str, "残り:"),
            s(:ivar, :@mc),
            s(:str, "/"),
            s(:ivar, :@total),
            s(:str, "   ")),
          s(:send, nil, :pos,
            s(:lvar, :x),
            s(:lvar, :y)))),
      s(:send, nil, :private,
        s(:sym, :clr),
        s(:sym, :pos),
        s(:sym, :colorstr),
        s(:sym, :put)),
      s(:casgn, nil, :CHR,
        s(:array,
          s(:str, "・"),
          s(:str, "１"),
          s(:str, "２"),
          s(:str, "３"),
          s(:str, "４"),
          s(:str, "５"),
          s(:str, "６"),
          s(:str, "７"),
          s(:str, "８"),
          s(:str, "★"),
          s(:str, "●"),
          s(:str, "@@"))),
      s(:casgn, nil, :COL,
        s(:array,
          s(:int, 46),
          s(:int, 43),
          s(:int, 45))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :h),
          s(:arg, :w),
          s(:arg, :m)),
        s(:begin,
          s(:ivasgn, :@hi,
            s(:lvar, :h)),
          s(:ivasgn, :@wi,
            s(:lvar, :w)),
          s(:ivasgn, :@m,
            s(:lvar, :m)),
          s(:send, nil, :reset))),
      s(:def, :reset,
        s(:args),
        s(:begin,
          s(:send, nil, :srand),
          s(:ivasgn, :@cx,
            s(:int, 0)),
          s(:ivasgn, :@cy,
            s(:int, 0)),
          s(:ivasgn, :@mc,
            s(:ivar, :@m)),
          s(:ivasgn, :@over,
            s(:false)),
          s(:ivasgn, :@data,
            s(:send,
              s(:const, nil, :Array), :new,
              s(:send,
                s(:ivar, :@hi), :*,
                s(:ivar, :@wi)))),
          s(:ivasgn, :@state,
            s(:send,
              s(:const, nil, :Array), :new,
              s(:send,
                s(:ivar, :@hi), :*,
                s(:ivar, :@wi)))),
          s(:ivasgn, :@total,
            s(:send,
              s(:ivar, :@hi), :*,
              s(:ivar, :@wi))),
          s(:block,
            s(:send,
              s(:ivar, :@total), :times),
            s(:args,
              s(:arg, :i)),
            s(:send,
              s(:ivar, :@data), :[]=,
              s(:lvar, :i),
              s(:int, 0))),
          s(:block,
            s(:send,
              s(:ivar, :@m), :times),
            s(:args),
            s(:block,
              s(:send, nil, :loop),
              s(:args),
              s(:begin,
                s(:lvasgn, :j,
                  s(:send, nil, :rand,
                    s(:send,
                      s(:ivar, :@total), :-,
                      s(:int, 1)))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@data), :[],
                      s(:lvar, :j)), :==,
                    s(:int, 0)),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@data), :[]=,
                      s(:lvar, :j),
                      s(:int, 1)),
                    s(:break)), nil)))),
          s(:send, nil, :clr),
          s(:send, nil, :pos,
            s(:int, 0),
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:ivar, :@hi), :times),
            s(:args,
              s(:arg, :y)),
            s(:begin,
              s(:send, nil, :pos,
                s(:int, 0),
                s(:lvar, :y)),
              s(:send, nil, :colorstr,
                s(:send,
                  s(:const, nil, :COL), :[],
                  s(:int, 0)),
                s(:send,
                  s(:send,
                    s(:const, nil, :CHR), :[],
                    s(:int, 0)), :*,
                  s(:ivar, :@wi))))),
          s(:send, nil, :pos,
            s(:ivar, :@cx),
            s(:ivar, :@cy)))),
      s(:def, :mark,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@state), :[],
                s(:send,
                  s(:send,
                    s(:ivar, :@wi), :*,
                    s(:ivar, :@cy)), :+,
                  s(:ivar, :@cx))), :!=,
              s(:nil)),
            s(:return), nil),
          s(:send,
            s(:ivar, :@state), :[]=,
            s(:send,
              s(:send,
                s(:ivar, :@wi), :*,
                s(:ivar, :@cy)), :+,
              s(:ivar, :@cx)),
            s(:str, "MARK")),
          s(:ivasgn, :@mc,
            s(:send,
              s(:ivar, :@mc), :-,
              s(:int, 1))),
          s(:ivasgn, :@total,
            s(:send,
              s(:ivar, :@total), :-,
              s(:int, 1))),
          s(:send, nil, :put,
            s(:ivar, :@cx),
            s(:ivar, :@cy),
            s(:send,
              s(:const, nil, :COL), :[],
              s(:int, 1)),
            s(:send,
              s(:const, nil, :CHR), :[],
              s(:int, 9))))),
      s(:def, :open,
        s(:args,
          s(:optarg, :x,
            s(:ivar, :@cx)),
          s(:optarg, :y,
            s(:ivar, :@cy))),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@state), :[],
                s(:send,
                  s(:send,
                    s(:ivar, :@wi), :*,
                    s(:lvar, :y)), :+,
                  s(:lvar, :x))), :==,
              s(:str, "OPEN")),
            s(:return,
              s(:int, 0)), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@state), :[],
                s(:send,
                  s(:send,
                    s(:ivar, :@wi), :*,
                    s(:lvar, :y)), :+,
                  s(:lvar, :x))), :==,
              s(:nil)),
            s(:ivasgn, :@total,
              s(:send,
                s(:ivar, :@total), :-,
                s(:int, 1))), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:ivar, :@state), :[],
                s(:send,
                  s(:send,
                    s(:ivar, :@wi), :*,
                    s(:lvar, :y)), :+,
                  s(:lvar, :x))), :==,
              s(:str, "MARK")),
            s(:ivasgn, :@mc,
              s(:send,
                s(:ivar, :@mc), :+,
                s(:int, 1))), nil),
          s(:send,
            s(:ivar, :@state), :[]=,
            s(:send,
              s(:send,
                s(:ivar, :@wi), :*,
                s(:lvar, :y)), :+,
              s(:lvar, :x)),
            s(:str, "OPEN")),
          s(:if,
            s(:send,
              s(:send, nil, :fetch,
                s(:lvar, :x),
                s(:lvar, :y)), :==,
              s(:int, 1)),
            s(:begin,
              s(:ivasgn, :@over,
                s(:int, 1)),
              s(:return)), nil),
          s(:lvasgn, :c,
            s(:send, nil, :count,
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:send, nil, :put,
            s(:lvar, :x),
            s(:lvar, :y),
            s(:send,
              s(:const, nil, :COL), :[],
              s(:int, 1)),
            s(:send,
              s(:const, nil, :CHR), :[],
              s(:lvar, :c))),
          s(:if,
            s(:send,
              s(:lvar, :c), :!=,
              s(:int, 0)),
            s(:return,
              s(:int, 0)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :x), :>,
                s(:int, 0)),
              s(:send,
                s(:lvar, :y), :>,
                s(:int, 0))),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :x), :-,
                s(:int, 1)),
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 1))), nil),
          s(:if,
            s(:send,
              s(:lvar, :y), :>,
              s(:int, 0)),
            s(:send, nil, :open,
              s(:lvar, :x),
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 1))), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :x), :<,
                s(:send,
                  s(:ivar, :@wi), :-,
                  s(:int, 1))),
              s(:send,
                s(:lvar, :y), :>,
                s(:int, 0))),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :x), :+,
                s(:int, 1)),
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 1))), nil),
          s(:if,
            s(:send,
              s(:lvar, :x), :>,
              s(:int, 0)),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :x), :-,
                s(:int, 1)),
              s(:lvar, :y)), nil),
          s(:if,
            s(:send,
              s(:lvar, :x), :<,
              s(:send,
                s(:ivar, :@wi), :-,
                s(:int, 1))),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :x), :+,
                s(:int, 1)),
              s(:lvar, :y)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :x), :>,
                s(:int, 0)),
              s(:send,
                s(:lvar, :y), :<,
                s(:send,
                  s(:ivar, :@hi), :-,
                  s(:int, 1)))),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :x), :-,
                s(:int, 1)),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 1))), nil),
          s(:if,
            s(:send,
              s(:lvar, :y), :<,
              s(:send,
                s(:ivar, :@hi), :-,
                s(:int, 1))),
            s(:send, nil, :open,
              s(:lvar, :x),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 1))), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :x), :<,
                s(:send,
                  s(:ivar, :@wi), :-,
                  s(:int, 1))),
              s(:send,
                s(:lvar, :y), :<,
                s(:send,
                  s(:ivar, :@hi), :-,
                  s(:int, 1)))),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :x), :+,
                s(:int, 1)),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 1))), nil),
          s(:send, nil, :pos,
            s(:ivar, :@cx),
            s(:ivar, :@cy)))),
      s(:def, :fetch,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:if,
          s(:send,
            s(:lvar, :x), :<,
            s(:int, 0)),
          s(:int, 0),
          s(:if,
            s(:send,
              s(:lvar, :x), :>=,
              s(:ivar, :@wi)),
            s(:int, 0),
            s(:if,
              s(:send,
                s(:lvar, :y), :<,
                s(:int, 0)),
              s(:int, 0),
              s(:if,
                s(:send,
                  s(:lvar, :y), :>=,
                  s(:ivar, :@hi)),
                s(:int, 0),
                s(:send,
                  s(:ivar, :@data), :[],
                  s(:send,
                    s(:send,
                      s(:lvar, :y), :*,
                      s(:ivar, :@wi)), :+,
                    s(:lvar, :x)))))))),
      s(:def, :count,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send, nil, :fetch,
                        s(:send,
                          s(:lvar, :x), :-,
                          s(:int, 1)),
                        s(:send,
                          s(:lvar, :y), :-,
                          s(:int, 1))), :+,
                      s(:send, nil, :fetch,
                        s(:lvar, :x),
                        s(:send,
                          s(:lvar, :y), :-,
                          s(:int, 1)))), :+,
                    s(:send, nil, :fetch,
                      s(:send,
                        s(:lvar, :x), :+,
                        s(:int, 1)),
                      s(:send,
                        s(:lvar, :y), :-,
                        s(:int, 1)))), :+,
                  s(:send, nil, :fetch,
                    s(:send,
                      s(:lvar, :x), :-,
                      s(:int, 1)),
                    s(:lvar, :y))), :+,
                s(:send, nil, :fetch,
                  s(:send,
                    s(:lvar, :x), :+,
                    s(:int, 1)),
                  s(:lvar, :y))), :+,
              s(:send, nil, :fetch,
                s(:send,
                  s(:lvar, :x), :-,
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :y), :+,
                  s(:int, 1)))), :+,
            s(:send, nil, :fetch,
              s(:lvar, :x),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 1)))), :+,
          s(:send, nil, :fetch,
            s(:send,
              s(:lvar, :x), :+,
              s(:int, 1)),
            s(:send,
              s(:lvar, :y), :+,
              s(:int, 1))))),
      s(:def, :over,
        s(:args,
          s(:arg, :win)),
        s(:begin,
          s(:send, nil, :quit),
          s(:if,
            s(:lvar, :win), nil,
            s(:begin,
              s(:send, nil, :pos,
                s(:ivar, :@cx),
                s(:ivar, :@cy)),
              s(:send, nil, :print,
                s(:send,
                  s(:const, nil, :CHR), :[],
                  s(:int, 11))))),
          s(:send, nil, :pos,
            s(:int, 0),
            s(:ivar, :@hi)),
          s(:if,
            s(:lvar, :win),
            s(:send, nil, :print,
              s(:str, "*** YOU WIN !! ***")),
            s(:send, nil, :print,
              s(:str, "*** GAME OVER ***"))))),
      s(:def, :over?,
        s(:args),
        s(:begin,
          s(:lvasgn, :remain,
            s(:begin,
              s(:send,
                s(:send,
                  s(:ivar, :@mc), :+,
                  s(:ivar, :@total)), :==,
                s(:int, 0)))),
          s(:if,
            s(:or,
              s(:ivar, :@over),
              s(:lvar, :remain)),
            s(:begin,
              s(:send, nil, :over,
                s(:lvar, :remain)),
              s(:true)),
            s(:false)))),
      s(:def, :quit,
        s(:args),
        s(:block,
          s(:send,
            s(:ivar, :@hi), :times),
          s(:args,
            s(:arg, :y)),
          s(:begin,
            s(:send, nil, :pos,
              s(:int, 0),
              s(:lvar, :y)),
            s(:block,
              s(:send,
                s(:ivar, :@wi), :times),
              s(:args,
                s(:arg, :x)),
              s(:send, nil, :colorstr,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:ivar, :@state), :[],
                      s(:send,
                        s(:send,
                          s(:lvar, :y), :*,
                          s(:ivar, :@wi)), :+,
                        s(:lvar, :x))), :==,
                    s(:str, "MARK")),
                  s(:send,
                    s(:const, nil, :COL), :[],
                    s(:int, 1)),
                  s(:send,
                    s(:const, nil, :COL), :[],
                    s(:int, 2))),
                s(:if,
                  s(:send,
                    s(:send, nil, :fetch,
                      s(:lvar, :x),
                      s(:lvar, :y)), :==,
                    s(:int, 1)),
                  s(:send,
                    s(:const, nil, :CHR), :[],
                    s(:int, 10)),
                  s(:send,
                    s(:const, nil, :CHR), :[],
                    s(:send, nil, :count,
                      s(:lvar, :x),
                      s(:lvar, :y))))))))),
      s(:def, :down,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@cy), :<,
            s(:send,
              s(:ivar, :@hi), :-,
              s(:int, 1))),
          s(:begin,
            s(:ivasgn, :@cy,
              s(:send,
                s(:ivar, :@cy), :+,
                s(:int, 1))),
            s(:send, nil, :pos,
              s(:ivar, :@cx),
              s(:ivar, :@cy))), nil)),
      s(:def, :up,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@cy), :>,
            s(:int, 0)),
          s(:begin,
            s(:ivasgn, :@cy,
              s(:send,
                s(:ivar, :@cy), :-,
                s(:int, 1))),
            s(:send, nil, :pos,
              s(:ivar, :@cx),
              s(:ivar, :@cy))), nil)),
      s(:def, :left,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@cx), :>,
            s(:int, 0)),
          s(:begin,
            s(:ivasgn, :@cx,
              s(:send,
                s(:ivar, :@cx), :-,
                s(:int, 1))),
            s(:send, nil, :pos,
              s(:ivar, :@cx),
              s(:ivar, :@cy))), nil)),
      s(:def, :right,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@cx), :<,
            s(:send,
              s(:ivar, :@wi), :-,
              s(:int, 1))),
          s(:begin,
            s(:ivasgn, :@cx,
              s(:send,
                s(:ivar, :@cx), :+,
                s(:int, 1))),
            s(:send, nil, :pos,
              s(:ivar, :@cx),
              s(:ivar, :@cy))), nil)))),
  s(:lvasgn, :bd,
    s(:send,
      s(:const, nil, :Board), :new,
      s(:int, 10),
      s(:int, 10),
      s(:int, 10))),
  s(:send, nil, :system,
    s(:str, "stty raw -echo")),
  s(:kwbegin,
    s(:ensure,
      s(:block,
        s(:send, nil, :loop),
        s(:args),
        s(:begin,
          s(:case,
            s(:send,
              s(:const, nil, :STDIN), :getc),
            s(:when,
              s(:str, "n"),
              s(:send,
                s(:lvar, :bd), :reset)),
            s(:when,
              s(:str, "m"),
              s(:send,
                s(:lvar, :bd), :mark)),
            s(:when,
              s(:str, "j"),
              s(:send,
                s(:lvar, :bd), :down)),
            s(:when,
              s(:str, "k"),
              s(:send,
                s(:lvar, :bd), :up)),
            s(:when,
              s(:str, "h"),
              s(:send,
                s(:lvar, :bd), :left)),
            s(:when,
              s(:str, "l"),
              s(:send,
                s(:lvar, :bd), :right)),
            s(:when,
              s(:str, " "),
              s(:send,
                s(:lvar, :bd), :open)),
            s(:when,
              s(:str, "q"),
              s(:str, "\u0003"),
              s(:begin,
                s(:send,
                  s(:lvar, :bd), :quit),
                s(:break))), nil),
          s(:if,
            s(:send,
              s(:lvar, :bd), :over?),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:const, nil, :STDIN), :getc), :==,
                  s(:str, "q")),
                s(:break), nil),
              s(:send,
                s(:lvar, :bd), :reset)), nil))),
      s(:send, nil, :system,
        s(:str, "stty -raw echo")))),
  s(:send, nil, :print,
    s(:str, "\n")))
