s(:begin,
  s(:class,
    s(:const, nil, :MyElem), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :item)),
        s(:begin,
          s(:ivasgn, :@data,
            s(:lvar, :item)),
          s(:ivasgn, :@succ,
            s(:nil)),
          s(:ivasgn, :@head,
            s(:nil)))),
      s(:def, :data,
        s(:args),
        s(:ivar, :@data)),
      s(:def, :succ,
        s(:args),
        s(:ivar, :@succ)),
      s(:def, :succ=,
        s(:args,
          s(:arg, :new)),
        s(:ivasgn, :@succ,
          s(:lvar, :new))))),
  s(:class,
    s(:const, nil, :MyList), nil,
    s(:begin,
      s(:def, :add_to_list,
        s(:args,
          s(:arg, :obj)),
        s(:begin,
          s(:lvasgn, :elt,
            s(:send,
              s(:const, nil, :MyElem), :new,
              s(:lvar, :obj))),
          s(:if,
            s(:ivar, :@head),
            s(:send,
              s(:ivar, :@tail), :succ=,
              s(:lvar, :elt)),
            s(:ivasgn, :@head,
              s(:lvar, :elt))),
          s(:ivasgn, :@tail,
            s(:lvar, :elt)))),
      s(:def, :each,
        s(:args),
        s(:begin,
          s(:lvasgn, :elt,
            s(:ivar, :@head)),
          s(:while,
            s(:lvar, :elt),
            s(:begin,
              s(:yield,
                s(:lvar, :elt)),
              s(:lvasgn, :elt,
                s(:send,
                  s(:lvar, :elt), :succ)))))),
      s(:def, :to_s,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:str, "<MyList:\n")),
          s(:for,
            s(:lvasgn, :elt),
            s(:self),
            s(:op_asgn,
              s(:lvasgn, :str), :+,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :elt), :data), :to_s), :+,
                s(:str, "\n")))),
          s(:op_asgn,
            s(:lvasgn, :str), :+,
            s(:str, ">")),
          s(:lvar, :str))))),
  s(:class,
    s(:const, nil, :Point), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :x),
          s(:arg, :y)),
        s(:begin,
          s(:ivasgn, :@x,
            s(:lvar, :x)),
          s(:ivasgn, :@y,
            s(:lvar, :y)),
          s(:self))),
      s(:def, :to_s,
        s(:args),
        s(:send, nil, :sprintf,
          s(:str, "%d@%d"),
          s(:ivar, :@x),
          s(:ivar, :@y))))),
  s(:gvasgn, :$list1,
    s(:send,
      s(:const, nil, :MyList), :new)),
  s(:send,
    s(:gvar, :$list1), :add_to_list,
    s(:int, 10)),
  s(:send,
    s(:gvar, :$list1), :add_to_list,
    s(:int, 20)),
  s(:send,
    s(:gvar, :$list1), :add_to_list,
    s(:send,
      s(:const, nil, :Point), :new,
      s(:int, 2),
      s(:int, 3))),
  s(:send,
    s(:gvar, :$list1), :add_to_list,
    s(:send,
      s(:const, nil, :Point), :new,
      s(:int, 4),
      s(:int, 5))),
  s(:gvasgn, :$list2,
    s(:send,
      s(:const, nil, :MyList), :new)),
  s(:send,
    s(:gvar, :$list2), :add_to_list,
    s(:int, 20)),
  s(:send,
    s(:gvar, :$list2), :add_to_list,
    s(:send,
      s(:const, nil, :Point), :new,
      s(:int, 4),
      s(:int, 5))),
  s(:send,
    s(:gvar, :$list2), :add_to_list,
    s(:gvar, :$list1)),
  s(:send, nil, :print,
    s(:str, "list1:\n"),
    s(:gvar, :$list1),
    s(:str, "\n")),
  s(:send, nil, :print,
    s(:str, "list2:\n"),
    s(:gvar, :$list2),
    s(:str, "\n")))
