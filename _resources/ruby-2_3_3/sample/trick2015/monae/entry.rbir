s(:send, nil, :eval,
  s(:gvasgn, :$s,
    s(:dstr,
      s(:str, "i=1#\n"),
      s(:str, "         eval(%q[        xxxxxxxx\n"),
      s(:str, "        xx  xxxx  xx    xx  xxxx  xx\n"),
      s(:str, "         xx  xxxx  xx    xx  xxxx  xx\n"),
      s(:str, "            xxxxxxxx        xxxxxxxx\n"),
      s(:str, "             xxxxxxxx        xxxxxxxx\n"),
      s(:str, "  xx  xx  xxxxxxxxxx  xx  xxxxxxxx\n"),
      s(:str, "   j,  t,  p=0,[?;],\"  ev  al$s=%qx\n"),
      s(:str, "[\#$s]\".split*\"\";i,j,t=i-j,i+j,(x\n"),
      s(:str, " [b=?\\s]*j.abs+t).map{|s|r=t.shix\n"),
      s(:str, "ft  ||b;r.gsub!(?;){p.slice!0}if  $x\n"),
      s(:str, " f|  |=p>p=p.center(i*i+j*j,?;);r  ,x\n"),
      s(:str, "    s=[s,r]if(i*j<0);(b*i.abs+s).ljx\n"),
      s(:str, "     ust(r.size).gsub(b){r[$`.size]|x\n"),
      s(:str, "  |b}}unti  l$  f;puts(t)#  xx  xx\n"),
      s(:str, "   xxxxxxxx  xx  xxxxxxxxxx  xx  xx\n"),
      s(:str, "xxxxxxxx        xxxxxxxx\n"),
      s(:str, " xxxxxxxx        xxxxxxxx\n"),
      s(:str, "xx  xxxx  xx    xx  xxxx  xx\n"),
      s(:str, " xx  xxxx  xx    xx  xxxx  xx\n"),
      s(:str, "    xxxxxxxx        x].gsub\\\n"),
      s(:str, "     /x.*|\\s/        ,\"\")#"))))
