s(:begin,
  s(:casgn, nil, :TEMPLATE_LINE,
    s(:send,
      s(:int, 4), :+,
      s(:int, 2))),
  s(:casgn, nil, :TEMPLATE,
    s(:dstr,
      s(:str, "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n"),
      s(:str, "<html>\n"),
      s(:str, "<head>\n"),
      s(:str, "  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=<%= encoding %>\">\n"),
      s(:str, "<% if css %>\n"),
      s(:str, "  <link rel=\"stylesheet\" type=\"text/css\" href=\"<%= css %>\">\n"),
      s(:str, "<% end %>\n"),
      s(:str, "  <title><%= File.basename(f.path) %></title>\n"),
      s(:str, "</head>\n"),
      s(:str, "<body>\n"),
      s(:str, "<pre>\n"),
      s(:str, "<%\n"),
      s(:str, "    if print_line_number\n"),
      s(:str, "      Ruby2HTML.compile(f).each_with_index do |line, idx|\n"),
      s(:str, "%><%= sprintf('%4d  %s', idx+1, line) %><%\n"),
      s(:str, "      end\n"),
      s(:str, "    else\n"),
      s(:str, "%><%= Ruby2HTML.compile(f) %><%\n"),
      s(:str, "    end\n"),
      s(:str, "%>\n"),
      s(:str, "</pre>\n"),
      s(:str, "</body>\n"),
      s(:str, "</html>\n"))),
  s(:send, nil, :require,
    s(:str, "ripper")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "erb")),
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:def, :main,
    s(:args),
    s(:begin,
      s(:lvasgn, :encoding,
        s(:str, "us-ascii")),
      s(:lvasgn, :css,
        s(:nil)),
      s(:lvasgn, :print_line_number,
        s(:false)),
      s(:lvasgn, :parser,
        s(:send,
          s(:const, nil, :OptionParser), :new)),
      s(:send,
        s(:lvar, :parser), :banner=,
        s(:dstr,
          s(:str, "Usage: "),
          s(:begin,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:gvar, :$0))),
          s(:str, " [-l] [<file>...]"))),
      s(:block,
        s(:send,
          s(:lvar, :parser), :on,
          s(:str, "--encoding=NAME"),
          s(:str, "Character encoding [us-ascii].")),
        s(:args,
          s(:arg, :name)),
        s(:lvasgn, :encoding,
          s(:lvar, :name))),
      s(:block,
        s(:send,
          s(:lvar, :parser), :on,
          s(:str, "--css=URL"),
          s(:str, "Set a link to CSS.")),
        s(:args,
          s(:arg, :url)),
        s(:lvasgn, :css,
          s(:lvar, :url))),
      s(:block,
        s(:send,
          s(:lvar, :parser), :on,
          s(:str, "-l"),
          s(:str, "--line-number"),
          s(:str, "Show line number.")),
        s(:args),
        s(:lvasgn, :print_line_number,
          s(:true))),
      s(:block,
        s(:send,
          s(:lvar, :parser), :on,
          s(:str, "--help"),
          s(:str, "Prints this message and quit.")),
        s(:args),
        s(:begin,
          s(:send, nil, :puts,
            s(:send,
              s(:lvar, :parser), :help)),
          s(:send, nil, :exit,
            s(:int, 0)))),
      s(:kwbegin,
        s(:rescue,
          s(:send,
            s(:lvar, :parser), :parse!),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :OptionParser), :ParseError)),
            s(:lvasgn, :err),
            s(:begin,
              s(:send,
                s(:gvar, :$stderr), :puts,
                s(:lvar, :err)),
              s(:send,
                s(:gvar, :$stderr), :puts,
                s(:send,
                  s(:lvar, :parser), :help)),
              s(:send, nil, :exit,
                s(:int, 1)))), nil)),
      s(:send, nil, :puts,
        s(:send, nil, :ruby2html,
          s(:const, nil, :ARGF),
          s(:lvar, :encoding),
          s(:lvar, :css),
          s(:lvar, :print_line_number))))),
  s(:class,
    s(:const, nil, :ERB), nil,
    s(:begin,
      s(:send, nil, :attr_accessor,
        s(:sym, :lineno)),
      s(:send, nil, :remove_method,
        s(:sym, :result)),
      s(:def, :result,
        s(:args,
          s(:arg, :b)),
        s(:send, nil, :eval,
          s(:ivar, :@src),
          s(:lvar, :b),
          s(:begin,
            s(:or,
              s(:ivar, :@filename),
              s(:str, "(erb)"))),
          s(:begin,
            s(:or,
              s(:ivar, :@lineno),
              s(:int, 1))))))),
  s(:def, :ruby2html,
    s(:args,
      s(:arg, :f),
      s(:arg, :encoding),
      s(:arg, :css),
      s(:arg, :print_line_number)),
    s(:begin,
      s(:lvasgn, :erb,
        s(:send,
          s(:const, nil, :ERB), :new,
          s(:const, nil, :TEMPLATE),
          s(:nil),
          s(:str, ">"))),
      s(:send,
        s(:lvar, :erb), :filename=,
        s(:str, "(string)")),
      s(:send,
        s(:lvar, :erb), :lineno=,
        s(:const, nil, :TEMPLATE_LINE)),
      s(:send,
        s(:lvar, :erb), :result,
        s(:send, nil, :binding)))),
  s(:class,
    s(:const, nil, :Ruby2HTML),
    s(:const,
      s(:const, nil, :Ripper), :Filter),
    s(:begin,
      s(:defs,
        s(:const, nil, :Ruby2HTML), :compile,
        s(:args,
          s(:arg, :f)),
        s(:begin,
          s(:lvasgn, :buf,
            s(:send,
              s(:const, nil, :StringIO), :new)),
          s(:send,
            s(:send,
              s(:const, nil, :Ruby2HTML), :new,
              s(:lvar, :f)), :parse,
            s(:lvar, :buf)),
          s(:send,
            s(:lvar, :buf), :string))),
      s(:def, :on_default,
        s(:args,
          s(:arg, :event),
          s(:arg, :tok),
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :<<,
          s(:send,
            s(:const, nil, :CGI), :escapeHTML,
            s(:lvar, :tok)))),
      s(:def, :on_kw,
        s(:args,
          s(:arg, :tok),
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :<<,
          s(:dstr,
            s(:str, "<span class=\"resword\">"),
            s(:begin,
              s(:send,
                s(:const, nil, :CGI), :escapeHTML,
                s(:lvar, :tok))),
            s(:str, "</span>")))),
      s(:def, :on_comment,
        s(:args,
          s(:arg, :tok),
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :<<,
          s(:dstr,
            s(:str, "<span class=\"comment\">"),
            s(:begin,
              s(:send,
                s(:const, nil, :CGI), :escapeHTML,
                s(:send,
                  s(:lvar, :tok), :rstrip))),
            s(:str, "</span>\n")))),
      s(:def, :on_tstring_beg,
        s(:args,
          s(:arg, :tok),
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :<<,
          s(:dstr,
            s(:str, "<span class=\"string\">"),
            s(:begin,
              s(:send,
                s(:const, nil, :CGI), :escapeHTML,
                s(:lvar, :tok)))))),
      s(:def, :on_tstring_end,
        s(:args,
          s(:arg, :tok),
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :<<,
          s(:dstr,
            s(:begin,
              s(:send,
                s(:const, nil, :CGI), :escapeHTML,
                s(:lvar, :tok))),
            s(:str, "</span>")))))),
  s(:if,
    s(:send,
      s(:gvar, :$0), :==,
      s(:str, "(string)")),
    s(:send, nil, :main), nil))
