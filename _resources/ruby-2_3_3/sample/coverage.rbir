s(:begin,
  s(:send, nil, :require,
    s(:str, "coverage.so")),
  s(:send,
    s(:const, nil, :Coverage), :start),
  s(:lvasgn, :ext,
    s(:or,
      s(:send,
        s(:const, nil, :ENV), :[],
        s(:str, "COVERUBY_EXT")),
      s(:str, ".cov"))),
  s(:lvasgn, :accum,
    s(:send,
      s(:const, nil, :ENV), :[],
      s(:str, "COVERUBY_ACCUM"))),
  s(:lvasgn, :accum,
    s(:or,
      s(:or,
        s(:send,
          s(:lvar, :accum), :!),
        s(:send,
          s(:lvar, :accum), :==,
          s(:str, ""))),
      s(:send,
        s(:begin,
          s(:send,
            s(:array,
              s(:str, "f"),
              s(:str, "n"),
              s(:str, "0")), :include?,
            s(:send,
              s(:lvar, :accum), :[],
              s(:int, 0)))), :!))),
  s(:lvasgn, :pwd,
    s(:send,
      s(:const, nil, :Dir), :pwd)),
  s(:block,
    s(:send, nil, :at_exit),
    s(:args),
    s(:begin,
      s(:lvasgn, :exit_exc,
        s(:gvar, :$!)),
      s(:block,
        s(:send,
          s(:const, nil, :Dir), :chdir,
          s(:lvar, :pwd)),
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Coverage), :result), :each),
          s(:args,
            s(:arg, :sfile),
            s(:arg, :covs)),
          s(:begin,
            s(:lvasgn, :cfile,
              s(:send,
                s(:lvar, :sfile), :+,
                s(:lvar, :ext))),
            s(:lvasgn, :writable,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :f)),
                s(:or,
                  s(:send,
                    s(:const, nil, :File), :writable?,
                    s(:lvar, :f)),
                  s(:send,
                    s(:const, nil, :File), :writable?,
                    s(:send,
                      s(:const, nil, :File), :dirname,
                      s(:lvar, :f)))))),
            s(:if,
              s(:send,
                s(:lvar, :writable), :[],
                s(:lvar, :cfile)), nil,
              s(:begin,
                s(:lvasgn, :cfile,
                  s(:send,
                    s(:lvar, :cfile), :gsub,
                    s(:const,
                      s(:const, nil, :File), :PATH_SEPARATOR),
                    s(:str, "#"))),
                s(:if,
                  s(:send,
                    s(:lvar, :writable), :[],
                    s(:lvar, :cfile)), nil,
                  s(:next)))),
            s(:lvasgn, :readlines,
              s(:block,
                s(:send, nil, :proc),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:const, nil, :File), :read,
                        s(:lvar, :f)), :force_encoding,
                      s(:str, "ASCII-8BIT")), :lines), :to_a))),
            s(:lvasgn, :sources,
              s(:begin,
                s(:rescue,
                  s(:send,
                    s(:lvar, :readlines), :[],
                    s(:lvar, :sfile)),
                  s(:resbody, nil, nil,
                    s(:array)), nil))),
            s(:lvasgn, :pcovs,
              s(:array)),
            s(:if,
              s(:lvar, :accum),
              s(:begin,
                s(:lvasgn, :pcovs,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:begin,
                          s(:rescue,
                            s(:send,
                              s(:lvar, :readlines), :[],
                              s(:lvar, :cfile)),
                            s(:resbody, nil, nil,
                              s(:array)), nil)), :map), :with_index),
                    s(:args,
                      s(:arg, :line),
                      s(:arg, :idx)),
                    s(:if,
                      s(:send,
                        s(:lvar, :line), :[],
                        s(:regexp,
                          s(:str, "^\\s*(?:(#####)|(\\d+)|-):\\s*\\d+:(.*)$"),
                          s(:regopt, :n))),
                      s(:begin,
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :cov),
                            s(:lvasgn, :line)),
                          s(:array,
                            s(:if,
                              s(:nth_ref, 1),
                              s(:int, 0),
                              s(:begin,
                                s(:if,
                                  s(:nth_ref, 2),
                                  s(:send,
                                    s(:nth_ref, 2), :to_i),
                                  s(:nil)))),
                            s(:nth_ref, 3))),
                        s(:if,
                          s(:or,
                            s(:send,
                              s(:send,
                                s(:lvar, :sources), :[],
                                s(:lvar, :idx)), :!),
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:lvar, :sources), :[],
                                  s(:lvar, :idx)), :chomp), :!=,
                              s(:send,
                                s(:lvar, :line), :chomp))),
                          s(:begin,
                            s(:send, nil, :warn,
                              s(:dstr,
                                s(:str, "source file changed, ignoring: `"),
                                s(:begin,
                                  s(:lvar, :cfile)),
                                s(:str, "'"))),
                            s(:break,
                              s(:array))), nil),
                        s(:lvar, :cov)),
                      s(:begin,
                        s(:send, nil, :p,
                          s(:lvar, :line)),
                        s(:send, nil, :warn,
                          s(:dstr,
                            s(:str, "coverage file corrupted, ignoring: "),
                            s(:begin,
                              s(:lvar, :cfile)))),
                        s(:break,
                          s(:array)))))),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :pcovs), :empty?),
                    s(:send,
                      s(:send,
                        s(:lvar, :pcovs), :size), :==,
                      s(:send,
                        s(:lvar, :covs), :size))), nil,
                  s(:begin,
                    s(:send, nil, :warn,
                      s(:dstr,
                        s(:str, "coverage file changed, ignoring: `"),
                        s(:begin,
                          s(:lvar, :cfile)),
                        s(:str, "'"))),
                    s(:lvasgn, :pcovs,
                      s(:array))))), nil),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :cfile),
                s(:str, "w")),
              s(:args,
                s(:arg, :out)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :covs), :zip,
                    s(:lvar, :sources),
                    s(:lvar, :pcovs)), :each_with_index),
                s(:args,
                  s(:mlhs,
                    s(:arg, :cov),
                    s(:arg, :line),
                    s(:arg, :pcov)),
                  s(:arg, :idx)),
                s(:begin,
                  s(:if,
                    s(:lvar, :cov),
                    s(:op_asgn,
                      s(:lvasgn, :cov), :+,
                      s(:or,
                        s(:lvar, :pcov),
                        s(:int, 0))), nil),
                  s(:lvasgn, :cov,
                    s(:send,
                      s(:begin,
                        s(:if,
                          s(:lvar, :cov),
                          s(:begin,
                            s(:if,
                              s(:send,
                                s(:lvar, :cov), :==,
                                s(:int, 0)),
                              s(:str, "#####"),
                              s(:send,
                                s(:lvar, :cov), :to_s))),
                          s(:str, "-"))), :rjust,
                      s(:int, 9))),
                  s(:send,
                    s(:lvar, :out), :puts,
                    s(:send,
                      s(:str, "%s:% 5d:%s"), :%,
                      s(:array,
                        s(:lvar, :cov),
                        s(:send,
                          s(:lvar, :idx), :+,
                          s(:int, 1)),
                        s(:lvar, :line)))))))))),
      s(:if,
        s(:lvar, :exit_exc),
        s(:send, nil, :raise,
          s(:lvar, :exit_exc)), nil))))
