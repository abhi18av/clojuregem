s(:begin,
  s(:send, nil, :require,
    s(:str, "socket")),
  s(:lvasgn, :gs,
    s(:send,
      s(:const, nil, :TCPServer), :open,
      s(:int, 0))),
  s(:lvasgn, :addr,
    s(:send,
      s(:lvar, :gs), :addr)),
  s(:send,
    s(:lvar, :addr), :shift),
  s(:send, nil, :printf,
    s(:str, "server is on %s\n"),
    s(:send,
      s(:lvar, :addr), :join,
      s(:str, ":"))),
  s(:lvasgn, :socks,
    s(:array,
      s(:lvar, :gs))),
  s(:block,
    s(:send, nil, :loop),
    s(:args),
    s(:begin,
      s(:lvasgn, :nsock,
        s(:send, nil, :select,
          s(:lvar, :socks))),
      s(:if,
        s(:send,
          s(:lvar, :nsock), :==,
          s(:nil)),
        s(:next), nil),
      s(:for,
        s(:lvasgn, :s),
        s(:send,
          s(:lvar, :nsock), :[],
          s(:int, 0)),
        s(:if,
          s(:send,
            s(:lvar, :s), :==,
            s(:lvar, :gs)),
          s(:begin,
            s(:lvasgn, :ns,
              s(:send,
                s(:lvar, :s), :accept)),
            s(:send,
              s(:lvar, :socks), :push,
              s(:lvar, :ns)),
            s(:send, nil, :print,
              s(:lvar, :s),
              s(:str, " is accepted\n"))),
          s(:if,
            s(:send,
              s(:lvar, :s), :eof?),
            s(:begin,
              s(:send, nil, :print,
                s(:lvar, :s),
                s(:str, " is gone\n")),
              s(:send,
                s(:lvar, :s), :close),
              s(:send,
                s(:lvar, :socks), :delete,
                s(:lvar, :s))),
            s(:if,
              s(:lvasgn, :str,
                s(:send,
                  s(:lvar, :s), :gets)),
              s(:send,
                s(:lvar, :s), :write,
                s(:lvar, :str)), nil)))))))
