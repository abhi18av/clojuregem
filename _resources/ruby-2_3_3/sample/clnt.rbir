s(:begin,
  s(:send, nil, :require,
    s(:str, "socket")),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :ARGV), :length), :>=,
      s(:int, 2)),
    s(:lvasgn, :host,
      s(:send,
        s(:const, nil, :ARGV), :shift)),
    s(:lvasgn, :host,
      s(:str, "localhost"))),
  s(:send, nil, :print,
    s(:str, "Trying "),
    s(:lvar, :host),
    s(:str, " ...")),
  s(:send,
    s(:const, nil, :STDOUT), :flush),
  s(:lvasgn, :s,
    s(:send,
      s(:const, nil, :TCPSocket), :open,
      s(:lvar, :host),
      s(:send,
        s(:const, nil, :ARGV), :shift))),
  s(:send, nil, :print,
    s(:str, " done\n")),
  s(:send, nil, :print,
    s(:str, "addr: "),
    s(:send,
      s(:send,
        s(:lvar, :s), :addr), :join,
      s(:str, ":")),
    s(:str, "\n")),
  s(:send, nil, :print,
    s(:str, "peer: "),
    s(:send,
      s(:send,
        s(:lvar, :s), :peeraddr), :join,
      s(:str, ":")),
    s(:str, "\n")),
  s(:while,
    s(:lvasgn, :line,
      s(:send, nil, :gets)),
    s(:begin,
      s(:send,
        s(:lvar, :s), :write,
        s(:lvar, :line)),
      s(:send, nil, :print,
        s(:send,
          s(:lvar, :s), :readline)))),
  s(:send,
    s(:lvar, :s), :close))
