s(:begin,
  s(:lvasgn, :line,
    s(:str, "")),
  s(:lvasgn, :indent,
    s(:int, 0)),
  s(:send,
    s(:gvar, :$stdout), :sync=,
    s(:true)),
  s(:send, nil, :print,
    s(:str, "ruby> ")),
  s(:block,
    s(:send, nil, :loop),
    s(:args),
    s(:begin,
      s(:lvasgn, :l,
        s(:send, nil, :gets)),
      s(:if,
        s(:send,
          s(:lvar, :l), :nil?),
        s(:if,
          s(:send,
            s(:lvar, :line), :empty?),
          s(:break), nil),
        s(:begin,
          s(:op_asgn,
            s(:lvasgn, :line), :+,
            s(:lvar, :l)),
          s(:if,
            s(:send,
              s(:lvar, :l), :=~,
              s(:regexp,
                s(:str, ",\\s*$"),
                s(:regopt))),
            s(:begin,
              s(:send, nil, :print,
                s(:str, "ruby| ")),
              s(:next)), nil),
          s(:if,
            s(:send,
              s(:lvar, :l), :=~,
              s(:regexp,
                s(:str, "^\\s*(class|module|def|if|unless|case|while|until|for|begin)\\b[^_]"),
                s(:regopt))),
            s(:op_asgn,
              s(:lvasgn, :indent), :+,
              s(:int, 1)), nil),
          s(:if,
            s(:send,
              s(:lvar, :l), :=~,
              s(:regexp,
                s(:str, "^\\s*end\\b[^_]"),
                s(:regopt))),
            s(:op_asgn,
              s(:lvasgn, :indent), :-,
              s(:int, 1)), nil),
          s(:if,
            s(:send,
              s(:lvar, :l), :=~,
              s(:regexp,
                s(:str, "\\{\\s*(\\|.*\\|)?\\s*$"),
                s(:regopt))),
            s(:op_asgn,
              s(:lvasgn, :indent), :+,
              s(:int, 1)), nil),
          s(:if,
            s(:send,
              s(:lvar, :l), :=~,
              s(:regexp,
                s(:str, "^\\s*\\}"),
                s(:regopt))),
            s(:op_asgn,
              s(:lvasgn, :indent), :-,
              s(:int, 1)), nil),
          s(:if,
            s(:send,
              s(:lvar, :indent), :>,
              s(:int, 0)),
            s(:begin,
              s(:send, nil, :print,
                s(:str, "ruby| ")),
              s(:next)), nil))),
      s(:kwbegin,
        s(:rescue,
          s(:send, nil, :print,
            s(:send,
              s(:send, nil, :eval,
                s(:lvar, :line)), :inspect),
            s(:str, "\n")),
          s(:resbody,
            s(:array,
              s(:const, nil, :ScriptError),
              s(:const, nil, :StandardError)), nil,
            s(:send, nil, :printf,
              s(:str, "ERR: %s\n"),
              s(:or,
                s(:gvar, :$!),
                s(:str, "exception raised")))), nil)),
      s(:if,
        s(:send,
          s(:lvar, :l), :nil?),
        s(:break), nil),
      s(:lvasgn, :line,
        s(:str, "")),
      s(:send, nil, :print,
        s(:str, "ruby> ")))),
  s(:send, nil, :print,
    s(:str, "\n")))
