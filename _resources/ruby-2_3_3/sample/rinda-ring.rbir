s(:begin,
  s(:send, nil, :require,
    s(:str, "rinda/ring")),
  s(:send,
    s(:const, nil, :DRb), :start_service),
  s(:case,
    s(:send,
      s(:const, nil, :ARGV), :shift),
    s(:when,
      s(:str, "s"),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "rinda/tuplespace")),
        s(:lvasgn, :ts,
          s(:send,
            s(:const,
              s(:const, nil, :Rinda), :TupleSpace), :new)),
        s(:send,
          s(:const,
            s(:const, nil, :Rinda), :RingServer), :new,
          s(:lvar, :ts)),
        s(:send,
          s(:gvar, :$stdin), :gets))),
    s(:when,
      s(:str, "w"),
      s(:begin,
        s(:lvasgn, :finger,
          s(:send,
            s(:const,
              s(:const, nil, :Rinda), :RingFinger), :new,
            s(:nil))),
        s(:block,
          s(:send,
            s(:lvar, :finger), :lookup_ring),
          s(:args,
            s(:arg, :ts2)),
          s(:begin,
            s(:send, nil, :p,
              s(:lvar, :ts2)),
            s(:send,
              s(:lvar, :ts2), :write,
              s(:array,
                s(:sym, :hello),
                s(:sym, :world))))))),
    s(:when,
      s(:str, "r"),
      s(:begin,
        s(:lvasgn, :finger,
          s(:send,
            s(:const,
              s(:const, nil, :Rinda), :RingFinger), :new,
            s(:nil))),
        s(:block,
          s(:send,
            s(:lvar, :finger), :lookup_ring),
          s(:args,
            s(:arg, :ts2)),
          s(:begin,
            s(:send, nil, :p,
              s(:lvar, :ts2)),
            s(:send, nil, :p,
              s(:send,
                s(:lvar, :ts2), :take,
                s(:array,
                  s(:nil),
                  s(:nil)))))))), nil))
