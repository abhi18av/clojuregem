s(:begin,
  s(:send, nil, :require,
    s(:str, "net/imap")),
  s(:send, nil, :require,
    s(:str, "getoptlong")),
  s(:send,
    s(:gvar, :$stdout), :sync=,
    s(:true)),
  s(:gvasgn, :$port,
    s(:nil)),
  s(:gvasgn, :$user,
    s(:or,
      s(:send,
        s(:const, nil, :ENV), :[],
        s(:str, "USER")),
      s(:send,
        s(:const, nil, :ENV), :[],
        s(:str, "LOGNAME")))),
  s(:gvasgn, :$auth,
    s(:str, "login")),
  s(:gvasgn, :$ssl,
    s(:false)),
  s(:gvasgn, :$starttls,
    s(:false)),
  s(:def, :usage,
    s(:args),
    s(:dstr,
      s(:str, "usage: "),
      s(:begin,
        s(:gvar, :$0)),
      s(:str, " [options] <host>\n"),
      s(:str, "\n"),
      s(:str, "  --help                        print this message\n"),
      s(:str, "  --port=PORT                   specifies port\n"),
      s(:str, "  --user=USER                   specifies user\n"),
      s(:str, "  --auth=AUTH                   specifies auth type\n"),
      s(:str, "  --starttls                    use starttls\n"),
      s(:str, "  --ssl                         use ssl\n"))),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "io/console")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil,
        s(:def, :_noecho,
          s(:args,
            s(:blockarg, :block)),
          s(:begin,
            s(:send, nil, :system,
              s(:str, "stty"),
              s(:str, "-echo")),
            s(:kwbegin,
              s(:ensure,
                s(:yield,
                  s(:const, nil, :STDIN)),
                s(:send, nil, :system,
                  s(:str, "stty"),
                  s(:str, "echo"))))))),
      s(:def, :_noecho,
        s(:args,
          s(:blockarg, :block)),
        s(:send,
          s(:const, nil, :STDIN), :noecho,
          s(:block_pass,
            s(:lvar, :block)))))),
  s(:def, :get_password,
    s(:args),
    s(:begin,
      s(:send, nil, :print,
        s(:str, "password: ")),
      s(:kwbegin,
        s(:ensure,
          s(:return,
            s(:send,
              s(:send, nil, :_noecho,
                s(:block_pass,
                  s(:sym, :gets))), :chomp)),
          s(:send, nil, :puts))))),
  s(:def, :get_command,
    s(:args),
    s(:begin,
      s(:send, nil, :printf,
        s(:str, "%s@%s> "),
        s(:gvar, :$user),
        s(:gvar, :$host)),
      s(:if,
        s(:lvasgn, :line,
          s(:send, nil, :gets)),
        s(:return,
          s(:send,
            s(:send,
              s(:lvar, :line), :strip), :split,
            s(:regexp,
              s(:str, "\\s+"),
              s(:regopt)))),
        s(:return,
          s(:nil))))),
  s(:lvasgn, :parser,
    s(:send,
      s(:const, nil, :GetoptLong), :new)),
  s(:send,
    s(:lvar, :parser), :set_options,
    s(:array,
      s(:str, "--debug"),
      s(:const,
        s(:const, nil, :GetoptLong), :NO_ARGUMENT)),
    s(:array,
      s(:str, "--help"),
      s(:const,
        s(:const, nil, :GetoptLong), :NO_ARGUMENT)),
    s(:array,
      s(:str, "--port"),
      s(:const,
        s(:const, nil, :GetoptLong), :REQUIRED_ARGUMENT)),
    s(:array,
      s(:str, "--user"),
      s(:const,
        s(:const, nil, :GetoptLong), :REQUIRED_ARGUMENT)),
    s(:array,
      s(:str, "--auth"),
      s(:const,
        s(:const, nil, :GetoptLong), :REQUIRED_ARGUMENT)),
    s(:array,
      s(:str, "--starttls"),
      s(:const,
        s(:const, nil, :GetoptLong), :NO_ARGUMENT)),
    s(:array,
      s(:str, "--ssl"),
      s(:const,
        s(:const, nil, :GetoptLong), :NO_ARGUMENT))),
  s(:kwbegin,
    s(:rescue,
      s(:block,
        s(:send,
          s(:lvar, :parser), :each_option),
        s(:args,
          s(:arg, :name),
          s(:arg, :arg)),
        s(:case,
          s(:lvar, :name),
          s(:when,
            s(:str, "--port"),
            s(:gvasgn, :$port,
              s(:lvar, :arg))),
          s(:when,
            s(:str, "--user"),
            s(:gvasgn, :$user,
              s(:lvar, :arg))),
          s(:when,
            s(:str, "--auth"),
            s(:gvasgn, :$auth,
              s(:lvar, :arg))),
          s(:when,
            s(:str, "--ssl"),
            s(:gvasgn, :$ssl,
              s(:true))),
          s(:when,
            s(:str, "--starttls"),
            s(:gvasgn, :$starttls,
              s(:true))),
          s(:when,
            s(:str, "--debug"),
            s(:send,
              s(:const,
                s(:const, nil, :Net), :IMAP), :debug=,
              s(:true))),
          s(:when,
            s(:str, "--help"),
            s(:begin,
              s(:send, nil, :usage),
              s(:send, nil, :exit))), nil)),
      s(:resbody, nil, nil,
        s(:send, nil, :abort,
          s(:send, nil, :usage))), nil)),
  s(:gvasgn, :$host,
    s(:send,
      s(:const, nil, :ARGV), :shift)),
  s(:if,
    s(:gvar, :$host), nil,
    s(:send, nil, :abort,
      s(:send, nil, :usage))),
  s(:lvasgn, :imap,
    s(:send,
      s(:const,
        s(:const, nil, :Net), :IMAP), :new,
      s(:gvar, :$host),
      s(:hash,
        s(:pair,
          s(:sym, :port),
          s(:gvar, :$port)),
        s(:pair,
          s(:sym, :ssl),
          s(:gvar, :$ssl))))),
  s(:kwbegin,
    s(:ensure,
      s(:begin,
        s(:if,
          s(:gvar, :$starttls),
          s(:send,
            s(:lvar, :imap), :starttls), nil),
        s(:sclass,
          s(:lvasgn, :password,
            s(:send, nil, :method,
              s(:sym, :get_password))),
          s(:alias,
            s(:sym, :to_str),
            s(:sym, :call))),
        s(:send,
          s(:lvar, :imap), :authenticate,
          s(:gvar, :$auth),
          s(:gvar, :$user),
          s(:lvar, :password)),
        s(:while,
          s(:true),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :cmd),
                s(:splat,
                  s(:lvasgn, :args))),
              s(:send, nil, :get_command)),
            s(:if,
              s(:lvar, :cmd), nil,
              s(:break)),
            s(:kwbegin,
              s(:rescue,
                s(:case,
                  s(:lvar, :cmd),
                  s(:when,
                    s(:str, "list"),
                    s(:for,
                      s(:lvasgn, :mbox),
                      s(:send,
                        s(:lvar, :imap), :list,
                        s(:str, ""),
                        s(:or,
                          s(:send,
                            s(:lvar, :args), :[],
                            s(:int, 0)),
                          s(:str, "*"))),
                      s(:begin,
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :mbox), :attr), :include?,
                            s(:const,
                              s(:const,
                                s(:const, nil, :Net), :IMAP), :NOSELECT)),
                          s(:lvasgn, :prefix,
                            s(:str, "!")),
                          s(:if,
                            s(:send,
                              s(:send,
                                s(:lvar, :mbox), :attr), :include?,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Net), :IMAP), :MARKED)),
                            s(:lvasgn, :prefix,
                              s(:str, "*")),
                            s(:lvasgn, :prefix,
                              s(:str, " ")))),
                        s(:send, nil, :print,
                          s(:lvar, :prefix),
                          s(:send,
                            s(:lvar, :mbox), :name),
                          s(:str, "\n"))))),
                  s(:when,
                    s(:str, "select"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :imap), :select,
                        s(:or,
                          s(:send,
                            s(:lvar, :args), :[],
                            s(:int, 0)),
                          s(:str, "inbox"))),
                      s(:send, nil, :print,
                        s(:str, "ok\n")))),
                  s(:when,
                    s(:str, "close"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :imap), :close),
                      s(:send, nil, :print,
                        s(:str, "ok\n")))),
                  s(:when,
                    s(:str, "summary"),
                    s(:begin,
                      s(:if,
                        s(:lvasgn, :messages,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:lvar, :imap), :responses), :[],
                              s(:str, "EXISTS")), :[],
                            s(:int, -1))), nil,
                        s(:begin,
                          s(:send, nil, :puts,
                            s(:str, "not selected")),
                          s(:next))),
                      s(:if,
                        s(:send,
                          s(:lvar, :messages), :>,
                          s(:int, 0)),
                        s(:for,
                          s(:lvasgn, :data),
                          s(:send,
                            s(:lvar, :imap), :fetch,
                            s(:irange,
                              s(:int, 1),
                              s(:int, -1)),
                            s(:array,
                              s(:str, "ENVELOPE"))),
                          s(:send, nil, :print,
                            s(:send,
                              s(:lvar, :data), :seqno),
                            s(:str, ": "),
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:lvar, :data), :attr), :[],
                                s(:str, "ENVELOPE")), :subject),
                            s(:str, "\n"))),
                        s(:send, nil, :puts,
                          s(:str, "no message"))))),
                  s(:when,
                    s(:str, "fetch"),
                    s(:if,
                      s(:send,
                        s(:lvar, :args), :[],
                        s(:int, 0)),
                      s(:begin,
                        s(:lvasgn, :data,
                          s(:send,
                            s(:send,
                              s(:lvar, :imap), :fetch,
                              s(:send,
                                s(:send,
                                  s(:lvar, :args), :[],
                                  s(:int, 0)), :to_i),
                              s(:array,
                                s(:str, "RFC822.HEADER"),
                                s(:str, "RFC822.TEXT"))), :[],
                            s(:int, 0))),
                        s(:send, nil, :puts,
                          s(:send,
                            s(:send,
                              s(:lvar, :data), :attr), :[],
                            s(:str, "RFC822.HEADER"))),
                        s(:send, nil, :puts,
                          s(:send,
                            s(:send,
                              s(:lvar, :data), :attr), :[],
                            s(:str, "RFC822.TEXT")))),
                      s(:send, nil, :puts,
                        s(:str, "missing argument")))),
                  s(:when,
                    s(:str, "logout"),
                    s(:str, "exit"),
                    s(:str, "quit"),
                    s(:break)),
                  s(:when,
                    s(:str, "help"),
                    s(:str, "?"),
                    s(:send, nil, :print,
                      s(:dstr,
                        s(:str, "list [pattern]                  list mailboxes\n"),
                        s(:str, "select [mailbox]                select mailbox\n"),
                        s(:str, "close                           close mailbox\n"),
                        s(:str, "summary                         display summary\n"),
                        s(:str, "fetch [msgno]                   display message\n"),
                        s(:str, "logout                          logout\n"),
                        s(:str, "help, ?                         display help message\n")))),
                  s(:send, nil, :print,
                    s(:str, "unknown command: "),
                    s(:lvar, :cmd),
                    s(:str, "\n"))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Net), :IMAP), :Error)), nil,
                  s(:send, nil, :puts,
                    s(:gvar, :$!))), nil))))),
      s(:begin,
        s(:send,
          s(:lvar, :imap), :logout),
        s(:send,
          s(:lvar, :imap), :disconnect)))))
