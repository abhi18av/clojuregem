s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:defs,
    s(:const, nil, :ARGV), :shift,
    s(:args),
    s(:begin,
      s(:lvasgn, :it,
        s(:super)),
      s(:if,
        s(:lvar, :it), nil,
        s(:send, nil, :raise,
          s(:dstr,
            s(:str, "usage:\nserver: "),
            s(:begin,
              s(:gvar, :$0)),
            s(:str, " server [<uri>]\nclient: "),
            s(:begin,
              s(:gvar, :$0)),
            s(:str, " [quit] <uri>")))),
      s(:lvar, :it))),
  s(:class,
    s(:const, nil, :Foo), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :DRbUndumped)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :str)),
        s(:ivasgn, :@str,
          s(:lvar, :str))),
      s(:def, :hello,
        s(:args,
          s(:arg, :it)),
        s(:dstr,
          s(:begin,
            s(:lvar, :it)),
          s(:str, ": "),
          s(:begin,
            s(:self)))),
      s(:def, :to_s,
        s(:args),
        s(:ivar, :@str)))),
  s(:lvasgn, :cmd,
    s(:send,
      s(:const, nil, :ARGV), :shift)),
  s(:case,
    s(:lvar, :cmd),
    s(:when,
      s(:str, "itest1"),
      s(:str, "itest2"),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "drb/extserv")),
        s(:lvasgn, :front,
          s(:send,
            s(:const, nil, :Foo), :new,
            s(:lvar, :cmd))),
        s(:lvasgn, :server,
          s(:send,
            s(:const,
              s(:const, nil, :DRb), :DRbServer), :new,
            s(:nil),
            s(:lvar, :front))),
        s(:lvasgn, :es,
          s(:send,
            s(:const,
              s(:const, nil, :DRb), :ExtServ), :new,
            s(:send,
              s(:const, nil, :ARGV), :shift),
            s(:send,
              s(:const, nil, :ARGV), :shift),
            s(:lvar, :server))),
        s(:send,
          s(:send,
            s(:lvar, :server), :thread), :join))),
    s(:when,
      s(:str, "server"),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "drb/extservm")),
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :DRb), :ExtServManager), :command), :[]=,
          s(:str, "itest1"),
          s(:dstr,
            s(:str, "ruby -I. "),
            s(:begin,
              s(:gvar, :$0)),
            s(:str, " itest1"))),
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :DRb), :ExtServManager), :command), :[]=,
          s(:str, "itest2"),
          s(:dstr,
            s(:str, "ruby -I. "),
            s(:begin,
              s(:gvar, :$0)),
            s(:str, " itest2"))),
        s(:lvasgn, :s,
          s(:send,
            s(:const,
              s(:const, nil, :DRb), :ExtServManager), :new)),
        s(:send,
          s(:const, nil, :DRb), :start_service,
          s(:send,
            s(:const, nil, :ARGV), :shift),
          s(:lvar, :s)),
        s(:send, nil, :puts,
          s(:send,
            s(:const, nil, :DRb), :uri)),
        s(:send,
          s(:send,
            s(:const, nil, :DRb), :thread), :join))),
    s(:begin,
      s(:lvasgn, :uri,
        s(:if,
          s(:begin,
            s(:send,
              s(:lvar, :cmd), :==,
              s(:str, "quit"))),
          s(:send,
            s(:const, nil, :ARGV), :shift),
          s(:lvar, :cmd))),
      s(:send,
        s(:const, nil, :DRb), :start_service),
      s(:lvasgn, :s,
        s(:send,
          s(:const, nil, :DRbObject), :new,
          s(:nil),
          s(:lvar, :uri))),
      s(:lvasgn, :t1,
        s(:send,
          s(:send,
            s(:lvar, :s), :service,
            s(:str, "itest1")), :front)),
      s(:send, nil, :puts,
        s(:lvar, :t1)),
      s(:lvasgn, :t2,
        s(:send,
          s(:send,
            s(:lvar, :s), :service,
            s(:str, "itest2")), :front)),
      s(:send, nil, :puts,
        s(:lvar, :t2)),
      s(:send, nil, :puts,
        s(:send,
          s(:lvar, :t1), :hello,
          s(:lvar, :t2))),
      s(:if,
        s(:begin,
          s(:send,
            s(:lvar, :cmd), :==,
            s(:str, "quit"))),
        s(:begin,
          s(:send,
            s(:send,
              s(:lvar, :s), :service,
              s(:str, "itest1")), :stop_service),
          s(:send,
            s(:send,
              s(:lvar, :s), :service,
              s(:str, "itest2")), :stop_service)), nil))))
