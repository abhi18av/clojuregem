s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:class,
    s(:const, nil, :SimpleTupleSpace), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args),
        s(:begin,
          s(:ivasgn, :@hash,
            s(:hash)),
          s(:ivasgn, :@waiting,
            s(:hash)),
          s(:send,
            s(:ivar, :@hash), :taint),
          s(:send,
            s(:ivar, :@waiting), :taint),
          s(:send,
            s(:self), :taint))),
      s(:def, :out,
        s(:args,
          s(:arg, :key),
          s(:arg, :obj)),
        s(:begin,
          s(:send,
            s(:const, nil, :Thread), :critical=,
            s(:true)),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@hash), :[],
              s(:lvar, :key)),
            s(:array)),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@waiting), :[],
              s(:lvar, :key)),
            s(:array)),
          s(:send,
            s(:send,
              s(:ivar, :@hash), :[],
              s(:lvar, :key)), :push,
            s(:lvar, :obj)),
          s(:kwbegin,
            s(:ensure,
              s(:rescue,
                s(:begin,
                  s(:lvasgn, :t,
                    s(:send,
                      s(:send,
                        s(:ivar, :@waiting), :[],
                        s(:lvar, :key)), :shift)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:ivar, :@waiting), :[],
                          s(:lvar, :key)), :length), :==,
                      s(:int, 0)),
                    s(:send,
                      s(:ivar, :@waiting), :delete,
                      s(:lvar, :key)), nil),
                  s(:if,
                    s(:lvar, :t),
                    s(:send,
                      s(:lvar, :t), :wakeup), nil)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :ThreadError)), nil,
                  s(:retry)), nil),
              s(:send,
                s(:const, nil, :Thread), :critical=,
                s(:false)))))),
      s(:def, :in,
        s(:args,
          s(:arg, :key)),
        s(:begin,
          s(:send,
            s(:const, nil, :Thread), :critical=,
            s(:true)),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@hash), :[],
              s(:lvar, :key)),
            s(:array)),
          s(:or_asgn,
            s(:send,
              s(:ivar, :@waiting), :[],
              s(:lvar, :key)),
            s(:array)),
          s(:kwbegin,
            s(:ensure,
              s(:block,
                s(:send, nil, :loop),
                s(:args),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@hash), :[],
                        s(:lvar, :key)), :length), :==,
                    s(:int, 0)),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:ivar, :@waiting), :[],
                        s(:lvar, :key)), :push,
                      s(:send,
                        s(:const, nil, :Thread), :current)),
                    s(:send,
                      s(:const, nil, :Thread), :stop)),
                  s(:return,
                    s(:send,
                      s(:send,
                        s(:ivar, :@hash), :[],
                        s(:lvar, :key)), :shift)))),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:ivar, :@hash), :[],
                        s(:lvar, :key)), :length), :==,
                    s(:int, 0)),
                  s(:send,
                    s(:ivar, :@hash), :delete,
                    s(:lvar, :key)), nil),
                s(:send,
                  s(:const, nil, :Thread), :critical=,
                  s(:false))))))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:begin,
      s(:lvasgn, :ts,
        s(:send,
          s(:const, nil, :SimpleTupleSpace), :new)),
      s(:lvasgn, :clients,
        s(:array)),
      s(:lvasgn, :servers,
        s(:array)),
      s(:def, :server,
        s(:args,
          s(:arg, :ts)),
        s(:block,
          s(:send,
            s(:const, nil, :Thread), :start),
          s(:args),
          s(:block,
            s(:send, nil, :loop),
            s(:args),
            s(:begin,
              s(:lvasgn, :req,
                s(:send,
                  s(:lvar, :ts), :in,
                  s(:str, "req"))),
              s(:lvasgn, :ac,
                s(:send,
                  s(:lvar, :req), :[],
                  s(:int, 0))),
              s(:lvasgn, :num,
                s(:send,
                  s(:lvar, :req), :[],
                  s(:int, 1))),
              s(:send,
                s(:lvar, :ts), :out,
                s(:lvar, :ac),
                s(:send,
                  s(:lvar, :num), :*,
                  s(:lvar, :num))))))),
      s(:def, :client,
        s(:args,
          s(:arg, :ts),
          s(:arg, :n)),
        s(:block,
          s(:send,
            s(:const, nil, :Thread), :start),
          s(:args),
          s(:begin,
            s(:lvasgn, :ac,
              s(:send,
                s(:const, nil, :Object), :new)),
            s(:send,
              s(:lvar, :ts), :out,
              s(:str, "req"),
              s(:array,
                s(:lvar, :ac),
                s(:lvar, :n))),
            s(:lvasgn, :ans,
              s(:send,
                s(:lvar, :ts), :in,
                s(:lvar, :ac))),
            s(:send, nil, :puts,
              s(:dstr,
                s(:begin,
                  s(:lvar, :n)),
                s(:str, ": "),
                s(:begin,
                  s(:lvar, :ans))))))),
      s(:block,
        s(:send,
          s(:int, 3), :times),
        s(:args),
        s(:send,
          s(:lvar, :servers), :push,
          s(:send, nil, :server,
            s(:lvar, :ts)))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 1),
              s(:int, 6))), :each),
        s(:args,
          s(:arg, :n)),
        s(:send,
          s(:lvar, :clients), :push,
          s(:send, nil, :client,
            s(:lvar, :ts),
            s(:lvar, :n)))),
      s(:block,
        s(:send,
          s(:lvar, :clients), :each),
        s(:args,
          s(:arg, :t)),
        s(:send,
          s(:lvar, :t), :join))), nil))
