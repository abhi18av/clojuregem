s(:begin,
  s(:lvasgn, :uri,
    s(:or,
      s(:send,
        s(:const, nil, :ARGV), :shift),
      s(:send, nil, :raise,
        s(:dstr,
          s(:str, "usage: "),
          s(:begin,
            s(:gvar, :$0)),
          s(:str, " URI"))))),
  s(:casgn, nil, :N,
    s(:send,
      s(:begin,
        s(:or,
          s(:send,
            s(:const, nil, :ARGV), :shift),
          s(:int, 100))), :to_i)),
  s(:case,
    s(:lvar, :uri),
    s(:when,
      s(:regexp,
        s(:str, "^tcpromp:"),
        s(:regopt)),
      s(:regexp,
        s(:str, "^unixromp:"),
        s(:regopt)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "romp")),
        s(:lvasgn, :client,
          s(:send,
            s(:const,
              s(:const, nil, :ROMP), :Client), :new,
            s(:lvar, :uri),
            s(:false))),
        s(:lvasgn, :foo,
          s(:send,
            s(:lvar, :client), :resolve,
            s(:str, "foo"))))),
    s(:when,
      s(:regexp,
        s(:str, "^druby:"),
        s(:regopt)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "drb/drb")),
        s(:send,
          s(:const, nil, :DRb), :start_service),
        s(:lvasgn, :foo,
          s(:send,
            s(:const, nil, :DRbObject), :new,
            s(:nil),
            s(:lvar, :uri))))), nil),
  s(:block,
    s(:send,
      s(:const, nil, :N), :times),
    s(:args,
      s(:arg, :n)),
    s(:send,
      s(:lvar, :foo), :foo,
      s(:lvar, :n))))
