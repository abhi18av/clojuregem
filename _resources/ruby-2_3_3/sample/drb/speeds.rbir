s(:begin,
  s(:class,
    s(:const, nil, :Foo), nil,
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :i)),
      s(:def, :initialize,
        s(:args),
        s(:ivasgn, :@i,
          s(:int, 0))),
      s(:def, :foo,
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:ivasgn, :@i,
            s(:lvar, :i)),
          s(:send,
            s(:lvar, :i), :+,
            s(:lvar, :i)))))),
  s(:lvasgn, :uri,
    s(:or,
      s(:send,
        s(:const, nil, :ARGV), :shift),
      s(:send, nil, :raise,
        s(:dstr,
          s(:str, "usage: "),
          s(:begin,
            s(:gvar, :$0)),
          s(:str, " URI"))))),
  s(:lvasgn, :foo,
    s(:send,
      s(:const, nil, :Foo), :new)),
  s(:case,
    s(:lvar, :uri),
    s(:when,
      s(:regexp,
        s(:str, "^tcpromp:"),
        s(:regopt)),
      s(:regexp,
        s(:str, "^unixromp:"),
        s(:regopt)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "romp")),
        s(:lvasgn, :server,
          s(:send,
            s(:const,
              s(:const, nil, :ROMP), :Server), :new,
            s(:lvar, :uri),
            s(:nil),
            s(:true))),
        s(:send,
          s(:lvar, :server), :bind,
          s(:lvar, :foo),
          s(:str, "foo")))),
    s(:when,
      s(:regexp,
        s(:str, "^druby:"),
        s(:regopt)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "drb/drb")),
        s(:send,
          s(:const, nil, :DRb), :start_service,
          s(:lvar, :uri),
          s(:send,
            s(:const, nil, :Foo), :new)))), nil),
  s(:send,
    s(:send,
      s(:const, nil, :DRb), :thread), :join))
