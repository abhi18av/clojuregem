s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:lvasgn, :there,
    s(:or,
      s(:send,
        s(:const, nil, :ARGV), :shift),
      s(:send, nil, :raise,
        s(:dstr,
          s(:str, "usage: "),
          s(:begin,
            s(:gvar, :$0)),
          s(:str, " <server_uri>"))))),
  s(:send,
    s(:const, nil, :DRb), :start_service,
    s(:nil),
    s(:nil)),
  s(:lvasgn, :ro,
    s(:send,
      s(:const, nil, :DRbObject), :new,
      s(:nil),
      s(:lvar, :there))),
  s(:send, nil, :p,
    s(:send,
      s(:lvar, :ro), :size)),
  s(:send, nil, :puts,
    s(:str, "# collect")),
  s(:lvasgn, :a,
    s(:block,
      s(:send,
        s(:lvar, :ro), :collect),
      s(:args,
        s(:arg, :x)),
      s(:send,
        s(:lvar, :x), :+,
        s(:lvar, :x)))),
  s(:send, nil, :p,
    s(:lvar, :a)),
  s(:send, nil, :puts,
    s(:str, "# find")),
  s(:send, nil, :p,
    s(:block,
      s(:send,
        s(:lvar, :ro), :find),
      s(:args,
        s(:arg, :x)),
      s(:send,
        s(:lvar, :x), :kind_of?,
        s(:const, nil, :String)))),
  s(:send, nil, :puts,
    s(:str, "# each, break")),
  s(:block,
    s(:send,
      s(:lvar, :ro), :each),
    s(:args,
      s(:arg, :x)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :x), :==,
          s(:str, "five")),
        s(:next), nil),
      s(:send, nil, :puts,
        s(:lvar, :x)))),
  s(:send, nil, :puts,
    s(:str, "# each, break")),
  s(:block,
    s(:send,
      s(:lvar, :ro), :each),
    s(:args,
      s(:arg, :x)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :x), :==,
          s(:str, "five")),
        s(:break), nil),
      s(:send, nil, :puts,
        s(:lvar, :x)))),
  s(:send, nil, :puts,
    s(:str, "# each, next")),
  s(:block,
    s(:send,
      s(:lvar, :ro), :each),
    s(:args,
      s(:arg, :x)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :x), :==,
          s(:str, "five")),
        s(:next), nil),
      s(:send, nil, :puts,
        s(:lvar, :x)))),
  s(:send, nil, :puts,
    s(:str, "# each, redo")),
  s(:lvasgn, :count,
    s(:int, 0)),
  s(:block,
    s(:send,
      s(:lvar, :ro), :each),
    s(:args,
      s(:arg, :x)),
    s(:begin,
      s(:op_asgn,
        s(:lvasgn, :count), :+,
        s(:int, 1)),
      s(:send, nil, :puts,
        s(:lvar, :count)),
      s(:if,
        s(:send,
          s(:lvar, :count), :==,
          s(:int, 3)),
        s(:redo), nil))))
