s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:class,
    s(:const, nil, :Logger), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :fname)),
        s(:begin,
          s(:ivasgn, :@fname,
            s(:send,
              s(:lvar, :fname), :to_s)),
          s(:ivasgn, :@fp,
            s(:send,
              s(:const, nil, :File), :open,
              s(:ivar, :@fname),
              s(:str, "a+"))),
          s(:ivasgn, :@queue,
            s(:send,
              s(:const, nil, :Queue), :new)),
          s(:ivasgn, :@th,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:send,
                s(:self), :flush))))),
      s(:def, :log,
        s(:args,
          s(:arg, :str)),
        s(:send,
          s(:ivar, :@queue), :push,
          s(:send,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Time), :now)),
              s(:str, "\t")), :+,
            s(:send,
              s(:lvar, :str), :to_s)))),
      s(:def, :flush,
        s(:args),
        s(:kwbegin,
          s(:ensure,
            s(:while,
              s(:begin,
                s(:int, 1)),
              s(:begin,
                s(:send,
                  s(:ivar, :@fp), :puts,
                  s(:send,
                    s(:ivar, :@queue), :pop)),
                s(:send,
                  s(:ivar, :@fp), :flush))),
            s(:send,
              s(:ivar, :@fp), :close)))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:begin,
      s(:lvasgn, :here,
        s(:send,
          s(:const, nil, :ARGV), :shift)),
      s(:send,
        s(:const, nil, :DRb), :start_service,
        s(:lvar, :here),
        s(:send,
          s(:const, nil, :Logger), :new,
          s(:str, "/usr/tmp/dlogd.log"))),
      s(:send, nil, :puts,
        s(:send,
          s(:const, nil, :DRb), :uri)),
      s(:send,
        s(:send,
          s(:const, nil, :DRb), :thread), :join)), nil))
