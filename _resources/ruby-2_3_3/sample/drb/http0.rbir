s(:begin,
  s(:send, nil, :require,
    s(:str, "drb/drb")),
  s(:send, nil, :require,
    s(:str, "net/http")),
  s(:send, nil, :require,
    s(:str, "uri")),
  s(:module,
    s(:const, nil, :DRb),
    s(:begin,
      s(:module,
        s(:const, nil, :HTTP0),
        s(:begin,
          s(:class,
            s(:const, nil, :StrStream), nil,
            s(:begin,
              s(:def, :initialize,
                s(:args,
                  s(:optarg, :str,
                    s(:str, ""))),
                s(:ivasgn, :@buf,
                  s(:lvar, :str))),
              s(:send, nil, :attr_reader,
                s(:sym, :buf)),
              s(:def, :read,
                s(:args,
                  s(:arg, :n)),
                s(:kwbegin,
                  s(:ensure,
                    s(:return,
                      s(:send,
                        s(:ivar, :@buf), :[],
                        s(:int, 0),
                        s(:lvar, :n))),
                    s(:send,
                      s(:ivar, :@buf), :[]=,
                      s(:int, 0),
                      s(:lvar, :n),
                      s(:str, ""))))),
              s(:def, :write,
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:ivar, :@buf), :concat,
                  s(:lvar, :s))))),
          s(:defs,
            s(:self), :uri_option,
            s(:args,
              s(:arg, :uri),
              s(:arg, :config)),
            s(:return,
              s(:lvar, :uri),
              s(:nil))),
          s(:defs,
            s(:self), :open,
            s(:args,
              s(:arg, :uri),
              s(:arg, :config)),
            s(:begin,
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "^http:"),
                    s(:regopt)),
                  s(:lvar, :uri)), nil,
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :uri), :=~,
                      s(:regexp,
                        s(:str, "^http:"),
                        s(:regopt))), nil,
                    s(:send, nil, :raise,
                      s(:const, nil, :DRbBadScheme),
                      s(:lvar, :uri))),
                  s(:send, nil, :raise,
                    s(:const, nil, :DRbBadURI),
                    s(:send,
                      s(:str, "can't parse uri:"), :+,
                      s(:lvar, :uri))))),
              s(:send,
                s(:const, nil, :ClientSide), :new,
                s(:lvar, :uri),
                s(:lvar, :config)))),
          s(:class,
            s(:const, nil, :ClientSide), nil,
            s(:begin,
              s(:def, :initialize,
                s(:args,
                  s(:arg, :uri),
                  s(:arg, :config)),
                s(:begin,
                  s(:ivasgn, :@uri,
                    s(:lvar, :uri)),
                  s(:ivasgn, :@res,
                    s(:nil)),
                  s(:ivasgn, :@config,
                    s(:lvar, :config)),
                  s(:ivasgn, :@msg,
                    s(:send,
                      s(:const, nil, :DRbMessage), :new,
                      s(:lvar, :config))),
                  s(:ivasgn, :@proxy,
                    s(:send,
                      s(:const, nil, :ENV), :[],
                      s(:str, "HTTP_PROXY"))))),
              s(:def, :close,
                s(:args), nil),
              s(:def, :alive?,
                s(:args),
                s(:false)),
              s(:def, :send_request,
                s(:args,
                  s(:arg, :ref),
                  s(:arg, :msg_id),
                  s(:restarg, :arg),
                  s(:blockarg, :b)),
                s(:begin,
                  s(:lvasgn, :stream,
                    s(:send,
                      s(:const, nil, :StrStream), :new)),
                  s(:send,
                    s(:ivar, :@msg), :send_request,
                    s(:lvar, :stream),
                    s(:lvar, :ref),
                    s(:lvar, :msg_id),
                    s(:splat,
                      s(:lvar, :arg)),
                    s(:block_pass,
                      s(:lvar, :b))),
                  s(:ivasgn, :@reply_stream,
                    s(:send,
                      s(:const, nil, :StrStream), :new)),
                  s(:send, nil, :post,
                    s(:ivar, :@uri),
                    s(:send,
                      s(:lvar, :stream), :buf)))),
              s(:def, :recv_reply,
                s(:args),
                s(:send,
                  s(:ivar, :@msg), :recv_reply,
                  s(:ivar, :@reply_stream))),
              s(:def, :post,
                s(:args,
                  s(:arg, :url),
                  s(:arg, :data)),
                s(:begin,
                  s(:lvasgn, :it,
                    s(:send,
                      s(:const, nil, :URI), :parse,
                      s(:lvar, :url))),
                  s(:lvasgn, :path,
                    s(:send,
                      s(:send,
                        s(:array,
                          s(:begin,
                            s(:if,
                              s(:send,
                                s(:send,
                                  s(:lvar, :it), :path), :==,
                                s(:str, "")),
                              s(:str, "/"),
                              s(:send,
                                s(:lvar, :it), :path))),
                          s(:send,
                            s(:lvar, :it), :query)), :compact), :join,
                      s(:str, "?"))),
                  s(:lvasgn, :http,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Net), :HTTP), :new,
                      s(:send,
                        s(:lvar, :it), :host),
                      s(:send,
                        s(:lvar, :it), :port))),
                  s(:lvasgn, :sio,
                    s(:send,
                      s(:const, nil, :StrStream), :new)),
                  s(:block,
                    s(:send,
                      s(:lvar, :http), :post,
                      s(:lvar, :path),
                      s(:lvar, :data),
                      s(:hash,
                        s(:pair,
                          s(:str, "Content-Type"),
                          s(:str, "application/octetstream;")))),
                    s(:args,
                      s(:arg, :str)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :sio), :write,
                        s(:lvar, :str)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:ivar, :@config), :[],
                            s(:sym, :load_limit)), :<,
                          s(:send,
                            s(:send,
                              s(:lvar, :sio), :buf), :size)),
                        s(:send, nil, :raise,
                          s(:const, nil, :TypeError),
                          s(:str, "too large packet")), nil))),
                  s(:ivasgn, :@reply_stream,
                    s(:lvar, :sio)))))))),
      s(:send,
        s(:const, nil, :DRbProtocol), :add_protocol,
        s(:const, nil, :HTTP0)))))
