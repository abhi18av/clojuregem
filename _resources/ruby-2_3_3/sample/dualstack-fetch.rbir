s(:begin,
  s(:send, nil, :require,
    s(:str, "socket")),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :ARGV), :size), :!=,
      s(:int, 1)),
    s(:begin,
      s(:send,
        s(:const, nil, :STDERR), :print,
        s(:str, "requires URL\n")),
      s(:send, nil, :exit)), nil),
  s(:lvasgn, :url,
    s(:send,
      s(:const, nil, :ARGV), :[],
      s(:int, 0))),
  s(:if,
    s(:send,
      s(:lvar, :url), :!~,
      s(:regexp,
        s(:str, "^http://([^/]+)(/.*)$"),
        s(:regopt))),
    s(:begin,
      s(:send,
        s(:const, nil, :STDERR), :print,
        s(:str, "only http with full hostname is supported\n")),
      s(:send, nil, :exit)), nil),
  s(:lvasgn, :hostport,
    s(:nth_ref, 1)),
  s(:lvasgn, :path,
    s(:nth_ref, 2)),
  s(:if,
    s(:begin,
      s(:send,
        s(:lvar, :hostport), :=~,
        s(:regexp,
          s(:str, "^(.*):([0-9]+)$"),
          s(:regopt)))),
    s(:begin,
      s(:lvasgn, :host,
        s(:nth_ref, 1)),
      s(:lvasgn, :port,
        s(:nth_ref, 2))),
    s(:begin,
      s(:lvasgn, :host,
        s(:lvar, :hostport)),
      s(:lvasgn, :port,
        s(:int, 80)))),
  s(:if,
    s(:send,
      s(:lvar, :host), :=~,
      s(:regexp,
        s(:str, "^\\[(.*)\\]$"),
        s(:regopt))),
    s(:lvasgn, :host,
      s(:nth_ref, 1)), nil),
  s(:send,
    s(:const, nil, :STDERR), :print,
    s(:dstr,
      s(:str, "conntecting to "),
      s(:begin,
        s(:lvar, :host)),
      s(:str, " port "),
      s(:begin,
        s(:lvar, :port)),
      s(:str, "\n"))),
  s(:lvasgn, :c,
    s(:send,
      s(:const, nil, :TCPSocket), :new,
      s(:lvar, :host),
      s(:lvar, :port))),
  s(:lvasgn, :dest,
    s(:send,
      s(:const, nil, :Socket), :getnameinfo,
      s(:send,
        s(:lvar, :c), :getpeername),
      s(:send,
        s(:const,
          s(:const, nil, :Socket), :NI_NUMERICHOST), :|,
        s(:const,
          s(:const, nil, :Socket), :NI_NUMERICSERV)))),
  s(:send,
    s(:const, nil, :STDERR), :print,
    s(:dstr,
      s(:str, "conntected to "),
      s(:begin,
        s(:send,
          s(:lvar, :dest), :[],
          s(:int, 0))),
      s(:str, " port "),
      s(:begin,
        s(:send,
          s(:lvar, :dest), :[],
          s(:int, 1))),
      s(:str, "\n"))),
  s(:send,
    s(:lvar, :c), :print,
    s(:dstr,
      s(:str, "GET "),
      s(:begin,
        s(:lvar, :path)),
      s(:str, " HTTP/1.0\n"))),
  s(:send,
    s(:lvar, :c), :print,
    s(:dstr,
      s(:str, "Host: "),
      s(:begin,
        s(:lvar, :host)),
      s(:str, "\n"))),
  s(:send,
    s(:lvar, :c), :print,
    s(:str, "\n")),
  s(:while,
    s(:send,
      s(:lvar, :c), :gets),
    s(:send, nil, :print)))
