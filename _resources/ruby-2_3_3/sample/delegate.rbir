s(:begin,
  s(:send, nil, :require,
    s(:str, "delegate")),
  s(:class,
    s(:const, nil, :ExtArray),
    s(:send, nil, :DelegateClass,
      s(:const, nil, :Array)),
    s(:def, :initialize,
      s(:args),
      s(:super,
        s(:array)))),
  s(:lvasgn, :ary,
    s(:send,
      s(:const, nil, :ExtArray), :new)),
  s(:send, nil, :p,
    s(:send,
      s(:lvar, :ary), :class)),
  s(:send,
    s(:lvar, :ary), :push,
    s(:int, 25)),
  s(:send, nil, :p,
    s(:lvar, :ary)),
  s(:send,
    s(:lvar, :ary), :push,
    s(:int, 42)),
  s(:block,
    s(:send,
      s(:lvar, :ary), :each),
    s(:args,
      s(:arg, :x)),
    s(:send, nil, :p,
      s(:lvar, :x))),
  s(:lvasgn, :foo,
    s(:send,
      s(:const, nil, :Object), :new)),
  s(:defs,
    s(:lvar, :foo), :test,
    s(:args),
    s(:int, 25)),
  s(:defs,
    s(:lvar, :foo), :iter,
    s(:args),
    s(:yield,
      s(:self))),
  s(:defs,
    s(:lvar, :foo), :error,
    s(:args),
    s(:send, nil, :raise,
      s(:str, "this is OK"))),
  s(:lvasgn, :foo2,
    s(:send,
      s(:const, nil, :SimpleDelegator), :new,
      s(:lvar, :foo))),
  s(:send, nil, :p,
    s(:lvar, :foo2)),
  s(:block,
    s(:send,
      s(:lvar, :foo2), :instance_eval),
    s(:args),
    s(:send, nil, :print,
      s(:str, "foo\n"))),
  s(:send, nil, :p,
    s(:send,
      s(:send,
        s(:lvar, :foo), :test), :==,
      s(:send,
        s(:lvar, :foo2), :test))),
  s(:send, nil, :p,
    s(:block,
      s(:send,
        s(:lvar, :foo2), :iter),
      s(:args),
      s(:array,
        s(:int, 55),
        s(:true)))),
  s(:send,
    s(:lvar, :foo2), :error))
