s(:block,
  s(:send,
    s(:const, nil, :ARGF), :each,
    s(:nil)),
  s(:args,
    s(:arg, :source)),
  s(:begin,
    s(:lvasgn, :sbeg,
      s(:send,
        s(:send,
          s(:lvar, :source), :index,
          s(:str, "\n%%")), :+,
        s(:int, 1))),
    s(:lvasgn, :send,
      s(:send,
        s(:send,
          s(:lvar, :source), :rindex,
          s(:str, "\n%%")), :+,
        s(:int, 1))),
    s(:lvasgn, :grammar,
      s(:send,
        s(:lvar, :source), :[],
        s(:lvar, :sbeg),
        s(:send,
          s(:lvar, :send), :-,
          s(:lvar, :sbeg)))),
    s(:send,
      s(:lvar, :grammar), :sub!,
      s(:regexp,
        s(:str, ".*\\n"),
        s(:regopt)),
      s(:str, "")),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "'\\{'"),
        s(:regopt)),
      s(:str, "'\u0001'")),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "'\\}'"),
        s(:regopt)),
      s(:str, "'\u0002'")),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "\\*/"),
        s(:regopt)),
      s(:str, "\u0003\u0003")),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "/\\*[^\\003]*\\003\\003"),
        s(:regopt)),
      s(:str, "")),
    s(:while,
      s(:send,
        s(:lvar, :grammar), :gsub!,
        s(:regexp,
          s(:str, "\\{[^{}]*\\}"),
          s(:regopt)),
        s(:str, "")), nil),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "'\\001'"),
        s(:regopt)),
      s(:str, "'{'")),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "'\\002'"),
        s(:regopt)),
      s(:str, "'}'")),
    s(:while,
      s(:send,
        s(:lvar, :grammar), :gsub!,
        s(:regexp,
          s(:str, "^[ \\t]*\\n(\\s)"),
          s(:regopt)),
        s(:str, "\\1")), nil),
    s(:send,
      s(:lvar, :grammar), :gsub!,
      s(:regexp,
        s(:str, "([:|])[ \\t\\n]+(\\w)"),
        s(:regopt)),
      s(:str, "\\1 \\2")),
    s(:send, nil, :print,
      s(:lvar, :grammar))))
