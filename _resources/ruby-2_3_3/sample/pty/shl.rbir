s(:begin,
  s(:send, nil, :require,
    s(:str, "pty")),
  s(:gvasgn, :$shells,
    s(:array)),
  s(:gvasgn, :$n_shells,
    s(:int, 0)),
  s(:gvasgn, :$r_pty,
    s(:nil)),
  s(:gvasgn, :$w_pty,
    s(:nil)),
  s(:def, :writer,
    s(:args),
    s(:begin,
      s(:send, nil, :system,
        s(:str, "stty -echo raw")),
      s(:kwbegin,
        s(:ensure,
          s(:rescue,
            s(:while,
              s(:true),
              s(:begin,
                s(:lvasgn, :c,
                  s(:send,
                    s(:const, nil, :STDIN), :getc)),
                s(:if,
                  s(:send,
                    s(:lvar, :c), :==,
                    s(:int, 26)),
                  s(:begin,
                    s(:send,
                      s(:gvar, :$reader), :raise,
                      s(:nil)),
                    s(:return,
                      s(:str, "Suspend"))), nil),
                s(:send,
                  s(:gvar, :$w_pty), :print,
                  s(:send,
                    s(:lvar, :c), :chr)),
                s(:send,
                  s(:gvar, :$w_pty), :flush))),
            s(:resbody, nil, nil,
              s(:begin,
                s(:send,
                  s(:gvar, :$reader), :raise,
                  s(:nil)),
                s(:return,
                  s(:str, "Exit")))), nil),
          s(:send, nil, :system,
            s(:str, "stty echo -raw")))))),
  s(:gvasgn, :$reader,
    s(:block,
      s(:send,
        s(:const, nil, :Thread), :new),
      s(:args),
      s(:while,
        s(:true),
        s(:kwbegin,
          s(:rescue,
            s(:begin,
              s(:if,
                s(:send,
                  s(:gvar, :$r_pty), :nil?),
                s(:next), nil),
              s(:lvasgn, :c,
                s(:send,
                  s(:gvar, :$r_pty), :getc)),
              s(:if,
                s(:send,
                  s(:lvar, :c), :nil?),
                s(:send,
                  s(:const, nil, :Thread), :stop), nil),
              s(:send, nil, :print,
                s(:send,
                  s(:lvar, :c), :chr)),
              s(:send,
                s(:const, nil, :STDOUT), :flush)),
            s(:resbody, nil, nil,
              s(:send,
                s(:const, nil, :Thread), :stop)), nil))))),
  s(:while,
    s(:true),
    s(:begin,
      s(:send, nil, :print,
        s(:str, ">> ")),
      s(:send,
        s(:const, nil, :STDOUT), :flush),
      s(:case,
        s(:send, nil, :gets),
        s(:when,
          s(:regexp,
            s(:str, "^c"),
            s(:regopt, :i)),
          s(:begin,
            s(:send,
              s(:gvar, :$shells), :[]=,
              s(:gvar, :$n_shells),
              s(:send,
                s(:const, nil, :PTY), :spawn,
                s(:str, "/bin/csh"))),
            s(:masgn,
              s(:mlhs,
                s(:gvasgn, :$r_pty),
                s(:gvasgn, :$w_pty)),
              s(:send,
                s(:gvar, :$shells), :[],
                s(:gvar, :$n_shells))),
            s(:op_asgn,
              s(:gvasgn, :$n_shells), :+,
              s(:int, 1)),
            s(:send,
              s(:gvar, :$reader), :run),
            s(:if,
              s(:send,
                s(:send, nil, :writer), :==,
                s(:str, "Exit")),
              s(:begin,
                s(:op_asgn,
                  s(:gvasgn, :$n_shells), :-,
                  s(:int, 1)),
                s(:send,
                  s(:gvar, :$shells), :[]=,
                  s(:gvar, :$n_shells),
                  s(:nil))), nil))),
        s(:when,
          s(:regexp,
            s(:str, "^p"),
            s(:regopt, :i)),
          s(:for,
            s(:lvasgn, :i),
            s(:irange,
              s(:int, 0),
              s(:gvar, :$n_shells)),
            s(:if,
              s(:send,
                s(:send,
                  s(:gvar, :$shells), :[],
                  s(:lvar, :i)), :nil?), nil,
              s(:send, nil, :print,
                s(:lvar, :i),
                s(:str, "\n"))))),
        s(:when,
          s(:regexp,
            s(:str, "^([0-9]+)"),
            s(:regopt)),
          s(:begin,
            s(:lvasgn, :n,
              s(:send,
                s(:nth_ref, 1), :to_i)),
            s(:if,
              s(:send,
                s(:send,
                  s(:gvar, :$shells), :[],
                  s(:lvar, :n)), :nil?),
              s(:send, nil, :print,
                s(:dstr,
                  s(:str, "#"),
                  s(:begin,
                    s(:lvar, :i)),
                  s(:str, " doesn't exist\n"))),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:gvasgn, :$r_pty),
                    s(:gvasgn, :$w_pty)),
                  s(:send,
                    s(:gvar, :$shells), :[],
                    s(:lvar, :n))),
                s(:send,
                  s(:gvar, :$reader), :run),
                s(:if,
                  s(:send,
                    s(:send, nil, :writer), :==,
                    s(:str, "Exit")),
                  s(:send,
                    s(:gvar, :$shells), :[]=,
                    s(:lvar, :n),
                    s(:nil)), nil))))),
        s(:when,
          s(:regexp,
            s(:str, "^q"),
            s(:regopt, :i)),
          s(:send, nil, :exit)), nil))))
