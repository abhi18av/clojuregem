s(:begin,
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require,
    s(:str, "webrick/httpproxy")),
  s(:lvasgn, :pch,
    s(:block,
      s(:send,
        s(:const, nil, :Proc), :new),
      s(:args,
        s(:arg, :req),
        s(:arg, :res)),
      s(:send, nil, :p,
        s(:array,
          s(:send,
            s(:lvar, :req), :request_line),
          s(:send,
            s(:lvar, :res), :status_line))))),
  s(:def, :upstream_proxy,
    s(:args),
    s(:begin,
      s(:if,
        s(:lvasgn, :prx,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "http_proxy"))),
        s(:return,
          s(:send,
            s(:const, nil, :URI), :parse,
            s(:lvar, :prx))), nil),
      s(:return,
        s(:nil)))),
  s(:lvasgn, :httpd,
    s(:send,
      s(:const,
        s(:const, nil, :WEBrick), :HTTPProxyServer), :new,
      s(:hash,
        s(:pair,
          s(:sym, :Port),
          s(:int, 10080)),
        s(:pair,
          s(:sym, :ProxyContentHandler),
          s(:lvar, :pch)),
        s(:pair,
          s(:sym, :ProxyURI),
          s(:send, nil, :upstream_proxy))))),
  s(:block,
    s(:send,
      s(:const, nil, :Signal), :trap,
      s(:sym, :INT)),
    s(:args),
    s(:send,
      s(:lvar, :httpd), :shutdown)),
  s(:send,
    s(:lvar, :httpd), :start))
