s(:begin,
  s(:send, nil, :require,
    s(:str, "time")),
  s(:send, nil, :require,
    s(:str, "kconv")),
  s(:class,
    s(:const, nil, :String), nil,
    s(:def, :kjust,
      s(:args,
        s(:arg, :len)),
      s(:begin,
        s(:lvasgn, :res,
          s(:str, "")),
        s(:lvasgn, :rlen,
          s(:int, 0)),
        s(:block,
          s(:send,
            s(:self), :each_char),
          s(:args,
            s(:arg, :char)),
          s(:begin,
            s(:lvasgn, :delta,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :char), :bytesize), :>,
                  s(:int, 1)),
                s(:int, 2),
                s(:int, 1))),
            s(:if,
              s(:send,
                s(:send,
                  s(:lvar, :rlen), :+,
                  s(:lvar, :delta)), :>,
                s(:lvar, :len)),
              s(:break), nil),
            s(:op_asgn,
              s(:lvasgn, :rlen), :+,
              s(:lvar, :delta)),
            s(:op_asgn,
              s(:lvasgn, :res), :+,
              s(:lvar, :char)))),
        s(:if,
          s(:send,
            s(:lvar, :rlen), :<,
            s(:lvar, :len)),
          s(:op_asgn,
            s(:lvasgn, :res), :+,
            s(:send,
              s(:str, " "), :*,
              s(:begin,
                s(:send,
                  s(:lvar, :len), :-,
                  s(:lvar, :rlen))))), nil),
        s(:lvar, :res)))),
  s(:def, :fromout,
    s(:args,
      s(:arg, :date),
      s(:arg, :from),
      s(:arg, :subj)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :date), :!),
        s(:return,
          s(:int, 0)), nil),
      s(:if,
        s(:lvar, :date),
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :y),
            s(:lvasgn, :m),
            s(:lvasgn, :d)),
          s(:send,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Time), :parse,
                  s(:lvar, :date)), :to_a), :reverse), :[],
            s(:int, 4),
            s(:int, 3))), nil),
      s(:or_asgn,
        s(:lvasgn, :y),
        s(:int, 0)),
      s(:or_asgn,
        s(:lvasgn, :m),
        s(:int, 0)),
      s(:or_asgn,
        s(:lvasgn, :d),
        s(:int, 0)),
      s(:or_asgn,
        s(:lvasgn, :from),
        s(:str, "sombody@somewhere")),
      s(:send,
        s(:lvar, :from), :delete!,
        s(:str, "\r\n")),
      s(:lvasgn, :from,
        s(:send,
          s(:send,
            s(:lvar, :from), :kconv,
            s(:send,
              s(:const, nil, :Encoding), :default_external)), :kjust,
          s(:int, 28))),
      s(:or_asgn,
        s(:lvasgn, :subj),
        s(:str, "(nil)")),
      s(:send,
        s(:lvar, :subj), :delete!,
        s(:str, "\r\n")),
      s(:lvasgn, :subj,
        s(:send,
          s(:send,
            s(:lvar, :subj), :kconv,
            s(:send,
              s(:const, nil, :Encoding), :default_external)), :kjust,
          s(:int, 40))),
      s(:send, nil, :printf,
        s(:str, "%02d/%02d/%02d [%s] %s\n"),
        s(:send,
          s(:lvar, :y), :%,
          s(:int, 100)),
        s(:lvar, :m),
        s(:lvar, :d),
        s(:lvar, :from),
        s(:lvar, :subj)),
      s(:return,
        s(:int, 1)))),
  s(:def, :get_mailfile,
    s(:args,
      s(:arg, :user)),
    s(:begin,
      s(:lvasgn, :file,
        s(:lvar, :user)),
      s(:if,
        s(:lvar, :user), nil,
        s(:begin,
          s(:lvasgn, :file,
            s(:send,
              s(:const, nil, :ENV), :[],
              s(:str, "MAIL"))),
          s(:lvasgn, :user,
            s(:or,
              s(:or,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "USER")),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "USERNAME"))),
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "LOGNAME")))))),
      s(:if,
        s(:or,
          s(:send,
            s(:lvar, :file), :==,
            s(:nil)),
          s(:send,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :file)), :!)),
        s(:block,
          s(:send,
            s(:array,
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "SPOOLDIR")),
              s(:str, "/usr/spool"),
              s(:str, "/var/spool"),
              s(:str, "/usr"),
              s(:str, "/var")), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :path,
              s(:dstr,
                s(:begin,
                  s(:lvar, :m)),
                s(:str, "/mail/"),
                s(:begin,
                  s(:lvar, :user)))),
            s(:if,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:lvar, :path)),
              s(:begin,
                s(:lvasgn, :file,
                  s(:lvar, :path)),
                s(:break)), nil))), nil),
      s(:lvar, :file))),
  s(:def, :from_main,
    s(:args),
    s(:begin,
      s(:if,
        s(:send,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 0)), :==,
          s(:str, "-w")),
        s(:begin,
          s(:lvasgn, :wait,
            s(:true)),
          s(:send,
            s(:const, nil, :ARGV), :shift)), nil),
      s(:lvasgn, :file,
        s(:send, nil, :get_mailfile,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 0)))),
      s(:lvasgn, :outcount,
        s(:int, 0)),
      s(:if,
        s(:send,
          s(:const, nil, :File), :exist?,
          s(:lvar, :file)),
        s(:begin,
          s(:lvasgn, :atime,
            s(:send,
              s(:const, nil, :File), :atime,
              s(:lvar, :file))),
          s(:lvasgn, :mtime,
            s(:send,
              s(:const, nil, :File), :mtime,
              s(:lvar, :file))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :file),
              s(:str, "r")),
            s(:args,
              s(:arg, :f)),
            s(:until,
              s(:send,
                s(:lvar, :f), :eof?),
              s(:begin,
                s(:lvasgn, :header,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:lvar, :f), :each_line),
                  s(:args,
                    s(:arg, :line)),
                  s(:begin,
                    s(:if,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "^From "),
                          s(:regopt)),
                        s(:lvar, :line)),
                      s(:next), nil),
                    s(:if,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "^$"),
                          s(:regopt)),
                        s(:lvar, :line)),
                      s(:break), nil),
                    s(:if,
                      s(:match_with_lvasgn,
                        s(:regexp,
                          s(:str, "^(?<attr>\\S+?):\\s*(?<value>.*)"),
                          s(:regopt)),
                        s(:lvar, :line)),
                      s(:begin,
                        s(:send,
                          s(:lvar, :attr), :capitalize!),
                        s(:send,
                          s(:lvar, :header), :[]=,
                          s(:lvar, :attr),
                          s(:lvar, :value))),
                      s(:if,
                        s(:lvar, :attr),
                        s(:op_asgn,
                          s(:send,
                            s(:lvar, :header), :[],
                            s(:lvar, :attr)), :+,
                          s(:send,
                            s(:str, "\n"), :+,
                            s(:send,
                              s(:lvar, :line), :lstrip))), nil)))),
                s(:block,
                  s(:send,
                    s(:lvar, :f), :each_line),
                  s(:args,
                    s(:arg, :line)),
                  s(:if,
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "^From "),
                        s(:regopt)),
                      s(:lvar, :line)),
                    s(:break), nil)),
                s(:op_asgn,
                  s(:lvasgn, :outcount), :+,
                  s(:send, nil, :fromout,
                    s(:send,
                      s(:lvar, :header), :[],
                      s(:str, "Date")),
                    s(:send,
                      s(:lvar, :header), :[],
                      s(:str, "From")),
                    s(:send,
                      s(:lvar, :header), :[],
                      s(:str, "Subject"))))))),
          s(:send,
            s(:const, nil, :File), :utime,
            s(:lvar, :atime),
            s(:lvar, :mtime),
            s(:lvar, :file))), nil),
      s(:if,
        s(:send,
          s(:lvar, :outcount), :==,
          s(:int, 0)),
        s(:begin,
          s(:send, nil, :print,
            s(:str, "You have no mail.\n")),
          s(:if,
            s(:lvar, :wait),
            s(:send, nil, :sleep,
              s(:int, 2)), nil)),
        s(:if,
          s(:lvar, :wait),
          s(:begin,
            s(:send, nil, :system,
              s(:str, "stty cbreak -echo")),
            s(:send,
              s(:gvar, :$stdin), :getc),
            s(:send, nil, :system,
              s(:str, "stty cooked echo"))), nil)))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:send, nil, :from_main), nil))
