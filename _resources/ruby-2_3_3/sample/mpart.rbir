s(:begin,
  s(:lvasgn, :lines,
    s(:int, 1000)),
  s(:if,
    s(:begin,
      s(:send,
        s(:send,
          s(:const, nil, :ARGV), :[],
          s(:int, 0)), :=~,
        s(:regexp,
          s(:str, "^-(\\d+)$"),
          s(:regopt)))),
    s(:begin,
      s(:lvasgn, :lines,
        s(:send,
          s(:nth_ref, 1), :to_i)),
      s(:send,
        s(:const, nil, :ARGV), :shift)), nil),
  s(:lvasgn, :basename,
    s(:send,
      s(:const, nil, :ARGV), :[],
      s(:int, 0))),
  s(:lvasgn, :extname,
    s(:str, "part")),
  s(:lvasgn, :part,
    s(:int, 1)),
  s(:lvasgn, :line,
    s(:int, 0)),
  s(:lvasgn, :fline,
    s(:int, 0)),
  s(:for,
    s(:lvasgn, :i),
    s(:lvasgn, :ifp,
      s(:send, nil, :open,
        s(:lvar, :basename))),
    s(:lvasgn, :fline,
      s(:send,
        s(:lvar, :fline), :+,
        s(:int, 1)))),
  s(:send,
    s(:lvar, :ifp), :close),
  s(:lvasgn, :parts,
    s(:send,
      s(:send,
        s(:lvar, :fline), :/,
        s(:lvar, :lines)), :+,
      s(:int, 1))),
  s(:for,
    s(:lvasgn, :i),
    s(:lvasgn, :ifp,
      s(:send, nil, :open,
        s(:lvar, :basename))),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :line), :==,
          s(:int, 0)),
        s(:begin,
          s(:lvasgn, :ofp,
            s(:send, nil, :open,
              s(:send, nil, :sprintf,
                s(:str, "%s.%s%02d"),
                s(:lvar, :basename),
                s(:lvar, :extname),
                s(:lvar, :part)),
              s(:str, "w"))),
          s(:send, nil, :printf,
            s(:lvar, :ofp),
            s(:str, "%s part%02d/%02d\n"),
            s(:lvar, :basename),
            s(:lvar, :part),
            s(:lvar, :parts)),
          s(:send,
            s(:lvar, :ofp), :write,
            s(:str, "BEGIN--cut here--cut here\n"))), nil),
      s(:send,
        s(:lvar, :ofp), :write,
        s(:lvar, :i)),
      s(:lvasgn, :line,
        s(:send,
          s(:lvar, :line), :+,
          s(:int, 1))),
      s(:if,
        s(:and,
          s(:send,
            s(:lvar, :line), :>=,
            s(:lvar, :lines)),
          s(:send,
            s(:send,
              s(:lvar, :ifp), :eof?), :!)),
        s(:begin,
          s(:send,
            s(:lvar, :ofp), :write,
            s(:str, "END--cut here--cut here\n")),
          s(:send,
            s(:lvar, :ofp), :close),
          s(:lvasgn, :part,
            s(:send,
              s(:lvar, :part), :+,
              s(:int, 1))),
          s(:lvasgn, :line,
            s(:int, 0))), nil))),
  s(:send,
    s(:lvar, :ofp), :write,
    s(:str, "END--cut here--cut here\n")),
  s(:send,
    s(:lvar, :ofp), :close),
  s(:send,
    s(:lvar, :ifp), :close))
