s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:send, nil, :srand),
  s(:casgn, nil, :N,
    s(:int, 9)),
  s(:gvasgn, :$forks,
    s(:array)),
  s(:for,
    s(:lvasgn, :i),
    s(:irange,
      s(:int, 0),
      s(:send,
        s(:const, nil, :N), :-,
        s(:int, 1))),
    s(:send,
      s(:gvar, :$forks), :[]=,
      s(:lvar, :i),
      s(:send,
        s(:const, nil, :Mutex), :new))),
  s(:gvasgn, :$state,
    s(:send,
      s(:str, "-o"), :*,
      s(:const, nil, :N))),
  s(:def, :wait,
    s(:args),
    s(:send, nil, :sleep,
      s(:send,
        s(:send, nil, :rand,
          s(:int, 20)), :/,
        s(:float, 10.0)))),
  s(:def, :think,
    s(:args,
      s(:arg, :n)),
    s(:send, nil, :wait)),
  s(:def, :eat,
    s(:args,
      s(:arg, :n)),
    s(:send, nil, :wait)),
  s(:def, :philosopher,
    s(:args,
      s(:arg, :n)),
    s(:while,
      s(:true),
      s(:begin,
        s(:send, nil, :think,
          s(:lvar, :n)),
        s(:send,
          s(:send,
            s(:gvar, :$forks), :[],
            s(:lvar, :n)), :lock),
        s(:if,
          s(:send,
            s(:send,
              s(:send,
                s(:gvar, :$forks), :[],
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :+,
                      s(:int, 1))), :%,
                  s(:const, nil, :N))), :try_lock), :!),
          s(:begin,
            s(:send,
              s(:send,
                s(:gvar, :$forks), :[],
                s(:lvar, :n)), :unlock),
            s(:next)), nil),
        s(:send,
          s(:gvar, :$state), :[]=,
          s(:send,
            s(:lvar, :n), :*,
            s(:int, 2)),
          s(:str, "|")),
        s(:send,
          s(:gvar, :$state), :[]=,
          s(:send,
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :n), :+,
                  s(:int, 1))), :%,
              s(:const, nil, :N)), :*,
            s(:int, 2)),
          s(:str, "|")),
        s(:send,
          s(:gvar, :$state), :[]=,
          s(:send,
            s(:send,
              s(:lvar, :n), :*,
              s(:int, 2)), :+,
            s(:int, 1)),
          s(:str, "*")),
        s(:send, nil, :print,
          s(:gvar, :$state),
          s(:str, "\n")),
        s(:send, nil, :eat,
          s(:lvar, :n)),
        s(:send,
          s(:gvar, :$state), :[]=,
          s(:send,
            s(:lvar, :n), :*,
            s(:int, 2)),
          s(:str, "-")),
        s(:send,
          s(:gvar, :$state), :[]=,
          s(:send,
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :n), :+,
                  s(:int, 1))), :%,
              s(:const, nil, :N)), :*,
            s(:int, 2)),
          s(:str, "-")),
        s(:send,
          s(:gvar, :$state), :[]=,
          s(:send,
            s(:send,
              s(:lvar, :n), :*,
              s(:int, 2)), :+,
            s(:int, 1)),
          s(:str, "o")),
        s(:send, nil, :print,
          s(:gvar, :$state),
          s(:str, "\n")),
        s(:send,
          s(:send,
            s(:gvar, :$forks), :[],
            s(:lvar, :n)), :unlock),
        s(:send,
          s(:send,
            s(:gvar, :$forks), :[],
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :n), :+,
                  s(:int, 1))), :%,
              s(:const, nil, :N))), :unlock)))),
  s(:for,
    s(:lvasgn, :n),
    s(:irange,
      s(:int, 0),
      s(:send,
        s(:const, nil, :N), :-,
        s(:int, 1))),
    s(:begin,
      s(:block,
        s(:send,
          s(:const, nil, :Thread), :start,
          s(:lvar, :n)),
        s(:args,
          s(:arg, :i)),
        s(:send, nil, :philosopher,
          s(:lvar, :i))),
      s(:send, nil, :sleep,
        s(:float, 0.1)))),
  s(:send, nil, :sleep))
