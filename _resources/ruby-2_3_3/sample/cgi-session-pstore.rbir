s(:begin,
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "cgi/session/pstore")),
  s(:send,
    s(:const, nil, :STDIN), :reopen,
    s(:const,
      s(:const, nil, :IO), :NULL)),
  s(:lvasgn, :cgi,
    s(:send,
      s(:const, nil, :CGI), :new)),
  s(:lvasgn, :session,
    s(:send,
      s(:const,
        s(:const, nil, :CGI), :Session), :new,
      s(:lvar, :cgi),
      s(:hash,
        s(:pair,
          s(:str, "database_manager"),
          s(:const,
            s(:const,
              s(:const, nil, :CGI), :Session), :PStore))))),
  s(:send,
    s(:lvar, :session), :[]=,
    s(:str, "key"),
    s(:hash,
      s(:pair,
        s(:str, "k"),
        s(:str, "v")))),
  s(:send, nil, :puts,
    s(:send,
      s(:send,
        s(:lvar, :session), :[],
        s(:str, "key")), :class)),
  s(:if,
    s(:send,
      s(:const, nil, :Hash), :===,
      s(:send,
        s(:lvar, :session), :[],
        s(:str, "key"))), nil,
    s(:send, nil, :fail)),
  s(:send, nil, :puts,
    s(:send,
      s(:send,
        s(:lvar, :session), :[],
        s(:str, "key")), :inspect)),
  s(:if,
    s(:send,
      s(:send,
        s(:send,
          s(:lvar, :session), :[],
          s(:str, "key")), :inspect), :==,
      s(:str, "{\"k\"=>\"v\"}")), nil,
    s(:send, nil, :fail)))
