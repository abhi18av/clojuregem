s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "http-access2")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil,
        s(:send,
          s(:const, nil, :STDERR), :puts,
          s(:str, "Cannot load http-access2.  CRL might not be fetched."))), nil)),
  s(:send, nil, :require,
    s(:str, "c_rehash")),
  s(:class,
    s(:const, nil, :CrlStore), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :c_store)),
        s(:begin,
          s(:ivasgn, :@c_store,
            s(:lvar, :c_store)),
          s(:send,
            s(:ivar, :@c_store), :hash_dir,
            s(:true)))),
      s(:def, :find_crl,
        s(:args,
          s(:arg, :cert)),
        s(:send, nil, :do_find_crl,
          s(:lvar, :cert))),
      s(:send, nil, :private),
      s(:def, :do_find_crl,
        s(:args,
          s(:arg, :cert)),
        s(:begin,
          s(:if,
            s(:lvasgn, :ca,
              s(:send, nil, :find_ca,
                s(:lvar, :cert))), nil,
            s(:return,
              s(:nil))),
          s(:if,
            s(:lvasgn, :crlfiles,
              s(:send,
                s(:ivar, :@c_store), :get_crls,
                s(:send,
                  s(:lvar, :ca), :subject))), nil,
            s(:begin,
              s(:if,
                s(:lvasgn, :crl,
                  s(:send, nil, :renew_crl,
                    s(:lvar, :cert),
                    s(:lvar, :ca))),
                s(:begin,
                  s(:send,
                    s(:ivar, :@c_store), :add_crl,
                    s(:lvar, :crl)),
                  s(:return,
                    s(:lvar, :crl))), nil),
              s(:return,
                s(:nil)))),
          s(:block,
            s(:send,
              s(:lvar, :crlfiles), :each),
            s(:args,
              s(:arg, :crlfile)),
            s(:begin,
              s(:if,
                s(:lvasgn, :crl,
                  s(:send, nil, :load_crl,
                    s(:lvar, :crlfile))), nil,
                s(:next)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :crl), :next_update), :<,
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:if,
                  s(:lvasgn, :new_crl,
                    s(:send, nil, :renew_crl,
                      s(:lvar, :cert),
                      s(:lvar, :ca))),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@c_store), :delete_crl,
                      s(:lvar, :crl)),
                    s(:send,
                      s(:ivar, :@c_store), :add_crl,
                      s(:lvar, :new_crl)),
                    s(:lvasgn, :crl,
                      s(:lvar, :new_crl))), nil), nil),
              s(:if,
                s(:send, nil, :check_valid,
                  s(:lvar, :crl),
                  s(:lvar, :ca)),
                s(:return,
                  s(:lvar, :crl)), nil))),
          s(:nil))),
      s(:def, :find_ca,
        s(:args,
          s(:arg, :cert)),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@c_store), :get_certs,
                s(:send,
                  s(:lvar, :cert), :issuer)), :each),
            s(:args,
              s(:arg, :cafile)),
            s(:begin,
              s(:lvasgn, :ca,
                s(:send, nil, :load_cert,
                  s(:lvar, :cafile))),
              s(:if,
                s(:send,
                  s(:lvar, :cert), :verify,
                  s(:send,
                    s(:lvar, :ca), :public_key)),
                s(:return,
                  s(:lvar, :ca)), nil))),
          s(:nil))),
      s(:def, :fetch,
        s(:args,
          s(:arg, :location)),
        s(:if,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "\\AURI:(.*)\\z"),
              s(:regopt)),
            s(:lvar, :location)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :c,
                  s(:send,
                    s(:const,
                      s(:const, nil, :HTTPAccess2), :Client), :new,
                    s(:or,
                      s(:send,
                        s(:const, nil, :ENV), :[],
                        s(:str, "http_proxy")),
                      s(:send,
                        s(:const, nil, :ENV), :[],
                        s(:str, "HTTP_PROXY"))))),
                s(:send,
                  s(:lvar, :c), :get_content,
                  s(:nth_ref, 1))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NameError),
                  s(:const, nil, :StandardError)), nil,
                s(:nil)), nil)),
          s(:nil))),
      s(:def, :load_cert,
        s(:args,
          s(:arg, :certfile)),
        s(:send, nil, :load_cert_str,
          s(:send,
            s(:const, nil, :File), :read,
            s(:lvar, :certfile)))),
      s(:def, :load_crl,
        s(:args,
          s(:arg, :crlfile)),
        s(:send, nil, :load_crl_str,
          s(:send,
            s(:const, nil, :File), :read,
            s(:lvar, :crlfile)))),
      s(:def, :load_cert_str,
        s(:args,
          s(:arg, :cert_str)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :X509), :Certificate), :new,
          s(:lvar, :cert_str))),
      s(:def, :load_crl_str,
        s(:args,
          s(:arg, :crl_str)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :X509), :CRL), :new,
          s(:lvar, :crl_str))),
      s(:def, :check_valid,
        s(:args,
          s(:arg, :crl),
          s(:arg, :ca)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :crl), :verify,
              s(:send,
                s(:lvar, :ca), :public_key)), nil,
            s(:return,
              s(:false))),
          s(:send,
            s(:send,
              s(:lvar, :crl), :last_update), :<=,
            s(:send,
              s(:const, nil, :Time), :now)))),
      s(:casgn, nil, :RE_CDP,
        s(:regexp,
          s(:str, "\\AcrlDistributionPoints\\z"),
          s(:regopt))),
      s(:def, :get_cdp,
        s(:args,
          s(:arg, :cert)),
        s(:if,
          s(:lvasgn, :cdp_ext,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :cert), :extensions), :find),
              s(:args,
                s(:arg, :ext)),
              s(:send,
                s(:const, nil, :RE_CDP), :=~,
                s(:send,
                  s(:lvar, :ext), :oid)))),
          s(:send,
            s(:send,
              s(:lvar, :cdp_ext), :value), :chomp),
          s(:false))),
      s(:def, :renew_crl,
        s(:args,
          s(:arg, :cert),
          s(:arg, :ca)),
        s(:begin,
          s(:if,
            s(:lvasgn, :cdp,
              s(:send, nil, :get_cdp,
                s(:lvar, :cert))),
            s(:if,
              s(:lvasgn, :new_crl_str,
                s(:send, nil, :fetch,
                  s(:lvar, :cdp))),
              s(:begin,
                s(:lvasgn, :new_crl,
                  s(:send, nil, :load_crl_str,
                    s(:lvar, :new_crl_str))),
                s(:if,
                  s(:send, nil, :check_valid,
                    s(:lvar, :new_crl),
                    s(:lvar, :ca)),
                  s(:return,
                    s(:lvar, :new_crl)), nil)), nil), nil),
          s(:false))))),
  s(:if,
    s(:send,
      s(:gvar, :$0), :==,
      s(:str, "(string)")),
    s(:begin,
      s(:lvasgn, :dir,
        s(:str, "trust_certs")),
      s(:lvasgn, :c_store,
        s(:send,
          s(:const, nil, :CHashDir), :new,
          s(:lvar, :dir))),
      s(:lvasgn, :s,
        s(:send,
          s(:const, nil, :CrlStore), :new,
          s(:lvar, :c_store))),
      s(:lvasgn, :c,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :X509), :Certificate), :new,
          s(:send,
            s(:const, nil, :File), :read,
            s(:str, "cert_store/google_codesign.pem")))),
      s(:send, nil, :p,
        s(:send,
          s(:lvar, :s), :find_crl,
          s(:lvar, :c)))), nil))
