s(:begin,
  s(:send, nil, :require,
    s(:str, "c_rehash")),
  s(:send, nil, :require,
    s(:str, "crlstore")),
  s(:class,
    s(:const, nil, :CertStore), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :OpenSSL)),
      s(:send, nil, :include,
        s(:const, nil, :X509)),
      s(:send, nil, :attr_reader,
        s(:sym, :self_signed_ca)),
      s(:send, nil, :attr_reader,
        s(:sym, :other_ca)),
      s(:send, nil, :attr_reader,
        s(:sym, :ee)),
      s(:send, nil, :attr_reader,
        s(:sym, :crl)),
      s(:send, nil, :attr_reader,
        s(:sym, :request)),
      s(:def, :initialize,
        s(:args,
          s(:arg, :certs_dir)),
        s(:begin,
          s(:ivasgn, :@certs_dir,
            s(:lvar, :certs_dir)),
          s(:ivasgn, :@c_store,
            s(:send,
              s(:const, nil, :CHashDir), :new,
              s(:ivar, :@certs_dir))),
          s(:send,
            s(:ivar, :@c_store), :hash_dir,
            s(:true)),
          s(:ivasgn, :@crl_store,
            s(:send,
              s(:const, nil, :CrlStore), :new,
              s(:ivar, :@c_store))),
          s(:ivasgn, :@x509store,
            s(:send,
              s(:const, nil, :Store), :new)),
          s(:ivasgn, :@self_signed_ca,
            s(:ivasgn, :@other_ca,
              s(:ivasgn, :@ee,
                s(:ivasgn, :@crl,
                  s(:nil))))),
          s(:send, nil, :add_path),
          s(:send, nil, :scan_certs))),
      s(:def, :generate_cert,
        s(:args,
          s(:arg, :filename)),
        s(:send,
          s(:ivar, :@c_store), :load_pem_file,
          s(:lvar, :filename))),
      s(:def, :verify,
        s(:args,
          s(:arg, :cert)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :error),
              s(:lvasgn, :crl_map)),
            s(:send, nil, :do_verify,
              s(:lvar, :cert))),
          s(:if,
            s(:lvar, :error),
            s(:array,
              s(:array,
                s(:false),
                s(:lvar, :cert),
                s(:send,
                  s(:lvar, :crl_map), :[],
                  s(:send,
                    s(:lvar, :cert), :subject)),
                s(:lvar, :error))),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@x509store), :chain), :collect),
              s(:args,
                s(:arg, :c)),
              s(:array,
                s(:true),
                s(:lvar, :c),
                s(:send,
                  s(:lvar, :crl_map), :[],
                  s(:send,
                    s(:lvar, :c), :subject)),
                s(:nil)))))),
      s(:def, :match_cert,
        s(:args,
          s(:arg, :cert1),
          s(:arg, :cert2)),
        s(:and,
          s(:begin,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :cert1), :issuer), :cmp,
                s(:send,
                  s(:lvar, :cert2), :issuer)), :==,
              s(:int, 0))),
          s(:send,
            s(:send,
              s(:lvar, :cert1), :serial), :==,
            s(:send,
              s(:lvar, :cert2), :serial)))),
      s(:def, :is_ca?,
        s(:args,
          s(:arg, :cert)),
        s(:case,
          s(:send, nil, :guess_cert_type,
            s(:lvar, :cert)),
          s(:when,
            s(:const, nil, :CERT_TYPE_SELF_SIGNED),
            s(:true)),
          s(:when,
            s(:const, nil, :CERT_TYPE_OTHER),
            s(:true)),
          s(:false))),
      s(:def, :scan_certs,
        s(:args),
        s(:begin,
          s(:ivasgn, :@self_signed_ca,
            s(:array)),
          s(:ivasgn, :@other_ca,
            s(:array)),
          s(:ivasgn, :@ee,
            s(:array)),
          s(:ivasgn, :@crl,
            s(:array)),
          s(:ivasgn, :@request,
            s(:array)),
          s(:send, nil, :load_certs))),
      s(:send, nil, :private),
      s(:def, :add_path,
        s(:args),
        s(:send,
          s(:ivar, :@x509store), :add_path,
          s(:ivar, :@certs_dir))),
      s(:def, :do_verify,
        s(:args,
          s(:arg, :cert)),
        s(:begin,
          s(:lvasgn, :error_map,
            s(:hash)),
          s(:lvasgn, :crl_map,
            s(:hash)),
          s(:lvasgn, :result,
            s(:block,
              s(:send,
                s(:ivar, :@x509store), :verify,
                s(:lvar, :cert)),
              s(:args,
                s(:arg, :ok),
                s(:arg, :ctx)),
              s(:begin,
                s(:lvasgn, :cert,
                  s(:send,
                    s(:lvar, :ctx), :current_cert)),
                s(:if,
                  s(:send,
                    s(:lvar, :ctx), :current_crl),
                  s(:send,
                    s(:lvar, :crl_map), :[]=,
                    s(:send,
                      s(:lvar, :cert), :subject),
                    s(:true)), nil),
                s(:if,
                  s(:lvar, :ok),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :ctx), :current_crl), :!),
                    s(:if,
                      s(:lvasgn, :crl,
                        s(:send,
                          s(:ivar, :@crl_store), :find_crl,
                          s(:lvar, :cert))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :crl_map), :[]=,
                          s(:send,
                            s(:lvar, :cert), :subject),
                          s(:true)),
                        s(:if,
                          s(:block,
                            s(:send,
                              s(:send,
                                s(:lvar, :crl), :revoked), :find),
                            s(:args,
                              s(:arg, :revoked)),
                            s(:send,
                              s(:send,
                                s(:lvar, :revoked), :serial), :==,
                              s(:send,
                                s(:lvar, :cert), :serial))),
                          s(:begin,
                            s(:lvasgn, :ok,
                              s(:false)),
                            s(:lvasgn, :error_string,
                              s(:str, "certification revoked"))), nil)), nil), nil), nil),
                s(:if,
                  s(:lvar, :error_string),
                  s(:send,
                    s(:lvar, :error_map), :[]=,
                    s(:send,
                      s(:lvar, :cert), :subject),
                    s(:lvar, :error_string)), nil),
                s(:lvar, :ok)))),
          s(:lvasgn, :error,
            s(:if,
              s(:lvar, :result),
              s(:nil),
              s(:or,
                s(:send,
                  s(:lvar, :error_map), :[],
                  s(:send,
                    s(:lvar, :cert), :subject)),
                s(:send,
                  s(:ivar, :@x509store), :error_string)))),
          s(:return,
            s(:lvar, :error),
            s(:lvar, :crl_map)))),
      s(:def, :load_certs,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@c_store), :get_certs), :each),
            s(:args,
              s(:arg, :certfile)),
            s(:begin,
              s(:lvasgn, :cert,
                s(:send, nil, :generate_cert,
                  s(:lvar, :certfile))),
              s(:case,
                s(:send, nil, :guess_cert_type,
                  s(:lvar, :cert)),
                s(:when,
                  s(:const, nil, :CERT_TYPE_SELF_SIGNED),
                  s(:send,
                    s(:ivar, :@self_signed_ca), :<<,
                    s(:lvar, :cert))),
                s(:when,
                  s(:const, nil, :CERT_TYPE_OTHER),
                  s(:send,
                    s(:ivar, :@other_ca), :<<,
                    s(:lvar, :cert))),
                s(:when,
                  s(:const, nil, :CERT_TYPE_EE),
                  s(:send,
                    s(:ivar, :@ee), :<<,
                    s(:lvar, :cert))),
                s(:send, nil, :raise,
                  s(:str, "Unknown cert type."))))),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@c_store), :get_crls), :each),
            s(:args,
              s(:arg, :crlfile)),
            s(:send,
              s(:ivar, :@crl), :<<,
              s(:send, nil, :generate_cert,
                s(:lvar, :crlfile)))))),
      s(:casgn, nil, :CERT_TYPE_SELF_SIGNED,
        s(:int, 0)),
      s(:casgn, nil, :CERT_TYPE_OTHER,
        s(:int, 1)),
      s(:casgn, nil, :CERT_TYPE_EE,
        s(:int, 2)),
      s(:def, :guess_cert_type,
        s(:args,
          s(:arg, :cert)),
        s(:begin,
          s(:lvasgn, :ca,
            s(:lvasgn, :self_signed,
              s(:send, nil, :is_cert_self_signed,
                s(:lvar, :cert)))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :cert), :extensions), :each),
            s(:args,
              s(:arg, :ext)),
            s(:case,
              s(:send,
                s(:lvar, :ext), :oid),
              s(:when,
                s(:str, "basicConstraints"),
                s(:begin,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "CA:(TRUE|FALSE), pathlen:(\\d+)"),
                      s(:regopt)),
                    s(:send,
                      s(:lvar, :ext), :value)),
                  s(:if,
                    s(:lvar, :ca), nil,
                    s(:lvasgn, :ca,
                      s(:begin,
                        s(:send,
                          s(:nth_ref, 1), :==,
                          s(:str, "TRUE"))))))),
              s(:when,
                s(:str, "keyUsage"),
                s(:begin,
                  s(:lvasgn, :usage,
                    s(:send,
                      s(:send,
                        s(:lvar, :ext), :value), :split,
                      s(:regexp,
                        s(:str, "\\s*,\\s*"),
                        s(:regopt)))),
                  s(:if,
                    s(:lvar, :ca), nil,
                    s(:lvasgn, :ca,
                      s(:send,
                        s(:lvar, :usage), :include?,
                        s(:str, "Certificate Sign")))))),
              s(:when,
                s(:str, "nsCertType"),
                s(:begin,
                  s(:lvasgn, :usage,
                    s(:send,
                      s(:send,
                        s(:lvar, :ext), :value), :split,
                      s(:regexp,
                        s(:str, "\\s*,\\s*"),
                        s(:regopt)))),
                  s(:if,
                    s(:lvar, :ca), nil,
                    s(:lvasgn, :ca,
                      s(:send,
                        s(:lvar, :usage), :include?,
                        s(:str, "SSL CA")))))), nil)),
          s(:if,
            s(:lvar, :ca),
            s(:if,
              s(:lvar, :self_signed),
              s(:const, nil, :CERT_TYPE_SELF_SIGNED),
              s(:const, nil, :CERT_TYPE_OTHER)),
            s(:const, nil, :CERT_TYPE_EE)))),
      s(:def, :is_cert_self_signed,
        s(:args,
          s(:arg, :cert)),
        s(:send,
          s(:send,
            s(:send,
              s(:lvar, :cert), :subject), :to_s), :==,
          s(:send,
            s(:send,
              s(:lvar, :cert), :issuer), :to_s))))),
  s(:if,
    s(:send,
      s(:gvar, :$0), :==,
      s(:str, "(string)")),
    s(:lvasgn, :c,
      s(:send,
        s(:const, nil, :CertStore), :new,
        s(:str, "trust_certs"))), nil))
