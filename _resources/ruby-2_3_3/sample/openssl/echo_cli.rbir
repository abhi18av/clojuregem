s(:begin,
  s(:send, nil, :require,
    s(:str, "socket")),
  s(:send, nil, :require,
    s(:str, "openssl")),
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:lvasgn, :options,
    s(:send,
      s(:const, nil, :ARGV), :getopts,
      s(:str, "p:c:k:C:"))),
  s(:lvasgn, :host,
    s(:or,
      s(:send,
        s(:const, nil, :ARGV), :[],
        s(:int, 0)),
      s(:str, "localhost"))),
  s(:lvasgn, :port,
    s(:or,
      s(:send,
        s(:lvar, :options), :[],
        s(:str, "p")),
      s(:str, "2000"))),
  s(:lvasgn, :cert_file,
    s(:send,
      s(:lvar, :options), :[],
      s(:str, "c"))),
  s(:lvasgn, :key_file,
    s(:send,
      s(:lvar, :options), :[],
      s(:str, "k"))),
  s(:lvasgn, :ca_path,
    s(:send,
      s(:lvar, :options), :[],
      s(:str, "C"))),
  s(:lvasgn, :ctx,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new)),
  s(:if,
    s(:and,
      s(:lvar, :cert_file),
      s(:lvar, :key_file)),
    s(:begin,
      s(:send,
        s(:lvar, :ctx), :cert=,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :X509), :Certificate), :new,
          s(:send,
            s(:const, nil, :File), :read,
            s(:lvar, :cert_file)))),
      s(:send,
        s(:lvar, :ctx), :key=,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :PKey), :RSA), :new,
          s(:send,
            s(:const, nil, :File), :read,
            s(:lvar, :key_file))))), nil),
  s(:if,
    s(:lvar, :ca_path),
    s(:begin,
      s(:send,
        s(:lvar, :ctx), :verify_mode=,
        s(:const,
          s(:const,
            s(:const, nil, :OpenSSL), :SSL), :VERIFY_PEER)),
      s(:send,
        s(:lvar, :ctx), :ca_path=,
        s(:lvar, :ca_path))),
    s(:send,
      s(:gvar, :$stderr), :puts,
      s(:str, "!!! WARNING: PEER CERTIFICATE WON'T BE VERIFIED !!!"))),
  s(:lvasgn, :s,
    s(:send,
      s(:const, nil, :TCPSocket), :new,
      s(:lvar, :host),
      s(:lvar, :port))),
  s(:lvasgn, :ssl,
    s(:send,
      s(:const,
        s(:const,
          s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
      s(:lvar, :s),
      s(:lvar, :ctx))),
  s(:send,
    s(:lvar, :ssl), :connect),
  s(:send, nil, :p,
    s(:send,
      s(:lvar, :ssl), :peer_cert)),
  s(:lvasgn, :errors,
    s(:send,
      s(:const, nil, :Hash), :new)),
  s(:block,
    s(:send,
      s(:send,
        s(:send,
          s(:const,
            s(:const, nil, :OpenSSL), :X509), :constants), :grep,
        s(:regexp,
          s(:str, "^V_(ERR_|OK)"),
          s(:regopt))), :each),
    s(:args,
      s(:arg, :name)),
    s(:send,
      s(:lvar, :errors), :[]=,
      s(:send,
        s(:const,
          s(:const, nil, :OpenSSL), :X509), :const_get,
        s(:lvar, :name)),
      s(:lvar, :name))),
  s(:send, nil, :p,
    s(:send,
      s(:lvar, :errors), :[],
      s(:send,
        s(:lvar, :ssl), :verify_result))),
  s(:send,
    s(:lvar, :ssl), :sync_close=,
    s(:true)),
  s(:while,
    s(:lvasgn, :line,
      s(:send,
        s(:gvar, :$stdin), :gets)),
    s(:begin,
      s(:send,
        s(:lvar, :ssl), :write,
        s(:lvar, :line)),
      s(:send, nil, :puts,
        s(:send,
          s(:send,
            s(:lvar, :ssl), :gets), :inspect)))),
  s(:send,
    s(:lvar, :ssl), :close))
