s(:begin,
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:send, nil, :require,
    s(:str, "openssl")),
  s(:send, nil, :include,
    s(:const, nil, :OpenSSL)),
  s(:def, :usage,
    s(:args),
    s(:begin,
      s(:lvasgn, :myname,
        s(:send,
          s(:const, nil, :File), :basename,
          s(:gvar, :$0))),
      s(:send,
        s(:gvar, :$stderr), :puts,
        s(:dstr,
          s(:str, "Usage: "),
          s(:begin,
            s(:lvar, :myname)),
          s(:str, " [--key keypair_file] name\n"),
          s(:str, "  name ... ex. /C=JP/O=RRR/OU=CA/CN=NaHi/emailAddress=nahi@example.org\n"))),
      s(:send, nil, :exit))),
  s(:lvasgn, :options,
    s(:send,
      s(:const, nil, :ARGV), :getopts,
      s(:nil),
      s(:str, "key:"),
      s(:str, "csrout:"),
      s(:str, "keyout:"))),
  s(:lvasgn, :keypair_file,
    s(:send,
      s(:lvar, :options), :[],
      s(:str, "key"))),
  s(:lvasgn, :csrout,
    s(:or,
      s(:send,
        s(:lvar, :options), :[],
        s(:str, "csrout")),
      s(:str, "csr.pem"))),
  s(:lvasgn, :keyout,
    s(:or,
      s(:send,
        s(:lvar, :options), :[],
        s(:str, "keyout")),
      s(:str, "keypair.pem"))),
  s(:send,
    s(:gvar, :$stdout), :sync=,
    s(:true)),
  s(:or,
    s(:lvasgn, :name_str,
      s(:send,
        s(:const, nil, :ARGV), :shift)),
    s(:send, nil, :usage)),
  s(:lvasgn, :name,
    s(:send,
      s(:const,
        s(:const, nil, :X509), :Name), :parse,
      s(:lvar, :name_str))),
  s(:lvasgn, :keypair,
    s(:nil)),
  s(:if,
    s(:lvar, :keypair_file),
    s(:lvasgn, :keypair,
      s(:send,
        s(:const,
          s(:const, nil, :PKey), :RSA), :new,
        s(:send,
          s(:send,
            s(:const, nil, :File), :open,
            s(:lvar, :keypair_file)), :read))),
    s(:begin,
      s(:lvasgn, :keypair,
        s(:block,
          s(:send,
            s(:const,
              s(:const, nil, :PKey), :RSA), :new,
            s(:int, 1024)),
          s(:args),
          s(:send, nil, :putc,
            s(:str, ".")))),
      s(:send, nil, :puts),
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, "Writing "),
          s(:begin,
            s(:lvar, :keyout)),
          s(:str, "..."))),
      s(:block,
        s(:send,
          s(:const, nil, :File), :open,
          s(:lvar, :keyout),
          s(:str, "w"),
          s(:int, 256)),
        s(:args,
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :<<,
          s(:send,
            s(:lvar, :keypair), :to_pem))))),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Generating CSR for "),
      s(:begin,
        s(:lvar, :name_str)))),
  s(:lvasgn, :req,
    s(:send,
      s(:const,
        s(:const, nil, :X509), :Request), :new)),
  s(:send,
    s(:lvar, :req), :version=,
    s(:int, 0)),
  s(:send,
    s(:lvar, :req), :subject=,
    s(:lvar, :name)),
  s(:send,
    s(:lvar, :req), :public_key=,
    s(:send,
      s(:lvar, :keypair), :public_key)),
  s(:send,
    s(:lvar, :req), :sign,
    s(:lvar, :keypair),
    s(:send,
      s(:const,
        s(:const, nil, :Digest), :MD5), :new)),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Writing "),
      s(:begin,
        s(:lvar, :csrout)),
      s(:str, "..."))),
  s(:block,
    s(:send,
      s(:const, nil, :File), :open,
      s(:lvar, :csrout),
      s(:str, "w")),
    s(:args,
      s(:arg, :f)),
    s(:send,
      s(:lvar, :f), :<<,
      s(:send,
        s(:lvar, :req), :to_pem))),
  s(:send, nil, :puts,
    s(:send,
      s(:lvar, :req), :to_text)),
  s(:send, nil, :puts,
    s(:send,
      s(:lvar, :req), :to_pem)))
