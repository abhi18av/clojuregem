s(:begin,
  s(:send, nil, :require,
    s(:str, "rss")),
  s(:def, :error,
    s(:args,
      s(:arg, :exception)),
    s(:begin,
      s(:lvasgn, :mark,
        s(:send,
          s(:str, "="), :*,
          s(:int, 20))),
      s(:lvasgn, :mark,
        s(:dstr,
          s(:begin,
            s(:lvar, :mark)),
          s(:str, " error "),
          s(:begin,
            s(:lvar, :mark)))),
      s(:send, nil, :puts,
        s(:lvar, :mark)),
      s(:send, nil, :puts,
        s(:send,
          s(:lvar, :exception), :class)),
      s(:send, nil, :puts,
        s(:send,
          s(:lvar, :exception), :message)),
      s(:send, nil, :puts,
        s(:send,
          s(:lvar, :exception), :backtrace)),
      s(:send, nil, :puts,
        s(:lvar, :mark)))),
  s(:lvasgn, :verbose,
    s(:false)),
  s(:lvasgn, :before_time,
    s(:send,
      s(:const, nil, :Time), :now)),
  s(:block,
    s(:send,
      s(:const, nil, :ARGV), :each),
    s(:args,
      s(:arg, :fname)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :fname), :==,
          s(:str, "-v")),
        s(:begin,
          s(:lvasgn, :verbose,
            s(:true)),
          s(:next)), nil),
      s(:lvasgn, :source,
        s(:nil)),
      s(:block,
        s(:send,
          s(:const, nil, :File), :open,
          s(:lvar, :fname)),
        s(:args,
          s(:arg, :f)),
        s(:lvasgn, :source,
          s(:send,
            s(:lvar, :f), :read))),
      s(:lvasgn, :rss,
        s(:nil)),
      s(:lvasgn, :read,
        s(:false)),
      s(:kwbegin,
        s(:rescue,
          s(:begin,
            s(:lvasgn, :rss,
              s(:send,
                s(:const,
                  s(:const, nil, :RSS), :Parser), :parse,
                s(:lvar, :source))),
            s(:send, nil, :puts,
              s(:dstr,
                s(:str, "Re-read valid feed: "),
                s(:begin,
                  s(:lvar, :fname)))),
            s(:send,
              s(:const,
                s(:const, nil, :RSS), :Parser), :parse,
              s(:send,
                s(:lvar, :rss), :to_s)),
            s(:lvasgn, :read,
              s(:true))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :RSS), :InvalidRSSError)), nil,
            s(:begin,
              s(:if,
                s(:lvar, :verbose),
                s(:send, nil, :error,
                  s(:gvar, :$!)), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :rss,
                    s(:send,
                      s(:const,
                        s(:const, nil, :RSS), :Parser), :parse,
                      s(:lvar, :source),
                      s(:false))),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :RSS), :Error)), nil,
                    s(:if,
                      s(:lvar, :verbose),
                      s(:send, nil, :error,
                        s(:gvar, :$!)), nil)), nil)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :RSS), :Error)), nil,
            s(:if,
              s(:lvar, :verbose),
              s(:send, nil, :error,
                s(:gvar, :$!)), nil)), nil)),
      s(:if,
        s(:send,
          s(:lvar, :rss), :nil?),
        s(:send, nil, :puts,
          s(:dstr,
            s(:str, "Invalid feed: "),
            s(:begin,
              s(:lvar, :fname)))),
        s(:if,
          s(:send,
            s(:lvar, :read), :!),
          s(:begin,
            s(:send, nil, :puts,
              s(:dstr,
                s(:str, "Re-read invalid feed: "),
                s(:begin,
                  s(:lvar, :fname)))),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const,
                    s(:const, nil, :RSS), :Parser), :parse,
                  s(:send,
                    s(:lvar, :rss), :to_s)),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :RSS), :Error)), nil,
                  s(:begin,
                    s(:send, nil, :puts,
                      s(:dstr,
                        s(:str, "  Error occurred: "),
                        s(:begin,
                          s(:lvar, :fname)))),
                    s(:if,
                      s(:lvar, :verbose),
                      s(:send, nil, :error,
                        s(:gvar, :$!)), nil))), nil))), nil)))),
  s(:lvasgn, :processing_time,
    s(:send,
      s(:send,
        s(:const, nil, :Time), :now), :-,
      s(:lvar, :before_time))),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Used XML parser: "),
      s(:begin,
        s(:send,
          s(:const,
            s(:const, nil, :RSS), :Parser), :default_parser)))),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Processing time: "),
      s(:begin,
        s(:lvar, :processing_time)),
      s(:str, "s"))))
