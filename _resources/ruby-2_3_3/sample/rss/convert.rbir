s(:begin,
  s(:send, nil, :require,
    s(:str, "rss")),
  s(:lvasgn, :feeds,
    s(:array)),
  s(:lvasgn, :verbose,
    s(:false)),
  s(:lvasgn, :encoding,
    s(:str, "UTF-8")),
  s(:lvasgn, :to_version,
    s(:str, "1.0")),
  s(:def, :error,
    s(:args,
      s(:arg, :exception)),
    s(:begin,
      s(:lvasgn, :mark,
        s(:send,
          s(:str, "="), :*,
          s(:int, 20))),
      s(:lvasgn, :mark,
        s(:dstr,
          s(:begin,
            s(:lvar, :mark)),
          s(:str, " error "),
          s(:begin,
            s(:lvar, :mark)))),
      s(:send,
        s(:const, nil, :STDERR), :puts,
        s(:lvar, :mark)),
      s(:send,
        s(:const, nil, :STDERR), :puts,
        s(:send,
          s(:lvar, :exception), :class)),
      s(:send,
        s(:const, nil, :STDERR), :puts,
        s(:send,
          s(:lvar, :exception), :message)),
      s(:send,
        s(:const, nil, :STDERR), :puts,
        s(:send,
          s(:lvar, :exception), :backtrace)),
      s(:send,
        s(:const, nil, :STDERR), :puts,
        s(:lvar, :mark)))),
  s(:lvasgn, :before_time,
    s(:send,
      s(:const, nil, :Time), :now)),
  s(:block,
    s(:send,
      s(:const, nil, :ARGV), :each),
    s(:args,
      s(:arg, :fname)),
    s(:begin,
      s(:case,
        s(:lvar, :fname),
        s(:when,
          s(:str, "-v"),
          s(:begin,
            s(:lvasgn, :verbose,
              s(:true)),
            s(:next))),
        s(:when,
          s(:regexp,
            s(:str, "^-t(0\\.91|1\\.0|2\\.0|atom)$"),
            s(:regopt)),
          s(:begin,
            s(:lvasgn, :to_version,
              s(:nth_ref, 1)),
            s(:next))), nil),
      s(:lvasgn, :rss,
        s(:nil)),
      s(:lvasgn, :f,
        s(:send,
          s(:const, nil, :File), :read,
          s(:lvar, :fname))),
      s(:kwbegin,
        s(:rescue,
          s(:lvasgn, :rss,
            s(:send,
              s(:const,
                s(:const, nil, :RSS), :Parser), :parse,
              s(:lvar, :f))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :RSS), :InvalidRSSError)), nil,
            s(:begin,
              s(:if,
                s(:lvar, :verbose),
                s(:send, nil, :error,
                  s(:gvar, :$!)), nil),
              s(:kwbegin,
                s(:rescue,
                  s(:lvasgn, :rss,
                    s(:send,
                      s(:const,
                        s(:const, nil, :RSS), :Parser), :parse,
                      s(:lvar, :f),
                      s(:false))),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :RSS), :Error)), nil,
                    s(:if,
                      s(:lvar, :verbose),
                      s(:send, nil, :error,
                        s(:gvar, :$!)), nil)), nil)))),
          s(:resbody,
            s(:array,
              s(:const,
                s(:const, nil, :RSS), :Error)), nil,
            s(:if,
              s(:lvar, :verbose),
              s(:send, nil, :error,
                s(:gvar, :$!)), nil)), nil)),
      s(:if,
        s(:send,
          s(:lvar, :rss), :nil?),
        s(:send,
          s(:const, nil, :STDERR), :puts,
          s(:dstr,
            s(:begin,
              s(:lvar, :fname)),
            s(:str, " does not include RSS 1.0 or 0.9x/2.0"))),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:lvar, :rss), :output_encoding=,
                s(:lvar, :encoding)),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :RSS), :UnknownConversionMethodError)), nil,
                s(:if,
                  s(:lvar, :verbose),
                  s(:send, nil, :error,
                    s(:gvar, :$!)), nil)), nil)),
          s(:send,
            s(:lvar, :feeds), :<<,
            s(:array,
              s(:lvar, :fname),
              s(:lvar, :rss))))))),
  s(:lvasgn, :processing_time,
    s(:send,
      s(:send,
        s(:const, nil, :Time), :now), :-,
      s(:lvar, :before_time))),
  s(:block,
    s(:send,
      s(:lvar, :feeds), :each),
    s(:args,
      s(:arg, :fname),
      s(:arg, :rss)),
    s(:begin,
      s(:lvasgn, :converted_rss,
        s(:send,
          s(:lvar, :rss), :to_xml,
          s(:lvar, :to_version))),
      s(:lvasgn, :output_name,
        s(:send,
          s(:lvar, :fname), :sub,
          s(:regexp,
            s(:str, "(\\.[^\\.]+)$"),
            s(:regopt)),
          s(:dstr,
            s(:str, "-"),
            s(:begin,
              s(:lvar, :to_version)),
            s(:str, "\\1")))),
      s(:block,
        s(:send,
          s(:const, nil, :File), :open,
          s(:lvar, :output_name),
          s(:str, "w")),
        s(:args,
          s(:arg, :output)),
        s(:send,
          s(:lvar, :output), :print,
          s(:lvar, :converted_rss))))),
  s(:send,
    s(:const, nil, :STDERR), :puts,
    s(:dstr,
      s(:str, "Used XML parser: "),
      s(:begin,
        s(:send,
          s(:const,
            s(:const, nil, :RSS), :Parser), :default_parser)))),
  s(:send,
    s(:const, nil, :STDERR), :puts,
    s(:dstr,
      s(:str, "Processing time: "),
      s(:begin,
        s(:lvar, :processing_time)),
      s(:str, "s"))))
