s(:begin,
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :ARGV), :[],
        s(:int, 0)), :=~,
      s(:regexp,
        s(:str, "-p"),
        s(:regopt))),
    s(:begin,
      s(:send,
        s(:const, nil, :ARGV), :shift),
      s(:lvasgn, :path,
        s(:send,
          s(:const, nil, :ARGV), :shift))), nil),
  s(:if,
    s(:send,
      s(:lvar, :path), :==,
      s(:nil)),
    s(:lvasgn, :path,
      s(:str, "")),
    s(:if,
      s(:send,
        s(:lvar, :path), :!~,
        s(:regexp,
          s(:str, "/$"),
          s(:regopt))),
      s(:op_asgn,
        s(:lvasgn, :path), :+,
        s(:str, "/")), nil)),
  s(:while,
    s(:lvasgn, :line,
      s(:send, nil, :gets)),
    s(:case,
      s(:lvar, :line),
      s(:when,
        s(:regexp,
          s(:str, ":$"),
          s(:regopt)),
        s(:lvasgn, :path,
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :line), :chop), :chop), :+,
            s(:str, "/")))),
      s(:when,
        s(:regexp,
          s(:str, "^total"),
          s(:regopt)),
        s(:regexp,
          s(:str, "^d"),
          s(:regopt)), nil),
      s(:when,
        s(:regexp,
          s(:str, "^(.*\\d )(.+)$"),
          s(:regopt)),
        s(:send, nil, :print,
          s(:nth_ref, 1),
          s(:lvar, :path),
          s(:nth_ref, 2),
          s(:str, "\n"))), nil)))
