s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:send, nil, :require,
    s(:str, "observer")),
  s(:class,
    s(:const, nil, :Tick), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :Observable)),
      s(:def, :initialize,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Thread), :start),
          s(:args),
          s(:block,
            s(:send, nil, :loop),
            s(:args),
            s(:begin,
              s(:send, nil, :sleep,
                s(:float, 0.999)),
              s(:lvasgn, :now,
                s(:send,
                  s(:const, nil, :Time), :now)),
              s(:send, nil, :changed),
              s(:send, nil, :notify_observers,
                s(:send,
                  s(:lvar, :now), :hour),
                s(:send,
                  s(:lvar, :now), :min),
                s(:send,
                  s(:lvar, :now), :sec)))))))),
  s(:class,
    s(:const, nil, :Clock), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :tick)),
        s(:begin,
          s(:ivasgn, :@tick,
            s(:lvar, :tick)),
          s(:send,
            s(:ivar, :@tick), :add_observer,
            s(:self)))),
      s(:def, :update,
        s(:args,
          s(:arg, :h),
          s(:arg, :m),
          s(:arg, :s)),
        s(:begin,
          s(:send, nil, :printf,
            s(:str, "\e[8D%02d:%02d:%02d"),
            s(:lvar, :h),
            s(:lvar, :m),
            s(:lvar, :s)),
          s(:send,
            s(:const, nil, :STDOUT), :flush))))),
  s(:lvasgn, :clock,
    s(:send,
      s(:const, nil, :Clock), :new,
      s(:send,
        s(:const, nil, :Tick), :new))),
  s(:send, nil, :sleep))
