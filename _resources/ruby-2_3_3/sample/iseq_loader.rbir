s(:begin,
  s(:class,
    s(:const,
      s(:const, nil, :RubyVM), :InstructionSequence), nil,
    s(:begin,
      s(:gvasgn, :$ISEQ_LOADER_LOADED,
        s(:int, 0)),
      s(:gvasgn, :$ISEQ_LOADER_COMPILED,
        s(:int, 0)),
      s(:gvasgn, :$ISEQ_LOADER_IGNORED,
        s(:int, 0)),
      s(:casgn, nil, :LAUNCHED_TIME,
        s(:send,
          s(:const, nil, :Time), :now)),
      s(:casgn, nil, :COMPILE_FILE_ENABLE,
        s(:or,
          s(:false),
          s(:true))),
      s(:casgn, nil, :COMPILE_VERBOSE,
        s(:or,
          s(:gvar, :$VERBOSE),
          s(:false))),
      s(:casgn, nil, :COMPILE_DEBUG,
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "RUBY_ISEQ_LOADER_DEBUG"))),
      s(:casgn, nil, :COMPILE_IF_NOT_COMPILED,
        s(:send,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "RUBY_ISEQ_LOADER_STORAGE_COMPILE_IF_NOT_COMPILED")), :==,
          s(:str, "true"))),
      s(:if,
        s(:const, nil, :COMPILE_VERBOSE),
        s(:block,
          s(:send, nil, :at_exit),
          s(:args),
          s(:send,
            s(:const, nil, :STDERR), :puts,
            s(:send,
              s(:send,
                s(:send,
                  s(:dstr,
                    s(:str, "[ISEQ_LOADER] "),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :Process), :pid)),
                    s(:str, " time: "),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Time), :now), :-,
                        s(:const, nil, :LAUNCHED_TIME))),
                    s(:str, ", ")), :+,
                  s(:dstr,
                    s(:str, "loaded: "),
                    s(:begin,
                      s(:gvar, :$ISEQ_LOADER_LOADED)),
                    s(:str, ", "))), :+,
                s(:dstr,
                  s(:str, "compied: "),
                  s(:begin,
                    s(:gvar, :$ISEQ_LOADER_COMPILED)),
                  s(:str, ", "))), :+,
              s(:dstr,
                s(:str, "ignored: "),
                s(:begin,
                  s(:gvar, :$ISEQ_LOADER_IGNORED)))))), nil),
      s(:if,
        s(:lvasgn, :cf_dir,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "RUBY_ISEQ_LOADER_STORAGE_DIR"))), nil,
        s(:begin,
          s(:lvasgn, :cf_dir,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:str, "~/.ruby_binaries"))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :cf_dir)), nil,
            s(:send,
              s(:const, nil, :Dir), :mkdir,
              s(:lvar, :cf_dir))))),
      s(:casgn, nil, :CF_PREFIX,
        s(:dstr,
          s(:begin,
            s(:lvar, :cf_dir)),
          s(:str, "/cb."))),
      s(:class,
        s(:const, nil, :NullStorage), nil,
        s(:begin,
          s(:def, :load_iseq,
            s(:args,
              s(:arg, :fname)), nil),
          s(:def, :compile_and_save_isq,
            s(:args,
              s(:arg, :fname)), nil),
          s(:def, :unlink_compiled_iseq,
            s(:args), nil))),
      s(:class,
        s(:const, nil, :BasicStorage), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args),
            s(:send, nil, :require,
              s(:str, "digest/sha1"))),
          s(:def, :load_iseq,
            s(:args,
              s(:arg, :fname)),
            s(:begin,
              s(:lvasgn, :iseq_key,
                s(:send, nil, :iseq_key_name,
                  s(:lvar, :fname))),
              s(:if,
                s(:and,
                  s(:send, nil, :compiled_iseq_exist?,
                    s(:lvar, :fname),
                    s(:lvar, :iseq_key)),
                  s(:send, nil, :compiled_iseq_is_younger?,
                    s(:lvar, :fname),
                    s(:lvar, :iseq_key))),
                s(:begin,
                  s(:op_asgn,
                    s(:gvasgn, :$ISEQ_LOADER_LOADED), :+,
                    s(:int, 1)),
                  s(:if,
                    s(:const, nil, :COMPILE_DEBUG),
                    s(:send,
                      s(:const, nil, :STDERR), :puts,
                      s(:dstr,
                        s(:str, "[ISEQ_LOADER] "),
                        s(:begin,
                          s(:send,
                            s(:const, nil, :Process), :pid)),
                        s(:str, " load "),
                        s(:begin,
                          s(:lvar, :fname)),
                        s(:str, " from "),
                        s(:begin,
                          s(:lvar, :iseq_key)))), nil),
                  s(:lvasgn, :binary,
                    s(:send, nil, :read_compiled_iseq,
                      s(:lvar, :fname),
                      s(:lvar, :iseq_key))),
                  s(:lvasgn, :iseq,
                    s(:send,
                      s(:const,
                        s(:const, nil, :RubyVM), :InstructionSequence), :load_from_binary,
                      s(:lvar, :binary))),
                  s(:lvar, :iseq)),
                s(:if,
                  s(:const, nil, :COMPILE_IF_NOT_COMPILED),
                  s(:send, nil, :compile_and_save_iseq,
                    s(:lvar, :fname),
                    s(:lvar, :iseq_key)),
                  s(:begin,
                    s(:op_asgn,
                      s(:gvasgn, :$ISEQ_LOADER_IGNORED), :+,
                      s(:int, 1)),
                    s(:nil)))))),
          s(:def, :extra_data,
            s(:args,
              s(:arg, :fname)),
            s(:dstr,
              s(:str, "SHA-1:"),
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:cbase), :Digest), :SHA1), :file,
                    s(:lvar, :fname)), :digest)))),
          s(:def, :compile_and_save_iseq,
            s(:args,
              s(:arg, :fname),
              s(:optarg, :iseq_key,
                s(:send, nil, :iseq_key_name,
                  s(:lvar, :fname)))),
            s(:begin,
              s(:op_asgn,
                s(:gvasgn, :$ISEQ_LOADER_COMPILED), :+,
                s(:int, 1)),
              s(:if,
                s(:const, nil, :COMPILE_DEBUG),
                s(:send,
                  s(:const, nil, :STDERR), :puts,
                  s(:dstr,
                    s(:str, "[RUBY_COMPILED_FILE] compile "),
                    s(:begin,
                      s(:lvar, :fname)))), nil),
              s(:lvasgn, :iseq,
                s(:send,
                  s(:const,
                    s(:const, nil, :RubyVM), :InstructionSequence), :compile_file,
                  s(:lvar, :fname))),
              s(:lvasgn, :binary,
                s(:send,
                  s(:lvar, :iseq), :to_binary,
                  s(:send, nil, :extra_data,
                    s(:lvar, :fname)))),
              s(:send, nil, :write_compiled_iseq,
                s(:lvar, :fname),
                s(:lvar, :iseq_key),
                s(:lvar, :binary)),
              s(:lvar, :iseq))),
          s(:send, nil, :private),
          s(:def, :iseq_key_name,
            s(:args,
              s(:arg, :fname)),
            s(:lvar, :fname)))),
      s(:class,
        s(:const, nil, :FSStorage),
        s(:const, nil, :BasicStorage),
        s(:begin,
          s(:def, :initialize,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send, nil, :require,
                s(:str, "fileutils")),
              s(:ivasgn, :@dir,
                s(:send,
                  s(:const, nil, :CF_PREFIX), :+,
                  s(:str, "files"))),
              s(:if,
                s(:send,
                  s(:const, nil, :File), :directory?,
                  s(:ivar, :@dir)), nil,
                s(:send,
                  s(:const, nil, :FileUtils), :mkdir_p,
                  s(:ivar, :@dir))))),
          s(:def, :unlink_compiled_iseq,
            s(:args),
            s(:send,
              s(:const, nil, :File), :unlink,
              s(:send, nil, :compile_file_path))),
          s(:send, nil, :private),
          s(:def, :iseq_key_name,
            s(:args,
              s(:arg, :fname)),
            s(:dstr,
              s(:begin,
                s(:lvar, :fname)),
              s(:str, ".yarb"))),
          s(:def, :compiled_iseq_exist?,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key)),
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:lvar, :iseq_key))),
          s(:def, :compiled_iseq_is_younger?,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key)),
            s(:send,
              s(:send,
                s(:const, nil, :File), :mtime,
                s(:lvar, :iseq_key)), :>=,
              s(:send,
                s(:const, nil, :File), :mtime,
                s(:lvar, :fname)))),
          s(:def, :read_compiled_iseq,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key)),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :iseq_key),
                s(:str, "rb")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :read))),
          s(:def, :write_compiled_iseq,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key),
              s(:arg, :binary)),
            s(:block,
              s(:send, nil, :open,
                s(:lvar, :iseq_key),
                s(:str, "wb")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :write,
                s(:lvar, :binary)))))),
      s(:class,
        s(:const, nil, :FS2Storage),
        s(:const, nil, :FSStorage),
        s(:def, :iseq_key_name,
          s(:args,
            s(:arg, :fname)),
          s(:send,
            s(:ivar, :@dir), :+,
            s(:block,
              s(:send,
                s(:lvar, :fname), :gsub,
                s(:regexp,
                  s(:str, "[^A-Za-z0-9\\._-]"),
                  s(:regopt))),
              s(:args,
                s(:arg, :c)),
              s(:send,
                s(:str, "%02x"), :%,
                s(:send,
                  s(:lvar, :c), :ord)))))),
      s(:class,
        s(:const, nil, :DBMStorage),
        s(:const, nil, :BasicStorage),
        s(:begin,
          s(:def, :initialize,
            s(:args),
            s(:begin,
              s(:send, nil, :require,
                s(:str, "dbm")),
              s(:ivasgn, :@db,
                s(:send,
                  s(:const, nil, :DBM), :open,
                  s(:send,
                    s(:const, nil, :CF_PREFIX), :+,
                    s(:str, "db")))))),
          s(:def, :unlink_compiled_iseq,
            s(:args),
            s(:send,
              s(:ivar, :@db), :delete,
              s(:send, nil, :fname))),
          s(:send, nil, :private),
          s(:def, :date_key_name,
            s(:args,
              s(:arg, :fname)),
            s(:dstr,
              s(:str, "date."),
              s(:begin,
                s(:lvar, :fname)))),
          s(:def, :iseq_key_name,
            s(:args,
              s(:arg, :fname)),
            s(:dstr,
              s(:str, "body."),
              s(:begin,
                s(:lvar, :fname)))),
          s(:def, :compiled_iseq_exist?,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key)),
            s(:send,
              s(:ivar, :@db), :has_key?,
              s(:lvar, :iseq_key))),
          s(:def, :compiled_iseq_is_younger?,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key)),
            s(:begin,
              s(:lvasgn, :date_key,
                s(:send, nil, :date_key_name,
                  s(:lvar, :fname))),
              s(:if,
                s(:send,
                  s(:ivar, :@db), :has_key?,
                  s(:lvar, :date_key)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@db), :[],
                      s(:lvar, :date_key)), :to_i), :>=,
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :mtime,
                      s(:lvar, :fname)), :to_i)), nil))),
          s(:def, :read_compiled_iseq,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key)),
            s(:send,
              s(:ivar, :@db), :[],
              s(:lvar, :iseq_key))),
          s(:def, :write_compiled_iseq,
            s(:args,
              s(:arg, :fname),
              s(:arg, :iseq_key),
              s(:arg, :binary)),
            s(:begin,
              s(:lvasgn, :date_key,
                s(:send, nil, :date_key_name,
                  s(:lvar, :fname))),
              s(:send,
                s(:ivar, :@db), :[]=,
                s(:lvar, :iseq_key),
                s(:lvar, :binary)),
              s(:send,
                s(:ivar, :@db), :[]=,
                s(:lvar, :date_key),
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :to_i)))))),
      s(:casgn, nil, :STORAGE,
        s(:case,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "RUBY_ISEQ_LOADER_STORAGE")),
          s(:when,
            s(:str, "dbm"),
            s(:send,
              s(:const, nil, :DBMStorage), :new)),
          s(:when,
            s(:str, "fs"),
            s(:send,
              s(:const, nil, :FSStorage), :new)),
          s(:when,
            s(:str, "fs2"),
            s(:send,
              s(:const, nil, :FS2Storage), :new)),
          s(:when,
            s(:str, "null"),
            s(:send,
              s(:const, nil, :NullStorage), :new)),
          s(:send,
            s(:const, nil, :FSStorage), :new))),
      s(:if,
        s(:const, nil, :COMPILE_VERBOSE),
        s(:send,
          s(:const, nil, :STDERR), :puts,
          s(:dstr,
            s(:str, "[ISEQ_LOADER] use "),
            s(:begin,
              s(:send,
                s(:const, nil, :STORAGE), :class)),
            s(:str, " "))), nil),
      s(:defs,
        s(:self), :load_iseq,
        s(:args,
          s(:arg, :fname)),
        s(:send,
          s(:const, nil, :STORAGE), :load_iseq,
          s(:lvar, :fname))),
      s(:defs,
        s(:self), :compile_and_save_iseq,
        s(:args,
          s(:arg, :fname)),
        s(:send,
          s(:const, nil, :STORAGE), :compile_and_save_iseq,
          s(:lvar, :fname))),
      s(:defs,
        s(:self), :unlink_compiled_iseq,
        s(:args,
          s(:arg, :fname)),
        s(:send,
          s(:const, nil, :STORAGE), :unlink_compiled_iseq,
          s(:lvar, :fname))))),
  s(:if,
    s(:send,
      s(:str, "(string)"), :==,
      s(:gvar, :$0)),
    s(:block,
      s(:send,
        s(:const, nil, :ARGV), :each),
      s(:args,
        s(:arg, :path)),
      s(:if,
        s(:send,
          s(:const, nil, :File), :directory?,
          s(:lvar, :path)),
        s(:begin,
          s(:lvasgn, :pattern,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :path),
              s(:str, "**/*.rb"))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :glob,
              s(:lvar, :pattern)),
            s(:args,
              s(:arg, :file)),
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const,
                    s(:const, nil, :RubyVM), :InstructionSequence), :compile_and_save_iseq,
                  s(:lvar, :file)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :SyntaxError)),
                  s(:lvasgn, :e),
                  s(:send,
                    s(:const, nil, :STDERR), :puts,
                    s(:lvar, :e))), nil)))),
        s(:send,
          s(:const,
            s(:const, nil, :RubyVM), :InstructionSequence), :compile_and_save_iseq,
          s(:lvar, :path)))), nil))
