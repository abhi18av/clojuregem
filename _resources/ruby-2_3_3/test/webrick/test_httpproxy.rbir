s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "net/http")),
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require,
    s(:str, "webrick/httpproxy")),
  s(:kwbegin,
    s(:rescue,
      s(:begin,
        s(:send, nil, :require,
          s(:str, "webrick/ssl")),
        s(:send, nil, :require,
          s(:str, "net/https")),
        s(:send, nil, :require,
          s(:send,
            s(:const, nil, :File), :expand_path,
            s(:str, "../openssl/utils.rb"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "(string)"))))),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:str, "utils.rb"),
      s(:send,
        s(:const, nil, :File), :dirname,
        s(:str, "(string)")))),
  s(:class,
    s(:const, nil, :TestWEBrickHTTPProxy),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_fake_proxy,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :FakeProxyURI), :scheme)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :FakeProxyURI), :host)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :FakeProxyURI), :port)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :FakeProxyURI), :path)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :FakeProxyURI), :userinfo)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NoMethodError)),
            s(:args),
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :FakeProxyURI), :foo)))),
      s(:def, :test_proxy,
        s(:args),
        s(:begin,
          s(:lvasgn, :proxy_handler_called,
            s(:lvasgn, :request_handler_called,
              s(:int, 0))),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost.localdomain")),
              s(:pair,
                s(:sym, :ProxyContentHandler),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :proxy_handler_called), :+,
                    s(:int, 1)))),
              s(:pair,
                s(:sym, :RequestCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :request_handler_called), :+,
                    s(:int, 1)))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpproxy,
              s(:lvar, :config)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :server), :mount_proc,
                  s(:str, "/")),
                s(:args,
                  s(:arg, :req),
                  s(:arg, :res)),
                s(:send,
                  s(:lvar, :res), :body=,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :request_method)),
                    s(:str, " "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :path)),
                    s(:str, " "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :body))))),
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port),
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:dstr,
                      s(:str, "1.1 localhost.localdomain:"),
                      s(:begin,
                        s(:lvar, :port))),
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "via")),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "GET / "),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:lvar, :proxy_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 2),
                s(:lvar, :request_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Head), :new,
                  s(:str, "/"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:dstr,
                      s(:str, "1.1 localhost.localdomain:"),
                      s(:begin,
                        s(:lvar, :port))),
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "via")),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_nil,
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:send, nil, :assert_equal,
                s(:int, 2),
                s(:lvar, :proxy_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 4),
                s(:lvar, :request_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Post), :new,
                  s(:str, "/"))),
              s(:send,
                s(:lvar, :req), :body=,
                s(:str, "post-data")),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:dstr,
                      s(:str, "1.1 localhost.localdomain:"),
                      s(:begin,
                        s(:lvar, :port))),
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "via")),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "POST / post-data"),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:send, nil, :assert_equal,
                s(:int, 3),
                s(:lvar, :proxy_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 6),
                s(:lvar, :request_handler_called),
                s(:send,
                  s(:lvar, :log), :call)))))),
      s(:def, :test_no_proxy,
        s(:args),
        s(:begin,
          s(:lvasgn, :proxy_handler_called,
            s(:lvasgn, :request_handler_called,
              s(:int, 0))),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost.localdomain")),
              s(:pair,
                s(:sym, :ProxyContentHandler),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :proxy_handler_called), :+,
                    s(:int, 1)))),
              s(:pair,
                s(:sym, :RequestCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :request_handler_called), :+,
                    s(:int, 1)))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpproxy,
              s(:lvar, :config)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :server), :mount_proc,
                  s(:str, "/")),
                s(:args,
                  s(:arg, :req),
                  s(:arg, :res)),
                s(:send,
                  s(:lvar, :res), :body=,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :request_method)),
                    s(:str, " "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :path)),
                    s(:str, " "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :body))))),
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_nil,
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "via")),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "GET / "),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:lvar, :proxy_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:lvar, :request_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Head), :new,
                  s(:str, "/"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_nil,
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "via")),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_nil,
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:lvar, :proxy_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 2),
                s(:lvar, :request_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Post), :new,
                  s(:str, "/"))),
              s(:send,
                s(:lvar, :req), :body=,
                s(:str, "post-data")),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_nil,
                    s(:send,
                      s(:lvar, :res), :[],
                      s(:str, "via")),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "POST / post-data"),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:lvar, :proxy_handler_called),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 3),
                s(:lvar, :request_handler_called),
                s(:send,
                  s(:lvar, :log), :call)))))),
      s(:if,
        s(:defined?,
          s(:const,
            s(:const, nil, :OpenSSL), :TestUtils)),
        s(:def, :make_certificate,
          s(:args,
            s(:arg, :key),
            s(:arg, :cn)),
          s(:begin,
            s(:lvasgn, :subject,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:dstr,
                  s(:str, "/DC=org/DC=ruby-lang/CN="),
                  s(:begin,
                    s(:lvar, :cn))))),
            s(:lvasgn, :exts,
              s(:array,
                s(:array,
                  s(:str, "keyUsage"),
                  s(:str, "keyEncipherment,digitalSignature"),
                  s(:true)))),
            s(:lvasgn, :cert,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :issue_cert,
                s(:lvar, :subject),
                s(:lvar, :key),
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Time), :now),
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :+,
                  s(:int, 3600)),
                s(:lvar, :exts),
                s(:nil),
                s(:nil),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:return,
              s(:lvar, :cert)))), nil),
      s(:if,
        s(:defined?,
          s(:const,
            s(:const, nil, :OpenSSL), :TestUtils)),
        s(:def, :test_connect,
          s(:args),
          s(:begin,
            s(:lvasgn, :key,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA1024)),
            s(:lvasgn, :cert,
              s(:send, nil, :make_certificate,
                s(:lvar, :key),
                s(:str, "127.0.0.1"))),
            s(:lvasgn, :s_config,
              s(:hash,
                s(:pair,
                  s(:sym, :SSLEnable),
                  s(:true)),
                s(:pair,
                  s(:sym, :ServerName),
                  s(:str, "localhost")),
                s(:pair,
                  s(:sym, :SSLCertificate),
                  s(:lvar, :cert)),
                s(:pair,
                  s(:sym, :SSLPrivateKey),
                  s(:lvar, :key)))),
            s(:lvasgn, :config,
              s(:hash,
                s(:pair,
                  s(:sym, :ServerName),
                  s(:str, "localhost.localdomain")),
                s(:pair,
                  s(:sym, :RequestCallback),
                  s(:block,
                    s(:send,
                      s(:const, nil, :Proc), :new),
                    s(:args,
                      s(:arg, :req),
                      s(:arg, :res)),
                    s(:send, nil, :assert_equal,
                      s(:str, "CONNECT"),
                      s(:send,
                        s(:lvar, :req), :request_method)))))),
            s(:block,
              s(:send,
                s(:const, nil, :TestWEBrick), :start_httpserver,
                s(:lvar, :s_config)),
              s(:args,
                s(:arg, :s_server),
                s(:arg, :s_addr),
                s(:arg, :s_port),
                s(:arg, :s_log)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :s_server), :mount_proc,
                    s(:str, "/")),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:send,
                    s(:lvar, :res), :body=,
                    s(:dstr,
                      s(:str, "SSL "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :request_method)),
                      s(:str, " "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :path)),
                      s(:str, " "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :req), :body))))),
                s(:block,
                  s(:send,
                    s(:const, nil, :TestWEBrick), :start_httpproxy,
                    s(:lvar, :config)),
                  s(:args,
                    s(:arg, :server),
                    s(:arg, :addr),
                    s(:arg, :port),
                    s(:arg, :log)),
                  s(:begin,
                    s(:lvasgn, :http,
                      s(:send,
                        s(:const,
                          s(:const, nil, :Net), :HTTP), :new,
                        s(:str, "127.0.0.1"),
                        s(:lvar, :s_port),
                        s(:lvar, :addr),
                        s(:lvar, :port))),
                    s(:send,
                      s(:lvar, :http), :use_ssl=,
                      s(:true)),
                    s(:send,
                      s(:lvar, :http), :verify_callback=,
                      s(:block,
                        s(:send,
                          s(:const, nil, :Proc), :new),
                        s(:args,
                          s(:arg, :preverify_ok),
                          s(:arg, :store_ctx)),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :store_ctx), :current_cert), :to_der), :==,
                          s(:send,
                            s(:lvar, :cert), :to_der)))),
                    s(:lvasgn, :req,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Net), :HTTP), :Get), :new,
                        s(:str, "/"))),
                    s(:send,
                      s(:lvar, :req), :[]=,
                      s(:str, "Content-Type"),
                      s(:str, "application/x-www-form-urlencoded")),
                    s(:block,
                      s(:send,
                        s(:lvar, :http), :request,
                        s(:lvar, :req)),
                      s(:args,
                        s(:arg, :res)),
                      s(:send, nil, :assert_equal,
                        s(:str, "SSL GET / "),
                        s(:send,
                          s(:lvar, :res), :body),
                        s(:send,
                          s(:send,
                            s(:lvar, :s_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call)))),
                    s(:lvasgn, :req,
                      s(:send,
                        s(:const,
                          s(:const,
                            s(:const, nil, :Net), :HTTP), :Post), :new,
                        s(:str, "/"))),
                    s(:send,
                      s(:lvar, :req), :[]=,
                      s(:str, "Content-Type"),
                      s(:str, "application/x-www-form-urlencoded")),
                    s(:send,
                      s(:lvar, :req), :body=,
                      s(:str, "post-data")),
                    s(:block,
                      s(:send,
                        s(:lvar, :http), :request,
                        s(:lvar, :req)),
                      s(:args,
                        s(:arg, :res)),
                      s(:send, nil, :assert_equal,
                        s(:str, "SSL POST / post-data"),
                        s(:send,
                          s(:lvar, :res), :body),
                        s(:send,
                          s(:send,
                            s(:lvar, :s_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call)))))))))), nil),
      s(:def, :test_upstream_proxy,
        s(:args),
        s(:begin,
          s(:lvasgn, :up_proxy_handler_called,
            s(:lvasgn, :up_request_handler_called,
              s(:int, 0))),
          s(:lvasgn, :proxy_handler_called,
            s(:lvasgn, :request_handler_called,
              s(:int, 0))),
          s(:lvasgn, :up_config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost.localdomain")),
              s(:pair,
                s(:sym, :ProxyContentHandler),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :up_proxy_handler_called), :+,
                    s(:int, 1)))),
              s(:pair,
                s(:sym, :RequestCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :up_request_handler_called), :+,
                    s(:int, 1)))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpproxy,
              s(:lvar, :up_config)),
            s(:args,
              s(:arg, :up_server),
              s(:arg, :up_addr),
              s(:arg, :up_port),
              s(:arg, :up_log)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :up_server), :mount_proc,
                  s(:str, "/")),
                s(:args,
                  s(:arg, :req),
                  s(:arg, :res)),
                s(:send,
                  s(:lvar, :res), :body=,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :request_method)),
                    s(:str, " "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :path)),
                    s(:str, " "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :req), :body))))),
              s(:lvasgn, :config,
                s(:hash,
                  s(:pair,
                    s(:sym, :ServerName),
                    s(:str, "localhost.localdomain")),
                  s(:pair,
                    s(:sym, :ProxyURI),
                    s(:send,
                      s(:const, nil, :URI), :parse,
                      s(:dstr,
                        s(:str, "http://localhost:"),
                        s(:begin,
                          s(:lvar, :up_port))))),
                  s(:pair,
                    s(:sym, :ProxyContentHandler),
                    s(:block,
                      s(:send,
                        s(:const, nil, :Proc), :new),
                      s(:args,
                        s(:arg, :req),
                        s(:arg, :res)),
                      s(:op_asgn,
                        s(:lvasgn, :proxy_handler_called), :+,
                        s(:int, 1)))),
                  s(:pair,
                    s(:sym, :RequestCallback),
                    s(:block,
                      s(:send,
                        s(:const, nil, :Proc), :new),
                      s(:args,
                        s(:arg, :req),
                        s(:arg, :res)),
                      s(:op_asgn,
                        s(:lvasgn, :request_handler_called), :+,
                        s(:int, 1)))))),
              s(:block,
                s(:send,
                  s(:const, nil, :TestWEBrick), :start_httpproxy,
                  s(:lvar, :config)),
                s(:args,
                  s(:arg, :server),
                  s(:arg, :addr),
                  s(:arg, :port),
                  s(:arg, :log)),
                s(:begin,
                  s(:lvasgn, :http,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Net), :HTTP), :new,
                      s(:lvar, :up_addr),
                      s(:lvar, :up_port),
                      s(:lvar, :addr),
                      s(:lvar, :port))),
                  s(:lvasgn, :req,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Net), :HTTP), :Get), :new,
                      s(:str, "/"))),
                  s(:block,
                    s(:send,
                      s(:lvar, :http), :request,
                      s(:lvar, :req)),
                    s(:args,
                      s(:arg, :res)),
                    s(:begin,
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :res), :code), :==,
                          s(:str, "200")), nil,
                        s(:send, nil, :skip,
                          s(:send,
                            s(:lvar, :res), :message))),
                      s(:lvasgn, :via,
                        s(:send,
                          s(:send,
                            s(:lvar, :res), :[],
                            s(:str, "via")), :split,
                          s(:regexp,
                            s(:str, ",\\s+"),
                            s(:regopt)))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :via), :include?,
                          s(:dstr,
                            s(:str, "1.1 localhost.localdomain:"),
                            s(:begin,
                              s(:lvar, :up_port)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :via), :include?,
                          s(:dstr,
                            s(:str, "1.1 localhost.localdomain:"),
                            s(:begin,
                              s(:lvar, :port)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))),
                      s(:send, nil, :assert_equal,
                        s(:str, "GET / "),
                        s(:send,
                          s(:lvar, :res), :body)))),
                  s(:send, nil, :assert_equal,
                    s(:int, 1),
                    s(:lvar, :up_proxy_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 2),
                    s(:lvar, :up_request_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 1),
                    s(:lvar, :proxy_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 1),
                    s(:lvar, :request_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:lvasgn, :req,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Net), :HTTP), :Head), :new,
                      s(:str, "/"))),
                  s(:block,
                    s(:send,
                      s(:lvar, :http), :request,
                      s(:lvar, :req)),
                    s(:args,
                      s(:arg, :res)),
                    s(:begin,
                      s(:lvasgn, :via,
                        s(:send,
                          s(:send,
                            s(:lvar, :res), :[],
                            s(:str, "via")), :split,
                          s(:regexp,
                            s(:str, ",\\s+"),
                            s(:regopt)))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :via), :include?,
                          s(:dstr,
                            s(:str, "1.1 localhost.localdomain:"),
                            s(:begin,
                              s(:lvar, :up_port)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :via), :include?,
                          s(:dstr,
                            s(:str, "1.1 localhost.localdomain:"),
                            s(:begin,
                              s(:lvar, :port)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))),
                      s(:send, nil, :assert_nil,
                        s(:send,
                          s(:lvar, :res), :body),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))))),
                  s(:send, nil, :assert_equal,
                    s(:int, 2),
                    s(:lvar, :up_proxy_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 4),
                    s(:lvar, :up_request_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 2),
                    s(:lvar, :proxy_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 2),
                    s(:lvar, :request_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:lvasgn, :req,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Net), :HTTP), :Post), :new,
                      s(:str, "/"))),
                  s(:send,
                    s(:lvar, :req), :body=,
                    s(:str, "post-data")),
                  s(:block,
                    s(:send,
                      s(:lvar, :http), :request,
                      s(:lvar, :req)),
                    s(:args,
                      s(:arg, :res)),
                    s(:begin,
                      s(:lvasgn, :via,
                        s(:send,
                          s(:send,
                            s(:lvar, :res), :[],
                            s(:str, "via")), :split,
                          s(:regexp,
                            s(:str, ",\\s+"),
                            s(:regopt)))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :via), :include?,
                          s(:dstr,
                            s(:str, "1.1 localhost.localdomain:"),
                            s(:begin,
                              s(:lvar, :up_port)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :via), :include?,
                          s(:dstr,
                            s(:str, "1.1 localhost.localdomain:"),
                            s(:begin,
                              s(:lvar, :port)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))),
                      s(:send, nil, :assert_equal,
                        s(:str, "POST / post-data"),
                        s(:send,
                          s(:lvar, :res), :body),
                        s(:send,
                          s(:send,
                            s(:lvar, :up_log), :call), :+,
                          s(:send,
                            s(:lvar, :log), :call))))),
                  s(:send, nil, :assert_equal,
                    s(:int, 3),
                    s(:lvar, :up_proxy_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 6),
                    s(:lvar, :up_request_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 3),
                    s(:lvar, :proxy_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:int, 3),
                    s(:lvar, :request_handler_called),
                    s(:send,
                      s(:send,
                        s(:lvar, :up_log), :call), :+,
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:if,
                    s(:defined?,
                      s(:const,
                        s(:const, nil, :OpenSSL), :TestUtils)),
                    s(:begin,
                      s(:lvasgn, :key,
                        s(:const,
                          s(:const,
                            s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA1024)),
                      s(:lvasgn, :cert,
                        s(:send, nil, :make_certificate,
                          s(:lvar, :key),
                          s(:str, "127.0.0.1"))),
                      s(:lvasgn, :s_config,
                        s(:hash,
                          s(:pair,
                            s(:sym, :SSLEnable),
                            s(:true)),
                          s(:pair,
                            s(:sym, :ServerName),
                            s(:str, "localhost")),
                          s(:pair,
                            s(:sym, :SSLCertificate),
                            s(:lvar, :cert)),
                          s(:pair,
                            s(:sym, :SSLPrivateKey),
                            s(:lvar, :key)))),
                      s(:block,
                        s(:send,
                          s(:const, nil, :TestWEBrick), :start_httpserver,
                          s(:lvar, :s_config)),
                        s(:args,
                          s(:arg, :s_server),
                          s(:arg, :s_addr),
                          s(:arg, :s_port),
                          s(:arg, :s_log)),
                        s(:begin,
                          s(:block,
                            s(:send,
                              s(:lvar, :s_server), :mount_proc,
                              s(:str, "/")),
                            s(:args,
                              s(:arg, :req2),
                              s(:arg, :res)),
                            s(:send,
                              s(:lvar, :res), :body=,
                              s(:dstr,
                                s(:str, "SSL "),
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :req2), :request_method)),
                                s(:str, " "),
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :req2), :path)),
                                s(:str, " "),
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :req2), :body))))),
                          s(:lvasgn, :http,
                            s(:send,
                              s(:const,
                                s(:const, nil, :Net), :HTTP), :new,
                              s(:str, "127.0.0.1"),
                              s(:lvar, :s_port),
                              s(:lvar, :addr),
                              s(:lvar, :port),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :up_log), :call), :+,
                                  s(:send,
                                    s(:lvar, :log), :call)), :+,
                                s(:send,
                                  s(:lvar, :s_log), :call)))),
                          s(:send,
                            s(:lvar, :http), :use_ssl=,
                            s(:true)),
                          s(:send,
                            s(:lvar, :http), :verify_callback=,
                            s(:block,
                              s(:send,
                                s(:const, nil, :Proc), :new),
                              s(:args,
                                s(:arg, :preverify_ok),
                                s(:arg, :store_ctx)),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :store_ctx), :current_cert), :to_der), :==,
                                s(:send,
                                  s(:lvar, :cert), :to_der)))),
                          s(:lvasgn, :req2,
                            s(:send,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Net), :HTTP), :Get), :new,
                              s(:str, "/"))),
                          s(:block,
                            s(:send,
                              s(:lvar, :http), :request,
                              s(:lvar, :req2)),
                            s(:args,
                              s(:arg, :res)),
                            s(:send, nil, :assert_equal,
                              s(:str, "SSL GET / "),
                              s(:send,
                                s(:lvar, :res), :body),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :up_log), :call), :+,
                                  s(:send,
                                    s(:lvar, :log), :call)), :+,
                                s(:send,
                                  s(:lvar, :s_log), :call)))),
                          s(:lvasgn, :req2,
                            s(:send,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :Net), :HTTP), :Post), :new,
                              s(:str, "/"))),
                          s(:send,
                            s(:lvar, :req2), :body=,
                            s(:str, "post-data")),
                          s(:block,
                            s(:send,
                              s(:lvar, :http), :request,
                              s(:lvar, :req2)),
                            s(:args,
                              s(:arg, :res)),
                            s(:send, nil, :assert_equal,
                              s(:str, "SSL POST / post-data"),
                              s(:send,
                                s(:lvar, :res), :body),
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:lvar, :up_log), :call), :+,
                                  s(:send,
                                    s(:lvar, :log), :call)), :+,
                                s(:send,
                                  s(:lvar, :s_log), :call))))))), nil))))))))))
