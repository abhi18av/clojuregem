s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "net/http")),
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:class,
    s(:const, nil, :TestWEBrickHTTPServer),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:lvasgn, :empty_log,
        s(:send,
          s(:const, nil, :Object), :new)),
      s(:defs,
        s(:lvar, :empty_log), :<<,
        s(:args,
          s(:arg, :str)),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :str)),
          s(:self))),
      s(:casgn, nil, :NoLog,
        s(:send,
          s(:const,
            s(:const, nil, :WEBrick), :Log), :new,
          s(:lvar, :empty_log),
          s(:const,
            s(:const,
              s(:const, nil, :WEBrick), :BasicLog), :WARN))),
      s(:def, :test_mount,
        s(:args),
        s(:begin,
          s(:lvasgn, :httpd,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPServer), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :Logger),
                  s(:const, nil, :NoLog)),
                s(:pair,
                  s(:sym, :DoNotListen),
                  s(:true))))),
          s(:send,
            s(:lvar, :httpd), :mount,
            s(:str, "/"),
            s(:sym, :Root)),
          s(:send,
            s(:lvar, :httpd), :mount,
            s(:str, "/foo"),
            s(:sym, :Foo)),
          s(:send,
            s(:lvar, :httpd), :mount,
            s(:str, "/foo/bar"),
            s(:sym, :Bar),
            s(:sym, :bar1)),
          s(:send,
            s(:lvar, :httpd), :mount,
            s(:str, "/foo/bar/baz"),
            s(:sym, :Baz),
            s(:sym, :baz1),
            s(:sym, :baz2)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Root),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/sub"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Root),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, "/sub"),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/sub/"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Root),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, "/sub/"),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/foo"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Foo),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, "/foo"),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/foo/"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Foo),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, "/foo"),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/foo/sub"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Foo),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, "/foo"),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, "/sub"),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Bar),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:sym, :bar1)),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar"),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :path_info)),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :serv),
              s(:lvasgn, :opts),
              s(:lvasgn, :script_name),
              s(:lvasgn, :path_info)),
            s(:send,
              s(:lvar, :httpd), :search_servlet,
              s(:str, "/foo/bar/baz"))),
          s(:send, nil, :assert_equal,
            s(:sym, :Baz),
            s(:lvar, :serv)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:sym, :baz1),
              s(:sym, :baz2)),
            s(:lvar, :opts)),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar/baz"),
            s(:lvar, :script_name)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :path_info)))),
      s(:class,
        s(:const, nil, :Req), nil,
        s(:begin,
          s(:send, nil, :attr_reader,
            s(:sym, :port),
            s(:sym, :host)),
          s(:def, :initialize,
            s(:args,
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :host)),
            s(:masgn,
              s(:mlhs,
                s(:ivasgn, :@addr),
                s(:ivasgn, :@port),
                s(:ivasgn, :@host)),
              s(:array,
                s(:lvar, :addr),
                s(:lvar, :port),
                s(:lvar, :host)))),
          s(:def, :addr,
            s(:args),
            s(:array,
              s(:int, 0),
              s(:int, 0),
              s(:int, 0),
              s(:ivar, :@addr))))),
      s(:def, :httpd,
        s(:args,
          s(:arg, :addr),
          s(:arg, :port),
          s(:arg, :host),
          s(:arg, :ali)),
        s(:begin,
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :Logger),
                s(:const, nil, :NoLog)),
              s(:pair,
                s(:sym, :DoNotListen),
                s(:true)),
              s(:pair,
                s(:sym, :BindAddress),
                s(:lvar, :addr)),
              s(:pair,
                s(:sym, :Port),
                s(:lvar, :port)),
              s(:pair,
                s(:sym, :ServerName),
                s(:lvar, :host)),
              s(:pair,
                s(:sym, :ServerAlias),
                s(:lvar, :ali)))),
          s(:return,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPServer), :new,
              s(:lvar, :config))))),
      s(:def, :assert_eql?,
        s(:args,
          s(:arg, :v1),
          s(:arg, :v2)),
        s(:send, nil, :assert_equal,
          s(:send,
            s(:lvar, :v1), :object_id),
          s(:send,
            s(:lvar, :v2), :object_id))),
      s(:def, :test_lookup_server,
        s(:args),
        s(:begin,
          s(:lvasgn, :addr1,
            s(:str, "192.168.100.1")),
          s(:lvasgn, :addr2,
            s(:str, "192.168.100.2")),
          s(:lvasgn, :addrz,
            s(:str, "192.168.100.254")),
          s(:lvasgn, :local,
            s(:str, "127.0.0.1")),
          s(:lvasgn, :port1,
            s(:int, 80)),
          s(:lvasgn, :port2,
            s(:int, 8080)),
          s(:lvasgn, :port3,
            s(:int, 10080)),
          s(:lvasgn, :portz,
            s(:int, 32767)),
          s(:lvasgn, :name1,
            s(:str, "www.example.com")),
          s(:lvasgn, :name2,
            s(:str, "www2.example.com")),
          s(:lvasgn, :name3,
            s(:str, "www3.example.com")),
          s(:lvasgn, :namea,
            s(:str, "www.example.co.jp")),
          s(:lvasgn, :nameb,
            s(:str, "www.example.jp")),
          s(:lvasgn, :namec,
            s(:str, "www2.example.co.jp")),
          s(:lvasgn, :named,
            s(:str, "www2.example.jp")),
          s(:lvasgn, :namez,
            s(:str, "foobar.example.com")),
          s(:lvasgn, :alias1,
            s(:array,
              s(:lvar, :namea),
              s(:lvar, :nameb))),
          s(:lvasgn, :alias2,
            s(:array,
              s(:lvar, :namec),
              s(:lvar, :named))),
          s(:lvasgn, :host1,
            s(:send, nil, :httpd,
              s(:nil),
              s(:lvar, :port1),
              s(:lvar, :name1),
              s(:nil))),
          s(:lvasgn, :hosts,
            s(:block,
              s(:send,
                s(:array,
                  s(:lvasgn, :host2,
                    s(:send, nil, :httpd,
                      s(:lvar, :addr1),
                      s(:lvar, :port1),
                      s(:lvar, :name1),
                      s(:nil))),
                  s(:lvasgn, :host3,
                    s(:send, nil, :httpd,
                      s(:lvar, :addr1),
                      s(:lvar, :port1),
                      s(:lvar, :name2),
                      s(:lvar, :alias1))),
                  s(:lvasgn, :host4,
                    s(:send, nil, :httpd,
                      s(:lvar, :addr1),
                      s(:lvar, :port2),
                      s(:lvar, :name1),
                      s(:nil))),
                  s(:lvasgn, :host5,
                    s(:send, nil, :httpd,
                      s(:lvar, :addr1),
                      s(:lvar, :port2),
                      s(:lvar, :name2),
                      s(:lvar, :alias1))),
                  s(:send, nil, :httpd,
                    s(:lvar, :addr1),
                    s(:lvar, :port2),
                    s(:lvar, :name3),
                    s(:lvar, :alias2)),
                  s(:lvasgn, :host7,
                    s(:send, nil, :httpd,
                      s(:lvar, :addr2),
                      s(:nil),
                      s(:lvar, :name1),
                      s(:nil))),
                  s(:lvasgn, :host8,
                    s(:send, nil, :httpd,
                      s(:lvar, :addr2),
                      s(:nil),
                      s(:lvar, :name2),
                      s(:lvar, :alias1))),
                  s(:send, nil, :httpd,
                    s(:lvar, :addr2),
                    s(:nil),
                    s(:lvar, :name3),
                    s(:lvar, :alias2)),
                  s(:lvasgn, :host10,
                    s(:send, nil, :httpd,
                      s(:lvar, :local),
                      s(:nil),
                      s(:nil),
                      s(:nil))),
                  s(:lvasgn, :host11,
                    s(:send, nil, :httpd,
                      s(:nil),
                      s(:lvar, :port3),
                      s(:nil),
                      s(:nil)))), :sort_by),
              s(:args),
              s(:send, nil, :rand))),
          s(:block,
            s(:send,
              s(:lvar, :hosts), :each),
            s(:args,
              s(:arg, :h)),
            s(:send,
              s(:lvar, :host1), :virtual_host,
              s(:lvar, :h))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host2),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port1),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host3),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port1),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host3),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port1),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host3),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port1),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port1),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host4),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port2),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host5),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port2),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host5),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port2),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host5),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port2),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port2),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port3),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port3),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port3),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port3),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :port3),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :portz),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :portz),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :portz),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :portz),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr1),
                s(:lvar, :portz),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host7),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port1),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port1),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port1),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port1),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port1),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host7),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port2),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port2),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port2),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port2),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port2),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host7),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port3),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port3),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port3),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port3),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :port3),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host7),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :portz),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :portz),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :portz),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host8),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :portz),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addr2),
                s(:lvar, :portz),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port1),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port1),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port1),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port1),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port1),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port2),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port2),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port2),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port2),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port2),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port3),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port3),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port3),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port3),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host11),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :port3),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :portz),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :portz),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :portz),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :portz),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:nil),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :addrz),
                s(:lvar, :portz),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port1),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port1),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port1),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port1),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port1),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port2),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port2),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port2),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port2),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port2),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port3),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port3),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port3),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port3),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :port3),
                s(:lvar, :namez)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :portz),
                s(:lvar, :name1)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :portz),
                s(:lvar, :name2)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :portz),
                s(:lvar, :namea)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :portz),
                s(:lvar, :nameb)))),
          s(:send, nil, :assert_eql?,
            s(:lvar, :host10),
            s(:send,
              s(:lvar, :host1), :lookup_server,
              s(:send,
                s(:const, nil, :Req), :new,
                s(:lvar, :local),
                s(:lvar, :portz),
                s(:lvar, :namez)))))),
      s(:def, :test_callbacks,
        s(:args),
        s(:begin,
          s(:lvasgn, :accepted,
            s(:lvasgn, :started,
              s(:lvasgn, :stopped,
                s(:int, 0)))),
          s(:lvasgn, :requested0,
            s(:lvasgn, :requested1,
              s(:int, 0))),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost")),
              s(:pair,
                s(:sym, :AcceptCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args),
                  s(:op_asgn,
                    s(:lvasgn, :accepted), :+,
                    s(:int, 1)))),
              s(:pair,
                s(:sym, :StartCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args),
                  s(:op_asgn,
                    s(:lvasgn, :started), :+,
                    s(:int, 1)))),
              s(:pair,
                s(:sym, :StopCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args),
                  s(:op_asgn,
                    s(:lvasgn, :stopped), :+,
                    s(:int, 1)))),
              s(:pair,
                s(:sym, :RequestCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :requested0), :+,
                    s(:int, 1)))))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:send, nil, :assert,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :find),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR `/' not found\\."),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR `/' not found\\."),
                        s(:regopt)),
                      s(:lvar, :s))))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:lvasgn, :vhost_config,
                s(:hash,
                  s(:pair,
                    s(:sym, :ServerName),
                    s(:str, "myhostname")),
                  s(:pair,
                    s(:sym, :BindAddress),
                    s(:lvar, :addr)),
                  s(:pair,
                    s(:sym, :Port),
                    s(:lvar, :port)),
                  s(:pair,
                    s(:sym, :DoNotListen),
                    s(:true)),
                  s(:pair,
                    s(:sym, :Logger),
                    s(:const, nil, :NoLog)),
                  s(:pair,
                    s(:sym, :AccessLog),
                    s(:array)),
                  s(:pair,
                    s(:sym, :RequestCallback),
                    s(:block,
                      s(:send,
                        s(:const, nil, :Proc), :new),
                      s(:args,
                        s(:arg, :req),
                        s(:arg, :res)),
                      s(:op_asgn,
                        s(:lvasgn, :requested1), :+,
                        s(:int, 1)))))),
              s(:send,
                s(:lvar, :server), :virtual_host,
                s(:send,
                  s(:const,
                    s(:const, nil, :WEBrick), :HTTPServer), :new,
                  s(:lvar, :vhost_config))),
              s(:while,
                s(:send,
                  s(:send,
                    s(:lvar, :server), :status), :!=,
                  s(:sym, :Running)),
                s(:send,
                  s(:const, nil, :Thread), :pass)),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:lvar, :started),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:lvar, :stopped),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:lvar, :accepted),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:send,
                s(:lvar, :req), :[]=,
                s(:str, "Host"),
                s(:dstr,
                  s(:str, "myhostname:"),
                  s(:begin,
                    s(:lvar, :port)))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:send,
                s(:lvar, :req), :[]=,
                s(:str, "Host"),
                s(:dstr,
                  s(:str, "localhost:"),
                  s(:begin,
                    s(:lvar, :port)))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:send, nil, :assert_equal,
                s(:int, 6),
                s(:lvar, :accepted),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 3),
                s(:lvar, :requested0),
                s(:send,
                  s(:lvar, :log), :call)),
              s(:send, nil, :assert_equal,
                s(:int, 3),
                s(:lvar, :requested1),
                s(:send,
                  s(:lvar, :log), :call)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :started),
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:lvar, :stopped),
            s(:int, 1)))),
      s(:class,
        s(:const, nil, :EventManagerForChunkedResponseTest), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args),
            s(:ivasgn, :@listeners,
              s(:array))),
          s(:def, :add_listener,
            s(:args,
              s(:blockarg, :block)),
            s(:send,
              s(:ivar, :@listeners), :<<,
              s(:lvar, :block))),
          s(:def, :raise_str_event,
            s(:args,
              s(:arg, :str)),
            s(:block,
              s(:send,
                s(:ivar, :@listeners), :each),
              s(:args,
                s(:arg, :e)),
              s(:send,
                s(:lvar, :e), :call,
                s(:sym, :str),
                s(:lvar, :str)))),
          s(:def, :raise_close_event,
            s(:args),
            s(:block,
              s(:send,
                s(:ivar, :@listeners), :each),
              s(:args,
                s(:arg, :e)),
              s(:send,
                s(:lvar, :e), :call,
                s(:sym, :cls)))))),
      s(:def, :test_response_io_with_chunked_set,
        s(:args),
        s(:begin,
          s(:lvasgn, :evt_man,
            s(:send,
              s(:const, nil, :EventManagerForChunkedResponseTest), :new)),
          s(:lvasgn, :t,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:kwbegin,
                s(:rescue,
                  s(:begin,
                    s(:lvasgn, :config,
                      s(:hash,
                        s(:pair,
                          s(:sym, :ServerName),
                          s(:str, "localhost")))),
                    s(:block,
                      s(:send,
                        s(:const, nil, :TestWEBrick), :start_httpserver,
                        s(:lvar, :config)),
                      s(:args,
                        s(:arg, :server),
                        s(:arg, :addr),
                        s(:arg, :port),
                        s(:arg, :log)),
                      s(:begin,
                        s(:lvasgn, :body_strs,
                          s(:array,
                            s(:str, "aaaaaa"),
                            s(:str, "bb"),
                            s(:str, "cccc"))),
                        s(:send,
                          s(:lvar, :server), :mount_proc,
                          s(:str, "/"),
                          s(:block,
                            s(:send, nil, :lambda),
                            s(:args,
                              s(:arg, :req),
                              s(:arg, :res)),
                            s(:begin,
                              s(:send,
                                s(:lvar, :res), :chunked=,
                                s(:true)),
                              s(:masgn,
                                s(:mlhs,
                                  s(:lvasgn, :r),
                                  s(:lvasgn, :w)),
                                s(:send,
                                  s(:const, nil, :IO), :pipe)),
                              s(:block,
                                s(:send,
                                  s(:lvar, :evt_man), :add_listener),
                                s(:args,
                                  s(:arg, :type),
                                  s(:arg, :str)),
                                s(:if,
                                  s(:send,
                                    s(:lvar, :type), :==,
                                    s(:sym, :cls)),
                                  s(:begin,
                                    s(:send,
                                      s(:lvar, :w), :close)),
                                  s(:begin,
                                    s(:send,
                                      s(:lvar, :w), :<<,
                                      s(:lvar, :str))))),
                              s(:send,
                                s(:lvar, :res), :body=,
                                s(:lvar, :r))))),
                        s(:while,
                          s(:send,
                            s(:send,
                              s(:lvar, :server), :status), :!=,
                            s(:sym, :Running)),
                          s(:send,
                            s(:const, nil, :Thread), :pass)),
                        s(:lvasgn, :http,
                          s(:send,
                            s(:const,
                              s(:const, nil, :Net), :HTTP), :new,
                            s(:lvar, :addr),
                            s(:lvar, :port))),
                        s(:lvasgn, :req,
                          s(:send,
                            s(:const,
                              s(:const,
                                s(:const, nil, :Net), :HTTP), :Get), :new,
                            s(:str, "/"))),
                        s(:block,
                          s(:send,
                            s(:lvar, :http), :request,
                            s(:lvar, :req)),
                          s(:args,
                            s(:arg, :res)),
                          s(:begin,
                            s(:lvasgn, :i,
                              s(:int, 0)),
                            s(:send,
                              s(:lvar, :evt_man), :raise_str_event,
                              s(:send,
                                s(:lvar, :body_strs), :[],
                                s(:lvar, :i))),
                            s(:block,
                              s(:send,
                                s(:lvar, :res), :read_body),
                              s(:args,
                                s(:arg, :s)),
                              s(:begin,
                                s(:send, nil, :assert_equal,
                                  s(:send,
                                    s(:lvar, :body_strs), :[],
                                    s(:lvar, :i)),
                                  s(:lvar, :s)),
                                s(:op_asgn,
                                  s(:lvasgn, :i), :+,
                                  s(:int, 1)),
                                s(:if,
                                  s(:send,
                                    s(:lvar, :i), :<,
                                    s(:send,
                                      s(:lvar, :body_strs), :length)),
                                  s(:send,
                                    s(:lvar, :evt_man), :raise_str_event,
                                    s(:send,
                                      s(:lvar, :body_strs), :[],
                                      s(:lvar, :i))),
                                  s(:send,
                                    s(:lvar, :evt_man), :raise_close_event)))),
                            s(:send, nil, :assert_equal,
                              s(:send,
                                s(:lvar, :body_strs), :length),
                              s(:lvar, :i))))))),
                  s(:resbody, nil,
                    s(:lvasgn, :err),
                    s(:send, nil, :flunk,
                      s(:send,
                        s(:str, "exception raised in thread: "), :+,
                        s(:send,
                          s(:lvar, :err), :to_s)))), nil)))),
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :t), :join,
                s(:int, 3)), :nil?),
            s(:begin,
              s(:send,
                s(:lvar, :evt_man), :raise_close_event),
              s(:send, nil, :flunk,
                s(:str, "timeout")),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :t), :join,
                    s(:int, 1)), :nil?),
                s(:send,
                  s(:const, nil, :Thread), :kill,
                  s(:lvar, :t)), nil)), nil))),
      s(:def, :test_response_io_without_chunked_set,
        s(:args),
        s(:begin,
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost")))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:int, 1),
                  s(:send,
                    s(:lvar, :log), :length)),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "WARN  Could not determine content-length of response body."),
                    s(:regopt)),
                  s(:send,
                    s(:lvar, :log), :[],
                    s(:int, 0)))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:send,
                s(:lvar, :server), :mount_proc,
                s(:str, "/"),
                s(:block,
                  s(:send, nil, :lambda),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:begin,
                    s(:masgn,
                      s(:mlhs,
                        s(:lvasgn, :r),
                        s(:lvasgn, :w)),
                      s(:send,
                        s(:const, nil, :IO), :pipe)),
                    s(:send,
                      s(:lvar, :res), :body=,
                      s(:lvar, :r)),
                    s(:send,
                      s(:lvar, :w), :<<,
                      s(:str, "foo")),
                    s(:send,
                      s(:lvar, :w), :close)))),
              s(:while,
                s(:send,
                  s(:send,
                    s(:lvar, :server), :status), :!=,
                  s(:sym, :Running)),
                s(:send,
                  s(:const, nil, :Thread), :pass)),
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:send,
                s(:lvar, :req), :[]=,
                s(:str, "Connection"),
                s(:str, "Keep-Alive")),
              s(:kwbegin,
                s(:rescue,
                  s(:block,
                    s(:send,
                      s(:const, nil, :Timeout), :timeout,
                      s(:int, 2)),
                    s(:args),
                    s(:block,
                      s(:send,
                        s(:lvar, :http), :request,
                        s(:lvar, :req)),
                      s(:args,
                        s(:arg, :res)),
                      s(:send, nil, :assert_equal,
                        s(:str, "foo"),
                        s(:send,
                          s(:lvar, :res), :body)))),
                  s(:resbody,
                    s(:array,
                      s(:const,
                        s(:const, nil, :Timeout), :Error)), nil,
                    s(:send, nil, :flunk,
                      s(:str, "corrupted response"))), nil)))))),
      s(:def, :test_request_handler_callback_is_deprecated,
        s(:args),
        s(:begin,
          s(:lvasgn, :requested,
            s(:int, 0)),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost")),
              s(:pair,
                s(:sym, :RequestHandler),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:op_asgn,
                    s(:lvasgn, :requested), :+,
                    s(:int, 1)))))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:int, 2),
                  s(:send,
                    s(:lvar, :log), :length)),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "WARN  :RequestHandler is deprecated, please use :RequestCallback"),
                    s(:regopt)),
                  s(:send,
                    s(:lvar, :log), :[],
                    s(:int, 0))),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "ERROR `/' not found\\."),
                    s(:regopt)),
                  s(:send,
                    s(:lvar, :log), :[],
                    s(:int, 1)))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:while,
                s(:send,
                  s(:send,
                    s(:lvar, :server), :status), :!=,
                  s(:sym, :Running)),
                s(:send,
                  s(:const, nil, :Thread), :pass)),
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:send,
                s(:lvar, :req), :[]=,
                s(:str, "Host"),
                s(:dstr,
                  s(:str, "localhost:"),
                  s(:begin,
                    s(:lvar, :port)))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:send, nil, :assert_match,
                s(:regexp,
                  s(:str, ":RequestHandler is deprecated, please use :RequestCallback$"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :log), :call),
                s(:send,
                  s(:lvar, :log), :call)))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :requested)))),
      s(:def, :test_shutdown_with_busy_keepalive_connection,
        s(:args),
        s(:begin,
          s(:lvasgn, :requested,
            s(:int, 0)),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :ServerName),
                s(:str, "localhost")))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:send,
                s(:lvar, :server), :mount_proc,
                s(:str, "/"),
                s(:block,
                  s(:send, nil, :lambda),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:send,
                    s(:lvar, :res), :body=,
                    s(:str, "heffalump")))),
              s(:while,
                s(:send,
                  s(:send,
                    s(:lvar, :server), :status), :!=,
                  s(:sym, :Running)),
                s(:send,
                  s(:const, nil, :Thread), :pass)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :start,
                  s(:lvar, :addr),
                  s(:lvar, :port)),
                s(:args,
                  s(:arg, :http)),
                s(:begin,
                  s(:lvasgn, :req,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Net), :HTTP), :Get), :new,
                      s(:str, "/"))),
                  s(:block,
                    s(:send,
                      s(:lvar, :http), :request,
                      s(:lvar, :req)),
                    s(:args,
                      s(:arg, :res)),
                    s(:send, nil, :assert_equal,
                      s(:str, "Keep-Alive"),
                      s(:send,
                        s(:lvar, :res), :[],
                        s(:str, "Connection")),
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send,
                    s(:lvar, :server), :shutdown),
                  s(:kwbegin,
                    s(:rescue,
                      s(:block,
                        s(:send,
                          s(:int, 10), :times),
                        s(:args,
                          s(:arg, :n)),
                        s(:begin,
                          s(:send,
                            s(:lvar, :http), :request,
                            s(:lvar, :req)),
                          s(:op_asgn,
                            s(:lvasgn, :requested), :+,
                            s(:int, 1)))),
                      s(:resbody, nil, nil, nil), nil)))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:lvar, :requested),
            s(:dstr,
              s(:str, "Server responded to "),
              s(:begin,
                s(:lvar, :requested)),
              s(:str, " requests after shutdown"))))))))
