s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "webrick/httputils")),
  s(:class,
    s(:const, nil, :TestWEBrickHTTPUtils),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :WEBrick), :HTTPUtils)),
      s(:def, :test_normilize_path,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "/foo"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo"))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/bar/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/../"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/.."))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/bar/../../"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/bar/../.."))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/bar/../.."))),
          s(:send, nil, :assert_equal,
            s(:str, "/baz"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/bar/../../baz"))),
          s(:send, nil, :assert_equal,
            s(:str, "/baz"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/../bar/../baz"))),
          s(:send, nil, :assert_equal,
            s(:str, "/baz/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/../bar/../baz/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/..."),
            s(:send, nil, :normalize_path,
              s(:str, "/bar/../..."))),
          s(:send, nil, :assert_equal,
            s(:str, "/.../"),
            s(:send, nil, :normalize_path,
              s(:str, "/bar/../.../"))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/./"))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/."))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/././"))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/./."))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/./bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar/"),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/./bar/."))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar/"),
            s(:send, nil, :normalize_path,
              s(:str, "/./././foo/./bar/."))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar/"),
            s(:send, nil, :normalize_path,
              s(:str, "//foo///.//bar/.///.//"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send, nil, :normalize_path,
              s(:str, "//foo///..///bar/.///..//.//"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "foo/bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, ".."))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/.."))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./.."))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./../.."))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./../../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/../.."))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/../../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/../../.."))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/../../../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/../foo/../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/../foo/../../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/bar/../../../../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/foo/../bar/../../"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./../bar/"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send, nil, :normalize_path,
              s(:str, "/./../"))))),
      s(:def, :test_split_header_value,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:send, nil, :split_header_value,
              s(:str, "foo, bar"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "\"foo\""),
              s(:str, "bar")),
            s(:send, nil, :split_header_value,
              s(:str, "\"foo\", bar"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "\"bar\"")),
            s(:send, nil, :split_header_value,
              s(:str, "foo, \"bar\""))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "*")),
            s(:send, nil, :split_header_value,
              s(:str, "*"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "W/\"xyzzy\""),
              s(:str, "W/\"r2d2xxxx\""),
              s(:str, "W/\"c3piozzzz\"")),
            s(:send, nil, :split_header_value,
              s(:str, "W/\"xyzzy\", W/\"r2d2xxxx\", W/\"c3piozzzz\""))))),
      s(:def, :test_escape,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar"),
            s(:send, nil, :escape,
              s(:str, "/foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo/bar"),
            s(:send, nil, :escape,
              s(:str, "/~foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo%20bar"),
            s(:send, nil, :escape,
              s(:str, "/~foo bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo%20bar"),
            s(:send, nil, :escape,
              s(:str, "/~foo bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo%09bar"),
            s(:send, nil, :escape,
              s(:str, "/~foo\tbar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo+bar"),
            s(:send, nil, :escape,
              s(:str, "/~foo+bar"))),
          s(:lvasgn, :bug8425,
            s(:str, "[Bug #8425] [ruby-core:55052]")),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :ArgumentError),
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:lvar, :bug8425)),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:str, "%E3%83%AB%E3%83%93%E3%83%BC%E3%81%95%E3%82%93"),
              s(:send, nil, :escape,
                s(:str, "ルビーさん")))))),
      s(:def, :test_escape_form,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "%2Ffoo%2Fbar"),
            s(:send, nil, :escape_form,
              s(:str, "/foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "%2F~foo%2Fbar"),
            s(:send, nil, :escape_form,
              s(:str, "/~foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "%2F~foo+bar"),
            s(:send, nil, :escape_form,
              s(:str, "/~foo bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "%2F~foo+%2B+bar"),
            s(:send, nil, :escape_form,
              s(:str, "/~foo + bar"))))),
      s(:def, :test_unescape,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar"),
            s(:send, nil, :unescape,
              s(:str, "%2ffoo%2fbar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo/bar"),
            s(:send, nil, :unescape,
              s(:str, "/%7efoo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo/bar"),
            s(:send, nil, :unescape,
              s(:str, "%2f%7efoo%2fbar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo+bar"),
            s(:send, nil, :unescape,
              s(:str, "/%7efoo+bar"))))),
      s(:def, :test_unescape_form,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "//foo/bar"),
            s(:send, nil, :unescape_form,
              s(:str, "/%2Ffoo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "//foo/bar baz"),
            s(:send, nil, :unescape_form,
              s(:str, "/%2Ffoo/bar+baz"))),
          s(:send, nil, :assert_equal,
            s(:str, "/~foo/bar baz"),
            s(:send, nil, :unescape_form,
              s(:str, "/%7Efoo/bar+baz"))))),
      s(:def, :test_escape_path,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar"),
            s(:send, nil, :escape_path,
              s(:str, "/foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo/bar/"),
            s(:send, nil, :escape_path,
              s(:str, "/foo/bar/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/%25foo/bar/"),
            s(:send, nil, :escape_path,
              s(:str, "/%foo/bar/"))))))))
