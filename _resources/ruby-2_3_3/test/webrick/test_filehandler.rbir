s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require_relative,
    s(:str, "utils.rb")),
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:class,
    s(:const,
      s(:const, nil, :WEBrick), :TestFileHandler),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :default_file_handler,
        s(:args,
          s(:arg, :filename)),
        s(:begin,
          s(:lvasgn, :klass,
            s(:const,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPServlet), :DefaultFileHandler)),
          s(:send,
            s(:lvar, :klass), :new,
            s(:const,
              s(:const,
                s(:const, nil, :WEBrick), :Config), :HTTP),
            s(:lvar, :filename)))),
      s(:def, :windows?,
        s(:args),
        s(:send,
          s(:const, nil, :File), :directory?,
          s(:str, "\\"))),
      s(:def, :get_res_body,
        s(:args,
          s(:arg, :res)),
        s(:begin,
          s(:lvasgn, :body,
            s(:send,
              s(:lvar, :res), :body)),
          s(:if,
            s(:defined?,
              s(:send,
                s(:lvar, :body), :read)),
            s(:kwbegin,
              s(:ensure,
                s(:send,
                  s(:lvar, :body), :read),
                s(:send,
                  s(:lvar, :body), :close))),
            s(:lvar, :body)))),
      s(:def, :make_range_request,
        s(:args,
          s(:arg, :range_spec)),
        s(:begin,
          s(:lvasgn, :msg,
            s(:dstr,
              s(:str, "      GET / HTTP/1.0\n"),
              s(:str, "      Range: "),
              s(:begin,
                s(:lvar, :range_spec)),
              s(:str, "\n"),
              s(:str, "\n"))),
          s(:return,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:send,
                s(:lvar, :msg), :gsub,
                s(:regexp,
                  s(:str, "^ {6}"),
                  s(:regopt)),
                s(:str, "")))))),
      s(:def, :make_range_response,
        s(:args,
          s(:arg, :file),
          s(:arg, :range_spec)),
        s(:begin,
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPRequest), :new,
              s(:const,
                s(:const,
                  s(:const, nil, :WEBrick), :Config), :HTTP))),
          s(:send,
            s(:lvar, :req), :parse,
            s(:send, nil, :make_range_request,
              s(:lvar, :range_spec))),
          s(:lvasgn, :res,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPResponse), :new,
              s(:const,
                s(:const,
                  s(:const, nil, :WEBrick), :Config), :HTTP))),
          s(:lvasgn, :size,
            s(:send,
              s(:const, nil, :File), :size,
              s(:lvar, :file))),
          s(:lvasgn, :handler,
            s(:send, nil, :default_file_handler,
              s(:lvar, :file))),
          s(:send,
            s(:lvar, :handler), :make_partial_content,
            s(:lvar, :req),
            s(:lvar, :res),
            s(:lvar, :file),
            s(:lvar, :size)),
          s(:return,
            s(:lvar, :res)))),
      s(:def, :test_make_partial_content,
        s(:args),
        s(:begin,
          s(:lvasgn, :filename,
            s(:str, "(string)")),
          s(:lvasgn, :filesize,
            s(:send,
              s(:const, nil, :File), :size,
              s(:lvar, :filename))),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:dstr,
                s(:str, "bytes="),
                s(:begin,
                  s(:send,
                    s(:lvar, :filesize), :-,
                    s(:int, 100))),
                s(:str, "-")))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^text/plain"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:int, 100),
            s(:send,
              s(:send, nil, :get_res_body,
                s(:lvar, :res)), :size)),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:str, "bytes=-100"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^text/plain"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:int, 100),
            s(:send,
              s(:send, nil, :get_res_body,
                s(:lvar, :res)), :size)),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:str, "bytes=0-99"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^text/plain"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:int, 100),
            s(:send,
              s(:send, nil, :get_res_body,
                s(:lvar, :res)), :size)),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:str, "bytes=100-199"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^text/plain"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:int, 100),
            s(:send,
              s(:send, nil, :get_res_body,
                s(:lvar, :res)), :size)),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:str, "bytes=0-0"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^text/plain"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send, nil, :get_res_body,
                s(:lvar, :res)), :size)),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:str, "bytes=-1"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^text/plain"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send, nil, :get_res_body,
                s(:lvar, :res)), :size)),
          s(:lvasgn, :res,
            s(:send, nil, :make_range_response,
              s(:lvar, :filename),
              s(:str, "bytes=0-0, -2"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^multipart/byteranges"),
              s(:regopt)),
            s(:send,
              s(:lvar, :res), :[],
              s(:str, "content-type"))))),
      s(:def, :test_filehandler,
        s(:args),
        s(:begin,
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :DocumentRoot),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "(string)"))))),
          s(:lvasgn, :this_file,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "(string)"))),
          s(:lvasgn, :filesize,
            s(:send,
              s(:const, nil, :File), :size,
              s(:str, "(string)"))),
          s(:lvasgn, :this_data,
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:str, "(string)"),
                s(:str, "rb")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :read))),
          s(:lvasgn, :range,
            s(:nil)),
          s(:lvasgn, :bug2593,
            s(:str, "[ruby-dev:40030]")),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "200"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/html"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_match,
                    s(:regexp,
                      s(:str, "HREF=\""),
                      s(:begin,
                        s(:lvar, :this_file)),
                      s(:str, "\""),
                      s(:regopt)),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "200"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:const, nil, :File), :read,
                      s(:str, "(string)")),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:dstr,
                        s(:str, "bytes="),
                        s(:begin,
                          s(:send,
                            s(:lvar, :filesize), :-,
                            s(:int, 100))),
                        s(:str, "-")))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:block,
                    s(:send, nil, :assert_nothing_raised,
                      s(:lvar, :bug2593)),
                    s(:args),
                    s(:lvasgn, :range,
                      s(:send,
                        s(:lvar, :res), :content_range))),
                  s(:send, nil, :assert_equal,
                    s(:irange,
                      s(:begin,
                        s(:send,
                          s(:lvar, :filesize), :-,
                          s(:int, 100))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :filesize), :-,
                          s(:int, 1)))),
                    s(:lvar, :range),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :this_data), :[],
                      s(:irange,
                        s(:int, -100),
                        s(:int, -1))),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:str, "bytes=-100"))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:block,
                    s(:send, nil, :assert_nothing_raised,
                      s(:lvar, :bug2593)),
                    s(:args),
                    s(:lvasgn, :range,
                      s(:send,
                        s(:lvar, :res), :content_range))),
                  s(:send, nil, :assert_equal,
                    s(:irange,
                      s(:begin,
                        s(:send,
                          s(:lvar, :filesize), :-,
                          s(:int, 100))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :filesize), :-,
                          s(:int, 1)))),
                    s(:lvar, :range),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :this_data), :[],
                      s(:irange,
                        s(:int, -100),
                        s(:int, -1))),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:str, "bytes=0-99"))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:block,
                    s(:send, nil, :assert_nothing_raised,
                      s(:lvar, :bug2593)),
                    s(:args),
                    s(:lvasgn, :range,
                      s(:send,
                        s(:lvar, :res), :content_range))),
                  s(:send, nil, :assert_equal,
                    s(:irange,
                      s(:int, 0),
                      s(:int, 99)),
                    s(:lvar, :range),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :this_data), :[],
                      s(:irange,
                        s(:int, 0),
                        s(:int, 99))),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:str, "bytes=100-199"))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:block,
                    s(:send, nil, :assert_nothing_raised,
                      s(:lvar, :bug2593)),
                    s(:args),
                    s(:lvasgn, :range,
                      s(:send,
                        s(:lvar, :res), :content_range))),
                  s(:send, nil, :assert_equal,
                    s(:irange,
                      s(:int, 100),
                      s(:int, 199)),
                    s(:lvar, :range),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :this_data), :[],
                      s(:irange,
                        s(:int, 100),
                        s(:int, 199))),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:str, "bytes=0-0"))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:block,
                    s(:send, nil, :assert_nothing_raised,
                      s(:lvar, :bug2593)),
                    s(:args),
                    s(:lvasgn, :range,
                      s(:send,
                        s(:lvar, :res), :content_range))),
                  s(:send, nil, :assert_equal,
                    s(:irange,
                      s(:int, 0),
                      s(:int, 0)),
                    s(:lvar, :range),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :this_data), :[],
                      s(:irange,
                        s(:int, 0),
                        s(:int, 0))),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:str, "bytes=-1"))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/plain"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:block,
                    s(:send, nil, :assert_nothing_raised,
                      s(:lvar, :bug2593)),
                    s(:args),
                    s(:lvasgn, :range,
                      s(:send,
                        s(:lvar, :res), :content_range))),
                  s(:send, nil, :assert_equal,
                    s(:irange,
                      s(:begin,
                        s(:send,
                          s(:lvar, :filesize), :-,
                          s(:int, 1))),
                      s(:begin,
                        s(:send,
                          s(:lvar, :filesize), :-,
                          s(:int, 1)))),
                    s(:lvar, :range),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :this_data), :[],
                      s(:int, -1),
                      s(:int, 1)),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))),
                  s(:hash,
                    s(:pair,
                      s(:str, "range"),
                      s(:str, "bytes=0-0, -2"))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "206"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "multipart/byteranges"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)))))))),
      s(:def, :test_non_disclosure_name,
        s(:args),
        s(:begin,
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :DocumentRoot),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "(string)"))))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR `.*\\' not found\\."),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "WARN  the request refers nondisclosure name"),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :log))))),
          s(:lvasgn, :this_file,
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "(string)"))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :doc_root_opts,
                s(:send,
                  s(:lvar, :server), :[],
                  s(:sym, :DocumentRootOptions))),
              s(:send,
                s(:lvar, :doc_root_opts), :[]=,
                s(:sym, :NondisclosureName),
                s(:array,
                  s(:str, ".ht*"),
                  s(:str, "*~"),
                  s(:str, "test_*"))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "200"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "text/html"),
                    s(:send,
                      s(:lvar, :res), :content_type),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_no_match,
                    s(:regexp,
                      s(:str, "HREF=\""),
                      s(:begin,
                        s(:send,
                          s(:const, nil, :File), :basename,
                          s(:str, "(string)"))),
                      s(:str, "\""),
                      s(:regopt)),
                    s(:send,
                      s(:lvar, :res), :body)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :this_file))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:send,
                s(:lvar, :doc_root_opts), :[]=,
                s(:sym, :NondisclosureName),
                s(:array,
                  s(:str, ".ht*"),
                  s(:str, "*~"),
                  s(:str, "TEST_*"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))))))),
      s(:def, :test_directory_traversal,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :File), :executable?,
              s(:str, "(string)")),
            s(:return), nil),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :DocumentRoot),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "(string)"))))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR bad URI"),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR `.*\\' not found\\."),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :log))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/../../"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "400"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/..%5c../"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :File), :basename,
                        s(:str, "(string)")))))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:if,
                    s(:send, nil, :windows?),
                    s(:str, "200"),
                    s(:str, "404")),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/..%5c..%5cruby.c"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))))))),
      s(:def, :test_unwise_in_path,
        s(:args),
        s(:if,
          s(:send, nil, :windows?),
          s(:begin,
            s(:lvasgn, :config,
              s(:hash,
                s(:pair,
                  s(:sym, :DocumentRoot),
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:str, "(string)"))))),
            s(:block,
              s(:send,
                s(:const, nil, :TestWEBrick), :start_httpserver,
                s(:lvar, :config)),
              s(:args,
                s(:arg, :server),
                s(:arg, :addr),
                s(:arg, :port),
                s(:arg, :log)),
              s(:begin,
                s(:lvasgn, :http,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :new,
                    s(:lvar, :addr),
                    s(:lvar, :port))),
                s(:lvasgn, :req,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Net), :HTTP), :Get), :new,
                    s(:str, "/..%5c.."))),
                s(:block,
                  s(:send,
                    s(:lvar, :http), :request,
                    s(:lvar, :req)),
                  s(:args,
                    s(:arg, :res)),
                  s(:send, nil, :assert_equal,
                    s(:str, "301"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)))))), nil)),
      s(:def, :test_short_filename,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :File), :executable?,
              s(:str, "(string)")),
            s(:return), nil),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :CGIInterpreter),
                s(:const,
                  s(:const, nil, :TestWEBrick), :RubyBin)),
              s(:pair,
                s(:sym, :DocumentRoot),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "(string)"))),
              s(:pair,
                s(:sym, :CGIPathEnv),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "PATH"))))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR `.*\\' not found\\."),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "WARN  the request refers nondisclosure name"),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :log))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:if,
                s(:send, nil, :windows?),
                s(:begin,
                  s(:lvasgn, :root,
                    s(:send,
                      s(:send,
                        s(:lvar, :config), :[],
                        s(:sym, :DocumentRoot)), :tr,
                      s(:str, "/"),
                      s(:str, "\\"))),
                  s(:lvasgn, :fname,
                    s(:send,
                      s(:const, nil, :IO), :popen,
                      s(:array,
                        s(:str, "dir"),
                        s(:str, "/x"),
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :root)),
                          s(:str, "\\webrick_long_filename.cgi"))),
                      s(:block_pass,
                        s(:sym, :read)))),
                  s(:send,
                    s(:lvar, :fname), :sub!,
                    s(:regexp,
                      s(:str, "\\A.*$^$.*$^$"),
                      s(:regopt, :m)),
                    s(:str, "")),
                  s(:if,
                    s(:lvar, :fname),
                    s(:begin,
                      s(:lvasgn, :fname,
                        s(:send,
                          s(:lvar, :fname), :[],
                          s(:regexp,
                            s(:str, "\\s(w.+?cgi)\\s"),
                            s(:regopt, :i)),
                          s(:int, 1))),
                      s(:send,
                        s(:lvar, :fname), :downcase!)), nil)),
                s(:lvasgn, :fname,
                  s(:str, "webric~1.cgi"))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:dstr,
                    s(:str, "/"),
                    s(:begin,
                      s(:lvar, :fname)),
                    s(:str, "/test")))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:if,
                  s(:send, nil, :windows?),
                  s(:begin,
                    s(:send, nil, :assert_equal,
                      s(:str, "200"),
                      s(:send,
                        s(:lvar, :res), :code),
                      s(:send,
                        s(:lvar, :log), :call)),
                    s(:send, nil, :assert_equal,
                      s(:str, "/test"),
                      s(:send,
                        s(:lvar, :res), :body),
                      s(:send,
                        s(:lvar, :log), :call))),
                  s(:send, nil, :assert_equal,
                    s(:str, "404"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/.htaccess"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/htacce~1"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/HTACCE~1"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:send, nil, :assert_equal,
                  s(:str, "404"),
                  s(:send,
                    s(:lvar, :res), :code),
                  s(:send,
                    s(:lvar, :log), :call))))))),
      s(:def, :test_script_disclosure,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :File), :executable?,
              s(:str, "(string)")),
            s(:return), nil),
          s(:lvasgn, :config,
            s(:hash,
              s(:pair,
                s(:sym, :CGIInterpreter),
                s(:const,
                  s(:const, nil, :TestWEBrick), :RubyBin)),
              s(:pair,
                s(:sym, :DocumentRoot),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "(string)"))),
              s(:pair,
                s(:sym, :CGIPathEnv),
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "PATH"))),
              s(:pair,
                s(:sym, :RequestCallback),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :req),
                    s(:arg, :res)),
                  s(:defs,
                    s(:lvar, :req), :meta_vars,
                    s(:args),
                    s(:begin,
                      s(:lvasgn, :meta,
                        s(:zsuper)),
                      s(:send,
                        s(:lvar, :meta), :[]=,
                        s(:str, "RUBYLIB"),
                        s(:send,
                          s(:gvar, :$:), :join,
                          s(:const,
                            s(:const, nil, :File), :PATH_SEPARATOR))),
                      s(:if,
                        s(:send,
                          s(:const,
                            s(:const, nil, :RbConfig), :CONFIG), :[],
                          s(:str, "LIBPATHENV")),
                        s(:send,
                          s(:lvar, :meta), :[]=,
                          s(:send,
                            s(:const,
                              s(:const, nil, :RbConfig), :CONFIG), :[],
                            s(:str, "LIBPATHENV")),
                          s(:send,
                            s(:const, nil, :ENV), :[],
                            s(:send,
                              s(:const,
                                s(:const, nil, :RbConfig), :CONFIG), :[],
                              s(:str, "LIBPATHENV")))), nil),
                      s(:return,
                        s(:lvar, :meta)))))))),
          s(:lvasgn, :log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log),
                s(:arg, :access_log)),
              s(:begin,
                s(:lvasgn, :log,
                  s(:block,
                    s(:send,
                      s(:lvar, :log), :reject),
                    s(:args,
                      s(:arg, :s)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "ERROR `.*\\' not found\\."),
                        s(:regopt)),
                      s(:lvar, :s)))),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :log))))),
          s(:block,
            s(:send,
              s(:const, nil, :TestWEBrick), :start_httpserver,
              s(:lvar, :config),
              s(:lvar, :log_tester)),
            s(:args,
              s(:arg, :server),
              s(:arg, :addr),
              s(:arg, :port),
              s(:arg, :log)),
            s(:begin,
              s(:lvasgn, :http,
                s(:send,
                  s(:const,
                    s(:const, nil, :Net), :HTTP), :new,
                  s(:lvar, :addr),
                  s(:lvar, :port))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/webrick.cgi/test"))),
              s(:block,
                s(:send,
                  s(:lvar, :http), :request,
                  s(:lvar, :req)),
                s(:args,
                  s(:arg, :res)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:str, "200"),
                    s(:send,
                      s(:lvar, :res), :code),
                    s(:send,
                      s(:lvar, :log), :call)),
                  s(:send, nil, :assert_equal,
                    s(:str, "/test"),
                    s(:send,
                      s(:lvar, :res), :body),
                    s(:send,
                      s(:lvar, :log), :call)))),
              s(:lvasgn, :resok,
                s(:send, nil, :windows?)),
              s(:lvasgn, :response_assertion,
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :res)),
                  s(:if,
                    s(:lvar, :resok),
                    s(:begin,
                      s(:send, nil, :assert_equal,
                        s(:str, "200"),
                        s(:send,
                          s(:lvar, :res), :code),
                        s(:send,
                          s(:lvar, :log), :call)),
                      s(:send, nil, :assert_equal,
                        s(:str, "/test"),
                        s(:send,
                          s(:lvar, :res), :body),
                        s(:send,
                          s(:lvar, :log), :call))),
                    s(:send, nil, :assert_equal,
                      s(:str, "404"),
                      s(:send,
                        s(:lvar, :res), :code),
                      s(:send,
                        s(:lvar, :log), :call))))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/webrick.cgi%20/test"))),
              s(:send,
                s(:lvar, :http), :request,
                s(:lvar, :req),
                s(:block_pass,
                  s(:lvar, :response_assertion))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/webrick.cgi./test"))),
              s(:send,
                s(:lvar, :http), :request,
                s(:lvar, :req),
                s(:block_pass,
                  s(:lvar, :response_assertion))),
              s(:and_asgn,
                s(:lvasgn, :resok),
                s(:send,
                  s(:const, nil, :File), :exist?,
                  s(:send,
                    s(:str, "(string)"), :+,
                    s(:str, "::$DATA")))),
              s(:lvasgn, :req,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Net), :HTTP), :Get), :new,
                  s(:str, "/webrick.cgi::$DATA/test"))),
              s(:send,
                s(:lvar, :http), :request,
                s(:lvar, :req),
                s(:block_pass,
                  s(:lvar, :response_assertion))))))))))
