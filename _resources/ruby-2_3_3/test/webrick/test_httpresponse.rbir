s(:begin,
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require,
    s(:str, "minitest/autorun")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:module,
    s(:const, nil, :WEBrick),
    s(:class,
      s(:const, nil, :TestHTTPResponse),
      s(:const,
        s(:const,
          s(:const, nil, :MiniTest), :Unit), :TestCase),
      s(:begin,
        s(:class,
          s(:const, nil, :FakeLogger), nil,
          s(:begin,
            s(:send, nil, :attr_reader,
              s(:sym, :messages)),
            s(:def, :initialize,
              s(:args),
              s(:ivasgn, :@messages,
                s(:array))),
            s(:def, :warn,
              s(:args,
                s(:arg, :msg)),
              s(:send,
                s(:ivar, :@messages), :<<,
                s(:lvar, :msg))))),
        s(:send, nil, :attr_reader,
          s(:sym, :config),
          s(:sym, :logger),
          s(:sym, :res)),
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:zsuper),
            s(:ivasgn, :@logger,
              s(:send,
                s(:const, nil, :FakeLogger), :new)),
            s(:ivasgn, :@config,
              s(:const,
                s(:const, nil, :Config), :HTTP)),
            s(:send,
              s(:ivar, :@config), :[]=,
              s(:sym, :Logger),
              s(:send, nil, :logger)),
            s(:ivasgn, :@res,
              s(:send,
                s(:const, nil, :HTTPResponse), :new,
                s(:send, nil, :config))),
            s(:send,
              s(:ivar, :@res), :keep_alive=,
              s(:true)))),
        s(:def, :test_304_does_not_log_warning,
          s(:args),
          s(:begin,
            s(:send,
              s(:send, nil, :res), :status=,
              s(:int, 304)),
            s(:send,
              s(:send, nil, :res), :setup_header),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_204_does_not_log_warning,
          s(:args),
          s(:begin,
            s(:send,
              s(:send, nil, :res), :status=,
              s(:int, 204)),
            s(:send,
              s(:send, nil, :res), :setup_header),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_1xx_does_not_log_warnings,
          s(:args),
          s(:begin,
            s(:send,
              s(:send, nil, :res), :status=,
              s(:int, 105)),
            s(:send,
              s(:send, nil, :res), :setup_header),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_send_body_io,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :body_r),
                s(:arg, :body_w)),
              s(:begin,
                s(:send,
                  s(:lvar, :body_w), :write,
                  s(:str, "hello")),
                s(:send,
                  s(:lvar, :body_w), :close),
                s(:send,
                  s(:ivar, :@res), :body=,
                  s(:lvar, :body_r)),
                s(:block,
                  s(:send,
                    s(:const, nil, :IO), :pipe),
                  s(:args,
                    s(:arg, :r),
                    s(:arg, :w)),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@res), :send_body,
                      s(:lvar, :w)),
                    s(:send,
                      s(:lvar, :w), :close),
                    s(:send, nil, :assert_equal,
                      s(:str, "hello"),
                      s(:send,
                        s(:lvar, :r), :read)))))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_send_body_string,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@res), :body=,
              s(:str, "hello")),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :r),
                s(:arg, :w)),
              s(:begin,
                s(:send,
                  s(:ivar, :@res), :send_body,
                  s(:lvar, :w)),
                s(:send,
                  s(:lvar, :w), :close),
                s(:send, nil, :assert_equal,
                  s(:str, "hello"),
                  s(:send,
                    s(:lvar, :r), :read)))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_send_body_string_io,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@res), :body=,
              s(:send,
                s(:const, nil, :StringIO), :new,
                s(:str, "hello"))),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :r),
                s(:arg, :w)),
              s(:begin,
                s(:send,
                  s(:ivar, :@res), :send_body,
                  s(:lvar, :w)),
                s(:send,
                  s(:lvar, :w), :close),
                s(:send, nil, :assert_equal,
                  s(:str, "hello"),
                  s(:send,
                    s(:lvar, :r), :read)))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_send_body_io_chunked,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@res), :chunked=,
              s(:true)),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :body_r),
                s(:arg, :body_w)),
              s(:begin,
                s(:send,
                  s(:lvar, :body_w), :write,
                  s(:str, "hello")),
                s(:send,
                  s(:lvar, :body_w), :close),
                s(:send,
                  s(:ivar, :@res), :body=,
                  s(:lvar, :body_r)),
                s(:block,
                  s(:send,
                    s(:const, nil, :IO), :pipe),
                  s(:args,
                    s(:arg, :r),
                    s(:arg, :w)),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@res), :send_body,
                      s(:lvar, :w)),
                    s(:send,
                      s(:lvar, :w), :close),
                    s(:send,
                      s(:lvar, :r), :binmode),
                    s(:send, nil, :assert_equal,
                      s(:str, "5\r\nhello\r\n0\r\n\r\n"),
                      s(:send,
                        s(:lvar, :r), :read)))))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_send_body_string_chunked,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@res), :chunked=,
              s(:true)),
            s(:send,
              s(:ivar, :@res), :body=,
              s(:str, "hello")),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :r),
                s(:arg, :w)),
              s(:begin,
                s(:send,
                  s(:ivar, :@res), :send_body,
                  s(:lvar, :w)),
                s(:send,
                  s(:lvar, :w), :close),
                s(:send,
                  s(:lvar, :r), :binmode),
                s(:send, nil, :assert_equal,
                  s(:str, "5\r\nhello\r\n0\r\n\r\n"),
                  s(:send,
                    s(:lvar, :r), :read)))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length)))),
        s(:def, :test_send_body_string_io_chunked,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@res), :chunked=,
              s(:true)),
            s(:send,
              s(:ivar, :@res), :body=,
              s(:send,
                s(:const, nil, :StringIO), :new,
                s(:str, "hello"))),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :r),
                s(:arg, :w)),
              s(:begin,
                s(:send,
                  s(:ivar, :@res), :send_body,
                  s(:lvar, :w)),
                s(:send,
                  s(:lvar, :w), :close),
                s(:send,
                  s(:lvar, :r), :binmode),
                s(:send, nil, :assert_equal,
                  s(:str, "5\r\nhello\r\n0\r\n\r\n"),
                  s(:send,
                    s(:lvar, :r), :read)))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:send, nil, :logger), :messages), :length))))))))
