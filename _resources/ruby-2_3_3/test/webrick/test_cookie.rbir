s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "webrick/cookie")),
  s(:class,
    s(:const, nil, :TestWEBrickCookie),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_new,
        s(:args),
        s(:begin,
          s(:lvasgn, :cookie,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :new,
              s(:str, "foo"),
              s(:str, "bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:send,
              s(:lvar, :cookie), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "bar"),
            s(:send,
              s(:lvar, :cookie), :value)),
          s(:send, nil, :assert_equal,
            s(:str, "foo=bar"),
            s(:send,
              s(:lvar, :cookie), :to_s)))),
      s(:def, :test_time,
        s(:args),
        s(:begin,
          s(:lvasgn, :cookie,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :new,
              s(:str, "foo"),
              s(:str, "bar"))),
          s(:lvasgn, :t,
            s(:int, 1000000000)),
          s(:send,
            s(:lvar, :cookie), :max_age=,
            s(:lvar, :t)),
          s(:send, nil, :assert_match,
            s(:send,
              s(:lvar, :t), :to_s),
            s(:send,
              s(:lvar, :cookie), :to_s)),
          s(:lvasgn, :cookie,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :new,
              s(:str, "foo"),
              s(:str, "bar"))),
          s(:lvasgn, :t,
            s(:send,
              s(:const, nil, :Time), :at,
              s(:int, 1000000000))),
          s(:send,
            s(:lvar, :cookie), :expires=,
            s(:lvar, :t)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Time),
            s(:send,
              s(:send,
                s(:lvar, :cookie), :expires), :class)),
          s(:send, nil, :assert_equal,
            s(:lvar, :t),
            s(:send,
              s(:lvar, :cookie), :expires)),
          s(:lvasgn, :ts,
            s(:send,
              s(:lvar, :t), :httpdate)),
          s(:send,
            s(:lvar, :cookie), :expires=,
            s(:lvar, :ts)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Time),
            s(:send,
              s(:send,
                s(:lvar, :cookie), :expires), :class)),
          s(:send, nil, :assert_equal,
            s(:lvar, :t),
            s(:send,
              s(:lvar, :cookie), :expires)),
          s(:send, nil, :assert_match,
            s(:lvar, :ts),
            s(:send,
              s(:lvar, :cookie), :to_s)))),
      s(:def, :test_parse,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:str, "")),
          s(:send,
            s(:lvar, :data), :<<,
            s(:str, "$Version=\"1\"; ")),
          s(:send,
            s(:lvar, :data), :<<,
            s(:str, "Customer=\"WILE_E_COYOTE\"; $Path=\"/acme\"; ")),
          s(:send,
            s(:lvar, :data), :<<,
            s(:str, "Part_Number=\"Rocket_Launcher_0001\"; $Path=\"/acme\"; ")),
          s(:send,
            s(:lvar, :data), :<<,
            s(:str, "Shipping=\"FedEx\"; $Path=\"/acme\"")),
          s(:lvasgn, :cookies,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:lvar, :cookies), :size)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "Customer"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "WILE_E_COYOTE"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :value)),
          s(:send, nil, :assert_equal,
            s(:str, "/acme"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :path)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 1)), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "Part_Number"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 1)), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "Rocket_Launcher_0001"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 1)), :value)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 2)), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "Shipping"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 2)), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "FedEx"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 2)), :value)),
          s(:lvasgn, :data,
            s(:str, "hoge=moge; __div__session=9865ecfd514be7f7")),
          s(:lvasgn, :cookies,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "hoge"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "moge"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 0)), :value)),
          s(:send, nil, :assert_equal,
            s(:str, "__div__session"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 1)), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "9865ecfd514be7f7"),
            s(:send,
              s(:send,
                s(:lvar, :cookies), :[],
                s(:int, 1)), :value)))),
      s(:def, :test_parse_no_whitespace,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:array,
                s(:str, "$Version=\"1\"; "),
                s(:str, "Customer=\"WILE_E_COYOTE\";$Path=\"/acme\";"),
                s(:str, "Part_Number=\"Rocket_Launcher_0001\";$Path=\"/acme\";"),
                s(:str, "Shipping=\"FedEx\";$Path=\"/acme\"")), :join)),
          s(:lvasgn, :cookies,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :cookies), :size)))),
      s(:def, :test_parse_too_much_whitespaces,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:array,
                s(:str, "$Version=\"1\"; "),
                s(:str, "Customer=\"WILE_E_COYOTE\";$Path=\"/acme\";     "),
                s(:str, "Part_Number=\"Rocket_Launcher_0001\";$Path=\"/acme\";     "),
                s(:str, "Shipping=\"FedEx\";$Path=\"/acme\"")), :join)),
          s(:lvasgn, :cookies,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:lvar, :cookies), :size)))),
      s(:def, :test_parse_set_cookie,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:str, "Customer=\"WILE_E_COYOTE\"; Version=\"1\"; Path=\"/acme\"")),
          s(:lvasgn, :cookie,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse_set_cookie,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:str, "Customer"),
            s(:send,
              s(:lvar, :cookie), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "WILE_E_COYOTE"),
            s(:send,
              s(:lvar, :cookie), :value)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :cookie), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "/acme"),
            s(:send,
              s(:lvar, :cookie), :path)),
          s(:lvasgn, :data,
            s(:str, "Shipping=\"FedEx\"; Version=\"1\"; Path=\"/acme\"; Secure")),
          s(:lvasgn, :cookie,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse_set_cookie,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:str, "Shipping"),
            s(:send,
              s(:lvar, :cookie), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "FedEx"),
            s(:send,
              s(:lvar, :cookie), :value)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :cookie), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "/acme"),
            s(:send,
              s(:lvar, :cookie), :path)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :cookie), :secure)))),
      s(:def, :test_parse_set_cookies,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:str, "Shipping=\"FedEx\"; Version=\"1\"; Path=\"/acme\"; Secure")),
          s(:send,
            s(:lvar, :data), :<<,
            s(:str, ", CUSTOMER=WILE_E_COYOTE; path=/; expires=Wednesday, 09-Nov-99 23:12:40 GMT; path=/; Secure")),
          s(:send,
            s(:lvar, :data), :<<,
            s(:str, ", name=\"Aaron\"; Version=\"1\"; path=\"/acme\"")),
          s(:lvasgn, :cookies,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :Cookie), :parse_set_cookies,
              s(:lvar, :data))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:lvar, :cookies), :length)),
          s(:lvasgn, :fed_ex,
            s(:block,
              s(:send,
                s(:lvar, :cookies), :find),
              s(:args,
                s(:arg, :c)),
              s(:send,
                s(:send,
                  s(:lvar, :c), :name), :==,
                s(:str, "Shipping")))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :fed_ex)),
          s(:send, nil, :assert_equal,
            s(:str, "Shipping"),
            s(:send,
              s(:lvar, :fed_ex), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "FedEx"),
            s(:send,
              s(:lvar, :fed_ex), :value)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :fed_ex), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "/acme"),
            s(:send,
              s(:lvar, :fed_ex), :path)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :fed_ex), :secure)),
          s(:lvasgn, :name,
            s(:block,
              s(:send,
                s(:lvar, :cookies), :find),
              s(:args,
                s(:arg, :c)),
              s(:send,
                s(:send,
                  s(:lvar, :c), :name), :==,
                s(:str, "name")))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :name)),
          s(:send, nil, :assert_equal,
            s(:str, "name"),
            s(:send,
              s(:lvar, :name), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "Aaron"),
            s(:send,
              s(:lvar, :name), :value)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :name), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "/acme"),
            s(:send,
              s(:lvar, :name), :path)),
          s(:lvasgn, :customer,
            s(:block,
              s(:send,
                s(:lvar, :cookies), :find),
              s(:args,
                s(:arg, :c)),
              s(:send,
                s(:send,
                  s(:lvar, :c), :name), :==,
                s(:str, "CUSTOMER")))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :customer)),
          s(:send, nil, :assert_equal,
            s(:str, "CUSTOMER"),
            s(:send,
              s(:lvar, :customer), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "WILE_E_COYOTE"),
            s(:send,
              s(:lvar, :customer), :value)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :customer), :version)),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:lvar, :customer), :path)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Time), :utc,
              s(:int, 1999),
              s(:int, 11),
              s(:int, 9),
              s(:int, 23),
              s(:int, 12),
              s(:int, 40)),
            s(:send,
              s(:lvar, :customer), :expires)))))))
