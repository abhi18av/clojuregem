s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestPath),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_path,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:str, "b"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a/b"))),
          s(:send, nil, :assert_equal,
            s(:str, "b"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "//"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "///"))),
          s(:send, nil, :assert_equal,
            s(:str, "b"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a/b////"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a.rb"),
              s(:str, ".rb"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a.rb///"),
              s(:str, ".rb"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a.rb///"),
              s(:str, ".*"))),
          s(:send, nil, :assert_equal,
            s(:str, "a.rb"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a.rb///"),
              s(:str, ".c"))),
          s(:send, nil, :assert_equal,
            s(:str, "."),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "a/b"))),
          s(:send, nil, :assert_equal,
            s(:str, "a/b"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "a/b/c"))),
          s(:send, nil, :assert_equal,
            s(:str, "/a/b"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a/b/c"))),
          s(:send, nil, :assert_equal,
            s(:str, "/a"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/a"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a/b///"))),
          s(:case,
            s(:send,
              s(:const, nil, :Dir), :pwd),
            s(:when,
              s(:regexp,
                s(:str, "\\A\\w:"),
                s(:regopt)),
              s(:begin,
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\A\\w:/\\z"),
                    s(:regopt)),
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:str, "."),
                    s(:str, "/"))),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\A\\w:/a\\z"),
                    s(:regopt)),
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:str, "a"),
                    s(:str, "/"))),
                s(:lvasgn, :dosish,
                  s(:true)))),
            s(:when,
              s(:regexp,
                s(:str, "\\A//"),
                s(:regopt)),
              s(:begin,
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\A//[^/]+/[^/]+\\z"),
                    s(:regopt)),
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:str, "."),
                    s(:str, "/"))),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\A//[^/]+/[^/]+/a\\z"),
                    s(:regopt)),
                  s(:send,
                    s(:const, nil, :File), :expand_path,
                    s(:str, "."),
                    s(:str, "/"))),
                s(:lvasgn, :dosish,
                  s(:true)))),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "."),
                  s(:str, "/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/sub"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "sub"),
                  s(:str, "/"))))),
          s(:if,
            s(:lvar, :dosish),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "//127.0.0.1/share"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "/"),
                  s(:str, "//127.0.0.1/share/sub"))),
              s(:send, nil, :assert_equal,
                s(:str, "//127.0.0.1/share/dir"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "/dir"),
                  s(:str, "//127.0.0.1/share/sub"))),
              s(:send, nil, :assert_equal,
                s(:str, "z:/"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "/"),
                  s(:str, "z:/sub"))),
              s(:send, nil, :assert_equal,
                s(:str, "z:/dir"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "/dir"),
                  s(:str, "z:/sub")))), nil),
          s(:send, nil, :assert_equal,
            s(:str, "//"),
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:str, "."),
              s(:str, "//"))),
          s(:send, nil, :assert_equal,
            s(:str, "//sub"),
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:str, "sub"),
              s(:str, "//"))),
          s(:send, nil, :assert_equal,
            s(:str, "//127.0.0.1/あ"),
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:str, "あ"),
              s(:str, "//127.0.0.1"))))),
      s(:def, :test_dirname,
        s(:args),
        s(:begin,
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "(bcc|ms)win\\d|mingw|cygwin|emx"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "C:."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:a/b")),
                s(:str, "[ruby-dev:27738]")),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///")),
                s(:str, "[ruby-dev:27738]")),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///a/b")))),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:"))),
              s(:send, nil, :assert_equal,
                s(:str, "."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:a"))),
              s(:send, nil, :assert_equal,
                s(:str, "."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:/a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C://a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "."),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "C:///a/"))))),
          s(:send, nil, :assert_equal,
            s(:str, "."),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:str, "."),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:str, "."),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "a/"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "a/b"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a/"))),
          s(:send, nil, :assert_equal,
            s(:str, "/a"),
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:str, "/a/b"))),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "(bcc|ms|cyg)win|mingw|emx"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "//"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/b/c"))),
              s(:send, nil, :assert_equal,
                s(:str, "//"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "//a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/b/c")))),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "//a/b/c"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "/a"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/a/b"),
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "///a/b/c"))))))),
      s(:def, :test_basename,
        s(:args),
        s(:begin,
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "(bcc|ms)win\\d|mingw|cygwin|emx"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, ""),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///a/b")))),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:a"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:/a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C://a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "C:"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "C:///a/b"))))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a/"))),
          s(:send, nil, :assert_equal,
            s(:str, "b"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "a/b"))),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "/"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "/a"))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "/a/"))),
          s(:send, nil, :assert_equal,
            s(:str, "b"),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, "/a/b"))),
          s(:send, nil, :assert_equal,
            s(:str, ".."),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:str, ".."),
              s(:str, ".*"))),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "(bcc|ms|cyg)win|mingw|emx"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/b")),
                s(:str, "[ruby-dev:27776]")),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "c"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/b/c"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "c"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/b/c")))),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "c"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "//a/b/c"))),
              s(:send, nil, :assert_equal,
                s(:str, "/"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a"))),
              s(:send, nil, :assert_equal,
                s(:str, "a"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/b"))),
              s(:send, nil, :assert_equal,
                s(:str, "b"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/b/"))),
              s(:send, nil, :assert_equal,
                s(:str, "c"),
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:str, "///a/b/c"))))))),
      s(:def, :test_extname,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, "a"))),
          s(:lvasgn, :ext,
            s(:str, ".rb")),
          s(:send, nil, :assert_equal,
            s(:lvar, :ext),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, "a.rb"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :ext),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, ".a.rb"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :ext),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, "a/b/d/test.rb"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :ext),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, ".a/b/d/test.rb"))),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "mswin|bccwin|mingw"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)), nil,
            s(:lvasgn, :ext,
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:lvar, :ext),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, "a.rb."))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, "a."))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, ".x"))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:const, nil, :File), :extname,
              s(:str, "..x"))))),
      s(:def, :test_ascii_incompatible_path,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:str, "∞☃")),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError)),
            s(:args),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :s), :encode,
                s(:str, "utf-16be")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError)),
            s(:args),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :s), :encode,
                s(:str, "utf-16le")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError)),
            s(:args),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :s), :encode,
                s(:str, "utf-32be")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError)),
            s(:args),
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :s), :encode,
                s(:str, "utf-32le")))))),
      s(:def, :test_join,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug5483,
            s(:str, "[ruby-core:40338]")),
          s(:lvasgn, :path,
            s(:array,
              s(:str, "a"),
              s(:str, "b"))),
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :Encoding), :list), :each),
            s(:args,
              s(:arg, :e)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :e), :ascii_compatible?), nil,
                s(:next)),
              s(:send, nil, :assert_equal,
                s(:lvar, :e),
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:splat,
                      s(:block,
                        s(:send,
                          s(:lvar, :path), :map),
                        s(:args,
                          s(:arg, :s)),
                        s(:send,
                          s(:lvar, :s), :force_encoding,
                          s(:lvar, :e))))), :encoding),
                s(:lvar, :bug5483)))))))))
