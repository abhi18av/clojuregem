s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestTrace),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_trace,
        s(:args),
        s(:begin,
          s(:gvasgn, :$x,
            s(:int, 1234)),
          s(:gvasgn, :$y,
            s(:int, 0)),
          s(:send, nil, :trace_var,
            s(:sym, :$x),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:gvasgn, :$y,
                s(:gvar, :$x)))),
          s(:gvasgn, :$x,
            s(:int, 40414)),
          s(:send, nil, :assert_equal,
            s(:gvar, :$x),
            s(:gvar, :$y)),
          s(:send, nil, :untrace_var,
            s(:sym, :$x)),
          s(:gvasgn, :$x,
            s(:int, 19660208)),
          s(:send, nil, :assert_not_equal,
            s(:gvar, :$x),
            s(:gvar, :$y)),
          s(:send, nil, :trace_var,
            s(:sym, :$x),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:op_asgn,
                s(:gvasgn, :$x), :*,
                s(:int, 2)))),
          s(:gvasgn, :$x,
            s(:int, 5)),
          s(:send, nil, :assert_equal,
            s(:int, 10),
            s(:gvar, :$x)),
          s(:send, nil, :untrace_var,
            s(:sym, :$x)))),
      s(:def, :test_trace_tainted_proc,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:gvasgn, :$x,
              s(:int, 1234)),
            s(:lvasgn, :s,
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:gvasgn, :$y,
                  s(:sym, :foo)))),
            s(:send, nil, :trace_var,
              s(:sym, :$x),
              s(:lvar, :s)),
            s(:send,
              s(:lvar, :s), :taint),
            s(:gvasgn, :$x,
              s(:int, 42)),
            s(:send, nil, :assert_equal,
              s(:sym, :foo),
              s(:gvar, :$y))),
          s(:send, nil, :untrace_var,
            s(:sym, :$x)))),
      s(:def, :test_trace_proc_that_raises_exception,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:gvasgn, :$x,
              s(:int, 1234)),
            s(:send, nil, :trace_var,
              s(:sym, :$x),
              s(:block,
                s(:send, nil, :proc),
                s(:args),
                s(:send, nil, :raise))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :RuntimeError)),
              s(:args),
              s(:gvasgn, :$x,
                s(:int, 42)))),
          s(:send, nil, :untrace_var,
            s(:sym, :$x)))),
      s(:def, :test_trace_string,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:gvasgn, :$x,
              s(:int, 1234)),
            s(:send, nil, :trace_var,
              s(:sym, :$x),
              s(:str, "$y = :bar")),
            s(:gvasgn, :$x,
              s(:int, 42)),
            s(:send, nil, :assert_equal,
              s(:sym, :bar),
              s(:gvar, :$y))),
          s(:send, nil, :untrace_var,
            s(:sym, :$x)))),
      s(:def, :test_trace_break,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug2722,
            s(:str, "[ruby-core:31783]")),
          s(:lvasgn, :a,
            s(:send,
              s(:send,
                s(:const, nil, :Object), :new), :extend,
              s(:const, nil, :Enumerable))),
          s(:defs,
            s(:lvar, :a), :each,
            s(:args),
            s(:yield)),
          s(:send, nil, :assert,
            s(:send,
              s(:block,
                s(:send,
                  s(:const, nil, :Thread), :start),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Thread), :current), :add_trace_func,
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args), nil)),
                  s(:block,
                    s(:send,
                      s(:lvar, :a), :any?),
                    s(:args),
                    s(:true)))), :value),
            s(:lvar, :bug2722)))))))
