s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "timeout")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:class,
    s(:const, nil, :TestNotImplement),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_respond_to_fork,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_include,
            s(:send,
              s(:const, nil, :Process), :methods),
            s(:sym, :fork)),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "linux"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:const, nil, :Process), :respond_to?,
                s(:sym, :fork))), nil))),
      s(:def, :test_respond_to_lchmod,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_include,
            s(:send,
              s(:const, nil, :File), :methods),
            s(:sym, :lchmod)),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "linux"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:const, nil, :File), :respond_to?,
                s(:sym, :lchmod))), nil),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "freebsd"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:const, nil, :File), :respond_to?,
                s(:sym, :lchmod))), nil))),
      s(:if,
        s(:send,
          s(:const, nil, :Process), :respond_to?,
          s(:sym, :fork)),
        s(:def, :test_call_fork,
          s(:args),
          s(:ensure,
            s(:begin,
              s(:send,
                s(:const, nil, :GC), :start),
              s(:lvasgn, :pid,
                s(:nil)),
              s(:lvasgn, :ps,
                s(:case,
                  s(:const, nil, :RUBY_PLATFORM),
                  s(:when,
                    s(:regexp,
                      s(:str, "linux"),
                      s(:regopt)),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:xstr,
                        s(:str, "ps -eLf "),
                        s(:begin,
                          s(:lvar, :pid))))),
                  s(:when,
                    s(:regexp,
                      s(:str, "freebsd"),
                      s(:regopt)),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:xstr,
                        s(:str, "ps -lH "),
                        s(:begin,
                          s(:lvar, :pid))))),
                  s(:when,
                    s(:regexp,
                      s(:str, "darwin"),
                      s(:regopt)),
                    s(:block,
                      s(:send, nil, :proc),
                      s(:args),
                      s(:xstr,
                        s(:str, "ps -lM "),
                        s(:begin,
                          s(:lvar, :pid))))),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:xstr,
                      s(:str, "ps -l "),
                      s(:begin,
                        s(:lvar, :pid)))))),
              s(:block,
                s(:send, nil, :assert_nothing_raised,
                  s(:const,
                    s(:const, nil, :Timeout), :Error),
                  s(:lvar, :ps)),
                s(:args),
                s(:block,
                  s(:send,
                    s(:const, nil, :Timeout), :timeout,
                    s(:int, 5)),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :pid,
                      s(:block,
                        s(:send, nil, :fork),
                        s(:args), nil)),
                    s(:send,
                      s(:const, nil, :Process), :wait,
                      s(:lvar, :pid)),
                    s(:lvasgn, :pid,
                      s(:nil)))))),
            s(:if,
              s(:lvar, :pid),
              s(:begin,
                s(:send,
                  s(:const, nil, :Process), :kill,
                  s(:sym, :KILL),
                  s(:lvar, :pid)),
                s(:send,
                  s(:const, nil, :Process), :wait,
                  s(:lvar, :pid))), nil))), nil),
      s(:def, :test_call_lchmod,
        s(:args),
        s(:if,
          s(:send,
            s(:const, nil, :File), :respond_to?,
            s(:sym, :lchmod)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :mktmpdir),
            s(:args,
              s(:arg, :d)),
            s(:begin,
              s(:lvasgn, :f,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :d)),
                  s(:str, "/f"))),
              s(:lvasgn, :g,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :d)),
                  s(:str, "/g"))),
              s(:block,
                s(:send,
                  s(:const, nil, :File), :open,
                  s(:lvar, :f),
                  s(:str, "w")),
                s(:args), nil),
              s(:send,
                s(:const, nil, :File), :symlink,
                s(:lvar, :f),
                s(:lvar, :g)),
              s(:lvasgn, :newmode,
                s(:int, 292)),
              s(:send,
                s(:const, nil, :File), :lchmod,
                s(:lvar, :newmode),
                s(:dstr,
                  s(:begin,
                    s(:lvar, :d)),
                  s(:str, "/g"))),
              s(:lvasgn, :snew,
                s(:send,
                  s(:const, nil, :File), :lstat,
                  s(:lvar, :g))),
              s(:send, nil, :assert_equal,
                s(:lvar, :newmode),
                s(:send,
                  s(:send,
                    s(:lvar, :snew), :mode), :&,
                  s(:int, 511))))), nil)),
      s(:def, :test_method_inspect_fork,
        s(:args),
        s(:begin,
          s(:lvasgn, :m,
            s(:send,
              s(:const, nil, :Process), :method,
              s(:sym, :fork))),
          s(:if,
            s(:send,
              s(:const, nil, :Process), :respond_to?,
              s(:sym, :fork)),
            s(:send, nil, :assert_not_match,
              s(:regexp,
                s(:str, "not-implemented"),
                s(:regopt)),
              s(:send,
                s(:lvar, :m), :inspect)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "not-implemented"),
                s(:regopt)),
              s(:send,
                s(:lvar, :m), :inspect))))),
      s(:def, :test_method_inspect_lchmod,
        s(:args),
        s(:begin,
          s(:lvasgn, :m,
            s(:send,
              s(:const, nil, :File), :method,
              s(:sym, :lchmod))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :respond_to?,
              s(:sym, :lchmod)),
            s(:send, nil, :assert_not_match,
              s(:regexp,
                s(:str, "not-implemented"),
                s(:regopt)),
              s(:send,
                s(:lvar, :m), :inspect)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "not-implemented"),
                s(:regopt)),
              s(:send,
                s(:lvar, :m), :inspect))))))))
