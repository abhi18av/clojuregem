s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestKOI8),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :ASSERTS,
        s(:dstr,
          s(:str, "\n"),
          s(:str, "    (0xc0..0xdf).each do |c|\n"),
          s(:str, "      c1 = c.chr(\"ENCODING\")\n"),
          s(:str, "      c2 = (c + 0x20).chr(\"ENCODING\")\n"),
          s(:str, "      assert_match(/^(\#{ c1 })\\1$/i, c2 + c1)\n"),
          s(:str, "      assert_match(/^(\#{ c2 })\\1$/i, c1 + c2)\n"),
          s(:str, "      assert_match(/^[\#{ c1 }]+$/i, c2 + c1)\n"),
          s(:str, "      assert_match(/^[\#{ c2 }]+$/i, c1 + c2)\n"),
          s(:str, "    end\n"),
          s(:str, "  "))),
      s(:def, :test_koi8_r,
        s(:args),
        s(:send, nil, :eval,
          s(:send,
            s(:str, "# encoding: koi8-r\n"), :+,
            s(:send,
              s(:const, nil, :ASSERTS), :gsub,
              s(:str, "ENCODING"),
              s(:str, "koi8-r"))))),
      s(:def, :test_koi8_u,
        s(:args),
        s(:send, nil, :eval,
          s(:send,
            s(:str, "# encoding: koi8-u\n"), :+,
            s(:send,
              s(:const, nil, :ASSERTS), :gsub,
              s(:str, "ENCODING"),
              s(:str, "koi8-u"))))))))
