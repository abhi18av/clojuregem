s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:class,
    s(:const, nil, :TestWhileuntil),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_while,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Dir), :mktmpdir,
            s(:str, "ruby_while_tmp")),
          s(:args,
            s(:arg, :tmpdir)),
          s(:begin,
            s(:lvasgn, :tmpfilename,
              s(:dstr,
                s(:begin,
                  s(:lvar, :tmpdir)),
                s(:str, "/ruby_while_tmp."),
                s(:begin,
                  s(:gvar, :$$)))),
            s(:lvasgn, :tmp,
              s(:send, nil, :open,
                s(:lvar, :tmpfilename),
                s(:str, "w"))),
            s(:send,
              s(:lvar, :tmp), :print,
              s(:str, "tvi925\n")),
            s(:send,
              s(:lvar, :tmp), :print,
              s(:str, "tvi920\n")),
            s(:send,
              s(:lvar, :tmp), :print,
              s(:str, "vt100\n")),
            s(:send,
              s(:lvar, :tmp), :print,
              s(:str, "Amiga\n")),
            s(:send,
              s(:lvar, :tmp), :print,
              s(:str, "paper\n")),
            s(:send,
              s(:lvar, :tmp), :close),
            s(:lvasgn, :tmp,
              s(:send, nil, :open,
                s(:lvar, :tmpfilename),
                s(:str, "r"))),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :File),
              s(:lvar, :tmp)),
            s(:while,
              s(:lvasgn, :line,
                s(:send,
                  s(:lvar, :tmp), :gets)),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "vt100"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:break), nil)),
            s(:send, nil, :assert_not_predicate,
              s(:lvar, :tmp),
              s(:sym, :eof?)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "vt100"),
                s(:regopt)),
              s(:lvar, :line)),
            s(:send,
              s(:lvar, :tmp), :close),
            s(:lvasgn, :tmp,
              s(:send, nil, :open,
                s(:lvar, :tmpfilename),
                s(:str, "r"))),
            s(:while,
              s(:lvasgn, :line,
                s(:send,
                  s(:lvar, :tmp), :gets)),
              s(:begin,
                s(:if,
                  s(:match_with_lvasgn,
                    s(:regexp,
                      s(:str, "vt100"),
                      s(:regopt)),
                    s(:lvar, :line)),
                  s(:next), nil),
                s(:send, nil, :assert_no_match,
                  s(:regexp,
                    s(:str, "vt100"),
                    s(:regopt)),
                  s(:lvar, :line)))),
            s(:send, nil, :assert_predicate,
              s(:lvar, :tmp),
              s(:sym, :eof?)),
            s(:send, nil, :assert_no_match,
              s(:regexp,
                s(:str, "vt100"),
                s(:regopt)),
              s(:lvar, :line)),
            s(:send,
              s(:lvar, :tmp), :close),
            s(:lvasgn, :tmp,
              s(:send, nil, :open,
                s(:lvar, :tmpfilename),
                s(:str, "r"))),
            s(:while,
              s(:lvasgn, :line,
                s(:send,
                  s(:lvar, :tmp), :gets)),
              s(:begin,
                s(:lvasgn, :lastline,
                  s(:lvar, :line)),
                s(:lvasgn, :line,
                  s(:send,
                    s(:lvar, :line), :gsub,
                    s(:regexp,
                      s(:str, "vt100"),
                      s(:regopt)),
                    s(:str, "VT100"))),
                s(:if,
                  s(:send,
                    s(:lvar, :lastline), :!=,
                    s(:lvar, :line)),
                  s(:begin,
                    s(:send,
                      s(:lvar, :line), :gsub!,
                      s(:str, "VT100"),
                      s(:str, "Vt100")),
                    s(:redo)), nil),
                s(:send, nil, :assert_no_match,
                  s(:regexp,
                    s(:str, "vt100"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:send, nil, :assert_no_match,
                  s(:regexp,
                    s(:str, "VT100"),
                    s(:regopt)),
                  s(:lvar, :line)))),
            s(:send, nil, :assert_predicate,
              s(:lvar, :tmp),
              s(:sym, :eof?)),
            s(:send,
              s(:lvar, :tmp), :close),
            s(:lvasgn, :sum,
              s(:int, 0)),
            s(:for,
              s(:lvasgn, :i),
              s(:irange,
                s(:int, 1),
                s(:int, 10)),
              s(:begin,
                s(:op_asgn,
                  s(:lvasgn, :sum), :+,
                  s(:lvar, :i)),
                s(:op_asgn,
                  s(:lvasgn, :i), :-,
                  s(:int, 1)),
                s(:if,
                  s(:send,
                    s(:lvar, :i), :>,
                    s(:int, 0)),
                  s(:redo), nil))),
            s(:send, nil, :assert_equal,
              s(:int, 220),
              s(:lvar, :sum)),
            s(:lvasgn, :tmp,
              s(:send, nil, :open,
                s(:lvar, :tmpfilename),
                s(:str, "r"))),
            s(:while,
              s(:lvasgn, :line,
                s(:send,
                  s(:lvar, :tmp), :gets)),
              s(:begin,
                s(:if,
                  s(:int, 3),
                  s(:break), nil),
                s(:send, nil, :assert_no_match,
                  s(:regexp,
                    s(:str, "vt100"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:send, nil, :assert_no_match,
                  s(:regexp,
                    s(:str, "Amiga"),
                    s(:regopt)),
                  s(:lvar, :line)),
                s(:send, nil, :assert_no_match,
                  s(:regexp,
                    s(:str, "paper"),
                    s(:regopt)),
                  s(:lvar, :line)))),
            s(:send,
              s(:lvar, :tmp), :close),
            s(:or,
              s(:send,
                s(:const, nil, :File), :unlink,
                s(:lvar, :tmpfilename)),
              s(:xstr,
                s(:str, "/bin/rm -f \""),
                s(:begin,
                  s(:lvar, :tmpfilename)),
                s(:str, "\""))),
            s(:send,
              s(:send, nil, :assert_file), :not_exist?,
              s(:lvar, :tmpfilename))))),
      s(:def, :test_until,
        s(:args),
        s(:begin,
          s(:lvasgn, :i,
            s(:int, 0)),
          s(:until,
            s(:send,
              s(:lvar, :i), :>,
              s(:int, 4)),
            s(:op_asgn,
              s(:lvasgn, :i), :+,
              s(:int, 1))),
          s(:send, nil, :assert_operator,
            s(:lvar, :i),
            s(:sym, :>),
            s(:int, 4)))))))
