s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestFlip),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_hidden_key,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug6899,
            s(:str, "[ruby-core:47253]")),
          s(:lvasgn, :foo,
            s(:str, "foor")),
          s(:lvasgn, :bar,
            s(:str, "bar")),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :NotImplementedError),
              s(:lvar, :bug6899)),
            s(:args),
            s(:block,
              s(:send,
                s(:int, 2000), :times),
              s(:args),
              s(:send, nil, :eval,
                s(:str, "(foo..bar) ? 1 : 2")))))),
      s(:def, :test_shared_eval,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug7671,
            s(:str, "[ruby-core:51296]")),
          s(:lvasgn, :vs,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 9))), :to_a)),
          s(:block,
            s(:send,
              s(:lvar, :vs), :select),
            s(:args,
              s(:arg, :n)),
            s(:if,
              s(:iflipflop,
                s(:send,
                  s(:lvar, :n), :==,
                  s(:int, 2)),
                s(:send,
                  s(:lvar, :n), :==,
                  s(:int, 16))),
              s(:int, 1), nil)),
          s(:lvasgn, :v,
            s(:send, nil, :eval,
              s(:str, "vs.select {|n| if n==3..n==6 then 1 end}"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:splat,
                s(:irange,
                  s(:int, 3),
                  s(:int, 6)))),
            s(:lvar, :v),
            s(:lvar, :bug7671)))),
      s(:def, :test_shared_thread,
        s(:args),
        s(:begin,
          s(:lvasgn, :ff,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :n)),
              s(:if,
                s(:iflipflop,
                  s(:send,
                    s(:lvar, :n), :==,
                    s(:int, 3)),
                  s(:send,
                    s(:lvar, :n), :==,
                    s(:int, 5))),
                s(:true), nil))),
          s(:lvasgn, :v,
            s(:irange,
              s(:int, 1),
              s(:int, 9))),
          s(:lvasgn, :a,
            s(:true)),
          s(:lvasgn, :th,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :v), :select),
                s(:args,
                  s(:arg, :i)),
                s(:begin,
                  s(:while,
                    s(:lvar, :a),
                    s(:send,
                      s(:const, nil, :Thread), :pass)),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :ff), :[],
                        s(:lvar, :i)), :tap),
                    s(:args),
                    s(:lvasgn, :a,
                      s(:true))))))),
          s(:lvasgn, :v1,
            s(:block,
              s(:send,
                s(:lvar, :v), :select),
              s(:args,
                s(:arg, :i)),
              s(:begin,
                s(:until,
                  s(:lvar, :a),
                  s(:send,
                    s(:const, nil, :Thread), :pass)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :ff), :[],
                      s(:lvar, :i)), :tap),
                  s(:args),
                  s(:lvasgn, :a,
                    s(:false)))))),
          s(:lvasgn, :v2,
            s(:send,
              s(:lvar, :th), :value)),
          s(:lvasgn, :expected,
            s(:array,
              s(:int, 3),
              s(:int, 4),
              s(:int, 5))),
          s(:lvasgn, :mesg,
            s(:str, "flip-flop should be separated per threads")),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :v1),
            s(:lvar, :mesg)),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :v2),
            s(:lvar, :mesg)))))))
