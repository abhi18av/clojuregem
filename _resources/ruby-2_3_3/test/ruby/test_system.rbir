s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:class,
    s(:const, nil, :TestSystem),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_system,
        s(:args),
        s(:begin,
          s(:lvasgn, :ruby,
            s(:send,
              s(:const, nil, :EnvUtil), :rubybin)),
          s(:send, nil, :assert_equal,
            s(:str, "foobar\n"),
            s(:xstr,
              s(:str, "echo foobar"))),
          s(:send, nil, :assert_equal,
            s(:str, "foobar"),
            s(:xstr,
              s(:begin,
                s(:lvar, :ruby)),
              s(:str, " -e 'print \"foobar\"'"))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :mktmpdir,
              s(:str, "ruby_script_tmp")),
            s(:args,
              s(:arg, :tmpdir)),
            s(:begin,
              s(:lvasgn, :tmpfilename,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :tmpdir)),
                  s(:str, "/ruby_script_tmp."),
                  s(:begin,
                    s(:gvar, :$$)))),
              s(:lvasgn, :tmp,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "w"))),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "print $zzz\n")),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:send, nil, :assert_equal,
                s(:str, "true"),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " -s "),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, " -zzz"))),
              s(:send, nil, :assert_equal,
                s(:str, "555"),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " -s "),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, " -zzz=555"))),
              s(:lvasgn, :tmp,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "w"))),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "#! /usr/local/bin/ruby -s\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "print $zzz\n")),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:send, nil, :assert_equal,
                s(:str, "678"),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " "),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, " -zzz=678"))),
              s(:lvasgn, :tmp,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "w"))),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "this is a leading junk\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "#! /usr/local/bin/ruby -s\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "print $zzz if defined? $zzz\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "__END__\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "this is a trailing junk\n")),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:send, nil, :assert_equal,
                s(:str, ""),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " -x "),
                  s(:begin,
                    s(:lvar, :tmpfilename)))),
              s(:send, nil, :assert_equal,
                s(:str, "555"),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " -x "),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, " -zzz=555"))),
              s(:lvasgn, :tmp,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "w"))),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "#! /non/exist\\interpreter?/./to|be:ignored\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "this is a leading junk\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "#! /usr/local/bin/ruby -s\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "print $zzz if defined? $zzz\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "__END__\n")),
              s(:send,
                s(:lvar, :tmp), :print,
                s(:str, "this is a trailing junk\n")),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:send, nil, :assert_equal,
                s(:str, ""),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " "),
                  s(:begin,
                    s(:lvar, :tmpfilename)))),
              s(:send, nil, :assert_equal,
                s(:str, "555"),
                s(:xstr,
                  s(:begin,
                    s(:lvar, :ruby)),
                  s(:str, " "),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, " -zzz=555"))),
              s(:lvasgn, :tmp,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "w"))),
              s(:for,
                s(:lvasgn, :i),
                s(:irange,
                  s(:int, 1),
                  s(:int, 5)),
                s(:send,
                  s(:lvar, :tmp), :print,
                  s(:lvar, :i),
                  s(:str, "\n"))),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:xstr,
                s(:begin,
                  s(:lvar, :ruby)),
                s(:str, " -i.bak -pe '$_.sub!(/^[0-9]+$/){$&.to_i * 5}' "),
                s(:begin,
                  s(:lvar, :tmpfilename))),
              s(:lvasgn, :tmp,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "r"))),
              s(:while,
                s(:send,
                  s(:lvar, :tmp), :gets),
                s(:send, nil, :assert_equal,
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:gvar, :$_), :to_i), :%,
                    s(:int, 5)))),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:or,
                s(:send,
                  s(:const, nil, :File), :unlink,
                  s(:lvar, :tmpfilename)),
                s(:xstr,
                  s(:str, "/bin/rm -f \""),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, "\""))),
              s(:or,
                s(:send,
                  s(:const, nil, :File), :unlink,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :tmpfilename)),
                    s(:str, ".bak"))),
                s(:xstr,
                  s(:str, "/bin/rm -f \""),
                  s(:begin,
                    s(:lvar, :tmpfilename)),
                  s(:str, ".bak\""))),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "mswin|mingw"),
                    s(:regopt)),
                  s(:const, nil, :RUBY_PLATFORM)),
                s(:begin,
                  s(:lvasgn, :testname,
                    s(:str, "[ruby-dev:38588]")),
                  s(:lvasgn, :batch,
                    s(:dstr,
                      s(:str, "batch_tmp."),
                      s(:begin,
                        s(:gvar, :$$)))),
                  s(:lvasgn, :tmpfilename,
                    s(:dstr,
                      s(:begin,
                        s(:lvar, :tmpdir)),
                      s(:str, "/"),
                      s(:begin,
                        s(:lvar, :batch)),
                      s(:str, ".bat"))),
                  s(:block,
                    s(:send, nil, :open,
                      s(:lvar, :tmpfilename),
                      s(:str, "wb")),
                    s(:args,
                      s(:arg, :f)),
                    s(:send,
                      s(:lvar, :f), :print,
                      s(:str, "\r\n"))),
                  s(:send, nil, :assert,
                    s(:send, nil, :system,
                      s(:lvar, :tmpfilename)),
                    s(:lvar, :testname)),
                  s(:send, nil, :assert,
                    s(:send, nil, :system,
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :tmpdir)),
                        s(:str, "/"),
                        s(:begin,
                          s(:lvar, :batch)))),
                    s(:lvar, :testname)),
                  s(:send, nil, :assert,
                    s(:send, nil, :system,
                      s(:lvar, :tmpfilename),
                      s(:str, "1")),
                    s(:lvar, :testname)),
                  s(:send, nil, :assert,
                    s(:send, nil, :system,
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :tmpdir)),
                        s(:str, "/"),
                        s(:begin,
                          s(:lvar, :batch))),
                      s(:str, "1")),
                    s(:lvar, :testname)),
                  s(:kwbegin,
                    s(:ensure,
                      s(:begin,
                        s(:lvasgn, :path,
                          s(:send,
                            s(:const, nil, :ENV), :[],
                            s(:str, "PATH"))),
                        s(:send,
                          s(:const, nil, :ENV), :[]=,
                          s(:str, "PATH"),
                          s(:dstr,
                            s(:begin,
                              s(:send,
                                s(:lvar, :tmpdir), :tr,
                                s(:const,
                                  s(:const, nil, :File), :SEPARATOR),
                                s(:const,
                                  s(:const, nil, :File), :ALT_SEPARATOR))),
                            s(:begin,
                              s(:if,
                                s(:lvar, :path),
                                s(:send,
                                  s(:const,
                                    s(:const, nil, :File), :PATH_SEPARATOR), :+,
                                  s(:lvar, :path)), nil)))),
                        s(:send, nil, :assert,
                          s(:send, nil, :system,
                            s(:dstr,
                              s(:begin,
                                s(:lvar, :batch)),
                              s(:str, ".bat"))),
                          s(:lvar, :testname)),
                        s(:send, nil, :assert,
                          s(:send, nil, :system,
                            s(:lvar, :batch)),
                          s(:lvar, :testname)),
                        s(:send, nil, :assert,
                          s(:send, nil, :system,
                            s(:dstr,
                              s(:begin,
                                s(:lvar, :batch)),
                              s(:str, ".bat")),
                            s(:str, "1")),
                          s(:lvar, :testname)),
                        s(:send, nil, :assert,
                          s(:send, nil, :system,
                            s(:lvar, :batch),
                            s(:str, "1")),
                          s(:lvar, :testname))),
                      s(:send,
                        s(:const, nil, :ENV), :[]=,
                        s(:str, "PATH"),
                        s(:lvar, :path)))),
                  s(:send,
                    s(:const, nil, :File), :unlink,
                    s(:lvar, :tmpfilename)),
                  s(:lvasgn, :testname,
                    s(:str, "[ruby-core:44505]")),
                  s(:send, nil, :assert_match,
                    s(:regexp,
                      s(:str, "Windows"),
                      s(:regopt)),
                    s(:xstr,
                      s(:str, "ver")),
                    s(:lvar, :testname)),
                  s(:send, nil, :assert_equal,
                    s(:int, 0),
                    s(:send,
                      s(:gvar, :$?), :to_i),
                    s(:lvar, :testname))), nil))))),
      s(:def, :test_system_at,
        s(:args),
        s(:if,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "mswin|mingw"),
              s(:regopt)),
            s(:const, nil, :RUBY_PLATFORM)),
          s(:begin,
            s(:lvasgn, :bug4393,
              s(:str, "[ruby-core:35218]")),
            s(:send, nil, :assert_equal,
              s(:str, "foo\n"),
              s(:xstr,
                s(:str, "@echo foo")),
              s(:lvar, :bug4393)),
            s(:send, nil, :assert_equal,
              s(:str, "foo\n"),
              s(:xstr,
                s(:str, "@@echo foo")),
              s(:lvar, :bug4393)),
            s(:send, nil, :assert_equal,
              s(:str, "@@foo\n"),
              s(:xstr,
                s(:str, "@@echo @@foo")),
              s(:lvar, :bug4393)),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :mktmpdir,
                s(:str, "ruby_script_tmp")),
              s(:args,
                s(:arg, :tmpdir)),
              s(:begin,
                s(:lvasgn, :tmpfilename,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :tmpdir)),
                    s(:str, "/ruby_script_tmp."),
                    s(:begin,
                      s(:gvar, :$$)))),
                s(:lvasgn, :tmp,
                  s(:send, nil, :open,
                    s(:lvar, :tmpfilename),
                    s(:str, "w"))),
                s(:send,
                  s(:lvar, :tmp), :print,
                  s(:str, "foo\nbar\nbaz\n@foo")),
                s(:send,
                  s(:lvar, :tmp), :close),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\Abar\\nbaz\\n?\\z"),
                    s(:regopt)),
                  s(:xstr,
                    s(:str, "@@findstr \"ba\" "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :tmpfilename), :gsub,
                        s(:str, "/"),
                        s(:str, "\\")))),
                  s(:lvar, :bug4393))))), nil)),
      s(:def, :test_system_redirect_win,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:regexp,
                s(:str, "mswin|mingw"),
                s(:regopt)), :!~,
              s(:const, nil, :RUBY_PLATFORM)),
            s(:return), nil),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :mktmpdir,
              s(:str, "ruby_script_tmp")),
            s(:args,
              s(:arg, :tmpdir)),
            s(:begin,
              s(:lvasgn, :cmd,
                s(:nil)),
              s(:lvasgn, :message,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args),
                  s(:send,
                    s(:array,
                      s(:str, "[ruby-talk:258939]"),
                      s(:str, "out.txt:"),
                      s(:splat,
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:const, nil, :File), :readlines,
                              s(:str, "out.txt")), :map),
                          s(:args,
                            s(:arg, :s)),
                          s(:send,
                            s(:str, "  "), :+,
                            s(:send,
                              s(:lvar, :s), :inspect)))),
                      s(:str, "err.txt:"),
                      s(:splat,
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:const, nil, :File), :readlines,
                              s(:str, "err.txt")), :map),
                          s(:args,
                            s(:arg, :s)),
                          s(:send,
                            s(:str, "  "), :+,
                            s(:send,
                              s(:lvar, :s), :inspect)))),
                      s(:dstr,
                        s(:str, "system("),
                        s(:begin,
                          s(:send,
                            s(:lvar, :cmd), :inspect)),
                        s(:str, ")"))), :join,
                    s(:str, "\n")))),
              s(:sclass,
                s(:lvar, :message),
                s(:alias,
                  s(:sym, :to_s),
                  s(:sym, :call))),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:lvar, :tmpdir)),
                s(:args),
                s(:begin,
                  s(:block,
                    s(:send, nil, :open,
                      s(:str, "input.txt"),
                      s(:str, "w")),
                    s(:args,
                      s(:arg, :f)),
                    s(:send,
                      s(:lvar, :f), :puts,
                      s(:str, "BFI3CHL671"))),
                  s(:lvasgn, :cmd,
                    s(:str, "%WINDIR%/system32/find.exe \"BFI3CHL671\" input.txt > out.txt 2>err.txt")),
                  s(:send, nil, :assert_equal,
                    s(:true),
                    s(:send, nil, :system,
                      s(:lvar, :cmd)),
                    s(:lvar, :message)),
                  s(:lvasgn, :cmd,
                    s(:str, "\"%WINDIR%/system32/find.exe\" \"BFI3CHL671\" input.txt > out.txt 2>err.txt")),
                  s(:send, nil, :assert_equal,
                    s(:true),
                    s(:send, nil, :system,
                      s(:lvar, :cmd)),
                    s(:lvar, :message)),
                  s(:lvasgn, :cmd,
                    s(:str, "\"%WINDIR%/system32/find.exe BFI3CHL671\" input.txt > out.txt 2>err.txt")),
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send, nil, :system,
                      s(:lvar, :cmd)),
                    s(:lvar, :message)))))))),
      s(:def, :test_empty_evstr,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, ""),
          s(:send, nil, :eval,
            s(:str, "\"\#{}\""),
            s(:nil),
            s(:str, "(string)"),
            s(:int, 150)),
          s(:str, "[ruby-dev:25113]"))),
      s(:if,
        s(:send,
          s(:const, nil, :File), :executable?,
          s(:str, "/bin/sh")),
        s(:def, :test_fallback_to_sh,
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :mktmpdir,
              s(:str, "ruby_script_tmp")),
            s(:args,
              s(:arg, :tmpdir)),
            s(:begin,
              s(:lvasgn, :tmpfilename,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :tmpdir)),
                  s(:str, "/ruby_script_tmp."),
                  s(:begin,
                    s(:gvar, :$$)))),
              s(:block,
                s(:send, nil, :open,
                  s(:lvar, :tmpfilename),
                  s(:str, "w")),
                s(:args,
                  s(:arg, :f)),
                s(:begin,
                  s(:send,
                    s(:lvar, :f), :puts,
                    s(:str, ": ;")),
                  s(:send,
                    s(:lvar, :f), :chmod,
                    s(:int, 493)))),
              s(:send, nil, :assert_equal,
                s(:true),
                s(:send, nil, :system,
                  s(:lvar, :tmpfilename)),
                s(:str, "[ruby-core:32745]"))))), nil))))
