s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestInteger),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :BDSIZE,
        s(:send,
          s(:send,
            s(:send,
              s(:int, 4611686018427387904), :coerce,
              s(:int, 0)), :[],
            s(:int, 0)), :size)),
      s(:defs,
        s(:self), :bdsize,
        s(:args,
          s(:arg, :x)),
        s(:send,
          s(:send,
            s(:begin,
              s(:send,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :x), :+,
                      s(:int, 1))), :/,
                  s(:int, 8)), :+,
                s(:const, nil, :BDSIZE))), :/,
            s(:const, nil, :BDSIZE)), :*,
          s(:const, nil, :BDSIZE))),
      s(:def, :bdsize,
        s(:args,
          s(:arg, :x)),
        s(:send,
          s(:send,
            s(:self), :class), :bdsize,
          s(:lvar, :x))),
      s(:def, :test_aref,
        s(:args),
        s(:begin,
          s(:lvasgn, :big_zero,
            s(:send,
              s(:send,
                s(:int, 1073741824), :coerce,
                s(:int, 0)), :[],
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:begin,
                s(:int, -1073741826)), :[],
              s(:lvar, :big_zero)),
            s(:str, "[ruby-dev:31271]")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 17179869185), :[],
              s(:lvar, :big_zero)),
            s(:str, "[ruby-dev:31271]")))),
      s(:def, :test_pow,
        s(:args),
        s(:send, nil, :assert_not_equal,
          s(:int, 0),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:int, 0), :**,
                s(:int, -1)),
              s(:resbody, nil, nil,
                s(:nil)), nil)),
          s(:str, "[ruby-dev:32084] [ruby-dev:34547]"))),
      s(:def, :test_lshift,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 1), :<<,
              s(:int, -1073741824))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 1), :<<,
              s(:int, -1073741825))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 1), :<<,
              s(:int, -2147483648))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 1), :<<,
              s(:int, -2147483649))))),
      s(:def, :test_rshift,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_predicate,
            s(:begin,
              s(:send,
                s(:int, 1), :>>,
                s(:int, 2147483648))),
            s(:sym, :zero?)),
          s(:send, nil, :assert_predicate,
            s(:begin,
              s(:send,
                s(:int, 1), :>>,
                s(:int, 4294967295))),
            s(:sym, :zero?)),
          s(:send, nil, :assert_predicate,
            s(:begin,
              s(:send,
                s(:int, 1), :>>,
                s(:int, 4294967296))),
            s(:sym, :zero?)))),
      s(:def, :test_Integer,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0x-1"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "-0x-1"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0x     123"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0x      123"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0x0x5"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0x0x000000005"))),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:int, 1540841),
              s(:send,
                s(:str, "0x0x5"), :to_i,
                s(:int, 36)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "--0"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "-+0"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "++1"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, ""))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "10  x"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "1__2"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "1z"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "46116860184273__87904"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "4611686018427387904_"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "4611686018427387904  :"))),
          s(:send, nil, :assert_equal,
            s(:int, 4611686018427387904),
            s(:send, nil, :Integer,
              s(:str, "46_11_686_0184273_87904"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "\u0000"))),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :ArgumentError),
              s(:str, "[ruby-core:13873]")),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send, nil, :Integer,
                s(:str, "0 ")))),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :ArgumentError),
              s(:str, "[ruby-core:14139]")),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:int, 255),
              s(:send, nil, :Integer,
                s(:str, "0_3_7_7")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError),
              s(:str, "[ruby-core:14139]")),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0__3_7_7"))),
          s(:send, nil, :assert_equal,
            s(:int, 1234),
            s(:send, nil, :Integer,
              s(:int, 1234))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :Integer,
              s(:float, 1.234))),
          s(:send, nil, :assert_equal,
            s(:int, 1234),
            s(:send, nil, :Integer,
              s(:str, "1234"),
              s(:int, 10))),
          s(:send, nil, :assert_equal,
            s(:int, 668),
            s(:send, nil, :Integer,
              s(:str, "1234"),
              s(:int, 8))),
          s(:send, nil, :assert_equal,
            s(:int, 4660),
            s(:send, nil, :Integer,
              s(:str, "1234"),
              s(:int, 16))),
          s(:send, nil, :assert_equal,
            s(:int, 49360),
            s(:send, nil, :Integer,
              s(:str, "1234"),
              s(:int, 36))),
          s(:send, nil, :assert_equal,
            s(:int, 1234),
            s(:send, nil, :Integer,
              s(:str, "01234"),
              s(:int, 10))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:str, "0x123"),
              s(:int, 10))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:int, 1234),
              s(:int, 10))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:float, 12.34),
              s(:int, 10))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:send,
                s(:const, nil, :Object), :new),
              s(:int, 1))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:int, 1),
              s(:int, 1),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:int, 2), :**,
              s(:int, 50)),
            s(:send, nil, :Integer,
              s(:send,
                s(:float, 2.0), :**,
                s(:int, 50)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :TypeError)),
            s(:args),
            s(:send, nil, :Integer,
              s(:nil))),
          s(:lvasgn, :bug6192,
            s(:str, "[ruby-core:43566]")),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:lvar, :bug6192)),
            s(:args),
            s(:send, nil, :Integer,
              s(:send,
                s(:str, "0"), :encode,
                s(:str, "utf-16be")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:lvar, :bug6192)),
            s(:args),
            s(:send, nil, :Integer,
              s(:send,
                s(:str, "0"), :encode,
                s(:str, "utf-16le")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:lvar, :bug6192)),
            s(:args),
            s(:send, nil, :Integer,
              s(:send,
                s(:str, "0"), :encode,
                s(:str, "utf-32be")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:lvar, :bug6192)),
            s(:args),
            s(:send, nil, :Integer,
              s(:send,
                s(:str, "0"), :encode,
                s(:str, "utf-32le")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Encoding), :CompatibilityError),
              s(:lvar, :bug6192)),
            s(:args),
            s(:send, nil, :Integer,
              s(:send,
                s(:str, "0"), :encode,
                s(:str, "iso-2022-jp")))))),
      s(:def, :test_int_p,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_not_predicate,
            s(:float, 1.0),
            s(:sym, :integer?)),
          s(:send, nil, :assert_predicate,
            s(:int, 1),
            s(:sym, :integer?)))),
      s(:def, :test_odd_p_even_p,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :Fixnum), :class_eval),
              s(:args),
              s(:begin,
                s(:alias,
                  s(:sym, :odd_bak),
                  s(:sym, :odd?)),
                s(:alias,
                  s(:sym, :even_bak),
                  s(:sym, :even?)),
                s(:send, nil, :remove_method,
                  s(:sym, :odd?),
                  s(:sym, :even?)))),
            s(:send, nil, :assert_predicate,
              s(:int, 1),
              s(:sym, :odd?)),
            s(:send, nil, :assert_not_predicate,
              s(:int, 2),
              s(:sym, :odd?)),
            s(:send, nil, :assert_not_predicate,
              s(:int, 1),
              s(:sym, :even?)),
            s(:send, nil, :assert_predicate,
              s(:int, 2),
              s(:sym, :even?))),
          s(:block,
            s(:send,
              s(:const, nil, :Fixnum), :class_eval),
            s(:args),
            s(:begin,
              s(:alias,
                s(:sym, :odd?),
                s(:sym, :odd_bak)),
              s(:alias,
                s(:sym, :even?),
                s(:sym, :even_bak)),
              s(:send, nil, :remove_method,
                s(:sym, :odd_bak),
                s(:sym, :even_bak)))))),
      s(:def, :test_succ,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:int, 2),
              s(:send,
                s(:int, 1), :send,
                s(:sym, :succ))),
            s(:block,
              s(:send,
                s(:const, nil, :Fixnum), :class_eval),
              s(:args),
              s(:begin,
                s(:alias,
                  s(:sym, :succ_bak),
                  s(:sym, :succ)),
                s(:send, nil, :remove_method,
                  s(:sym, :succ)))),
            s(:send, nil, :assert_equal,
              s(:int, 2),
              s(:send,
                s(:int, 1), :succ)),
            s(:send, nil, :assert_equal,
              s(:int, 4294967297),
              s(:send,
                s(:int, 4294967296), :succ))),
          s(:block,
            s(:send,
              s(:const, nil, :Fixnum), :class_eval),
            s(:args),
            s(:begin,
              s(:alias,
                s(:sym, :succ),
                s(:sym, :succ_bak)),
              s(:send, nil, :remove_method,
                s(:sym, :succ_bak)))))),
      s(:def, :test_chr,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:send,
                s(:str, "a"), :ord), :chr)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RangeError)),
            s(:args),
            s(:send,
              s(:begin,
                s(:int, -1)), :chr)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RangeError)),
            s(:args),
            s(:send,
              s(:int, 256), :chr)))),
      s(:def, :test_upto,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 1), :upto,
              s(:int, 3)),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :x))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3)),
            s(:lvar, :a)),
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 1), :upto,
              s(:int, 0)),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :x))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :a)),
          s(:lvasgn, :y,
            s(:send,
              s(:send,
                s(:int, 2), :**,
                s(:int, 30)), :-,
              s(:int, 1))),
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :y), :upto,
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 2))),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :x))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 1)),
              s(:send,
                s(:lvar, :y), :+,
                s(:int, 2))),
            s(:lvar, :a)))),
      s(:def, :test_downto,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, -1), :downto,
              s(:int, -3)),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :x))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, -1),
              s(:int, -2),
              s(:int, -3)),
            s(:lvar, :a)),
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:int, 1), :downto,
              s(:int, 2)),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :x))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :a)),
          s(:lvasgn, :y,
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 30))), :-@)),
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:lvar, :y), :downto,
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 2))),
            s(:args,
              s(:arg, :x)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :x))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 1)),
              s(:send,
                s(:lvar, :y), :-,
                s(:int, 2))),
            s(:lvar, :a)))),
      s(:def, :test_times,
        s(:args),
        s(:block,
          s(:send,
            s(:begin,
              s(:send,
                s(:int, 2), :**,
                s(:int, 32))), :times),
          s(:args,
            s(:arg, :i)),
          s(:if,
            s(:send,
              s(:lvar, :i), :==,
              s(:int, 2)),
            s(:break), nil))),
      s(:def, :test_round,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 11111),
            s(:send,
              s(:int, 11111), :round)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Fixnum),
            s(:send,
              s(:send,
                s(:int, 11111), :round), :class)),
          s(:send, nil, :assert_equal,
            s(:int, 11111),
            s(:send,
              s(:int, 11111), :round,
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Fixnum),
            s(:send,
              s(:send,
                s(:int, 11111), :round,
                s(:int, 0)), :class)),
          s(:send, nil, :assert_equal,
            s(:float, 11111.0),
            s(:send,
              s(:int, 11111), :round,
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Float),
            s(:send,
              s(:send,
                s(:int, 11111), :round,
                s(:int, 1)), :class)),
          s(:send, nil, :assert_equal,
            s(:float, 11111.0),
            s(:send,
              s(:int, 11111), :round,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Float),
            s(:send,
              s(:send,
                s(:int, 11111), :round,
                s(:int, 2)), :class)),
          s(:send, nil, :assert_equal,
            s(:int, 11110),
            s(:send,
              s(:int, 11111), :round,
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Fixnum),
            s(:send,
              s(:send,
                s(:int, 11111), :round,
                s(:int, -1)), :class)),
          s(:send, nil, :assert_equal,
            s(:int, 11100),
            s(:send,
              s(:int, 11111), :round,
              s(:int, -2))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Fixnum),
            s(:send,
              s(:send,
                s(:int, 11111), :round,
                s(:int, -2)), :class)),
          s(:send, nil, :assert_equal,
            s(:int, 11111111111111111111111111111110),
            s(:send,
              s(:int, 11111111111111111111111111111111), :round,
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Bignum),
            s(:send,
              s(:send,
                s(:int, 11111111111111111111111111111111), :round,
                s(:int, -1)), :class)),
          s(:send, nil, :assert_equal,
            s(:int, -11111111111111111111111111111110),
            s(:send,
              s(:begin,
                s(:int, -11111111111111111111111111111111)), :round,
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Bignum),
            s(:send,
              s(:send,
                s(:begin,
                  s(:int, -11111111111111111111111111111111)), :round,
                s(:int, -1)), :class)))),
      s(:def, :test_bitwise_and_with_integer_mimic_object,
        s(:args),
        s(:begin,
          s(:defs,
            s(:lvasgn, :obj,
              s(:send,
                s(:const, nil, :Object), :new)), :to_int,
            s(:args),
            s(:int, 10)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :TypeError),
              s(:str, "[ruby-core:39491]")),
            s(:args),
            s(:send,
              s(:int, 3), :&,
              s(:lvar, :obj))),
          s(:defs,
            s(:lvar, :obj), :coerce,
            s(:args,
              s(:arg, :other)),
            s(:array,
              s(:lvar, :other),
              s(:int, 10))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:int, 3), :&,
              s(:int, 10)),
            s(:send,
              s(:int, 3), :&,
              s(:lvar, :obj))))),
      s(:def, :test_bitwise_or_with_integer_mimic_object,
        s(:args),
        s(:begin,
          s(:defs,
            s(:lvasgn, :obj,
              s(:send,
                s(:const, nil, :Object), :new)), :to_int,
            s(:args),
            s(:int, 10)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :TypeError),
              s(:str, "[ruby-core:39491]")),
            s(:args),
            s(:send,
              s(:int, 3), :|,
              s(:lvar, :obj))),
          s(:defs,
            s(:lvar, :obj), :coerce,
            s(:args,
              s(:arg, :other)),
            s(:array,
              s(:lvar, :other),
              s(:int, 10))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:int, 3), :|,
              s(:int, 10)),
            s(:send,
              s(:int, 3), :|,
              s(:lvar, :obj))))),
      s(:def, :test_bitwise_xor_with_integer_mimic_object,
        s(:args),
        s(:begin,
          s(:defs,
            s(:lvasgn, :obj,
              s(:send,
                s(:const, nil, :Object), :new)), :to_int,
            s(:args),
            s(:int, 10)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :TypeError),
              s(:str, "[ruby-core:39491]")),
            s(:args),
            s(:send,
              s(:int, 3), :^,
              s(:lvar, :obj))),
          s(:defs,
            s(:lvar, :obj), :coerce,
            s(:args,
              s(:arg, :other)),
            s(:array,
              s(:lvar, :other),
              s(:int, 10))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:int, 3), :^,
              s(:int, 10)),
            s(:send,
              s(:int, 3), :^,
              s(:lvar, :obj))))),
      s(:def, :test_bit_length,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 13),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:int, 2), :**,
                      s(:int, 12)), :-@), :-,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 12),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:int, 2), :**,
                    s(:int, 12)), :-@)), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 12),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:int, 2), :**,
                      s(:int, 12)), :-@), :+,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 9),
            s(:send,
              s(:int, -257), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 8),
            s(:send,
              s(:int, -256), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 8),
            s(:send,
              s(:int, -255), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, -2), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, -1), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 0), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 1), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 8),
            s(:send,
              s(:int, 255), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 9),
            s(:send,
              s(:int, 256), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 9),
            s(:send,
              s(:int, 257), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 12),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:int, 2), :**,
                    s(:int, 12)), :-,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 13),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 12))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 13),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:int, 2), :**,
                    s(:int, 12)), :+,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 10001),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:int, 2), :**,
                      s(:int, 10000)), :-@), :-,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 10000),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:int, 2), :**,
                    s(:int, 10000)), :-@)), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 10000),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:int, 2), :**,
                      s(:int, 10000)), :-@), :+,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 10000),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:int, 2), :**,
                    s(:int, 10000)), :-,
                  s(:int, 1))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 10001),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 10000))), :bit_length)),
          s(:send, nil, :assert_equal,
            s(:int, 10001),
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:int, 2), :**,
                    s(:int, 10000)), :+,
                  s(:int, 1))), :bit_length)),
          s(:block,
            s(:send,
              s(:int, 2), :upto,
              s(:int, 1000)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:lvasgn, :n,
                s(:send,
                  s(:int, 2), :**,
                  s(:lvar, :i))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :i), :+,
                  s(:int, 1)),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :n), :-@), :-,
                      s(:int, 1))), :bit_length),
                s(:dstr,
                  s(:str, "("),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :n), :-@), :-,
                      s(:int, 1))),
                  s(:str, ").bit_length"))),
              s(:send, nil, :assert_equal,
                s(:lvar, :i),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :-@)), :bit_length),
                s(:dstr,
                  s(:str, "("),
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :-@)),
                  s(:str, ").bit_length"))),
              s(:send, nil, :assert_equal,
                s(:lvar, :i),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :n), :-@), :+,
                      s(:int, 1))), :bit_length),
                s(:dstr,
                  s(:str, "("),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :n), :-@), :+,
                      s(:int, 1))),
                  s(:str, ").bit_length"))),
              s(:send, nil, :assert_equal,
                s(:lvar, :i),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :-,
                      s(:int, 1))), :bit_length),
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :-,
                      s(:int, 1))),
                  s(:str, ".bit_length"))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :i), :+,
                  s(:int, 1)),
                s(:send,
                  s(:begin,
                    s(:lvar, :n)), :bit_length),
                s(:dstr,
                  s(:begin,
                    s(:lvar, :n)),
                  s(:str, ".bit_length"))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :i), :+,
                  s(:int, 1)),
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :+,
                      s(:int, 1))), :bit_length),
                s(:dstr,
                  s(:begin,
                    s(:send,
                      s(:lvar, :n), :+,
                      s(:int, 1))),
                  s(:str, ".bit_length"))))))))))
