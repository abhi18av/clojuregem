s(:begin,
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:class,
    s(:const, nil, :LocalBarrier), nil,
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :n)),
        s(:begin,
          s(:ivasgn, :@wait,
            s(:send,
              s(:const, nil, :Queue), :new)),
          s(:ivasgn, :@done,
            s(:send,
              s(:const, nil, :Queue), :new)),
          s(:ivasgn, :@keeper,
            s(:send, nil, :begin_keeper,
              s(:lvar, :n))))),
      s(:def, :sync,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@done), :push,
            s(:true)),
          s(:send,
            s(:ivar, :@wait), :pop))),
      s(:def, :join,
        s(:args),
        s(:send,
          s(:ivar, :@keeper), :join)),
      s(:send, nil, :private),
      s(:def, :begin_keeper,
        s(:args,
          s(:arg, :n)),
        s(:block,
          s(:send,
            s(:const, nil, :Thread), :start),
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:lvar, :n), :times),
              s(:args),
              s(:send,
                s(:ivar, :@done), :pop)),
            s(:block,
              s(:send,
                s(:lvar, :n), :times),
              s(:args),
              s(:send,
                s(:ivar, :@wait), :push,
                s(:true)))))))),
  s(:lvasgn, :n,
    s(:int, 10)),
  s(:lvasgn, :lb,
    s(:send,
      s(:const, nil, :LocalBarrier), :new,
      s(:lvar, :n))),
  s(:block,
    s(:send,
      s(:begin,
        s(:send,
          s(:lvar, :n), :-,
          s(:int, 1))), :times),
    s(:args,
      s(:arg, :i)),
    s(:block,
      s(:send,
        s(:const, nil, :Thread), :start),
      s(:args),
      s(:begin,
        s(:send, nil, :sleep,
          s(:send,
            s(:begin,
              s(:send,
                s(:send, nil, :rand,
                  s(:lvar, :n)), :+,
                s(:int, 1))), :/,
            s(:float, 100.0))),
        s(:send, nil, :print,
          s(:dstr,
            s(:begin,
              s(:lvar, :i)),
            s(:str, ": done\n"))),
        s(:send,
          s(:lvar, :lb), :sync),
        s(:send, nil, :print,
          s(:dstr,
            s(:begin,
              s(:lvar, :i)),
            s(:str, ": cont\n")))))),
  s(:send,
    s(:lvar, :lb), :sync),
  s(:send, nil, :print,
    s(:dstr,
      s(:begin,
        s(:send,
          s(:lvar, :n), :-,
          s(:int, 1))),
      s(:str, ": cont\n"))),
  s(:send, nil, :print,
    s(:str, "exit.\n")))
