s(:module,
  s(:const, nil, :AllPairs),
  s(:begin,
    s(:send, nil, :module_function),
    s(:def, :make_prime,
      s(:args,
        s(:arg, :v)),
      s(:begin,
        s(:if,
          s(:send,
            s(:lvar, :v), :<,
            s(:int, 2)),
          s(:return,
            s(:int, 2)), nil),
        s(:lvasgn, :ary,
          s(:send,
            s(:array,
              s(:true)), :*,
            s(:begin,
              s(:send,
                s(:lvar, :v), :*,
                s(:int, 2))))),
        s(:block,
          s(:send,
            s(:int, 2), :upto,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :sqrt,
                s(:send,
                  s(:lvar, :ary), :length)), :ceil)),
          s(:args,
            s(:arg, :i)),
          s(:begin,
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:lvar, :i)),
                s(:send,
                  s(:lvar, :v), :<=,
                  s(:lvar, :i))),
              s(:return,
                s(:lvar, :i)), nil),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :i), :*,
                    s(:int, 2))), :step,
                s(:send,
                  s(:lvar, :ary), :length),
                s(:lvar, :i)),
              s(:args,
                s(:arg, :j)),
              s(:send,
                s(:lvar, :ary), :[]=,
                s(:lvar, :j),
                s(:false))))),
        s(:block,
          s(:send,
            s(:lvar, :v), :upto,
            s(:send,
              s(:send,
                s(:lvar, :ary), :length), :-,
              s(:int, 1))),
          s(:args,
            s(:arg, :i)),
          s(:if,
            s(:send,
              s(:lvar, :ary), :[],
              s(:lvar, :i)),
            s(:return,
              s(:lvar, :i)), nil)),
        s(:send, nil, :raise,
          s(:dstr,
            s(:str, "[bug] prime not found greater than "),
            s(:begin,
              s(:lvar, :v)))))),
    s(:def, :make_basic_block,
      s(:args,
        s(:arg, :prime)),
      s(:block,
        s(:send,
          s(:lvar, :prime), :times),
        s(:args,
          s(:arg, :i)),
        s(:block,
          s(:send,
            s(:lvar, :prime), :times),
          s(:args,
            s(:arg, :j)),
          s(:begin,
            s(:lvasgn, :row,
              s(:array,
                s(:lvar, :i))),
            s(:block,
              s(:send,
                s(:int, 0), :upto,
                s(:send,
                  s(:lvar, :prime), :-,
                  s(:int, 1))),
              s(:args,
                s(:arg, :m)),
              s(:send,
                s(:lvar, :row), :<<,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :i), :*,
                        s(:lvar, :m)), :+,
                      s(:lvar, :j))), :%,
                  s(:lvar, :prime)))),
            s(:yield,
              s(:lvar, :row)))))),
    s(:def, :combine_block,
      s(:args,
        s(:arg, :tbl1),
        s(:arg, :tbl2)),
      s(:begin,
        s(:lvasgn, :result,
          s(:array)),
        s(:block,
          s(:send,
            s(:lvar, :tbl2), :each),
          s(:args,
            s(:arg, :row)),
          s(:send,
            s(:lvar, :result), :<<,
            s(:send,
              s(:lvar, :row), :*,
              s(:send,
                s(:send,
                  s(:lvar, :tbl1), :first), :length)))),
        s(:block,
          s(:send,
            s(:lvar, :tbl1), :each_with_index),
          s(:args,
            s(:arg, :row),
            s(:arg, :k)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :k), :==,
                s(:int, 0)),
              s(:next), nil),
            s(:send,
              s(:lvar, :result), :<<,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :row), :map),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:array,
                      s(:lvar, :i)), :*,
                    s(:send,
                      s(:send,
                        s(:lvar, :tbl2), :first), :length))), :flatten)))),
        s(:lvar, :result))),
    s(:def, :make_large_block,
      s(:args,
        s(:arg, :v),
        s(:arg, :prime)),
      s(:if,
        s(:send,
          s(:lvar, :prime), :<=,
          s(:send,
            s(:lvar, :v), :+,
            s(:int, 1))),
        s(:block,
          s(:send, nil, :make_basic_block,
            s(:lvar, :v)),
          s(:args,
            s(:arg, :row)),
          s(:yield,
            s(:lvar, :row))),
        s(:begin,
          s(:lvasgn, :tbl,
            s(:array)),
          s(:block,
            s(:send, nil, :make_basic_block,
              s(:lvar, :v)),
            s(:args,
              s(:arg, :row)),
            s(:send,
              s(:lvar, :tbl), :<<,
              s(:lvar, :row))),
          s(:lvasgn, :tbls,
            s(:array,
              s(:lvar, :tbl))),
          s(:while,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :tbl), :first), :length), :**,
                s(:int, 2)), :<,
              s(:lvar, :prime)),
            s(:begin,
              s(:lvasgn, :tbl,
                s(:send, nil, :combine_block,
                  s(:lvar, :tbl),
                  s(:lvar, :tbl))),
              s(:send,
                s(:lvar, :tbls), :<<,
                s(:lvar, :tbl)))),
          s(:lvasgn, :tbl1,
            s(:block,
              s(:send,
                s(:lvar, :tbls), :find),
              s(:args,
                s(:arg, :t)),
              s(:send,
                s(:lvar, :prime), :<=,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :t), :first), :length), :*,
                  s(:send,
                    s(:send,
                      s(:lvar, :tbl), :first), :length))))),
          s(:lvasgn, :tbl,
            s(:send, nil, :combine_block,
              s(:lvar, :tbl),
              s(:lvar, :tbl1))),
          s(:block,
            s(:send,
              s(:lvar, :tbl), :each),
            s(:args,
              s(:arg, :row)),
            s(:yield,
              s(:lvar, :row)))))),
    s(:def, :each_index,
      s(:args,
        s(:restarg, :vs)),
      s(:begin,
        s(:lvasgn, :n,
          s(:send,
            s(:lvar, :vs), :length)),
        s(:lvasgn, :max_v,
          s(:send,
            s(:lvar, :vs), :max)),
        s(:lvasgn, :h,
          s(:hash)),
        s(:block,
          s(:send, nil, :make_large_block,
            s(:lvar, :max_v),
            s(:lvar, :n)),
          s(:args,
            s(:arg, :row)),
          s(:begin,
            s(:lvasgn, :row,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :vs), :zip,
                    s(:lvar, :row)), :map),
                s(:args,
                  s(:arg, :v),
                  s(:arg, :i)),
                s(:send,
                  s(:lvar, :i), :%,
                  s(:lvar, :v)))),
            s(:if,
              s(:send,
                s(:lvar, :h), :[],
                s(:lvar, :row)),
              s(:next), nil),
            s(:send,
              s(:lvar, :h), :[]=,
              s(:lvar, :row),
              s(:true)),
            s(:yield,
              s(:lvar, :row)))))),
    s(:def, :each,
      s(:args,
        s(:restarg, :args)),
      s(:begin,
        s(:block,
          s(:send,
            s(:lvar, :args), :map!),
          s(:args,
            s(:arg, :a)),
          s(:send,
            s(:lvar, :a), :to_a)),
        s(:block,
          s(:send, nil, :each_index,
            s(:splat,
              s(:block,
                s(:send,
                  s(:lvar, :args), :map),
                s(:args,
                  s(:arg, :a)),
                s(:send,
                  s(:lvar, :a), :length)))),
          s(:args,
            s(:arg, :is)),
          s(:yield,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :is), :zip,
                  s(:lvar, :args)), :map),
              s(:args,
                s(:arg, :i),
                s(:arg, :a)),
              s(:send,
                s(:lvar, :a), :[],
                s(:lvar, :i))))))),
    s(:def, :exhaustive_each,
      s(:args,
        s(:restarg, :args)),
      s(:begin,
        s(:lvasgn, :args,
          s(:block,
            s(:send,
              s(:lvar, :args), :map),
            s(:args,
              s(:arg, :a)),
            s(:send,
              s(:lvar, :a), :to_a))),
        s(:lvasgn, :i,
          s(:int, 0)),
        s(:while,
          s(:true),
          s(:begin,
            s(:lvasgn, :n,
              s(:lvar, :i)),
            s(:lvasgn, :as,
              s(:array)),
            s(:block,
              s(:send,
                s(:lvar, :args), :reverse_each),
              s(:args,
                s(:arg, :a)),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :n),
                    s(:lvasgn, :m)),
                  s(:send,
                    s(:lvar, :n), :divmod,
                    s(:send,
                      s(:lvar, :a), :length))),
                s(:send,
                  s(:lvar, :as), :unshift,
                  s(:send,
                    s(:lvar, :a), :[],
                    s(:lvar, :m))))),
            s(:if,
              s(:send,
                s(:int, 0), :<,
                s(:lvar, :n)),
              s(:break), nil),
            s(:yield,
              s(:lvar, :as)),
            s(:op_asgn,
              s(:lvasgn, :i), :+,
              s(:int, 1))))))))
