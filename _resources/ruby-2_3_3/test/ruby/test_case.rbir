s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestCase),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_case,
        s(:args),
        s(:begin,
          s(:case,
            s(:int, 5),
            s(:when,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:int, 4),
              s(:int, 6),
              s(:int, 7),
              s(:int, 8),
              s(:send, nil, :assert,
                s(:false))),
            s(:when,
              s(:int, 5),
              s(:send, nil, :assert,
                s(:true))), nil),
          s(:case,
            s(:int, 5),
            s(:when,
              s(:int, 5),
              s(:send, nil, :assert,
                s(:true))),
            s(:when,
              s(:irange,
                s(:int, 1),
                s(:int, 10)),
              s(:send, nil, :assert,
                s(:false))), nil),
          s(:case,
            s(:int, 5),
            s(:when,
              s(:irange,
                s(:int, 1),
                s(:int, 10)),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))),
          s(:case,
            s(:int, 5),
            s(:when,
              s(:int, 5),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))),
          s(:case,
            s(:str, "foobar"),
            s(:when,
              s(:regexp,
                s(:str, "^f.*r$"),
                s(:regopt)),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))),
          s(:case, nil,
            s(:when,
              s(:true),
              s(:send, nil, :assert,
                s(:true))),
            s(:when,
              s(:false),
              s(:nil),
              s(:send, nil, :assert,
                s(:false))),
            s(:send, nil, :assert,
              s(:false))),
          s(:case,
            s(:str, "+"),
            s(:when,
              s(:splat,
                s(:array,
                  s(:str, "."),
                  s(:str, "+"))),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))),
          s(:case, nil,
            s(:when,
              s(:splat,
                s(:array)),
              s(:false),
              s(:send, nil, :assert,
                s(:false))),
            s(:send, nil, :assert,
              s(:true))),
          s(:case, nil,
            s(:when,
              s(:splat,
                s(:false)),
              s(:array),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NameError)),
            s(:args),
            s(:case, nil,
              s(:when,
                s(:false),
                s(:splat,
                  s(:send, nil, :x)),
                s(:false), nil), nil)))),
      s(:def, :test_deoptimization,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_in_out_err,
            s(:array,
              s(:str, "-e"),
              s(:str, "      class Symbol; undef ===; def ===(o); p 42; true; end; end; case :foo; when :foo; end\n")),
            s(:str, ""),
            s(:array,
              s(:str, "42")),
            s(:array)),
          s(:send, nil, :assert_in_out_err,
            s(:array,
              s(:str, "-e"),
              s(:str, "      class Fixnum; undef ===; def ===(o); p 42; true; end; end; case 1; when 1; end\n")),
            s(:str, ""),
            s(:array,
              s(:str, "42")),
            s(:array)))),
      s(:def, :test_optimization,
        s(:args),
        s(:begin,
          s(:case,
            s(:int, 1),
            s(:when,
              s(:float, 0.9),
              s(:float, 1.1),
              s(:send, nil, :assert,
                s(:false))),
            s(:when,
              s(:float, 1.0),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))),
          s(:case,
            s(:int, 536870912),
            s(:when,
              s(:float, 536870911.9),
              s(:float, 536870912.1),
              s(:send, nil, :assert,
                s(:false))),
            s(:when,
              s(:float, 536870912.0),
              s(:send, nil, :assert,
                s(:true))),
            s(:send, nil, :assert,
              s(:false))))),
      s(:def, :test_method_missing,
        s(:args),
        s(:begin,
          s(:lvasgn, :flag,
            s(:false)),
          s(:case,
            s(:int, 1),
            s(:when,
              s(:send,
                s(:block,
                  s(:send,
                    s(:const, nil, :Class), :new,
                    s(:const, nil, :BasicObject)),
                  s(:args),
                  s(:def, :method_missing,
                    s(:args,
                      s(:restarg)),
                    s(:true))), :new),
              s(:lvasgn, :flag,
                s(:true))), nil),
          s(:send, nil, :assert,
            s(:lvar, :flag)))),
      s(:def, :test_nomethoderror,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raise,
            s(:const, nil, :NoMethodError)),
          s(:args),
          s(:case,
            s(:int, 1),
            s(:when,
              s(:send,
                s(:block,
                  s(:send,
                    s(:const, nil, :Class), :new,
                    s(:const, nil, :BasicObject)),
                  s(:args), nil), :new), nil), nil))),
      s(:module,
        s(:const, nil, :NilEqq),
        s(:block,
          s(:send, nil, :refine,
            s(:const, nil, :NilClass)),
          s(:args),
          s(:def, :===,
            s(:args,
              s(:arg, :other)),
            s(:false)))),
      s(:class,
        s(:const, nil, :NilEqqClass), nil,
        s(:begin,
          s(:send, nil, :using,
            s(:const, nil, :NilEqq)),
          s(:def, :eqq,
            s(:args,
              s(:arg, :a)),
            s(:case,
              s(:lvar, :a),
              s(:when,
                s(:nil),
                s(:nil)),
              s(:sym, :not_nil))))),
      s(:def, :test_deoptimize_nil,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:sym, :not_nil),
          s(:send,
            s(:send,
              s(:const, nil, :NilEqqClass), :new), :eqq,
            s(:nil)))))))
