s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "thread")),
  s(:class,
    s(:const, nil, :TestThreadGroup),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_thread_init,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :thgrp,
              s(:send,
                s(:const, nil, :ThreadGroup), :new)),
            s(:lvasgn, :th,
              s(:send,
                s(:block,
                  s(:send,
                    s(:const, nil, :Thread), :new),
                  s(:args),
                  s(:begin,
                    s(:send,
                      s(:lvar, :thgrp), :add,
                      s(:send,
                        s(:const, nil, :Thread), :current)),
                    s(:block,
                      s(:send,
                        s(:const, nil, :Thread), :new),
                      s(:args),
                      s(:send, nil, :sleep,
                        s(:int, 1))))), :value)),
            s(:send, nil, :assert_equal,
              s(:lvar, :thgrp),
              s(:send,
                s(:lvar, :th), :group))),
          s(:send,
            s(:lvar, :th), :join))),
      s(:def, :test_frozen_thgroup,
        s(:args),
        s(:begin,
          s(:lvasgn, :thgrp,
            s(:send,
              s(:const, nil, :ThreadGroup), :new)),
          s(:lvasgn, :t,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:int, 1))),
          s(:send,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:begin,
                s(:send,
                  s(:lvar, :thgrp), :add,
                  s(:send,
                    s(:const, nil, :Thread), :current)),
                s(:send,
                  s(:lvar, :thgrp), :freeze),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ThreadError)),
                  s(:args),
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:const, nil, :Thread), :new),
                      s(:args),
                      s(:int, 1)), :join)),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ThreadError)),
                  s(:args),
                  s(:send,
                    s(:lvar, :thgrp), :add,
                    s(:lvar, :t))),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ThreadError)),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :ThreadGroup), :new), :add,
                    s(:send,
                      s(:const, nil, :Thread), :current))))), :join),
          s(:send,
            s(:lvar, :t), :join))),
      s(:def, :test_enclosed_thgroup,
        s(:args),
        s(:begin,
          s(:lvasgn, :thgrp,
            s(:send,
              s(:const, nil, :ThreadGroup), :new)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :thgrp), :enclosed?)),
          s(:lvasgn, :t,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:int, 1))),
          s(:send,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:begin,
                s(:send,
                  s(:lvar, :thgrp), :add,
                  s(:send,
                    s(:const, nil, :Thread), :current)),
                s(:send,
                  s(:lvar, :thgrp), :enclose),
                s(:send, nil, :assert_equal,
                  s(:true),
                  s(:send,
                    s(:lvar, :thgrp), :enclosed?)),
                s(:block,
                  s(:send, nil, :assert_nothing_raised),
                  s(:args),
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:const, nil, :Thread), :new),
                      s(:args),
                      s(:int, 1)), :join)),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ThreadError)),
                  s(:args),
                  s(:send,
                    s(:lvar, :thgrp), :add,
                    s(:lvar, :t))),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ThreadError)),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:const, nil, :ThreadGroup), :new), :add,
                    s(:send,
                      s(:const, nil, :Thread), :current))))), :join),
          s(:send,
            s(:lvar, :t), :join))))))
