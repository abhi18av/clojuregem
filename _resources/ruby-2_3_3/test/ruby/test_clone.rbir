s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestClone),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:module,
        s(:const, nil, :M001), nil),
      s(:module,
        s(:const, nil, :M002), nil),
      s(:module,
        s(:const, nil, :M003),
        s(:send, nil, :include,
          s(:const, nil, :M002))),
      s(:module,
        s(:const, nil, :M002),
        s(:send, nil, :include,
          s(:const, nil, :M001))),
      s(:module,
        s(:const, nil, :M003),
        s(:send, nil, :include,
          s(:const, nil, :M002))),
      s(:def, :test_clone,
        s(:args),
        s(:begin,
          s(:lvasgn, :foo,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:defs,
            s(:lvar, :foo), :test,
            s(:args),
            s(:str, "test")),
          s(:lvasgn, :bar,
            s(:send,
              s(:lvar, :foo), :clone)),
          s(:defs,
            s(:lvar, :bar), :test2,
            s(:args),
            s(:str, "test2")),
          s(:send, nil, :assert_equal,
            s(:str, "test2"),
            s(:send,
              s(:lvar, :bar), :test2)),
          s(:send, nil, :assert_equal,
            s(:str, "test"),
            s(:send,
              s(:lvar, :bar), :test)),
          s(:send, nil, :assert_equal,
            s(:str, "test"),
            s(:send,
              s(:lvar, :foo), :test)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NoMethodError)),
            s(:args),
            s(:send,
              s(:lvar, :foo), :test2)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :M003),
              s(:const, nil, :M002),
              s(:const, nil, :M001)),
            s(:send,
              s(:const, nil, :M003), :ancestors)))))))
