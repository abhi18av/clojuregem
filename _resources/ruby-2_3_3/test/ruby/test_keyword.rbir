s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestKeywordArguments),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :f1,
        s(:args,
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242))),
        s(:array,
          s(:lvar, :str),
          s(:lvar, :num))),
      s(:def, :test_f1,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send, nil, :f1)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242)),
            s(:send, nil, :f1,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111)),
            s(:send, nil, :f1,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111)),
            s(:send, nil, :f1,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :f1,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :f1,
              s(:str, "string"))))),
      s(:def, :f2,
        s(:args,
          s(:arg, :x),
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242))),
        s(:array,
          s(:lvar, :x),
          s(:lvar, :str),
          s(:lvar, :num))),
      s(:def, :test_f2,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:sym, :xyz),
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send, nil, :f2,
              s(:sym, :xyz))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:str, "bar"),
                  s(:int, 42))),
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send, nil, :f2,
              s(:hash,
                s(:pair,
                  s(:str, "bar"),
                  s(:int, 42))))))),
      s(:def, :f3,
        s(:args,
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242)),
          s(:kwrestarg, :h)),
        s(:array,
          s(:lvar, :str),
          s(:lvar, :num),
          s(:lvar, :h))),
      s(:def, :test_f3,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f3)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f3,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash)),
            s(:send, nil, :f3,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash)),
            s(:send, nil, :f3,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash,
                s(:pair,
                  s(:sym, :check),
                  s(:true)))),
            s(:send, nil, :f3,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :f3,
              s(:str, "string"))))),
      s(:block,
        s(:send, nil, :define_method,
          s(:sym, :f4)),
        s(:args,
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242))),
        s(:array,
          s(:lvar, :str),
          s(:lvar, :num))),
      s(:def, :test_f4,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send, nil, :f4)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242)),
            s(:send, nil, :f4,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111)),
            s(:send, nil, :f4,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111)),
            s(:send, nil, :f4,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :f4,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :f4,
              s(:str, "string"))))),
      s(:block,
        s(:send, nil, :define_method,
          s(:sym, :f5)),
        s(:args,
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242)),
          s(:kwrestarg, :h)),
        s(:array,
          s(:lvar, :str),
          s(:lvar, :num),
          s(:lvar, :h))),
      s(:def, :test_f5,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f5)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f5,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash)),
            s(:send, nil, :f5,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash)),
            s(:send, nil, :f5,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash,
                s(:pair,
                  s(:sym, :check),
                  s(:true)))),
            s(:send, nil, :f5,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send, nil, :f5,
              s(:str, "string"))))),
      s(:def, :f6,
        s(:args,
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242)),
          s(:kwrestarg, :h),
          s(:blockarg, :blk)),
        s(:array,
          s(:lvar, :str),
          s(:lvar, :num),
          s(:lvar, :h),
          s(:lvar, :blk))),
      s(:def, :test_f6,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f6)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f6,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f6,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f6,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash,
                s(:pair,
                  s(:sym, :check),
                  s(:true))),
              s(:nil)),
            s(:send, nil, :f6,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:lvasgn, :a,
            s(:block,
              s(:send, nil, :f6),
              s(:args,
                s(:arg, :x)),
              s(:send,
                s(:lvar, :x), :+,
                s(:int, 42)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:int, 43),
            s(:send,
              s(:send,
                s(:lvar, :a), :last), :call,
              s(:int, 1))))),
      s(:def, :f7,
        s(:args,
          s(:restarg, :r),
          s(:kwoptarg, :str,
            s(:str, "foo")),
          s(:kwoptarg, :num,
            s(:int, 424242)),
          s(:kwrestarg, :h)),
        s(:array,
          s(:lvar, :r),
          s(:lvar, :str),
          s(:lvar, :num),
          s(:lvar, :h))),
      s(:def, :test_f7,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash)),
            s(:send, nil, :f7,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash)),
            s(:send, nil, :f7,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1)),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2)),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1)),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:int, 1),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2)),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:int, 1),
              s(:int, 2),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send, nil, :f7,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))))),
      s(:block,
        s(:send, nil, :define_method,
          s(:sym, :f8)),
        s(:args,
          s(:optarg, :opt,
            s(:sym, :ion)),
          s(:restarg, :rest),
          s(:kwoptarg, :key,
            s(:sym, :word))),
        s(:array,
          s(:lvar, :opt),
          s(:lvar, :rest),
          s(:lvar, :key))),
      s(:def, :test_f8,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:sym, :ion),
              s(:array),
              s(:sym, :word)),
            s(:send, nil, :f8)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:array),
              s(:sym, :word)),
            s(:send, nil, :f8,
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:array,
                s(:int, 2)),
              s(:sym, :word)),
            s(:send, nil, :f8,
              s(:int, 1),
              s(:int, 2))))),
      s(:def, :f9,
        s(:args,
          s(:arg, :r),
          s(:optarg, :o,
            s(:int, 42)),
          s(:restarg, :args),
          s(:arg, :p),
          s(:kwoptarg, :k,
            s(:sym, :key)),
          s(:kwrestarg, :kw),
          s(:blockarg, :b)),
        s(:array,
          s(:lvar, :r),
          s(:lvar, :o),
          s(:lvar, :args),
          s(:lvar, :p),
          s(:lvar, :k),
          s(:lvar, :kw),
          s(:lvar, :b))),
      s(:def, :test_f9,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 42),
              s(:array),
              s(:int, 2),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f9,
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:array),
              s(:int, 3),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f9,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:array,
                s(:int, 3)),
              s(:int, 4),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f9,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:int, 4))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:array,
                s(:int, 3),
                s(:int, 4)),
              s(:int, 5),
              s(:sym, :key),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))),
              s(:nil)),
            s(:send, nil, :f9,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:int, 4),
              s(:int, 5),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))))),
      s(:def, :f10,
        s(:args,
          s(:kwoptarg, :a,
            s(:int, 1)),
          s(:kwrestarg)),
        s(:lvar, :a)),
      s(:def, :test_f10,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 42),
            s(:send, nil, :f10,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42))))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :f10,
              s(:hash,
                s(:pair,
                  s(:sym, :b),
                  s(:int, 42))))))),
      s(:def, :test_method_parameters,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f1)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :req),
                s(:sym, :x)),
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f2)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f3)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f4)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f5)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h)),
              s(:array,
                s(:sym, :block),
                s(:sym, :blk))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f6)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :rest),
                s(:sym, :r)),
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f7)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :opt),
                s(:sym, :opt)),
              s(:array,
                s(:sym, :rest),
                s(:sym, :rest)),
              s(:array,
                s(:sym, :key),
                s(:sym, :key))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f8)), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :req),
                s(:sym, :r)),
              s(:array,
                s(:sym, :opt),
                s(:sym, :o)),
              s(:array,
                s(:sym, :rest),
                s(:sym, :args)),
              s(:array,
                s(:sym, :req),
                s(:sym, :p)),
              s(:array,
                s(:sym, :key),
                s(:sym, :k)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :kw)),
              s(:array,
                s(:sym, :block),
                s(:sym, :b))),
            s(:send,
              s(:send, nil, :method,
                s(:sym, :f9)), :parameters)))),
      s(:def, :test_lambda,
        s(:args),
        s(:begin,
          s(:lvasgn, :f,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:kwoptarg, :str,
                  s(:str, "foo")),
                s(:kwoptarg, :num,
                  s(:int, 424242))),
              s(:array,
                s(:lvar, :str),
                s(:lvar, :num)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send,
              s(:lvar, :f), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242)),
            s(:send,
              s(:lvar, :f), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111)),
            s(:send,
              s(:lvar, :f), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111)),
            s(:send,
              s(:lvar, :f), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))))),
      s(:def, :p1,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Proc), :new),
          s(:args,
            s(:kwoptarg, :str,
              s(:str, "foo")),
            s(:kwoptarg, :num,
              s(:int, 424242))),
          s(:array,
            s(:lvar, :str),
            s(:lvar, :num)))),
      s(:def, :test_p1,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send,
              s(:send, nil, :p1), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242)),
            s(:send,
              s(:send, nil, :p1), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111)),
            s(:send,
              s(:send, nil, :p1), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111)),
            s(:send,
              s(:send, nil, :p1), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send,
              s(:send, nil, :p1), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send,
              s(:send, nil, :p1), :[],
              s(:str, "string"))))),
      s(:def, :p2,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Proc), :new),
          s(:args,
            s(:arg, :x),
            s(:kwoptarg, :str,
              s(:str, "foo")),
            s(:kwoptarg, :num,
              s(:int, 424242))),
          s(:array,
            s(:lvar, :x),
            s(:lvar, :str),
            s(:lvar, :num)))),
      s(:def, :test_p2,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:nil),
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send,
              s(:send, nil, :p2), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:sym, :xyz),
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send,
              s(:send, nil, :p2), :[],
              s(:sym, :xyz))))),
      s(:def, :p3,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Proc), :new),
          s(:args,
            s(:kwoptarg, :str,
              s(:str, "foo")),
            s(:kwoptarg, :num,
              s(:int, 424242)),
            s(:kwrestarg, :h)),
          s(:array,
            s(:lvar, :str),
            s(:lvar, :num),
            s(:lvar, :h)))),
      s(:def, :test_p3,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p3), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p3), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash)),
            s(:send,
              s(:send, nil, :p3), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash)),
            s(:send,
              s(:send, nil, :p3), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash,
                s(:pair,
                  s(:sym, :check),
                  s(:true)))),
            s(:send,
              s(:send, nil, :p3), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p3), :[],
              s(:str, "string"))))),
      s(:def, :p4,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Proc), :new),
          s(:args,
            s(:kwoptarg, :str,
              s(:str, "foo")),
            s(:kwoptarg, :num,
              s(:int, 424242)),
            s(:kwrestarg, :h),
            s(:blockarg, :blk)),
          s(:array,
            s(:lvar, :str),
            s(:lvar, :num),
            s(:lvar, :h),
            s(:lvar, :blk)))),
      s(:def, :test_p4,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p4), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p4), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p4), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p4), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash,
                s(:pair,
                  s(:sym, :check),
                  s(:true))),
              s(:nil)),
            s(:send,
              s(:send, nil, :p4), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :check),
                  s(:true))))),
          s(:lvasgn, :a,
            s(:block,
              s(:send,
                s(:send, nil, :p4), :call),
              s(:args,
                s(:arg, :x)),
              s(:send,
                s(:lvar, :x), :+,
                s(:int, 42)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:int, 43),
            s(:send,
              s(:send,
                s(:lvar, :a), :last), :call,
              s(:int, 1))))),
      s(:def, :p5,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Proc), :new),
          s(:args,
            s(:restarg, :r),
            s(:kwoptarg, :str,
              s(:str, "foo")),
            s(:kwoptarg, :num,
              s(:int, 424242)),
            s(:kwrestarg, :h)),
          s(:array,
            s(:lvar, :r),
            s(:lvar, :str),
            s(:lvar, :num),
            s(:lvar, :h)))),
      s(:def, :test_p5,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "foo"),
              s(:int, 111111),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array),
              s(:str, "bar"),
              s(:int, 111111),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1)),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2)),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)),
              s(:str, "foo"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1)),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:int, 1),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2)),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:int, 1),
              s(:int, 2),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)),
              s(:str, "bar"),
              s(:int, 424242),
              s(:hash)),
            s(:send,
              s(:send, nil, :p5), :[],
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))))),
      s(:def, :p6,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Proc), :new),
          s(:args,
            s(:arg, :o1),
            s(:optarg, :o2,
              s(:int, 42)),
            s(:restarg, :args),
            s(:arg, :p),
            s(:kwoptarg, :k,
              s(:sym, :key)),
            s(:kwrestarg, :kw),
            s(:blockarg, :b)),
          s(:array,
            s(:lvar, :o1),
            s(:lvar, :o2),
            s(:lvar, :args),
            s(:lvar, :p),
            s(:lvar, :k),
            s(:lvar, :kw),
            s(:lvar, :b)))),
      s(:def, :test_p6,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:nil),
              s(:int, 42),
              s(:array),
              s(:nil),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p6), :[])),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 42),
              s(:array),
              s(:int, 2),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p6), :[],
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:array),
              s(:int, 3),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p6), :[],
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:array,
                s(:int, 3)),
              s(:int, 4),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send,
              s(:send, nil, :p6), :[],
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:int, 4))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:array,
                s(:int, 3),
                s(:int, 4)),
              s(:int, 5),
              s(:sym, :key),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))),
              s(:nil)),
            s(:send,
              s(:send, nil, :p6), :[],
              s(:int, 1),
              s(:int, 2),
              s(:int, 3),
              s(:int, 4),
              s(:int, 5),
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))))))),
      s(:def, :test_proc_parameters,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num))),
            s(:send,
              s(:send, nil, :p1), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :opt),
                s(:sym, :x)),
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num))),
            s(:send,
              s(:send, nil, :p2), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h))),
            s(:send,
              s(:send, nil, :p3), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h)),
              s(:array,
                s(:sym, :block),
                s(:sym, :blk))),
            s(:send,
              s(:send, nil, :p4), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :rest),
                s(:sym, :r)),
              s(:array,
                s(:sym, :key),
                s(:sym, :str)),
              s(:array,
                s(:sym, :key),
                s(:sym, :num)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :h))),
            s(:send,
              s(:send, nil, :p5), :parameters)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :opt),
                s(:sym, :o1)),
              s(:array,
                s(:sym, :opt),
                s(:sym, :o2)),
              s(:array,
                s(:sym, :rest),
                s(:sym, :args)),
              s(:array,
                s(:sym, :opt),
                s(:sym, :p)),
              s(:array,
                s(:sym, :key),
                s(:sym, :k)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :kw)),
              s(:array,
                s(:sym, :block),
                s(:sym, :b))),
            s(:send,
              s(:send, nil, :p6), :parameters)))),
      s(:def, :m1,
        s(:args,
          s(:restarg, :args)),
        s(:yield,
          s(:splat,
            s(:lvar, :args)))),
      s(:def, :test_block,
        s(:args),
        s(:begin,
          s(:lvasgn, :blk,
            s(:block,
              s(:send,
                s(:const, nil, :Proc), :new),
              s(:args,
                s(:kwoptarg, :str,
                  s(:str, "foo")),
                s(:kwoptarg, :num,
                  s(:int, 424242))),
              s(:array,
                s(:lvar, :str),
                s(:lvar, :num)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 424242)),
            s(:send, nil, :m1,
              s(:block_pass,
                s(:lvar, :blk)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 424242)),
            s(:send, nil, :m1,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar"))),
              s(:block_pass,
                s(:lvar, :blk)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 111111)),
            s(:send, nil, :m1,
              s(:hash,
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))),
              s(:block_pass,
                s(:lvar, :blk)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bar"),
              s(:int, 111111)),
            s(:send, nil, :m1,
              s(:hash,
                s(:pair,
                  s(:sym, :str),
                  s(:str, "bar")),
                s(:pair,
                  s(:sym, :num),
                  s(:int, 111111))),
              s(:block_pass,
                s(:lvar, :blk)))))),
      s(:def, :rest_keyrest,
        s(:args,
          s(:restarg, :args),
          s(:kwrestarg, :opt)),
        s(:return,
          s(:splat,
            s(:lvar, :args)),
          s(:lvar, :opt))),
      s(:def, :test_rest_keyrest,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug7665,
            s(:str, "[ruby-core:51278]")),
          s(:lvasgn, :bug8463,
            s(:str, "[ruby-core:55203] [Bug #8463]")),
          s(:lvasgn, :expect,
            s(:array,
              s(:splat,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "bar"))),
              s(:hash,
                s(:pair,
                  s(:sym, :zzz),
                  s(:int, 42))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expect),
            s(:send, nil, :rest_keyrest,
              s(:splat,
                s(:lvar, :expect))),
            s(:lvar, :bug7665)),
          s(:lvasgn, :pr,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:restarg, :args),
                s(:kwrestarg, :opt)),
              s(:next,
                s(:splat,
                  s(:lvar, :args)),
                s(:lvar, :opt)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expect),
            s(:send,
              s(:lvar, :pr), :call,
              s(:splat,
                s(:lvar, :expect))),
            s(:lvar, :bug7665)),
          s(:send, nil, :assert_equal,
            s(:lvar, :expect),
            s(:send,
              s(:lvar, :pr), :call,
              s(:lvar, :expect)),
            s(:lvar, :bug8463)),
          s(:lvasgn, :pr,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :a),
                s(:restarg, :b),
                s(:kwrestarg, :opt)),
              s(:next,
                s(:lvar, :a),
                s(:splat,
                  s(:lvar, :b)),
                s(:lvar, :opt)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expect),
            s(:send,
              s(:lvar, :pr), :call,
              s(:lvar, :expect)),
            s(:lvar, :bug8463)),
          s(:lvasgn, :pr,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:arg, :a),
                s(:kwrestarg, :opt)),
              s(:next,
                s(:lvar, :a),
                s(:lvar, :opt)))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :expect), :values_at,
              s(:int, 0),
              s(:int, -1)),
            s(:send,
              s(:lvar, :pr), :call,
              s(:lvar, :expect)),
            s(:lvar, :bug8463)))),
      s(:def, :test_bare_kwrest,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_valid_syntax,
            s(:str, "def bug7662(**) end")),
          s(:send, nil, :assert_valid_syntax,
            s(:str, "def bug7662(*, **) end")),
          s(:send, nil, :assert_valid_syntax,
            s(:str, "def bug7662(a, **) end")))),
      s(:def, :test_without_paren,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug7942,
            s(:str, "[ruby-core:52820] [Bug #7942]")),
          s(:send, nil, :assert_valid_syntax,
            s(:str, "def bug7942 a: 1; end")),
          s(:send, nil, :assert_valid_syntax,
            s(:str, "def bug7942 a: 1, **; end")),
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:send, nil, :eval,
            s(:str, "def o.bug7942 a: 1; a; end"),
            s(:nil),
            s(:str, "(string)"),
            s(:int, 300)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :o), :bug7942),
            s(:lvar, :bug7942)),
          s(:send, nil, :assert_equal,
            s(:int, 42),
            s(:send,
              s(:lvar, :o), :bug7942,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)))),
            s(:lvar, :bug7942)),
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:send, nil, :eval,
            s(:str, "def o.bug7942 a: 1, **; a; end"),
            s(:nil),
            s(:str, "(string)"),
            s(:int, 305)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :o), :bug7942),
            s(:lvar, :bug7942)),
          s(:send, nil, :assert_equal,
            s(:int, 42),
            s(:send,
              s(:lvar, :o), :bug7942,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)))),
            s(:lvar, :bug7942)))),
      s(:def, :test_required_keyword,
        s(:args),
        s(:begin,
          s(:lvasgn, :feature7701,
            s(:str, "[ruby-core:51454] [Feature #7701] required keyword argument")),
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :SyntaxError),
              s(:lvar, :feature7701)),
            s(:args),
            s(:begin,
              s(:send, nil, :eval,
                s(:str, "def o.foo(a:) a; end"),
                s(:nil),
                s(:str, "xyzzy")),
              s(:send, nil, :eval,
                s(:str, "def o.bar(a:,**b) [a, b]; end")))),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "missing keyword"),
                s(:regopt)),
              s(:lvar, :feature7701)),
            s(:args),
            s(:send,
              s(:lvar, :o), :foo)),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "unknown keyword"),
                s(:regopt)),
              s(:lvar, :feature7701)),
            s(:args),
            s(:send,
              s(:lvar, :o), :foo,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 1))))),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:lvar, :o), :foo,
                s(:hash,
                  s(:pair,
                    s(:sym, :a),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :b),
                    s(:int, 1)))),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:send, nil, :assert_equal,
                  s(:str, "xyzzy"),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :e), :backtrace_locations), :[],
                      s(:int, 0)), :path))), nil)),
          s(:send, nil, :assert_equal,
            s(:int, 42),
            s(:send,
              s(:lvar, :o), :foo,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)))),
            s(:lvar, :feature7701)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :keyreq),
                s(:sym, :a))),
            s(:send,
              s(:send,
                s(:lvar, :o), :method,
                s(:sym, :foo)), :parameters),
            s(:lvar, :feature7701)),
          s(:lvasgn, :bug8139,
            s(:str, "[ruby-core:53608] [Bug #8139] required keyword argument with rest hash")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 42),
              s(:hash)),
            s(:send,
              s(:lvar, :o), :bar,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)))),
            s(:lvar, :feature7701)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 42),
              s(:hash,
                s(:pair,
                  s(:sym, :c),
                  s(:lvar, :feature7701)))),
            s(:send,
              s(:lvar, :o), :bar,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)),
                s(:pair,
                  s(:sym, :c),
                  s(:lvar, :feature7701)))),
            s(:lvar, :feature7701)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :keyreq),
                s(:sym, :a)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :b))),
            s(:send,
              s(:send,
                s(:lvar, :o), :method,
                s(:sym, :bar)), :parameters),
            s(:lvar, :feature7701)),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "missing keyword"),
                s(:regopt)),
              s(:lvar, :bug8139)),
            s(:args),
            s(:send,
              s(:lvar, :o), :bar,
              s(:hash,
                s(:pair,
                  s(:sym, :c),
                  s(:lvar, :bug8139))))),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "missing keyword"),
                s(:regopt)),
              s(:lvar, :bug8139)),
            s(:args),
            s(:send,
              s(:lvar, :o), :bar)))),
      s(:def, :test_required_keyword_with_newline,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug9669,
            s(:str, "[ruby-core:61658] [Bug #9669]")),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :SyntaxError),
              s(:lvar, :bug9669)),
            s(:args),
            s(:send, nil, :eval,
              s(:dstr,
                s(:str, "        def bug9669.foo a:\n"),
                s(:str, "          return a\n"),
                s(:str, "        end\n")),
              s(:nil),
              s(:str, "(string)"),
              s(:int, 338))),
          s(:send, nil, :assert_equal,
            s(:int, 42),
            s(:send,
              s(:lvar, :bug9669), :foo,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42))))),
          s(:lvasgn, :o,
            s(:nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :SyntaxError),
              s(:lvar, :bug9669)),
            s(:args),
            s(:send, nil, :eval,
              s(:dstr,
                s(:str, "        o = {\n"),
                s(:str, "          a:\n"),
                s(:str, "          1\n"),
                s(:str, "        }\n")),
              s(:nil),
              s(:str, "(string)"),
              s(:int, 347))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1))),
            s(:lvar, :o),
            s(:lvar, :bug9669)))),
      s(:def, :test_required_keyword_with_reserved,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug10279,
            s(:str, "[ruby-core:65211] [Bug #10279]")),
          s(:lvasgn, :h,
            s(:nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :SyntaxError),
              s(:lvar, :bug10279)),
            s(:args),
            s(:break,
              s(:send, nil, :eval,
                s(:str, "        h = {a: if true then 42 end}\n"),
                s(:nil),
                s(:str, "(string)"),
                s(:int, 361)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 42))),
            s(:lvar, :h),
            s(:lvar, :bug10279)))),
      s(:def, :test_block_required_keyword,
        s(:args),
        s(:begin,
          s(:lvasgn, :feature7701,
            s(:str, "[ruby-core:51454] [Feature #7701] required keyword argument")),
          s(:lvasgn, :b,
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :SyntaxError),
                s(:lvar, :feature7701)),
              s(:args),
              s(:break,
                s(:send, nil, :eval,
                  s(:str, "proc {|a:| a}"),
                  s(:nil),
                  s(:str, "xyzzy"),
                  s(:int, 371))))),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "missing keyword"),
                s(:regopt)),
              s(:lvar, :feature7701)),
            s(:args),
            s(:send,
              s(:lvar, :b), :call)),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "unknown keyword"),
                s(:regopt)),
              s(:lvar, :feature7701)),
            s(:args),
            s(:send,
              s(:lvar, :b), :call,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 1))))),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:lvar, :b), :call,
                s(:hash,
                  s(:pair,
                    s(:sym, :a),
                    s(:int, 0)),
                  s(:pair,
                    s(:sym, :b),
                    s(:int, 1)))),
              s(:resbody, nil,
                s(:lvasgn, :e),
                s(:send, nil, :assert_equal,
                  s(:str, "xyzzy"),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :e), :backtrace_locations), :[],
                      s(:int, 0)), :path))), nil)),
          s(:send, nil, :assert_equal,
            s(:int, 42),
            s(:send,
              s(:lvar, :b), :call,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)))),
            s(:lvar, :feature7701)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :keyreq),
                s(:sym, :a))),
            s(:send,
              s(:lvar, :b), :parameters),
            s(:lvar, :feature7701)),
          s(:lvasgn, :bug8139,
            s(:str, "[ruby-core:53608] [Bug #8139] required keyword argument with rest hash")),
          s(:lvasgn, :b,
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :SyntaxError),
                s(:lvar, :feature7701)),
              s(:args),
              s(:break,
                s(:send, nil, :eval,
                  s(:str, "proc {|a:, **bl| [a, bl]}"),
                  s(:nil),
                  s(:str, "(string)"),
                  s(:int, 386))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 42),
              s(:hash)),
            s(:send,
              s(:lvar, :b), :call,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)))),
            s(:lvar, :feature7701)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 42),
              s(:hash,
                s(:pair,
                  s(:sym, :c),
                  s(:lvar, :feature7701)))),
            s(:send,
              s(:lvar, :b), :call,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 42)),
                s(:pair,
                  s(:sym, :c),
                  s(:lvar, :feature7701)))),
            s(:lvar, :feature7701)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :keyreq),
                s(:sym, :a)),
              s(:array,
                s(:sym, :keyrest),
                s(:sym, :bl))),
            s(:send,
              s(:lvar, :b), :parameters),
            s(:lvar, :feature7701)),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "missing keyword"),
                s(:regopt)),
              s(:lvar, :bug8139)),
            s(:args),
            s(:send,
              s(:lvar, :b), :call,
              s(:hash,
                s(:pair,
                  s(:sym, :c),
                  s(:lvar, :bug8139))))),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "missing keyword"),
                s(:regopt)),
              s(:lvar, :bug8139)),
            s(:args),
            s(:send,
              s(:lvar, :b), :call)))),
      s(:def, :test_super_with_keyword,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug8236,
            s(:str, "[ruby-core:54094] [Bug #8236]")),
          s(:lvasgn, :base,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:restarg, :args)),
                s(:lvar, :args)))),
          s(:lvasgn, :a,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:lvar, :base)),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:arg, :arg),
                  s(:kwoptarg, :bar,
                    s(:str, "x"))),
                s(:zsuper)))),
          s(:lvasgn, :b,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:lvar, :base)),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:restarg, :args),
                  s(:kwoptarg, :bar,
                    s(:str, "x"))),
                s(:zsuper)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 42),
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "x")))),
            s(:send,
              s(:send,
                s(:lvar, :a), :new), :foo,
              s(:int, 42)),
            s(:lvar, :bug8236)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 42),
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "x")))),
            s(:send,
              s(:send,
                s(:lvar, :b), :new), :foo,
              s(:int, 42)),
            s(:lvar, :bug8236)))),
      s(:def, :test_zsuper_only_named_kwrest,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug8416,
            s(:str, "[ruby-core:55033] [Bug #8416]")),
          s(:lvasgn, :base,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:kwrestarg, :h)),
                s(:lvar, :h)))),
          s(:lvasgn, :a,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:lvar, :base)),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:kwrestarg, :h)),
                s(:zsuper)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :bar),
                s(:str, "x"))),
            s(:send,
              s(:send,
                s(:lvar, :a), :new), :foo,
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "x")))),
            s(:lvar, :bug8416)))),
      s(:def, :test_zsuper_only_anonymous_kwrest,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug8416,
            s(:str, "[ruby-core:55033] [Bug #8416]")),
          s(:lvasgn, :base,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:kwrestarg, :h)),
                s(:lvar, :h)))),
          s(:lvasgn, :a,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:lvar, :base)),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:kwrestarg)),
                s(:zsuper)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :bar),
                s(:str, "x"))),
            s(:send,
              s(:send,
                s(:lvar, :a), :new), :foo,
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "x")))),
            s(:lvar, :bug8416)))),
      s(:def, :test_precedence_of_keyword_arguments,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug8040,
            s(:str, "[ruby-core:53199] [Bug #8040]")),
          s(:lvasgn, :a,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:arg, :x),
                  s(:kwrestarg, :h)),
                s(:array,
                  s(:lvar, :x),
                  s(:lvar, :h))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:hash),
              s(:hash)),
            s(:send,
              s(:send,
                s(:lvar, :a), :new), :foo,
              s(:hash))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:hash),
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "x")))),
            s(:send,
              s(:send,
                s(:lvar, :a), :new), :foo,
              s(:hash),
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "x")))),
            s(:lvar, :bug8040)))),
      s(:def, :test_precedence_of_keyword_arguments_with_post_argument,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug8993,
            s(:str, "[ruby-core:57706] [Bug #8993]")),
          s(:lvasgn, :a,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:arg, :a),
                  s(:arg, :b),
                  s(:optarg, :c,
                    s(:int, 1)),
                  s(:restarg, :d),
                  s(:arg, :e),
                  s(:kwoptarg, :f,
                    s(:int, 2)),
                  s(:kwrestarg, :g)),
                s(:array,
                  s(:lvar, :a),
                  s(:lvar, :b),
                  s(:lvar, :c),
                  s(:lvar, :d),
                  s(:lvar, :e),
                  s(:lvar, :f),
                  s(:lvar, :g))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:int, 1),
              s(:array),
              s(:hash,
                s(:pair,
                  s(:sym, :f),
                  s(:int, 5))),
              s(:int, 2),
              s(:hash)),
            s(:send,
              s(:send,
                s(:lvar, :a), :new), :foo,
              s(:int, 1),
              s(:int, 2),
              s(:hash,
                s(:pair,
                  s(:sym, :f),
                  s(:int, 5)))),
            s(:lvar, :bug8993)))),
      s(:def, :test_splat_keyword_nondestructive,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug9776,
            s(:str, "[ruby-core:62161] [Bug #9776]")),
          s(:lvasgn, :h,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1)),
              s(:pair,
                s(:sym, :b),
                s(:int, 2))),
            s(:hash,
              s(:kwsplat,
                s(:lvar, :h)),
              s(:pair,
                s(:sym, :b),
                s(:int, 2)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1))),
            s(:lvar, :h),
            s(:lvar, :bug9776)),
          s(:lvasgn, :pr,
            s(:block,
              s(:send, nil, :proc),
              s(:args,
                s(:kwrestarg, :opt)),
              s(:next,
                s(:lvar, :opt)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1))),
            s(:send,
              s(:lvar, :pr), :call,
              s(:hash,
                s(:kwsplat,
                  s(:lvar, :h))))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1)),
              s(:pair,
                s(:sym, :b),
                s(:int, 2))),
            s(:send,
              s(:lvar, :pr), :call,
              s(:hash,
                s(:kwsplat,
                  s(:lvar, :h)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 2))))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1))),
            s(:lvar, :h),
            s(:lvar, :bug9776)))),
      s(:def, :test_splat_hash_conversion,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug9898,
            s(:str, "[ruby-core:62921] [Bug #9898]")),
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:defs,
            s(:lvar, :o), :to_hash,
            s(:args),
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1))),
            s(:block,
              s(:send, nil, :m1,
                s(:hash,
                  s(:kwsplat,
                    s(:lvar, :o)))),
              s(:args,
                s(:arg, :x)),
              s(:break,
                s(:lvar, :x))),
            s(:lvar, :bug9898)),
          s(:lvasgn, :o2,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:defs,
            s(:lvar, :o2), :to_hash,
            s(:args),
            s(:hash,
              s(:pair,
                s(:sym, :b),
                s(:int, 2)))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1)),
              s(:pair,
                s(:sym, :b),
                s(:int, 2))),
            s(:block,
              s(:send, nil, :m1,
                s(:hash,
                  s(:kwsplat,
                    s(:lvar, :o)),
                  s(:kwsplat,
                    s(:lvar, :o2)))),
              s(:args,
                s(:arg, :x)),
              s(:break,
                s(:lvar, :x))),
            s(:lvar, :bug9898)))),
      s(:def, :test_implicit_hash_conversion,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug10016,
            s(:str, "[ruby-core:63593] [Bug #10016]")),
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:defs,
            s(:lvar, :o), :to_hash,
            s(:args),
            s(:hash,
              s(:pair,
                s(:sym, :k),
                s(:int, 9)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 42),
              s(:array),
              s(:lvar, :o),
              s(:sym, :key),
              s(:hash),
              s(:nil)),
            s(:send, nil, :f9,
              s(:int, 1),
              s(:lvar, :o))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 9)),
            s(:block,
              s(:send, nil, :m1,
                s(:int, 1),
                s(:lvar, :o)),
              s(:args,
                s(:arg, :a),
                s(:kwoptarg, :k,
                  s(:int, 0))),
              s(:break,
                s(:array,
                  s(:lvar, :a),
                  s(:lvar, :k)))),
            s(:lvar, :bug10016)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 1),
              s(:int, 9)),
            s(:send, nil, :m1,
              s(:int, 1),
              s(:lvar, :o),
              s(:block_pass,
                s(:block,
                  s(:send, nil, :lambda),
                  s(:args,
                    s(:arg, :a),
                    s(:kwoptarg, :k,
                      s(:int, 0))),
                  s(:break,
                    s(:array,
                      s(:lvar, :a),
                      s(:lvar, :k)))))),
            s(:lvar, :bug10016)))),
      s(:def, :test_gced_object_in_stack,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug8964,
            s(:str, "[ruby-dev:47729] [Bug #8964]")),
          s(:send, nil, :assert_normal_exit,
            s(:dstr,
              s(:str, "\n"),
              s(:str, "      def m(a: [])\n"),
              s(:str, "      end\n"),
              s(:str, "      GC.stress = true\n"),
              s(:str, "      tap { m }\n"),
              s(:str, "      GC.start\n"),
              s(:str, "      tap { m }\n"),
              s(:str, "    ")),
            s(:lvar, :bug8964)),
          s(:send, nil, :assert_normal_exit,
            s(:dstr,
              s(:str, "\n"),
              s(:str, "      prc = Proc.new {|a: []|}\n"),
              s(:str, "      GC.stress = true\n"),
              s(:str, "      tap { prc.call }\n"),
              s(:str, "      GC.start\n"),
              s(:str, "      tap { prc.call }\n"),
              s(:str, "    ")),
            s(:lvar, :bug8964)))),
      s(:def, :test_dynamic_symbol_keyword,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug10266,
            s(:str, "[ruby-dev:48564] [Bug #10266]")),
          s(:send, nil, :assert_separately,
            s(:array,
              s(:str, "-"),
              s(:lvar, :bug10266)),
            s(:dstr,
              s(:str, "      bug = ARGV.shift\n"),
              s(:str, "      \"hoge\".to_sym\n"),
              s(:str, "      assert_nothing_raised(bug) {eval(\"def a(hoge:); end\")}\n"))))),
      s(:def, :test_unknown_keyword_with_block,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug10413,
            s(:str, "[ruby-core:65837] [Bug #10413]")),
          s(:sclass,
            s(:begin,
              s(:lvasgn, :o,
                s(:send,
                  s(:const, nil, :Object), :new))),
            s(:begin,
              s(:def, :bar,
                s(:args,
                  s(:kwoptarg, :k2,
                    s(:str, "v2"))), nil),
              s(:def, :foo,
                s(:args),
                s(:send, nil, :bar,
                  s(:hash,
                    s(:pair,
                      s(:sym, :k1),
                      s(:int, 1))))))),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "unknown keyword: k1"),
                s(:regopt)),
              s(:lvar, :bug10413)),
            s(:args),
            s(:block,
              s(:send,
                s(:lvar, :o), :foo),
              s(:args),
              s(:send, nil, :raise,
                s(:str, "unreachable")))))),
      s(:def, :test_super_with_anon_restkeywords,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug10659,
            s(:str, "[ruby-core:67157] [Bug #10659]")),
          s(:lvasgn, :foo,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new),
              s(:args),
              s(:def, :foo,
                s(:args,
                  s(:kwrestarg, :h)),
                s(:lvar, :h)))),
          s(:sclass,
            s(:begin,
              s(:lvasgn, :obj,
                s(:send,
                  s(:lvar, :foo), :new))),
            s(:def, :foo,
              s(:args,
                s(:kwoptarg, :bar,
                  s(:str, "bar")),
                s(:kwrestarg)),
              s(:zsuper))),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :TypeError),
              s(:lvar, :bug10659)),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:hash,
                s(:pair,
                  s(:sym, :bar),
                  s(:str, "bar"))),
              s(:send,
                s(:lvar, :obj), :foo),
              s(:lvar, :bug10659))))),
      s(:def, :m,
        s(:args,
          s(:arg, :a)),
        s(:yield,
          s(:lvar, :a))),
      s(:def, :test_nonsymbol_key,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:block,
              s(:send, nil, :m,
                s(:array,
                  s(:hash,
                    s(:pair,
                      s(:str, "a"),
                      s(:int, 10))))),
              s(:args,
                s(:optarg, :a,
                  s(:nil)),
                s(:kwrestarg, :b)),
              s(:array,
                s(:lvar, :a),
                s(:lvar, :b)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:str, "a"),
                  s(:int, 10))),
              s(:hash)),
            s(:lvar, :result)))),
      s(:def, :method_for_test_to_hash_call_during_setup_complex_parameters,
        s(:args,
          s(:kwarg, :k1),
          s(:kwarg, :k2),
          s(:kwrestarg, :rest_kw)),
        s(:array,
          s(:lvar, :k1),
          s(:lvar, :k2),
          s(:lvar, :rest_kw))),
      s(:def, :test_to_hash_call_during_setup_complex_parameters,
        s(:args),
        s(:begin,
          s(:lvasgn, :sym,
            s(:send,
              s(:dstr,
                s(:str, "sym_"),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Time), :now))), :to_sym)),
          s(:lvasgn, :h,
            s(:send, nil, :method_for_test_to_hash_call_during_setup_complex_parameters,
              s(:hash,
                s(:pair,
                  s(:sym, :k1),
                  s(:str, "foo")),
                s(:pair,
                  s(:sym, :k2),
                  s(:str, "bar")),
                s(:pair,
                  s(:lvar, :sym),
                  s(:str, "baz"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar"),
              s(:hash,
                s(:pair,
                  s(:lvar, :sym),
                  s(:str, "baz")))),
            s(:lvar, :h),
            s(:str, "[Bug #11027]")))),
      s(:class,
        s(:const, nil, :AttrSetTest), nil,
        s(:begin,
          s(:send, nil, :attr_accessor,
            s(:sym, :foo)),
          s(:alias,
            s(:sym, :set_foo),
            s(:sym, :foo=)))),
      s(:def, :test_attr_set_method_cache,
        s(:args),
        s(:begin,
          s(:lvasgn, :obj,
            s(:send,
              s(:const, nil, :AttrSetTest), :new)),
          s(:lvasgn, :h,
            s(:hash,
              s(:pair,
                s(:sym, :a),
                s(:int, 1)),
              s(:pair,
                s(:sym, :b),
                s(:int, 2)))),
          s(:block,
            s(:send,
              s(:int, 2), :times),
            s(:args),
            s(:begin,
              s(:send,
                s(:lvar, :obj), :foo=,
                s(:int, 1)),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:lvar, :obj), :foo)),
              s(:send,
                s(:lvar, :obj), :set_foo,
                s(:int, 2)),
              s(:send, nil, :assert_equal,
                s(:int, 2),
                s(:send,
                  s(:lvar, :obj), :foo)),
              s(:send,
                s(:lvar, :obj), :set_foo,
                s(:hash,
                  s(:pair,
                    s(:sym, :x),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :y),
                    s(:int, 2)))),
              s(:send, nil, :assert_equal,
                s(:hash,
                  s(:pair,
                    s(:sym, :x),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :y),
                    s(:int, 2))),
                s(:send,
                  s(:lvar, :obj), :foo)),
              s(:send,
                s(:lvar, :obj), :set_foo,
                s(:hash,
                  s(:pair,
                    s(:sym, :x),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :y),
                    s(:int, 2)),
                  s(:kwsplat,
                    s(:lvar, :h)))),
              s(:send, nil, :assert_equal,
                s(:hash,
                  s(:pair,
                    s(:sym, :x),
                    s(:int, 1)),
                  s(:pair,
                    s(:sym, :y),
                    s(:int, 2)),
                  s(:kwsplat,
                    s(:lvar, :h))),
                s(:send,
                  s(:lvar, :obj), :foo)))))))))
