s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require_relative,
    s(:str, "allpairs")),
  s(:class,
    s(:const, nil, :TestSprintfComb),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :VS,
        s(:array,
          s(:int, -18446744073709551618),
          s(:int, -18446744073709551617),
          s(:int, -18446744073709551616),
          s(:int, -18446744073709551615),
          s(:int, -4611686018427387906),
          s(:int, -4611686018427387905),
          s(:int, -4611686018427387904),
          s(:int, -4611686018427387903),
          s(:int, -4294967298),
          s(:int, -4294967297),
          s(:int, -4294967296),
          s(:int, -4294967295),
          s(:int, -2147483650),
          s(:int, -2147483649),
          s(:int, -2147483648),
          s(:int, -2147483647),
          s(:int, -1073741826),
          s(:int, -1073741825),
          s(:int, -1073741824),
          s(:int, -1073741823),
          s(:int, -3),
          s(:int, -2),
          s(:int, -1),
          s(:int, 0),
          s(:int, 1),
          s(:int, 2),
          s(:int, 3),
          s(:int, 1073741822),
          s(:int, 1073741823),
          s(:int, 1073741824),
          s(:int, 1073741825),
          s(:int, 2147483646),
          s(:int, 2147483647),
          s(:int, 2147483648),
          s(:int, 2147483649),
          s(:int, 4294967294),
          s(:int, 4294967295),
          s(:int, 4294967296),
          s(:int, 4294967297),
          s(:int, 4611686018427387902),
          s(:int, 4611686018427387903),
          s(:int, 4611686018427387904),
          s(:int, 4611686018427387905),
          s(:int, 18446744073709551614),
          s(:int, 18446744073709551615),
          s(:int, 18446744073709551616),
          s(:int, 18446744073709551617))),
      s(:send,
        s(:const, nil, :VS), :reverse!),
      s(:casgn, nil, :FLAGS,
        s(:array,
          s(:array,
            s(:str, ""),
            s(:str, " ")),
          s(:array,
            s(:str, ""),
            s(:str, "#")),
          s(:array,
            s(:str, ""),
            s(:str, "+")),
          s(:array,
            s(:str, ""),
            s(:str, "-")),
          s(:array,
            s(:str, ""),
            s(:str, "0")))),
      s(:defs,
        s(:self), :combination,
        s(:args,
          s(:restarg, :args),
          s(:blockarg, :b)),
        s(:send,
          s(:const, nil, :AllPairs), :each,
          s(:splat,
            s(:lvar, :args)),
          s(:block_pass,
            s(:lvar, :b)))),
      s(:def, :emu_int,
        s(:args,
          s(:arg, :format),
          s(:arg, :v)),
        s(:begin,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "\\A%( )?(\\#)?(\\+)?(-)?(0)?(\\d+)?(?:\\.(\\d*))?(.)\\z"),
              s(:regopt)),
            s(:lvar, :format)),
          s(:lvasgn, :sp,
            s(:nth_ref, 1)),
          s(:lvasgn, :hs,
            s(:nth_ref, 2)),
          s(:lvasgn, :pl,
            s(:nth_ref, 3)),
          s(:lvasgn, :mi,
            s(:nth_ref, 4)),
          s(:lvasgn, :zr,
            s(:nth_ref, 5)),
          s(:lvasgn, :width,
            s(:nth_ref, 6)),
          s(:lvasgn, :precision,
            s(:nth_ref, 7)),
          s(:lvasgn, :type,
            s(:nth_ref, 8)),
          s(:if,
            s(:lvar, :width),
            s(:lvasgn, :width,
              s(:send,
                s(:lvar, :width), :to_i)), nil),
          s(:if,
            s(:lvar, :precision),
            s(:lvasgn, :precision,
              s(:send,
                s(:lvar, :precision), :to_i)), nil),
          s(:lvasgn, :prefix,
            s(:str, "")),
          s(:if,
            s(:lvar, :precision),
            s(:lvasgn, :zr,
              s(:nil)), nil),
          s(:if,
            s(:and,
              s(:lvar, :mi),
              s(:lvar, :zr)),
            s(:lvasgn, :zr,
              s(:nil)), nil),
          s(:case,
            s(:lvar, :type),
            s(:when,
              s(:str, "B"),
              s(:begin,
                s(:lvasgn, :radix,
                  s(:int, 2)),
                s(:lvasgn, :digitmap,
                  s(:hash,
                    s(:pair,
                      s(:int, 0),
                      s(:str, "0")),
                    s(:pair,
                      s(:int, 1),
                      s(:str, "1")))),
                s(:lvasgn, :complement,
                  s(:and,
                    s(:send,
                      s(:lvar, :pl), :!),
                    s(:send,
                      s(:lvar, :sp), :!))),
                s(:if,
                  s(:and,
                    s(:lvar, :hs),
                    s(:send,
                      s(:lvar, :v), :!=,
                      s(:int, 0))),
                  s(:lvasgn, :prefix,
                    s(:str, "0B")), nil))),
            s(:when,
              s(:str, "b"),
              s(:begin,
                s(:lvasgn, :radix,
                  s(:int, 2)),
                s(:lvasgn, :digitmap,
                  s(:hash,
                    s(:pair,
                      s(:int, 0),
                      s(:str, "0")),
                    s(:pair,
                      s(:int, 1),
                      s(:str, "1")))),
                s(:lvasgn, :complement,
                  s(:and,
                    s(:send,
                      s(:lvar, :pl), :!),
                    s(:send,
                      s(:lvar, :sp), :!))),
                s(:if,
                  s(:and,
                    s(:lvar, :hs),
                    s(:send,
                      s(:lvar, :v), :!=,
                      s(:int, 0))),
                  s(:lvasgn, :prefix,
                    s(:str, "0b")), nil))),
            s(:when,
              s(:str, "d"),
              s(:begin,
                s(:lvasgn, :radix,
                  s(:int, 10)),
                s(:lvasgn, :digitmap,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:int, 10), :times),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :digitmap), :[]=,
                    s(:lvar, :i),
                    s(:send,
                      s(:lvar, :i), :to_s))),
                s(:lvasgn, :complement,
                  s(:false)))),
            s(:when,
              s(:str, "o"),
              s(:begin,
                s(:lvasgn, :radix,
                  s(:int, 8)),
                s(:lvasgn, :digitmap,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:int, 8), :times),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :digitmap), :[]=,
                    s(:lvar, :i),
                    s(:send,
                      s(:lvar, :i), :to_s))),
                s(:lvasgn, :complement,
                  s(:and,
                    s(:send,
                      s(:lvar, :pl), :!),
                    s(:send,
                      s(:lvar, :sp), :!))))),
            s(:when,
              s(:str, "X"),
              s(:begin,
                s(:lvasgn, :radix,
                  s(:int, 16)),
                s(:lvasgn, :digitmap,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:int, 16), :times),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :digitmap), :[]=,
                    s(:lvar, :i),
                    s(:send,
                      s(:send,
                        s(:lvar, :i), :to_s,
                        s(:int, 16)), :upcase))),
                s(:lvasgn, :complement,
                  s(:and,
                    s(:send,
                      s(:lvar, :pl), :!),
                    s(:send,
                      s(:lvar, :sp), :!))),
                s(:if,
                  s(:and,
                    s(:lvar, :hs),
                    s(:send,
                      s(:lvar, :v), :!=,
                      s(:int, 0))),
                  s(:lvasgn, :prefix,
                    s(:str, "0X")), nil))),
            s(:when,
              s(:str, "x"),
              s(:begin,
                s(:lvasgn, :radix,
                  s(:int, 16)),
                s(:lvasgn, :digitmap,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:int, 16), :times),
                  s(:args,
                    s(:arg, :i)),
                  s(:send,
                    s(:lvar, :digitmap), :[]=,
                    s(:lvar, :i),
                    s(:send,
                      s(:lvar, :i), :to_s,
                      s(:int, 16)))),
                s(:lvasgn, :complement,
                  s(:and,
                    s(:send,
                      s(:lvar, :pl), :!),
                    s(:send,
                      s(:lvar, :sp), :!))),
                s(:if,
                  s(:and,
                    s(:lvar, :hs),
                    s(:send,
                      s(:lvar, :v), :!=,
                      s(:int, 0))),
                  s(:lvasgn, :prefix,
                    s(:str, "0x")), nil))),
            s(:send, nil, :raise,
              s(:dstr,
                s(:str, "unexpected type: "),
                s(:begin,
                  s(:send,
                    s(:lvar, :type), :inspect))))),
          s(:lvasgn, :digits,
            s(:array)),
          s(:lvasgn, :abs,
            s(:send,
              s(:lvar, :v), :abs)),
          s(:lvasgn, :sign,
            s(:str, "")),
          s(:while,
            s(:send,
              s(:int, 0), :<,
              s(:lvar, :abs)),
            s(:begin,
              s(:send,
                s(:lvar, :digits), :<<,
                s(:begin,
                  s(:send,
                    s(:lvar, :abs), :%,
                    s(:lvar, :radix)))),
              s(:op_asgn,
                s(:lvasgn, :abs), :/,
                s(:lvar, :radix)))),
          s(:if,
            s(:send,
              s(:lvar, :v), :<,
              s(:int, 0)),
            s(:if,
              s(:lvar, :complement),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :digits), :map!),
                  s(:args,
                    s(:arg, :d)),
                  s(:send,
                    s(:send,
                      s(:lvar, :radix), :-,
                      s(:int, 1)), :-,
                    s(:lvar, :d))),
                s(:lvasgn, :carry,
                  s(:int, 1)),
                s(:block,
                  s(:send,
                    s(:lvar, :digits), :each_index),
                  s(:args,
                    s(:arg, :i)),
                  s(:begin,
                    s(:op_asgn,
                      s(:send,
                        s(:lvar, :digits), :[],
                        s(:lvar, :i)), :+,
                      s(:lvar, :carry)),
                    s(:lvasgn, :carry,
                      s(:int, 0)),
                    s(:if,
                      s(:send,
                        s(:lvar, :radix), :<=,
                        s(:send,
                          s(:lvar, :digits), :[],
                          s(:lvar, :i))),
                      s(:begin,
                        s(:op_asgn,
                          s(:send,
                            s(:lvar, :digits), :[],
                            s(:lvar, :i)), :-,
                          s(:lvar, :radix)),
                        s(:lvasgn, :carry,
                          s(:int, 1))), nil))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :digits), :last), :!=,
                    s(:send,
                      s(:lvar, :radix), :-,
                      s(:int, 1))),
                  s(:send,
                    s(:lvar, :digits), :<<,
                    s(:begin,
                      s(:send,
                        s(:lvar, :radix), :-,
                        s(:int, 1)))), nil),
                s(:lvasgn, :sign,
                  s(:str, ".."))),
              s(:lvasgn, :sign,
                s(:str, "-"))),
            s(:if,
              s(:lvar, :pl),
              s(:lvasgn, :sign,
                s(:str, "+")),
              s(:if,
                s(:lvar, :sp),
                s(:lvasgn, :sign,
                  s(:str, " ")), nil))),
          s(:lvasgn, :dlen,
            s(:send,
              s(:lvar, :digits), :length)),
          s(:if,
            s(:send,
              s(:lvar, :sign), :==,
              s(:str, "..")),
            s(:op_asgn,
              s(:lvasgn, :dlen), :+,
              s(:int, 2)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :v), :<,
                s(:int, 0)),
              s(:lvar, :complement)),
            s(:lvasgn, :d,
              s(:send,
                s(:lvar, :radix), :-,
                s(:int, 1))),
            s(:lvasgn, :d,
              s(:int, 0))),
          s(:if,
            s(:lvar, :precision),
            s(:if,
              s(:send,
                s(:lvar, :dlen), :<,
                s(:lvar, :precision)),
              s(:block,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :precision), :-,
                      s(:lvar, :dlen))), :times),
                s(:args),
                s(:send,
                  s(:lvar, :digits), :<<,
                  s(:lvar, :d))), nil),
            s(:if,
              s(:send,
                s(:lvar, :dlen), :==,
                s(:int, 0)),
              s(:send,
                s(:lvar, :digits), :<<,
                s(:lvar, :d)), nil)),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :type), :==,
                s(:str, "o")),
              s(:lvar, :hs)),
            s(:if,
              s(:or,
                s(:send,
                  s(:lvar, :digits), :empty?),
                s(:send,
                  s(:send,
                    s(:lvar, :digits), :last), :!=,
                  s(:lvar, :d))),
              s(:send,
                s(:lvar, :digits), :<<,
                s(:lvar, :d)), nil), nil),
          s(:send,
            s(:lvar, :digits), :reverse!),
          s(:lvasgn, :str,
            s(:send,
              s(:block,
                s(:send,
                  s(:lvar, :digits), :map),
                s(:args,
                  s(:arg, :digit)),
                s(:send,
                  s(:lvar, :digitmap), :[],
                  s(:lvar, :digit))), :join)),
          s(:lvasgn, :pad,
            s(:str, "")),
          s(:lvasgn, :nlen,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :prefix), :length), :+,
                s(:send,
                  s(:lvar, :sign), :length)), :+,
              s(:send,
                s(:lvar, :str), :length))),
          s(:if,
            s(:and,
              s(:lvar, :width),
              s(:send,
                s(:lvar, :nlen), :<,
                s(:lvar, :width))),
            s(:begin,
              s(:lvasgn, :len,
                s(:send,
                  s(:lvar, :width), :-,
                  s(:lvar, :nlen))),
              s(:if,
                s(:lvar, :zr),
                s(:if,
                  s(:and,
                    s(:lvar, :complement),
                    s(:send,
                      s(:lvar, :v), :<,
                      s(:int, 0))),
                  s(:lvasgn, :pad,
                    s(:send,
                      s(:send,
                        s(:lvar, :digitmap), :[],
                        s(:send,
                          s(:lvar, :radix), :-,
                          s(:int, 1))), :*,
                      s(:lvar, :len))),
                  s(:lvasgn, :pad,
                    s(:send,
                      s(:str, "0"), :*,
                      s(:lvar, :len)))),
                s(:lvasgn, :pad,
                  s(:send,
                    s(:str, " "), :*,
                    s(:lvar, :len))))), nil),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, " "),
                s(:regopt)),
              s(:lvar, :pad)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :sign), :==,
                  s(:str, "..")),
                s(:lvasgn, :str,
                  s(:send,
                    s(:send,
                      s(:lvar, :prefix), :+,
                      s(:lvar, :sign)), :+,
                    s(:lvar, :str))),
                s(:lvasgn, :str,
                  s(:send,
                    s(:send,
                      s(:lvar, :sign), :+,
                      s(:lvar, :prefix)), :+,
                    s(:lvar, :str)))),
              s(:if,
                s(:lvar, :mi),
                s(:lvasgn, :str,
                  s(:send,
                    s(:lvar, :str), :+,
                    s(:lvar, :pad))),
                s(:lvasgn, :str,
                  s(:send,
                    s(:lvar, :pad), :+,
                    s(:lvar, :str))))),
            s(:if,
              s(:send,
                s(:lvar, :sign), :==,
                s(:str, "..")),
              s(:lvasgn, :str,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :prefix), :+,
                      s(:lvar, :sign)), :+,
                    s(:lvar, :pad)), :+,
                  s(:lvar, :str))),
              s(:lvasgn, :str,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :sign), :+,
                      s(:lvar, :prefix)), :+,
                    s(:lvar, :pad)), :+,
                  s(:lvar, :str))))),
          s(:lvar, :str))),
      s(:defs,
        s(:self), :assertions_format_integer,
        s(:args,
          s(:arg, :format)),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :VS), :each),
            s(:args,
              s(:arg, :v)),
            s(:begin,
              s(:lvasgn, :r,
                s(:send, nil, :sprintf,
                  s(:lvar, :format),
                  s(:lvar, :v))),
              s(:lvasgn, :e,
                s(:send, nil, :emu_int,
                  s(:lvar, :format),
                  s(:lvar, :v))),
              s(:if,
                s(:true),
                s(:send, nil, :assert_equal,
                  s(:lvar, :e),
                  s(:lvar, :r),
                  s(:dstr,
                    s(:str, "sprintf("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :format), :dump)),
                    s(:str, ", "),
                    s(:begin,
                      s(:lvar, :v)),
                    s(:str, ")"))),
                s(:if,
                  s(:send,
                    s(:lvar, :e), :!=,
                    s(:lvar, :r)),
                  s(:send, nil, :puts,
                    s(:dstr,
                      s(:begin,
                        s(:send,
                          s(:lvar, :e), :dump)),
                      s(:str, "\t"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :r), :dump)),
                      s(:str, "\tsprintf("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :format), :dump)),
                      s(:str, ", "),
                      s(:begin,
                        s(:lvar, :v)),
                      s(:str, ")"))), nil)))))),
      s(:block,
        s(:send, nil, :combination,
          s(:array,
            s(:str, "B"),
            s(:str, "b"),
            s(:str, "d"),
            s(:str, "o"),
            s(:str, "X"),
            s(:str, "x")),
          s(:array,
            s(:nil),
            s(:int, 0),
            s(:int, 5),
            s(:int, 20)),
          s(:array,
            s(:str, ""),
            s(:str, "."),
            s(:str, ".0"),
            s(:str, ".8"),
            s(:str, ".20")),
          s(:splat,
            s(:const, nil, :FLAGS))),
        s(:args,
          s(:arg, :type),
          s(:arg, :width),
          s(:arg, :precision),
          s(:arg, :sp),
          s(:arg, :hs),
          s(:arg, :pl),
          s(:arg, :mi),
          s(:arg, :zr)),
        s(:begin,
          s(:lvasgn, :format,
            s(:dstr,
              s(:str, "%"),
              s(:begin,
                s(:lvar, :sp)),
              s(:begin,
                s(:lvar, :hs)),
              s(:begin,
                s(:lvar, :pl)),
              s(:begin,
                s(:lvar, :mi)),
              s(:begin,
                s(:lvar, :zr)),
              s(:begin,
                s(:lvar, :width)),
              s(:begin,
                s(:lvar, :precision)),
              s(:begin,
                s(:lvar, :type)))),
          s(:send, nil, :define_method,
            s(:dstr,
              s(:str, "test_format_integer("),
              s(:begin,
                s(:lvar, :format)),
              s(:str, ")")),
            s(:send, nil, :assertions_format_integer,
              s(:lvar, :format))))),
      s(:casgn, nil, :FLOAT_VALUES,
        s(:array,
          s(:float, -1.0e+100),
          s(:float, -123456789.0),
          s(:float, -1.0),
          s(:float, -0.0),
          s(:float, 0.0),
          s(:float, 0.01),
          s(:send,
            s(:int, 1), :/,
            s(:float, 3.0)),
          s(:send,
            s(:int, 2), :/,
            s(:float, 3.0)),
          s(:float, 1.0),
          s(:float, 2.0),
          s(:float, 9.99999999),
          s(:float, 123456789.0),
          s(:float, 1.0e+100),
          s(:const,
            s(:const, nil, :Float), :MAX),
          s(:const,
            s(:const, nil, :Float), :MIN),
          s(:const,
            s(:const, nil, :Float), :EPSILON),
          s(:send,
            s(:int, 1), :+,
            s(:const,
              s(:const, nil, :Float), :EPSILON)),
          s(:send,
            s(:int, 10), :+,
            s(:send,
              s(:const,
                s(:const, nil, :Float), :EPSILON), :*,
              s(:int, 10))),
          s(:send,
            s(:int, 10), :-,
            s(:send,
              s(:const,
                s(:const, nil, :Float), :EPSILON), :*,
              s(:int, 5))),
          s(:send,
            s(:float, 1.0), :/,
            s(:float, 0.0)),
          s(:send,
            s(:float, -1.0), :/,
            s(:float, 0.0)),
          s(:send,
            s(:float, 0.0), :/,
            s(:float, 0.0)))),
      s(:def, :split_float10,
        s(:args,
          s(:arg, :v)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :v), :==,
              s(:int, 0)),
            s(:if,
              s(:send,
                s(:send,
                  s(:int, 1), :/,
                  s(:lvar, :v)), :<,
                s(:int, 0)),
              s(:begin,
                s(:lvasgn, :sign,
                  s(:int, -1)),
                s(:lvasgn, :v,
                  s(:send,
                    s(:lvar, :v), :-@))),
              s(:lvasgn, :sign,
                s(:int, 1))),
            s(:if,
              s(:send,
                s(:lvar, :v), :<,
                s(:int, 0)),
              s(:begin,
                s(:lvasgn, :sign,
                  s(:int, -1)),
                s(:lvasgn, :v,
                  s(:send,
                    s(:lvar, :v), :-@))),
              s(:lvasgn, :sign,
                s(:int, 1)))),
          s(:lvasgn, :exp,
            s(:int, 0)),
          s(:lvasgn, :int,
            s(:send,
              s(:lvar, :v), :floor)),
          s(:op_asgn,
            s(:lvasgn, :v), :-,
            s(:lvar, :int)),
          s(:while,
            s(:send,
              s(:lvar, :v), :!=,
              s(:int, 0)),
            s(:begin,
              s(:op_asgn,
                s(:lvasgn, :v), :*,
                s(:int, 2)),
              s(:op_asgn,
                s(:lvasgn, :int), :*,
                s(:int, 2)),
              s(:lvasgn, :i,
                s(:send,
                  s(:lvar, :v), :floor)),
              s(:op_asgn,
                s(:lvasgn, :v), :-,
                s(:lvar, :i)),
              s(:op_asgn,
                s(:lvasgn, :int), :+,
                s(:lvar, :i)),
              s(:op_asgn,
                s(:lvasgn, :exp), :-,
                s(:int, 1)))),
          s(:op_asgn,
            s(:lvasgn, :int), :*,
            s(:send,
              s(:int, 5), :**,
              s(:begin,
                s(:send,
                  s(:lvar, :exp), :-@)))),
          s(:array,
            s(:lvar, :sign),
            s(:lvar, :int),
            s(:lvar, :exp)))),
      s(:def, :emu_e,
        s(:args,
          s(:arg, :sp),
          s(:arg, :hs),
          s(:arg, :pl),
          s(:arg, :mi),
          s(:arg, :zr),
          s(:arg, :width),
          s(:arg, :precision),
          s(:arg, :type),
          s(:arg, :v),
          s(:arg, :sign),
          s(:arg, :int),
          s(:arg, :exp)),
        s(:begin,
          s(:if,
            s(:lvar, :precision), nil,
            s(:lvasgn, :precision,
              s(:int, 6))),
          s(:if,
            s(:send,
              s(:lvar, :int), :==,
              s(:int, 0)),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :precision), :==,
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :hs), :!)),
              s(:lvasgn, :result,
                s(:dstr,
                  s(:str, "0"),
                  s(:begin,
                    s(:lvar, :type)),
                  s(:str, "+00"))),
              s(:lvasgn, :result,
                s(:send,
                  s(:send,
                    s(:str, "0."), :+,
                    s(:send,
                      s(:str, "0"), :*,
                      s(:lvar, :precision))), :+,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :type)),
                    s(:str, "+00"))))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :int), :<,
                  s(:send,
                    s(:int, 10), :**,
                    s(:lvar, :precision))),
                s(:begin,
                  s(:op_asgn,
                    s(:lvasgn, :int), :*,
                    s(:send,
                      s(:int, 10), :**,
                      s(:lvar, :precision))),
                  s(:op_asgn,
                    s(:lvasgn, :exp), :-,
                    s(:lvar, :precision))), nil),
              s(:lvasgn, :digits,
                s(:send,
                  s(:send,
                    s(:lvar, :int), :to_s), :length)),
              s(:lvasgn, :discard,
                s(:send,
                  s(:lvar, :digits), :-,
                  s(:begin,
                    s(:send,
                      s(:lvar, :precision), :+,
                      s(:int, 1))))),
              s(:if,
                s(:send,
                  s(:lvar, :discard), :!=,
                  s(:int, 0)),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :q),
                      s(:lvasgn, :r)),
                    s(:send,
                      s(:lvar, :int), :divmod,
                      s(:send,
                        s(:int, 10), :**,
                        s(:lvar, :discard)))),
                  s(:if,
                    s(:send,
                      s(:lvar, :r), :<,
                      s(:send,
                        s(:send,
                          s(:int, 10), :**,
                          s(:lvar, :discard)), :/,
                        s(:int, 2))),
                    s(:begin,
                      s(:lvasgn, :int,
                        s(:lvar, :q)),
                      s(:op_asgn,
                        s(:lvasgn, :exp), :+,
                        s(:lvar, :discard))),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:lvar, :q), :+,
                                s(:int, 1))), :to_s), :length), :==,
                        s(:send,
                          s(:send,
                            s(:lvar, :q), :to_s), :length)),
                      s(:begin,
                        s(:lvasgn, :int,
                          s(:send,
                            s(:lvar, :q), :+,
                            s(:int, 1))),
                        s(:op_asgn,
                          s(:lvasgn, :exp), :+,
                          s(:lvar, :discard))),
                      s(:begin,
                        s(:op_asgn,
                          s(:lvasgn, :discard), :+,
                          s(:int, 1)),
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :q),
                            s(:lvasgn, :r)),
                          s(:send,
                            s(:lvar, :int), :divmod,
                            s(:send,
                              s(:int, 10), :**,
                              s(:lvar, :discard)))),
                        s(:lvasgn, :int,
                          s(:send,
                            s(:lvar, :q), :+,
                            s(:int, 1))),
                        s(:op_asgn,
                          s(:lvasgn, :exp), :+,
                          s(:lvar, :discard)))))), nil),
              s(:lvasgn, :ints,
                s(:send,
                  s(:lvar, :int), :to_s)),
              s(:lvasgn, :frac,
                s(:send,
                  s(:lvar, :ints), :[],
                  s(:irange,
                    s(:int, 1),
                    s(:int, -1)))),
              s(:lvasgn, :result,
                s(:send,
                  s(:lvar, :ints), :[],
                  s(:int, 0),
                  s(:int, 1))),
              s(:lvasgn, :e,
                s(:send,
                  s(:lvar, :exp), :+,
                  s(:send,
                    s(:lvar, :frac), :length))),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :precision), :!=,
                    s(:int, 0)),
                  s(:lvar, :hs)),
                s(:begin,
                  s(:send,
                    s(:lvar, :result), :<<,
                    s(:str, ".")),
                  s(:if,
                    s(:send,
                      s(:lvar, :precision), :!=,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :result), :<<,
                      s(:lvar, :frac)), nil)), nil),
              s(:send,
                s(:lvar, :result), :<<,
                s(:lvar, :type)),
              s(:if,
                s(:send,
                  s(:lvar, :e), :==,
                  s(:int, 0)),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :v), :abs), :<,
                    s(:int, 1)),
                  s(:send,
                    s(:lvar, :result), :<<,
                    s(:str, "-00")),
                  s(:send,
                    s(:lvar, :result), :<<,
                    s(:str, "+00"))),
                s(:send,
                  s(:lvar, :result), :<<,
                  s(:send, nil, :sprintf,
                    s(:str, "%+03d"),
                    s(:lvar, :e)))),
              s(:lvar, :result))),
          s(:lvar, :result))),
      s(:def, :emu_f,
        s(:args,
          s(:arg, :sp),
          s(:arg, :hs),
          s(:arg, :pl),
          s(:arg, :mi),
          s(:arg, :zr),
          s(:arg, :width),
          s(:arg, :precision),
          s(:arg, :type),
          s(:arg, :sign),
          s(:arg, :int),
          s(:arg, :exp)),
        s(:begin,
          s(:if,
            s(:lvar, :precision), nil,
            s(:lvasgn, :precision,
              s(:int, 6))),
          s(:if,
            s(:send,
              s(:lvar, :int), :==,
              s(:int, 0)),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :precision), :==,
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :hs), :!)),
              s(:lvasgn, :result,
                s(:str, "0")),
              s(:lvasgn, :result,
                s(:send,
                  s(:str, "0."), :+,
                  s(:send,
                    s(:str, "0"), :*,
                    s(:lvar, :precision))))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :precision), :-@), :<,
                  s(:lvar, :exp)),
                s(:begin,
                  s(:op_asgn,
                    s(:lvasgn, :int), :*,
                    s(:send,
                      s(:int, 10), :**,
                      s(:begin,
                        s(:send,
                          s(:lvar, :precision), :+,
                          s(:lvar, :exp))))),
                  s(:lvasgn, :exp,
                    s(:send,
                      s(:lvar, :precision), :-@))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :exp), :<,
                  s(:send,
                    s(:lvar, :precision), :-@)),
                s(:begin,
                  s(:lvasgn, :discard,
                    s(:send,
                      s(:send,
                        s(:lvar, :exp), :-@), :-,
                      s(:lvar, :precision))),
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :q),
                      s(:lvasgn, :r)),
                    s(:send,
                      s(:lvar, :int), :divmod,
                      s(:send,
                        s(:int, 10), :**,
                        s(:lvar, :discard)))),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:int, 10), :**,
                          s(:lvar, :discard)), :/,
                        s(:int, 2)), :<=,
                      s(:lvar, :r)),
                    s(:op_asgn,
                      s(:lvasgn, :q), :+,
                      s(:int, 1)), nil),
                  s(:lvasgn, :int,
                    s(:lvar, :q)),
                  s(:op_asgn,
                    s(:lvasgn, :exp), :+,
                    s(:lvar, :discard))), nil),
              s(:lvasgn, :result,
                s(:send,
                  s(:lvar, :int), :to_s)),
              s(:if,
                s(:send,
                  s(:send,
                    s(:lvar, :result), :length), :<=,
                  s(:lvar, :precision)),
                s(:lvasgn, :result,
                  s(:send,
                    s(:send,
                      s(:str, "0"), :*,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :precision), :+,
                            s(:int, 1)), :-,
                          s(:send,
                            s(:lvar, :result), :length)))), :+,
                    s(:lvar, :result))), nil),
              s(:if,
                s(:or,
                  s(:send,
                    s(:lvar, :precision), :!=,
                    s(:int, 0)),
                  s(:lvar, :hs)),
                s(:if,
                  s(:send,
                    s(:lvar, :precision), :==,
                    s(:int, 0)),
                  s(:send,
                    s(:lvar, :result), :<<,
                    s(:str, ".")),
                  s(:send,
                    s(:lvar, :result), :[]=,
                    s(:send,
                      s(:lvar, :precision), :-@),
                    s(:int, 0),
                    s(:str, "."))), nil))),
          s(:lvar, :result))),
      s(:def, :emu_float,
        s(:args,
          s(:arg, :format),
          s(:arg, :v)),
        s(:begin,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "\\A%( )?(\\#)?(\\+)?(-)?(0)?(\\d+)?(?:\\.(\\d*))?(.)\\z"),
              s(:regopt)),
            s(:lvar, :format)),
          s(:lvasgn, :sp,
            s(:nth_ref, 1)),
          s(:lvasgn, :hs,
            s(:nth_ref, 2)),
          s(:lvasgn, :pl,
            s(:nth_ref, 3)),
          s(:lvasgn, :mi,
            s(:nth_ref, 4)),
          s(:lvasgn, :zr,
            s(:nth_ref, 5)),
          s(:lvasgn, :width,
            s(:nth_ref, 6)),
          s(:lvasgn, :precision,
            s(:nth_ref, 7)),
          s(:lvasgn, :type,
            s(:nth_ref, 8)),
          s(:if,
            s(:lvar, :width),
            s(:lvasgn, :width,
              s(:send,
                s(:lvar, :width), :to_i)), nil),
          s(:if,
            s(:lvar, :precision),
            s(:lvasgn, :precision,
              s(:send,
                s(:lvar, :precision), :to_i)), nil),
          s(:if,
            s(:and,
              s(:lvar, :mi),
              s(:lvar, :zr)),
            s(:lvasgn, :zr,
              s(:nil)), nil),
          s(:if,
            s(:send,
              s(:lvar, :v), :infinite?),
            s(:begin,
              s(:lvasgn, :sign,
                s(:if,
                  s(:send,
                    s(:lvar, :v), :<,
                    s(:int, 0)),
                  s(:int, -1),
                  s(:int, 1))),
              s(:lvasgn, :int,
                s(:sym, :inf)),
              s(:lvasgn, :hs,
                s(:lvasgn, :zr,
                  s(:nil)))),
            s(:if,
              s(:send,
                s(:lvar, :v), :nan?),
              s(:begin,
                s(:lvasgn, :sign,
                  s(:int, 1)),
                s(:lvasgn, :int,
                  s(:sym, :nan)),
                s(:lvasgn, :hs,
                  s(:lvasgn, :zr,
                    s(:nil)))),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :sign),
                  s(:lvasgn, :int),
                  s(:lvasgn, :exp)),
                s(:send, nil, :split_float10,
                  s(:lvar, :v))))),
          s(:if,
            s(:send,
              s(:lvar, :sign), :<,
              s(:int, 0)),
            s(:lvasgn, :sign,
              s(:str, "-")),
            s(:if,
              s(:send,
                s(:lvar, :sign), :==,
                s(:int, 0)),
              s(:lvasgn, :sign,
                s(:str, "")),
              s(:if,
                s(:lvar, :pl),
                s(:lvasgn, :sign,
                  s(:str, "+")),
                s(:if,
                  s(:lvar, :sp),
                  s(:lvasgn, :sign,
                    s(:str, " ")),
                  s(:lvasgn, :sign,
                    s(:str, "")))))),
          s(:if,
            s(:send,
              s(:lvar, :v), :nan?),
            s(:lvasgn, :result,
              s(:str, "NaN")),
            s(:if,
              s(:send,
                s(:lvar, :v), :infinite?),
              s(:lvasgn, :result,
                s(:str, "Inf")),
              s(:case,
                s(:lvar, :type),
                s(:when,
                  s(:regexp,
                    s(:str, "[eE]"),
                    s(:regopt)),
                  s(:lvasgn, :result,
                    s(:send, nil, :emu_e,
                      s(:lvar, :sp),
                      s(:lvar, :hs),
                      s(:lvar, :pl),
                      s(:lvar, :mi),
                      s(:lvar, :zr),
                      s(:lvar, :width),
                      s(:lvar, :precision),
                      s(:lvar, :type),
                      s(:lvar, :v),
                      s(:lvar, :sign),
                      s(:lvar, :int),
                      s(:lvar, :exp)))),
                s(:when,
                  s(:regexp,
                    s(:str, "f"),
                    s(:regopt)),
                  s(:lvasgn, :result,
                    s(:send, nil, :emu_f,
                      s(:lvar, :sp),
                      s(:lvar, :hs),
                      s(:lvar, :pl),
                      s(:lvar, :mi),
                      s(:lvar, :zr),
                      s(:lvar, :width),
                      s(:lvar, :precision),
                      s(:lvar, :type),
                      s(:lvar, :sign),
                      s(:lvar, :int),
                      s(:lvar, :exp)))),
                s(:when,
                  s(:regexp,
                    s(:str, "[gG]"),
                    s(:regopt)),
                  s(:begin,
                    s(:if,
                      s(:lvar, :precision), nil,
                      s(:lvasgn, :precision,
                        s(:int, 6))),
                    s(:if,
                      s(:send,
                        s(:lvar, :precision), :==,
                        s(:int, 0)),
                      s(:lvasgn, :precision,
                        s(:int, 1)), nil),
                    s(:lvasgn, :r,
                      s(:send, nil, :emu_e,
                        s(:lvar, :sp),
                        s(:lvar, :hs),
                        s(:lvar, :pl),
                        s(:lvar, :mi),
                        s(:lvar, :zr),
                        s(:lvar, :width),
                        s(:send,
                          s(:lvar, :precision), :-,
                          s(:int, 1)),
                        s(:send,
                          s(:lvar, :type), :tr,
                          s(:str, "gG"),
                          s(:str, "eE")),
                        s(:lvar, :v),
                        s(:lvar, :sign),
                        s(:lvar, :int),
                        s(:lvar, :exp))),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "[eE]([+-]\\d+)"),
                        s(:regopt)),
                      s(:lvar, :r)),
                    s(:lvasgn, :e,
                      s(:send,
                        s(:nth_ref, 1), :to_i)),
                    s(:if,
                      s(:or,
                        s(:send,
                          s(:lvar, :e), :<,
                          s(:int, -4)),
                        s(:send,
                          s(:lvar, :precision), :<=,
                          s(:lvar, :e))),
                      s(:lvasgn, :result,
                        s(:lvar, :r)),
                      s(:lvasgn, :result,
                        s(:send, nil, :emu_f,
                          s(:lvar, :sp),
                          s(:lvar, :hs),
                          s(:lvar, :pl),
                          s(:lvar, :mi),
                          s(:lvar, :zr),
                          s(:lvar, :width),
                          s(:send,
                            s(:send,
                              s(:lvar, :precision), :-,
                              s(:int, 1)), :-,
                            s(:lvar, :e)),
                          s(:lvar, :type),
                          s(:lvar, :sign),
                          s(:lvar, :int),
                          s(:lvar, :exp)))),
                    s(:if,
                      s(:send,
                        s(:lvar, :hs), :!),
                      s(:block,
                        s(:send,
                          s(:lvar, :result), :sub!,
                          s(:regexp,
                            s(:str, "\\.[0-9]*"),
                            s(:regopt))),
                        s(:args),
                        s(:send,
                          s(:back_ref, :$&), :sub,
                          s(:regexp,
                            s(:str, "\\.?0*\\z"),
                            s(:regopt)),
                          s(:str, ""))), nil))),
                s(:send, nil, :raise,
                  s(:dstr,
                    s(:str, "unexpected type: "),
                    s(:begin,
                      s(:lvar, :type))))))),
          s(:lvasgn, :pad,
            s(:str, "")),
          s(:if,
            s(:and,
              s(:lvar, :width),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :sign), :length), :+,
                  s(:send,
                    s(:lvar, :result), :length)), :<,
                s(:lvar, :width))),
            s(:if,
              s(:lvar, :zr),
              s(:lvasgn, :pad,
                s(:send,
                  s(:str, "0"), :*,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :width), :-,
                        s(:send,
                          s(:lvar, :sign), :length)), :-,
                      s(:send,
                        s(:lvar, :result), :length))))),
              s(:lvasgn, :pad,
                s(:send,
                  s(:str, " "), :*,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :width), :-,
                        s(:send,
                          s(:lvar, :sign), :length)), :-,
                      s(:send,
                        s(:lvar, :result), :length)))))), nil),
          s(:if,
            s(:lvar, :mi),
            s(:send,
              s(:send,
                s(:lvar, :sign), :+,
                s(:lvar, :result)), :+,
              s(:lvar, :pad)),
            s(:if,
              s(:lvar, :zr),
              s(:send,
                s(:send,
                  s(:lvar, :sign), :+,
                  s(:lvar, :pad)), :+,
                s(:lvar, :result)),
              s(:send,
                s(:send,
                  s(:lvar, :pad), :+,
                  s(:lvar, :sign)), :+,
                s(:lvar, :result)))))),
      s(:defs,
        s(:self), :assertions_format_float,
        s(:args,
          s(:arg, :format)),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :FLOAT_VALUES), :each),
            s(:args,
              s(:arg, :v)),
            s(:begin,
              s(:lvasgn, :r,
                s(:send, nil, :sprintf,
                  s(:lvar, :format),
                  s(:lvar, :v))),
              s(:lvasgn, :e,
                s(:send, nil, :emu_float,
                  s(:lvar, :format),
                  s(:lvar, :v))),
              s(:if,
                s(:true),
                s(:send, nil, :assert_equal,
                  s(:lvar, :e),
                  s(:lvar, :r),
                  s(:dstr,
                    s(:str, "sprintf("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :format), :dump)),
                    s(:str, ", "),
                    s(:begin,
                      s(:send,
                        s(:str, "%.20g"), :%,
                        s(:lvar, :v))),
                    s(:str, ")"))),
                s(:if,
                  s(:send,
                    s(:lvar, :e), :!=,
                    s(:lvar, :r)),
                  s(:send, nil, :puts,
                    s(:dstr,
                      s(:begin,
                        s(:send,
                          s(:lvar, :e), :dump)),
                      s(:str, "\t"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :r), :dump)),
                      s(:str, "\tsprintf("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :format), :dump)),
                      s(:str, ", "),
                      s(:begin,
                        s(:send,
                          s(:str, "%.20g"), :%,
                          s(:lvar, :v))),
                      s(:str, ")"))), nil)))))),
      s(:block,
        s(:send, nil, :combination,
          s(:array,
            s(:str, "e"),
            s(:str, "E"),
            s(:str, "f"),
            s(:str, "g"),
            s(:str, "G")),
          s(:array,
            s(:nil),
            s(:int, 0),
            s(:int, 5),
            s(:int, 20)),
          s(:array,
            s(:str, ""),
            s(:str, "."),
            s(:str, ".0"),
            s(:str, ".8"),
            s(:str, ".20"),
            s(:str, ".200"),
            s(:str, ".9999")),
          s(:splat,
            s(:const, nil, :FLAGS))),
        s(:args,
          s(:arg, :type),
          s(:arg, :width),
          s(:arg, :precision),
          s(:arg, :sp),
          s(:arg, :hs),
          s(:arg, :pl),
          s(:arg, :mi),
          s(:arg, :zr)),
        s(:begin,
          s(:lvasgn, :format,
            s(:dstr,
              s(:str, "%"),
              s(:begin,
                s(:lvar, :sp)),
              s(:begin,
                s(:lvar, :hs)),
              s(:begin,
                s(:lvar, :pl)),
              s(:begin,
                s(:lvar, :mi)),
              s(:begin,
                s(:lvar, :zr)),
              s(:begin,
                s(:lvar, :width)),
              s(:begin,
                s(:lvar, :precision)),
              s(:begin,
                s(:lvar, :type)))),
          s(:send, nil, :define_method,
            s(:dstr,
              s(:str, "test_format_float("),
              s(:begin,
                s(:lvar, :format)),
              s(:str, ")")),
            s(:send, nil, :assertions_format_float,
              s(:lvar, :format))))))))
