s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestRubyPrimitive),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_not,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:true), :!)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:false), :!)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:nil), :!)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 1), :+,
                  s(:int, 1))), :!)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:nil), :!), :!)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:int, 1), :!), :!)))),
      s(:def, :test_lvar,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :a)),
          s(:lvasgn, :b,
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :a)),
          s(:lvasgn, :a,
            s(:lvasgn, :b,
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:lvar, :a)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:lvar, :b)),
          s(:lvasgn, :a,
            s(:lvasgn, :b,
              s(:lvasgn, :c,
                s(:int, 4)))),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:lvar, :a)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:lvar, :b)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:lvar, :c)))),
      s(:casgn, nil, :C,
        s(:int, 1)),
      s(:class,
        s(:const, nil, :A), nil,
        s(:begin,
          s(:casgn, nil, :Const,
            s(:int, 1)),
          s(:class,
            s(:const, nil, :B), nil,
            s(:begin,
              s(:casgn, nil, :Const,
                s(:int, 2)),
              s(:class,
                s(:const, nil, :C), nil,
                s(:begin,
                  s(:casgn, nil, :Const,
                    s(:int, 3)),
                  s(:def, :const,
                    s(:args),
                    s(:const, nil, :Const)))))))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 1),
              s(:int, 2))), :map),
        s(:args),
        s(:const,
          s(:const,
            s(:const,
              s(:const, nil, :A), :B), :C), :Const)),
      s(:def, :test_constant,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:const, nil, :C)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:const, nil, :C)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:const,
              s(:const, nil, :A), :Const)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:const,
              s(:const,
                s(:const, nil, :A), :B), :Const)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :A), :B), :C), :Const)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :A), :B), :C), :new), :const)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:const,
              s(:const,
                s(:const,
                  s(:cbase), :TestRubyPrimitive), :A), :Const)),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :A), :B), :C), :send,
            s(:sym, :remove_const),
            s(:sym, :Const)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :A), :B), :C), :new), :const)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :TypeError)),
            s(:args),
            s(:const,
              s(:const, nil, :C), :CONST)))),
      s(:class,
        s(:const, nil, :A2), nil,
        s(:class,
          s(:const, nil, :B2), nil,
          s(:class,
            s(:const, nil, :C2), nil,
            s(:casgn, nil, :C,
              s(:int, 7))))),
      s(:def, :test_constant_cache,
        s(:args),
        s(:begin,
          s(:lvasgn, :i,
            s(:int, 0)),
          s(:while,
            s(:send,
              s(:lvar, :i), :<,
              s(:int, 3)),
            s(:begin,
              s(:lvasgn, :r,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :A2), :B2), :C2), :C)),
              s(:op_asgn,
                s(:lvasgn, :i), :+,
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:lvar, :r)))),
      s(:class,
        s(:const, nil, :A3), nil,
        s(:class,
          s(:const, nil, :B3), nil,
          s(:casgn, nil, :C,
            s(:int, 99)))),
      s(:lvasgn, :i,
        s(:int, 0)),
      s(:while,
        s(:send,
          s(:lvar, :i), :<,
          s(:int, 3)),
        s(:begin,
          s(:lvasgn, :r,
            s(:const,
              s(:const,
                s(:const, nil, :A3), :B3), :C)),
          s(:class,
            s(:const,
              s(:const, nil, :A3), :B3), nil,
            s(:send, nil, :remove_const,
              s(:sym, :C))),
          s(:casgn,
            s(:const,
              s(:const, nil, :A3), :B3), :C,
            s(:send,
              s(:lvar, :i), :**,
              s(:lvar, :i))),
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)))),
      s(:def, :test_constant_cache2,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:int, 4),
          s(:const,
            s(:const,
              s(:const, nil, :A3), :B3), :C))),
      s(:class,
        s(:const, nil, :A4), nil,
        s(:begin,
          s(:casgn, nil, :Const,
            s(:int, 7)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 3))), :map),
            s(:args),
            s(:gvasgn, :$test_ruby_primitive_constant_cache3,
              s(:const,
                s(:self), :Const))))),
      s(:def, :test_constant_cache3,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:int, 7),
          s(:gvar, :$test_ruby_primitive_constant_cache3))),
      s(:class,
        s(:const, nil, :A5), nil,
        s(:begin,
          s(:casgn, nil, :Const,
            s(:int, 8)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 3))), :map),
            s(:args),
            s(:gvasgn, :$test_ruby_primitive_constant_cache4,
              s(:const,
                s(:send, nil, :eval,
                  s(:str, "self")), :Const))))),
      s(:def, :test_constatant_cache4,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:int, 8),
          s(:gvar, :$test_ruby_primitive_constant_cache4))),
      s(:class,
        s(:const, nil, :A6), nil,
        s(:begin,
          s(:casgn, nil, :Const,
            s(:int, 0)),
          s(:defs,
            s(:self), :foo,
            s(:args),
            s(:const,
              s(:self), :Const)))),
      s(:class,
        s(:const, nil, :B6),
        s(:const, nil, :A6),
        s(:casgn, nil, :Const,
          s(:int, 1))),
      s(:class,
        s(:const, nil, :C6),
        s(:const, nil, :B6),
        s(:casgn, nil, :Const,
          s(:int, 2))),
      s(:gvasgn, :$test_ruby_primitive_constant_cache5,
        s(:array,
          s(:send,
            s(:const, nil, :A6), :foo),
          s(:send,
            s(:const, nil, :B6), :foo),
          s(:send,
            s(:const, nil, :C6), :foo))),
      s(:def, :test_constant_cache5,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:int, 0),
            s(:int, 1),
            s(:int, 2)),
          s(:gvar, :$test_ruby_primitive_constant_cache5))),
      s(:def, :test_gvar,
        s(:args),
        s(:begin,
          s(:gvasgn, :$test_ruby_primitive_gvar,
            s(:int, 7)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:gvar, :$test_ruby_primitive_gvar)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:gvar, :$test_ruby_primitive_gvar)),
          s(:gvasgn, :$test_ruby_primitive_gvar,
            s(:int, 88)),
          s(:send, nil, :assert_equal,
            s(:int, 88),
            s(:gvar, :$test_ruby_primitive_gvar)),
          s(:send, nil, :assert_equal,
            s(:int, 88),
            s(:gvar, :$test_ruby_primitive_gvar)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:begin,
              s(:gvasgn, :$test_ruby_primitive_gvar,
                s(:int, 7)))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:begin,
              s(:gvasgn, :$test_ruby_primitive_gvar,
                s(:int, 7)))))),
      s(:class,
        s(:const, nil, :A7), nil,
        s(:begin,
          s(:cvasgn, :@@c,
            s(:int, 1)),
          s(:def, :m,
            s(:args),
            s(:op_asgn,
              s(:cvasgn, :@@c), :+,
              s(:int, 1))))),
      s(:def, :test_cvar_from_instance_method,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:send,
                s(:const, nil, :A7), :new), :m)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:send,
                s(:const, nil, :A7), :new), :m)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:send,
                s(:const, nil, :A7), :new), :m)))),
      s(:class,
        s(:const, nil, :A8), nil,
        s(:begin,
          s(:cvasgn, :@@c,
            s(:int, 1)),
          s(:sclass,
            s(:self),
            s(:def, :m,
              s(:args),
              s(:op_asgn,
                s(:cvasgn, :@@c), :+,
                s(:int, 1)))))),
      s(:def, :test_cvar_from_singleton_method,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:const, nil, :A8), :m)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:const, nil, :A8), :m)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:const, nil, :A8), :m)))),
      s(:class,
        s(:const, nil, :A9), nil,
        s(:begin,
          s(:cvasgn, :@@c,
            s(:int, 1)),
          s(:defs,
            s(:self), :m,
            s(:args),
            s(:op_asgn,
              s(:cvasgn, :@@c), :+,
              s(:int, 1))))),
      s(:def, :test_cvar_from_singleton_method2,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:const, nil, :A9), :m)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:const, nil, :A9), :m)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:const, nil, :A9), :m)))),
      s(:class,
        s(:const, nil, :A10), nil,
        s(:send, nil, :attr_accessor,
          s(:sym, :a))),
      s(:def, :test_opassign,
        s(:args),
        s(:begin,
          s(:lvasgn, :i,
            s(:int, 0)),
          s(:op_asgn,
            s(:lvasgn, :i), :+,
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :i)),
          s(:ivasgn, :@iv,
            s(:int, 2)),
          s(:op_asgn,
            s(:ivasgn, :@iv), :+,
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:ivar, :@iv)),
          s(:or_asgn,
            s(:cvasgn, :@@cv),
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:cvar, :@@cv)),
          s(:and_asgn,
            s(:cvasgn, :@@cv),
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:cvar, :@@cv)),
          s(:or_asgn,
            s(:cvasgn, :@@cv),
            s(:int, 99)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:cvar, :@@cv)),
          s(:gvasgn, :$gv,
            s(:int, 3)),
          s(:op_asgn,
            s(:gvasgn, :$gv), :+,
            s(:int, 4)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:gvar, :$gv)),
          s(:lvasgn, :obj,
            s(:send,
              s(:const, nil, :A10), :new)),
          s(:send,
            s(:lvar, :obj), :a=,
            s(:int, 9)),
          s(:and_asgn,
            s(:send,
              s(:lvar, :obj), :a),
            s(:int, 7)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:send,
              s(:lvar, :obj), :a)),
          s(:send,
            s(:lvar, :obj), :a=,
            s(:nil)),
          s(:or_asgn,
            s(:send,
              s(:lvar, :obj), :a),
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:lvar, :obj), :a)),
          s(:and_asgn,
            s(:send,
              s(:lvar, :obj), :a),
            s(:int, 3)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:lvar, :obj), :a)),
          s(:lvasgn, :a,
            s(:array)),
          s(:or_asgn,
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0)),
            s(:int, 3)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0))),
          s(:and_asgn,
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0)),
            s(:int, 7)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0))),
          s(:or_asgn,
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0)),
            s(:int, 3)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0))),
          s(:lvasgn, :a,
            s(:array,
              s(:int, 0),
              s(:int, 1),
              s(:nil),
              s(:int, 3),
              s(:int, 4))),
          s(:or_asgn,
            s(:send,
              s(:lvar, :a), :[],
              s(:splat,
                s(:array,
                  s(:int, 2)))),
            s(:sym, :foo)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:int, 1),
              s(:sym, :foo),
              s(:int, 3),
              s(:int, 4)),
            s(:lvar, :a)),
          s(:and_asgn,
            s(:send,
              s(:lvar, :a), :[],
              s(:splat,
                s(:array,
                  s(:int, 1),
                  s(:int, 3)))),
            s(:array,
              s(:sym, :bar))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:sym, :bar),
              s(:int, 4)),
            s(:lvar, :a)))),
      s(:def, :test_opassign_and_or,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:int, 1)),
          s(:or_asgn,
            s(:lvasgn, :a),
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :a)),
          s(:lvasgn, :a,
            s(:nil)),
          s(:or_asgn,
            s(:lvasgn, :a),
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:lvar, :a)),
          s(:lvasgn, :a,
            s(:int, 1)),
          s(:and_asgn,
            s(:lvasgn, :a),
            s(:int, 3)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:lvar, :a)),
          s(:lvasgn, :a,
            s(:nil)),
          s(:and_asgn,
            s(:lvasgn, :a),
            s(:int, 4)),
          s(:send, nil, :assert_nil,
            s(:lvar, :a)),
          s(:lvasgn, :h,
            s(:hash)),
          s(:or_asgn,
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0)),
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0))),
          s(:lvasgn, :h,
            s(:hash)),
          s(:and_asgn,
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0)),
            s(:int, 1)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0))),
          s(:lvasgn, :h,
            s(:hash,
              s(:pair,
                s(:int, 0),
                s(:int, 7)))),
          s(:or_asgn,
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0)),
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0))),
          s(:lvasgn, :h,
            s(:hash,
              s(:pair,
                s(:int, 0),
                s(:int, 7)))),
          s(:and_asgn,
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0)),
            s(:int, 1)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0))))),
      s(:def, :test_backref,
        s(:args),
        s(:begin,
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "a(b)(c)d"),
              s(:regopt)),
            s(:str, "xyzabcdefgabcdefg")),
          s(:send, nil, :assert_equal,
            s(:str, "b"),
            s(:nth_ref, 1)),
          s(:send, nil, :assert_equal,
            s(:str, "c"),
            s(:nth_ref, 2)),
          s(:send, nil, :assert_nil,
            s(:nth_ref, 3)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :MatchData),
            s(:gvar, :$~)),
          s(:send, nil, :assert_equal,
            s(:str, "abcd"),
            s(:back_ref, :$&)),
          s(:send, nil, :assert_equal,
            s(:str, "xyz"),
            s(:back_ref, :$`)),
          s(:send, nil, :assert_equal,
            s(:str, "efgabcdefg"),
            s(:back_ref, :$')),
          s(:send, nil, :assert_equal,
            s(:str, "c"),
            s(:back_ref, :$+)),
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "(?!)"),
              s(:regopt)),
            s(:str, "xyzabcdefgabcdefg")),
          s(:send, nil, :assert_nil,
            s(:nth_ref, 1)),
          s(:send, nil, :assert_nil,
            s(:nth_ref, 2)),
          s(:send, nil, :assert_nil,
            s(:nth_ref, 3)),
          s(:send, nil, :assert_nil,
            s(:gvar, :$~)),
          s(:send, nil, :assert_nil,
            s(:back_ref, :$&)),
          s(:send, nil, :assert_nil,
            s(:back_ref, :$`)),
          s(:send, nil, :assert_nil,
            s(:back_ref, :$')),
          s(:send, nil, :assert_nil,
            s(:back_ref, :$+)))),
      s(:def, :test_fact,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:int, 306057512216440636035370461297268629388588804173576999416776741259476533176716867465515291422477573349939147888701726368864263907759003154226842927906974559841225476930271954604008012215776252176854255965356903506788725264321896264299365204576448830388909753943489625436053225980776521270822437639449120128678675368305712293681943649956460498166450227716500185176546469340112226034729724066333258583506870150169794168850353752137554910289126407157154830282284937952636580145235233156936482233436799254594095276820608062232812387383880817049600000000000000000000000000000000000000000000000000000000000000000000000000),
          s(:send, nil, :fact,
            s(:int, 300)))),
      s(:def, :fact,
        s(:args,
          s(:arg, :n)),
        s(:if,
          s(:send,
            s(:lvar, :n), :>,
            s(:int, 1)),
          s(:send,
            s(:lvar, :n), :*,
            s(:send, nil, :fact,
              s(:send,
                s(:lvar, :n), :-,
                s(:int, 1)))),
          s(:int, 1))),
      s(:def, :test_mul,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 2), :*,
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 0), :*,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, 2), :*,
              s(:int, 2))))),
      s(:class,
        s(:const, nil, :MyNum), nil,
        s(:def, :/,
          s(:args,
            s(:arg, :a)),
          s(:send,
            s(:lvar, :a), :*,
            s(:int, 100)))),
      s(:def, :test_div,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 3), :/,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:float, 1.5),
            s(:send,
              s(:float, 3.0), :/,
              s(:float, 2.0))),
          s(:send, nil, :assert_equal,
            s(:int, 300),
            s(:send,
              s(:send,
                s(:const, nil, :MyNum), :new), :/,
              s(:int, 3))))),
      s(:class,
        s(:const, nil, :MyArr), nil,
        s(:def, :length,
          s(:args),
          s(:str, "string"))),
      s(:def, :test_length,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:array), :length)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:array,
                s(:int, 1)), :length)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:array,
                s(:int, 1),
                s(:int, 2)), :length)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:hash), :length)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:hash,
                s(:pair,
                  s(:int, 1),
                  s(:int, 1))), :length)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:hash,
                s(:pair,
                  s(:int, 1),
                  s(:int, 1)),
                s(:pair,
                  s(:int, 2),
                  s(:int, 2))), :length)),
          s(:send, nil, :assert_equal,
            s(:str, "string"),
            s(:send,
              s(:send,
                s(:const, nil, :MyArr), :new), :length)))),
      s(:class,
        s(:const, nil, :MyNum2), nil,
        s(:def, :%,
          s(:args,
            s(:arg, :a)),
          s(:send,
            s(:lvar, :a), :*,
            s(:int, 100)))),
      s(:def, :test_mod,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, 5), :%,
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:float, 1.0),
            s(:send,
              s(:float, 3.0), :%,
              s(:float, 2.0))),
          s(:send, nil, :assert_equal,
            s(:int, 300),
            s(:send,
              s(:send,
                s(:const, nil, :MyNum2), :new), :%,
              s(:int, 3))))),
      s(:class,
        s(:const, nil, :MyObj), nil,
        s(:begin,
          s(:def, :[],
            s(:args,
              s(:restarg, :args)),
            s(:lvar, :args)),
          s(:def, :[]=,
            s(:args,
              s(:restarg, :args)),
            s(:lvar, :args)))),
      s(:def, :test_aref,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:array,
              s(:int, 0),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 1))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:lvar, :a), :[],
              s(:int, 2))),
          s(:lvasgn, :h,
            s(:hash,
              s(:pair,
                s(:int, 0),
                s(:int, 0)),
              s(:pair,
                s(:int, 1),
                s(:int, 1)))),
          s(:lvasgn, :obj,
            s(:send,
              s(:const, nil, :MyObj), :new)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 1))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:lvar, :h), :[],
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0)),
            s(:send,
              s(:lvar, :obj), :[],
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:int, 1)),
            s(:send,
              s(:lvar, :obj), :[],
              s(:int, 0),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:int, 1),
              s(:int, 2)),
            s(:send,
              s(:lvar, :obj), :[],
              s(:int, 0),
              s(:int, 1),
              s(:int, 2))))),
      s(:def, :test_aset,
        s(:args),
        s(:begin,
          s(:lvasgn, :obj,
            s(:send,
              s(:const, nil, :MyObj), :new)),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:begin,
              s(:send,
                s(:lvar, :obj), :[]=,
                s(:int, 0),
                s(:int, 7)))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:begin,
              s(:send,
                s(:lvar, :obj), :[]=,
                s(:int, 0),
                s(:int, 1),
                s(:int, 7)))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:begin,
              s(:send,
                s(:lvar, :obj), :[]=,
                s(:int, 0),
                s(:int, 1),
                s(:int, 2),
                s(:int, 7)))))),
      s(:class,
        s(:const, nil, :MyObj2), nil,
        s(:def, :attr=,
          s(:args,
            s(:restarg, :args)),
          s(:lvar, :args))),
      s(:def, :test_attr_setter,
        s(:args),
        s(:begin,
          s(:lvasgn, :obj,
            s(:send,
              s(:const, nil, :MyObj2), :new)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:begin,
              s(:send,
                s(:lvar, :obj), :attr=,
                s(:int, 1)))))),
      s(:def, :test_list_expand,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:array)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0)),
            s(:array,
              s(:int, 0),
              s(:splat,
                s(:lvar, :a)))),
          s(:lvasgn, :a,
            s(:array,
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:int, 1)),
            s(:array,
              s(:int, 0),
              s(:splat,
                s(:lvar, :a)))),
          s(:lvasgn, :a,
            s(:array,
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:int, 1),
              s(:int, 2)),
            s(:array,
              s(:int, 0),
              s(:splat,
                s(:lvar, :a)))),
          s(:lvasgn, :a,
            s(:array,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 0),
              s(:int, 1),
              s(:int, 2),
              s(:int, 3)),
            s(:array,
              s(:int, 0),
              s(:splat,
                s(:lvar, :a)))))),
      s(:def, :test_concatarray_ruby_dev_41933,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug3658,
            s(:str, "[ruby-dev:41933]")),
          s(:array,
            s(:int, 0),
            s(:splat,
              s(:lvasgn, :x,
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :x),
            s(:lvar, :bug3658)),
          s(:array,
            s(:int, 0),
            s(:splat,
              s(:lvasgn, :x,
                s(:int, 1))),
            s(:int, 2)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:lvar, :x),
            s(:lvar, :bug3658)),
          s(:sclass,
            s(:begin,
              s(:lvasgn, :x,
                s(:send,
                  s(:const, nil, :Object), :new))),
            s(:begin,
              s(:send, nil, :attr_accessor,
                s(:sym, :to_a_called)),
              s(:def, :to_a,
                s(:args),
                s(:begin,
                  s(:ivasgn, :@to_a_called,
                    s(:true)),
                  s(:array,
                    s(:self)))))),
          s(:send,
            s(:lvar, :x), :to_a_called=,
            s(:false)),
          s(:array,
            s(:int, 0),
            s(:splat,
              s(:lvar, :x))),
          s(:send, nil, :assert_predicate,
            s(:lvar, :x),
            s(:sym, :to_a_called),
            s(:lvar, :bug3658)),
          s(:send,
            s(:lvar, :x), :to_a_called=,
            s(:false)),
          s(:array,
            s(:int, 0),
            s(:splat,
              s(:lvar, :x)),
            s(:int, 2)),
          s(:send, nil, :assert_predicate,
            s(:lvar, :x),
            s(:sym, :to_a_called),
            s(:lvar, :bug3658)))))))
