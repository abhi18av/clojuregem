s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :ComplexRational_Test),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_rat_srat,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Rational)), nil,
            s(:send, nil, :skip)),
          s(:lvasgn, :c,
            s(:send, nil, :SimpleRat,
              s(:int, 1),
              s(:int, 3))),
          s(:lvasgn, :cc,
            s(:send, nil, :Rational,
              s(:int, 3),
              s(:int, 2))),
          s(:send, nil, :assert_kind_of,
            s(:const, nil, :Numeric),
            s(:lvar, :c)),
          s(:send, nil, :assert_kind_of,
            s(:const, nil, :Numeric),
            s(:lvar, :cc)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :SimpleRat),
            s(:lvar, :c)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :Rational),
            s(:lvar, :cc)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 1),
              s(:int, 3)),
            s(:send,
              s(:lvar, :c), :+@)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, -1),
              s(:int, 3)),
            s(:send,
              s(:lvar, :c), :-@)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 7),
              s(:int, 3)),
            s(:send,
              s(:lvar, :c), :+,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, -5),
              s(:int, 3)),
            s(:send,
              s(:lvar, :c), :-,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 2),
              s(:int, 3)),
            s(:send,
              s(:lvar, :c), :*,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 1),
              s(:int, 6)),
            s(:send,
              s(:lvar, :c), :/,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 1),
              s(:int, 9)),
            s(:send,
              s(:lvar, :c), :**,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :c), :<=>,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 7),
              s(:int, 3)),
            s(:send,
              s(:int, 2), :+,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 5),
              s(:int, 3)),
            s(:send,
              s(:int, 2), :-,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 2),
              s(:int, 3)),
            s(:send,
              s(:int, 2), :*,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 6),
              s(:int, 1)),
            s(:send,
              s(:int, 2), :/,
              s(:lvar, :c))),
          s(:send, nil, :assert_in_delta,
            s(:float, 1.2599),
            s(:send,
              s(:int, 2), :**,
              s(:lvar, :c)),
            s(:float, 0.001)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 2), :<=>,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 11),
              s(:int, 6)),
            s(:send,
              s(:lvar, :c), :+,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, -7),
              s(:int, 6)),
            s(:send,
              s(:lvar, :c), :-,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 1),
              s(:int, 2)),
            s(:send,
              s(:lvar, :c), :*,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 2),
              s(:int, 9)),
            s(:send,
              s(:lvar, :c), :/,
              s(:lvar, :cc))),
          s(:send, nil, :assert_in_delta,
            s(:float, 0.1924),
            s(:send,
              s(:lvar, :c), :**,
              s(:lvar, :cc)),
            s(:float, 0.001)),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :c), :<=>,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 11),
              s(:int, 6)),
            s(:send,
              s(:lvar, :cc), :+,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 7),
              s(:int, 6)),
            s(:send,
              s(:lvar, :cc), :-,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 1),
              s(:int, 2)),
            s(:send,
              s(:lvar, :cc), :*,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 9),
              s(:int, 2)),
            s(:send,
              s(:lvar, :cc), :/,
              s(:lvar, :c))),
          s(:send, nil, :assert_in_delta,
            s(:float, 1.1447),
            s(:send,
              s(:lvar, :cc), :**,
              s(:lvar, :c)),
            s(:float, 0.001)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :cc), :<=>,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :+@)), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :-@)), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :+,
                  s(:int, 2))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :-,
                  s(:int, 2))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :*,
                  s(:int, 2))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :/,
                  s(:int, 2))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :**,
                  s(:int, 2))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :+,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :-,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :*,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :/,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Float),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :**,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :+,
                  s(:lvar, :cc))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :-,
                  s(:lvar, :cc))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :*,
                  s(:lvar, :cc))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :/,
                  s(:lvar, :cc))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Float),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :**,
                  s(:lvar, :cc))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :cc), :+,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :cc), :-,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :cc), :*,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :cc), :/,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :Float),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :cc), :**,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:send, nil, :Rational,
                s(:int, 2),
                s(:int, 3)), :<=>,
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3)))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3)), :<=>,
              s(:send, nil, :Rational,
                s(:int, 2),
                s(:int, 3)))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 2),
              s(:int, 3)),
            s(:send, nil, :SimpleRat,
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :SimpleRat,
              s(:int, 2),
              s(:int, 3)),
            s(:send, nil, :Rational,
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :+,
                  s(:int, 0))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :-,
                  s(:int, 0))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :*,
                  s(:int, 0))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :c), :*,
                  s(:int, 1))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 0), :+,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 0), :-,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 0), :*,
                  s(:lvar, :c))), :class)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :SimpleRat),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 1), :*,
                  s(:lvar, :c))), :class)))),
      s(:def, :test_comp_srat,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Rational)), nil,
            s(:send, nil, :skip)),
          s(:lvasgn, :c,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 2)))),
          s(:lvasgn, :cc,
            s(:send, nil, :Complex,
              s(:send, nil, :Rational,
                s(:int, 3),
                s(:int, 2)),
              s(:send, nil, :Rational,
                s(:int, 2),
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 2))),
            s(:send,
              s(:lvar, :c), :+@)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, -2),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, -1),
                s(:int, 2))),
            s(:send,
              s(:lvar, :c), :-@)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 8),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 2))),
            s(:send,
              s(:lvar, :c), :+,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, -4),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 2))),
            s(:send,
              s(:lvar, :c), :-,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 4),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 1))),
            s(:send,
              s(:lvar, :c), :*,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 4))),
            s(:send,
              s(:lvar, :c), :/,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 7),
                s(:int, 36)),
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3))),
            s(:send,
              s(:lvar, :c), :**,
              s(:int, 2))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NoMethodError)),
            s(:args),
            s(:send,
              s(:lvar, :c), :<=>,
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 8),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 2))),
            s(:send,
              s(:int, 2), :+,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 4),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, -1),
                s(:int, 2))),
            s(:send,
              s(:int, 2), :-,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 4),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 1),
                s(:int, 1))),
            s(:send,
              s(:int, 2), :*,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 48),
                s(:int, 25)),
              s(:send, nil, :SimpleRat,
                s(:int, -36),
                s(:int, 25))),
            s(:send,
              s(:int, 2), :/,
              s(:lvar, :c))),
          s(:lvasgn, :r,
            s(:send,
              s(:int, 2), :**,
              s(:lvar, :c))),
          s(:send, nil, :assert_in_delta,
            s(:float, 1.494),
            s(:send,
              s(:lvar, :r), :real),
            s(:float, 0.001)),
          s(:send, nil, :assert_in_delta,
            s(:float, 0.5392),
            s(:send,
              s(:lvar, :r), :imag),
            s(:float, 0.001)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NoMethodError)),
            s(:args),
            s(:send,
              s(:int, 2), :<=>,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 13),
                s(:int, 6)),
              s(:send, nil, :SimpleRat,
                s(:int, 5),
                s(:int, 2))),
            s(:send,
              s(:lvar, :c), :+,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, -5),
                s(:int, 6)),
              s(:send, nil, :SimpleRat,
                s(:int, -3),
                s(:int, 2))),
            s(:send,
              s(:lvar, :c), :-,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 0),
                s(:int, 1)),
              s(:send, nil, :SimpleRat,
                s(:int, 25),
                s(:int, 12))),
            s(:send,
              s(:lvar, :c), :*,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 8),
                s(:int, 25)),
              s(:send, nil, :SimpleRat,
                s(:int, -7),
                s(:int, 75))),
            s(:send,
              s(:lvar, :c), :/,
              s(:lvar, :cc))),
          s(:lvasgn, :r,
            s(:send,
              s(:lvar, :c), :**,
              s(:lvar, :cc))),
          s(:send, nil, :assert_in_delta,
            s(:float, 0.1732),
            s(:send,
              s(:lvar, :r), :real),
            s(:float, 0.001)),
          s(:send, nil, :assert_in_delta,
            s(:float, 0.1186),
            s(:send,
              s(:lvar, :r), :imag),
            s(:float, 0.001)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NoMethodError)),
            s(:args),
            s(:send,
              s(:lvar, :c), :<=>,
              s(:lvar, :cc))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 13),
                s(:int, 6)),
              s(:send, nil, :SimpleRat,
                s(:int, 5),
                s(:int, 2))),
            s(:send,
              s(:lvar, :cc), :+,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 5),
                s(:int, 6)),
              s(:send, nil, :SimpleRat,
                s(:int, 3),
                s(:int, 2))),
            s(:send,
              s(:lvar, :cc), :-,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 0),
                s(:int, 1)),
              s(:send, nil, :SimpleRat,
                s(:int, 25),
                s(:int, 12))),
            s(:send,
              s(:lvar, :cc), :*,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 72),
                s(:int, 25)),
              s(:send, nil, :SimpleRat,
                s(:int, 21),
                s(:int, 25))),
            s(:send,
              s(:lvar, :cc), :/,
              s(:lvar, :c))),
          s(:lvasgn, :r,
            s(:send,
              s(:lvar, :cc), :**,
              s(:lvar, :c))),
          s(:send, nil, :assert_in_delta,
            s(:float, 0.5498),
            s(:send,
              s(:lvar, :r), :real),
            s(:float, 0.001)),
          s(:send, nil, :assert_in_delta,
            s(:float, 1.0198),
            s(:send,
              s(:lvar, :r), :imag),
            s(:float, 0.001)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :NoMethodError)),
            s(:args),
            s(:send,
              s(:lvar, :cc), :<=>,
              s(:lvar, :c))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :+@)), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :-@)), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :+,
                    s(:int, 2))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :-,
                    s(:int, 2))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :*,
                    s(:int, 2))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :/,
                    s(:int, 2))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :**,
                    s(:int, 2))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :+,
                    s(:lvar, :cc))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :-,
                    s(:lvar, :cc))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :*,
                    s(:lvar, :cc))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :/,
                    s(:lvar, :cc))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :Float),
              s(:const, nil, :Float)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :**,
                    s(:lvar, :cc))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :cc), :+,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :cc), :-,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :cc), :*,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :cc), :/,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :Float),
              s(:const, nil, :Float)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :cc), :**,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 3),
                s(:int, 2))),
            s(:send, nil, :Complex,
              s(:send, nil, :Rational,
                s(:int, 2),
                s(:int, 3)),
              s(:send, nil, :Rational,
                s(:int, 3),
                s(:int, 2)))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Complex,
              s(:send, nil, :Rational,
                s(:int, 2),
                s(:int, 3)),
              s(:send, nil, :Rational,
                s(:int, 3),
                s(:int, 2))),
            s(:send, nil, :Complex,
              s(:send, nil, :SimpleRat,
                s(:int, 2),
                s(:int, 3)),
              s(:send, nil, :SimpleRat,
                s(:int, 3),
                s(:int, 2)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :+,
                    s(:int, 0))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :-,
                    s(:int, 0))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :*,
                    s(:int, 0))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :c), :*,
                    s(:int, 1))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:int, 0), :+,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:int, 0), :-,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:int, 0), :*,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:const, nil, :SimpleRat),
              s(:const, nil, :SimpleRat)),
            s(:block,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:int, 1), :*,
                    s(:lvar, :c))), :instance_eval),
              s(:args),
              s(:array,
                s(:send,
                  s(:send, nil, :real), :class),
                s(:send,
                  s(:send, nil, :imag), :class)))))))),
  s(:def, :SimpleRat,
    s(:args,
      s(:restarg, :a)),
    s(:send,
      s(:const, nil, :SimpleRat), :new,
      s(:splat,
        s(:lvar, :a)))),
  s(:class,
    s(:const, nil, :SimpleRat),
    s(:const, nil, :Numeric),
    s(:begin,
      s(:def, :initialize,
        s(:args,
          s(:arg, :num),
          s(:optarg, :den,
            s(:int, 1))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :den), :==,
              s(:int, 0)),
            s(:send, nil, :raise,
              s(:const, nil, :ZeroDivisionError),
              s(:str, "divided by zero")), nil),
          s(:if,
            s(:send,
              s(:lvar, :den), :<,
              s(:int, 0)),
            s(:begin,
              s(:lvasgn, :num,
                s(:send,
                  s(:lvar, :num), :-@)),
              s(:lvasgn, :den,
                s(:send,
                  s(:lvar, :den), :-@))), nil),
          s(:lvasgn, :gcd,
            s(:send,
              s(:lvar, :num), :gcd,
              s(:lvar, :den))),
          s(:ivasgn, :@num,
            s(:send,
              s(:lvar, :num), :div,
              s(:lvar, :gcd))),
          s(:ivasgn, :@den,
            s(:send,
              s(:lvar, :den), :div,
              s(:lvar, :gcd))))),
      s(:def, :numerator,
        s(:args),
        s(:ivar, :@num)),
      s(:def, :denominator,
        s(:args),
        s(:ivar, :@den)),
      s(:def, :+@,
        s(:args),
        s(:self)),
      s(:def, :-@,
        s(:args),
        s(:send,
          s(:send,
            s(:self), :class), :new,
          s(:send,
            s(:ivar, :@num), :-@),
          s(:ivar, :@den))),
      s(:def, :+,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :SimpleRat),
            s(:const, nil, :Rational),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:ivar, :@num), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))),
              s(:lvasgn, :b,
                s(:send,
                  s(:send,
                    s(:lvar, :o), :numerator), :*,
                  s(:ivar, :@den))),
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:send,
                  s(:lvar, :a), :+,
                  s(:lvar, :b)),
                s(:send,
                  s(:ivar, :@den), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))))),
          s(:when,
            s(:const, nil, :Integer),
            s(:send,
              s(:self), :+,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :o)))),
          s(:when,
            s(:const, nil, :Float),
            s(:send,
              s(:send, nil, :to_f), :+,
              s(:lvar, :o))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :x),
                s(:lvasgn, :y)),
              s(:send,
                s(:lvar, :o), :coerce,
                s(:self))),
            s(:send,
              s(:lvar, :x), :+,
              s(:lvar, :y))))),
      s(:def, :-,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :SimpleRat),
            s(:const, nil, :Rational),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:ivar, :@num), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))),
              s(:lvasgn, :b,
                s(:send,
                  s(:send,
                    s(:lvar, :o), :numerator), :*,
                  s(:ivar, :@den))),
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:send,
                  s(:lvar, :a), :-,
                  s(:lvar, :b)),
                s(:send,
                  s(:ivar, :@den), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))))),
          s(:when,
            s(:const, nil, :Integer),
            s(:send,
              s(:self), :-,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :o)))),
          s(:when,
            s(:const, nil, :Float),
            s(:send,
              s(:send, nil, :to_f), :-,
              s(:lvar, :o))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :x),
                s(:lvasgn, :y)),
              s(:send,
                s(:lvar, :o), :coerce,
                s(:self))),
            s(:send,
              s(:lvar, :x), :-,
              s(:lvar, :y))))),
      s(:def, :*,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :SimpleRat),
            s(:const, nil, :Rational),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:ivar, :@num), :*,
                  s(:send,
                    s(:lvar, :o), :numerator))),
              s(:lvasgn, :b,
                s(:send,
                  s(:ivar, :@den), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))),
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :a),
                s(:lvar, :b)))),
          s(:when,
            s(:const, nil, :Integer),
            s(:send,
              s(:self), :*,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :o)))),
          s(:when,
            s(:const, nil, :Float),
            s(:send,
              s(:send, nil, :to_f), :*,
              s(:lvar, :o))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :x),
                s(:lvasgn, :y)),
              s(:send,
                s(:lvar, :o), :coerce,
                s(:self))),
            s(:send,
              s(:lvar, :x), :*,
              s(:lvar, :y))))),
      s(:def, :quo,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :SimpleRat),
            s(:const, nil, :Rational),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:ivar, :@num), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))),
              s(:lvasgn, :b,
                s(:send,
                  s(:ivar, :@den), :*,
                  s(:send,
                    s(:lvar, :o), :numerator))),
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :a),
                s(:lvar, :b)))),
          s(:when,
            s(:const, nil, :Integer),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :o), :==,
                  s(:int, 0)),
                s(:send, nil, :raise,
                  s(:send, nil, :raise,
                    s(:const, nil, :ZeroDivisionError),
                    s(:str, "divided by zero"))), nil),
              s(:send,
                s(:self), :quo,
                s(:send,
                  s(:send,
                    s(:self), :class), :new,
                  s(:lvar, :o))))),
          s(:when,
            s(:const, nil, :Float),
            s(:send,
              s(:send, nil, :to_f), :quo,
              s(:lvar, :o))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :x),
                s(:lvasgn, :y)),
              s(:send,
                s(:lvar, :o), :coerce,
                s(:self))),
            s(:send,
              s(:lvar, :x), :quo,
              s(:lvar, :y))))),
      s(:alias,
        s(:sym, :/),
        s(:sym, :quo)),
      s(:def, :floor,
        s(:args),
        s(:send,
          s(:ivar, :@num), :div,
          s(:ivar, :@den))),
      s(:def, :ceil,
        s(:args),
        s(:send,
          s(:begin,
            s(:send,
              s(:begin,
                s(:send,
                  s(:ivar, :@num), :-@)), :div,
              s(:ivar, :@den))), :-@)),
      s(:def, :truncate,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@num), :<,
              s(:int, 0)),
            s(:return,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:ivar, :@num), :-@)), :div,
                    s(:ivar, :@den))), :-@)), nil),
          s(:send,
            s(:ivar, :@num), :div,
            s(:ivar, :@den)))),
      s(:alias,
        s(:sym, :to_i),
        s(:sym, :truncate)),
      s(:def, :round,
        s(:args),
        s(:if,
          s(:send,
            s(:ivar, :@num), :<,
            s(:int, 0)),
          s(:begin,
            s(:lvasgn, :num,
              s(:send,
                s(:ivar, :@num), :-@)),
            s(:lvasgn, :num,
              s(:send,
                s(:send,
                  s(:lvar, :num), :*,
                  s(:int, 2)), :+,
                s(:ivar, :@den))),
            s(:lvasgn, :den,
              s(:send,
                s(:ivar, :@den), :*,
                s(:int, 2))),
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :num), :div,
                  s(:lvar, :den))), :-@)),
          s(:begin,
            s(:lvasgn, :num,
              s(:send,
                s(:send,
                  s(:ivar, :@num), :*,
                  s(:int, 2)), :+,
                s(:ivar, :@den))),
            s(:lvasgn, :den,
              s(:send,
                s(:ivar, :@den), :*,
                s(:int, 2))),
            s(:send,
              s(:lvar, :num), :div,
              s(:lvar, :den))))),
      s(:def, :div,
        s(:args,
          s(:arg, :o)),
        s(:send,
          s(:begin,
            s(:send,
              s(:self), :/,
              s(:lvar, :o))), :floor)),
      s(:def, :quot,
        s(:args,
          s(:arg, :o)),
        s(:send,
          s(:begin,
            s(:send,
              s(:self), :/,
              s(:lvar, :o))), :truncate)),
      s(:def, :modulo,
        s(:args,
          s(:arg, :o)),
        s(:begin,
          s(:lvasgn, :q,
            s(:send, nil, :div,
              s(:lvar, :o))),
          s(:send,
            s(:self), :-,
            s(:send,
              s(:lvar, :o), :*,
              s(:lvar, :q))))),
      s(:def, :remainder,
        s(:args,
          s(:arg, :o)),
        s(:begin,
          s(:lvasgn, :q,
            s(:send, nil, :quot,
              s(:lvar, :o))),
          s(:send,
            s(:self), :-,
            s(:send,
              s(:lvar, :o), :*,
              s(:lvar, :q))))),
      s(:alias,
        s(:sym, :%),
        s(:sym, :modulo)),
      s(:def, :divmod,
        s(:args,
          s(:arg, :o)),
        s(:array,
          s(:send, nil, :div,
            s(:lvar, :o)),
          s(:send, nil, :modulo,
            s(:lvar, :o)))),
      s(:def, :quotrem,
        s(:args,
          s(:arg, :o)),
        s(:array,
          s(:send, nil, :quot,
            s(:lvar, :o)),
          s(:send, nil, :remainder,
            s(:lvar, :o)))),
      s(:def, :**,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :SimpleRat),
            s(:const, nil, :Rational),
            s(:send,
              s(:send, nil, :Float,
                s(:self)), :**,
              s(:lvar, :o))),
          s(:when,
            s(:const, nil, :Integer),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :o), :>,
                  s(:int, 0)),
                s(:begin,
                  s(:lvasgn, :a,
                    s(:send,
                      s(:ivar, :@num), :**,
                      s(:lvar, :o))),
                  s(:lvasgn, :b,
                    s(:send,
                      s(:ivar, :@den), :**,
                      s(:lvar, :o)))),
                s(:if,
                  s(:send,
                    s(:lvar, :o), :<,
                    s(:int, 0)),
                  s(:begin,
                    s(:lvasgn, :a,
                      s(:send,
                        s(:ivar, :@den), :**,
                        s(:send,
                          s(:lvar, :o), :-@))),
                    s(:lvasgn, :b,
                      s(:send,
                        s(:ivar, :@num), :**,
                        s(:send,
                          s(:lvar, :o), :-@)))),
                  s(:lvasgn, :a,
                    s(:lvasgn, :b,
                      s(:int, 1))))),
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :a),
                s(:lvar, :b)))),
          s(:when,
            s(:const, nil, :Float),
            s(:send,
              s(:send, nil, :to_f), :**,
              s(:lvar, :o))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :x),
                s(:lvasgn, :y)),
              s(:send,
                s(:lvar, :o), :coerce,
                s(:self))),
            s(:send,
              s(:lvar, :x), :**,
              s(:lvar, :y))))),
      s(:def, :<=>,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :SimpleRat),
            s(:const, nil, :Rational),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:ivar, :@num), :*,
                  s(:send,
                    s(:lvar, :o), :denominator))),
              s(:lvasgn, :b,
                s(:send,
                  s(:send,
                    s(:lvar, :o), :numerator), :*,
                  s(:ivar, :@den))),
              s(:return,
                s(:send,
                  s(:lvar, :a), :<=>,
                  s(:lvar, :b))))),
          s(:when,
            s(:const, nil, :Integer),
            s(:send,
              s(:self), :<=>,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :o)))),
          s(:when,
            s(:const, nil, :Float),
            s(:send,
              s(:send, nil, :to_f), :<=>,
              s(:lvar, :o))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :x),
                s(:lvasgn, :y)),
              s(:send,
                s(:lvar, :o), :coerce,
                s(:self))),
            s(:send,
              s(:lvar, :x), :<=>,
              s(:lvar, :y))))),
      s(:def, :==,
        s(:args,
          s(:arg, :o)),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:begin,
                s(:send,
                  s(:self), :<=>,
                  s(:lvar, :o))), :==,
              s(:int, 0)),
            s(:resbody, nil, nil,
              s(:false)), nil))),
      s(:def, :coerce,
        s(:args,
          s(:arg, :o)),
        s(:case,
          s(:lvar, :o),
          s(:when,
            s(:const, nil, :Rational),
            s(:array,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:send,
                  s(:lvar, :o), :numerator),
                s(:send,
                  s(:lvar, :o), :denominator)),
              s(:self))),
          s(:when,
            s(:const, nil, :Integer),
            s(:array,
              s(:send,
                s(:send,
                  s(:self), :class), :new,
                s(:lvar, :o)),
              s(:self))),
          s(:when,
            s(:const, nil, :Float),
            s(:array,
              s(:lvar, :o),
              s(:send,
                s(:self), :to_f))),
          s(:zsuper))),
      s(:def, :hash,
        s(:args),
        s(:send,
          s(:send,
            s(:ivar, :@num), :hash), :^,
          s(:send,
            s(:ivar, :@den), :hash))),
      s(:def, :to_f,
        s(:args),
        s(:send,
          s(:send,
            s(:ivar, :@num), :to_f), :/,
          s(:send,
            s(:ivar, :@den), :to_f))),
      s(:def, :to_r,
        s(:args),
        s(:self)),
      s(:def, :to_s,
        s(:args),
        s(:send, nil, :format,
          s(:str, "%s/%s"),
          s(:ivar, :@num),
          s(:ivar, :@den))),
      s(:def, :inspect,
        s(:args),
        s(:send, nil, :format,
          s(:str, "#SR(%s)"),
          s(:send, nil, :to_s))),
      s(:def, :marshal_dump,
        s(:args),
        s(:array,
          s(:ivar, :@num),
          s(:ivar, :@den))),
      s(:def, :marshal_load,
        s(:args,
          s(:arg, :a)),
        s(:masgn,
          s(:mlhs,
            s(:ivasgn, :@num),
            s(:ivasgn, :@den)),
          s(:lvar, :a))))))
