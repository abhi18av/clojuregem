s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestArity),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :err_mess,
        s(:args,
          s(:optarg, :method_proc,
            s(:nil)),
          s(:optarg, :argc,
            s(:int, 0))),
        s(:begin,
          s(:lvasgn, :args,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:lvar, :argc))), :to_a)),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :ArgumentError),
              s(:regexp,
                s(:str, "wrong number of arguments \\(.*\\b(\\d+)\\b.* (\\d\\S*?)\\)"),
                s(:regopt))),
            s(:args),
            s(:case,
              s(:lvar, :method_proc),
              s(:when,
                s(:nil),
                s(:yield)),
              s(:when,
                s(:const, nil, :Symbol),
                s(:send,
                  s(:send, nil, :method,
                    s(:lvar, :method_proc)), :call,
                  s(:splat,
                    s(:lvar, :args)))),
              s(:send,
                s(:lvar, :method_proc), :call,
                s(:splat,
                  s(:lvar, :args))))),
          s(:array,
            s(:nth_ref, 1),
            s(:nth_ref, 2)))),
      s(:def, :a,
        s(:args), nil),
      s(:def, :b,
        s(:args,
          s(:arg, :a),
          s(:arg, :b),
          s(:arg, :c),
          s(:optarg, :d,
            s(:int, 1)),
          s(:optarg, :e,
            s(:int, 2)),
          s(:arg, :f),
          s(:arg, :g),
          s(:arg, :h),
          s(:arg, :i),
          s(:blockarg, :block)), nil),
      s(:def, :c,
        s(:args,
          s(:arg, :a),
          s(:arg, :b),
          s(:arg, :c),
          s(:optarg, :d,
            s(:int, 1)),
          s(:optarg, :e,
            s(:int, 2)),
          s(:restarg, :rest)), nil),
      s(:def, :d,
        s(:args,
          s(:arg, :a),
          s(:kwoptarg, :b,
            s(:int, 42))), nil),
      s(:def, :e,
        s(:args,
          s(:arg, :a),
          s(:kwoptarg, :b,
            s(:int, 42)),
          s(:kwrestarg, :c)), nil),
      s(:def, :f,
        s(:args,
          s(:arg, :a),
          s(:arg, :b),
          s(:optarg, :c,
            s(:int, 1)),
          s(:restarg, :rest),
          s(:kwoptarg, :d,
            s(:int, 3))), nil),
      s(:def, :test_method_err_mess,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "0")),
            s(:send, nil, :err_mess,
              s(:sym, :a),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "10"),
              s(:str, "7..9")),
            s(:send, nil, :err_mess,
              s(:sym, :b),
              s(:int, 10))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "2"),
              s(:str, "3+")),
            s(:send, nil, :err_mess,
              s(:sym, :c),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "2"),
              s(:str, "1")),
            s(:send, nil, :err_mess,
              s(:sym, :d),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "0"),
              s(:str, "1")),
            s(:send, nil, :err_mess,
              s(:sym, :d),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "2"),
              s(:str, "1")),
            s(:send, nil, :err_mess,
              s(:sym, :e),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "0"),
              s(:str, "1")),
            s(:send, nil, :err_mess,
              s(:sym, :e),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "2+")),
            s(:send, nil, :err_mess,
              s(:sym, :f),
              s(:int, 1))))),
      s(:def, :test_proc_err_mess,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "0"),
              s(:str, "1..2")),
            s(:send, nil, :err_mess,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:arg, :b),
                  s(:optarg, :c,
                    s(:int, 42))), nil),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "2+")),
            s(:send, nil, :err_mess,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:arg, :a),
                  s(:arg, :b),
                  s(:optarg, :c,
                    s(:int, 42)),
                  s(:restarg, :d)), nil),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "3"),
              s(:str, "4+")),
            s(:send, nil, :err_mess,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:arg, :a),
                  s(:arg, :b),
                  s(:restarg, :c),
                  s(:arg, :d),
                  s(:arg, :e)), nil),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "3"),
              s(:str, "1..2")),
            s(:send, nil, :err_mess,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:arg, :b),
                  s(:optarg, :c,
                    s(:int, 42))), nil),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "0")),
            s(:send, nil, :err_mess,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:blockarg, :block)), nil),
              s(:int, 1))),
          s(:lvasgn, :p,
            s(:block,
              s(:send,
                s(:const, nil, :Proc), :new),
              s(:args,
                s(:arg, :b),
                s(:optarg, :c,
                  s(:int, 42))),
              s(:sym, :ok))),
          s(:send, nil, :assert_equal,
            s(:sym, :ok),
            s(:send,
              s(:lvar, :p), :call,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:sym, :ok),
            s(:send,
              s(:lvar, :p), :call)))),
      s(:def, :test_message_change_issue_6085,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "3"),
              s(:str, "1..2")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:send,
                s(:const, nil, :SignalException), :new,
                s(:int, 1),
                s(:str, ""),
                s(:nil)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "0")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Hash), :new,
                  s(:int, 1)),
                s(:args), nil))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "3"),
              s(:str, "1..2")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:send,
                s(:const, nil, :Module), :send,
                s(:sym, :define_method),
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "2")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:send,
                s(:str, ""), :sub!,
                s(:regexp,
                  s(:regopt))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "0"),
              s(:str, "1..2")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:block,
                s(:send,
                  s(:str, ""), :sub!),
                s(:args), nil))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "0"),
              s(:str, "1+")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:send, nil, :exec))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "0"),
              s(:str, "1+")),
            s(:block,
              s(:send, nil, :err_mess),
              s(:args),
              s(:send,
                s(:const, nil, :Struct), :new))))))))
