s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestMath),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :assert_infinity,
        s(:args,
          s(:arg, :a),
          s(:restarg, :rest)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :rest), :empty?),
            s(:lvasgn, :rest,
              s(:array,
                s(:dstr,
                  s(:str, "not infinity: "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :a), :inspect))))), nil),
          s(:send, nil, :assert_predicate,
            s(:lvar, :a),
            s(:sym, :infinite?),
            s(:splat,
              s(:lvar, :rest))))),
      s(:def, :assert_nan,
        s(:args,
          s(:arg, :a),
          s(:restarg, :rest)),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :rest), :empty?),
            s(:lvasgn, :rest,
              s(:array,
                s(:dstr,
                  s(:str, "not nan: "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :a), :inspect))))), nil),
          s(:send, nil, :assert_predicate,
            s(:lvar, :a),
            s(:sym, :nan?),
            s(:splat,
              s(:lvar, :rest))))),
      s(:def, :assert_float,
        s(:args,
          s(:arg, :a),
          s(:arg, :b)),
        s(:begin,
          s(:lvasgn, :err,
            s(:send,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :Float), :EPSILON), :*,
                  s(:int, 4)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:array,
                        s(:send,
                          s(:lvar, :a), :abs),
                        s(:send,
                          s(:lvar, :b), :abs)), :max), :*,
                    s(:const,
                      s(:const, nil, :Float), :EPSILON)), :*,
                  s(:int, 256))), :max)),
          s(:send, nil, :assert_in_delta,
            s(:lvar, :a),
            s(:lvar, :b),
            s(:lvar, :err)))),
      s(:alias,
        s(:sym, :check),
        s(:sym, :assert_float)),
      s(:def, :assert_float_and_int,
        s(:args,
          s(:arg, :exp_ary),
          s(:arg, :act_ary)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :flo_exp),
              s(:lvasgn, :int_exp),
              s(:lvasgn, :flo_act),
              s(:lvasgn, :int_act)),
            s(:array,
              s(:splat,
                s(:lvar, :exp_ary)),
              s(:splat,
                s(:lvar, :act_ary)))),
          s(:send, nil, :assert_float,
            s(:lvar, :flo_exp),
            s(:lvar, :flo_act)),
          s(:send, nil, :assert_equal,
            s(:lvar, :int_exp),
            s(:lvar, :int_act)))),
      s(:def, :test_atan2,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:float, 0.0),
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:float, -0.0),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:float, -0.0),
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:send,
              s(:const,
                s(:const, nil, :Math), :PI), :+@),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:float, 0.0),
              s(:float, -0.0))),
          s(:send, nil, :check,
            s(:send,
              s(:const,
                s(:const, nil, :Math), :PI), :-@),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:float, -0.0),
              s(:float, -0.0))),
          s(:lvasgn, :inf,
            s(:const,
              s(:const, nil, :Float), :INFINITY)),
          s(:lvasgn, :expected,
            s(:send,
              s(:send,
                s(:float, 3.0), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:float, 4.0))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :check,
              s(:send,
                s(:lvar, :expected), :+@),
              s(:send,
                s(:const, nil, :Math), :atan2,
                s(:send,
                  s(:lvar, :inf), :+@),
                s(:send,
                  s(:lvar, :inf), :-@)))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :check,
              s(:send,
                s(:lvar, :expected), :-@),
              s(:send,
                s(:const, nil, :Math), :atan2,
                s(:send,
                  s(:lvar, :inf), :-@),
                s(:send,
                  s(:lvar, :inf), :-@)))),
          s(:lvasgn, :expected,
            s(:send,
              s(:const,
                s(:const, nil, :Math), :PI), :/,
              s(:float, 4.0))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :check,
              s(:send,
                s(:lvar, :expected), :+@),
              s(:send,
                s(:const, nil, :Math), :atan2,
                s(:send,
                  s(:lvar, :inf), :+@),
                s(:send,
                  s(:lvar, :inf), :+@)))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :check,
              s(:send,
                s(:lvar, :expected), :-@),
              s(:send,
                s(:const, nil, :Math), :atan2,
                s(:send,
                  s(:lvar, :inf), :-@),
                s(:send,
                  s(:lvar, :inf), :+@)))),
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:int, 0),
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:const,
                s(:const, nil, :Math), :PI), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:int, 1),
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:const,
                s(:const, nil, :Math), :PI), :/,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :atan2,
              s(:int, 1),
              s(:int, 0))))),
      s(:def, :test_cos,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:float, 1.0),
            s(:send,
              s(:const, nil, :Math), :cos,
              s(:send,
                s(:send,
                  s(:int, 0), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:send,
              s(:float, 1.0), :/,
              s(:send,
                s(:const, nil, :Math), :sqrt,
                s(:int, 2))),
            s(:send,
              s(:const, nil, :Math), :cos,
              s(:send,
                s(:send,
                  s(:int, 1), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :cos,
              s(:send,
                s(:send,
                  s(:int, 2), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, -1.0),
            s(:send,
              s(:const, nil, :Math), :cos,
              s(:send,
                s(:send,
                  s(:int, 4), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :cos,
              s(:send,
                s(:send,
                  s(:int, 6), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, 0.5403023058681398),
            s(:send,
              s(:const, nil, :Math), :cos,
              s(:int, 1))))),
      s(:def, :test_sin,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :sin,
              s(:send,
                s(:send,
                  s(:int, 0), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:send,
              s(:float, 1.0), :/,
              s(:send,
                s(:const, nil, :Math), :sqrt,
                s(:int, 2))),
            s(:send,
              s(:const, nil, :Math), :sin,
              s(:send,
                s(:send,
                  s(:int, 1), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, 1.0),
            s(:send,
              s(:const, nil, :Math), :sin,
              s(:send,
                s(:send,
                  s(:int, 2), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :sin,
              s(:send,
                s(:send,
                  s(:int, 4), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, -1.0),
            s(:send,
              s(:const, nil, :Math), :sin,
              s(:send,
                s(:send,
                  s(:int, 6), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))))),
      s(:def, :test_tan,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :tan,
              s(:send,
                s(:send,
                  s(:int, 0), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :check,
            s(:float, 1.0),
            s(:send,
              s(:const, nil, :Math), :tan,
              s(:send,
                s(:send,
                  s(:int, 1), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :assert_operator,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :tan,
                s(:send,
                  s(:send,
                    s(:int, 2), :*,
                    s(:const,
                      s(:const, nil, :Math), :PI)), :/,
                  s(:int, 4))), :abs),
            s(:sym, :>),
            s(:int, 1024)),
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :tan,
              s(:send,
                s(:send,
                  s(:int, 4), :*,
                  s(:const,
                    s(:const, nil, :Math), :PI)), :/,
                s(:int, 4)))),
          s(:send, nil, :assert_operator,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :tan,
                s(:send,
                  s(:send,
                    s(:int, 6), :*,
                    s(:const,
                      s(:const, nil, :Math), :PI)), :/,
                  s(:int, 4))), :abs),
            s(:sym, :>),
            s(:int, 1024)))),
      s(:def, :test_acos,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 0), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:float, 1.0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 1), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:send,
                s(:float, 1.0), :/,
                s(:send,
                  s(:const, nil, :Math), :sqrt,
                  s(:int, 2))))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 2), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 4), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:float, -1.0))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:send,
                s(:float, 1.0), :+,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:send,
                s(:float, -1.0), :-,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :acos,
              s(:float, 2.0))))),
      s(:def, :test_asin,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 0), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 1), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:send,
                s(:float, 1.0), :/,
                s(:send,
                  s(:const, nil, :Math), :sqrt,
                  s(:int, 2))))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 2), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:float, 1.0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, -2), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:float, -1.0))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:send,
                s(:float, 1.0), :+,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:send,
                s(:float, -1.0), :-,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :asin,
              s(:float, 2.0))))),
      s(:def, :test_atan,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 0), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :atan,
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 1), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :atan,
              s(:float, 1.0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 2), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :atan,
              s(:send,
                s(:float, 1.0), :/,
                s(:float, 0.0)))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, -1), :*,
                s(:const,
                  s(:const, nil, :Math), :PI)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :atan,
              s(:float, -1.0))))),
      s(:def, :test_cosh,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :cosh,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, 1)), :+,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, -1)))), :/,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :cosh,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, 2)), :+,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, -2)))), :/,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :cosh,
              s(:int, 2))))),
      s(:def, :test_sinh,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :sinh,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, 1)), :-,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, -1)))), :/,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :sinh,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, 2)), :-,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Math), :E), :**,
                    s(:int, -2)))), :/,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :sinh,
              s(:int, 2))))),
      s(:def, :test_tanh,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :sinh,
                s(:int, 0)), :/,
              s(:send,
                s(:const, nil, :Math), :cosh,
                s(:int, 0))),
            s(:send,
              s(:const, nil, :Math), :tanh,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :sinh,
                s(:int, 1)), :/,
              s(:send,
                s(:const, nil, :Math), :cosh,
                s(:int, 1))),
            s(:send,
              s(:const, nil, :Math), :tanh,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :sinh,
                s(:int, 2)), :/,
              s(:send,
                s(:const, nil, :Math), :cosh,
                s(:int, 2))),
            s(:send,
              s(:const, nil, :Math), :tanh,
              s(:int, 2))))),
      s(:def, :test_acosh,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :acosh,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :acosh,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, 1)), :+,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, -1)))), :/,
                s(:int, 2)))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :acosh,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, 2)), :+,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, -2)))), :/,
                s(:int, 2)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :acosh,
              s(:send,
                s(:float, 1.0), :-,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :acosh,
              s(:int, 0))))),
      s(:def, :test_asinh,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :asinh,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :asinh,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, 1)), :-,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, -1)))), :/,
                s(:int, 2)))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :asinh,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, 2)), :-,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Math), :E), :**,
                      s(:int, -2)))), :/,
                s(:int, 2)))))),
      s(:def, :test_atanh,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :atanh,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sinh,
                  s(:int, 0)), :/,
                s(:send,
                  s(:const, nil, :Math), :cosh,
                  s(:int, 0))))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :atanh,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sinh,
                  s(:int, 1)), :/,
                s(:send,
                  s(:const, nil, :Math), :cosh,
                  s(:int, 1))))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :atanh,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :sinh,
                  s(:int, 2)), :/,
                s(:send,
                  s(:const, nil, :Math), :cosh,
                  s(:int, 2))))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:const, nil, :Math), :atanh,
                s(:int, 1)))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :atanh,
                  s(:int, -1)), :-@))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :atanh,
              s(:send,
                s(:float, 1.0), :+,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :atanh,
              s(:send,
                s(:float, -1.0), :-,
                s(:const,
                  s(:const, nil, :Float), :EPSILON)))))),
      s(:def, :test_exp,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :exp,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:const,
                s(:const, nil, :Math), :E)),
            s(:send,
              s(:const, nil, :Math), :exp,
              s(:float, 0.5))),
          s(:send, nil, :check,
            s(:const,
              s(:const, nil, :Math), :E),
            s(:send,
              s(:const, nil, :Math), :exp,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:const,
                s(:const, nil, :Math), :E), :**,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :exp,
              s(:int, 2))))),
      s(:def, :test_log,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:const,
                s(:const, nil, :Math), :E))),
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:int, 1),
              s(:int, 10))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:int, 10),
              s(:int, 10))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:int, 100),
              s(:int, 10))),
          s(:send, nil, :check,
            s(:send,
              s(:const, nil, :Math), :log,
              s(:send,
                s(:float, 2.0), :**,
                s(:int, 64))),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:send,
                s(:int, 1), :<<,
                s(:int, 64)))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:int, 2)), :*,
              s(:float, 1024.0)),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:send,
                s(:int, 2), :**,
                s(:int, 1024)))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:float, 1.0), :/,
                  s(:int, 0))))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :log,
                  s(:float, 0.0)), :-@))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :log,
                  s(:float, -0.0)), :-@))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:float, -1.0))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :TypeError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:int, 1),
              s(:nil))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError),
              s(:str, "[ruby-core:62309] [ruby-Bug #9797]")),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :log,
              s(:float, 1.0),
              s(:float, -1.0))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_nan,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:float, 0.0),
                s(:float, 0.0)))))),
      s(:def, :test_log2,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:int, 2))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:int, 4))),
          s(:send, nil, :check,
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:send,
                s(:float, 2.0), :**,
                s(:int, 64))),
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:send,
                s(:int, 1), :<<,
                s(:int, 64)))),
          s(:send, nil, :check,
            s(:float, 1024.0),
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:send,
                s(:int, 2), :**,
                s(:int, 1024)))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:const, nil, :Math), :log2,
                s(:send,
                  s(:float, 1.0), :/,
                  s(:int, 0))))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :log2,
                  s(:float, 0.0)), :-@))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :log2,
                  s(:float, -0.0)), :-@))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :log2,
              s(:float, -1.0))))),
      s(:def, :test_log10,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:int, 10))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:int, 100))),
          s(:send, nil, :check,
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:send,
                s(:float, 2.0), :**,
                s(:int, 64))),
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:send,
                s(:int, 1), :<<,
                s(:int, 64)))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:const, nil, :Math), :log10,
                s(:int, 2)), :*,
              s(:int, 1024)),
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:send,
                s(:int, 2), :**,
                s(:int, 1024)))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:const, nil, :Math), :log10,
                s(:send,
                  s(:float, 1.0), :/,
                  s(:int, 0))))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :log10,
                  s(:float, 0.0)), :-@))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:send,
                  s(:const, nil, :Math), :log10,
                  s(:float, -0.0)), :-@))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :log10,
              s(:float, -1.0))))),
      s(:def, :test_sqrt,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:int, 4))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:const, nil, :Math), :sqrt,
                s(:send,
                  s(:float, 1.0), :/,
                  s(:int, 0))))),
          s(:send, nil, :assert_equal,
            s(:str, "0.0"),
            s(:send,
              s(:send,
                s(:const, nil, :Math), :sqrt,
                s(:float, -0.0)), :to_s)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:float, -1.0))))),
      s(:def, :test_cbrt,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :cbrt,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:int, -2),
            s(:send,
              s(:const, nil, :Math), :cbrt,
              s(:int, -8))),
          s(:send, nil, :check,
            s(:int, 3),
            s(:send,
              s(:const, nil, :Math), :cbrt,
              s(:int, 27))),
          s(:send, nil, :check,
            s(:float, -0.1),
            s(:send,
              s(:const, nil, :Math), :cbrt,
              s(:float, -0.001))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send, nil, :assert_infinity,
              s(:send,
                s(:const, nil, :Math), :cbrt,
                s(:send,
                  s(:float, 1.0), :/,
                  s(:int, 0))))))),
      s(:def, :test_frexp,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:float, 0.0),
              s(:int, 0)),
            s(:send,
              s(:const, nil, :Math), :frexp,
              s(:float, 0.0))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:float, 0.5),
              s(:int, 0)),
            s(:send,
              s(:const, nil, :Math), :frexp,
              s(:float, 0.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:float, 0.5),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :frexp,
              s(:float, 1.0))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:float, 0.5),
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :frexp,
              s(:float, 2.0))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:float, 0.75),
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :frexp,
              s(:float, 3.0))))),
      s(:def, :test_ldexp,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:float, 0.0),
            s(:send,
              s(:const, nil, :Math), :ldexp,
              s(:float, 0.0),
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:float, 0.5),
            s(:send,
              s(:const, nil, :Math), :ldexp,
              s(:float, 0.5),
              s(:float, 0.0))),
          s(:send, nil, :check,
            s(:float, 1.0),
            s(:send,
              s(:const, nil, :Math), :ldexp,
              s(:float, 0.5),
              s(:float, 1.0))),
          s(:send, nil, :check,
            s(:float, 2.0),
            s(:send,
              s(:const, nil, :Math), :ldexp,
              s(:float, 0.5),
              s(:float, 2.0))),
          s(:send, nil, :check,
            s(:float, 3.0),
            s(:send,
              s(:const, nil, :Math), :ldexp,
              s(:float, 0.75),
              s(:float, 2.0))))),
      s(:def, :test_hypot,
        s(:args),
        s(:send, nil, :check,
          s(:int, 5),
          s(:send,
            s(:const, nil, :Math), :hypot,
            s(:int, 3),
            s(:int, 4)))),
      s(:def, :test_erf,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :erf,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :erf,
              s(:send,
                s(:float, 1.0), :/,
                s(:float, 0.0)))))),
      s(:def, :test_erfc,
        s(:args),
        s(:begin,
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :erfc,
              s(:int, 0))),
          s(:send, nil, :check,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Math), :erfc,
              s(:send,
                s(:float, 1.0), :/,
                s(:float, 0.0)))))),
      s(:def, :test_gamma,
        s(:args),
        s(:begin,
          s(:lvasgn, :sqrt_pi,
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:const,
                s(:const, nil, :Math), :PI))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 4), :*,
                s(:lvar, :sqrt_pi)), :/,
              s(:int, 3)),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, -1.5))),
          s(:send, nil, :check,
            s(:send,
              s(:int, -2), :*,
              s(:lvar, :sqrt_pi)),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, -0.5))),
          s(:send, nil, :check,
            s(:lvar, :sqrt_pi),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, 0.5))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:int, 1))),
          s(:send, nil, :check,
            s(:send,
              s(:lvar, :sqrt_pi), :/,
              s(:int, 2)),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, 1.5))),
          s(:send, nil, :check,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:int, 2))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 3), :*,
                s(:lvar, :sqrt_pi)), :/,
              s(:int, 4)),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, 2.5))),
          s(:send, nil, :check,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:int, 3))),
          s(:send, nil, :check,
            s(:send,
              s(:send,
                s(:int, 15), :*,
                s(:lvar, :sqrt_pi)), :/,
              s(:int, 8)),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, 3.5))),
          s(:send, nil, :check,
            s(:int, 6),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:int, 4))),
          s(:send, nil, :check,
            s(:float, 1.1240007277776072e+21),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:int, 23))),
          s(:send, nil, :check,
            s(:float, 2.5852016738885062e+22),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:int, 24))),
          s(:block,
            s(:send,
              s(:int, 31), :upto,
              s(:int, 65)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:lvasgn, :i,
                s(:send,
                  s(:int, 1), :<<,
                  s(:lvar, :i))),
              s(:send, nil, :assert_infinity,
                s(:send,
                  s(:const, nil, :Math), :gamma,
                  s(:lvar, :i)),
                s(:dstr,
                  s(:str, "Math.gamma("),
                  s(:begin,
                    s(:lvar, :i)),
                  s(:str, ") should be INF"))),
              s(:send, nil, :assert_infinity,
                s(:send,
                  s(:const, nil, :Math), :gamma,
                  s(:send,
                    s(:lvar, :i), :-,
                    s(:int, 1))),
                s(:dstr,
                  s(:str, "Math.gamma("),
                  s(:begin,
                    s(:send,
                      s(:lvar, :i), :-,
                      s(:int, 1))),
                  s(:str, ") should be INF"))))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:send,
                s(:const,
                  s(:const, nil, :Float), :INFINITY), :-@))),
          s(:lvasgn, :x,
            s(:send,
              s(:const, nil, :Math), :gamma,
              s(:float, -0.0))),
          s(:lvasgn, :mesg,
            s(:str, "Math.gamma(-0.0) should be -INF")),
          s(:send, nil, :assert_infinity,
            s(:lvar, :x),
            s(:lvar, :mesg)),
          s(:send, nil, :assert_predicate,
            s(:lvar, :x),
            s(:sym, :negative?),
            s(:lvar, :mesg)))),
      s(:def, :test_lgamma,
        s(:args),
        s(:begin,
          s(:lvasgn, :sqrt_pi,
            s(:send,
              s(:const, nil, :Math), :sqrt,
              s(:const,
                s(:const, nil, :Math), :PI))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:send,
                    s(:int, 4), :*,
                    s(:lvar, :sqrt_pi)), :/,
                  s(:int, 3))),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, -1.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:int, 2), :*,
                  s(:lvar, :sqrt_pi))),
              s(:int, -1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, -0.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:lvar, :sqrt_pi)),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, 0.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:int, 0),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:int, 1))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:lvar, :sqrt_pi), :/,
                  s(:int, 2))),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, 1.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:int, 0),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:int, 2))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:send,
                    s(:int, 3), :*,
                    s(:lvar, :sqrt_pi)), :/,
                  s(:int, 4))),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, 2.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:int, 2)),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:int, 3))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:send,
                    s(:int, 15), :*,
                    s(:lvar, :sqrt_pi)), :/,
                  s(:int, 8))),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, 3.5))),
          s(:send, nil, :assert_float_and_int,
            s(:array,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:int, 6)),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:int, 4))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :Math), :DomainError)),
            s(:args),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:send,
                s(:const,
                  s(:const, nil, :Float), :INFINITY), :-@))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :x),
              s(:lvasgn, :sign)),
            s(:send,
              s(:const, nil, :Math), :lgamma,
              s(:float, -0.0))),
          s(:lvasgn, :mesg,
            s(:str, "Math.lgamma(-0.0) should be [INF, -1]")),
          s(:send, nil, :assert_infinity,
            s(:lvar, :x),
            s(:lvar, :mesg)),
          s(:send, nil, :assert_predicate,
            s(:lvar, :x),
            s(:sym, :positive?),
            s(:lvar, :mesg)),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:lvar, :sign),
            s(:lvar, :mesg)))),
      s(:def, :test_fixnum_to_f,
        s(:args),
        s(:send, nil, :check,
          s(:float, 12.0),
          s(:send,
            s(:const, nil, :Math), :sqrt,
            s(:int, 144)))),
      s(:def, :test_override_fixnum_to_f,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :Fixnum), :class_eval),
              s(:args),
              s(:begin,
                s(:alias,
                  s(:sym, :_to_f),
                  s(:sym, :to_f)),
                s(:def, :to_f,
                  s(:args),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:self), :+,
                        s(:int, 1))), :_to_f)))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :cos,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:int, 0), :+,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :cos,
                s(:int, 0))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :exp,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:int, 0), :+,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :exp,
                s(:int, 0))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:int, 0), :+,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :log,
                s(:int, 0)))),
          s(:block,
            s(:send,
              s(:const, nil, :Fixnum), :class_eval),
            s(:args),
            s(:alias,
              s(:sym, :to_f),
              s(:sym, :_to_f))))),
      s(:def, :test_bignum_to_f,
        s(:args),
        s(:send, nil, :check,
          s(:send,
            s(:begin,
              s(:send,
                s(:int, 1), :<<,
                s(:int, 65))), :to_f),
          s(:send,
            s(:const, nil, :Math), :sqrt,
            s(:send,
              s(:int, 1), :<<,
              s(:int, 130))))),
      s(:def, :test_override_bignum_to_f,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :Bignum), :class_eval),
              s(:args),
              s(:begin,
                s(:alias,
                  s(:sym, :_to_f),
                  s(:sym, :to_f)),
                s(:def, :to_f,
                  s(:args),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:self), :<<,
                        s(:int, 1))), :_to_f)))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :cos,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:int, 1), :<<,
                        s(:int, 64)), :<<,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :cos,
                s(:send,
                  s(:int, 1), :<<,
                  s(:int, 64)))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:int, 1), :<<,
                        s(:int, 64)), :<<,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:int, 1), :<<,
                  s(:int, 64))))),
          s(:block,
            s(:send,
              s(:const, nil, :Bignum), :class_eval),
            s(:args),
            s(:alias,
              s(:sym, :to_f),
              s(:sym, :_to_f))))),
      s(:def, :test_rational_to_f,
        s(:args),
        s(:send, nil, :check,
          s(:send,
            s(:begin,
              s(:send,
                s(:int, 2), :**,
                s(:int, 31))), :fdiv,
            s(:send,
              s(:int, 3), :**,
              s(:int, 20))),
          s(:send,
            s(:const, nil, :Math), :sqrt,
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 62))), :/,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:int, 3), :**,
                    s(:int, 40))), :to_r))))),
      s(:def, :test_override_rational_to_f,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :Rational), :class_eval),
              s(:args),
              s(:begin,
                s(:alias,
                  s(:sym, :_to_f),
                  s(:sym, :to_f)),
                s(:def, :to_f,
                  s(:args),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:self), :+,
                        s(:int, 1))), :_to_f)))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :cos,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:rational, (0/1)), :+,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :cos,
                s(:rational, (0/1)))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :exp,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:rational, (0/1)), :+,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :exp,
                s(:rational, (0/1)))),
            s(:send, nil, :check,
              s(:send,
                s(:const, nil, :Math), :log,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:rational, (0/1)), :+,
                      s(:int, 1))), :_to_f)),
              s(:send,
                s(:const, nil, :Math), :log,
                s(:rational, (0/1))))),
          s(:block,
            s(:send,
              s(:const, nil, :Rational), :class_eval),
            s(:args),
            s(:alias,
              s(:sym, :to_f),
              s(:sym, :_to_f))))))))
