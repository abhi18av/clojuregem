s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "forwardable")),
  s(:class,
    s(:const, nil, :TestForwardable),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :RECEIVER,
        s(:send,
          s(:const, nil, :BasicObject), :new)),
      s(:casgn, nil, :RETURNED1,
        s(:send,
          s(:const, nil, :BasicObject), :new)),
      s(:casgn, nil, :RETURNED2,
        s(:send,
          s(:const, nil, :BasicObject), :new)),
      s(:sclass,
        s(:const, nil, :RECEIVER),
        s(:begin,
          s(:def, :delegated1,
            s(:args),
            s(:const, nil, :RETURNED1)),
          s(:def, :delegated2,
            s(:args),
            s(:const, nil, :RETURNED2)))),
      s(:def, :test_def_instance_delegator,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegator),
              s(:sym, :def_instance_delegator)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :@receiver),
                  s(:sym, :delegated1)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1))))),
      s(:def, :test_def_instance_delegator_using_args_method_as_receiver,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegator),
              s(:sym, :def_instance_delegator)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class,
                  s(:hash,
                    s(:pair,
                      s(:sym, :receiver_name),
                      s(:sym, :args)),
                    s(:pair,
                      s(:sym, :type),
                      s(:sym, :method)),
                    s(:pair,
                      s(:sym, :visibility),
                      s(:sym, :private)))),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :args),
                  s(:sym, :delegated1)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1))))),
      s(:def, :test_def_instance_delegator_using_block_method_as_receiver,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegator),
              s(:sym, :def_instance_delegator)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class,
                  s(:hash,
                    s(:pair,
                      s(:sym, :receiver_name),
                      s(:sym, :block)),
                    s(:pair,
                      s(:sym, :type),
                      s(:sym, :method)),
                    s(:pair,
                      s(:sym, :visibility),
                      s(:sym, :private)))),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :block),
                  s(:sym, :delegated1)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1))))),
      s(:def, :test_def_instance_delegators,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegators),
              s(:sym, :def_instance_delegators)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :@receiver),
                  s(:sym, :delegated1),
                  s(:sym, :delegated2)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2))))),
      s(:def, :test_def_instance_delegators_using_args_method_as_receiver,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegators),
              s(:sym, :def_instance_delegators)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class,
                  s(:hash,
                    s(:pair,
                      s(:sym, :receiver_name),
                      s(:sym, :args)),
                    s(:pair,
                      s(:sym, :type),
                      s(:sym, :method)),
                    s(:pair,
                      s(:sym, :visibility),
                      s(:sym, :private)))),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :args),
                  s(:sym, :delegated1),
                  s(:sym, :delegated2)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2))))),
      s(:def, :test_def_instance_delegators_using_block_method_as_receiver,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegators),
              s(:sym, :def_instance_delegators)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class,
                  s(:hash,
                    s(:pair,
                      s(:sym, :receiver_name),
                      s(:sym, :block)),
                    s(:pair,
                      s(:sym, :type),
                      s(:sym, :method)),
                    s(:pair,
                      s(:sym, :visibility),
                      s(:sym, :private)))),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :block),
                  s(:sym, :delegated1),
                  s(:sym, :delegated2)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2))))),
      s(:def, :test_instance_delegate,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :delegate),
              s(:sym, :instance_delegate)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:hash,
                    s(:pair,
                      s(:sym, :delegated1),
                      s(:sym, :@receiver)),
                    s(:pair,
                      s(:sym, :delegated2),
                      s(:sym, :@receiver)))))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2)),
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:hash,
                    s(:pair,
                      s(:array,
                        s(:sym, :delegated1),
                        s(:sym, :delegated2)),
                      s(:sym, :@receiver)))))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2))))),
      s(:def, :test_def_instance_delegate_using_args_method_as_receiver,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :delegate),
              s(:sym, :instance_delegate)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class,
                  s(:hash,
                    s(:pair,
                      s(:sym, :receiver_name),
                      s(:sym, :args)),
                    s(:pair,
                      s(:sym, :type),
                      s(:sym, :method)),
                    s(:pair,
                      s(:sym, :visibility),
                      s(:sym, :private)))),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:hash,
                    s(:pair,
                      s(:sym, :delegated1),
                      s(:sym, :args)),
                    s(:pair,
                      s(:sym, :delegated2),
                      s(:sym, :args)))))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2))))),
      s(:def, :test_def_instance_delegate_using_block_method_as_receiver,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :delegate),
              s(:sym, :instance_delegate)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :forwardable_class,
                  s(:hash,
                    s(:pair,
                      s(:sym, :receiver_name),
                      s(:sym, :block)),
                    s(:pair,
                      s(:sym, :type),
                      s(:sym, :method)),
                    s(:pair,
                      s(:sym, :visibility),
                      s(:sym, :private)))),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:hash,
                    s(:pair,
                      s(:sym, :delegated1),
                      s(:sym, :block)),
                    s(:pair,
                      s(:sym, :delegated2),
                      s(:sym, :block)))))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:send,
                  s(:lvar, :cls), :new), :delegated2))))),
      s(:def, :test_def_single_delegator,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegator),
              s(:sym, :def_single_delegator)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :single_forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :@receiver),
                  s(:sym, :delegated1)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:lvar, :cls), :delegated1))))),
      s(:def, :test_def_single_delegators,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :def_delegators),
              s(:sym, :def_single_delegators)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :single_forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:sym, :@receiver),
                  s(:sym, :delegated1),
                  s(:sym, :delegated2)))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:lvar, :cls), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:lvar, :cls), :delegated2))))),
      s(:def, :test_single_delegate,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:sym, :delegate),
              s(:sym, :single_delegate)), :each),
          s(:args,
            s(:arg, :m)),
          s(:begin,
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :single_forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:hash,
                    s(:pair,
                      s(:sym, :delegated1),
                      s(:sym, :@receiver)),
                    s(:pair,
                      s(:sym, :delegated2),
                      s(:sym, :@receiver)))))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:lvar, :cls), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:lvar, :cls), :delegated2)),
            s(:lvasgn, :cls,
              s(:block,
                s(:send, nil, :single_forwardable_class),
                s(:args),
                s(:send, nil, :__send__,
                  s(:lvar, :m),
                  s(:hash,
                    s(:pair,
                      s(:array,
                        s(:sym, :delegated1),
                        s(:sym, :delegated2)),
                      s(:sym, :@receiver)))))),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED1),
              s(:send,
                s(:lvar, :cls), :delegated1)),
            s(:send, nil, :assert_same,
              s(:const, nil, :RETURNED2),
              s(:send,
                s(:lvar, :cls), :delegated2))))),
      s(:class,
        s(:const, nil, :Foo), nil,
        s(:begin,
          s(:send, nil, :extend,
            s(:const, nil, :Forwardable)),
          s(:send, nil, :def_delegator,
            s(:sym, :bar),
            s(:sym, :baz)),
          s(:class,
            s(:const, nil, :Exception), nil, nil))),
      s(:def, :test_backtrace_adjustment,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:send,
                  s(:const, nil, :Foo), :new), :baz))),
          s(:send, nil, :assert_not_match,
            s(:regexp,
              s(:str, "/forwardable\\.rb"),
              s(:regopt)),
            s(:send,
              s(:send,
                s(:lvar, :e), :backtrace), :[],
              s(:int, 0))))),
      s(:class,
        s(:const, nil, :Foo2),
        s(:const, nil, :BasicObject),
        s(:begin,
          s(:send, nil, :extend,
            s(:const,
              s(:cbase), :Forwardable)),
          s(:send, nil, :def_delegator,
            s(:sym, :bar),
            s(:sym, :baz)))),
      s(:def, :test_basicobject_subclass,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug11616,
            s(:str, "[ruby-core:71176] [Bug #11616]")),
          s(:block,
            s(:send, nil, :assert_raise_with_message,
              s(:const, nil, :NameError),
              s(:regexp,
                s(:str, "`bar'"),
                s(:regopt)),
              s(:lvar, :bug11616)),
            s(:args),
            s(:send,
              s(:send,
                s(:const, nil, :Foo2), :new), :baz)))),
      s(:send, nil, :private),
      s(:def, :forwardable_class,
        s(:args,
          s(:kwoptarg, :receiver_name,
            s(:sym, :receiver)),
          s(:kwoptarg, :type,
            s(:sym, :ivar)),
          s(:kwoptarg, :visibility,
            s(:sym, :public)),
          s(:blockarg, :block)),
        s(:block,
          s(:send,
            s(:const, nil, :Class), :new),
          s(:args),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :Forwardable)),
            s(:block,
              s(:send, nil, :define_method,
                s(:sym, :initialize)),
              s(:args),
              s(:send, nil, :instance_variable_set,
                s(:dstr,
                  s(:str, "@"),
                  s(:begin,
                    s(:lvar, :receiver_name))),
                s(:const, nil, :RECEIVER))),
            s(:if,
              s(:send,
                s(:lvar, :type), :==,
                s(:sym, :method)),
              s(:begin,
                s(:send, nil, :attr_reader,
                  s(:lvar, :receiver_name)),
                s(:send, nil, :__send__,
                  s(:lvar, :visibility),
                  s(:lvar, :receiver_name))), nil),
            s(:send, nil, :class_exec,
              s(:block_pass,
                s(:lvar, :block)))))),
      s(:def, :single_forwardable_class,
        s(:args,
          s(:blockarg, :block)),
        s(:block,
          s(:send,
            s(:const, nil, :Class), :new),
          s(:args),
          s(:begin,
            s(:send, nil, :extend,
              s(:const, nil, :SingleForwardable)),
            s(:ivasgn, :@receiver,
              s(:const, nil, :RECEIVER)),
            s(:send, nil, :class_exec,
              s(:block_pass,
                s(:lvar, :block)))))))))
