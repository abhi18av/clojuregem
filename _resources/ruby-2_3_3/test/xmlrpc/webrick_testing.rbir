s(:begin,
  s(:send, nil, :require,
    s(:str, "timeout")),
  s(:module,
    s(:const, nil, :TestXMLRPC),
    s(:module,
      s(:const, nil, :WEBrick_Testing),
      s(:begin,
        s(:def, :start_server,
          s(:args,
            s(:arg, :logger),
            s(:optarg, :config,
              s(:hash))),
          s(:begin,
            s(:if,
              s(:and,
                s(:defined?,
                  s(:ivar, :@__server)),
                s(:ivar, :@__server)),
              s(:send, nil, :raise,
                s(:str, "already started")), nil),
            s(:ivasgn, :@__started,
              s(:false)),
            s(:ivasgn, :@__server,
              s(:send,
                s(:const,
                  s(:const, nil, :WEBrick), :HTTPServer), :new,
                s(:send,
                  s(:hash,
                    s(:pair,
                      s(:sym, :BindAddress),
                      s(:str, "localhost")),
                    s(:pair,
                      s(:sym, :Logger),
                      s(:lvar, :logger)),
                    s(:pair,
                      s(:sym, :AccessLog),
                      s(:array))), :update,
                  s(:lvar, :config)))),
            s(:yield,
              s(:ivar, :@__server)),
            s(:ivasgn, :@__started,
              s(:true)),
            s(:lvasgn, :addr,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@__server), :listeners), :first), :connect_address)),
            s(:ivasgn, :@__server_thread,
              s(:block,
                s(:send,
                  s(:const, nil, :Thread), :new),
                s(:args),
                s(:kwbegin,
                  s(:ensure,
                    s(:rescue,
                      s(:send,
                        s(:ivar, :@__server), :start),
                      s(:resbody,
                        s(:array,
                          s(:const, nil, :IOError)),
                        s(:lvasgn, :e),
                        s(:send, nil, :assert_match,
                          s(:regexp,
                            s(:str, "closed"),
                            s(:regopt)),
                          s(:send,
                            s(:lvar, :e), :message))), nil),
                    s(:ivasgn, :@__started,
                      s(:false)))))),
            s(:lvar, :addr))),
        s(:def, :with_server,
          s(:args,
            s(:arg, :config),
            s(:arg, :servlet)),
          s(:begin,
            s(:lvasgn, :log,
              s(:array)),
            s(:lvasgn, :logger,
              s(:send,
                s(:const,
                  s(:const, nil, :WEBrick), :Log), :new,
                s(:lvar, :log),
                s(:const,
                  s(:const,
                    s(:const, nil, :WEBrick), :BasicLog), :WARN))),
            s(:lvasgn, :addr,
              s(:block,
                s(:send, nil, :start_server,
                  s(:lvar, :logger),
                  s(:lvar, :config)),
                s(:args,
                  s(:arg, :w)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :servlet), :respond_to?,
                      s(:sym, :call)),
                    s(:lvasgn, :servlet,
                      s(:send,
                        s(:lvar, :servlet), :call,
                        s(:lvar, :w))), nil),
                  s(:send,
                    s(:lvar, :w), :mount,
                    s(:str, "/RPC2"),
                    s(:lvar, :servlet))))),
            s(:lvasgn, :client_thread,
              s(:block,
                s(:send,
                  s(:const, nil, :Thread), :new),
                s(:args),
                s(:kwbegin,
                  s(:ensure,
                    s(:yield,
                      s(:lvar, :addr)),
                    s(:send,
                      s(:ivar, :@__server), :shutdown))))),
            s(:lvasgn, :server_thread,
              s(:block,
                s(:send,
                  s(:const, nil, :Thread), :new),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:ivar, :@__server_thread), :join),
                  s(:ivasgn, :@__server,
                    s(:nil)),
                  s(:send, nil, :assert_equal,
                    s(:array),
                    s(:lvar, :log))))),
            s(:send, nil, :assert_join_threads,
              s(:array,
                s(:lvar, :client_thread),
                s(:lvar, :server_thread)))))))))
