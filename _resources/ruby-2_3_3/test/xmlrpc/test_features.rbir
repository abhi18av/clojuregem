s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "xmlrpc/create")),
  s(:send, nil, :require,
    s(:str, "xmlrpc/parser")),
  s(:send, nil, :require,
    s(:str, "xmlrpc/config")),
  s(:module,
    s(:const, nil, :TestXMLRPC),
    s(:class,
      s(:const, nil, :Test_Features),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:ivasgn, :@params,
            s(:array,
              s(:nil),
              s(:hash,
                s(:pair,
                  s(:str, "test"),
                  s(:nil))),
              s(:array,
                s(:nil),
                s(:int, 1),
                s(:nil))))),
        s(:def, :test_nil_create,
          s(:args),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :XMLRPC), :XMLWriter), :each_installed_writer),
            s(:args,
              s(:arg, :writer)),
            s(:begin,
              s(:lvasgn, :c,
                s(:send,
                  s(:const,
                    s(:const, nil, :XMLRPC), :Create), :new,
                  s(:lvar, :writer))),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :XMLRPC), :Config), :module_eval),
                s(:args),
                s(:send, nil, :remove_const,
                  s(:sym, :ENABLE_NIL_CREATE))),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :Config), :const_set,
                s(:sym, :ENABLE_NIL_CREATE),
                s(:false)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :RuntimeError)),
                s(:args),
                s(:send,
                  s(:lvar, :c), :methodCall,
                  s(:str, "test"),
                  s(:splat,
                    s(:ivar, :@params)))),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :XMLRPC), :Config), :module_eval),
                s(:args),
                s(:send, nil, :remove_const,
                  s(:sym, :ENABLE_NIL_CREATE))),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :Config), :const_set,
                s(:sym, :ENABLE_NIL_CREATE),
                s(:true)),
              s(:block,
                s(:send, nil, :assert_nothing_raised),
                s(:args),
                s(:send,
                  s(:lvar, :c), :methodCall,
                  s(:str, "test"),
                  s(:splat,
                    s(:ivar, :@params))))))),
        s(:def, :test_nil_parse,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :Config), :module_eval),
              s(:args),
              s(:send, nil, :remove_const,
                s(:sym, :ENABLE_NIL_CREATE))),
            s(:send,
              s(:const,
                s(:const, nil, :XMLRPC), :Config), :const_set,
              s(:sym, :ENABLE_NIL_CREATE),
              s(:true)),
            s(:block,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :XMLWriter), :each_installed_writer),
              s(:args,
                s(:arg, :writer)),
              s(:begin,
                s(:lvasgn, :c,
                  s(:send,
                    s(:const,
                      s(:const, nil, :XMLRPC), :Create), :new,
                    s(:lvar, :writer))),
                s(:lvasgn, :str,
                  s(:send,
                    s(:lvar, :c), :methodCall,
                    s(:str, "test"),
                    s(:splat,
                      s(:ivar, :@params)))),
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const, nil, :XMLRPC), :XMLParser), :each_installed_parser),
                  s(:args,
                    s(:arg, :parser)),
                  s(:begin,
                    s(:lvasgn, :para,
                      s(:nil)),
                    s(:block,
                      s(:send,
                        s(:const,
                          s(:const, nil, :XMLRPC), :Config), :module_eval),
                      s(:args),
                      s(:send, nil, :remove_const,
                        s(:sym, :ENABLE_NIL_PARSER))),
                    s(:send,
                      s(:const,
                        s(:const, nil, :XMLRPC), :Config), :const_set,
                      s(:sym, :ENABLE_NIL_PARSER),
                      s(:false)),
                    s(:block,
                      s(:send, nil, :assert_raise,
                        s(:const, nil, :RuntimeError)),
                      s(:args),
                      s(:lvasgn, :para,
                        s(:send,
                          s(:lvar, :parser), :parseMethodCall,
                          s(:lvar, :str)))),
                    s(:block,
                      s(:send,
                        s(:const,
                          s(:const, nil, :XMLRPC), :Config), :module_eval),
                      s(:args),
                      s(:send, nil, :remove_const,
                        s(:sym, :ENABLE_NIL_PARSER))),
                    s(:send,
                      s(:const,
                        s(:const, nil, :XMLRPC), :Config), :const_set,
                      s(:sym, :ENABLE_NIL_PARSER),
                      s(:true)),
                    s(:block,
                      s(:send, nil, :assert_nothing_raised),
                      s(:args),
                      s(:lvasgn, :para,
                        s(:send,
                          s(:lvar, :parser), :parseMethodCall,
                          s(:lvar, :str)))),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :para), :[],
                        s(:int, 1)),
                      s(:ivar, :@params))))))))))))
