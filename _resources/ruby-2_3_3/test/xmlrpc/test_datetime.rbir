s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "xmlrpc/datetime")),
  s(:module,
    s(:const, nil, :TestXMLRPC),
    s(:class,
      s(:const, nil, :Test_DateTime),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :test_new,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send, nil, :createDateTime)),
            s(:send, nil, :assert_instance_of,
              s(:const,
                s(:const, nil, :XMLRPC), :DateTime),
              s(:lvar, :dt)))),
        s(:def, :test_new_exception,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:float, 4.5),
                s(:int, 13),
                s(:int, 32),
                s(:int, 25),
                s(:int, 60),
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 12),
                s(:int, 32),
                s(:int, 25),
                s(:int, 60),
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 12),
                s(:int, 31),
                s(:int, 25),
                s(:int, 60),
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 12),
                s(:int, 31),
                s(:int, 24),
                s(:int, 60),
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 12),
                s(:int, 31),
                s(:int, 24),
                s(:int, 59),
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 12),
                s(:int, 31),
                s(:int, 24),
                s(:int, 59),
                s(:int, 59))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 0),
                s(:int, 0),
                s(:int, -1),
                s(:int, -1),
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 0),
                s(:int, -1),
                s(:int, -1),
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 1),
                s(:int, -1),
                s(:int, -1),
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 1),
                s(:int, 0),
                s(:int, -1),
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 1),
                s(:int, 0),
                s(:int, 0),
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 1),
                s(:int, 0),
                s(:int, 0),
                s(:int, 0))))),
        s(:def, :test_get_values,
          s(:args),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :y),
                s(:lvasgn, :m),
                s(:lvasgn, :d),
                s(:lvasgn, :h),
                s(:lvasgn, :mi),
                s(:lvasgn, :s)),
              s(:array,
                s(:int, 1970),
                s(:int, 3),
                s(:int, 24),
                s(:int, 12),
                s(:int, 0),
                s(:int, 5))),
            s(:lvasgn, :dt,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:lvar, :y),
                s(:lvar, :m),
                s(:lvar, :d),
                s(:lvar, :h),
                s(:lvar, :mi),
                s(:lvar, :s))),
            s(:send, nil, :assert_equal,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :dt), :year)),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :dt), :month)),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :dt), :mon)),
            s(:send, nil, :assert_equal,
              s(:lvar, :d),
              s(:send,
                s(:lvar, :dt), :day)),
            s(:send, nil, :assert_equal,
              s(:lvar, :h),
              s(:send,
                s(:lvar, :dt), :hour)),
            s(:send, nil, :assert_equal,
              s(:lvar, :mi),
              s(:send,
                s(:lvar, :dt), :min)),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:lvar, :dt), :sec)))),
        s(:def, :test_set_values,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send, nil, :createDateTime)),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :y),
                s(:lvasgn, :m),
                s(:lvasgn, :d),
                s(:lvasgn, :h),
                s(:lvasgn, :mi),
                s(:lvasgn, :s)),
              s(:array,
                s(:int, 1950),
                s(:int, 12),
                s(:int, 9),
                s(:int, 8),
                s(:int, 52),
                s(:int, 30))),
            s(:send,
              s(:lvar, :dt), :year=,
              s(:lvar, :y)),
            s(:send,
              s(:lvar, :dt), :month=,
              s(:lvar, :m)),
            s(:send,
              s(:lvar, :dt), :day=,
              s(:lvar, :d)),
            s(:send,
              s(:lvar, :dt), :hour=,
              s(:lvar, :h)),
            s(:send,
              s(:lvar, :dt), :min=,
              s(:lvar, :mi)),
            s(:send,
              s(:lvar, :dt), :sec=,
              s(:lvar, :s)),
            s(:send, nil, :assert_equal,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :dt), :year)),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :dt), :month)),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :dt), :mon)),
            s(:send, nil, :assert_equal,
              s(:lvar, :d),
              s(:send,
                s(:lvar, :dt), :day)),
            s(:send, nil, :assert_equal,
              s(:lvar, :h),
              s(:send,
                s(:lvar, :dt), :hour)),
            s(:send, nil, :assert_equal,
              s(:lvar, :mi),
              s(:send,
                s(:lvar, :dt), :min)),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:lvar, :dt), :sec)),
            s(:send,
              s(:lvar, :dt), :mon=,
              s(:int, 5)),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:lvar, :dt), :month)),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:lvar, :dt), :mon)))),
        s(:def, :test_set_exception,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send, nil, :createDateTime)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :year=,
                s(:float, 4.5))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :year=,
                s(:int, -2000))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :month=,
                s(:int, 0))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :month=,
                s(:int, 13))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :month=,
                s(:int, 7))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :mon=,
                s(:int, 0))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :mon=,
                s(:int, 13))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :mon=,
                s(:int, 7))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :day=,
                s(:int, 0))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :day=,
                s(:int, 32))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :day=,
                s(:int, 16))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :hour=,
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :hour=,
                s(:int, 25))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :hour=,
                s(:int, 12))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :min=,
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :min=,
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :min=,
                s(:int, 30))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :sec=,
                s(:int, -1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :sec=,
                s(:int, 60))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :dt), :sec=,
                s(:int, 30))))),
        s(:def, :test_to_a,
          s(:args),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :y),
                s(:lvasgn, :m),
                s(:lvasgn, :d),
                s(:lvasgn, :h),
                s(:lvasgn, :mi),
                s(:lvasgn, :s)),
              s(:array,
                s(:int, 1970),
                s(:int, 3),
                s(:int, 24),
                s(:int, 12),
                s(:int, 0),
                s(:int, 5))),
            s(:lvasgn, :dt,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:lvar, :y),
                s(:lvar, :m),
                s(:lvar, :d),
                s(:lvar, :h),
                s(:lvar, :mi),
                s(:lvar, :s))),
            s(:lvasgn, :a,
              s(:send,
                s(:lvar, :dt), :to_a)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Array),
              s(:lvar, :a)),
            s(:send, nil, :assert_equal,
              s(:int, 6),
              s(:send,
                s(:lvar, :a), :size),
              s(:str, "Returned array has wrong size")),
            s(:send, nil, :assert_equal,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :a), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :a), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:lvar, :d),
              s(:send,
                s(:lvar, :a), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:lvar, :h),
              s(:send,
                s(:lvar, :a), :[],
                s(:int, 3))),
            s(:send, nil, :assert_equal,
              s(:lvar, :mi),
              s(:send,
                s(:lvar, :a), :[],
                s(:int, 4))),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:lvar, :a), :[],
                s(:int, 5))))),
        s(:def, :test_to_time1,
          s(:args),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :y),
                s(:lvasgn, :m),
                s(:lvasgn, :d),
                s(:lvasgn, :h),
                s(:lvasgn, :mi),
                s(:lvasgn, :s)),
              s(:array,
                s(:int, 1970),
                s(:int, 3),
                s(:int, 24),
                s(:int, 12),
                s(:int, 0),
                s(:int, 5))),
            s(:lvasgn, :dt,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:lvar, :y),
                s(:lvar, :m),
                s(:lvar, :d),
                s(:lvar, :h),
                s(:lvar, :mi),
                s(:lvar, :s))),
            s(:lvasgn, :time,
              s(:send,
                s(:lvar, :dt), :to_time)),
            s(:send, nil, :assert_not_nil,
              s(:lvar, :time)),
            s(:send, nil, :assert_equal,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :time), :year)),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :time), :month)),
            s(:send, nil, :assert_equal,
              s(:lvar, :d),
              s(:send,
                s(:lvar, :time), :day)),
            s(:send, nil, :assert_equal,
              s(:lvar, :h),
              s(:send,
                s(:lvar, :time), :hour)),
            s(:send, nil, :assert_equal,
              s(:lvar, :mi),
              s(:send,
                s(:lvar, :time), :min)),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:lvar, :time), :sec)))),
        s(:def, :test_to_time2,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send, nil, :createDateTime)),
            s(:send,
              s(:lvar, :dt), :year=,
              s(:int, 1969)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :dt), :to_time)))),
        s(:def, :test_to_date1,
          s(:args),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :y),
                s(:lvasgn, :m),
                s(:lvasgn, :d),
                s(:lvasgn, :h),
                s(:lvasgn, :mi),
                s(:lvasgn, :s)),
              s(:array,
                s(:int, 1970),
                s(:int, 3),
                s(:int, 24),
                s(:int, 12),
                s(:int, 0),
                s(:int, 5))),
            s(:lvasgn, :dt,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :DateTime), :new,
                s(:lvar, :y),
                s(:lvar, :m),
                s(:lvar, :d),
                s(:lvar, :h),
                s(:lvar, :mi),
                s(:lvar, :s))),
            s(:lvasgn, :date,
              s(:send,
                s(:lvar, :dt), :to_date)),
            s(:send, nil, :assert_equal,
              s(:lvar, :y),
              s(:send,
                s(:lvar, :date), :year)),
            s(:send, nil, :assert_equal,
              s(:lvar, :m),
              s(:send,
                s(:lvar, :date), :month)),
            s(:send, nil, :assert_equal,
              s(:lvar, :d),
              s(:send,
                s(:lvar, :date), :day)))),
        s(:def, :test_to_date2,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send, nil, :createDateTime)),
            s(:send,
              s(:lvar, :dt), :year=,
              s(:int, 666)),
            s(:send, nil, :assert_equal,
              s(:int, 666),
              s(:send,
                s(:send,
                  s(:lvar, :dt), :to_date), :year)))),
        s(:def, :createDateTime,
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :XMLRPC), :DateTime), :new,
            s(:int, 1970),
            s(:int, 3),
            s(:int, 24),
            s(:int, 12),
            s(:int, 0),
            s(:int, 5)))))))
