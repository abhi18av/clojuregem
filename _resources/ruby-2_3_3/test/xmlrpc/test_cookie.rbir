s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "time")),
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:send, nil, :require_relative,
    s(:str, "webrick_testing")),
  s(:send, nil, :require,
    s(:str, "xmlrpc/server")),
  s(:send, nil, :require,
    s(:str, "xmlrpc/client")),
  s(:module,
    s(:const, nil, :TestXMLRPC),
    s(:class,
      s(:const, nil, :TestCookie),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :WEBrick_Testing)),
        s(:def, :create_servlet,
          s(:args),
          s(:begin,
            s(:lvasgn, :s,
              s(:send,
                s(:const,
                  s(:const, nil, :XMLRPC), :WEBrickServlet), :new)),
            s(:defs,
              s(:lvar, :s), :logged_in_users,
              s(:args),
              s(:or_asgn,
                s(:ivasgn, :@logged_in_users),
                s(:hash))),
            s(:defs,
              s(:lvar, :s), :request,
              s(:args),
              s(:ivar, :@request)),
            s(:defs,
              s(:lvar, :s), :response,
              s(:args),
              s(:ivar, :@response)),
            s(:defs,
              s(:lvar, :s), :service,
              s(:args,
                s(:arg, :request),
                s(:arg, :response)),
              s(:ensure,
                s(:begin,
                  s(:ivasgn, :@request,
                    s(:lvar, :request)),
                  s(:ivasgn, :@response,
                    s(:lvar, :response)),
                  s(:zsuper)),
                s(:begin,
                  s(:ivasgn, :@request,
                    s(:nil)),
                  s(:ivasgn, :@response,
                    s(:nil))))),
            s(:lvasgn, :key,
              s(:send,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :to_i), :to_s)),
            s(:lvasgn, :valid_user,
              s(:str, "valid-user")),
            s(:block,
              s(:send,
                s(:lvar, :s), :add_handler,
                s(:str, "test.login")),
              s(:args,
                s(:arg, :user),
                s(:arg, :password)),
              s(:begin,
                s(:lvasgn, :ok,
                  s(:begin,
                    s(:and,
                      s(:send,
                        s(:lvar, :user), :==,
                        s(:lvar, :valid_user)),
                      s(:send,
                        s(:lvar, :password), :==,
                        s(:str, "secret"))))),
                s(:if,
                  s(:lvar, :ok),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :logged_in_users), :[]=,
                      s(:lvar, :key),
                      s(:lvar, :user)),
                    s(:lvasgn, :expires,
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:const, nil, :Time), :now), :+,
                            s(:send,
                              s(:int, 60), :*,
                              s(:int, 60)))), :httpdate)),
                    s(:lvasgn, :cookies,
                      s(:send,
                        s(:send,
                          s(:lvar, :s), :response), :cookies)),
                    s(:send,
                      s(:lvar, :cookies), :<<,
                      s(:dstr,
                        s(:str, "key=\""),
                        s(:begin,
                          s(:lvar, :key)),
                        s(:str, "\"; path=\"/RPC2\"; expires="),
                        s(:begin,
                          s(:lvar, :expires)))),
                    s(:send,
                      s(:lvar, :cookies), :<<,
                      s(:dstr,
                        s(:str, "user=\""),
                        s(:begin,
                          s(:lvar, :user)),
                        s(:str, "\"; path=\"/RPC2\"")))), nil),
                s(:lvar, :ok))),
            s(:block,
              s(:send,
                s(:lvar, :s), :add_handler,
                s(:str, "test.require_authenticate_echo")),
              s(:args,
                s(:arg, :string)),
              s(:begin,
                s(:lvasgn, :cookies,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :request), :cookies), :each),
                  s(:args,
                    s(:arg, :cookie)),
                  s(:send,
                    s(:lvar, :cookies), :[]=,
                    s(:send,
                      s(:lvar, :cookie), :name),
                    s(:send,
                      s(:lvar, :cookie), :value))),
                s(:if,
                  s(:send,
                    s(:lvar, :cookies), :==,
                    s(:hash,
                      s(:pair,
                        s(:str, "key"),
                        s(:lvar, :key)),
                      s(:pair,
                        s(:str, "user"),
                        s(:lvar, :valid_user)))),
                  s(:lvar, :string),
                  s(:send, nil, :raise,
                    s(:send,
                      s(:const,
                        s(:const, nil, :XMLRPC), :FaultException), :new,
                      s(:int, 29),
                      s(:str, "Authentication required")))))),
            s(:block,
              s(:send,
                s(:lvar, :s), :set_default_handler),
              s(:args,
                s(:arg, :name),
                s(:restarg, :args)),
              s(:send, nil, :raise,
                s(:send,
                  s(:const,
                    s(:const, nil, :XMLRPC), :FaultException), :new,
                  s(:int, -99),
                  s(:send,
                    s(:dstr,
                      s(:str, "Method "),
                      s(:begin,
                        s(:lvar, :name)),
                      s(:str, " missing")), :+,
                    s(:str, " or wrong number of parameters!"))))),
            s(:send,
              s(:lvar, :s), :add_introspection),
            s(:lvar, :s))),
        s(:def, :setup_http_server_option,
          s(:args),
          s(:lvasgn, :option,
            s(:hash,
              s(:pair,
                s(:sym, :Port),
                s(:int, 0))))),
        s(:def, :test_cookie,
          s(:args),
          s(:begin,
            s(:lvasgn, :option,
              s(:send, nil, :setup_http_server_option)),
            s(:block,
              s(:send, nil, :with_server,
                s(:lvar, :option),
                s(:send, nil, :create_servlet)),
              s(:args,
                s(:arg, :addr)),
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:ivasgn, :@s,
                      s(:send,
                        s(:const,
                          s(:const, nil, :XMLRPC), :Client), :new3,
                        s(:hash,
                          s(:pair,
                            s(:sym, :host),
                            s(:send,
                              s(:lvar, :addr), :ip_address)),
                          s(:pair,
                            s(:sym, :port),
                            s(:send,
                              s(:lvar, :addr), :ip_port))))),
                    s(:send, nil, :do_test)),
                  s(:send,
                    s(:send,
                      s(:ivar, :@s), :http), :finish)))))),
        s(:def, :do_test,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:ivar, :@s), :call,
                  s(:str, "test.login"),
                  s(:str, "invalid-user"),
                  s(:str, "invalid-password")), :!)),
            s(:lvasgn, :exception,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const,
                    s(:const, nil, :XMLRPC), :FaultException)),
                s(:args),
                s(:send,
                  s(:ivar, :@s), :call,
                  s(:str, "test.require_authenticate_echo"),
                  s(:str, "Hello")))),
            s(:send, nil, :assert_equal,
              s(:int, 29),
              s(:send,
                s(:lvar, :exception), :faultCode)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@s), :call,
                s(:str, "test.login"),
                s(:str, "valid-user"),
                s(:str, "secret"))),
            s(:send, nil, :assert_equal,
              s(:str, "Hello"),
              s(:send,
                s(:ivar, :@s), :call,
                s(:str, "test.require_authenticate_echo"),
                s(:str, "Hello")))))))))
