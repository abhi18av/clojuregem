s(:begin,
  s(:gvasgn, :$extmk,
    s(:true)),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "mkmf")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:gvasgn, :$extout,
    s(:send,
      s(:str, "$(topdir)/"), :+,
      s(:send,
        s(:const,
          s(:const, nil, :RbConfig), :CONFIG), :[],
        s(:str, "EXTOUT")))),
  s(:send,
    s(:const,
      s(:const, nil, :RbConfig), :CONFIG), :[]=,
    s(:str, "topdir"),
    s(:send,
      s(:const, nil, :CONFIG), :[]=,
      s(:str, "topdir"),
      s(:send,
        s(:const, nil, :File), :expand_path,
        s(:send,
          s(:const, nil, :CONFIG), :[],
          s(:str, "topdir"))))),
  s(:send,
    s(:const,
      s(:const, nil, :RbConfig), :CONFIG), :[]=,
    s(:str, "extout"),
    s(:send,
      s(:const, nil, :CONFIG), :[]=,
      s(:str, "extout"),
      s(:gvar, :$extout))),
  s(:send,
    s(:gvar, :$INCFLAGS), :<<,
    s(:str, " -I.")),
  s(:gvasgn, :$extout_prefix,
    s(:str, "$(extout)$(target_prefix)/")),
  s(:class,
    s(:const, nil, :TestMkmf),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase), nil),
  s(:module,
    s(:const,
      s(:const, nil, :TestMkmf), :Base),
    s(:begin,
      s(:casgn, nil, :MKMFLOG,
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:rescue,
            s(:send,
              s(:const, nil, :File), :read,
              s(:str, "mkmf.log")),
            s(:resbody, nil, nil,
              s(:str, "")), nil))),
      s(:class,
        s(:const, nil, :Capture), nil,
        s(:begin,
          s(:send, nil, :attr_accessor,
            s(:sym, :origin)),
          s(:def, :initialize,
            s(:args),
            s(:begin,
              s(:ivasgn, :@buffer,
                s(:str, "")),
              s(:ivasgn, :@filter,
                s(:nil)),
              s(:ivasgn, :@out,
                s(:true)),
              s(:ivasgn, :@origin,
                s(:nil)))),
          s(:def, :clear,
            s(:args),
            s(:send,
              s(:ivar, :@buffer), :clear)),
          s(:def, :flush,
            s(:args),
            s(:begin,
              s(:send,
                s(:const, nil, :STDOUT), :print,
                s(:if,
                  s(:ivar, :@filter),
                  s(:send,
                    s(:ivar, :@filter), :call,
                    s(:ivar, :@buffer)),
                  s(:ivar, :@buffer))),
              s(:send, nil, :clear))),
          s(:def, :reopen,
            s(:args,
              s(:arg, :io)),
            s(:case,
              s(:lvar, :io),
              s(:when,
                s(:const, nil, :Capture),
                s(:send, nil, :initialize_copy,
                  s(:lvar, :io))),
              s(:when,
                s(:const, nil, :File),
                s(:begin,
                  s(:ivasgn, :@out,
                    s(:false)),
                  s(:if,
                    s(:ivar, :@origin),
                    s(:send,
                      s(:ivar, :@origin), :reopen,
                      s(:lvar, :io)), nil))),
              s(:when,
                s(:const, nil, :IO),
                s(:begin,
                  s(:ivasgn, :@out,
                    s(:true)),
                  s(:if,
                    s(:ivar, :@origin),
                    s(:send,
                      s(:ivar, :@origin), :reopen,
                      s(:lvar, :io)), nil))),
              s(:ivasgn, :@out,
                s(:false)))),
          s(:def, :filter,
            s(:args,
              s(:blockarg, :block)),
            s(:ivasgn, :@filter,
              s(:lvar, :block))),
          s(:def, :write,
            s(:args,
              s(:arg, :s)),
            s(:if,
              s(:ivar, :@out),
              s(:send,
                s(:ivar, :@buffer), :<<,
                s(:lvar, :s)),
              s(:if,
                s(:ivar, :@origin),
                s(:send,
                  s(:ivar, :@origin), :<<,
                  s(:lvar, :s)), nil))))),
      s(:send, nil, :attr_reader,
        s(:sym, :stdout)),
      s(:def, :mkmflog,
        s(:args,
          s(:arg, :msg)),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:send,
            s(:send,
              s(:const, nil, :MKMFLOG), :[]), :<<,
            s(:lvar, :msg)))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@rbconfig,
            s(:lvasgn, :rbconfig0,
              s(:const,
                s(:const, nil, :RbConfig), :CONFIG))),
          s(:ivasgn, :@mkconfig,
            s(:lvasgn, :mkconfig0,
              s(:const,
                s(:const, nil, :RbConfig), :MAKEFILE_CONFIG))),
          s(:lvasgn, :rbconfig,
            s(:hash,
              s(:pair,
                s(:str, "hdrdir"),
                s(:gvar, :$hdrdir)),
              s(:pair,
                s(:str, "srcdir"),
                s(:gvar, :$srcdir)),
              s(:pair,
                s(:str, "topdir"),
                s(:gvar, :$topdir)))),
          s(:lvasgn, :mkconfig,
            s(:hash,
              s(:pair,
                s(:str, "hdrdir"),
                s(:str, "$(top_srcdir)/include")),
              s(:pair,
                s(:str, "srcdir"),
                s(:str, "$(top_srcdir)")),
              s(:pair,
                s(:str, "topdir"),
                s(:gvar, :$topdir)))),
          s(:block,
            s(:send,
              s(:lvar, :rbconfig0), :each_pair),
            s(:args,
              s(:arg, :key),
              s(:arg, :val)),
            s(:or_asgn,
              s(:send,
                s(:lvar, :rbconfig), :[],
                s(:lvar, :key)),
              s(:send,
                s(:lvar, :val), :dup))),
          s(:block,
            s(:send,
              s(:lvar, :mkconfig0), :each_pair),
            s(:args,
              s(:arg, :key),
              s(:arg, :val)),
            s(:or_asgn,
              s(:send,
                s(:lvar, :mkconfig), :[],
                s(:lvar, :key)),
              s(:send,
                s(:lvar, :val), :dup))),
          s(:block,
            s(:send,
              s(:const, nil, :RbConfig), :module_eval),
            s(:args),
            s(:begin,
              s(:send, nil, :remove_const,
                s(:sym, :CONFIG)),
              s(:send, nil, :const_set,
                s(:sym, :CONFIG),
                s(:lvar, :rbconfig)),
              s(:send, nil, :remove_const,
                s(:sym, :MAKEFILE_CONFIG)),
              s(:send, nil, :const_set,
                s(:sym, :MAKEFILE_CONFIG),
                s(:lvar, :mkconfig)))),
          s(:block,
            s(:send,
              s(:const, nil, :MakeMakefile), :class_eval),
            s(:args),
            s(:begin,
              s(:send, nil, :remove_const,
                s(:sym, :CONFIG)),
              s(:send, nil, :const_set,
                s(:sym, :CONFIG),
                s(:lvar, :mkconfig)))),
          s(:ivasgn, :@tmpdir,
            s(:send,
              s(:const, nil, :Dir), :mktmpdir)),
          s(:ivasgn, :@curdir,
            s(:send,
              s(:const, nil, :Dir), :pwd)),
          s(:ivasgn, :@mkmfobj,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:ivasgn, :@stdout,
            s(:send,
              s(:const, nil, :Capture), :new)),
          s(:send,
            s(:const, nil, :Dir), :chdir,
            s(:ivar, :@tmpdir)),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@quiet),
              s(:send,
                s(:const, nil, :Logging), :quiet=)),
            s(:array,
              s(:send,
                s(:const, nil, :Logging), :quiet),
              s(:true))),
          s(:send, nil, :init_mkmf),
          s(:send,
            s(:gvar, :$INCFLAGS), :[]=,
            s(:int, 0),
            s(:int, 0),
            s(:str, "-I. ")))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:lvasgn, :rbconfig0,
            s(:ivar, :@rbconfig)),
          s(:lvasgn, :mkconfig0,
            s(:ivar, :@mkconfig)),
          s(:block,
            s(:send,
              s(:const, nil, :RbConfig), :module_eval),
            s(:args),
            s(:begin,
              s(:send, nil, :remove_const,
                s(:sym, :CONFIG)),
              s(:send, nil, :const_set,
                s(:sym, :CONFIG),
                s(:lvar, :rbconfig0)),
              s(:send, nil, :remove_const,
                s(:sym, :MAKEFILE_CONFIG)),
              s(:send, nil, :const_set,
                s(:sym, :MAKEFILE_CONFIG),
                s(:lvar, :mkconfig0)))),
          s(:block,
            s(:send,
              s(:const, nil, :MakeMakefile), :class_eval),
            s(:args),
            s(:begin,
              s(:send, nil, :remove_const,
                s(:sym, :CONFIG)),
              s(:send, nil, :const_set,
                s(:sym, :CONFIG),
                s(:lvar, :mkconfig0)))),
          s(:send,
            s(:const, nil, :Logging), :quiet=,
            s(:ivar, :@quiet)),
          s(:send,
            s(:const, nil, :Logging), :log_close),
          s(:send,
            s(:const, nil, :FileUtils), :rm_f,
            s(:str, "mkmf.log")),
          s(:send,
            s(:const, nil, :Dir), :chdir,
            s(:ivar, :@curdir)),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:ivar, :@tmpdir)))),
      s(:def, :mkmf,
        s(:args,
          s(:restarg, :args),
          s(:blockarg, :block)),
        s(:ensure,
          s(:begin,
            s(:send,
              s(:ivar, :@stdout), :clear),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :stdout),
                s(:send,
                  s(:ivar, :@stdout), :origin=),
                s(:gvasgn, :$stdout)),
              s(:array,
                s(:send,
                  s(:ivar, :@stdout), :origin),
                s(:gvar, :$stdout),
                s(:ivar, :@stdout))),
            s(:send,
              s(:ivar, :@mkmfobj), :instance_eval,
              s(:splat,
                s(:lvar, :args)),
              s(:block_pass,
                s(:lvar, :block)))),
          s(:masgn,
            s(:mlhs,
              s(:gvasgn, :$stdout),
              s(:send,
                s(:ivar, :@stdout), :origin=)),
            s(:array,
              s(:send,
                s(:ivar, :@stdout), :origin),
              s(:lvar, :stdout))))),
      s(:def, :config_value,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:send, nil, :create_tmpsrc,
            s(:dstr,
              s(:str, "---config-value="),
              s(:begin,
                s(:lvar, :name)))),
          s(:block,
            s(:send, nil, :xpopen,
              s(:send, nil, :cpp_command,
                s(:str, ""))),
            s(:args,
              s(:arg, :f)),
            s(:block,
              s(:send,
                s(:lvar, :f), :grep,
                s(:regexp,
                  s(:str, "^---config-value=(.*)"),
                  s(:regopt))),
              s(:args),
              s(:return,
                s(:nth_ref, 1)))),
          s(:nil))))),
  s(:class,
    s(:const, nil, :TestMkmf), nil,
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :TestMkmf), :Base)),
      s(:def, :assert_separately,
        s(:args,
          s(:arg, :args),
          s(:arg, :src),
          s(:restarg, :rest)),
        s(:super,
          s(:send,
            s(:lvar, :args), :+,
            s(:array,
              s(:dstr,
                s(:str, "-r"),
                s(:begin,
                  s(:str, "(string)"))))),
          s(:dstr,
            s(:str, "extend TestMkmf::Base; setup\nEND{teardown}\n"),
            s(:begin,
              s(:lvar, :src))),
          s(:splat,
            s(:lvar, :rest)))))))
