s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "base")),
  s(:class,
    s(:const, nil, :TestMkmf), nil,
    s(:class,
      s(:const, nil, :TestTryConstant),
      s(:const, nil, :TestMkmf),
      s(:begin,
        s(:def, :test_simple,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "0"))),
              s(:const, nil, :MKMFLOG)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "1"))),
              s(:const, nil, :MKMFLOG)),
            s(:send, nil, :assert_equal,
              s(:int, -1),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "-1"))),
              s(:const, nil, :MKMFLOG)))),
        s(:def, :test_sizeof,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send, nil, :config_value,
                  s(:str, "SIZEOF_INT")), :to_i),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "sizeof(int)"))),
              s(:const, nil, :MKMFLOG)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send, nil, :config_value,
                  s(:str, "SIZEOF_LONG")), :to_i),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "sizeof(long)"))),
              s(:const, nil, :MKMFLOG)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send, nil, :config_value,
                  s(:str, "SIZEOF_VOIDP")), :to_i),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "sizeof(void*)"))),
              s(:const, nil, :MKMFLOG)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send, nil, :config_value,
                  s(:str, "SIZEOF_VALUE")), :to_i),
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "sizeof(Qnil)"))),
              s(:const, nil, :MKMFLOG)))),
        s(:def, :test_long,
          s(:args),
          s(:begin,
            s(:lvasgn, :sizeof_int,
              s(:send,
                s(:send, nil, :config_value,
                  s(:str, "SIZEOF_INT")), :to_i)),
            s(:lvasgn, :sizeof_long,
              s(:send,
                s(:send, nil, :config_value,
                  s(:str, "SIZEOF_LONG")), :to_i)),
            s(:if,
              s(:send,
                s(:lvar, :sizeof_long), :>,
                s(:lvar, :sizeof_int)),
              s(:lvasgn, :type,
                s(:str, "long")),
              s(:begin,
                s(:lvasgn, :sizeof_long_long,
                  s(:send,
                    s(:send, nil, :config_value,
                      s(:str, "SIZEOF_LONG_LONG")), :to_i)),
                s(:if,
                  s(:or,
                    s(:send,
                      s(:lvar, :sizeof_long_long), :!),
                    s(:send,
                      s(:lvar, :sizeof_long_long), :<=,
                      s(:lvar, :sizeof_int))),
                  s(:return), nil),
                s(:lvasgn, :type,
                  s(:str, "LONG_LONG")))),
            s(:lvasgn, :decl,
              s(:dstr,
                s(:str, "#define CONFTEST_VALUE (unsigned "),
                s(:begin,
                  s(:lvar, :type)),
                s(:str, ")(((unsigned "),
                s(:begin,
                  s(:lvar, :type)),
                s(:str, ")1)<<(CHAR_BIT*sizeof(int)))"))),
            s(:send, nil, :assert_operator,
              s(:block,
                s(:send, nil, :mkmf),
                s(:args),
                s(:send, nil, :try_constant,
                  s(:str, "CONFTEST_VALUE"),
                  s(:array,
                    s(:array,
                      s(:lvar, :decl))))),
              s(:sym, :>),
              s(:int, 0),
              s(:const, nil, :MKMFLOG)))),
        s(:def, :test_large_unsigned,
          s(:args),
          s(:send, nil, :assert_operator,
            s(:block,
              s(:send, nil, :mkmf),
              s(:args),
              s(:send, nil, :try_constant,
                s(:str, "1U<<(CHAR_BIT*sizeof(int)-1)"))),
            s(:sym, :>),
            s(:int, 0),
            s(:const, nil, :MKMFLOG)))))))
