s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "base")),
  s(:class,
    s(:const, nil, :TestMkmf), nil,
    s(:class,
      s(:const, nil, :TestFlags),
      s(:const, nil, :TestMkmf),
      s(:begin,
        s(:def, :test_valid_warnflags,
          s(:args),
          s(:ensure,
            s(:begin,
              s(:lvasgn, :val,
                s(:gvar, :$extmk)),
              s(:lvasgn, :warnflags,
                s(:gvar, :$warnflags)),
              s(:lvasgn, :makefile,
                s(:block,
                  s(:send, nil, :mkmf),
                  s(:args),
                  s(:begin,
                    s(:gvasgn, :$extmk,
                      s(:false)),
                    s(:send,
                      s(:const,
                        s(:send,
                          s(:self), :class), :CONFIG), :[]=,
                      s(:str, "warnflags"),
                      s(:send,
                        s(:array,
                          s(:str, "-Wextra"),
                          s(:str, "-Wno-unused-parameter"),
                          s(:str, "-Wno-parentheses"),
                          s(:str, "-Wno-long-long"),
                          s(:str, "-Wno-missing-field-initializers"),
                          s(:str, "-Werror=pointer-arith"),
                          s(:str, "-Werror=write-strings"),
                          s(:str, "-Werror=declaration-after-statement"),
                          s(:str, "-Werror=shorten-64-to-32"),
                          s(:str, "-Werror-implicit-function-declaration")), :join,
                        s(:str, " "))),
                    s(:send,
                      s(:const,
                        s(:send,
                          s(:self), :class), :CONFIG), :[]=,
                      s(:str, "GCC"),
                      s(:str, "yes")),
                    s(:send, nil, :init_mkmf,
                      s(:const,
                        s(:send,
                          s(:self), :class), :CONFIG)),
                    s(:send, nil, :configuration,
                      s(:str, "."))))),
              s(:lvasgn, :generated_flags,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :makefile), :grep,
                        s(:regexp,
                          s(:str, "warnflags"),
                          s(:regopt))), :first), :[],
                    s(:regexp,
                      s(:str, "^warnflags = (.*)$"),
                      s(:regopt)),
                    s(:int, 1)), :split)),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:str, "-Wextra"),
                  s(:str, "-Wno-unused-parameter"),
                  s(:str, "-Wno-parentheses"),
                  s(:str, "-Wno-long-long"),
                  s(:str, "-Wno-missing-field-initializers"),
                  s(:str, "-Wpointer-arith"),
                  s(:str, "-Wwrite-strings"),
                  s(:str, "-Wdeclaration-after-statement"),
                  s(:str, "-Wshorten-64-to-32"),
                  s(:str, "-Wimplicit-function-declaration")),
                s(:lvar, :generated_flags))),
            s(:begin,
              s(:gvasgn, :$warnflags,
                s(:lvar, :warnflags)),
              s(:gvasgn, :$extmk,
                s(:lvar, :val))))),
        s(:def, :test_try_ldflag_invalid_opt,
          s(:args),
          s(:send, nil, :assert_separately,
            s(:array),
            s(:dstr,
              s(:str, "        assert(!try_ldflags(\"nosuch.c\"), TestMkmf::MKMFLOG)\n"),
              s(:str, "        assert(have_devel?, TestMkmf::MKMFLOG)\n")))),
        s(:def, :test_try_cflag_invalid_opt,
          s(:args),
          s(:send, nil, :assert_separately,
            s(:array),
            s(:dstr,
              s(:str, "        assert(!try_cflags(\"nosuch.c\"), TestMkmf::MKMFLOG)\n"),
              s(:str, "        assert(have_devel?, TestMkmf::MKMFLOG)\n")))),
        s(:def, :test_try_cppflag_invalid_opt,
          s(:args),
          s(:send, nil, :assert_separately,
            s(:array),
            s(:dstr,
              s(:str, "        assert(!try_cppflags(\"nosuch.c\"), TestMkmf::MKMFLOG)\n"),
              s(:str, "        assert(have_devel?, TestMkmf::MKMFLOG)\n"))))))))
