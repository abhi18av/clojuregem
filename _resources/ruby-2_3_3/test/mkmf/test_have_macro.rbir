s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "base")),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:class,
    s(:const, nil, :TestMkmf), nil,
    s(:class,
      s(:const, nil, :TestHaveMacro),
      s(:const, nil, :TestMkmf),
      s(:begin,
        s(:casgn, nil, :MACRO_NAME,
          s(:str, "RUBY_MKMFTEST_FOOBAR")),
        s(:def, :test_have_macro_opt,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send, nil, :have_macro,
              s(:const, nil, :MACRO_NAME),
              s(:nil),
              s(:dstr,
                s(:str, "-D"),
                s(:begin,
                  s(:const, nil, :MACRO_NAME)))),
            s(:const, nil, :MKMFLOG))),
        s(:def, :test_have_macro_header,
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :Tempfile), :create,
              s(:array,
                s(:str, "test_mkmf"),
                s(:str, ".h")),
              s(:str, ".")),
            s(:args,
              s(:arg, :tmp)),
            s(:begin,
              s(:send,
                s(:lvar, :tmp), :puts,
                s(:dstr,
                  s(:str, "#undef "),
                  s(:begin,
                    s(:const, nil, :MACRO_NAME)))),
              s(:send,
                s(:lvar, :tmp), :puts,
                s(:dstr,
                  s(:str, "#define "),
                  s(:begin,
                    s(:const, nil, :MACRO_NAME)),
                  s(:str, " 1"))),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:lvasgn, :base,
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:send,
                    s(:lvar, :tmp), :path))),
              s(:send, nil, :assert_equal,
                s(:true),
                s(:send, nil, :have_macro,
                  s(:const, nil, :MACRO_NAME),
                  s(:lvar, :base),
                  s(:str, "-I.")),
                s(:const, nil, :MKMFLOG))))),
        s(:def, :test_not_have_macro_opt,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send, nil, :have_macro,
              s(:const, nil, :MACRO_NAME),
              s(:nil),
              s(:dstr,
                s(:str, "-U"),
                s(:begin,
                  s(:const, nil, :MACRO_NAME)))),
            s(:const, nil, :MKMFLOG))),
        s(:def, :test_not_have_macro_header,
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :Tempfile), :create,
              s(:array,
                s(:str, "test_mkmf"),
                s(:str, ".h")),
              s(:str, ".")),
            s(:args,
              s(:arg, :tmp)),
            s(:begin,
              s(:send,
                s(:lvar, :tmp), :puts,
                s(:dstr,
                  s(:str, "#undef "),
                  s(:begin,
                    s(:const, nil, :MACRO_NAME)))),
              s(:send,
                s(:lvar, :tmp), :close),
              s(:lvasgn, :base,
                s(:send,
                  s(:const, nil, :File), :basename,
                  s(:send,
                    s(:lvar, :tmp), :path))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send, nil, :have_macro,
                  s(:const, nil, :MACRO_NAME),
                  s(:lvar, :base),
                  s(:str, "-I.")),
                s(:const, nil, :MKMFLOG)))))))))
