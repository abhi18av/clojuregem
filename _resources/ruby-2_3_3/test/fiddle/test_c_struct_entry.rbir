s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:begin,
        s(:send, nil, :require_relative,
          s(:str, "helper")),
        s(:send, nil, :require,
          s(:str, "fiddle/struct"))),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:if,
    s(:defined?,
      s(:const, nil, :Fiddle)),
    s(:module,
      s(:const, nil, :Fiddle),
      s(:class,
        s(:const, nil, :TestCStructEntity),
        s(:const, nil, :TestCase),
        s(:begin,
          s(:def, :test_class_size,
            s(:args),
            s(:begin,
              s(:lvasgn, :types,
                s(:array,
                  s(:const, nil, :TYPE_DOUBLE),
                  s(:const, nil, :TYPE_CHAR))),
              s(:lvasgn, :size,
                s(:send,
                  s(:const, nil, :CStructEntity), :size,
                  s(:lvar, :types))),
              s(:lvasgn, :alignments,
                s(:block,
                  s(:send,
                    s(:lvar, :types), :map),
                  s(:args,
                    s(:arg, :type)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :PackInfo), :ALIGN_MAP), :[],
                    s(:lvar, :type)))),
              s(:lvasgn, :expected,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:int, 0),
                  s(:send,
                    s(:lvar, :alignments), :[],
                    s(:int, 0)))),
              s(:op_asgn,
                s(:lvasgn, :expected), :+,
                s(:send,
                  s(:const,
                    s(:const, nil, :PackInfo), :SIZE_MAP), :[],
                  s(:const, nil, :TYPE_DOUBLE))),
              s(:lvasgn, :expected,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:lvar, :expected),
                  s(:send,
                    s(:lvar, :alignments), :[],
                    s(:int, 1)))),
              s(:op_asgn,
                s(:lvasgn, :expected), :+,
                s(:send,
                  s(:const,
                    s(:const, nil, :PackInfo), :SIZE_MAP), :[],
                  s(:const, nil, :TYPE_CHAR))),
              s(:lvasgn, :expected,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:lvar, :expected),
                  s(:send,
                    s(:lvar, :alignments), :max))),
              s(:send, nil, :assert_equal,
                s(:lvar, :expected),
                s(:lvar, :size)))),
          s(:def, :test_class_size_with_count,
            s(:args),
            s(:begin,
              s(:lvasgn, :size,
                s(:send,
                  s(:const, nil, :CStructEntity), :size,
                  s(:array,
                    s(:array,
                      s(:const, nil, :TYPE_DOUBLE),
                      s(:int, 2)),
                    s(:array,
                      s(:const, nil, :TYPE_CHAR),
                      s(:int, 20))))),
              s(:lvasgn, :types,
                s(:array,
                  s(:const, nil, :TYPE_DOUBLE),
                  s(:const, nil, :TYPE_CHAR))),
              s(:lvasgn, :alignments,
                s(:block,
                  s(:send,
                    s(:lvar, :types), :map),
                  s(:args,
                    s(:arg, :type)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :PackInfo), :ALIGN_MAP), :[],
                    s(:lvar, :type)))),
              s(:lvasgn, :expected,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:int, 0),
                  s(:send,
                    s(:lvar, :alignments), :[],
                    s(:int, 0)))),
              s(:op_asgn,
                s(:lvasgn, :expected), :+,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :PackInfo), :SIZE_MAP), :[],
                    s(:const, nil, :TYPE_DOUBLE)), :*,
                  s(:int, 2))),
              s(:lvasgn, :expected,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:lvar, :expected),
                  s(:send,
                    s(:lvar, :alignments), :[],
                    s(:int, 1)))),
              s(:op_asgn,
                s(:lvasgn, :expected), :+,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :PackInfo), :SIZE_MAP), :[],
                    s(:const, nil, :TYPE_CHAR)), :*,
                  s(:int, 20))),
              s(:lvasgn, :expected,
                s(:send,
                  s(:const, nil, :PackInfo), :align,
                  s(:lvar, :expected),
                  s(:send,
                    s(:lvar, :alignments), :max))),
              s(:send, nil, :assert_equal,
                s(:lvar, :expected),
                s(:lvar, :size)))),
          s(:def, :test_set_ctypes,
            s(:args),
            s(:begin,
              s(:lvasgn, :union,
                s(:send,
                  s(:const, nil, :CStructEntity), :malloc,
                  s(:array,
                    s(:const, nil, :TYPE_INT),
                    s(:const, nil, :TYPE_LONG)))),
              s(:send,
                s(:lvar, :union), :assign_names,
                s(:array,
                  s(:str, "int"),
                  s(:str, "long"))),
              s(:send,
                s(:lvar, :union), :[]=,
                s(:str, "long"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :union), :[]=,
                s(:str, "int"),
                s(:int, 2)),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:lvar, :union), :[],
                  s(:str, "long"))),
              s(:send, nil, :assert_equal,
                s(:int, 2),
                s(:send,
                  s(:lvar, :union), :[],
                  s(:str, "int"))))),
          s(:def, :test_aref_pointer_array,
            s(:args),
            s(:begin,
              s(:lvasgn, :team,
                s(:send,
                  s(:const, nil, :CStructEntity), :malloc,
                  s(:array,
                    s(:array,
                      s(:const, nil, :TYPE_VOIDP),
                      s(:int, 2))))),
              s(:send,
                s(:lvar, :team), :assign_names,
                s(:array,
                  s(:str, "names"))),
              s(:lvasgn, :alice,
                s(:send,
                  s(:const,
                    s(:const, nil, :Fiddle), :Pointer), :malloc,
                  s(:int, 6))),
              s(:send,
                s(:lvar, :alice), :[]=,
                s(:int, 0),
                s(:int, 6),
                s(:str, "Alice\u0000")),
              s(:lvasgn, :bob,
                s(:send,
                  s(:const,
                    s(:const, nil, :Fiddle), :Pointer), :malloc,
                  s(:int, 4))),
              s(:send,
                s(:lvar, :bob), :[]=,
                s(:int, 0),
                s(:int, 4),
                s(:str, "Bob\u0000")),
              s(:send,
                s(:lvar, :team), :[]=,
                s(:str, "names"),
                s(:array,
                  s(:lvar, :alice),
                  s(:lvar, :bob))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:str, "Alice"),
                  s(:str, "Bob")),
                s(:send,
                  s(:send,
                    s(:lvar, :team), :[],
                    s(:str, "names")), :map,
                  s(:block_pass,
                    s(:sym, :to_s)))))),
          s(:def, :test_aref_pointer,
            s(:args),
            s(:begin,
              s(:lvasgn, :user,
                s(:send,
                  s(:const, nil, :CStructEntity), :malloc,
                  s(:array,
                    s(:const, nil, :TYPE_VOIDP)))),
              s(:send,
                s(:lvar, :user), :assign_names,
                s(:array,
                  s(:str, "name"))),
              s(:lvasgn, :alice,
                s(:send,
                  s(:const,
                    s(:const, nil, :Fiddle), :Pointer), :malloc,
                  s(:int, 6))),
              s(:send,
                s(:lvar, :alice), :[]=,
                s(:int, 0),
                s(:int, 6),
                s(:str, "Alice\u0000")),
              s(:send,
                s(:lvar, :user), :[]=,
                s(:str, "name"),
                s(:lvar, :alice)),
              s(:send, nil, :assert_equal,
                s(:str, "Alice"),
                s(:send,
                  s(:send,
                    s(:lvar, :user), :[],
                    s(:str, "name")), :to_s))))))), nil))
