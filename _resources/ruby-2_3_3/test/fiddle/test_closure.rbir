s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require_relative,
        s(:str, "helper")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:if,
    s(:defined?,
      s(:const, nil, :Fiddle)),
    s(:module,
      s(:const, nil, :Fiddle),
      s(:class,
        s(:const, nil, :TestClosure),
        s(:const,
          s(:const, nil, :Fiddle), :TestCase),
        s(:begin,
          s(:def, :test_argument_errors,
            s(:args),
            s(:begin,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const, nil, :TypeError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Closure), :new,
                  s(:const, nil, :TYPE_INT),
                  s(:const, nil, :TYPE_INT))),
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const, nil, :TypeError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Closure), :new,
                  s(:str, "foo"),
                  s(:array,
                    s(:const, nil, :TYPE_INT)))),
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const, nil, :TypeError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Closure), :new,
                  s(:const, nil, :TYPE_INT),
                  s(:array,
                    s(:str, "meow!")))))),
          s(:def, :test_call,
            s(:args),
            s(:begin,
              s(:lvasgn, :closure,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:const, nil, :Class), :new,
                      s(:const, nil, :Closure)),
                    s(:args),
                    s(:def, :call,
                      s(:args),
                      s(:int, 10))), :new,
                  s(:const, nil, :TYPE_INT),
                  s(:array))),
              s(:lvasgn, :func,
                s(:send,
                  s(:const, nil, :Function), :new,
                  s(:lvar, :closure),
                  s(:array),
                  s(:const, nil, :TYPE_INT))),
              s(:send, nil, :assert_equal,
                s(:int, 10),
                s(:send,
                  s(:lvar, :func), :call)))),
          s(:def, :test_returner,
            s(:args),
            s(:begin,
              s(:lvasgn, :closure,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:const, nil, :Class), :new,
                      s(:const, nil, :Closure)),
                    s(:args),
                    s(:def, :call,
                      s(:args,
                        s(:arg, :thing)),
                      s(:lvar, :thing))), :new,
                  s(:const, nil, :TYPE_INT),
                  s(:array,
                    s(:const, nil, :TYPE_INT)))),
              s(:lvasgn, :func,
                s(:send,
                  s(:const, nil, :Function), :new,
                  s(:lvar, :closure),
                  s(:array,
                    s(:const, nil, :TYPE_INT)),
                  s(:const, nil, :TYPE_INT))),
              s(:send, nil, :assert_equal,
                s(:int, 10),
                s(:send,
                  s(:lvar, :func), :call,
                  s(:int, 10))))),
          s(:def, :test_block_caller,
            s(:args),
            s(:begin,
              s(:lvasgn, :cb,
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Closure), :BlockCaller), :new,
                    s(:const, nil, :TYPE_INT),
                    s(:array,
                      s(:const, nil, :TYPE_INT))),
                  s(:args,
                    s(:arg, :one)),
                  s(:lvar, :one))),
              s(:lvasgn, :func,
                s(:send,
                  s(:const, nil, :Function), :new,
                  s(:lvar, :cb),
                  s(:array,
                    s(:const, nil, :TYPE_INT)),
                  s(:const, nil, :TYPE_INT))),
              s(:send, nil, :assert_equal,
                s(:int, 11),
                s(:send,
                  s(:lvar, :func), :call,
                  s(:int, 11))))),
          s(:def, :test_memsize,
            s(:args),
            s(:begin,
              s(:send, nil, :require,
                s(:str, "objspace")),
              s(:lvasgn, :bug,
                s(:str, "[ruby-dev:42480]")),
              s(:lvasgn, :n,
                s(:int, 10000)),
              s(:send, nil, :assert_equal,
                s(:lvar, :n),
                s(:block,
                  s(:send,
                    s(:lvar, :n), :times),
                  s(:args),
                  s(:send,
                    s(:const, nil, :ObjectSpace), :memsize_of,
                    s(:send,
                      s(:const, nil, :Closure), :allocate))),
                s(:lvar, :bug)))),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "INT"),
                s(:str, "SHORT"),
                s(:str, "CHAR"),
                s(:str, "LONG"),
                s(:str, "LONG_LONG")), :each),
            s(:args,
              s(:arg, :name)),
            s(:begin,
              s(:lvasgn, :type,
                s(:rescue,
                  s(:send,
                    s(:const, nil, :Fiddle), :const_get,
                    s(:dstr,
                      s(:str, "TYPE_"),
                      s(:begin,
                        s(:lvar, :name)))),
                  s(:resbody, nil, nil,
                    s(:next)), nil)),
              s(:lvasgn, :size,
                s(:send,
                  s(:const, nil, :Fiddle), :const_get,
                  s(:dstr,
                    s(:str, "SIZEOF_"),
                    s(:begin,
                      s(:lvar, :name))))),
              s(:block,
                s(:send,
                  s(:array,
                    s(:array,
                      s(:lvar, :type),
                      s(:send,
                        s(:lvar, :size), :-,
                        s(:int, 1)),
                      s(:lvar, :name)),
                    s(:array,
                      s(:send,
                        s(:lvar, :type), :-@),
                      s(:lvar, :size),
                      s(:send,
                        s(:str, "unsigned_"), :+,
                        s(:lvar, :name)))), :each),
                s(:args,
                  s(:arg, :t),
                  s(:arg, :s),
                  s(:arg, :n)),
                s(:block,
                  s(:send, nil, :define_method,
                    s(:dstr,
                      s(:str, "test_conversion_"),
                      s(:begin,
                        s(:send,
                          s(:lvar, :n), :downcase)))),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :arg,
                      s(:nil)),
                    s(:lvasgn, :clos,
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:const, nil, :Class), :new,
                            s(:const, nil, :Closure)),
                          s(:args),
                          s(:block,
                            s(:send, nil, :define_method,
                              s(:sym, :call)),
                            s(:args,
                              s(:arg, :x)),
                            s(:lvasgn, :arg,
                              s(:lvar, :x)))), :new,
                        s(:lvar, :t),
                        s(:array,
                          s(:lvar, :t)))),
                    s(:lvasgn, :v,
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:int, 0), :~), :<<,
                            s(:begin,
                              s(:send,
                                s(:int, 8), :*,
                                s(:lvar, :s))))), :~)),
                    s(:lvasgn, :arg,
                      s(:nil)),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :v),
                      s(:send,
                        s(:lvar, :clos), :call,
                        s(:lvar, :v))),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :arg),
                      s(:lvar, :v),
                      s(:lvar, :n)),
                    s(:lvasgn, :arg,
                      s(:nil)),
                    s(:lvasgn, :func,
                      s(:send,
                        s(:const, nil, :Function), :new,
                        s(:lvar, :clos),
                        s(:array,
                          s(:lvar, :t)),
                        s(:lvar, :t))),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :v),
                      s(:send,
                        s(:lvar, :func), :call,
                        s(:lvar, :v))),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :arg),
                      s(:lvar, :v),
                      s(:lvar, :n)))))))))), nil))
