s(:begin,
  s(:send, nil, :require,
    s(:str, "minitest/autorun")),
  s(:send, nil, :require,
    s(:str, "fiddle")),
  s(:lvasgn, :libc_so,
    s(:lvasgn, :libm_so,
      s(:nil))),
  s(:case,
    s(:const, nil, :RUBY_PLATFORM),
    s(:when,
      s(:regexp,
        s(:str, "cygwin"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "cygwin1.dll")),
        s(:lvasgn, :libm_so,
          s(:str, "cygwin1.dll")))),
    s(:when,
      s(:regexp,
        s(:str, "x86_64-linux"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/lib64/libc.so.6")),
        s(:lvasgn, :libm_so,
          s(:str, "/lib64/libm.so.6")))),
    s(:when,
      s(:regexp,
        s(:str, "linux"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libdir,
          s(:str, "/lib")),
        s(:case,
          s(:send,
            s(:send,
              s(:array,
                s(:int, 0)), :pack,
              s(:str, "L!")), :size),
          s(:when,
            s(:int, 4),
            s(:if,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:str, "/lib32")),
              s(:lvasgn, :libdir,
                s(:str, "/lib32")), nil)),
          s(:when,
            s(:int, 8),
            s(:if,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:str, "/lib64")),
              s(:lvasgn, :libdir,
                s(:str, "/lib64")), nil)), nil),
        s(:lvasgn, :libc_so,
          s(:send,
            s(:const, nil, :File), :join,
            s(:lvar, :libdir),
            s(:str, "libc.so.6"))),
        s(:lvasgn, :libm_so,
          s(:send,
            s(:const, nil, :File), :join,
            s(:lvar, :libdir),
            s(:str, "libm.so.6"))))),
    s(:when,
      s(:regexp,
        s(:str, "mingw"),
        s(:regopt)),
      s(:regexp,
        s(:str, "mswin"),
        s(:regopt)),
      s(:begin,
        s(:send, nil, :require,
          s(:str, "rbconfig")),
        s(:lvasgn, :crtname,
          s(:or,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :RbConfig), :CONFIG), :[],
                s(:str, "RUBY_SO_NAME")), :[],
              s(:regexp,
                s(:str, "msvc\\w+"),
                s(:regopt))),
            s(:str, "ucrtbase"))),
        s(:lvasgn, :libc_so,
          s(:lvasgn, :libm_so,
            s(:dstr,
              s(:begin,
                s(:lvar, :crtname)),
              s(:str, ".dll")))))),
    s(:when,
      s(:regexp,
        s(:str, "darwin"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/usr/lib/libc.dylib")),
        s(:lvasgn, :libm_so,
          s(:str, "/usr/lib/libm.dylib")))),
    s(:when,
      s(:regexp,
        s(:str, "kfreebsd"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/lib/libc.so.0.1")),
        s(:lvasgn, :libm_so,
          s(:str, "/lib/libm.so.1")))),
    s(:when,
      s(:regexp,
        s(:str, "gnu"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/lib/libc.so.0.3")),
        s(:lvasgn, :libm_so,
          s(:str, "/lib/libm.so.6")))),
    s(:when,
      s(:regexp,
        s(:str, "mirbsd"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/usr/lib/libc.so.41.10")),
        s(:lvasgn, :libm_so,
          s(:str, "/usr/lib/libm.so.7.0")))),
    s(:when,
      s(:regexp,
        s(:str, "freebsd"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/lib/libc.so.7")),
        s(:lvasgn, :libm_so,
          s(:str, "/lib/libm.so.5")))),
    s(:when,
      s(:regexp,
        s(:str, "bsd|dragonfly"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libc_so,
          s(:str, "/usr/lib/libc.so")),
        s(:lvasgn, :libm_so,
          s(:str, "/usr/lib/libm.so")))),
    s(:when,
      s(:regexp,
        s(:str, "solaris"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :libdir,
          s(:str, "/lib")),
        s(:case,
          s(:send,
            s(:send,
              s(:array,
                s(:int, 0)), :pack,
              s(:str, "L!")), :size),
          s(:when,
            s(:int, 4),
            s(:if,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:str, "/lib")),
              s(:lvasgn, :libdir,
                s(:str, "/lib")), nil)),
          s(:when,
            s(:int, 8),
            s(:if,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:str, "/lib/64")),
              s(:lvasgn, :libdir,
                s(:str, "/lib/64")), nil)), nil),
        s(:lvasgn, :libc_so,
          s(:send,
            s(:const, nil, :File), :join,
            s(:lvar, :libdir),
            s(:str, "libc.so"))),
        s(:lvasgn, :libm_so,
          s(:send,
            s(:const, nil, :File), :join,
            s(:lvar, :libdir),
            s(:str, "libm.so"))))),
    s(:when,
      s(:regexp,
        s(:str, "aix"),
        s(:regopt)),
      s(:begin,
        s(:lvasgn, :pwd,
          s(:send,
            s(:const, nil, :Dir), :pwd)),
        s(:lvasgn, :libc_so,
          s(:lvasgn, :libm_so,
            s(:dstr,
              s(:begin,
                s(:lvar, :pwd)),
              s(:str, "/libaixdltest.so")))),
        s(:if,
          s(:send,
            s(:const, nil, :File), :exist?,
            s(:lvar, :libc_so)), nil,
          s(:begin,
            s(:lvasgn, :cobjs,
              s(:array,
                s(:str, "strcpy.o"))),
            s(:lvasgn, :mobjs,
              s(:array,
                s(:str, "floats.o"),
                s(:str, "sin.o"))),
            s(:lvasgn, :funcs,
              s(:array,
                s(:str, "sin"),
                s(:str, "sinf"),
                s(:str, "strcpy"),
                s(:str, "strncpy"))),
            s(:lvasgn, :expfile,
              s(:str, "dltest.exp")),
            s(:send, nil, :require,
              s(:str, "tmpdir")),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :mktmpdir),
              s(:args,
                s(:arg, :dir)),
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Dir), :chdir,
                      s(:lvar, :dir)),
                    s(:xstr,
                      s(:str, "/usr/bin/ar x /usr/lib/libc.a "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :cobjs), :join,
                          s(:str, " ")))),
                    s(:xstr,
                      s(:str, "/usr/bin/ar x /usr/lib/libm.a "),
                      s(:begin,
                        s(:send,
                          s(:lvar, :mobjs), :join,
                          s(:str, " ")))),
                    s(:xstr,
                      s(:str, "echo \""),
                      s(:begin,
                        s(:send,
                          s(:lvar, :funcs), :join,
                          s(:str, "\n"))),
                      s(:str, "\n\" > "),
                      s(:begin,
                        s(:lvar, :expfile))),
                    s(:send, nil, :require,
                      s(:str, "rbconfig")),
                    s(:if,
                      s(:send,
                        s(:const,
                          s(:const, nil, :RbConfig), :CONFIG), :[]=,
                        s(:str, "GCC"),
                        s(:str, "yes")),
                      s(:lvasgn, :lflag,
                        s(:str, "-Wl,")),
                      s(:lvasgn, :lflag,
                        s(:str, ""))),
                    s(:lvasgn, :flags,
                      s(:dstr,
                        s(:begin,
                          s(:lvar, :lflag)),
                        s(:str, "-bE:"),
                        s(:begin,
                          s(:lvar, :expfile)),
                        s(:str, " "),
                        s(:begin,
                          s(:lvar, :lflag)),
                        s(:str, "-bnoentry -lm"))),
                    s(:xstr,
                      s(:begin,
                        s(:send,
                          s(:const,
                            s(:const, nil, :RbConfig), :CONFIG), :[],
                          s(:str, "LDSHARED"))),
                      s(:str, " -o "),
                      s(:begin,
                        s(:lvar, :libc_so)),
                      s(:str, " "),
                      s(:begin,
                        s(:send,
                          s(:begin,
                            s(:send,
                              s(:lvar, :cobjs), :+,
                              s(:lvar, :mobjs))), :join,
                          s(:str, " "))),
                      s(:str, " "),
                      s(:begin,
                        s(:lvar, :flags)))),
                  s(:send,
                    s(:const, nil, :Dir), :chdir,
                    s(:lvar, :pwd))))))))),
    s(:begin,
      s(:if,
        s(:and,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 0)),
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :ARGV), :[],
                s(:int, 0)), :[],
              s(:int, 0)), :==,
            s(:str, "/"))),
        s(:lvasgn, :libc_so,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 0))), nil),
      s(:if,
        s(:and,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 1)),
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :ARGV), :[],
                s(:int, 1)), :[],
              s(:int, 0)), :==,
            s(:str, "/"))),
        s(:lvasgn, :libm_so,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 1))), nil),
      s(:if,
        s(:begin,
          s(:send,
            s(:begin,
              s(:and,
                s(:lvar, :libc_so),
                s(:lvar, :libm_so))), :!)),
        s(:send,
          s(:gvar, :$stderr), :puts,
          s(:dstr,
            s(:str, "libc and libm not found: "),
            s(:begin,
              s(:gvar, :$0)),
            s(:str, " <libc> <libm>"))), nil))),
  s(:if,
    s(:or,
      s(:send,
        s(:lvar, :libc_so), :!),
      s(:begin,
        s(:and,
          s(:send,
            s(:send,
              s(:lvar, :libc_so), :[],
              s(:int, 0)), :==,
            s(:str, "/")),
          s(:send,
            s(:send,
              s(:const, nil, :File), :file?,
              s(:lvar, :libc_so)), :!)))),
    s(:lvasgn, :libc_so,
      s(:nil)), nil),
  s(:if,
    s(:or,
      s(:send,
        s(:lvar, :libm_so), :!),
      s(:begin,
        s(:and,
          s(:send,
            s(:send,
              s(:lvar, :libm_so), :[],
              s(:int, 0)), :==,
            s(:str, "/")),
          s(:send,
            s(:send,
              s(:const, nil, :File), :file?,
              s(:lvar, :libm_so)), :!)))),
    s(:lvasgn, :libm_so,
      s(:nil)), nil),
  s(:if,
    s(:or,
      s(:send,
        s(:lvar, :libc_so), :!),
      s(:send,
        s(:lvar, :libm_so), :!)),
    s(:begin,
      s(:lvasgn, :ruby,
        s(:send,
          s(:const, nil, :EnvUtil), :rubybin)),
      s(:lvasgn, :ldd,
        s(:xstr,
          s(:str, "ldd "),
          s(:begin,
            s(:lvar, :ruby)))),
      s(:if,
        s(:and,
          s(:send,
            s(:lvar, :libc_so), :!),
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "/\\S*/libc\\.so\\S*"),
              s(:regopt)),
            s(:lvar, :ldd))),
        s(:lvasgn, :libc_so,
          s(:back_ref, :$&)), nil),
      s(:if,
        s(:and,
          s(:send,
            s(:lvar, :libm_so), :!),
          s(:match_with_lvasgn,
            s(:regexp,
              s(:str, "/\\S*/libm\\.so\\S*"),
              s(:regopt)),
            s(:lvar, :ldd))),
        s(:lvasgn, :libm_so,
          s(:back_ref, :$&)), nil)), nil),
  s(:casgn,
    s(:const, nil, :Fiddle), :LIBC_SO,
    s(:lvar, :libc_so)),
  s(:casgn,
    s(:const, nil, :Fiddle), :LIBM_SO,
    s(:lvar, :libm_so)),
  s(:module,
    s(:const, nil, :Fiddle),
    s(:class,
      s(:const, nil, :TestCase),
      s(:const,
        s(:const,
          s(:const, nil, :MiniTest), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@libc,
              s(:send,
                s(:const, nil, :Fiddle), :dlopen,
                s(:const, nil, :LIBC_SO))),
            s(:ivasgn, :@libm,
              s(:send,
                s(:const, nil, :Fiddle), :dlopen,
                s(:const, nil, :LIBM_SO))))),
        s(:def, :teardown,
          s(:args),
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "linux"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:send,
              s(:const, nil, :GC), :start), nil))))))
