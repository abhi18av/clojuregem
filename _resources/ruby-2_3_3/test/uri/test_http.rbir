s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "uri/http")),
  s(:module,
    s(:const, nil, :URI),
    s(:class,
      s(:const, nil, :TestHTTP),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args), nil),
        s(:def, :teardown,
          s(:args), nil),
        s(:def, :uri_to_ary,
          s(:args,
            s(:arg, :uri)),
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :uri), :class), :component), :collect),
            s(:args,
              s(:arg, :c)),
            s(:send,
              s(:lvar, :uri), :send,
              s(:lvar, :c)))),
        s(:def, :test_parse,
          s(:args),
          s(:begin,
            s(:lvasgn, :u,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://a"))),
            s(:send, nil, :assert_kind_of,
              s(:const,
                s(:const, nil, :URI), :HTTP),
              s(:lvar, :u)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "http"),
                s(:nil),
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :URI), :HTTP), :default_port),
                s(:str, ""),
                s(:nil),
                s(:nil)),
              s(:send, nil, :uri_to_ary,
                s(:lvar, :u))))),
        s(:def, :test_normalize,
          s(:args),
          s(:begin,
            s(:lvasgn, :host,
              s(:str, "aBcD")),
            s(:lvasgn, :u1,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:send,
                  s(:send,
                    s(:str, "http://"), :+,
                    s(:lvar, :host)), :+,
                  s(:str, "/eFg?HiJ")))),
            s(:lvasgn, :u2,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:send,
                  s(:send,
                    s(:str, "http://"), :+,
                    s(:send,
                      s(:lvar, :host), :downcase)), :+,
                  s(:str, "/eFg?HiJ")))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :u1), :normalize), :host), :==,
                s(:str, "abcd"))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :u1), :normalize), :path), :==,
                s(:send,
                  s(:lvar, :u1), :path))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :u1), :normalize), :==,
                s(:send,
                  s(:lvar, :u2), :normalize))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :u1), :normalize), :host), :equal?,
                  s(:send,
                    s(:lvar, :u1), :host)), :!)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :u2), :normalize), :host), :equal?,
                s(:send,
                  s(:lvar, :u2), :host))),
            s(:send, nil, :assert_equal,
              s(:str, "http://abc/"),
              s(:send,
                s(:send,
                  s(:send,
                    s(:const, nil, :URI), :parse,
                    s(:str, "http://abc")), :normalize), :to_s)))),
        s(:def, :test_equal,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://abc")), :==,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://ABC")))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://abc/def")), :==,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://ABC/def")))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://abc/def")), :!=,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://ABC/DEF")))))),
        s(:def, :test_request_uri,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, "/"),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://a.b.c/")), :request_uri)),
            s(:send, nil, :assert_equal,
              s(:str, "/?abc=def"),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://a.b.c/?abc=def")), :request_uri)),
            s(:send, nil, :assert_equal,
              s(:str, "/"),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://a.b.c")), :request_uri)),
            s(:send, nil, :assert_equal,
              s(:str, "/?abc=def"),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://a.b.c?abc=def")), :request_uri)),
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http:foo")), :request_uri)))),
        s(:def, :test_select,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "http"),
                s(:str, "a.b.c"),
                s(:int, 80)),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://a.b.c/")), :select,
                s(:sym, :scheme),
                s(:sym, :host),
                s(:sym, :port))),
            s(:lvasgn, :u,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://a.b.c/"))),
            s(:send, nil, :assert_equal,
              s(:send, nil, :uri_to_ary,
                s(:lvar, :u)),
              s(:send,
                s(:lvar, :u), :select,
                s(:splat,
                  s(:send,
                    s(:lvar, :u), :component)))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :u), :select,
                s(:sym, :scheme),
                s(:sym, :host),
                s(:sym, :not_exist),
                s(:sym, :port)))))))))
