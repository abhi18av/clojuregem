s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "uri")),
  s(:class,
    s(:const,
      s(:const, nil, :URI), :TestGeneric),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@url,
            s(:str, "http://a/b/c/d;p?q")),
          s(:ivasgn, :@base_url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:ivar, :@url))))),
      s(:def, :teardown,
        s(:args), nil),
      s(:def, :uri_to_ary,
        s(:args,
          s(:arg, :uri)),
        s(:block,
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :uri), :class), :component), :collect),
          s(:args,
            s(:arg, :c)),
          s(:send,
            s(:lvar, :uri), :send,
            s(:lvar, :c)))),
      s(:def, :test_to_s,
        s(:args),
        s(:begin,
          s(:lvasgn, :exp,
            s(:send,
              s(:str, "http://example.com/"), :freeze)),
          s(:lvasgn, :str,
            s(:send,
              s(:send, nil, :URI,
                s(:lvar, :exp)), :to_s)),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :str)),
          s(:send, nil, :assert_not_predicate,
            s(:lvar, :str),
            s(:sym, :frozen?),
            s(:str, "[ruby-core:71785] [Bug #11759]")))),
      s(:def, :test_parse,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:ivar, :@base_url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "http"),
              s(:nil),
              s(:str, "a"),
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :HTTP), :default_port),
              s(:str, "/b/c/d;p"),
              s(:str, "q"),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:ivar, :@base_url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "ftp://ftp.is.co.za/rfc/rfc1808.txt"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :FTP),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "ftp"),
              s(:nil),
              s(:str, "ftp.is.co.za"),
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :FTP), :default_port),
              s(:str, "rfc/rfc1808.txt"),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "ftp://ftp.is.co.za/%2Frfc/rfc1808.txt"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :FTP),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "ftp"),
              s(:nil),
              s(:str, "ftp.is.co.za"),
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :FTP), :default_port),
              s(:str, "/rfc/rfc1808.txt"),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "gopher://spinaltap.micro.umn.edu/00/Weather/California/Los%20Angeles"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "gopher"),
              s(:nil),
              s(:str, "spinaltap.micro.umn.edu"),
              s(:nil),
              s(:nil),
              s(:str, "/00/Weather/California/Los%20Angeles"),
              s(:nil),
              s(:nil),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.math.uio.no/faq/compression-faq/part1.html"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "http"),
              s(:nil),
              s(:str, "www.math.uio.no"),
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :HTTP), :default_port),
              s(:str, "/faq/compression-faq/part1.html"),
              s(:nil),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "mailto:mduerst@ifi.unizh.ch"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "mailto"),
              s(:str, "mduerst@ifi.unizh.ch"),
              s(:array))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "news:comp.infosystems.www.servers.unix"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "news"),
              s(:nil),
              s(:nil),
              s(:nil),
              s(:nil),
              s(:nil),
              s(:str, "comp.infosystems.www.servers.unix"),
              s(:nil),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "telnet://melvyl.ucop.edu/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:lvasgn, :exp,
            s(:array,
              s(:str, "telnet"),
              s(:nil),
              s(:str, "melvyl.ucop.edu"),
              s(:nil),
              s(:nil),
              s(:str, "/"),
              s(:nil),
              s(:nil),
              s(:nil))),
          s(:lvasgn, :ary,
            s(:send, nil, :uri_to_ary,
              s(:lvar, :url))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :ary)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://a_b:80/"))),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://a_b/"))),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "file:///foo/bar.txt"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "file:/foo/bar.txt"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "ftp://:pass@localhost/"))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:lvar, :url), :user),
            s(:str, "[ruby-dev:25667]")),
          s(:send, nil, :assert_equal,
            s(:str, "pass"),
            s(:send,
              s(:lvar, :url), :password)),
          s(:send, nil, :assert_equal,
            s(:str, ":pass"),
            s(:send,
              s(:lvar, :url), :userinfo),
            s(:str, "[ruby-dev:25667]")),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "ftp://user@localhost/"))),
          s(:send, nil, :assert_equal,
            s(:str, "user"),
            s(:send,
              s(:lvar, :url), :user)),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:lvar, :url), :password)),
          s(:send, nil, :assert_equal,
            s(:str, "user"),
            s(:send,
              s(:lvar, :url), :userinfo)),
          s(:lvasgn, :url,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "ftp://localhost/"))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:lvar, :url), :user)),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:lvar, :url), :password)),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:lvar, :url), :userinfo)))),
      s(:def, :test_merge,
        s(:args),
        s(:begin,
          s(:lvasgn, :u1,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo"))),
          s(:lvasgn, :u2,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/"))),
          s(:lvasgn, :u3,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar"))),
          s(:lvasgn, :u4,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/"))),
          s(:block,
            s(:send,
              s(:hash,
                s(:pair,
                  s(:lvar, :u1),
                  s(:hash,
                    s(:pair,
                      s(:str, "baz"),
                      s(:str, "http://foo/baz")),
                    s(:pair,
                      s(:str, "/baz"),
                      s(:str, "http://foo/baz")))),
                s(:pair,
                  s(:lvar, :u2),
                  s(:hash,
                    s(:pair,
                      s(:str, "baz"),
                      s(:str, "http://foo/baz")),
                    s(:pair,
                      s(:str, "/baz"),
                      s(:str, "http://foo/baz")))),
                s(:pair,
                  s(:lvar, :u3),
                  s(:hash,
                    s(:pair,
                      s(:str, "baz"),
                      s(:str, "http://foo/baz")),
                    s(:pair,
                      s(:str, "/baz"),
                      s(:str, "http://foo/baz")))),
                s(:pair,
                  s(:lvar, :u4),
                  s(:hash,
                    s(:pair,
                      s(:str, "baz"),
                      s(:str, "http://foo/bar/baz")),
                    s(:pair,
                      s(:str, "/baz"),
                      s(:str, "http://foo/baz"))))), :each),
            s(:args,
              s(:arg, :base),
              s(:arg, :map)),
            s(:block,
              s(:send,
                s(:lvar, :map), :each),
              s(:args,
                s(:arg, :url),
                s(:arg, :result)),
              s(:begin,
                s(:lvasgn, :expected,
                  s(:send,
                    s(:const, nil, :URI), :parse,
                    s(:lvar, :result))),
                s(:lvasgn, :uri,
                  s(:send,
                    s(:const, nil, :URI), :parse,
                    s(:lvar, :url))),
                s(:send, nil, :assert_equal,
                  s(:lvar, :expected),
                  s(:send,
                    s(:lvar, :base), :+,
                    s(:lvar, :url)),
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:lvar, :base)),
                    s(:str, "> + "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :url), :inspect)),
                    s(:str, " to become <"),
                    s(:begin,
                      s(:lvar, :expected)),
                    s(:str, ">"))),
                s(:send, nil, :assert_equal,
                  s(:lvar, :expected),
                  s(:send,
                    s(:lvar, :base), :+,
                    s(:lvar, :uri)),
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:lvar, :base)),
                    s(:str, "> + <"),
                    s(:begin,
                      s(:lvar, :uri)),
                    s(:str, "> to become <"),
                    s(:begin,
                      s(:lvar, :expected)),
                    s(:str, ">")))))),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a.html")), :+,
              s(:str, "b.html"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://hoge/b.html"),
            s(:send,
              s(:lvar, :url), :to_s),
            s(:str, "[ruby-dev:11508]")),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://a/b")), :+,
              s(:str, "http://x/y"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://x/y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:send, nil, :assert_equal,
            s(:lvar, :url),
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "")), :+,
              s(:str, "http://x/y"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :url),
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "")), :normalize), :+,
              s(:str, "http://x/y"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :url),
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "http://a/b")), :normalize), :+,
              s(:str, "http://x/y"))),
          s(:lvasgn, :u,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/baz"))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:lvar, :u), :merge!,
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:lvar, :u), :merge!,
              s(:lvar, :u))),
          s(:send, nil, :assert,
            s(:send,
              s(:nil), :!=,
              s(:send,
                s(:lvar, :u), :merge!,
                s(:str, ".")))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo/bar/"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:send, nil, :assert,
            s(:send,
              s(:nil), :!=,
              s(:send,
                s(:lvar, :u), :merge!,
                s(:str, "../baz")))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo/baz"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "mailto:foo@example.com"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "mailto:foo@example.com#bar"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :uri_to_ary,
              s(:send,
                s(:lvar, :u0), :+,
                s(:str, "#bar"))),
            s(:send, nil, :uri_to_ary,
              s(:lvar, :u1)),
            s(:str, "[ruby-dev:23628]")),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://www.example.com/foo/..")), :+,
              s(:str, "./"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1),
            s(:str, "[ruby-list:39838]")),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/foo/"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://www.example.com/foo/bar/..")), :+,
              s(:str, "./"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1)),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/foo/bar/"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://www.example.com/foo/bar/baz/..")), :+,
              s(:str, "./"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1)),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://www.example.com/foo/bar/../..")), :+,
              s(:str, "./"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1)),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/foo/"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://www.example.com/foo/bar/baz/../..")), :+,
              s(:str, "./"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1)),
          s(:lvasgn, :u,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/"))),
          s(:lvasgn, :u0,
            s(:send,
              s(:lvar, :u), :+,
              s(:str, "./foo/"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:lvar, :u), :+,
              s(:str, "./foo/bar/.."))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1),
            s(:str, "[ruby-list:39844]")),
          s(:lvasgn, :u,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://www.example.com/"))),
          s(:lvasgn, :u0,
            s(:send,
              s(:lvar, :u), :+,
              s(:str, "./"))),
          s(:lvasgn, :u1,
            s(:send,
              s(:lvar, :u), :+,
              s(:str, "./foo/bar/../.."))),
          s(:send, nil, :assert_equal,
            s(:lvar, :u0),
            s(:lvar, :u1)))),
      s(:def, :test_route,
        s(:args),
        s(:begin,
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a.html")), :route_to,
              s(:str, "http://hoge/b.html"))),
          s(:send, nil, :assert_equal,
            s(:str, "b.html"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a/")), :route_to,
              s(:str, "http://hoge/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "../b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a/b")), :route_to,
              s(:str, "http://hoge/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "../b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a/b/")), :route_to,
              s(:str, "http://hoge/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "../../b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a/b/")), :route_to,
              s(:str, "http://HOGE/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "../../b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/a/b/")), :route_to,
              s(:str, "http://MOGE/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "//MOGE/b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/b")), :route_to,
              s(:str, "http://hoge/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/b/a")), :route_to,
              s(:str, "http://hoge/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, "./"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/b/")), :route_to,
              s(:str, "http://hoge/b"))),
          s(:send, nil, :assert_equal,
            s(:str, "../b"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "http://hoge/b")), :route_to,
              s(:str, "http://hoge/b:c"))),
          s(:send, nil, :assert_equal,
            s(:str, "./b:c"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "file:///a/b/")), :route_to,
              s(:str, "file:///a/b/"))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "file:///a/b/")), :route_to,
              s(:str, "file:///a/b"))),
          s(:send, nil, :assert_equal,
            s(:str, "../b"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "mailto:foo@example.com")), :route_to,
              s(:str, "mailto:foo@example.com#bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "#bar"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "mailto:foo@example.com#bar")), :route_to,
              s(:str, "mailto:foo@example.com"))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "mailto:foo@example.com")), :route_to,
              s(:str, "mailto:foo@example.com"))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:lvar, :url), :to_s)))),
      s(:def, :test_rfc3986_examples,
        s(:args),
        s(:begin,
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g:h"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g:h"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "g:h"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g:h"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "./g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "./g"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "/g"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "../../g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "//g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "//g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "?y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/d;p?y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/d;p?y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "?y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g?y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g?y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g?y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g?y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/d;p?q#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/d;p?q#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g?y#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g?y#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g?y#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g?y#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, ";x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/;x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/;x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, ";x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g;x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g;x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g;x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g;x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g;x?y#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g;x?y#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g;x?y#s"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g;x?y#s"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "."), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "./"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "./"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "./"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, ".."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, ".."), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "../"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "../"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "../g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../.."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "../.."), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "../../"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../../"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "../../"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../../g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "../../g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, ""))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/d;p?q"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/d;p?q"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "/./g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "/../g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g."),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g."),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, ".g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/.g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/.g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, ".g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g.."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g.."),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g.."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g.."),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "..g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/..g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/..g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "..g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../../../g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "../../../g"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "../../g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "../../../../g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "../../../../g"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "../../g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "./../g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "./../g"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "../g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "./g/."))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g/"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "./g/."), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "g/"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g/./h"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g/h"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g/h"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "g/./h"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "g/h"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g/../h"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/h"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/h"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "g/../h"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "h"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g;x=1/./y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g;x=1/y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g;x=1/y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "g;x=1/./y"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "g;x=1/y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g;x=1/../y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/y"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert,
            s(:send,
              s(:str, "g;x=1/../y"), :!=,
              s(:send,
                s(:lvar, :url), :to_s))),
          s(:send, nil, :assert_equal,
            s(:str, "y"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g?y/./x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g?y/./x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g?y/./x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g?y/./x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g?y/../x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g?y/../x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g?y/../x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g?y/../x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g#s/./x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g#s/./x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g#s/./x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g#s/./x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "g#s/../x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http://a/b/c/g#s/../x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http://a/b/c/g#s/../x"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "g#s/../x"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :merge,
              s(:str, "http:g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :HTTP),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http:g"),
            s(:send,
              s(:lvar, :url), :to_s)),
          s(:lvasgn, :url,
            s(:send,
              s(:ivar, :@base_url), :route_to,
              s(:str, "http:g"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :URI), :Generic),
            s(:lvar, :url)),
          s(:send, nil, :assert_equal,
            s(:str, "http:g"),
            s(:send,
              s(:lvar, :url), :to_s)))),
      s(:def, :test_join,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/baz")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar"),
              s(:str, "baz"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/baz")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar"),
              s(:str, "/baz"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/baz/")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar"),
              s(:str, "/baz/"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/baz")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/"),
              s(:str, "baz"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar"),
              s(:str, "baz"),
              s(:str, "hoge"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/baz")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz"),
              s(:str, "hoge"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/baz/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz/"),
              s(:str, "hoge"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz"),
              s(:str, "/hoge"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz"),
              s(:str, "hoge"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/bar/baz/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz/"),
              s(:str, "hoge"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo/hoge")),
            s(:send,
              s(:const, nil, :URI), :join,
              s(:str, "http://foo"),
              s(:str, "bar/baz"),
              s(:str, "/hoge"))))),
      s(:def, :test_set_component,
        s(:args),
        s(:begin,
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo:bar@baz"))),
          s(:send, nil, :assert_equal,
            s(:str, "oof"),
            s(:send,
              s(:lvar, :uri), :user=,
              s(:str, "oof"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://oof:bar@baz"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "rab"),
            s(:send,
              s(:lvar, :uri), :password=,
              s(:str, "rab"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://oof:rab@baz"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:send,
              s(:lvar, :uri), :userinfo=,
              s(:str, "foo"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:rab@baz"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:send,
              s(:lvar, :uri), :userinfo=,
              s(:array,
                s(:str, "foo"),
                s(:str, "bar")))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@baz"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo")),
            s(:send,
              s(:lvar, :uri), :userinfo=,
              s(:array,
                s(:str, "foo")))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@baz"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "zab"),
            s(:send,
              s(:lvar, :uri), :host=,
              s(:str, "zab"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send,
            s(:lvar, :uri), :port=,
            s(:str, "")),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:lvar, :uri), :port)),
          s(:send,
            s(:lvar, :uri), :port=,
            s(:str, "80")),
          s(:send, nil, :assert_equal,
            s(:int, 80),
            s(:send,
              s(:lvar, :uri), :port)),
          s(:send,
            s(:lvar, :uri), :port=,
            s(:str, "080")),
          s(:send, nil, :assert_equal,
            s(:int, 80),
            s(:send,
              s(:lvar, :uri), :port)),
          s(:send,
            s(:lvar, :uri), :port=,
            s(:str, " 080 ")),
          s(:send, nil, :assert_equal,
            s(:int, 80),
            s(:send,
              s(:lvar, :uri), :port)),
          s(:send, nil, :assert_equal,
            s(:int, 8080),
            s(:send,
              s(:lvar, :uri), :port=,
              s(:int, 8080))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab:8080"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "/"),
            s(:send,
              s(:lvar, :uri), :path=,
              s(:str, "/"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab:8080/"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "a=1"),
            s(:send,
              s(:lvar, :uri), :query=,
              s(:str, "a=1"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab:8080/?a=1"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "b123"),
            s(:send,
              s(:lvar, :uri), :fragment=,
              s(:str, "b123"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab:8080/?a=1#b123"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "a[]=1"),
            s(:send,
              s(:lvar, :uri), :query=,
              s(:str, "a[]=1"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab:8080/?a[]=1#b123"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo:bar@zab:8080/?a[]=1#b123"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@zab:8080/?a[]=1#b123"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://example.com"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :password=,
              s(:str, "bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "foo\nbar"),
            s(:send,
              s(:lvar, :uri), :query=,
              s(:str, "foo\nbar"))),
          s(:send,
            s(:lvar, :uri), :userinfo=,
            s(:str, "foo:bar")),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo:bar@example.com?foobar"),
            s(:send,
              s(:lvar, :uri), :to_s)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :registry=,
              s(:str, "bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :opaque=,
              s(:str, "bar"))),
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "mailto:foo@example.com"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :user=,
              s(:str, "bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :password=,
              s(:str, "bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :userinfo=,
              s(:array,
                s(:str, "bar"),
                s(:str, "baz")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :host=,
              s(:str, "bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :port=,
              s(:str, "bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :path=,
              s(:str, "bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidURIError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :query=,
              s(:str, "bar"))),
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "foo:bar"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :InvalidComponentError)),
            s(:args),
            s(:send,
              s(:lvar, :uri), :opaque=,
              s(:str, "/baz"))),
          s(:send,
            s(:lvar, :uri), :opaque=,
            s(:str, "xyzzy")),
          s(:send, nil, :assert_equal,
            s(:str, "foo:xyzzy"),
            s(:send,
              s(:lvar, :uri), :to_s)))),
      s(:def, :test_bad_password_component,
        s(:args),
        s(:begin,
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://foo:bar@baz"))),
          s(:lvasgn, :password,
            s(:str, "foo@bar")),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const,
                  s(:const, nil, :URI), :InvalidComponentError)),
              s(:args),
              s(:send,
                s(:lvar, :uri), :password=,
                s(:lvar, :password)))),
          s(:send, nil, :refute_match,
            s(:lvar, :password),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_set_scheme,
        s(:args),
        s(:begin,
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "HTTP://example"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://example"),
            s(:send,
              s(:lvar, :uri), :to_s)))),
      s(:def, :test_ipv6,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "[::1]"),
            s(:send,
              s(:send, nil, :URI,
                s(:str, "http://[::1]/bar/baz")), :host)),
          s(:send, nil, :assert_equal,
            s(:str, "::1"),
            s(:send,
              s(:send, nil, :URI,
                s(:str, "http://[::1]/bar/baz")), :hostname)),
          s(:lvasgn, :u,
            s(:send, nil, :URI,
              s(:str, "http://foo/bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://foo/bar"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:send,
            s(:lvar, :u), :hostname=,
            s(:str, "::1")),
          s(:send, nil, :assert_equal,
            s(:str, "http://[::1]/bar"),
            s(:send,
              s(:lvar, :u), :to_s)))),
      s(:def, :test_build,
        s(:args),
        s(:begin,
          s(:lvasgn, :u,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Generic), :build,
              s(:array,
                s(:str, "http"),
                s(:nil),
                s(:str, "example.com"),
                s(:int, 80),
                s(:nil),
                s(:str, "/foo"),
                s(:nil),
                s(:nil),
                s(:nil)))),
          s(:send, nil, :assert_equal,
            s(:str, "http://example.com:80/foo"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const, nil, :Encoding), :UTF_8),
            s(:send,
              s(:send,
                s(:lvar, :u), :to_s), :encoding)),
          s(:lvasgn, :u,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Generic), :build,
              s(:hash,
                s(:pair,
                  s(:sym, :port),
                  s(:str, "5432"))))),
          s(:send, nil, :assert_equal,
            s(:str, ":5432"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:send, nil, :assert_equal,
            s(:int, 5432),
            s(:send,
              s(:lvar, :u), :port)),
          s(:lvasgn, :u,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Generic), :build,
              s(:hash,
                s(:pair,
                  s(:sym, :scheme),
                  s(:str, "http")),
                s(:pair,
                  s(:sym, :host),
                  s(:str, "::1")),
                s(:pair,
                  s(:sym, :path),
                  s(:str, "/bar/baz"))))),
          s(:send, nil, :assert_equal,
            s(:str, "http://[::1]/bar/baz"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "[::1]"),
            s(:send,
              s(:lvar, :u), :host)),
          s(:send, nil, :assert_equal,
            s(:str, "::1"),
            s(:send,
              s(:lvar, :u), :hostname)),
          s(:lvasgn, :u,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Generic), :build,
              s(:hash,
                s(:pair,
                  s(:sym, :scheme),
                  s(:str, "http")),
                s(:pair,
                  s(:sym, :host),
                  s(:str, "[::1]")),
                s(:pair,
                  s(:sym, :path),
                  s(:str, "/bar/baz"))))),
          s(:send, nil, :assert_equal,
            s(:str, "http://[::1]/bar/baz"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:send, nil, :assert_equal,
            s(:str, "[::1]"),
            s(:send,
              s(:lvar, :u), :host)),
          s(:send, nil, :assert_equal,
            s(:str, "::1"),
            s(:send,
              s(:lvar, :u), :hostname)))),
      s(:def, :test_build2,
        s(:args),
        s(:begin,
          s(:lvasgn, :u,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Generic), :build2,
              s(:hash,
                s(:pair,
                  s(:sym, :path),
                  s(:str, "/foo bar/baz"))))),
          s(:send, nil, :assert_equal,
            s(:str, "/foo%20bar/baz"),
            s(:send,
              s(:lvar, :u), :to_s)),
          s(:lvasgn, :u,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Generic), :build2,
              s(:array,
                s(:str, "http"),
                s(:nil),
                s(:str, "example.com"),
                s(:int, 80),
                s(:nil),
                s(:str, "/foo bar"),
                s(:nil),
                s(:nil),
                s(:nil)))),
          s(:send, nil, :assert_equal,
            s(:str, "http://example.com:80/foo%20bar"),
            s(:send,
              s(:lvar, :u), :to_s)))),
      s(:def, :test_find_proxy,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :URI), :BadURIError)),
            s(:args),
            s(:send,
              s(:send, nil, :URI,
                s(:str, "foo")), :find_proxy)),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash)),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "ftp://192.0.2.1/")), :find_proxy)))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "http_proxy"),
                  s(:str, "http://127.0.0.1:8080")))),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:send, nil, :URI,
                  s(:str, "http://127.0.0.1:8080")),
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "ftp://192.0.2.1/")), :find_proxy)))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "ftp_proxy"),
                  s(:str, "http://127.0.0.1:8080")))),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)),
              s(:send, nil, :assert_equal,
                s(:send, nil, :URI,
                  s(:str, "http://127.0.0.1:8080")),
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "ftp://192.0.2.1/")), :find_proxy)))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "REQUEST_METHOD"),
                  s(:str, "GET")))),
            s(:args),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:send, nil, :URI,
                  s(:str, "http://192.0.2.1/")), :find_proxy))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "CGI_HTTP_PROXY"),
                  s(:str, "http://127.0.0.1:8080")),
                s(:pair,
                  s(:str, "REQUEST_METHOD"),
                  s(:str, "GET")))),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:send, nil, :URI,
                s(:str, "http://127.0.0.1:8080")),
              s(:send,
                s(:send, nil, :URI,
                  s(:str, "http://192.0.2.1/")), :find_proxy))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "http_proxy"),
                  s(:str, "http://127.0.0.1:8080")),
                s(:pair,
                  s(:str, "no_proxy"),
                  s(:str, "192.0.2.2")))),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:send, nil, :URI,
                  s(:str, "http://127.0.0.1:8080")),
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.2/")), :find_proxy)))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "http_proxy"),
                  s(:str, "")))),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "ftp://192.0.2.1/")), :find_proxy)))),
          s(:block,
            s(:send, nil, :with_env,
              s(:hash,
                s(:pair,
                  s(:str, "ftp_proxy"),
                  s(:str, "")))),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "ftp://192.0.2.1/")), :find_proxy)))))),
      s(:if,
        s(:send,
          s(:const, nil, :RUBY_PLATFORM), :=~,
          s(:regexp,
            s(:str, "mswin|mingw"),
            s(:regopt))), nil,
        s(:def, :test_find_proxy_case_sensitive_env,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :with_env,
                s(:hash,
                  s(:pair,
                    s(:str, "http_proxy"),
                    s(:str, "http://127.0.0.1:8080")),
                  s(:pair,
                    s(:str, "REQUEST_METHOD"),
                    s(:str, "GET")))),
              s(:args),
              s(:send, nil, :assert_equal,
                s(:send, nil, :URI,
                  s(:str, "http://127.0.0.1:8080")),
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy))),
            s(:block,
              s(:send, nil, :with_env,
                s(:hash,
                  s(:pair,
                    s(:str, "HTTP_PROXY"),
                    s(:str, "http://127.0.0.1:8081")),
                  s(:pair,
                    s(:str, "REQUEST_METHOD"),
                    s(:str, "GET")))),
              s(:args),
              s(:send, nil, :assert_nil,
                s(:nil),
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy))),
            s(:block,
              s(:send, nil, :with_env,
                s(:hash,
                  s(:pair,
                    s(:str, "http_proxy"),
                    s(:str, "http://127.0.0.1:8080")),
                  s(:pair,
                    s(:str, "HTTP_PROXY"),
                    s(:str, "http://127.0.0.1:8081")),
                  s(:pair,
                    s(:str, "REQUEST_METHOD"),
                    s(:str, "GET")))),
              s(:args),
              s(:send, nil, :assert_equal,
                s(:send, nil, :URI,
                  s(:str, "http://127.0.0.1:8080")),
                s(:send,
                  s(:send, nil, :URI,
                    s(:str, "http://192.0.2.1/")), :find_proxy)))))),
      s(:def, :with_env,
        s(:args,
          s(:arg, :h)),
        s(:begin,
          s(:block,
            s(:send,
              s(:array,
                s(:str, "http"),
                s(:str, "https"),
                s(:str, "ftp")), :each),
            s(:args,
              s(:arg, :scheme)),
            s(:begin,
              s(:lvasgn, :name,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :scheme)),
                  s(:str, "_proxy"))),
              s(:or_asgn,
                s(:send,
                  s(:lvar, :h), :[],
                  s(:lvar, :name)),
                s(:nil)),
              s(:or_asgn,
                s(:send,
                  s(:lvar, :h), :[],
                  s(:dstr,
                    s(:str, "CGI_"),
                    s(:begin,
                      s(:send,
                        s(:lvar, :name), :upcase)))),
                s(:nil)))),
          s(:kwbegin,
            s(:ensure,
              s(:begin,
                s(:lvasgn, :old,
                  s(:hash)),
                s(:block,
                  s(:send,
                    s(:lvar, :h), :each_key),
                  s(:args,
                    s(:arg, :k)),
                  s(:send,
                    s(:lvar, :old), :[]=,
                    s(:lvar, :k),
                    s(:send,
                      s(:const, nil, :ENV), :[],
                      s(:lvar, :k)))),
                s(:block,
                  s(:send,
                    s(:lvar, :h), :each),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:send,
                    s(:const, nil, :ENV), :[]=,
                    s(:lvar, :k),
                    s(:lvar, :v))),
                s(:yield)),
              s(:block,
                s(:send,
                  s(:lvar, :h), :each_key),
                s(:args,
                  s(:arg, :k)),
                s(:send,
                  s(:const, nil, :ENV), :[]=,
                  s(:lvar, :k),
                  s(:send,
                    s(:lvar, :old), :[],
                    s(:lvar, :k)))))))))))
