s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "uri/ftp")),
  s(:module,
    s(:const, nil, :URI),
    s(:class,
      s(:const, nil, :TestFTP),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args), nil),
        s(:def, :test_parse,
          s(:args),
          s(:begin,
            s(:lvasgn, :url,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "ftp://user:pass@host.com/abc/def"))),
            s(:send, nil, :assert_kind_of,
              s(:const,
                s(:const, nil, :URI), :FTP),
              s(:lvar, :url)),
            s(:lvasgn, :exp,
              s(:array,
                s(:str, "ftp"),
                s(:str, "user:pass"),
                s(:str, "host.com"),
                s(:send,
                  s(:const,
                    s(:const, nil, :URI), :FTP), :default_port),
                s(:str, "abc/def"),
                s(:nil))),
            s(:lvasgn, :ary,
              s(:array,
                s(:send,
                  s(:lvar, :url), :scheme),
                s(:send,
                  s(:lvar, :url), :userinfo),
                s(:send,
                  s(:lvar, :url), :host),
                s(:send,
                  s(:lvar, :url), :port),
                s(:send,
                  s(:lvar, :url), :path),
                s(:send,
                  s(:lvar, :url), :opaque))),
            s(:send, nil, :assert_equal,
              s(:lvar, :exp),
              s(:lvar, :ary)),
            s(:send, nil, :assert_equal,
              s(:str, "user"),
              s(:send,
                s(:lvar, :url), :user)),
            s(:send, nil, :assert_equal,
              s(:str, "pass"),
              s(:send,
                s(:lvar, :url), :password)))),
        s(:def, :test_parse_invalid,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :InvalidURIError)),
            s(:args),
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "ftp:example")))),
        s(:def, :test_paths,
          s(:args),
          s(:begin,
            s(:lvasgn, :u,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "ftp://ftp.example.com/foo/bar/file.ext"))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :u), :path), :==,
                s(:str, "foo/bar/file.ext"))),
            s(:lvasgn, :u,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "ftp://ftp.example.com//foo/bar/file.ext"))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :u), :path), :==,
                s(:str, "/foo/bar/file.ext"))),
            s(:lvasgn, :u,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "ftp://ftp.example.com/%2Ffoo/bar/file.ext"))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :u), :path), :==,
                s(:str, "/foo/bar/file.ext"))))),
        s(:def, :test_assemble,
          s(:args),
          s(:begin,
            s(:lvasgn, :uri,
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :FTP), :build,
                s(:array,
                  s(:str, "user:password"),
                  s(:str, "ftp.example.com"),
                  s(:nil),
                  s(:str, "/path/file.zip"),
                  s(:str, "i")))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :uri), :to_s), :==,
                s(:str, "ftp://user:password@ftp.example.com/%2Fpath/file.zip;type=i"))))),
        s(:def, :test_select,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "ftp"),
                s(:str, "a.b.c"),
                s(:int, 21)),
              s(:send,
                s(:send,
                  s(:const, nil, :URI), :parse,
                  s(:str, "ftp://a.b.c/")), :select,
                s(:sym, :scheme),
                s(:sym, :host),
                s(:sym, :port))),
            s(:lvasgn, :u,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:str, "ftp://a.b.c/"))),
            s(:lvasgn, :ary,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :u), :component), :collect),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :u), :send,
                  s(:lvar, :c)))),
            s(:send, nil, :assert_equal,
              s(:lvar, :ary),
              s(:send,
                s(:lvar, :u), :select,
                s(:splat,
                  s(:send,
                    s(:lvar, :u), :component)))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :u), :select,
                s(:sym, :scheme),
                s(:sym, :host),
                s(:sym, :not_exist),
                s(:sym, :port)))))))))
