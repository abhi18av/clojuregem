s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "uri")),
  s(:class,
    s(:const,
      s(:const, nil, :URI), :TestParser),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :uri_to_ary,
        s(:args,
          s(:arg, :uri)),
        s(:block,
          s(:send,
            s(:send,
              s(:send,
                s(:lvar, :uri), :class), :component), :collect),
          s(:args,
            s(:arg, :c)),
          s(:send,
            s(:lvar, :uri), :send,
            s(:lvar, :c)))),
      s(:def, :test_compare,
        s(:args),
        s(:begin,
          s(:lvasgn, :url,
            s(:str, "http://a/b/c/d;p?q")),
          s(:lvasgn, :u0,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:lvar, :url))),
          s(:lvasgn, :u1,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:lvar, :url))),
          s(:lvasgn, :p,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Parser), :new)),
          s(:lvasgn, :u2,
            s(:send,
              s(:lvar, :p), :parse,
              s(:lvar, :url))),
          s(:lvasgn, :u3,
            s(:send,
              s(:lvar, :p), :parse,
              s(:lvar, :url))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :u0), :==,
              s(:lvar, :u1))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :u0), :eql?,
              s(:lvar, :u1))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :u0), :equal?,
                s(:lvar, :u1)), :!)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :u1), :==,
              s(:lvar, :u2))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :u1), :eql?,
                s(:lvar, :u2)), :!)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :u1), :equal?,
                s(:lvar, :u2)), :!)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :u2), :==,
              s(:lvar, :u3))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :u2), :eql?,
              s(:lvar, :u3))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :u2), :equal?,
                s(:lvar, :u3)), :!)))),
      s(:def, :test_parse,
        s(:args),
        s(:begin,
          s(:lvasgn, :escaped,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :URI), :REGEXP), :PATTERN), :ESCAPED)),
          s(:lvasgn, :hex,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :URI), :REGEXP), :PATTERN), :HEX)),
          s(:lvasgn, :p1,
            s(:send,
              s(:const,
                s(:const, nil, :URI), :Parser), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :ESCAPED),
                  s(:dstr,
                    s(:str, "(?:"),
                    s(:begin,
                      s(:lvar, :escaped)),
                    s(:str, "|%u["),
                    s(:begin,
                      s(:lvar, :hex)),
                    s(:str, "]{4})")))))),
          s(:lvasgn, :u1,
            s(:send,
              s(:lvar, :p1), :parse,
              s(:str, "http://a/b/%uABCD"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "http"),
              s(:nil),
              s(:str, "a"),
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :HTTP), :default_port),
              s(:str, "/b/%uABCD"),
              s(:nil),
              s(:nil)),
            s(:send, nil, :uri_to_ary,
              s(:lvar, :u1))),
          s(:send,
            s(:lvar, :u1), :path=,
            s(:str, "/%uDCBA")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "http"),
              s(:nil),
              s(:str, "a"),
              s(:send,
                s(:const,
                  s(:const, nil, :URI), :HTTP), :default_port),
              s(:str, "/%uDCBA"),
              s(:nil),
              s(:nil)),
            s(:send, nil, :uri_to_ary,
              s(:lvar, :u1))))),
      s(:def, :test_raise_bad_uri_for_integer,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raise,
            s(:const,
              s(:const, nil, :URI), :InvalidURIError)),
          s(:args),
          s(:send,
            s(:const, nil, :URI), :parse,
            s(:int, 1)))))))
