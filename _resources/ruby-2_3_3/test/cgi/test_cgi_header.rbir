s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "time")),
  s(:send, nil, :require_relative,
    s(:str, "update_env")),
  s(:class,
    s(:const, nil, :CGIHeaderTest),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :UpdateEnv)),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@environ,
            s(:hash)),
          s(:send, nil, :update_env,
            s(:hash,
              s(:pair,
                s(:str, "SERVER_PROTOCOL"),
                s(:str, "HTTP/1.1")),
              s(:pair,
                s(:str, "REQUEST_METHOD"),
                s(:str, "GET")),
              s(:pair,
                s(:str, "SERVER_SOFTWARE"),
                s(:str, "Apache 2.2.0")))))),
      s(:def, :teardown,
        s(:args),
        s(:send,
          s(:const, nil, :ENV), :update,
          s(:ivar, :@environ))),
      s(:def, :test_cgi_http_header_simple,
        s(:args),
        s(:begin,
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :expected,
            s(:str, "Content-Type: text/html\r\n\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header)),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :expected,
            s(:str, "Content-Type: text/xhtml; charset=utf8\r\n\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:str, "text/xhtml; charset=utf8"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :expected,
            s(:str, "Content-Type: image/png\r\n\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "type"),
                  s(:str, "image/png"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :expected,
            s(:str, "Content-Type: text/html; charset=utf8\r\n\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "charset"),
                  s(:str, "utf8"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)))),
      s(:def, :test_cgi_http_header_complex,
        s(:args),
        s(:begin,
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :options,
            s(:hash,
              s(:pair,
                s(:str, "type"),
                s(:str, "text/xhtml")),
              s(:pair,
                s(:str, "charset"),
                s(:str, "utf8")),
              s(:pair,
                s(:str, "status"),
                s(:str, "REDIRECT")),
              s(:pair,
                s(:str, "server"),
                s(:str, "webrick")),
              s(:pair,
                s(:str, "connection"),
                s(:str, "close")),
              s(:pair,
                s(:str, "length"),
                s(:int, 123)),
              s(:pair,
                s(:str, "language"),
                s(:str, "ja")),
              s(:pair,
                s(:str, "expires"),
                s(:send,
                  s(:const, nil, :Time), :gm,
                  s(:int, 2000),
                  s(:int, 1),
                  s(:int, 23),
                  s(:int, 12),
                  s(:int, 34),
                  s(:int, 56))),
              s(:pair,
                s(:str, "location"),
                s(:str, "http://www.ruby-lang.org/")))),
          s(:lvasgn, :expected,
            s(:str, "Status: 302 Found\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Server: webrick\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Connection: close\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Content-Type: text/xhtml; charset=utf8\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Content-Length: 123\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Content-Language: ja\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Expires: Sun, 23 Jan 2000 12:34:56 GMT\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "location: http://www.ruby-lang.org/\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:lvar, :options))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)))),
      s(:def, :test_cgi_http_header_argerr,
        s(:args),
        s(:begin,
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :expected,
            s(:const, nil, :ArgumentError)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:lvar, :expected)),
            s(:args),
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:nil))))),
      s(:def, :test_cgi_http_header_cookie,
        s(:args),
        s(:begin,
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :cookie1,
            s(:send,
              s(:const,
                s(:const, nil, :CGI), :Cookie), :new,
              s(:str, "name1"),
              s(:str, "abc"),
              s(:str, "123"))),
          s(:lvasgn, :cookie2,
            s(:send,
              s(:const,
                s(:const, nil, :CGI), :Cookie), :new,
              s(:hash,
                s(:pair,
                  s(:str, "name"),
                  s(:str, "name2")),
                s(:pair,
                  s(:str, "value"),
                  s(:str, "value2")),
                s(:pair,
                  s(:str, "secure"),
                  s(:true))))),
          s(:lvasgn, :ctype,
            s(:str, "Content-Type: text/html\r\n")),
          s(:lvasgn, :sep,
            s(:str, "\r\n")),
          s(:lvasgn, :c1,
            s(:str, "Set-Cookie: name1=abc&123; path=\r\n")),
          s(:lvasgn, :c2,
            s(:str, "Set-Cookie: name2=value2; path=; secure\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "cookie"),
                  s(:lvar, :cookie1))))),
          s(:lvasgn, :expected,
            s(:send,
              s(:send,
                s(:lvar, :ctype), :+,
                s(:lvar, :c1)), :+,
              s(:lvar, :sep))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "cookie"),
                  s(:send,
                    s(:lvar, :cookie2), :to_s))))),
          s(:lvasgn, :expected,
            s(:send,
              s(:send,
                s(:lvar, :ctype), :+,
                s(:lvar, :c2)), :+,
              s(:lvar, :sep))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "cookie"),
                  s(:array,
                    s(:lvar, :cookie1),
                    s(:lvar, :cookie2)))))),
          s(:lvasgn, :expected,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :ctype), :+,
                  s(:lvar, :c1)), :+,
                s(:lvar, :c2)), :+,
              s(:lvar, :sep))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "cookie"),
                  s(:hash,
                    s(:pair,
                      s(:str, "name1"),
                      s(:lvar, :cookie1)),
                    s(:pair,
                      s(:str, "name2"),
                      s(:lvar, :cookie2))))))),
          s(:lvasgn, :expected,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :ctype), :+,
                  s(:lvar, :c1)), :+,
                s(:lvar, :c2)), :+,
              s(:lvar, :sep))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)))),
      s(:def, :test_cgi_http_header_output_cookies,
        s(:args),
        s(:begin,
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :cookies,
            s(:array,
              s(:send,
                s(:const,
                  s(:const, nil, :CGI), :Cookie), :new,
                s(:str, "name1"),
                s(:str, "abc"),
                s(:str, "123")),
              s(:send,
                s(:const,
                  s(:const, nil, :CGI), :Cookie), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "name"),
                    s(:str, "name2")),
                  s(:pair,
                    s(:str, "value"),
                    s(:str, "value2")),
                  s(:pair,
                    s(:str, "secure"),
                    s(:true)))))),
          s(:send,
            s(:lvar, :cgi), :instance_variable_set,
            s(:str, "@output_cookies"),
            s(:lvar, :cookies)),
          s(:lvasgn, :expected,
            s(:str, "Content-Type: text/html; charset=utf8\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Set-Cookie: name1=abc&123; path=\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "Set-Cookie: name2=value2; path=; secure\r\n")),
          s(:send,
            s(:lvar, :expected), :<<,
            s(:str, "\r\n")),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:str, "text/html; charset=utf8"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:hash,
                s(:pair,
                  s(:str, "type"),
                  s(:str, "text/html")),
                s(:pair,
                  s(:str, "charset"),
                  s(:str, "utf8"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :actual)))),
      s(:def, :test_cgi_http_header_nph,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :time_start,
              s(:send,
                s(:send,
                  s(:const, nil, :Time), :now), :to_i)),
            s(:lvasgn, :cgi,
              s(:send,
                s(:const, nil, :CGI), :new)),
            s(:send,
              s(:const, nil, :ENV), :[]=,
              s(:str, "SERVER_SOFTWARE"),
              s(:str, "Apache 2.2.0")),
            s(:lvasgn, :actual1,
              s(:send,
                s(:lvar, :cgi), :http_header,
                s(:hash,
                  s(:pair,
                    s(:str, "nph"),
                    s(:true))))),
            s(:send,
              s(:const, nil, :ENV), :[]=,
              s(:str, "SERVER_SOFTWARE"),
              s(:str, "IIS/4.0")),
            s(:lvasgn, :actual2,
              s(:send,
                s(:lvar, :cgi), :http_header)),
            s(:lvasgn, :actual3,
              s(:send,
                s(:lvar, :cgi), :http_header,
                s(:hash,
                  s(:pair,
                    s(:str, "status"),
                    s(:str, "REDIRECT")),
                  s(:pair,
                    s(:str, "location"),
                    s(:str, "http://www.example.com/"))))),
            s(:send,
              s(:const, nil, :ENV), :[]=,
              s(:str, "SERVER_SOFTWARE"),
              s(:str, "IIS/5.0")),
            s(:lvasgn, :actual4,
              s(:send,
                s(:lvar, :cgi), :http_header)),
            s(:lvasgn, :actual5,
              s(:send,
                s(:lvar, :cgi), :http_header,
                s(:hash,
                  s(:pair,
                    s(:str, "status"),
                    s(:str, "REDIRECT")),
                  s(:pair,
                    s(:str, "location"),
                    s(:str, "http://www.example.com/"))))),
            s(:lvasgn, :time_end,
              s(:send,
                s(:send,
                  s(:const, nil, :Time), :now), :to_i)),
            s(:lvasgn, :date,
              s(:regexp,
                s(:str, "^Date: ([A-Z][a-z]{2}, \\d{2} [A-Z][a-z]{2} \\d{4} \\d\\d:\\d\\d:\\d\\d GMT)\\r\\n"),
                s(:regopt))),
            s(:block,
              s(:send,
                s(:array,
                  s(:lvar, :actual1),
                  s(:lvar, :actual2),
                  s(:lvar, :actual3)), :each),
              s(:args,
                s(:arg, :actual)),
              s(:begin,
                s(:send, nil, :assert_match,
                  s(:lvar, :date),
                  s(:lvar, :actual)),
                s(:send, nil, :assert_includes,
                  s(:irange,
                    s(:lvar, :time_start),
                    s(:lvar, :time_end)),
                  s(:and,
                    s(:send,
                      s(:lvar, :date), :=~,
                      s(:lvar, :actual)),
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :parse,
                        s(:nth_ref, 1)), :to_i))),
                s(:send,
                  s(:lvar, :actual), :sub!,
                  s(:lvar, :date),
                  s(:str, "Date: DATE_IS_REMOVED\r\n")))),
            s(:lvasgn, :expected,
              s(:str, "HTTP/1.1 200 OK\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "Date: DATE_IS_REMOVED\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "Server: Apache 2.2.0\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "Connection: close\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "Content-Type: text/html\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "\r\n")),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :actual1)),
            s(:send,
              s(:lvar, :expected), :sub!,
              s(:regexp,
                s(:str, "^Server: .*?\\r\\n"),
                s(:regopt)),
              s(:str, "Server: IIS/4.0\r\n")),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :actual2)),
            s(:send,
              s(:lvar, :expected), :sub!,
              s(:regexp,
                s(:str, "^HTTP/1.1 200 OK\\r\\n"),
                s(:regopt)),
              s(:str, "HTTP/1.1 302 Found\r\n")),
            s(:send,
              s(:lvar, :expected), :sub!,
              s(:regexp,
                s(:str, "\\r\\n\\r\\n"),
                s(:regopt)),
              s(:str, "\r\nlocation: http://www.example.com/\r\n\r\n")),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :actual3)),
            s(:lvasgn, :expected,
              s(:str, "Content-Type: text/html\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "\r\n")),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :actual4)),
            s(:lvasgn, :expected,
              s(:str, "Status: 302 Found\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "Content-Type: text/html\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "location: http://www.example.com/\r\n")),
            s(:send,
              s(:lvar, :expected), :<<,
              s(:str, "\r\n")),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :actual5))),
          s(:send,
            s(:const, nil, :ENV), :delete,
            s(:str, "SERVER_SOFTWARE")))),
      s(:if,
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "TEST")),
        s(:block,
          s(:send,
            s(:send, nil, :instance_methods), :each),
          s(:args,
            s(:arg, :method)),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :method), :=~,
                s(:regexp,
                  s(:str, "^test_(.*)"),
                  s(:regopt))),
              s(:send,
                s(:nth_ref, 1), :!=,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "TEST")))),
            s(:send, nil, :private,
              s(:lvar, :method)), nil)), nil))))
