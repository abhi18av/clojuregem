s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require_relative,
    s(:str, "update_env")),
  s(:class,
    s(:const, nil, :CGIModrubyTest),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :UpdateEnv)),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@environ,
            s(:hash)),
          s(:send, nil, :update_env,
            s(:hash,
              s(:pair,
                s(:str, "SERVER_PROTOCOL"),
                s(:str, "HTTP/1.1")),
              s(:pair,
                s(:str, "REQUEST_METHOD"),
                s(:str, "GET")))),
          s(:block,
            s(:send,
              s(:const, nil, :CGI), :class_eval),
            s(:args),
            s(:send, nil, :const_set,
              s(:sym, :MOD_RUBY),
              s(:true))),
          s(:send,
            s(:const, nil, :Apache), :_reset))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :ENV), :update,
            s(:ivar, :@environ)),
          s(:block,
            s(:send,
              s(:const, nil, :CGI), :class_eval),
            s(:args),
            s(:send, nil, :remove_const,
              s(:sym, :MOD_RUBY))))),
      s(:def, :test_cgi_modruby_simple,
        s(:args),
        s(:begin,
          s(:lvasgn, :req,
            s(:send,
              s(:const, nil, :Apache), :request)),
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :req), :_setup_cgi_env_invoked?)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :req), :_send_http_header_invoked?), :!)),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :actual)),
          s(:send, nil, :assert_equal,
            s(:str, "text/html"),
            s(:send,
              s(:lvar, :req), :content_type)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :req), :_send_http_header_invoked?)))),
      s(:def, :test_cgi_modruby_complex,
        s(:args),
        s(:begin,
          s(:lvasgn, :req,
            s(:send,
              s(:const, nil, :Apache), :request)),
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :options,
            s(:hash,
              s(:pair,
                s(:str, "status"),
                s(:str, "FORBIDDEN")),
              s(:pair,
                s(:str, "location"),
                s(:str, "http://www.example.com/")),
              s(:pair,
                s(:str, "type"),
                s(:str, "image/gif")),
              s(:pair,
                s(:str, "content-encoding"),
                s(:str, "deflate")),
              s(:pair,
                s(:str, "cookie"),
                s(:array,
                  s(:send,
                    s(:const,
                      s(:const, nil, :CGI), :Cookie), :new,
                    s(:str, "name1"),
                    s(:str, "abc"),
                    s(:str, "123")),
                  s(:send,
                    s(:const,
                      s(:const, nil, :CGI), :Cookie), :new,
                    s(:hash,
                      s(:pair,
                        s(:str, "name"),
                        s(:str, "name2")),
                      s(:pair,
                        s(:str, "value"),
                        s(:str, "value2")),
                      s(:pair,
                        s(:str, "secure"),
                        s(:true)))))))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :req), :_setup_cgi_env_invoked?)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :req), :_send_http_header_invoked?), :!)),
          s(:lvasgn, :actual,
            s(:send,
              s(:lvar, :cgi), :http_header,
              s(:lvar, :options))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :actual)),
          s(:send, nil, :assert_equal,
            s(:str, "image/gif"),
            s(:send,
              s(:lvar, :req), :content_type)),
          s(:send, nil, :assert_equal,
            s(:str, "403 Forbidden"),
            s(:send,
              s(:lvar, :req), :status_line)),
          s(:send, nil, :assert_equal,
            s(:int, 403),
            s(:send,
              s(:lvar, :req), :status)),
          s(:send, nil, :assert_equal,
            s(:str, "deflate"),
            s(:send,
              s(:lvar, :req), :content_encoding)),
          s(:send, nil, :assert_equal,
            s(:str, "http://www.example.com/"),
            s(:send,
              s(:send,
                s(:lvar, :req), :headers_out), :[],
              s(:str, "location"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "name1=abc&123; path="),
              s(:str, "name2=value2; path=; secure")),
            s(:send,
              s(:send,
                s(:lvar, :req), :headers_out), :[],
              s(:str, "Set-Cookie"))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :req), :_send_http_header_invoked?)))),
      s(:def, :test_cgi_modruby_location,
        s(:args),
        s(:begin,
          s(:lvasgn, :req,
            s(:send,
              s(:const, nil, :Apache), :request)),
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:lvasgn, :options,
            s(:hash,
              s(:pair,
                s(:str, "status"),
                s(:str, "200 OK")),
              s(:pair,
                s(:str, "location"),
                s(:str, "http://www.example.com/")))),
          s(:send,
            s(:lvar, :cgi), :http_header,
            s(:lvar, :options)),
          s(:send, nil, :assert_equal,
            s(:str, "200 OK"),
            s(:send,
              s(:lvar, :req), :status_line)),
          s(:send, nil, :assert_equal,
            s(:int, 302),
            s(:send,
              s(:lvar, :req), :status)),
          s(:send, nil, :assert_equal,
            s(:str, "http://www.example.com/"),
            s(:send,
              s(:send,
                s(:lvar, :req), :headers_out), :[],
              s(:str, "location"))))),
      s(:def, :test_cgi_modruby_requestparams,
        s(:args),
        s(:begin,
          s(:lvasgn, :req,
            s(:send,
              s(:const, nil, :Apache), :request)),
          s(:send,
            s(:lvar, :req), :args=,
            s(:str, "a=foo&b=bar")),
          s(:lvasgn, :cgi,
            s(:send,
              s(:const, nil, :CGI), :new)),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:send,
              s(:lvar, :cgi), :[],
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:str, "bar"),
            s(:send,
              s(:lvar, :cgi), :[],
              s(:str, "b"))))),
      s(:if,
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "TEST")),
        s(:block,
          s(:send,
            s(:send, nil, :instance_methods), :each),
          s(:args,
            s(:arg, :method)),
          s(:if,
            s(:and,
              s(:send,
                s(:lvar, :method), :=~,
                s(:regexp,
                  s(:str, "^test_(.*)"),
                  s(:regopt))),
              s(:send,
                s(:nth_ref, 1), :!=,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "TEST")))),
            s(:send, nil, :private,
              s(:lvar, :method)), nil)), nil))),
  s(:class,
    s(:const, nil, :Apache), nil,
    s(:begin,
      s(:defs,
        s(:self), :_reset,
        s(:args),
        s(:ivasgn, :@request,
          s(:send,
            s(:const, nil, :Request), :new))),
      s(:defs,
        s(:self), :request,
        s(:args),
        s(:return,
          s(:ivar, :@request))),
      s(:class,
        s(:const, nil, :Request), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args),
            s(:begin,
              s(:lvasgn, :hash,
                s(:hash)),
              s(:defs,
                s(:lvar, :hash), :add,
                s(:args,
                  s(:arg, :name),
                  s(:arg, :value)),
                s(:send,
                  s(:begin,
                    s(:or_asgn,
                      s(:send,
                        s(:self), :[],
                        s(:lvar, :name)),
                      s(:array))), :<<,
                  s(:lvar, :value))),
              s(:ivasgn, :@http_header,
                s(:nil)),
              s(:ivasgn, :@headers_out,
                s(:lvar, :hash)),
              s(:ivasgn, :@status_line,
                s(:nil)),
              s(:ivasgn, :@status,
                s(:nil)),
              s(:ivasgn, :@content_type,
                s(:nil)),
              s(:ivasgn, :@content_encoding,
                s(:nil)))),
          s(:send, nil, :attr_accessor,
            s(:sym, :headers_out),
            s(:sym, :status_line),
            s(:sym, :status),
            s(:sym, :content_type),
            s(:sym, :content_encoding)),
          s(:send, nil, :attr_accessor,
            s(:sym, :args)),
          s(:def, :send_http_header,
            s(:args),
            s(:ivasgn, :@http_header,
              s(:str, "*invoked*"))),
          s(:def, :_send_http_header_invoked?,
            s(:args),
            s(:if,
              s(:ivar, :@http_header),
              s(:true),
              s(:false))),
          s(:def, :setup_cgi_env,
            s(:args),
            s(:ivasgn, :@cgi_env,
              s(:str, "*invoked*"))),
          s(:def, :_setup_cgi_env_invoked?,
            s(:args),
            s(:if,
              s(:ivar, :@cgi_env),
              s(:true),
              s(:false))))))))
