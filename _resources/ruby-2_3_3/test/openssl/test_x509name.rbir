s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestX509Name),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :ASN1), :ObjectId), :register,
          s(:str, "1.2.840.113549.1.9.1"),
          s(:str, "emailAddress"),
          s(:str, "emailAddress")),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :OpenSSL), :ASN1), :ObjectId), :register,
          s(:str, "2.5.4.5"),
          s(:str, "serialNumber"),
          s(:str, "serialNumber")),
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@obj_type_tmpl,
              s(:send,
                s(:const, nil, :Hash), :new,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING))),
            s(:send,
              s(:ivar, :@obj_type_tmpl), :update,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :OBJECT_TYPE_TEMPLATE)))),
        s(:def, :teardown,
          s(:args), nil),
        s(:def, :test_s_new,
          s(:args),
          s(:begin,
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "C"),
                  s(:str, "JP")),
                s(:array,
                  s(:str, "O"),
                  s(:str, "example")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "www.example.jp")))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/C=JP/O=example/CN=www.example.jp"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "C"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "O"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "JP"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "example"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "www.example.jp"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "countryName"),
                  s(:str, "JP")),
                s(:array,
                  s(:str, "organizationName"),
                  s(:str, "example")),
                s(:array,
                  s(:str, "commonName"),
                  s(:str, "www.example.jp")))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/C=JP/O=example/CN=www.example.jp"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "C"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "O"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "JP"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "example"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "www.example.jp"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn),
                s(:ivar, :@obj_type_tmpl))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/C=JP/O=example/CN=www.example.jp"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "countryName"),
                  s(:str, "JP"),
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING)),
                s(:array,
                  s(:str, "organizationName"),
                  s(:str, "example"),
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING)),
                s(:array,
                  s(:str, "commonName"),
                  s(:str, "www.example.jp"),
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING)))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/C=JP/O=example/CN=www.example.jp"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "DC"),
                  s(:str, "org")),
                s(:array,
                  s(:str, "DC"),
                  s(:str, "ruby-lang")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "GOTOU Yuuzou")),
                s(:array,
                  s(:str, "emailAddress"),
                  s(:str, "gotoyuzo@ruby-lang.org")),
                s(:array,
                  s(:str, "serialNumber"),
                  s(:str, "123")))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/DC=org/DC=ruby-lang/CN=GOTOU Yuuzou/emailAddress=gotoyuzo@ruby-lang.org/serialNumber=123"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "emailAddress"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "serialNumber"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "ruby-lang"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "GOTOU Yuuzou"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "gotoyuzo@ruby-lang.org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "123"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 2))),
            s(:lvasgn, :name_from_der,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:send,
                  s(:lvar, :name), :to_der))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :name_from_der), :to_s),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :name_from_der), :to_a),
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :name_from_der), :to_der),
              s(:send,
                s(:lvar, :name), :to_der)))),
        s(:def, :test_unrecognized_oid,
          s(:args),
          s(:begin,
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "1.2.3.4.5.6.7.8.9.7.5.3.1"),
                  s(:str, "Unknown OID 1")),
                s(:array,
                  s(:str, "1.1.2.3.5.8.13.21.34"),
                  s(:str, "Unknown OID 2")),
                s(:array,
                  s(:str, "C"),
                  s(:str, "US")),
                s(:array,
                  s(:str, "postalCode"),
                  s(:str, "60602")),
                s(:array,
                  s(:str, "ST"),
                  s(:str, "Illinois")),
                s(:array,
                  s(:str, "L"),
                  s(:str, "Chicago")),
                s(:array,
                  s(:str, "O"),
                  s(:str, "Some Company LLC")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "mydomain.com")))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/1.2.3.4.5.6.7.8.9.7.5.3.1=Unknown OID 1/1.1.2.3.5.8.13.21.34=Unknown OID 2/C=US/postalCode=60602/ST=Illinois/L=Chicago/O=Some Company LLC/CN=mydomain.com"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "1.2.3.4.5.6.7.8.9.7.5.3.1"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "1.1.2.3.5.8.13.21.34"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "C"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "postalCode"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "ST"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "L"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 5)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "O"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 6)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 7)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "Unknown OID 1"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "Unknown OID 2"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "US"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "60602"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "Illinois"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "Chicago"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 5)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "Some Company LLC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 6)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "mydomain.com"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 7)), :[],
                s(:int, 1))))),
        s(:def, :test_unrecognized_oid_parse_encode_equality,
          s(:args),
          s(:begin,
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "1.2.3.4.5.6.7.8.9.7.5.3.2"),
                  s(:str, "Unknown OID1")),
                s(:array,
                  s(:str, "1.1.2.3.5.8.13.21.35"),
                  s(:str, "Unknown OID2")),
                s(:array,
                  s(:str, "C"),
                  s(:str, "US")),
                s(:array,
                  s(:str, "postalCode"),
                  s(:str, "60602")),
                s(:array,
                  s(:str, "ST"),
                  s(:str, "Illinois")),
                s(:array,
                  s(:str, "L"),
                  s(:str, "Chicago")),
                s(:array,
                  s(:str, "O"),
                  s(:str, "Some Company LLC")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "mydomain.com")))),
            s(:lvasgn, :name1,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new,
                s(:lvar, :dn))),
            s(:lvasgn, :name2,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:send,
                  s(:lvar, :name1), :to_s))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :name1), :to_s),
              s(:send,
                s(:lvar, :name2), :to_s)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :name1), :to_a),
              s(:send,
                s(:lvar, :name2), :to_a)))),
        s(:def, :test_s_parse,
          s(:args),
          s(:begin,
            s(:lvasgn, :dn,
              s(:str, "/DC=org/DC=ruby-lang/CN=www.ruby-lang.org")),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:lvar, :dn))),
            s(:send, nil, :assert_equal,
              s(:lvar, :dn),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "ruby-lang"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "www.ruby-lang.org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:lvasgn, :dn2,
              s(:str, "DC=org, DC=ruby-lang, CN=www.ruby-lang.org")),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:lvar, :dn2))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:lvar, :dn),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "ruby-lang"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "www.ruby-lang.org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:lvar, :dn2),
                s(:ivar, :@obj_type_tmpl))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))))),
        s(:def, :test_s_parse_rfc2253,
          s(:args),
          s(:begin,
            s(:lvasgn, :scanner,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Name), :RFC2253DN), :method,
                s(:sym, :scan))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:array,
                  s(:str, "C"),
                  s(:str, "JP"))),
              s(:send,
                s(:lvar, :scanner), :call,
                s(:str, "C=JP"))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:array,
                  s(:str, "DC"),
                  s(:str, "org")),
                s(:array,
                  s(:str, "DC"),
                  s(:str, "ruby-lang")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "GOTOU Yuuzou")),
                s(:array,
                  s(:str, "emailAddress"),
                  s(:str, "gotoyuzo@ruby-lang.org"))),
              s(:send,
                s(:lvar, :scanner), :call,
                s(:send,
                  s(:str, "emailAddress=gotoyuzo@ruby-lang.org,CN=GOTOU Yuuzou,"), :+,
                  s(:str, "DC=ruby-lang,DC=org")))),
            s(:lvasgn, :u8,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:array,
                  s(:str, "DC"),
                  s(:str, "org")),
                s(:array,
                  s(:str, "DC"),
                  s(:str, "ruby-lang")),
                s(:array,
                  s(:str, "O"),
                  s(:str, ",=+<>#;")),
                s(:array,
                  s(:str, "O"),
                  s(:str, ",=+<>#;")),
                s(:array,
                  s(:str, "OU"),
                  s(:str, "")),
                s(:array,
                  s(:str, "OU"),
                  s(:str, "")),
                s(:array,
                  s(:str, "L"),
                  s(:str, "aaa=\"bbb, ccc\"")),
                s(:array,
                  s(:str, "L"),
                  s(:str, "aaa=\"bbb, ccc\"")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "後藤裕蔵")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "後藤裕蔵")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "後藤裕蔵")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "後藤裕蔵"),
                  s(:lvar, :u8)),
                s(:array,
                  s(:str, "2.5.4.3"),
                  s(:str, "GOTOU, Yuuzou")),
                s(:array,
                  s(:str, "2.5.4.3"),
                  s(:str, "GOTOU, Yuuzou")),
                s(:array,
                  s(:str, "2.5.4.3"),
                  s(:str, "GOTOU, Yuuzou")),
                s(:array,
                  s(:str, "2.5.4.3"),
                  s(:str, "GOTOU, Yuuzou")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "GOTOU \"gotoyuzo\" Yuuzou")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "GOTOU \"gotoyuzo\" Yuuzou")),
                s(:array,
                  s(:str, "1.2.840.113549.1.9.1"),
                  s(:str, "gotoyuzo@ruby-lang.org")),
                s(:array,
                  s(:str, "emailAddress"),
                  s(:str, "gotoyuzo@ruby-lang.org"))),
              s(:send,
                s(:lvar, :scanner), :call,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:send,
                                        s(:send,
                                          s(:send,
                                            s(:send,
                                              s(:send,
                                                s(:send,
                                                  s(:send,
                                                    s(:send,
                                                      s(:str, "emailAddress=gotoyuzo@ruby-lang.org,"), :+,
                                                      s(:str, "1.2.840.113549.1.9.1=gotoyuzo@ruby-lang.org,")), :+,
                                                    s(:str, "CN=GOTOU \\\"gotoyuzo\\\" Yuuzou,")), :+,
                                                  s(:str, "CN=\"GOTOU \\\"gotoyuzo\\\" Yuuzou\",")), :+,
                                                s(:str, "2.5.4.3=GOTOU\\,\\20Yuuzou,")), :+,
                                              s(:str, "2.5.4.3=GOTOU\\, Yuuzou,")), :+,
                                            s(:str, "2.5.4.3=\"GOTOU, Yuuzou\",")), :+,
                                          s(:str, "2.5.4.3=\"GOTOU\\, Yuuzou\",")), :+,
                                        s(:str, "CN=#0C0CE5BE8CE897A4E8A395E894B5,")), :+,
                                      s(:str, "CN=\\E5\\BE\\8C\\E8\\97\\A4\\E8\\A3\\95\\E8\\94\\B5,")), :+,
                                    s(:str, "CN=\"後藤裕蔵\",")), :+,
                                  s(:str, "CN=後藤裕蔵,")), :+,
                                s(:str, "L=aaa\\=\\\"bbb\\, ccc\\\",")), :+,
                              s(:str, "L=\"aaa=\\\"bbb, ccc\\\"\",")), :+,
                            s(:str, "OU=,")), :+,
                          s(:str, "OU=\"\",")), :+,
                        s(:str, "O=\\,\\=\\+\\<\\>\\#\\;,")), :+,
                      s(:str, "O=\",=+<>#;\",")), :+,
                    s(:str, "DC=ruby-lang,")), :+,
                  s(:str, "DC=org")))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "DC=org+DC=jp"),
                  s(:str, "DC=org,DC=ruby-lang+DC=rubyist,DC=www")), :each),
              s(:args,
                s(:arg, :dn)),
              s(:begin,
                s(:lvasgn, :ex,
                  s(:rescue,
                    s(:send,
                      s(:lvar, :scanner), :call,
                      s(:lvar, :dn)),
                    s(:resbody, nil, nil,
                      s(:gvar, :$!)), nil)),
                s(:lvasgn, :dn_r,
                  s(:send,
                    s(:const, nil, :Regexp), :escape,
                    s(:lvar, :dn))),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "^multi-valued RDN is not supported: "),
                    s(:begin,
                      s(:lvar, :dn_r)),
                    s(:regopt)),
                  s(:send,
                    s(:lvar, :ex), :message)))),
            s(:block,
              s(:send,
                s(:array,
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN"),
                    s(:str, "CN")),
                  s(:array,
                    s(:str, "DC=org,DC=example,"),
                    s(:str, "")),
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN=www.example.org;"),
                    s(:str, "CN=www.example.org;")),
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN=#www.example.org"),
                    s(:str, "CN=#www.example.org")),
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN=#777777.example.org"),
                    s(:str, "CN=#777777.example.org")),
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN=\"www.example\".org"),
                    s(:str, "CN=\"www.example\".org")),
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN=www.\"example.org\""),
                    s(:str, "CN=www.\"example.org\"")),
                  s(:array,
                    s(:str, "DC=org,DC=exapmle,CN=www.\"example\".org"),
                    s(:str, "CN=www.\"example\".org"))), :each),
              s(:args,
                s(:arg, :dn),
                s(:arg, :msg)),
              s(:begin,
                s(:lvasgn, :ex,
                  s(:rescue,
                    s(:send,
                      s(:lvar, :scanner), :call,
                      s(:lvar, :dn)),
                    s(:resbody, nil, nil,
                      s(:gvar, :$!)), nil)),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "^malformed RDN: .*=>"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :Regexp), :escape,
                        s(:lvar, :msg))),
                    s(:regopt)),
                  s(:send,
                    s(:lvar, :ex), :message)))),
            s(:lvasgn, :dn,
              s(:str, "CN=www.ruby-lang.org,DC=ruby-lang,DC=org")),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse_rfc2253,
                s(:lvar, :dn))),
            s(:send, nil, :assert_equal,
              s(:lvar, :dn),
              s(:send,
                s(:lvar, :name), :to_s,
                s(:const,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Name), :RFC2253))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "ruby-lang"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "www.ruby-lang.org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))))),
        s(:def, :test_add_entry,
          s(:args),
          s(:begin,
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "DC"),
                  s(:str, "org")),
                s(:array,
                  s(:str, "DC"),
                  s(:str, "ruby-lang")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "GOTOU Yuuzou")),
                s(:array,
                  s(:str, "emailAddress"),
                  s(:str, "gotoyuzo@ruby-lang.org")),
                s(:array,
                  s(:str, "serialNumber"),
                  s(:str, "123")))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new)),
            s(:block,
              s(:send,
                s(:lvar, :dn), :each),
              s(:args,
                s(:arg, :attr)),
              s(:send,
                s(:lvar, :name), :add_entry,
                s(:splat,
                  s(:lvar, :attr)))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/DC=org/DC=ruby-lang/CN=GOTOU Yuuzou/emailAddress=gotoyuzo@ruby-lang.org/serialNumber=123"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "DC"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "CN"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "emailAddress"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "serialNumber"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:str, "org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "ruby-lang"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "GOTOU Yuuzou"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "gotoyuzo@ruby-lang.org"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:str, "123"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 0)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 1)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :UTF8STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 2)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :IA5STRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 3)), :[],
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :PRINTABLESTRING),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 4)), :[],
                s(:int, 2))))),
        s(:def, :test_add_entry_street,
          s(:args),
          s(:begin,
            s(:if,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :OPENSSL_VERSION_NUMBER), :<,
                s(:int, 9470175)),
              s(:return), nil),
            s(:lvasgn, :dn,
              s(:array,
                s(:array,
                  s(:str, "DC"),
                  s(:str, "org")),
                s(:array,
                  s(:str, "DC"),
                  s(:str, "ruby-lang")),
                s(:array,
                  s(:str, "CN"),
                  s(:str, "GOTOU Yuuzou")),
                s(:array,
                  s(:str, "emailAddress"),
                  s(:str, "gotoyuzo@ruby-lang.org")),
                s(:array,
                  s(:str, "serialNumber"),
                  s(:str, "123")),
                s(:array,
                  s(:str, "street"),
                  s(:str, "Namiki")))),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :new)),
            s(:block,
              s(:send,
                s(:lvar, :dn), :each),
              s(:args,
                s(:arg, :attr)),
              s(:send,
                s(:lvar, :name), :add_entry,
                s(:splat,
                  s(:lvar, :attr)))),
            s(:lvasgn, :ary,
              s(:send,
                s(:lvar, :name), :to_a)),
            s(:send, nil, :assert_equal,
              s(:str, "/DC=org/DC=ruby-lang/CN=GOTOU Yuuzou/emailAddress=gotoyuzo@ruby-lang.org/serialNumber=123/street=Namiki"),
              s(:send,
                s(:lvar, :name), :to_s)),
            s(:send, nil, :assert_equal,
              s(:str, "Namiki"),
              s(:send,
                s(:send,
                  s(:lvar, :ary), :[],
                  s(:int, 5)), :[],
                s(:int, 1))))),
        s(:def, :test_equals2,
          s(:args),
          s(:begin,
            s(:lvasgn, :n1,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "CN=a"))),
            s(:lvasgn, :n2,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "CN=a"))),
            s(:send, nil, :assert_equal,
              s(:lvar, :n1),
              s(:lvar, :n2)))),
        s(:def, :test_spaceship,
          s(:args),
          s(:begin,
            s(:lvasgn, :n1,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "CN=a"))),
            s(:lvasgn, :n2,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "CN=b"))),
            s(:send, nil, :assert_equal,
              s(:int, -1),
              s(:send,
                s(:lvar, :n1), :<=>,
                s(:lvar, :n2))))),
        s(:def, :name_hash,
          s(:args,
            s(:arg, :name)),
          s(:if,
            s(:send,
              s(:lvar, :name), :respond_to?,
              s(:sym, :hash_old)),
            s(:send,
              s(:lvar, :name), :hash_old),
            s(:send,
              s(:lvar, :name), :hash))),
        s(:def, :test_hash,
          s(:args),
          s(:begin,
            s(:lvasgn, :dn,
              s(:str, "/DC=org/DC=ruby-lang/CN=www.ruby-lang.org")),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:lvar, :dn))),
            s(:lvasgn, :d,
              s(:send,
                s(:const,
                  s(:const, nil, :Digest), :MD5), :digest,
                s(:send,
                  s(:lvar, :name), :to_der))),
            s(:lvasgn, :expected,
              s(:send,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :d), :[],
                            s(:int, 0)), :ord), :&,
                        s(:int, 255))), :|,
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :d), :[],
                              s(:int, 1)), :ord), :&,
                          s(:int, 255))), :<<,
                      s(:int, 8))), :|,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :d), :[],
                            s(:int, 2)), :ord), :&,
                        s(:int, 255))), :<<,
                    s(:int, 16))), :|,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :d), :[],
                          s(:int, 3)), :ord), :&,
                      s(:int, 255))), :<<,
                  s(:int, 24)))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:send, nil, :name_hash,
                s(:lvar, :name))),
            s(:lvasgn, :dn,
              s(:str, "/DC=org/DC=ruby-lang/CN=baz.ruby-lang.org")),
            s(:lvasgn, :name,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:lvar, :dn))),
            s(:lvasgn, :d,
              s(:send,
                s(:const,
                  s(:const, nil, :Digest), :MD5), :digest,
                s(:send,
                  s(:lvar, :name), :to_der))),
            s(:lvasgn, :expected,
              s(:send,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :d), :[],
                            s(:int, 0)), :ord), :&,
                        s(:int, 255))), :|,
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :d), :[],
                              s(:int, 1)), :ord), :&,
                          s(:int, 255))), :<<,
                      s(:int, 8))), :|,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :d), :[],
                            s(:int, 2)), :ord), :&,
                        s(:int, 255))), :<<,
                    s(:int, 16))), :|,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :d), :[],
                          s(:int, 3)), :ord), :&,
                      s(:int, 255))), :<<,
                  s(:int, 24)))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:send, nil, :name_hash,
                s(:lvar, :name))))))), nil))
