s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestX509Request),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@rsa1024,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA1024)),
            s(:ivasgn, :@rsa2048,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA2048)),
            s(:ivasgn, :@dsa256,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_DSA256)),
            s(:ivasgn, :@dsa512,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_DSA512)),
            s(:ivasgn, :@dn,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=GOTOU Yuuzou"))))),
        s(:def, :issue_csr,
          s(:args,
            s(:arg, :ver),
            s(:arg, :dn),
            s(:arg, :key),
            s(:arg, :digest)),
          s(:begin,
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new)),
            s(:send,
              s(:lvar, :req), :version=,
              s(:lvar, :ver)),
            s(:send,
              s(:lvar, :req), :subject=,
              s(:lvar, :dn)),
            s(:send,
              s(:lvar, :req), :public_key=,
              s(:send,
                s(:lvar, :key), :public_key)),
            s(:send,
              s(:lvar, :req), :sign,
              s(:lvar, :key),
              s(:lvar, :digest)),
            s(:lvar, :req))),
        s(:def, :test_public_key,
          s(:args),
          s(:begin,
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:ivar, :@rsa1024), :public_key), :to_der),
              s(:send,
                s(:send,
                  s(:lvar, :req), :public_key), :to_der)),
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new,
                s(:send,
                  s(:lvar, :req), :to_der))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:ivar, :@rsa1024), :public_key), :to_der),
              s(:send,
                s(:send,
                  s(:lvar, :req), :public_key), :to_der)),
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@dsa512),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :TestUtils), :DSA_SIGNATURE_DIGEST), :new))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:ivar, :@dsa512), :public_key), :to_der),
              s(:send,
                s(:send,
                  s(:lvar, :req), :public_key), :to_der)),
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new,
                s(:send,
                  s(:lvar, :req), :to_der))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:ivar, :@dsa512), :public_key), :to_der),
              s(:send,
                s(:send,
                  s(:lvar, :req), :public_key), :to_der)))),
        s(:def, :test_version,
          s(:args),
          s(:begin,
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :req), :version)),
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new,
                s(:send,
                  s(:lvar, :req), :to_der))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :req), :version)),
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 1),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :req), :version)),
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new,
                s(:send,
                  s(:lvar, :req), :to_der))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :req), :version)))),
        s(:def, :test_subject,
          s(:args),
          s(:begin,
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@dn), :to_der),
              s(:send,
                s(:send,
                  s(:lvar, :req), :subject), :to_der)),
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new,
                s(:send,
                  s(:lvar, :req), :to_der))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@dn), :to_der),
              s(:send,
                s(:send,
                  s(:lvar, :req), :subject), :to_der)))),
        s(:def, :create_ext_req,
          s(:args,
            s(:arg, :exts)),
          s(:begin,
            s(:lvasgn, :ef,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :ExtensionFactory), :new)),
            s(:lvasgn, :exts,
              s(:block,
                s(:send,
                  s(:lvar, :exts), :collect),
                s(:args,
                  s(:arg, :e)),
                s(:send,
                  s(:lvar, :ef), :create_extension,
                  s(:splat,
                    s(:lvar, :e))))),
            s(:return,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :Set,
                s(:array,
                  s(:send,
                    s(:const,
                      s(:const, nil, :OpenSSL), :ASN1), :Sequence,
                    s(:lvar, :exts))))))),
        s(:def, :get_ext_req,
          s(:args,
            s(:arg, :ext_req_value)),
          s(:begin,
            s(:lvasgn, :set,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :ASN1), :decode,
                s(:lvar, :ext_req_value))),
            s(:lvasgn, :seq,
              s(:send,
                s(:send,
                  s(:lvar, :set), :value), :[],
                s(:int, 0))),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :seq), :value), :collect),
              s(:args,
                s(:arg, :asn1ext)),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Extension), :new,
                  s(:lvar, :asn1ext)), :to_a)))),
        s(:def, :test_attr,
          s(:args),
          s(:begin,
            s(:lvasgn, :exts,
              s(:array,
                s(:array,
                  s(:str, "keyUsage"),
                  s(:str, "Digital Signature, Key Encipherment"),
                  s(:true)),
                s(:array,
                  s(:str, "subjectAltName"),
                  s(:str, "email:gotoyuzo@ruby-lang.org"),
                  s(:false)))),
            s(:lvasgn, :attrval,
              s(:send, nil, :create_ext_req,
                s(:lvar, :exts))),
            s(:lvasgn, :attrs,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Attribute), :new,
                  s(:str, "extReq"),
                  s(:lvar, :attrval)),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Attribute), :new,
                  s(:str, "msExtReq"),
                  s(:lvar, :attrval)))),
            s(:lvasgn, :req0,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:block,
              s(:send,
                s(:lvar, :attrs), :each),
              s(:args,
                s(:arg, :attr)),
              s(:send,
                s(:lvar, :req0), :add_attribute,
                s(:lvar, :attr))),
            s(:lvasgn, :req1,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send,
              s(:lvar, :req1), :attributes=,
              s(:lvar, :attrs)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :req0), :to_der),
              s(:send,
                s(:lvar, :req1), :to_der)),
            s(:lvasgn, :attrs,
              s(:send,
                s(:lvar, :req0), :attributes)),
            s(:send, nil, :assert_equal,
              s(:int, 2),
              s(:send,
                s(:lvar, :attrs), :size)),
            s(:send, nil, :assert_equal,
              s(:str, "extReq"),
              s(:send,
                s(:send,
                  s(:lvar, :attrs), :[],
                  s(:int, 0)), :oid)),
            s(:send, nil, :assert_equal,
              s(:str, "msExtReq"),
              s(:send,
                s(:send,
                  s(:lvar, :attrs), :[],
                  s(:int, 1)), :oid)),
            s(:send, nil, :assert_equal,
              s(:lvar, :exts),
              s(:send, nil, :get_ext_req,
                s(:send,
                  s(:send,
                    s(:lvar, :attrs), :[],
                    s(:int, 0)), :value))),
            s(:send, nil, :assert_equal,
              s(:lvar, :exts),
              s(:send, nil, :get_ext_req,
                s(:send,
                  s(:send,
                    s(:lvar, :attrs), :[],
                    s(:int, 1)), :value))),
            s(:lvasgn, :req,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Request), :new,
                s(:send,
                  s(:lvar, :req0), :to_der))),
            s(:lvasgn, :attrs,
              s(:send,
                s(:lvar, :req), :attributes)),
            s(:send, nil, :assert_equal,
              s(:int, 2),
              s(:send,
                s(:lvar, :attrs), :size)),
            s(:send, nil, :assert_equal,
              s(:str, "extReq"),
              s(:send,
                s(:send,
                  s(:lvar, :attrs), :[],
                  s(:int, 0)), :oid)),
            s(:send, nil, :assert_equal,
              s(:str, "msExtReq"),
              s(:send,
                s(:send,
                  s(:lvar, :attrs), :[],
                  s(:int, 1)), :oid)),
            s(:send, nil, :assert_equal,
              s(:lvar, :exts),
              s(:send, nil, :get_ext_req,
                s(:send,
                  s(:send,
                    s(:lvar, :attrs), :[],
                    s(:int, 0)), :value))),
            s(:send, nil, :assert_equal,
              s(:lvar, :exts),
              s(:send, nil, :get_ext_req,
                s(:send,
                  s(:send,
                    s(:lvar, :attrs), :[],
                    s(:int, 1)), :value))))),
        s(:def, :test_sign_and_verify_rsa_sha1,
          s(:args),
          s(:begin,
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :req), :verify,
                s(:ivar, :@rsa1024))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :req), :verify,
                s(:ivar, :@rsa2048))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:block,
                s(:send, nil, :request_error_returns_false),
                s(:args),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@dsa256)))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:block,
                s(:send, nil, :request_error_returns_false),
                s(:args),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@dsa512)))),
            s(:send,
              s(:lvar, :req), :version=,
              s(:int, 1)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :req), :verify,
                s(:ivar, :@rsa1024))))),
        s(:def, :test_sign_and_verify_rsa_md5,
          s(:args),
          s(:rescue,
            s(:begin,
              s(:lvasgn, :req,
                s(:send, nil, :issue_csr,
                  s(:int, 0),
                  s(:ivar, :@dn),
                  s(:ivar, :@rsa2048),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :Digest), :MD5), :new))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa1024))),
              s(:send, nil, :assert_equal,
                s(:true),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa2048))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:block,
                  s(:send, nil, :request_error_returns_false),
                  s(:args),
                  s(:send,
                    s(:lvar, :req), :verify,
                    s(:ivar, :@dsa256)))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:block,
                  s(:send, nil, :request_error_returns_false),
                  s(:args),
                  s(:send,
                    s(:lvar, :req), :verify,
                    s(:ivar, :@dsa512)))),
              s(:send,
                s(:lvar, :req), :subject=,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                  s(:str, "/C=JP/CN=FooBar"))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa2048)))),
            s(:resbody,
              s(:array,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :RequestError)), nil, nil), nil)),
        s(:def, :test_sign_and_verify_dsa,
          s(:args),
          s(:begin,
            s(:lvasgn, :req,
              s(:send, nil, :issue_csr,
                s(:int, 0),
                s(:ivar, :@dn),
                s(:ivar, :@dsa512),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :TestUtils), :DSA_SIGNATURE_DIGEST), :new))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:block,
                s(:send, nil, :request_error_returns_false),
                s(:args),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa1024)))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:block,
                s(:send, nil, :request_error_returns_false),
                s(:args),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa2048)))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :req), :verify,
                s(:ivar, :@dsa256))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :req), :verify,
                s(:ivar, :@dsa512))),
            s(:send,
              s(:lvar, :req), :public_key=,
              s(:send,
                s(:ivar, :@rsa1024), :public_key)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :req), :verify,
                s(:ivar, :@dsa512))))),
        s(:def, :test_sign_and_verify_rsa_dss1,
          s(:args),
          s(:rescue,
            s(:begin,
              s(:lvasgn, :req,
                s(:send, nil, :issue_csr,
                  s(:int, 0),
                  s(:ivar, :@dn),
                  s(:ivar, :@rsa1024),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :Digest), :DSS1), :new))),
              s(:send, nil, :assert_equal,
                s(:true),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa1024))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa2048))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:block,
                  s(:send, nil, :request_error_returns_false),
                  s(:args),
                  s(:send,
                    s(:lvar, :req), :verify,
                    s(:ivar, :@dsa256)))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:block,
                  s(:send, nil, :request_error_returns_false),
                  s(:args),
                  s(:send,
                    s(:lvar, :req), :verify,
                    s(:ivar, :@dsa512)))),
              s(:send,
                s(:lvar, :req), :version=,
                s(:int, 1)),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:lvar, :req), :verify,
                  s(:ivar, :@rsa1024)))),
            s(:resbody,
              s(:array,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :RequestError)), nil,
              s(:send, nil, :skip)), nil)),
        s(:def, :test_sign_and_verify_dsa_md5,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :RequestError)),
            s(:args),
            s(:send, nil, :issue_csr,
              s(:int, 0),
              s(:ivar, :@dn),
              s(:ivar, :@dsa512),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :Digest), :MD5), :new)))),
        s(:send, nil, :private),
        s(:def, :request_error_returns_false,
          s(:args),
          s(:rescue,
            s(:yield),
            s(:resbody,
              s(:array,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :RequestError)), nil,
              s(:false)), nil)))), nil))
