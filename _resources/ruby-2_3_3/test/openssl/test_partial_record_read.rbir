s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestPartialRecordRead),
      s(:const,
        s(:const, nil, :OpenSSL), :SSLTestCase),
      s(:def, :test_partial_tls_record_read_nonblock,
        s(:args),
        s(:block,
          s(:send, nil, :start_server,
            s(:const,
              s(:const,
                s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
            s(:true),
            s(:hash,
              s(:pair,
                s(:sym, :server_proc),
                s(:block,
                  s(:send,
                    s(:const, nil, :Proc), :new),
                  s(:args,
                    s(:arg, :server_ctx),
                    s(:arg, :server_ssl)),
                  s(:kwbegin,
                    s(:ensure,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :server_ssl), :io), :write,
                          s(:str, "\u0001")),
                        s(:send, nil, :sleep,
                          s(:int, 6))),
                      s(:send,
                        s(:lvar, :server_ssl), :close))))))),
          s(:args,
            s(:arg, :server),
            s(:arg, :port)),
          s(:begin,
            s(:lvasgn, :sock,
              s(:send,
                s(:const, nil, :TCPSocket), :new,
                s(:str, "127.0.0.1"),
                s(:lvar, :port))),
            s(:lvasgn, :ssl,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                s(:lvar, :sock))),
            s(:send,
              s(:lvar, :ssl), :sync_close=,
              s(:true)),
            s(:kwbegin,
              s(:ensure,
                s(:begin,
                  s(:send,
                    s(:lvar, :ssl), :connect),
                  s(:send, nil, :sleep,
                    s(:int, 3)),
                  s(:block,
                    s(:send, nil, :assert_raise,
                      s(:const,
                        s(:const, nil, :IO), :WaitReadable)),
                    s(:args),
                    s(:send,
                      s(:lvar, :ssl), :read_nonblock,
                      s(:int, 1)))),
                s(:send,
                  s(:lvar, :ssl), :close))))))), nil))
