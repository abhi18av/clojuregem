s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestX509Store),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@rsa1024,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA1024)),
            s(:ivasgn, :@rsa2048,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA2048)),
            s(:ivasgn, :@dsa256,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_DSA256)),
            s(:ivasgn, :@dsa512,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_DSA512)),
            s(:ivasgn, :@ca1,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=CA1"))),
            s(:ivasgn, :@ca2,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=CA2"))),
            s(:ivasgn, :@ee1,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=EE1"))),
            s(:ivasgn, :@ee2,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=EE2"))))),
        s(:def, :teardown,
          s(:args), nil),
        s(:def, :test_nosegv_on_cleanup,
          s(:args),
          s(:begin,
            s(:lvasgn, :cert,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Certificate), :new)),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:lvasgn, :ctx,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :StoreContext), :new,
                s(:lvar, :store),
                s(:lvar, :cert),
                s(:array))),
            s(:block,
              s(:send,
                s(:const, nil, :EnvUtil), :suppress_warning),
              s(:args),
              s(:send,
                s(:lvar, :ctx), :cleanup)),
            s(:send,
              s(:lvar, :ctx), :verify))),
        s(:def, :issue_cert,
          s(:args,
            s(:restarg, :args)),
          s(:send,
            s(:const,
              s(:const, nil, :OpenSSL), :TestUtils), :issue_cert,
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :issue_crl,
          s(:args,
            s(:restarg, :args)),
          s(:send,
            s(:const,
              s(:const, nil, :OpenSSL), :TestUtils), :issue_crl,
            s(:splat,
              s(:lvar, :args)))),
        s(:def, :test_verify,
          s(:args),
          s(:begin,
            s(:lvasgn, :now,
              s(:send,
                s(:const, nil, :Time), :at,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :to_i))),
            s(:lvasgn, :ca_exts,
              s(:array,
                s(:array,
                  s(:str, "basicConstraints"),
                  s(:str, "CA:TRUE"),
                  s(:true)),
                s(:array,
                  s(:str, "keyUsage"),
                  s(:str, "cRLSign,keyCertSign"),
                  s(:true)))),
            s(:lvasgn, :ee_exts,
              s(:array,
                s(:array,
                  s(:str, "keyUsage"),
                  s(:str, "keyEncipherment,digitalSignature"),
                  s(:true)))),
            s(:lvasgn, :ca1_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ca1),
                s(:ivar, :@rsa2048),
                s(:int, 1),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 3600)),
                s(:lvar, :ca_exts),
                s(:nil),
                s(:nil),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :ca2_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ca2),
                s(:ivar, :@rsa1024),
                s(:int, 2),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:lvar, :ca_exts),
                s(:lvar, :ca1_cert),
                s(:ivar, :@rsa2048),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :ee1_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ee1),
                s(:ivar, :@dsa256),
                s(:int, 10),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:lvar, :ee_exts),
                s(:lvar, :ca2_cert),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :ee2_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ee2),
                s(:ivar, :@dsa512),
                s(:int, 20),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:lvar, :ee_exts),
                s(:lvar, :ca2_cert),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :ee3_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ee2),
                s(:ivar, :@dsa512),
                s(:int, 30),
                s(:send,
                  s(:lvar, :now), :-,
                  s(:int, 100)),
                s(:send,
                  s(:lvar, :now), :-,
                  s(:int, 1)),
                s(:lvar, :ee_exts),
                s(:lvar, :ca2_cert),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :ee4_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ee2),
                s(:ivar, :@dsa512),
                s(:int, 40),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1000)),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 2000)),
                s(:lvar, :ee_exts),
                s(:lvar, :ca2_cert),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :revoke_info,
              s(:array)),
            s(:lvasgn, :crl1,
              s(:send, nil, :issue_crl,
                s(:lvar, :revoke_info),
                s(:int, 1),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:array),
                s(:lvar, :ca1_cert),
                s(:ivar, :@rsa2048),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :revoke_info,
              s(:array,
                s(:array,
                  s(:int, 2),
                  s(:lvar, :now),
                  s(:int, 1)))),
            s(:lvasgn, :crl1_2,
              s(:send, nil, :issue_crl,
                s(:lvar, :revoke_info),
                s(:int, 2),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:array),
                s(:lvar, :ca1_cert),
                s(:ivar, :@rsa2048),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :revoke_info,
              s(:array,
                s(:array,
                  s(:int, 20),
                  s(:lvar, :now),
                  s(:int, 1)))),
            s(:lvasgn, :crl2,
              s(:send, nil, :issue_crl,
                s(:lvar, :revoke_info),
                s(:int, 1),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:array),
                s(:lvar, :ca2_cert),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :revoke_info,
              s(:array)),
            s(:lvasgn, :crl2_2,
              s(:send, nil, :issue_crl,
                s(:lvar, :revoke_info),
                s(:int, 2),
                s(:send,
                  s(:lvar, :now), :-,
                  s(:int, 100)),
                s(:send,
                  s(:lvar, :now), :-,
                  s(:int, 1)),
                s(:array),
                s(:lvar, :ca2_cert),
                s(:ivar, :@rsa1024),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :ca1_cert), :verify,
                s(:send,
                  s(:lvar, :ca1_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :ca2_cert), :verify,
                s(:send,
                  s(:lvar, :ca1_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :ee1_cert), :verify,
                s(:send,
                  s(:lvar, :ca2_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :ee2_cert), :verify,
                s(:send,
                  s(:lvar, :ca2_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :ee3_cert), :verify,
                s(:send,
                  s(:lvar, :ca2_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :crl1), :verify,
                s(:send,
                  s(:lvar, :ca1_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :crl1_2), :verify,
                s(:send,
                  s(:lvar, :ca1_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :crl2), :verify,
                s(:send,
                  s(:lvar, :ca2_cert), :public_key))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :crl2_2), :verify,
                s(:send,
                  s(:lvar, :ca2_cert), :public_key))),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_not_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_OK),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_not_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_OK),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca1_cert)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_OK),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:str, "ok"),
              s(:send,
                s(:lvar, :store), :error_string)),
            s(:lvasgn, :chain,
              s(:send,
                s(:lvar, :store), :chain)),
            s(:send, nil, :assert_equal,
              s(:int, 2),
              s(:send,
                s(:lvar, :chain), :size)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@ca2), :to_der),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :chain), :[],
                    s(:int, 0)), :subject), :to_der)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@ca1), :to_der),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :chain), :[],
                    s(:int, 1)), :subject), :to_der)),
            s(:send,
              s(:lvar, :store), :purpose=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :PURPOSE_SSL_CLIENT)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_not_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_OK),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send,
              s(:lvar, :store), :purpose=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :PURPOSE_CRL_SIGN)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_OK),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca2_cert)),
            s(:send,
              s(:lvar, :store), :purpose=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :PURPOSE_SSL_CLIENT)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee1_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee2_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_OK),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:str, "ok"),
              s(:send,
                s(:lvar, :store), :error_string)),
            s(:lvasgn, :chain,
              s(:send,
                s(:lvar, :store), :chain)),
            s(:send, nil, :assert_equal,
              s(:int, 3),
              s(:send,
                s(:lvar, :chain), :size)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@ee2), :to_der),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :chain), :[],
                    s(:int, 0)), :subject), :to_der)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@ca2), :to_der),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :chain), :[],
                    s(:int, 1)), :subject), :to_der)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@ca1), :to_der),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :chain), :[],
                    s(:int, 2)), :subject), :to_der)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee3_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_HAS_EXPIRED),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "expire"),
                s(:regopt, :i)),
              s(:send,
                s(:lvar, :store), :error_string)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee4_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_NOT_YET_VALID),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "not yet valid"),
                s(:regopt, :i)),
              s(:send,
                s(:lvar, :store), :error_string)),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca1_cert)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca2_cert)),
            s(:send,
              s(:lvar, :store), :time=,
              s(:send,
                s(:lvar, :now), :+,
                s(:int, 1500))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee4_cert))),
            s(:send,
              s(:lvar, :store), :time=,
              s(:send,
                s(:lvar, :now), :+,
                s(:int, 1900))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_HAS_EXPIRED),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee4_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_HAS_EXPIRED),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send,
              s(:lvar, :store), :time=,
              s(:send,
                s(:lvar, :now), :+,
                s(:int, 4000))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee1_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_HAS_EXPIRED),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee4_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_HAS_EXPIRED),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send,
              s(:lvar, :store), :time=,
              s(:send,
                s(:send,
                  s(:const, nil, :Time), :now), :-,
                s(:int, 4000))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Certificate), :new,
                  s(:lvar, :ca2_cert)))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_NOT_YET_VALID),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :Certificate), :new,
                  s(:lvar, :ee1_cert)))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CERT_NOT_YET_VALID),
              s(:send,
                s(:lvar, :store), :error)),
            s(:if,
              s(:defined?,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK)), nil,
              s(:return)),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:send,
              s(:lvar, :store), :purpose=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :PURPOSE_ANY)),
            s(:send,
              s(:lvar, :store), :flags=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca1_cert)),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl1)),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl2)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee1_cert),
                s(:array,
                  s(:lvar, :ca2_cert)))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee2_cert),
                s(:array,
                  s(:lvar, :ca2_cert)))),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:send,
              s(:lvar, :store), :purpose=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :PURPOSE_ANY)),
            s(:send,
              s(:lvar, :store), :flags=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca1_cert)),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl1_2)),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl2)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee1_cert),
                s(:array,
                  s(:lvar, :ca2_cert))),
              s(:str, "This test is expected to be success with OpenSSL 0.9.7c or later.")),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee2_cert),
                s(:array,
                  s(:lvar, :ca2_cert)))),
            s(:send,
              s(:lvar, :store), :flags=,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK), :|,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK_ALL))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee1_cert),
                s(:array,
                  s(:lvar, :ca2_cert)))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee2_cert),
                s(:array,
                  s(:lvar, :ca2_cert)))),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:send,
              s(:lvar, :store), :purpose=,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :PURPOSE_ANY)),
            s(:send,
              s(:lvar, :store), :flags=,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK), :|,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :V_FLAG_CRL_CHECK_ALL))),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca1_cert)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca2_cert)),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl1)),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl2_2)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca1_cert))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ca2_cert))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee1_cert))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :V_ERR_CRL_HAS_EXPIRED),
              s(:send,
                s(:lvar, :store), :error)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :store), :verify,
                s(:lvar, :ee2_cert))))),
        s(:def, :test_set_errors,
          s(:args),
          s(:begin,
            s(:lvasgn, :now,
              s(:send,
                s(:const, nil, :Time), :now)),
            s(:lvasgn, :ca1_cert,
              s(:send, nil, :issue_cert,
                s(:ivar, :@ca1),
                s(:ivar, :@rsa2048),
                s(:int, 1),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 3600)),
                s(:array),
                s(:nil),
                s(:nil),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :store,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Store), :new)),
            s(:send,
              s(:lvar, :store), :add_cert,
              s(:lvar, :ca1_cert)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :StoreError)),
              s(:args),
              s(:send,
                s(:lvar, :store), :add_cert,
                s(:lvar, :ca1_cert))),
            s(:lvasgn, :revoke_info,
              s(:array)),
            s(:lvasgn, :crl1,
              s(:send, nil, :issue_crl,
                s(:lvar, :revoke_info),
                s(:int, 1),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:array),
                s(:lvar, :ca1_cert),
                s(:ivar, :@rsa2048),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:lvasgn, :revoke_info,
              s(:array,
                s(:array,
                  s(:int, 2),
                  s(:lvar, :now),
                  s(:int, 1)))),
            s(:lvasgn, :crl2,
              s(:send, nil, :issue_crl,
                s(:lvar, :revoke_info),
                s(:int, 2),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 1800)),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 3600)),
                s(:array),
                s(:lvar, :ca1_cert),
                s(:ivar, :@rsa2048),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send,
              s(:lvar, :store), :add_crl,
              s(:lvar, :crl1)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "0\\.9\\.8.*-rhel"),
                  s(:regopt)),
                s(:const,
                  s(:const, nil, :OpenSSL), :OPENSSL_VERSION)),
              s(:block,
                s(:send, nil, :assert_nothing_raised),
                s(:args),
                s(:send,
                  s(:lvar, :store), :add_crl,
                  s(:lvar, :crl2))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :X509), :StoreError)),
                s(:args),
                s(:send,
                  s(:lvar, :store), :add_crl,
                  s(:lvar, :crl2)))))))), nil))
