s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestBuffering),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:class,
          s(:const, nil, :IO), nil,
          s(:begin,
            s(:send, nil, :include,
              s(:const,
                s(:const, nil, :OpenSSL), :Buffering)),
            s(:send, nil, :attr_accessor,
              s(:sym, :sync)),
            s(:def, :initialize,
              s(:args),
              s(:begin,
                s(:ivasgn, :@io,
                  s(:str, "")),
                s(:defs,
                  s(:ivar, :@io), :sync,
                  s(:args),
                  s(:true)),
                s(:zsuper),
                s(:ivasgn, :@sync,
                  s(:false)))),
            s(:def, :string,
              s(:args),
              s(:ivar, :@io)),
            s(:def, :sysread,
              s(:args,
                s(:arg, :size)),
              s(:begin,
                s(:lvasgn, :str,
                  s(:send,
                    s(:ivar, :@io), :slice!,
                    s(:int, 0),
                    s(:lvar, :size))),
                s(:if,
                  s(:send,
                    s(:lvar, :str), :empty?),
                  s(:send, nil, :raise,
                    s(:const, nil, :EOFError)), nil),
                s(:lvar, :str))),
            s(:def, :syswrite,
              s(:args,
                s(:arg, :str)),
              s(:begin,
                s(:send,
                  s(:ivar, :@io), :<<,
                  s(:lvar, :str)),
                s(:send,
                  s(:lvar, :str), :size))))),
        s(:def, :setup,
          s(:args),
          s(:ivasgn, :@io,
            s(:send,
              s(:const, nil, :IO), :new))),
        s(:def, :test_flush,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@io), :write,
              s(:str, "a")),
            s(:send, nil, :refute,
              s(:send,
                s(:ivar, :@io), :sync)),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:ivar, :@io), :string)),
            s(:send, nil, :assert_equal,
              s(:ivar, :@io),
              s(:send,
                s(:ivar, :@io), :flush)),
            s(:send, nil, :refute,
              s(:send,
                s(:ivar, :@io), :sync)),
            s(:send, nil, :assert_equal,
              s(:str, "a"),
              s(:send,
                s(:ivar, :@io), :string)))),
        s(:def, :test_flush_error,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@io), :write,
              s(:str, "a")),
            s(:send, nil, :refute,
              s(:send,
                s(:ivar, :@io), :sync)),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:ivar, :@io), :string)),
            s(:defs,
              s(:ivar, :@io), :syswrite,
              s(:args,
                s(:restarg, :a)),
              s(:send, nil, :raise,
                s(:const, nil, :SystemCallError),
                s(:str, "fail"))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :SystemCallError)),
              s(:args),
              s(:send,
                s(:ivar, :@io), :flush)),
            s(:send, nil, :refute,
              s(:send,
                s(:ivar, :@io), :sync),
              s(:str, "sync must not change")))),
        s(:def, :test_getc,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@io), :syswrite,
              s(:str, "abc")),
            s(:send, nil, :assert_equal,
              s(:str, "a"),
              s(:send,
                s(:ivar, :@io), :getc)),
            s(:send, nil, :assert_equal,
              s(:str, "b"),
              s(:send,
                s(:ivar, :@io), :getc)),
            s(:send, nil, :assert_equal,
              s(:str, "c"),
              s(:send,
                s(:ivar, :@io), :getc)))),
        s(:def, :test_each_byte,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@io), :syswrite,
              s(:str, "abc")),
            s(:lvasgn, :res,
              s(:array)),
            s(:block,
              s(:send,
                s(:ivar, :@io), :each_byte),
              s(:args,
                s(:arg, :c)),
              s(:send,
                s(:lvar, :res), :<<,
                s(:lvar, :c))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:int, 97),
                s(:int, 98),
                s(:int, 99)),
              s(:lvar, :res)))))), nil))
