s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestOCSP),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:lvasgn, :ca_subj,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=TestCA"))),
            s(:lvasgn, :ca_key,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA1024)),
            s(:lvasgn, :ca_serial,
              s(:int, 188887237118652)),
            s(:lvasgn, :subj,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Name), :parse,
                s(:str, "/DC=org/DC=ruby-lang/CN=TestCert"))),
            s(:ivasgn, :@key,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_RSA1024)),
            s(:lvasgn, :serial,
              s(:int, 188887237118653)),
            s(:lvasgn, :now,
              s(:send,
                s(:const, nil, :Time), :at,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :to_i))),
            s(:lvasgn, :dgst,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :Digest), :SHA1), :new)),
            s(:ivasgn, :@ca_cert,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :issue_cert,
                s(:lvar, :ca_subj),
                s(:lvar, :ca_key),
                s(:lvar, :ca_serial),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 3600)),
                s(:array),
                s(:nil),
                s(:nil),
                s(:lvar, :dgst))),
            s(:ivasgn, :@cert,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :TestUtils), :issue_cert,
                s(:lvar, :subj),
                s(:ivar, :@key),
                s(:lvar, :serial),
                s(:lvar, :now),
                s(:send,
                  s(:lvar, :now), :+,
                  s(:int, 3600)),
                s(:array),
                s(:ivar, :@ca_cert),
                s(:nil),
                s(:lvar, :dgst))))),
        s(:def, :test_new_certificate_id,
          s(:args),
          s(:begin,
            s(:lvasgn, :cid,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :OCSP), :CertificateId), :new,
                s(:ivar, :@cert),
                s(:ivar, :@ca_cert))),
            s(:send, nil, :assert_kind_of,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :OCSP), :CertificateId),
              s(:lvar, :cid)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@cert), :serial),
              s(:send,
                s(:lvar, :cid), :serial)))),
        s(:if,
          s(:defined?,
            s(:const,
              s(:const,
                s(:const, nil, :OpenSSL), :Digest), :SHA256)),
          s(:def, :test_new_certificate_id_with_digest,
            s(:args),
            s(:begin,
              s(:lvasgn, :cid,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :OCSP), :CertificateId), :new,
                  s(:ivar, :@cert),
                  s(:ivar, :@ca_cert),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :Digest), :SHA256), :new))),
              s(:send, nil, :assert_kind_of,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :OCSP), :CertificateId),
                s(:lvar, :cid)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:ivar, :@cert), :serial),
                s(:send,
                  s(:lvar, :cid), :serial)))), nil),
        s(:def, :test_new_ocsp_request,
          s(:args),
          s(:begin,
            s(:lvasgn, :request,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :OCSP), :Request), :new)),
            s(:lvasgn, :cid,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :OCSP), :CertificateId), :new,
                s(:ivar, :@cert),
                s(:ivar, :@ca_cert),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :OpenSSL), :Digest), :SHA1), :new))),
            s(:send,
              s(:lvar, :request), :add_certid,
              s(:lvar, :cid)),
            s(:send,
              s(:lvar, :request), :sign,
              s(:ivar, :@cert),
              s(:ivar, :@key),
              s(:array,
                s(:ivar, :@cert))),
            s(:send, nil, :assert_kind_of,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :OCSP), :Request),
              s(:lvar, :request)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :cid), :serial),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :request), :certid), :first), :serial)))))), nil))
