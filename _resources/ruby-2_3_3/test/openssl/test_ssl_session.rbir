s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestSSLSession),
      s(:const,
        s(:const, nil, :OpenSSL), :SSLTestCase),
      s(:begin,
        s(:def, :test_session_equals,
          s(:args),
          s(:begin,
            s(:lvasgn, :session,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :Session), :new,
                s(:dstr,
                  s(:str, "-----BEGIN SSL SESSION PARAMETERS-----\n"),
                  s(:str, "MIIDFgIBAQICAwEEAgA5BCCY3pW6iTkPoD5SENuztz/gZjhvey6XnHbsxd22k0Ol\n"),
                  s(:str, "dgQw8uaN3hCRnlhoIKPWInCFzrp/tQsDRFs9jDjc9pwpy/oKHmJdQQMQA1g8FYnO\n"),
                  s(:str, "gpdVoQYCBE52ikKiBAICASyjggKOMIICijCCAXKgAwIBAgIBAjANBgkqhkiG9w0B\n"),
                  s(:str, "AQUFADA9MRMwEQYKCZImiZPyLGQBGRYDb3JnMRkwFwYKCZImiZPyLGQBGRYJcnVi\n"),
                  s(:str, "eS1sYW5nMQswCQYDVQQDDAJDQTAeFw0xMTA5MTkwMDE4MTBaFw0xMTA5MTkwMDQ4\n"),
                  s(:str, "MTBaMEQxEzARBgoJkiaJk/IsZAEZFgNvcmcxGTAXBgoJkiaJk/IsZAEZFglydWJ5\n"),
                  s(:str, "LWxhbmcxEjAQBgNVBAMMCWxvY2FsaG9zdDCBnzANBgkqhkiG9w0BAQEFAAOBjQAw\n"),
                  s(:str, "gYkCgYEAy8LEsNRApz7U/j5DoB4XBgO9Z8Atv5y/OVQRp0ag8Tqo1YewsWijxEWB\n"),
                  s(:str, "7JOATwpBN267U4T1nPZIxxEEO7n/WNa2ws9JWsjah8ssEBFSxZqdXKSLf0N4Hi7/\n"),
                  s(:str, "GQ/aYoaMCiQ8jA4jegK2FJmXM71uPe+jFN/peeBOpRfyXxRFOYcCAwEAAaMSMBAw\n"),
                  s(:str, "DgYDVR0PAQH/BAQDAgWgMA0GCSqGSIb3DQEBBQUAA4IBAQARC7GP7InX1t7VEXz2\n"),
                  s(:str, "I8RI57S0/HSJL4fDIYP3zFpitHX1PZeo+7XuzMilvPjjBo/ky9Jzo8TYiY+N+JEz\n"),
                  s(:str, "mY/A/zPA4ZsJ7KYj6/FEdIc/vRlS0CvsbClbNjw1jl/PoB2FLr2b3uuBcZEsyZeP\n"),
                  s(:str, "yq154ijq37Ajf8K5Mi5FgshoP41BPtRPj+VVf61rv1IcEnNWdDCS6DR4XsaNC+zt\n"),
                  s(:str, "G6AqCqkytIXWRuDw6n6vYLF3A/tn2sldLo7/scY0PMDNbo63O/LTxkDHmPhSkD68\n"),
                  s(:str, "8m9SsMeTR+RCiDEZWFPVcAH/8mDfi+5k8uN3qS+gOU/PPrmHGgl5ykiSFgqs4v61\n"),
                  s(:str, "tddwpBAEDjcwMzA5NTYzMTU1MzAwpQMCARM=\n"),
                  s(:str, "-----END SSL SESSION PARAMETERS-----\n")))),
            s(:block,
              s(:send, nil, :start_server,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
                s(:true),
                s(:hash,
                  s(:pair,
                    s(:sym, :ignore_listener_error),
                    s(:true)))),
              s(:args,
                s(:arg, :_),
                s(:arg, :port)),
              s(:begin,
                s(:lvasgn, :ctx,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new)),
                s(:send,
                  s(:lvar, :ctx), :session_cache_mode=,
                  s(:const,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :SSL), :SSLContext), :SESSION_CACHE_CLIENT)),
                s(:send,
                  s(:lvar, :ctx), :session_id_context=,
                  s(:send,
                    s(:send,
                      s(:self), :object_id), :to_s)),
                s(:lvasgn, :sock,
                  s(:send,
                    s(:const, nil, :TCPSocket), :new,
                    s(:str, "127.0.0.1"),
                    s(:lvar, :port))),
                s(:kwbegin,
                  s(:ensure,
                    s(:begin,
                      s(:lvasgn, :ssl,
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                          s(:lvar, :sock),
                          s(:lvar, :ctx))),
                      s(:send,
                        s(:lvar, :ssl), :session=,
                        s(:lvar, :session)),
                      s(:send, nil, :assert_equal,
                        s(:lvar, :session),
                        s(:send,
                          s(:lvar, :ssl), :session))),
                    s(:send,
                      s(:lvar, :sock), :close))))))),
        s(:def, :test_session,
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:int, 5)),
            s(:args),
            s(:block,
              s(:send, nil, :start_server,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
                s(:true)),
              s(:args,
                s(:arg, :server),
                s(:arg, :port)),
              s(:begin,
                s(:lvasgn, :sock,
                  s(:send,
                    s(:const, nil, :TCPSocket), :new,
                    s(:str, "127.0.0.1"),
                    s(:lvar, :port))),
                s(:lvasgn, :ctx,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new,
                    s(:str, "TLSv1"))),
                s(:lvasgn, :ssl,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                    s(:lvar, :sock),
                    s(:lvar, :ctx))),
                s(:send,
                  s(:lvar, :ssl), :sync_close=,
                  s(:true)),
                s(:send,
                  s(:lvar, :ssl), :connect),
                s(:lvasgn, :session,
                  s(:send,
                    s(:lvar, :ssl), :session)),
                s(:send, nil, :assert,
                  s(:send,
                    s(:lvar, :session), :==,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :Session), :new,
                      s(:send,
                        s(:lvar, :session), :to_pem)))),
                s(:send, nil, :assert,
                  s(:send,
                    s(:lvar, :session), :==,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :Session), :new,
                      s(:lvar, :ssl)))),
                s(:send,
                  s(:lvar, :session), :timeout=,
                  s(:int, 5)),
                s(:send, nil, :assert_equal,
                  s(:int, 5),
                  s(:send,
                    s(:lvar, :session), :timeout)),
                s(:send, nil, :assert_not_nil,
                  s(:send,
                    s(:lvar, :session), :time)),
                s(:send,
                  s(:lvar, :session), :time=,
                  s(:lvasgn, :t1,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Time), :now), :to_i))),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:const, nil, :Time), :at,
                    s(:lvar, :t1)),
                  s(:send,
                    s(:lvar, :session), :time)),
                s(:if,
                  s(:send,
                    s(:lvar, :session), :respond_to?,
                    s(:sym, :id)),
                  s(:send, nil, :assert_not_nil,
                    s(:send,
                      s(:lvar, :session), :id)), nil),
                s(:lvasgn, :pem,
                  s(:send,
                    s(:lvar, :session), :to_pem)),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\A-----BEGIN SSL SESSION PARAMETERS-----"),
                    s(:regopt)),
                  s(:lvar, :pem)),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "-----END SSL SESSION PARAMETERS-----\\Z"),
                    s(:regopt)),
                  s(:lvar, :pem)),
                s(:send,
                  s(:send,
                    s(:lvar, :pem), :gsub!,
                    s(:regexp,
                      s(:str, "-----(BEGIN|END) SSL SESSION PARAMETERS-----"),
                      s(:regopt)),
                    s(:str, "")), :gsub!,
                  s(:regexp,
                    s(:str, "[\\r\\n]+"),
                    s(:regopt, :m)),
                  s(:str, "")),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:lvar, :session), :to_der),
                  s(:send,
                    s(:send,
                      s(:lvar, :pem), :unpack,
                      s(:str, "m*")), :[],
                    s(:int, 0))),
                s(:send, nil, :assert_not_nil,
                  s(:send,
                    s(:lvar, :session), :to_text)),
                s(:send,
                  s(:lvar, :ssl), :close))))),
        s(:casgn, nil, :DUMMY_SESSION,
          s(:dstr,
            s(:str, "-----BEGIN SSL SESSION PARAMETERS-----\n"),
            s(:str, "MIIDzQIBAQICAwEEAgA5BCAF219w9ZEV8dNA60cpEGOI34hJtIFbf3bkfzSgMyad\n"),
            s(:str, "MQQwyGLbkCxE4OiMLdKKem+pyh8V7ifoP7tCxhdmwoDlJxI1v6nVCjai+FGYuncy\n"),
            s(:str, "NNSWoQYCBE4DDWuiAwIBCqOCAo4wggKKMIIBcqADAgECAgECMA0GCSqGSIb3DQEB\n"),
            s(:str, "BQUAMD0xEzARBgoJkiaJk/IsZAEZFgNvcmcxGTAXBgoJkiaJk/IsZAEZFglydWJ5\n"),
            s(:str, "LWxhbmcxCzAJBgNVBAMMAkNBMB4XDTExMDYyMzA5NTQ1MVoXDTExMDYyMzEwMjQ1\n"),
            s(:str, "MVowRDETMBEGCgmSJomT8ixkARkWA29yZzEZMBcGCgmSJomT8ixkARkWCXJ1Ynkt\n"),
            s(:str, "bGFuZzESMBAGA1UEAwwJbG9jYWxob3N0MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCB\n"),
            s(:str, "iQKBgQDLwsSw1ECnPtT+PkOgHhcGA71nwC2/nL85VBGnRqDxOqjVh7CxaKPERYHs\n"),
            s(:str, "k4BPCkE3brtThPWc9kjHEQQ7uf9Y1rbCz0layNqHyywQEVLFmp1cpIt/Q3geLv8Z\n"),
            s(:str, "D9pihowKJDyMDiN6ArYUmZczvW4976MU3+l54E6lF/JfFEU5hwIDAQABoxIwEDAO\n"),
            s(:str, "BgNVHQ8BAf8EBAMCBaAwDQYJKoZIhvcNAQEFBQADggEBACj5WhoZ/ODVeHpwgq1d\n"),
            s(:str, "8fW/13ICRYHYpv6dzlWihyqclGxbKMlMnaVCPz+4JaVtMz3QB748KJQgL3Llg3R1\n"),
            s(:str, "ek+f+n1MBCMfFFsQXJ2gtLB84zD6UCz8aaCWN5/czJCd7xMz7fRLy3TOIW5boXAU\n"),
            s(:str, "zIa8EODk+477K1uznHm286ab0Clv+9d304hwmBZgkzLg6+31Of6d6s0E0rwLGiS2\n"),
            s(:str, "sOWYg34Y3r4j8BS9Ak4jzpoLY6cJ0QAKCOJCgmjGr4XHpyXMLbicp3ga1uSbwtVO\n"),
            s(:str, "gF/gTfpLhJC+y0EQ5x3Ftl88Cq7ZJuLBDMo/TLIfReJMQu/HlrTT7+LwtneSWGmr\n"),
            s(:str, "KkSkAgQApQMCAROqgcMEgcAuDkAVfj6QAJMz9yqTzW5wPFyty7CxUEcwKjUqj5UP\n"),
            s(:str, "/Yvky1EkRuM/eQfN7ucY+MUvMqv+R8ZSkHPsnjkBN5ChvZXjrUSZKFVjR4eFVz2V\n"),
            s(:str, "jismLEJvIFhQh6pqTroRrOjMfTaM5Lwoytr2FTGobN9rnjIRsXeFQW1HLFbXn7Dh\n"),
            s(:str, "8uaQkMwIVVSGRB8T7t6z6WIdWruOjCZ6G5ASI5XoqAHwGezhLodZuvJEfsVyCF9y\n"),
            s(:str, "j+RBGfCFrrQbBdnkFI/ztgM=\n"),
            s(:str, "-----END SSL SESSION PARAMETERS-----\n"))),
        s(:casgn, nil, :DUMMY_SESSION_NO_EXT,
          s(:dstr,
            s(:str, "-----BEGIN SSL SESSION PARAMETERS-----\n"),
            s(:str, "MIIDCAIBAQICAwAEAgA5BCDyAW7rcpzMjDSosH+Tv6sukymeqgq3xQVVMez628A+\n"),
            s(:str, "lAQw9TrKzrIqlHEh6ltuQaqv/Aq83AmaAlogYktZgXAjOGnhX7ifJDNLMuCfQq53\n"),
            s(:str, "hPAaoQYCBE4iDeeiBAICASyjggKOMIICijCCAXKgAwIBAgIBAjANBgkqhkiG9w0B\n"),
            s(:str, "AQUFADA9MRMwEQYKCZImiZPyLGQBGRYDb3JnMRkwFwYKCZImiZPyLGQBGRYJcnVi\n"),
            s(:str, "eS1sYW5nMQswCQYDVQQDDAJDQTAeFw0xMTA3MTYyMjE3MTFaFw0xMTA3MTYyMjQ3\n"),
            s(:str, "MTFaMEQxEzARBgoJkiaJk/IsZAEZFgNvcmcxGTAXBgoJkiaJk/IsZAEZFglydWJ5\n"),
            s(:str, "LWxhbmcxEjAQBgNVBAMMCWxvY2FsaG9zdDCBnzANBgkqhkiG9w0BAQEFAAOBjQAw\n"),
            s(:str, "gYkCgYEAy8LEsNRApz7U/j5DoB4XBgO9Z8Atv5y/OVQRp0ag8Tqo1YewsWijxEWB\n"),
            s(:str, "7JOATwpBN267U4T1nPZIxxEEO7n/WNa2ws9JWsjah8ssEBFSxZqdXKSLf0N4Hi7/\n"),
            s(:str, "GQ/aYoaMCiQ8jA4jegK2FJmXM71uPe+jFN/peeBOpRfyXxRFOYcCAwEAAaMSMBAw\n"),
            s(:str, "DgYDVR0PAQH/BAQDAgWgMA0GCSqGSIb3DQEBBQUAA4IBAQA3TRzABRG3kz8jEEYr\n"),
            s(:str, "tDQqXgsxwTsLhTT5d1yF0D8uFw+y15hJAJnh6GJHjqhWBrF4zNoTApFo+4iIL6g3\n"),
            s(:str, "q9C3mUsxIVAHx41DwZBh/FI7J4FqlAoGOguu7892CNVY3ZZjc3AXMTdKjcNoWPzz\n"),
            s(:str, "FCdj5fNT24JMMe+ZdGZK97ChahJsdn/6B3j6ze9NK9mfYEbiJhejGTPLOFVHJCGR\n"),
            s(:str, "KYYZ3ZcKhLDr9ql4d7cCo1gBtemrmFQGPui7GttNEqmXqUKvV8mYoa8farf5i7T4\n"),
            s(:str, "L6a/gp2cVZTaDIS1HjbJsA/Ag7AajZqiN6LfqShNUVsrMZ+5CoV8EkBDTZPJ9MSr\n"),
            s(:str, "a3EqpAIEAKUDAgET\n"),
            s(:str, "-----END SSL SESSION PARAMETERS-----\n"))),
        s(:def, :test_session_time,
          s(:args),
          s(:begin,
            s(:lvasgn, :sess,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :Session), :new,
                s(:const, nil, :DUMMY_SESSION_NO_EXT))),
            s(:send,
              s(:lvar, :sess), :time=,
              s(:begin,
                s(:lvasgn, :now,
                  s(:send,
                    s(:const, nil, :Time), :now)))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :now), :to_i),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :time), :to_i)),
            s(:send,
              s(:lvar, :sess), :time=,
              s(:int, 1)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :time), :to_i)),
            s(:send,
              s(:lvar, :sess), :time=,
              s(:float, 1.2345)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :time), :to_i)),
            s(:send,
              s(:lvar, :sess), :time=,
              s(:send,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 31)), :-,
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 31)), :-,
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :time), :to_i)))),
        s(:def, :test_session_timeout,
          s(:args),
          s(:begin,
            s(:lvasgn, :sess,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :Session), :new,
                s(:const, nil, :DUMMY_SESSION_NO_EXT))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :TypeError)),
              s(:args),
              s(:send,
                s(:lvar, :sess), :timeout=,
                s(:send,
                  s(:const, nil, :Time), :now))),
            s(:send,
              s(:lvar, :sess), :timeout=,
              s(:int, 1)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :timeout), :to_i)),
            s(:send,
              s(:lvar, :sess), :timeout=,
              s(:float, 1.2345)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :timeout), :to_i)),
            s(:send,
              s(:lvar, :sess), :timeout=,
              s(:send,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 31)), :-,
                s(:int, 1))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:int, 2), :**,
                  s(:int, 31)), :-,
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:lvar, :sess), :timeout), :to_i)))),
        s(:if,
          s(:send,
            s(:const,
              s(:const, nil, :OpenSSL), :OPENSSL_VERSION_NUMBER), :>=,
            s(:int, 9470143)),
          s(:def, :test_session_exts_read,
            s(:args),
            s(:send, nil, :assert,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :Session), :new,
                s(:const, nil, :DUMMY_SESSION)))), nil),
        s(:def, :test_client_session,
          s(:args),
          s(:begin,
            s(:lvasgn, :last_session,
              s(:nil)),
            s(:block,
              s(:send, nil, :start_server,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
                s(:true)),
              s(:args,
                s(:arg, :server),
                s(:arg, :port)),
              s(:block,
                s(:send,
                  s(:int, 2), :times),
                s(:args),
                s(:begin,
                  s(:lvasgn, :sock,
                    s(:send,
                      s(:const, nil, :TCPSocket), :new,
                      s(:str, "127.0.0.1"),
                      s(:lvar, :port))),
                  s(:lvasgn, :ctx,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new,
                      s(:str, "TLSv1"))),
                  s(:lvasgn, :ssl,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                      s(:lvar, :sock),
                      s(:lvar, :ctx))),
                  s(:send,
                    s(:lvar, :ssl), :sync_close=,
                    s(:true)),
                  s(:if,
                    s(:lvar, :last_session),
                    s(:send,
                      s(:lvar, :ssl), :session=,
                      s(:lvar, :last_session)), nil),
                  s(:send,
                    s(:lvar, :ssl), :connect),
                  s(:lvasgn, :session,
                    s(:send,
                      s(:lvar, :ssl), :session)),
                  s(:if,
                    s(:lvar, :last_session),
                    s(:begin,
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :ssl), :session_reused?)),
                      s(:if,
                        s(:send,
                          s(:lvar, :session), :respond_to?,
                          s(:sym, :id)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :session), :id),
                          s(:send,
                            s(:lvar, :last_session), :id)), nil),
                      s(:send, nil, :assert_equal,
                        s(:send,
                          s(:lvar, :session), :to_pem),
                        s(:send,
                          s(:lvar, :last_session), :to_pem)),
                      s(:send, nil, :assert_equal,
                        s(:send,
                          s(:lvar, :session), :to_der),
                        s(:send,
                          s(:lvar, :last_session), :to_der)),
                      s(:send, nil, :assert_equal,
                        s(:send,
                          s(:lvar, :session), :to_text),
                        s(:send,
                          s(:lvar, :last_session), :to_text))),
                    s(:send, nil, :assert,
                      s(:send,
                        s(:send,
                          s(:lvar, :ssl), :session_reused?), :!))),
                  s(:lvasgn, :last_session,
                    s(:lvar, :session)),
                  s(:lvasgn, :str,
                    s(:send,
                      s(:send,
                        s(:str, "x"), :*,
                        s(:int, 100)), :+,
                      s(:str, "\n"))),
                  s(:send,
                    s(:lvar, :ssl), :puts,
                    s(:lvar, :str)),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :str),
                    s(:send,
                      s(:lvar, :ssl), :gets)),
                  s(:send,
                    s(:lvar, :ssl), :close)))))),
        s(:def, :test_server_session,
          s(:args),
          s(:begin,
            s(:lvasgn, :connections,
              s(:int, 0)),
            s(:lvasgn, :saved_session,
              s(:nil)),
            s(:lvasgn, :ctx_proc,
              s(:block,
                s(:send,
                  s(:const, nil, :Proc), :new),
                s(:args,
                  s(:arg, :ctx),
                  s(:arg, :ssl)), nil)),
            s(:lvasgn, :server_proc,
              s(:block,
                s(:send,
                  s(:const, nil, :Proc), :new),
                s(:args,
                  s(:arg, :ctx),
                  s(:arg, :ssl)),
                s(:begin,
                  s(:lvasgn, :session,
                    s(:send,
                      s(:lvar, :ssl), :session)),
                  s(:lvasgn, :stats,
                    s(:send,
                      s(:lvar, :ctx), :session_cache_stats)),
                  s(:case,
                    s(:lvar, :connections),
                    s(:when,
                      s(:int, 0),
                      s(:begin,
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_num)),
                          s(:int, 1)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_hits)),
                          s(:int, 0)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_misses)),
                          s(:int, 0)),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:send,
                              s(:lvar, :ssl), :session_reused?), :!)))),
                    s(:when,
                      s(:int, 1),
                      s(:begin,
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_num)),
                          s(:int, 1)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_hits)),
                          s(:int, 1)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_misses)),
                          s(:int, 0)),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:lvar, :ssl), :session_reused?)),
                        s(:send,
                          s(:lvar, :ctx), :session_remove,
                          s(:lvar, :session)),
                        s(:lvasgn, :saved_session,
                          s(:lvar, :session)))),
                    s(:when,
                      s(:int, 2),
                      s(:begin,
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_num)),
                          s(:int, 1)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_hits)),
                          s(:int, 1)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_misses)),
                          s(:int, 1)),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:send,
                              s(:lvar, :ssl), :session_reused?), :!)),
                        s(:send,
                          s(:lvar, :ctx), :session_add,
                          s(:lvar, :saved_session)))),
                    s(:when,
                      s(:int, 3),
                      s(:begin,
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_num)),
                          s(:int, 2)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_hits)),
                          s(:int, 2)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_misses)),
                          s(:int, 1)),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:lvar, :ssl), :session_reused?)),
                        s(:send,
                          s(:lvar, :ctx), :flush_sessions,
                          s(:send,
                            s(:send,
                              s(:const, nil, :Time), :now), :+,
                            s(:int, 5000))))),
                    s(:when,
                      s(:int, 4),
                      s(:begin,
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_num)),
                          s(:int, 1)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_hits)),
                          s(:int, 2)),
                        s(:send, nil, :assert_equal,
                          s(:send,
                            s(:lvar, :stats), :[],
                            s(:sym, :cache_misses)),
                          s(:int, 2)),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:send,
                              s(:lvar, :ssl), :session_reused?), :!)),
                        s(:send,
                          s(:lvar, :ctx), :session_add,
                          s(:lvar, :saved_session)))), nil),
                  s(:op_asgn,
                    s(:lvasgn, :connections), :+,
                    s(:int, 1)),
                  s(:send, nil, :readwrite_loop,
                    s(:lvar, :ctx),
                    s(:lvar, :ssl))))),
            s(:lvasgn, :first_session,
              s(:nil)),
            s(:block,
              s(:send, nil, :start_server,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
                s(:true),
                s(:hash,
                  s(:pair,
                    s(:sym, :ctx_proc),
                    s(:lvar, :ctx_proc)),
                  s(:pair,
                    s(:sym, :server_proc),
                    s(:lvar, :server_proc)))),
              s(:args,
                s(:arg, :server),
                s(:arg, :port)),
              s(:block,
                s(:send,
                  s(:int, 10), :times),
                s(:args,
                  s(:arg, :i)),
                s(:begin,
                  s(:lvasgn, :sock,
                    s(:send,
                      s(:const, nil, :TCPSocket), :new,
                      s(:str, "127.0.0.1"),
                      s(:lvar, :port))),
                  s(:lvasgn, :ctx,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new)),
                  s(:if,
                    s(:defined?,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :OP_NO_TICKET)),
                    s(:send,
                      s(:lvar, :ctx), :options=,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :OP_NO_TICKET)), nil),
                  s(:lvasgn, :ssl,
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                      s(:lvar, :sock),
                      s(:lvar, :ctx))),
                  s(:send,
                    s(:lvar, :ssl), :sync_close=,
                    s(:true)),
                  s(:if,
                    s(:lvar, :first_session),
                    s(:send,
                      s(:lvar, :ssl), :session=,
                      s(:lvar, :first_session)), nil),
                  s(:send,
                    s(:lvar, :ssl), :connect),
                  s(:lvasgn, :session,
                    s(:send,
                      s(:lvar, :ssl), :session)),
                  s(:if,
                    s(:lvar, :first_session),
                    s(:case,
                      s(:lvar, :i),
                      s(:when,
                        s(:int, 1),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:lvar, :ssl), :session_reused?))),
                      s(:when,
                        s(:int, 2),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:send,
                              s(:lvar, :ssl), :session_reused?), :!))),
                      s(:when,
                        s(:int, 3),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:lvar, :ssl), :session_reused?))),
                      s(:when,
                        s(:int, 4),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:send,
                              s(:lvar, :ssl), :session_reused?), :!))),
                      s(:when,
                        s(:irange,
                          s(:int, 5),
                          s(:int, 10)),
                        s(:send, nil, :assert,
                          s(:send,
                            s(:lvar, :ssl), :session_reused?))), nil), nil),
                  s(:or_asgn,
                    s(:lvasgn, :first_session),
                    s(:lvar, :session)),
                  s(:lvasgn, :str,
                    s(:send,
                      s(:send,
                        s(:str, "x"), :*,
                        s(:int, 100)), :+,
                      s(:str, "\n"))),
                  s(:send,
                    s(:lvar, :ssl), :puts,
                    s(:lvar, :str)),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :str),
                    s(:send,
                      s(:lvar, :ssl), :gets)),
                  s(:send,
                    s(:lvar, :ssl), :close)))))),
        s(:def, :test_ctx_client_session_cb,
          s(:args),
          s(:begin,
            s(:lvasgn, :called,
              s(:hash)),
            s(:lvasgn, :ctx,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new)),
            s(:send,
              s(:lvar, :ctx), :session_cache_mode=,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :SSLContext), :SESSION_CACHE_CLIENT)),
            s(:send,
              s(:lvar, :ctx), :session_new_cb=,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:arg, :ary)),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :sock),
                      s(:lvasgn, :sess)),
                    s(:lvar, :ary)),
                  s(:send,
                    s(:lvar, :called), :[]=,
                    s(:sym, :new),
                    s(:array,
                      s(:lvar, :sock),
                      s(:lvar, :sess)))))),
            s(:send,
              s(:lvar, :ctx), :session_remove_cb=,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:arg, :ary)),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :ctx),
                      s(:lvasgn, :sess)),
                    s(:lvar, :ary)),
                  s(:send,
                    s(:lvar, :called), :[]=,
                    s(:sym, :remove),
                    s(:array,
                      s(:lvar, :ctx),
                      s(:lvar, :sess)))))),
            s(:block,
              s(:send, nil, :start_server,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
                s(:true)),
              s(:args,
                s(:arg, :server),
                s(:arg, :port)),
              s(:begin,
                s(:lvasgn, :sock,
                  s(:send,
                    s(:const, nil, :TCPSocket), :new,
                    s(:str, "127.0.0.1"),
                    s(:lvar, :port))),
                s(:kwbegin,
                  s(:ensure,
                    s(:begin,
                      s(:lvasgn, :ssl,
                        s(:send,
                          s(:const,
                            s(:const,
                              s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                          s(:lvar, :sock),
                          s(:lvar, :ctx))),
                      s(:send,
                        s(:lvar, :ssl), :sync_close=,
                        s(:true)),
                      s(:send,
                        s(:lvar, :ssl), :connect),
                      s(:send, nil, :assert_equal,
                        s(:int, 1),
                        s(:send,
                          s(:send,
                            s(:lvar, :ctx), :session_cache_stats), :[],
                          s(:sym, :cache_num))),
                      s(:send, nil, :assert_equal,
                        s(:int, 1),
                        s(:send,
                          s(:send,
                            s(:lvar, :ctx), :session_cache_stats), :[],
                          s(:sym, :connect_good))),
                      s(:send, nil, :assert_equal,
                        s(:array,
                          s(:lvar, :ssl),
                          s(:send,
                            s(:lvar, :ssl), :session)),
                        s(:send,
                          s(:lvar, :called), :[],
                          s(:sym, :new))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:lvar, :ctx), :session_remove,
                          s(:send,
                            s(:lvar, :ssl), :session))),
                      s(:send, nil, :assert,
                        s(:send,
                          s(:send,
                            s(:lvar, :ctx), :session_remove,
                            s(:send,
                              s(:lvar, :ssl), :session)), :!)),
                      s(:send, nil, :assert_equal,
                        s(:array,
                          s(:lvar, :ctx),
                          s(:send,
                            s(:lvar, :ssl), :session)),
                        s(:send,
                          s(:lvar, :called), :[],
                          s(:sym, :remove))),
                      s(:send,
                        s(:lvar, :ssl), :close)),
                    s(:if,
                      s(:send,
                        s(:send,
                          s(:lvar, :sock), :closed?), :!),
                      s(:send,
                        s(:lvar, :sock), :close), nil))))))),
        s(:def, :test_ctx_server_session_cb,
          s(:args),
          s(:begin,
            s(:lvasgn, :called,
              s(:hash)),
            s(:lvasgn, :ctx_proc,
              s(:block,
                s(:send,
                  s(:const, nil, :Proc), :new),
                s(:args,
                  s(:arg, :ctx),
                  s(:arg, :ssl)),
                s(:begin,
                  s(:send,
                    s(:lvar, :ctx), :session_cache_mode=,
                    s(:const,
                      s(:const,
                        s(:const,
                          s(:const, nil, :OpenSSL), :SSL), :SSLContext), :SESSION_CACHE_SERVER)),
                  s(:send,
                    s(:lvar, :ctx), :options=,
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :SSL), :OP_NO_TICKET)),
                  s(:lvasgn, :last_server_session,
                    s(:nil)),
                  s(:send,
                    s(:lvar, :ctx), :session_get_cb=,
                    s(:block,
                      s(:send, nil, :lambda),
                      s(:args,
                        s(:arg, :ary)),
                      s(:begin,
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :sess),
                            s(:lvasgn, :data)),
                          s(:lvar, :ary)),
                        s(:if,
                          s(:lvar, :last_server_session),
                          s(:begin,
                            s(:send,
                              s(:lvar, :called), :[]=,
                              s(:sym, :get2),
                              s(:array,
                                s(:lvar, :sess),
                                s(:lvar, :data))),
                            s(:lvar, :last_server_session)),
                          s(:begin,
                            s(:send,
                              s(:lvar, :called), :[]=,
                              s(:sym, :get1),
                              s(:array,
                                s(:lvar, :sess),
                                s(:lvar, :data))),
                            s(:lvasgn, :last_server_session,
                              s(:lvar, :sess)),
                            s(:nil)))))),
                  s(:send,
                    s(:lvar, :ctx), :session_new_cb=,
                    s(:block,
                      s(:send, nil, :lambda),
                      s(:args,
                        s(:arg, :ary)),
                      s(:begin,
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :sock),
                            s(:lvasgn, :sess)),
                          s(:lvar, :ary)),
                        s(:send,
                          s(:lvar, :called), :[]=,
                          s(:sym, :new),
                          s(:array,
                            s(:lvar, :sock),
                            s(:lvar, :sess))),
                        s(:send,
                          s(:lvar, :ctx), :session_remove,
                          s(:lvar, :sess))))),
                  s(:send,
                    s(:lvar, :ctx), :session_remove_cb=,
                    s(:block,
                      s(:send, nil, :lambda),
                      s(:args,
                        s(:arg, :ary)),
                      s(:begin,
                        s(:masgn,
                          s(:mlhs,
                            s(:lvasgn, :ctx),
                            s(:lvasgn, :sess)),
                          s(:lvar, :ary)),
                        s(:send,
                          s(:lvar, :called), :[]=,
                          s(:sym, :remove),
                          s(:array,
                            s(:lvar, :ctx),
                            s(:lvar, :sess))))))))),
            s(:lvasgn, :server_proc,
              s(:block,
                s(:send,
                  s(:const, nil, :Proc), :new),
                s(:args,
                  s(:arg, :c),
                  s(:arg, :ssl)),
                s(:begin,
                  s(:send,
                    s(:lvar, :ssl), :session),
                  s(:send,
                    s(:lvar, :c), :session_cache_stats),
                  s(:send, nil, :readwrite_loop,
                    s(:lvar, :c),
                    s(:lvar, :ssl))))),
            s(:block,
              s(:send, nil, :start_server,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL), :VERIFY_NONE),
                s(:true),
                s(:hash,
                  s(:pair,
                    s(:sym, :ctx_proc),
                    s(:lvar, :ctx_proc)),
                  s(:pair,
                    s(:sym, :server_proc),
                    s(:lvar, :server_proc)))),
              s(:args,
                s(:arg, :server),
                s(:arg, :port)),
              s(:begin,
                s(:lvasgn, :last_client_session,
                  s(:nil)),
                s(:block,
                  s(:send,
                    s(:int, 3), :times),
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :sock,
                      s(:send,
                        s(:const, nil, :TCPSocket), :new,
                        s(:str, "127.0.0.1"),
                        s(:lvar, :port))),
                    s(:kwbegin,
                      s(:ensure,
                        s(:begin,
                          s(:lvasgn, :ssl,
                            s(:send,
                              s(:const,
                                s(:const,
                                  s(:const, nil, :OpenSSL), :SSL), :SSLSocket), :new,
                              s(:lvar, :sock),
                              s(:send,
                                s(:const,
                                  s(:const,
                                    s(:const, nil, :OpenSSL), :SSL), :SSLContext), :new))),
                          s(:send,
                            s(:lvar, :ssl), :sync_close=,
                            s(:true)),
                          s(:if,
                            s(:lvar, :last_client_session),
                            s(:send,
                              s(:lvar, :ssl), :session=,
                              s(:lvar, :last_client_session)), nil),
                          s(:send,
                            s(:lvar, :ssl), :connect),
                          s(:lvasgn, :last_client_session,
                            s(:send,
                              s(:lvar, :ssl), :session)),
                          s(:send,
                            s(:lvar, :ssl), :close),
                          s(:block,
                            s(:send,
                              s(:const, nil, :Timeout), :timeout,
                              s(:int, 5)),
                            s(:args),
                            s(:begin,
                              s(:until,
                                s(:send,
                                  s(:lvar, :called), :key?,
                                  s(:sym, :new)),
                                s(:send,
                                  s(:const, nil, :Thread), :pass)),
                              s(:send, nil, :assert,
                                s(:send,
                                  s(:lvar, :called), :delete,
                                  s(:sym, :new))),
                              s(:until,
                                s(:send,
                                  s(:lvar, :called), :key?,
                                  s(:sym, :remove)),
                                s(:send,
                                  s(:const, nil, :Thread), :pass)),
                              s(:send, nil, :assert,
                                s(:send,
                                  s(:lvar, :called), :delete,
                                  s(:sym, :remove)))))),
                        s(:if,
                          s(:send,
                            s(:send,
                              s(:lvar, :sock), :closed?), :!),
                          s(:send,
                            s(:lvar, :sock), :close), nil))))))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :called), :[],
                s(:sym, :get1))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :called), :[],
                s(:sym, :get2))))))), nil))
