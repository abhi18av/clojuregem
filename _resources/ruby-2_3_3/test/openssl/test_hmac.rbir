s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "utils")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :TestUtils)),
    s(:class,
      s(:const,
        s(:const, nil, :OpenSSL), :TestHMAC),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@digest,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :Digest), :MD5)),
            s(:ivasgn, :@key,
              s(:str, "KEY")),
            s(:ivasgn, :@data,
              s(:str, "DATA")),
            s(:ivasgn, :@h1,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :new,
                s(:ivar, :@key),
                s(:send,
                  s(:ivar, :@digest), :new))),
            s(:ivasgn, :@h2,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :new,
                s(:ivar, :@key),
                s(:str, "MD5"))))),
        s(:def, :teardown,
          s(:args), nil),
        s(:def, :test_hmac,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@h1), :update,
              s(:ivar, :@data)),
            s(:send,
              s(:ivar, :@h2), :update,
              s(:ivar, :@data)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@h1), :digest),
              s(:send,
                s(:ivar, :@h2), :digest)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :digest,
                s(:send,
                  s(:ivar, :@digest), :new),
                s(:ivar, :@key),
                s(:ivar, :@data)),
              s(:send,
                s(:ivar, :@h1), :digest),
              s(:str, "digest")),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :hexdigest,
                s(:send,
                  s(:ivar, :@digest), :new),
                s(:ivar, :@key),
                s(:ivar, :@data)),
              s(:send,
                s(:ivar, :@h1), :hexdigest),
              s(:str, "hexdigest")),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :digest,
                s(:str, "MD5"),
                s(:ivar, :@key),
                s(:ivar, :@data)),
              s(:send,
                s(:ivar, :@h2), :digest),
              s(:str, "digest")),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :hexdigest,
                s(:str, "MD5"),
                s(:ivar, :@key),
                s(:ivar, :@data)),
              s(:send,
                s(:ivar, :@h2), :hexdigest),
              s(:str, "hexdigest")))),
        s(:def, :test_dup,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@h1), :update,
              s(:ivar, :@data)),
            s(:lvasgn, :h,
              s(:send,
                s(:ivar, :@h1), :dup)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@h1), :digest),
              s(:send,
                s(:lvar, :h), :digest),
              s(:str, "dup digest")))),
        s(:def, :test_binary_update,
          s(:args),
          s(:begin,
            s(:lvasgn, :data,
              s(:str, "Lücíllé: Bût... yøü sáîd hé wås âlrîght.\nDr. Físhmån: Yés. Hé's løst hîs léft hånd, sø hé's gøîng tø bé åll rîght")),
            s(:lvasgn, :hmac,
              s(:send,
                s(:const,
                  s(:const, nil, :OpenSSL), :HMAC), :new,
                s(:str, "qShkcwN92rsM9nHfdnP4ugcVU2iI7iM/trovs01ZWok"),
                s(:str, "SHA256"))),
            s(:lvasgn, :result,
              s(:send,
                s(:send,
                  s(:lvar, :hmac), :update,
                  s(:lvar, :data)), :hexdigest)),
            s(:send, nil, :assert_equal,
              s(:str, "a13984b929a07912e4e21c5720876a8e150d6f67f854437206e7f86547248396"),
              s(:lvar, :result)))))), nil))
