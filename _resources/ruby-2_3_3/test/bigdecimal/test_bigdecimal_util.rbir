s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "testbase")),
  s(:send, nil, :require,
    s(:str, "bigdecimal/util")),
  s(:class,
    s(:const, nil, :TestBigDecimalUtil),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_BigDecimal_to_d,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:send, nil, :BigDecimal,
              s(:int, 1))),
          s(:send, nil, :assert_same,
            s(:lvar, :x),
            s(:send,
              s(:lvar, :x), :to_d)))),
      s(:def, :test_Integer_to_d,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send, nil, :BigDecimal,
              s(:int, 1)),
            s(:send,
              s(:int, 1), :to_d)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :BigDecimal,
              s(:send,
                s(:int, 2), :<<,
                s(:int, 100))),
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 2), :<<,
                  s(:int, 100))), :to_d)))),
      s(:def, :test_Float_to_d_without_precision,
        s(:args),
        s(:begin,
          s(:lvasgn, :delta,
            s(:send,
              s(:float, 1.0), :/,
              s(:send,
                s(:int, 10), :**,
                s(:begin,
                  s(:const,
                    s(:const, nil, :Float), :DIG))))),
          s(:send, nil, :assert_in_delta,
            s(:send, nil, :BigDecimal,
              s(:float, 0.5),
              s(:const,
                s(:const, nil, :Float), :DIG)),
            s(:send,
              s(:float, 0.5), :to_d),
            s(:lvar, :delta)),
          s(:send, nil, :assert_in_delta,
            s(:send, nil, :BigDecimal,
              s(:send,
                s(:float, 355.0), :/,
                s(:float, 113.0)),
              s(:const,
                s(:const, nil, :Float), :DIG)),
            s(:send,
              s(:begin,
                s(:send,
                  s(:float, 355.0), :/,
                  s(:float, 113.0))), :to_d),
            s(:lvar, :delta)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:float, 9.05), :to_d), :to_s,
              s(:str, "F")),
            s(:str, "9.05")),
          s(:lvasgn, :bug9214,
            s(:str, "[ruby-core:58858]")),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:begin,
                  s(:float, -0.0)), :to_d), :sign),
            s(:int, -1),
            s(:lvar, :bug9214)))),
      s(:def, :test_Float_to_d_with_precision,
        s(:args),
        s(:begin,
          s(:lvasgn, :digits,
            s(:int, 5)),
          s(:lvasgn, :delta,
            s(:send,
              s(:float, 1.0), :/,
              s(:send,
                s(:int, 10), :**,
                s(:begin,
                  s(:lvar, :digits))))),
          s(:send, nil, :assert_in_delta,
            s(:send, nil, :BigDecimal,
              s(:float, 0.5),
              s(:int, 5)),
            s(:send,
              s(:float, 0.5), :to_d,
              s(:lvar, :digits)),
            s(:lvar, :delta)),
          s(:send, nil, :assert_in_delta,
            s(:send, nil, :BigDecimal,
              s(:send,
                s(:float, 355.0), :/,
                s(:float, 113.0)),
              s(:int, 5)),
            s(:send,
              s(:begin,
                s(:send,
                  s(:float, 355.0), :/,
                  s(:float, 113.0))), :to_d,
              s(:lvar, :digits)),
            s(:lvar, :delta)),
          s(:lvasgn, :bug9214,
            s(:str, "[ruby-core:58858]")),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:begin,
                  s(:float, -0.0)), :to_d,
                s(:lvar, :digits)), :sign),
            s(:int, -1),
            s(:lvar, :bug9214)))),
      s(:def, :test_Rational_to_d,
        s(:args),
        s(:begin,
          s(:lvasgn, :digits,
            s(:int, 100)),
          s(:lvasgn, :delta,
            s(:send,
              s(:float, 1.0), :/,
              s(:send,
                s(:int, 10), :**,
                s(:begin,
                  s(:lvar, :digits))))),
          s(:send, nil, :assert_in_delta,
            s(:send, nil, :BigDecimal,
              s(:send,
                s(:int, 1), :quo,
                s(:int, 2)),
              s(:lvar, :digits)),
            s(:send,
              s(:send,
                s(:int, 1), :quo,
                s(:int, 2)), :to_d,
              s(:lvar, :digits)),
            s(:lvar, :delta)),
          s(:send, nil, :assert_in_delta,
            s(:send, nil, :BigDecimal,
              s(:send,
                s(:int, 355), :quo,
                s(:int, 113)),
              s(:lvar, :digits)),
            s(:send,
              s(:send,
                s(:int, 355), :quo,
                s(:int, 113)), :to_d,
              s(:lvar, :digits)),
            s(:lvar, :delta)))),
      s(:def, :test_Rational_to_d_with_zero_precision,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raise,
            s(:const, nil, :ArgumentError)),
          s(:args),
          s(:send,
            s(:send,
              s(:int, 355), :quo,
              s(:int, 113)), :to_d,
            s(:int, 0)))),
      s(:def, :test_Rational_to_d_with_negative_precision,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raise,
            s(:const, nil, :ArgumentError)),
          s(:args),
          s(:send,
            s(:send,
              s(:int, 355), :quo,
              s(:int, 113)), :to_d,
            s(:int, -42)))))))
