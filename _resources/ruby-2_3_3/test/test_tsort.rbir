s(:begin,
  s(:send, nil, :require,
    s(:str, "tsort")),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TSortHash),
    s(:const, nil, :Hash),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TSort)),
      s(:alias,
        s(:sym, :tsort_each_node),
        s(:sym, :each_key)),
      s(:def, :tsort_each_child,
        s(:args,
          s(:arg, :node),
          s(:blockarg, :block)),
        s(:send,
          s(:send, nil, :fetch,
            s(:lvar, :node)), :each,
          s(:block_pass,
            s(:lvar, :block)))))),
  s(:class,
    s(:const, nil, :TSortArray),
    s(:const, nil, :Array),
    s(:begin,
      s(:send, nil, :include,
        s(:const, nil, :TSort)),
      s(:alias,
        s(:sym, :tsort_each_node),
        s(:sym, :each_index)),
      s(:def, :tsort_each_child,
        s(:args,
          s(:arg, :node),
          s(:blockarg, :block)),
        s(:send,
          s(:send, nil, :fetch,
            s(:lvar, :node)), :each,
          s(:block_pass,
            s(:lvar, :block)))))),
  s(:class,
    s(:const, nil, :TSortTest),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_dag,
        s(:args),
        s(:begin,
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :TSortHash), :[],
              s(:hash,
                s(:pair,
                  s(:int, 1),
                  s(:array,
                    s(:int, 2),
                    s(:int, 3))),
                s(:pair,
                  s(:int, 2),
                  s(:array,
                    s(:int, 3))),
                s(:pair,
                  s(:int, 3),
                  s(:array))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 3),
              s(:int, 2),
              s(:int, 1)),
            s(:send,
              s(:lvar, :h), :tsort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 3)),
              s(:array,
                s(:int, 2)),
              s(:array,
                s(:int, 1))),
            s(:send,
              s(:lvar, :h), :strongly_connected_components)))),
      s(:def, :test_cycle,
        s(:args),
        s(:begin,
          s(:lvasgn, :h,
            s(:send,
              s(:const, nil, :TSortHash), :[],
              s(:hash,
                s(:pair,
                  s(:int, 1),
                  s(:array,
                    s(:int, 2))),
                s(:pair,
                  s(:int, 2),
                  s(:array,
                    s(:int, 3),
                    s(:int, 4))),
                s(:pair,
                  s(:int, 3),
                  s(:array,
                    s(:int, 2))),
                s(:pair,
                  s(:int, 4),
                  s(:array))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 4)),
              s(:array,
                s(:int, 2),
                s(:int, 3)),
              s(:array,
                s(:int, 1))),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :h), :strongly_connected_components), :map),
              s(:args,
                s(:arg, :nodes)),
              s(:send,
                s(:lvar, :nodes), :sort))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :TSort), :Cyclic)),
            s(:args),
            s(:send,
              s(:lvar, :h), :tsort)))),
      s(:def, :test_array,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:send,
              s(:const, nil, :TSortArray), :[],
              s(:array,
                s(:int, 1)),
              s(:array,
                s(:int, 0)),
              s(:array,
                s(:int, 0)),
              s(:array,
                s(:int, 2)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 0),
                s(:int, 1)),
              s(:array,
                s(:int, 2)),
              s(:array,
                s(:int, 3))),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :a), :strongly_connected_components), :map),
              s(:args,
                s(:arg, :nodes)),
              s(:send,
                s(:lvar, :nodes), :sort))),
          s(:lvasgn, :a,
            s(:send,
              s(:const, nil, :TSortArray), :[],
              s(:array),
              s(:array,
                s(:int, 0)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 0)),
              s(:array,
                s(:int, 1))),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :a), :strongly_connected_components), :map),
              s(:args,
                s(:arg, :nodes)),
              s(:send,
                s(:lvar, :nodes), :sort))))),
      s(:def, :test_s_tsort,
        s(:args),
        s(:begin,
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2),
                  s(:int, 3))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2),
                  s(:int, 4))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:lvasgn, :each_node,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:blockarg, :b)),
              s(:send,
                s(:lvar, :g), :each_key,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :each_child,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :n),
                s(:blockarg, :b)),
              s(:send,
                s(:send,
                  s(:lvar, :g), :[],
                  s(:lvar, :n)), :each,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 4),
              s(:int, 2),
              s(:int, 3),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :TSort), :tsort,
              s(:lvar, :each_node),
              s(:lvar, :each_child))),
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 3),
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :TSort), :Cyclic)),
            s(:args),
            s(:send,
              s(:const, nil, :TSort), :tsort,
              s(:lvar, :each_node),
              s(:lvar, :each_child))))),
      s(:def, :test_s_tsort_each,
        s(:args),
        s(:begin,
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2),
                  s(:int, 3))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2),
                  s(:int, 4))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:lvasgn, :each_node,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:blockarg, :b)),
              s(:send,
                s(:lvar, :g), :each_key,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :each_child,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :n),
                s(:blockarg, :b)),
              s(:send,
                s(:send,
                  s(:lvar, :g), :[],
                  s(:lvar, :n)), :each,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :r,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :TSort), :tsort_each,
              s(:lvar, :each_node),
              s(:lvar, :each_child)),
            s(:args,
              s(:arg, :n)),
            s(:send,
              s(:lvar, :r), :<<,
              s(:lvar, :n))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:int, 4),
              s(:int, 2),
              s(:int, 3),
              s(:int, 1)),
            s(:lvar, :r)),
          s(:lvasgn, :r,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TSort), :tsort_each,
                  s(:lvar, :each_node),
                  s(:lvar, :each_child)), :map),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:lvar, :n), :to_s))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "4"),
              s(:str, "2"),
              s(:str, "3"),
              s(:str, "1")),
            s(:lvar, :r)))),
      s(:def, :test_s_strongly_connected_components,
        s(:args),
        s(:begin,
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2),
                  s(:int, 3))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2),
                  s(:int, 4))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:lvasgn, :each_node,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:blockarg, :b)),
              s(:send,
                s(:lvar, :g), :each_key,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :each_child,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :n),
                s(:blockarg, :b)),
              s(:send,
                s(:send,
                  s(:lvar, :g), :[],
                  s(:lvar, :n)), :each,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 4)),
              s(:array,
                s(:int, 2)),
              s(:array,
                s(:int, 3)),
              s(:array,
                s(:int, 1))),
            s(:send,
              s(:const, nil, :TSort), :strongly_connected_components,
              s(:lvar, :each_node),
              s(:lvar, :each_child))),
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 3),
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 4)),
              s(:array,
                s(:int, 2),
                s(:int, 3)),
              s(:array,
                s(:int, 1))),
            s(:send,
              s(:const, nil, :TSort), :strongly_connected_components,
              s(:lvar, :each_node),
              s(:lvar, :each_child))))),
      s(:def, :test_s_each_strongly_connected_component,
        s(:args),
        s(:begin,
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2),
                  s(:int, 3))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2),
                  s(:int, 4))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:lvasgn, :each_node,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:blockarg, :b)),
              s(:send,
                s(:lvar, :g), :each_key,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :each_child,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :n),
                s(:blockarg, :b)),
              s(:send,
                s(:send,
                  s(:lvar, :g), :[],
                  s(:lvar, :n)), :each,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :r,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :TSort), :each_strongly_connected_component,
              s(:lvar, :each_node),
              s(:lvar, :each_child)),
            s(:args,
              s(:arg, :scc)),
            s(:send,
              s(:lvar, :r), :<<,
              s(:lvar, :scc))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 4)),
              s(:array,
                s(:int, 2)),
              s(:array,
                s(:int, 3)),
              s(:array,
                s(:int, 1))),
            s(:lvar, :r)),
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 3),
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:lvasgn, :r,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :TSort), :each_strongly_connected_component,
              s(:lvar, :each_node),
              s(:lvar, :each_child)),
            s(:args,
              s(:arg, :scc)),
            s(:send,
              s(:lvar, :r), :<<,
              s(:lvar, :scc))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 4)),
              s(:array,
                s(:int, 2),
                s(:int, 3)),
              s(:array,
                s(:int, 1))),
            s(:lvar, :r)),
          s(:lvasgn, :r,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TSort), :each_strongly_connected_component,
                  s(:lvar, :each_node),
                  s(:lvar, :each_child)), :map),
              s(:args,
                s(:arg, :scc)),
              s(:send,
                s(:lvar, :scc), :map,
                s(:block_pass,
                  s(:sym, :to_s))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "4")),
              s(:array,
                s(:str, "2"),
                s(:str, "3")),
              s(:array,
                s(:str, "1"))),
            s(:lvar, :r)))),
      s(:def, :test_s_each_strongly_connected_component_from,
        s(:args),
        s(:begin,
          s(:lvasgn, :g,
            s(:hash,
              s(:pair,
                s(:int, 1),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 2),
                s(:array,
                  s(:int, 3),
                  s(:int, 4))),
              s(:pair,
                s(:int, 3),
                s(:array,
                  s(:int, 2))),
              s(:pair,
                s(:int, 4),
                s(:array)))),
          s(:lvasgn, :each_child,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :n),
                s(:blockarg, :b)),
              s(:send,
                s(:send,
                  s(:lvar, :g), :[],
                  s(:lvar, :n)), :each,
                s(:block_pass,
                  s(:lvar, :b))))),
          s(:lvasgn, :r,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :TSort), :each_strongly_connected_component_from,
              s(:int, 1),
              s(:lvar, :each_child)),
            s(:args,
              s(:arg, :scc)),
            s(:send,
              s(:lvar, :r), :<<,
              s(:lvar, :scc))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:int, 4)),
              s(:array,
                s(:int, 2),
                s(:int, 3)),
              s(:array,
                s(:int, 1))),
            s(:lvar, :r)),
          s(:lvasgn, :r,
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :TSort), :each_strongly_connected_component_from,
                  s(:int, 1),
                  s(:lvar, :each_child)), :map),
              s(:args,
                s(:arg, :scc)),
              s(:send,
                s(:lvar, :scc), :map,
                s(:block_pass,
                  s(:sym, :to_s))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "4")),
              s(:array,
                s(:str, "2"),
                s(:str, "3")),
              s(:array,
                s(:str, "1"))),
            s(:lvar, :r)))))))
