s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "base")),
  s(:class,
    s(:const,
      s(:const, nil, :TestCSV), :Encodings),
    s(:const, nil, :TestCSV),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :DifferentOFS)),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send, nil, :require,
            s(:str, "tempfile")),
          s(:ivasgn, :@temp_csv_file,
            s(:send,
              s(:const, nil, :Tempfile), :new,
              s(:array,
                s(:str, "test_csv."),
                s(:str, ".csv")))),
          s(:ivasgn, :@temp_csv_path,
            s(:send,
              s(:ivar, :@temp_csv_file), :path)),
          s(:send,
            s(:ivar, :@temp_csv_file), :close))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@temp_csv_file), :close!),
          s(:zsuper))),
      s(:def, :test_parses_utf8_encoding,
        s(:args),
        s(:send, nil, :assert_parses,
          s(:array,
            s(:array,
              s(:str, "one"),
              s(:str, "two"),
              s(:str, "…")),
            s(:array,
              s(:str, "1"),
              s(:str, "…"),
              s(:str, "3")),
            s(:array,
              s(:str, "…"),
              s(:str, "5"),
              s(:str, "6"))),
          s(:str, "UTF-8"))),
      s(:def, :test_parses_latin1_encoding,
        s(:args),
        s(:send, nil, :assert_parses,
          s(:array,
            s(:array,
              s(:str, "one"),
              s(:str, "two"),
              s(:str, "Résumé")),
            s(:array,
              s(:str, "1"),
              s(:str, "Résumé"),
              s(:str, "3")),
            s(:array,
              s(:str, "Résumé"),
              s(:str, "5"),
              s(:str, "6"))),
          s(:str, "ISO-8859-1"))),
      s(:def, :test_parses_utf16be_encoding,
        s(:args),
        s(:send, nil, :assert_parses,
          s(:array,
            s(:array,
              s(:str, "one"),
              s(:str, "two"),
              s(:str, "…")),
            s(:array,
              s(:str, "1"),
              s(:str, "…"),
              s(:str, "3")),
            s(:array,
              s(:str, "…"),
              s(:str, "5"),
              s(:str, "6"))),
          s(:str, "UTF-16BE"))),
      s(:def, :test_parses_shift_jis_encoding,
        s(:args),
        s(:send, nil, :assert_parses,
          s(:array,
            s(:array,
              s(:str, "一"),
              s(:str, "二"),
              s(:str, "三")),
            s(:array,
              s(:str, "四"),
              s(:str, "五"),
              s(:str, "六")),
            s(:array,
              s(:str, "七"),
              s(:str, "八"),
              s(:str, "九"))),
          s(:str, "Shift_JIS"))),
      s(:def, :test_reading_with_most_encodings,
        s(:args),
        s(:block,
          s(:send, nil, :each_encoding),
          s(:args,
            s(:arg, :encoding)),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :assert_parses,
                s(:array,
                  s(:array,
                    s(:str, "abc"),
                    s(:str, "def")),
                  s(:array,
                    s(:str, "ghi"),
                    s(:str, "jkl"))),
                s(:lvar, :encoding)),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Encoding), :ConverterNotFoundError)), nil,
                s(:send, nil, :fail,
                  s(:dstr,
                    s(:str, "Failed to support "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :encoding), :name)),
                    s(:str, ".")))), nil)))),
      s(:def, :test_regular_expression_escaping,
        s(:args),
        s(:block,
          s(:send, nil, :each_encoding),
          s(:args,
            s(:arg, :encoding)),
          s(:kwbegin,
            s(:rescue,
              s(:send, nil, :assert_parses,
                s(:array,
                  s(:array,
                    s(:str, "abc"),
                    s(:str, "def")),
                  s(:array,
                    s(:str, "ghi"),
                    s(:str, "jkl"))),
                s(:lvar, :encoding),
                s(:hash,
                  s(:pair,
                    s(:sym, :col_sep),
                    s(:str, "|")))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Encoding), :ConverterNotFoundError)), nil,
                s(:send, nil, :fail,
                  s(:dstr,
                    s(:str, "Failed to properly escape "),
                    s(:begin,
                      s(:send,
                        s(:lvar, :encoding), :name)),
                    s(:str, ".")))), nil)))),
      s(:def, :test_read_with_default_encoding,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:str, "abc")),
          s(:lvasgn, :default_external,
            s(:send,
              s(:const, nil, :Encoding), :default_external)),
          s(:block,
            s(:send, nil, :each_encoding),
            s(:args,
              s(:arg, :encoding)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:const, nil, :File), :open,
                  s(:ivar, :@temp_csv_path),
                  s(:str, "wb"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :encoding),
                      s(:lvar, :encoding)))),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:lvar, :f), :<<,
                  s(:lvar, :data))),
              s(:kwbegin,
                s(:ensure,
                  s(:begin,
                    s(:block,
                      s(:send, nil, :no_warnings),
                      s(:args),
                      s(:send,
                        s(:const, nil, :Encoding), :default_external=,
                        s(:lvar, :encoding))),
                    s(:lvasgn, :result,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :CSV), :read,
                            s(:ivar, :@temp_csv_path)), :[],
                          s(:int, 0)), :[],
                        s(:int, 0)))),
                  s(:block,
                    s(:send, nil, :no_warnings),
                    s(:args),
                    s(:send,
                      s(:const, nil, :Encoding), :default_external=,
                      s(:lvar, :default_external))))),
              s(:send, nil, :assert_equal,
                s(:lvar, :encoding),
                s(:send,
                  s(:lvar, :result), :encoding)))))),
      s(:def, :test_auto_line_ending_detection,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:send,
                  s(:str, "a"), :*,
                  s(:int, 509)))),
            s(:hash,
              s(:pair,
                s(:sym, :row_sep),
                s(:str, "\r\n")))),
          s(:args,
            s(:arg, :data)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "\r\n"), :encode,
              s(:send,
                s(:lvar, :data), :encoding)),
            s(:send,
              s(:send,
                s(:const, nil, :CSV), :new,
                s(:lvar, :data)), :row_sep)))),
      s(:def, :test_csv_chars_are_transcoded,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "abc"),
                s(:str, "def")))),
          s(:args,
            s(:arg, :data)),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "col_sep"),
                s(:str, "row_sep"),
                s(:str, "quote_char")), :each),
            s(:args,
              s(:arg, :csv_char)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:str, "|"), :encode,
                s(:send,
                  s(:lvar, :data), :encoding)),
              s(:send,
                s(:send,
                  s(:const, nil, :CSV), :new,
                  s(:lvar, :data),
                  s(:hash,
                    s(:pair,
                      s(:send,
                        s(:lvar, :csv_char), :to_sym),
                      s(:str, "|")))), :send,
                s(:lvar, :csv_char)))))),
      s(:def, :test_parser_works_with_encoded_headers,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "one"),
                s(:str, "two"),
                s(:str, "three")),
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3")))),
          s(:args,
            s(:arg, :data)),
          s(:begin,
            s(:lvasgn, :parsed,
              s(:send,
                s(:const, nil, :CSV), :parse,
                s(:lvar, :data),
                s(:hash,
                  s(:pair,
                    s(:sym, :headers),
                    s(:true))))),
            s(:block,
              s(:send, nil, :assert_all?,
                s(:send,
                  s(:lvar, :parsed), :headers),
                s(:str, "Wrong data encoding.")),
              s(:args,
                s(:arg, :h)),
              s(:send,
                s(:send,
                  s(:lvar, :h), :encoding), :==,
                s(:send,
                  s(:lvar, :data), :encoding))),
            s(:block,
              s(:send,
                s(:lvar, :parsed), :each),
              s(:args,
                s(:arg, :row)),
              s(:block,
                s(:send, nil, :assert_all?,
                  s(:send,
                    s(:lvar, :row), :fields),
                  s(:str, "Wrong data encoding.")),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :encoding), :==,
                  s(:send,
                    s(:lvar, :data), :encoding))))))),
      s(:def, :test_built_in_converters_transcode_to_utf_8_then_convert,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "one"),
                s(:str, "two"),
                s(:str, "three")),
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3")))),
          s(:args,
            s(:arg, :data)),
          s(:begin,
            s(:lvasgn, :parsed,
              s(:send,
                s(:const, nil, :CSV), :parse,
                s(:lvar, :data),
                s(:hash,
                  s(:pair,
                    s(:sym, :converters),
                    s(:sym, :integer))))),
            s(:block,
              s(:send, nil, :assert_all?,
                s(:send,
                  s(:lvar, :parsed), :[],
                  s(:int, 0)),
                s(:str, "Wrong data encoding.")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:send,
                  s(:lvar, :f), :encoding), :==,
                s(:send,
                  s(:lvar, :data), :encoding))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)),
              s(:send,
                s(:lvar, :parsed), :[],
                s(:int, 1)))))),
      s(:def, :test_built_in_header_converters_transcode_to_utf_8_then_convert,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "one"),
                s(:str, "two"),
                s(:str, "three")),
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3")))),
          s(:args,
            s(:arg, :data)),
          s(:begin,
            s(:lvasgn, :parsed,
              s(:send,
                s(:const, nil, :CSV), :parse,
                s(:lvar, :data),
                s(:hash,
                  s(:pair,
                    s(:sym, :headers),
                    s(:true)),
                  s(:pair,
                    s(:sym, :header_converters),
                    s(:sym, :downcase))))),
            s(:block,
              s(:send, nil, :assert_all?,
                s(:send,
                  s(:lvar, :parsed), :headers),
                s(:str, "Wrong data encoding.")),
              s(:args,
                s(:arg, :h)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :h), :encoding), :name), :==,
                s(:str, "UTF-8"))),
            s(:block,
              s(:send, nil, :assert_all?,
                s(:send,
                  s(:send,
                    s(:lvar, :parsed), :[],
                    s(:int, 0)), :fields),
                s(:str, "Wrong data encoding.")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:send,
                  s(:lvar, :f), :encoding), :==,
                s(:send,
                  s(:lvar, :data), :encoding)))))),
      s(:def, :test_open_allows_you_to_set_encodings,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "abc"),
                s(:str, "def")))),
          s(:args,
            s(:arg, :data)),
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "wb:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :<<,
                s(:lvar, :data))),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "rb:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :csv)),
              s(:block,
                s(:send,
                  s(:lvar, :csv), :each),
                s(:args,
                  s(:arg, :row)),
                s(:block,
                  s(:send, nil, :assert_all?,
                    s(:lvar, :row),
                    s(:str, "Wrong data encoding.")),
                  s(:args,
                    s(:arg, :f)),
                  s(:send,
                    s(:send,
                      s(:lvar, :f), :encoding), :==,
                    s(:send,
                      s(:lvar, :data), :encoding))))),
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "wb:UTF-32BE:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :<<,
                s(:lvar, :data))),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "rb:UTF-32BE:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :csv)),
              s(:block,
                s(:send,
                  s(:lvar, :csv), :each),
                s(:args,
                  s(:arg, :row)),
                s(:block,
                  s(:send, nil, :assert_all?,
                    s(:lvar, :row),
                    s(:str, "Wrong data encoding.")),
                  s(:args,
                    s(:arg, :f)),
                  s(:send,
                    s(:send,
                      s(:lvar, :f), :encoding), :==,
                    s(:send,
                      s(:lvar, :data), :encoding)))))))),
      s(:def, :test_foreach_allows_you_to_set_encodings,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "abc"),
                s(:str, "def")))),
          s(:args,
            s(:arg, :data)),
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:ivar, :@temp_csv_path),
                s(:str, "wb"),
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:send,
                      s(:lvar, :data), :encoding)))),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :<<,
                s(:lvar, :data))),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :foreach,
                s(:ivar, :@temp_csv_path),
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:send,
                      s(:lvar, :data), :encoding)))),
              s(:args,
                s(:arg, :row)),
              s(:block,
                s(:send,
                  s(:lvar, :row), :each),
                s(:args,
                  s(:arg, :f)),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:lvar, :f), :encoding),
                  s(:send,
                    s(:lvar, :data), :encoding)))),
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "wb:UTF-32BE:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :<<,
                s(:lvar, :data))),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :foreach,
                s(:ivar, :@temp_csv_path),
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:dstr,
                      s(:str, "UTF-32BE:"),
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :data), :encoding), :name)))))),
              s(:args,
                s(:arg, :row)),
              s(:block,
                s(:send, nil, :assert_all?,
                  s(:lvar, :row),
                  s(:str, "Wrong data encoding.")),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :encoding), :==,
                  s(:send,
                    s(:lvar, :data), :encoding))))))),
      s(:def, :test_read_allows_you_to_set_encodings,
        s(:args),
        s(:block,
          s(:send, nil, :encode_for_tests,
            s(:array,
              s(:array,
                s(:str, "abc"),
                s(:str, "def")))),
          s(:args,
            s(:arg, :data)),
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "wb:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :<<,
                s(:lvar, :data))),
            s(:lvasgn, :rows,
              s(:send,
                s(:const, nil, :CSV), :read,
                s(:ivar, :@temp_csv_path),
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name))))),
            s(:block,
              s(:send, nil, :assert_all?,
                s(:send,
                  s(:lvar, :rows), :flatten),
                s(:str, "Wrong data encoding.")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:send,
                  s(:lvar, :f), :encoding), :==,
                s(:send,
                  s(:lvar, :data), :encoding))),
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "wb:UTF-32BE:"),
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :data), :encoding), :name)))),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:lvar, :f), :<<,
                s(:lvar, :data))),
            s(:lvasgn, :rows,
              s(:send,
                s(:const, nil, :CSV), :read,
                s(:ivar, :@temp_csv_path),
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:dstr,
                      s(:str, "UTF-32BE:"),
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :data), :encoding), :name))))))),
            s(:block,
              s(:send, nil, :assert_all?,
                s(:send,
                  s(:lvar, :rows), :flatten),
                s(:str, "Wrong data encoding.")),
              s(:args,
                s(:arg, :f)),
              s(:send,
                s(:send,
                  s(:lvar, :f), :encoding), :==,
                s(:send,
                  s(:lvar, :data), :encoding)))))),
      s(:def, :test_can_write_csv_in_any_encoding,
        s(:args),
        s(:block,
          s(:send, nil, :each_encoding),
          s(:args,
            s(:arg, :encoding)),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:lvasgn, :csv,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:array,
                          s(:str, "abc"),
                          s(:str, "d|ef")), :map),
                      s(:args,
                        s(:arg, :f)),
                      s(:send,
                        s(:lvar, :f), :encode,
                        s(:lvar, :encoding))), :to_csv,
                    s(:hash,
                      s(:pair,
                        s(:sym, :col_sep),
                        s(:str, "|")),
                      s(:pair,
                        s(:sym, :encoding),
                        s(:send,
                          s(:lvar, :encoding), :name))))),
                s(:resbody,
                  s(:array,
                    s(:const,
                      s(:const, nil, :Encoding), :ConverterNotFoundError)), nil,
                  s(:next)), nil)),
            s(:send, nil, :assert_equal,
              s(:lvar, :encoding),
              s(:send,
                s(:lvar, :csv), :encoding)),
            s(:lvasgn, :csv,
              s(:send,
                s(:block,
                  s(:send,
                    s(:array,
                      s(:str, "abc"),
                      s(:str, "d|ef")), :map),
                  s(:args,
                    s(:arg, :f)),
                  s(:send,
                    s(:lvar, :f), :encode,
                    s(:lvar, :encoding))), :to_csv,
                s(:hash,
                  s(:pair,
                    s(:sym, :col_sep),
                    s(:str, "|"))))),
            s(:send, nil, :assert_equal,
              s(:lvar, :encoding),
              s(:send,
                s(:lvar, :csv), :encoding)),
            s(:lvasgn, :data,
              s(:send, nil, :encode_ary,
                s(:array,
                  s(:array,
                    s(:str, "abc"),
                    s(:str, "d,ef")),
                  s(:array,
                    s(:str, "123"),
                    s(:str, "456"))),
                s(:lvar, :encoding))),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@temp_csv_path),
                s(:dstr,
                  s(:str, "wb:"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :encoding), :name)))),
              s(:args,
                s(:arg, :f)),
              s(:block,
                s(:send,
                  s(:lvar, :data), :each),
                s(:args,
                  s(:arg, :row)),
                s(:send,
                  s(:lvar, :f), :<<,
                  s(:lvar, :row)))),
            s(:send, nil, :assert_equal,
              s(:lvar, :data),
              s(:send,
                s(:const, nil, :CSV), :read,
                s(:ivar, :@temp_csv_path),
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:send,
                      s(:lvar, :encoding), :name)))))))),
      s(:def, :test_encoding_is_upgraded_during_writing_as_needed,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:array,
              s(:send,
                s(:str, "foo"), :force_encoding,
                s(:str, "US-ASCII")),
              s(:str, "あ"))),
          s(:send, nil, :assert_equal,
            s(:str, "US-ASCII"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :first), :encoding), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "UTF-8"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :last), :encoding), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "UTF-8"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :join,
                  s(:str, "")), :encoding), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "UTF-8"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :to_csv), :encoding), :name)))),
      s(:def, :test_encoding_is_upgraded_for_ascii_content_during_writing_as_needed,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:array,
              s(:send,
                s(:str, "foo"), :force_encoding,
                s(:str, "ISO-8859-1")),
              s(:str, "あ"))),
          s(:send, nil, :assert_equal,
            s(:str, "ISO-8859-1"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :first), :encoding), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "UTF-8"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :last), :encoding), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "UTF-8"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :join,
                  s(:str, "")), :encoding), :name)),
          s(:send, nil, :assert_equal,
            s(:str, "UTF-8"),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :data), :to_csv), :encoding), :name)))),
      s(:def, :test_explicit_encoding,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug9766,
            s(:str, "[ruby-core:62113] [Bug #9766]")),
          s(:lvasgn, :s,
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :generate,
                s(:hash,
                  s(:pair,
                    s(:sym, :encoding),
                    s(:str, "Windows-31J")))),
              s(:args,
                s(:arg, :csv)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:array,
                  s(:send,
                    s(:str, "foo"), :force_encoding,
                    s(:str, "ISO-8859-1")),
                  s(:str, "あ"))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:str, "foo,あ\n"), :encode,
                s(:const,
                  s(:const, nil, :Encoding), :Windows_31J)),
              s(:const,
                s(:const, nil, :Encoding), :Windows_31J)),
            s(:array,
              s(:lvar, :s),
              s(:send,
                s(:lvar, :s), :encoding)),
            s(:lvar, :bug9766)))),
      s(:send, nil, :private),
      s(:def, :assert_parses,
        s(:args,
          s(:arg, :fields),
          s(:arg, :encoding),
          s(:optarg, :options,
            s(:hash))),
        s(:begin,
          s(:if,
            s(:send,
              s(:lvar, :encoding), :is_a?,
              s(:const, nil, :Encoding)), nil,
            s(:lvasgn, :encoding,
              s(:send,
                s(:const, nil, :Encoding), :find,
                s(:lvar, :encoding)))),
          s(:lvasgn, :orig_fields,
            s(:lvar, :fields)),
          s(:lvasgn, :fields,
            s(:send, nil, :encode_ary,
              s(:lvar, :fields),
              s(:lvar, :encoding))),
          s(:lvasgn, :data,
            s(:send, nil, :ary_to_data,
              s(:lvar, :fields),
              s(:lvar, :options))),
          s(:lvasgn, :parsed,
            s(:send,
              s(:const, nil, :CSV), :parse,
              s(:lvar, :data),
              s(:lvar, :options))),
          s(:send, nil, :assert_equal,
            s(:lvar, :fields),
            s(:lvar, :parsed)),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :parsed), :flatten), :each_with_index),
            s(:args,
              s(:arg, :field),
              s(:arg, :i)),
            s(:send, nil, :assert_equal,
              s(:lvar, :encoding),
              s(:send,
                s(:lvar, :field), :encoding),
              s(:dstr,
                s(:str, "Field["),
                s(:begin,
                  s(:send,
                    s(:lvar, :i), :+,
                    s(:int, 1))),
                s(:str, "] was transcoded.")))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:ivar, :@temp_csv_path),
              s(:str, "wb")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :print,
              s(:lvar, :data))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@temp_csv_path),
              s(:dstr,
                s(:str, "rb:"),
                s(:begin,
                  s(:lvar, :encoding))),
              s(:lvar, :options)),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each_with_index),
              s(:args,
                s(:arg, :row),
                s(:arg, :i)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :fields), :[],
                  s(:lvar, :i)),
                s(:lvar, :row)))),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:send,
                  s(:lvar, :encoding), :==,
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_8)), nil,
                s(:block,
                  s(:send,
                    s(:const, nil, :CSV), :open,
                    s(:ivar, :@temp_csv_path),
                    s(:dstr,
                      s(:str, "rb:"),
                      s(:begin,
                        s(:lvar, :encoding)),
                      s(:str, ":"),
                      s(:begin,
                        s(:const,
                          s(:const, nil, :Encoding), :UTF_8))),
                    s(:lvar, :options)),
                  s(:args,
                    s(:arg, :csv)),
                  s(:block,
                    s(:send,
                      s(:lvar, :csv), :each_with_index),
                    s(:args,
                      s(:arg, :row),
                      s(:arg, :i)),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :orig_fields), :[],
                        s(:lvar, :i)),
                      s(:lvar, :row))))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Encoding), :ConverterNotFoundError)), nil, nil), nil)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :encoding),
            s(:send,
              s(:lvar, :encoding), :name)),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@temp_csv_path),
              s(:lvar, :options)),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each_with_index),
              s(:args,
                s(:arg, :row),
                s(:arg, :i)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :fields), :[],
                  s(:lvar, :i)),
                s(:lvar, :row)))),
          s(:send,
            s(:lvar, :options), :delete,
            s(:sym, :encoding)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :external_encoding),
            s(:send,
              s(:lvar, :encoding), :name)),
          s(:send,
            s(:lvar, :options), :[]=,
            s(:sym, :internal_encoding),
            s(:send,
              s(:const,
                s(:const, nil, :Encoding), :UTF_8), :name)),
          s(:kwbegin,
            s(:rescue,
              s(:if,
                s(:send,
                  s(:lvar, :encoding), :==,
                  s(:const,
                    s(:const, nil, :Encoding), :UTF_8)), nil,
                s(:block,
                  s(:send,
                    s(:const, nil, :CSV), :open,
                    s(:ivar, :@temp_csv_path),
                    s(:lvar, :options)),
                  s(:args,
                    s(:arg, :csv)),
                  s(:block,
                    s(:send,
                      s(:lvar, :csv), :each_with_index),
                    s(:args,
                      s(:arg, :row),
                      s(:arg, :i)),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :orig_fields), :[],
                        s(:lvar, :i)),
                      s(:lvar, :row))))),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Encoding), :ConverterNotFoundError)), nil, nil), nil)))),
      s(:def, :encode_ary,
        s(:args,
          s(:arg, :ary),
          s(:arg, :encoding)),
        s(:block,
          s(:send,
            s(:lvar, :ary), :map),
          s(:args,
            s(:arg, :row)),
          s(:block,
            s(:send,
              s(:lvar, :row), :map),
            s(:args,
              s(:arg, :field)),
            s(:send,
              s(:lvar, :field), :encode,
              s(:lvar, :encoding))))),
      s(:def, :ary_to_data,
        s(:args,
          s(:arg, :ary),
          s(:optarg, :options,
            s(:hash))),
        s(:begin,
          s(:lvasgn, :encoding,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :ary), :flatten), :first), :encoding)),
          s(:lvasgn, :quote_char,
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :options), :[],
                    s(:sym, :quote_char)),
                  s(:str, "\""))), :encode,
              s(:lvar, :encoding))),
          s(:lvasgn, :col_sep,
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :options), :[],
                    s(:sym, :col_sep)),
                  s(:str, ","))), :encode,
              s(:lvar, :encoding))),
          s(:lvasgn, :row_sep,
            s(:send,
              s(:begin,
                s(:or,
                  s(:send,
                    s(:lvar, :options), :[],
                    s(:sym, :row_sep)),
                  s(:str, "\n"))), :encode,
              s(:lvar, :encoding))),
          s(:send,
            s(:send,
              s(:block,
                s(:send,
                  s(:lvar, :ary), :map),
                s(:args,
                  s(:arg, :row)),
                s(:send,
                  s(:send,
                    s(:block,
                      s(:send,
                        s(:lvar, :row), :map),
                      s(:args,
                        s(:arg, :field)),
                      s(:send,
                        s(:array,
                          s(:lvar, :quote_char),
                          s(:send,
                            s(:lvar, :field), :encode,
                            s(:lvar, :encoding)),
                          s(:lvar, :quote_char)), :join,
                        s(:str, ""))), :join,
                    s(:lvar, :col_sep)), :+,
                  s(:lvar, :row_sep))), :join,
              s(:str, "")), :encode,
            s(:lvar, :encoding)))),
      s(:def, :encode_for_tests,
        s(:args,
          s(:arg, :data),
          s(:optarg, :options,
            s(:hash))),
        s(:begin,
          s(:yield,
            s(:send, nil, :ary_to_data,
              s(:send, nil, :encode_ary,
                s(:lvar, :data),
                s(:str, "UTF-8")),
              s(:lvar, :options))),
          s(:yield,
            s(:send, nil, :ary_to_data,
              s(:send, nil, :encode_ary,
                s(:lvar, :data),
                s(:str, "UTF-16BE")),
              s(:lvar, :options))))),
      s(:def, :each_encoding,
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :Encoding), :list), :each),
          s(:args,
            s(:arg, :encoding)),
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :encoding), :dummy?),
              s(:next), nil),
            s(:yield,
              s(:lvar, :encoding))))),
      s(:def, :no_warnings,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :old_verbose),
                s(:gvasgn, :$VERBOSE)),
              s(:array,
                s(:gvar, :$VERBOSE),
                s(:nil))),
            s(:yield)),
          s(:gvasgn, :$VERBOSE,
            s(:lvar, :old_verbose)))))))
