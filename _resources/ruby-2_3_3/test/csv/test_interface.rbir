s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "base")),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:class,
    s(:const,
      s(:const, nil, :TestCSV), :Interface),
    s(:const, nil, :TestCSV),
    s(:begin,
      s(:send, nil, :extend,
        s(:const, nil, :DifferentOFS)),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@tempfile,
            s(:send,
              s(:const, nil, :Tempfile), :new,
              s(:array,
                s(:str, "temp"),
                s(:str, ".csv")))),
          s(:send,
            s(:ivar, :@tempfile), :close),
          s(:ivasgn, :@path,
            s(:send,
              s(:ivar, :@tempfile), :path)),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:ivar, :@path),
              s(:str, "wb")),
            s(:args,
              s(:arg, :file)),
            s(:begin,
              s(:send,
                s(:lvar, :file), :<<,
                s(:str, "1\t2\t3\r\n")),
              s(:send,
                s(:lvar, :file), :<<,
                s(:str, "4\t5\r\n")))),
          s(:ivasgn, :@expected,
            s(:array,
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3")),
              s(:array,
                s(:str, "4"),
                s(:str, "5")))))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tempfile), :close,
            s(:true)),
          s(:zsuper))),
      s(:def, :test_foreach,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :CSV), :foreach,
            s(:ivar, :@path),
            s(:hash,
              s(:pair,
                s(:sym, :col_sep),
                s(:str, "\t")),
              s(:pair,
                s(:sym, :row_sep),
                s(:str, "\r\n")))),
          s(:args,
            s(:arg, :row)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@expected), :shift),
            s(:lvar, :row)))),
      s(:def, :test_foreach_enum,
        s(:args),
        s(:block,
          s(:send,
            s(:send,
              s(:const, nil, :CSV), :foreach,
              s(:ivar, :@path),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n")))), :zip,
            s(:ivar, :@expected)),
          s(:args,
            s(:arg, :row),
            s(:arg, :exp)),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :row)))),
      s(:def, :test_open_and_close,
        s(:args),
        s(:begin,
          s(:lvasgn, :csv,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "r+"),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n"))))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :csv)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :CSV),
            s(:lvar, :csv)),
          s(:send, nil, :assert_not_predicate,
            s(:lvar, :csv),
            s(:sym, :closed?)),
          s(:send,
            s(:lvar, :csv), :close),
          s(:send, nil, :assert_predicate,
            s(:lvar, :csv),
            s(:sym, :closed?)),
          s(:lvasgn, :ret,
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@path)),
              s(:args,
                s(:arg, :new_csv)),
              s(:begin,
                s(:lvasgn, :csv,
                  s(:lvar, :new_csv)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :CSV),
                  s(:lvar, :new_csv)),
                s(:str, "Return value.")))),
          s(:send, nil, :assert_predicate,
            s(:lvar, :csv),
            s(:sym, :closed?)),
          s(:send, nil, :assert_equal,
            s(:str, "Return value."),
            s(:lvar, :ret)))),
      s(:def, :test_parse,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :File), :binread,
              s(:ivar, :@path))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@expected),
            s(:send,
              s(:const, nil, :CSV), :parse,
              s(:lvar, :data),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n"))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :parse,
              s(:lvar, :data),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n")))),
            s(:args,
              s(:arg, :row)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@expected), :shift),
              s(:lvar, :row))))),
      s(:def, :test_parse_line,
        s(:args),
        s(:begin,
          s(:lvasgn, :row,
            s(:send,
              s(:const, nil, :CSV), :parse_line,
              s(:str, "1;2;3"),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, ";"))))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :row)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :Array),
            s(:lvar, :row)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "2"),
              s(:str, "3")),
            s(:lvar, :row)),
          s(:lvasgn, :row,
            s(:send,
              s(:str, "1;2;3"), :parse_csv,
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, ";"))))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :row)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :Array),
            s(:lvar, :row)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "1"),
              s(:str, "2"),
              s(:str, "3")),
            s(:lvar, :row)))),
      s(:def, :test_parse_line_with_empty_lines,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:const, nil, :CSV), :parse_line,
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Array), :new),
            s(:send,
              s(:const, nil, :CSV), :parse_line,
              s(:str, "\n1,2,3"))))),
      s(:def, :test_read_and_readlines,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@expected),
            s(:send,
              s(:const, nil, :CSV), :read,
              s(:ivar, :@path),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n"))))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@expected),
            s(:send,
              s(:const, nil, :CSV), :readlines,
              s(:ivar, :@path),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n"))))),
          s(:lvasgn, :data,
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@path),
                s(:hash,
                  s(:pair,
                    s(:sym, :col_sep),
                    s(:str, "\t")),
                  s(:pair,
                    s(:sym, :row_sep),
                    s(:str, "\r\n")))),
              s(:args,
                s(:arg, :csv)),
              s(:send,
                s(:lvar, :csv), :read))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@expected),
            s(:lvar, :data)),
          s(:lvasgn, :data,
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@path),
                s(:hash,
                  s(:pair,
                    s(:sym, :col_sep),
                    s(:str, "\t")),
                  s(:pair,
                    s(:sym, :row_sep),
                    s(:str, "\r\n")))),
              s(:args,
                s(:arg, :csv)),
              s(:send,
                s(:lvar, :csv), :readlines))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@expected),
            s(:lvar, :data)))),
      s(:def, :test_table,
        s(:args),
        s(:begin,
          s(:lvasgn, :table,
            s(:send,
              s(:const, nil, :CSV), :table,
              s(:ivar, :@path),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n"))))),
          s(:send, nil, :assert_instance_of,
            s(:const,
              s(:const, nil, :CSV), :Table),
            s(:lvar, :table)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:sym, :"1"),
                s(:sym, :"2"),
                s(:sym, :"3")),
              s(:array,
                s(:int, 4),
                s(:int, 5),
                s(:nil))),
            s(:send,
              s(:lvar, :table), :to_a)))),
      s(:def, :test_shift,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :CSV), :open,
            s(:ivar, :@path),
            s(:str, "rb+"),
            s(:hash,
              s(:pair,
                s(:sym, :col_sep),
                s(:str, "\t")),
              s(:pair,
                s(:sym, :row_sep),
                s(:str, "\r\n")))),
          s(:args,
            s(:arg, :csv)),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@expected), :shift),
              s(:send,
                s(:lvar, :csv), :shift)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@expected), :shift),
              s(:send,
                s(:lvar, :csv), :shift)),
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:lvar, :csv), :shift))))),
      s(:def, :test_enumerators_are_supported,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :CSV), :open,
            s(:ivar, :@path),
            s(:hash,
              s(:pair,
                s(:sym, :col_sep),
                s(:str, "\t")),
              s(:pair,
                s(:sym, :row_sep),
                s(:str, "\r\n")))),
          s(:args,
            s(:arg, :csv)),
          s(:begin,
            s(:lvasgn, :enum,
              s(:send,
                s(:lvar, :csv), :each)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Enumerator),
              s(:lvar, :enum)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@expected), :shift),
              s(:send,
                s(:lvar, :enum), :next))))),
      s(:def, :test_nil_is_not_acceptable,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :ArgumentError),
            s(:str, "Cannot parse nil as CSV")),
          s(:args),
          s(:send,
            s(:const, nil, :CSV), :new,
            s(:nil)))),
      s(:def, :test_generate,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :generate),
              s(:args,
                s(:arg, :csv)),
              s(:begin,
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :CSV),
                  s(:lvar, :csv)),
                s(:send, nil, :assert_equal,
                  s(:lvar, :csv),
                  s(:send,
                    s(:lvar, :csv), :<<,
                    s(:array,
                      s(:int, 1),
                      s(:int, 2),
                      s(:int, 3)))),
                s(:send, nil, :assert_equal,
                  s(:lvar, :csv),
                  s(:send,
                    s(:lvar, :csv), :<<,
                    s(:array,
                      s(:int, 4),
                      s(:nil),
                      s(:int, 5))))))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :str)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :String),
            s(:lvar, :str)),
          s(:send, nil, :assert_equal,
            s(:str, "1,2,3\n4,,5\n"),
            s(:lvar, :str)),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :generate,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :csv)),
            s(:send, nil, :assert_equal,
              s(:lvar, :csv),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:array,
                  s(:str, "last"),
                  s(:str, "\"row\""))))),
          s(:send, nil, :assert_equal,
            s(:str, "1,2,3\n4,,5\nlast,\"\"\"row\"\"\"\n"),
            s(:lvar, :str)))),
      s(:def, :test_generate_line,
        s(:args),
        s(:begin,
          s(:lvasgn, :line,
            s(:send,
              s(:const, nil, :CSV), :generate_line,
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3")),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, ";"))))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :line)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :String),
            s(:lvar, :line)),
          s(:send, nil, :assert_equal,
            s(:str, "1;2;3\n"),
            s(:lvar, :line)),
          s(:lvasgn, :line,
            s(:send,
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3")), :to_csv,
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, ";"))))),
          s(:send, nil, :assert_not_nil,
            s(:lvar, :line)),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :String),
            s(:lvar, :line)),
          s(:send, nil, :assert_equal,
            s(:str, "1;2;3\n"),
            s(:lvar, :line)))),
      s(:def, :test_write_header_detection,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:lvasgn, :headers,
            s(:array,
              s(:str, "a"),
              s(:str, "b"),
              s(:str, "c"))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "w"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:true)))),
            s(:args,
              s(:arg, :csv)),
            s(:begin,
              s(:send,
                s(:lvar, :csv), :<<,
                s(:lvar, :headers)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:array,
                  s(:str, "1"),
                  s(:str, "2"),
                  s(:str, "3"))),
              s(:send, nil, :assert_equal,
                s(:lvar, :headers),
                s(:send,
                  s(:lvar, :csv), :instance_variable_get,
                  s(:sym, :@headers))))))),
      s(:def, :test_write_lineno,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "w")),
            s(:args,
              s(:arg, :csv)),
            s(:begin,
              s(:lvasgn, :lines,
                s(:int, 20)),
              s(:block,
                s(:send,
                  s(:lvar, :lines), :times),
                s(:args),
                s(:send,
                  s(:lvar, :csv), :<<,
                  s(:array,
                    s(:str, "a"),
                    s(:str, "b"),
                    s(:str, "c")))),
              s(:send, nil, :assert_equal,
                s(:lvar, :lines),
                s(:send,
                  s(:lvar, :csv), :lineno)))))),
      s(:def, :test_write_hash,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:lvasgn, :lines,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :c),
                  s(:int, 3))),
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 4)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 5)),
                s(:pair,
                  s(:sym, :c),
                  s(:int, 6))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:true)),
                s(:pair,
                  s(:sym, :header_converters),
                  s(:sym, :symbol)))),
            s(:args,
              s(:arg, :csv)),
            s(:begin,
              s(:send,
                s(:lvar, :csv), :<<,
                s(:send,
                  s(:send,
                    s(:lvar, :lines), :first), :keys)),
              s(:block,
                s(:send,
                  s(:lvar, :lines), :each),
                s(:args,
                  s(:arg, :line)),
                s(:send,
                  s(:lvar, :csv), :<<,
                  s(:lvar, :line))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "rb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:true)),
                s(:pair,
                  s(:sym, :converters),
                  s(:sym, :all)),
                s(:pair,
                  s(:sym, :header_converters),
                  s(:sym, :symbol)))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each),
              s(:args,
                s(:arg, :line)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :lines), :shift),
                s(:send,
                  s(:lvar, :line), :to_hash)))))),
      s(:def, :test_write_hash_with_string_keys,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:lvasgn, :lines,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :c),
                  s(:int, 3))),
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 4)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 5)),
                s(:pair,
                  s(:sym, :c),
                  s(:int, 6))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:true)))),
            s(:args,
              s(:arg, :csv)),
            s(:begin,
              s(:send,
                s(:lvar, :csv), :<<,
                s(:send,
                  s(:send,
                    s(:lvar, :lines), :first), :keys)),
              s(:block,
                s(:send,
                  s(:lvar, :lines), :each),
                s(:args,
                  s(:arg, :line)),
                s(:send,
                  s(:lvar, :csv), :<<,
                  s(:lvar, :line))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "rb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:true)))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each),
              s(:args,
                s(:arg, :line)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :csv), :headers), :each_with_index),
                s(:args,
                  s(:arg, :header),
                  s(:arg, :h)),
                s(:begin,
                  s(:lvasgn, :keys,
                    s(:send,
                      s(:send,
                        s(:lvar, :line), :to_hash), :keys)),
                  s(:send, nil, :assert_instance_of,
                    s(:const, nil, :String),
                    s(:send,
                      s(:lvar, :keys), :[],
                      s(:lvar, :h))),
                  s(:send, nil, :assert_same,
                    s(:lvar, :header),
                    s(:send,
                      s(:lvar, :keys), :[],
                      s(:lvar, :h))))))))),
      s(:def, :test_write_hash_with_headers_array,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:lvasgn, :lines,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 1)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :c),
                  s(:int, 3))),
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:int, 4)),
                s(:pair,
                  s(:sym, :b),
                  s(:int, 5)),
                s(:pair,
                  s(:sym, :c),
                  s(:int, 6))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:array,
                    s(:sym, :b),
                    s(:sym, :a),
                    s(:sym, :c))))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :lines), :each),
              s(:args,
                s(:arg, :line)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:lvar, :line)))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:ivar, :@path),
              s(:str, "rb")),
            s(:args,
              s(:arg, :f)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "2,1,3"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)),
              s(:send, nil, :assert_equal,
                s(:str, "5,4,6"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "rb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:array,
                    s(:sym, :b),
                    s(:sym, :a),
                    s(:sym, :c))),
                s(:pair,
                  s(:sym, :converters),
                  s(:sym, :all)))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each),
              s(:args,
                s(:arg, :line)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :lines), :shift),
                s(:send,
                  s(:lvar, :line), :to_hash)))))),
      s(:def, :test_write_hash_with_headers_string,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:lvasgn, :lines,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:pair,
                  s(:str, "b"),
                  s(:int, 2)),
                s(:pair,
                  s(:str, "c"),
                  s(:int, 3))),
              s(:hash,
                s(:pair,
                  s(:str, "a"),
                  s(:int, 4)),
                s(:pair,
                  s(:str, "b"),
                  s(:int, 5)),
                s(:pair,
                  s(:str, "c"),
                  s(:int, 6))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:str, "b|a|c")),
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "|")))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :lines), :each),
              s(:args,
                s(:arg, :line)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:lvar, :line)))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:ivar, :@path),
              s(:str, "rb")),
            s(:args,
              s(:arg, :f)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "2|1|3"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)),
              s(:send, nil, :assert_equal,
                s(:str, "5|4|6"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "rb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:str, "b|a|c")),
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "|")),
                s(:pair,
                  s(:sym, :converters),
                  s(:sym, :all)))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each),
              s(:args,
                s(:arg, :line)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :lines), :shift),
                s(:send,
                  s(:lvar, :line), :to_hash)))))),
      s(:def, :test_write_headers,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:lvasgn, :lines,
            s(:array,
              s(:hash,
                s(:pair,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:pair,
                  s(:str, "b"),
                  s(:int, 2)),
                s(:pair,
                  s(:str, "c"),
                  s(:int, 3))),
              s(:hash,
                s(:pair,
                  s(:str, "a"),
                  s(:int, 4)),
                s(:pair,
                  s(:str, "b"),
                  s(:int, 5)),
                s(:pair,
                  s(:str, "c"),
                  s(:int, 6))))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:str, "b|a|c")),
                s(:pair,
                  s(:sym, :write_headers),
                  s(:true)),
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "|")))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :lines), :each),
              s(:args,
                s(:arg, :line)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:lvar, :line)))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:ivar, :@path),
              s(:str, "rb")),
            s(:args,
              s(:arg, :f)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "b|a|c"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)),
              s(:send, nil, :assert_equal,
                s(:str, "2|1|3"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)),
              s(:send, nil, :assert_equal,
                s(:str, "5|4|6"),
                s(:send,
                  s(:send,
                    s(:lvar, :f), :gets), :strip)))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "rb"),
              s(:hash,
                s(:pair,
                  s(:sym, :headers),
                  s(:true)),
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "|")),
                s(:pair,
                  s(:sym, :converters),
                  s(:sym, :all)))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:lvar, :csv), :each),
              s(:args,
                s(:arg, :line)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :lines), :shift),
                s(:send,
                  s(:lvar, :line), :to_hash)))))),
      s(:def, :test_append,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n")))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:ivar, :@expected), :each),
              s(:args,
                s(:arg, :row)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:lvar, :row)))),
          s(:send, nil, :test_shift),
          s(:send,
            s(:const, nil, :File), :unlink,
            s(:ivar, :@path)),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :open,
              s(:ivar, :@path),
              s(:str, "wb"),
              s(:hash,
                s(:pair,
                  s(:sym, :col_sep),
                  s(:str, "\t")),
                s(:pair,
                  s(:sym, :row_sep),
                  s(:str, "\r\n")))),
            s(:args,
              s(:arg, :csv)),
            s(:block,
              s(:send,
                s(:ivar, :@expected), :each),
              s(:args,
                s(:arg, :row)),
              s(:send,
                s(:lvar, :csv), :<<,
                s(:send,
                  s(:const,
                    s(:const, nil, :CSV), :Row), :new,
                  s(:send,
                    s(:const, nil, :Array), :new),
                  s(:lvar, :row))))),
          s(:send, nil, :test_shift))),
      s(:def, :test_filter,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_respond_to,
            s(:const, nil, :CSV),
            s(:sym, :filter)),
          s(:lvasgn, :expected,
            s(:array,
              s(:array,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3)),
              s(:array,
                s(:int, 4),
                s(:int, 5)))),
          s(:block,
            s(:send,
              s(:const, nil, :CSV), :filter,
              s(:str, "1;2;3\n4;5\n"),
              s(:begin,
                s(:lvasgn, :result,
                  s(:send,
                    s(:const, nil, :String), :new))),
              s(:hash,
                s(:pair,
                  s(:sym, :in_col_sep),
                  s(:str, ";")),
                s(:pair,
                  s(:sym, :out_col_sep),
                  s(:str, ",")),
                s(:pair,
                  s(:sym, :converters),
                  s(:sym, :all)))),
            s(:args,
              s(:arg, :row)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:lvar, :row),
                s(:send,
                  s(:lvar, :expected), :shift)),
              s(:block,
                s(:send,
                  s(:lvar, :row), :map!),
                s(:args,
                  s(:arg, :n)),
                s(:send,
                  s(:lvar, :n), :*,
                  s(:int, 2))),
              s(:send,
                s(:lvar, :row), :<<,
                s(:str, "Added\r")))),
          s(:send, nil, :assert_equal,
            s(:str, "2,4,6,\"Added\r\"\n8,10,\"Added\r\"\n"),
            s(:lvar, :result)))),
      s(:def, :test_instance,
        s(:args),
        s(:begin,
          s(:lvasgn, :csv,
            s(:send,
              s(:const, nil, :String), :new)),
          s(:lvasgn, :first,
            s(:nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :Exception)),
            s(:args),
            s(:begin,
              s(:lvasgn, :first,
                s(:send,
                  s(:const, nil, :CSV), :instance,
                  s(:lvar, :csv),
                  s(:hash,
                    s(:pair,
                      s(:sym, :col_sep),
                      s(:str, ";"))))),
              s(:send,
                s(:lvar, :first), :<<,
                s(:array,
                  s(:str, "a"),
                  s(:str, "b"),
                  s(:str, "c"))))),
          s(:send, nil, :assert_equal,
            s(:str, "a;b;c\n"),
            s(:lvar, :csv)),
          s(:lvasgn, :second,
            s(:nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:const, nil, :Exception)),
            s(:args),
            s(:begin,
              s(:lvasgn, :second,
                s(:send,
                  s(:const, nil, :CSV), :instance,
                  s(:lvar, :csv),
                  s(:hash,
                    s(:pair,
                      s(:sym, :col_sep),
                      s(:str, ";"))))),
              s(:send,
                s(:lvar, :second), :<<,
                s(:array,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 3))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :first), :object_id),
            s(:send,
              s(:lvar, :second), :object_id)),
          s(:send, nil, :assert_equal,
            s(:str, "a;b;c\n1;2;3\n"),
            s(:lvar, :csv)),
          s(:send, nil, :assert_equal,
            s(:const, nil, :STDOUT),
            s(:block,
              s(:send,
                s(:send,
                  s(:const, nil, :CSV), :instance), :instance_eval),
              s(:args),
              s(:ivar, :@io))),
          s(:send, nil, :assert_equal,
            s(:const, nil, :STDOUT),
            s(:block,
              s(:send, nil, :CSV),
              s(:args,
                s(:arg, :new_csv)),
              s(:block,
                s(:send,
                  s(:lvar, :new_csv), :instance_eval),
                s(:args),
                s(:ivar, :@io)))))),
      s(:def, :test_options_are_not_modified,
        s(:args),
        s(:begin,
          s(:lvasgn, :opt,
            s(:send,
              s(:hash), :freeze)),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :foreach,
              s(:ivar, :@path),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :open,
                s(:ivar, :@path),
                s(:lvar, :opt)),
              s(:args), nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :parse,
              s(:str, ""),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :parse_line,
              s(:str, ""),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :read,
              s(:ivar, :@path),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :readlines,
              s(:ivar, :@path),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :table,
              s(:ivar, :@path),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :generate,
                s(:lvar, :opt)),
              s(:args), nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :generate_line,
              s(:array),
              s(:lvar, :opt))),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :CSV), :filter,
                s(:str, ""),
                s(:str, ""),
                s(:lvar, :opt)),
              s(:args), nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised),
            s(:args),
            s(:send,
              s(:const, nil, :CSV), :instance,
              s(:str, ""),
              s(:lvar, :opt))))))))
