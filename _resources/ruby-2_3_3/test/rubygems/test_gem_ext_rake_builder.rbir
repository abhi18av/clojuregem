s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/ext")),
  s(:class,
    s(:const, nil, :TestGemExtRakeBuilder),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@ext,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "ext"))),
          s(:ivasgn, :@dest_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "prefix"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@ext)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@dest_path)))),
      s(:def, :test_class_build,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "mkrf_conf.rb")),
              s(:str, "w")),
            s(:args,
              s(:arg, :mkrf_conf)),
            s(:send,
              s(:lvar, :mkrf_conf), :puts,
              s(:dstr,
                s(:str, "        File.open(\"Rakefile\",\"w\") do |f|\n"),
                s(:str, "          f.puts \"task :default\"\n"),
                s(:str, "        end\n")))),
          s(:lvasgn, :output,
            s(:array)),
          s(:lvasgn, :realdir,
            s(:nil)),
          s(:block,
            s(:send, nil, :build_rake_in),
            s(:args,
              s(:arg, :rake)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:ivar, :@ext)),
                s(:args),
                s(:begin,
                  s(:lvasgn, :realdir,
                    s(:send,
                      s(:const, nil, :Dir), :pwd)),
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Ext), :RakeBuilder), :build,
                    s(:str, "mkrf_conf.rb"),
                    s(:nil),
                    s(:ivar, :@dest_path),
                    s(:lvar, :output)))),
              s(:lvasgn, :output,
                s(:send,
                  s(:lvar, :output), :join,
                  s(:str, "\n"))),
              s(:send, nil, :refute_match,
                s(:regexp,
                  s(:str, "^rake failed:"),
                  s(:regopt)),
                s(:lvar, :output)),
              s(:send, nil, :assert_match,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:cvar, :@@ruby))),
                  s(:str, " mkrf_conf\\.rb"),
                  s(:regopt)),
                s(:lvar, :output)),
              s(:send, nil, :assert_match,
                s(:regexp,
                  s(:str, "^"),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:lvar, :rake))),
                  s(:str, " RUBYARCHDIR="),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:ivar, :@dest_path))),
                  s(:str, " RUBYLIBDIR="),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :Regexp), :escape,
                      s(:ivar, :@dest_path))),
                  s(:regopt)),
                s(:lvar, :output)))))),
      s(:def, :test_class_build_fail,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "mkrf_conf.rb")),
              s(:str, "w")),
            s(:args,
              s(:arg, :mkrf_conf)),
            s(:send,
              s(:lvar, :mkrf_conf), :puts,
              s(:dstr,
                s(:str, "        File.open(\"Rakefile\",\"w\") do |f|\n"),
                s(:str, "          f.puts \"task :default do abort 'fail' end\"\n"),
                s(:str, "        end\n")))),
          s(:lvasgn, :output,
            s(:array)),
          s(:block,
            s(:send, nil, :build_rake_in,
              s(:false)),
            s(:args,
              s(:arg, :rake)),
            s(:begin,
              s(:lvasgn, :error,
                s(:block,
                  s(:send, nil, :assert_raises,
                    s(:const,
                      s(:const, nil, :Gem), :InstallError)),
                  s(:args),
                  s(:block,
                    s(:send,
                      s(:const, nil, :Dir), :chdir,
                      s(:ivar, :@ext)),
                    s(:args),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :Ext), :RakeBuilder), :build,
                      s(:str, "mkrf_conf.rb"),
                      s(:nil),
                      s(:ivar, :@dest_path),
                      s(:lvar, :output))))),
              s(:send, nil, :assert_match,
                s(:regexp,
                  s(:str, "^rake failed"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :error), :message)))))))))
