s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/source")),
  s(:class,
    s(:const, nil, :TestGemSourceInstalled),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:def, :test_spaceship,
      s(:args),
      s(:begin,
        s(:lvasgn, :a1,
          s(:send, nil, :quick_gem,
            s(:str, "a"),
            s(:str, "1"))),
        s(:send, nil, :util_build_gem,
          s(:lvar, :a1)),
        s(:lvasgn, :remote,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Source), :new,
            s(:ivar, :@gem_repo))),
        s(:lvasgn, :specific,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :SpecificFile), :new,
            s(:send,
              s(:lvar, :a1), :cache_file))),
        s(:lvasgn, :installed,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Installed), :new)),
        s(:lvasgn, :local,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Local), :new)),
        s(:lvasgn, :git,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Git), :new,
            s(:str, "a"),
            s(:str, "a"),
            s(:str, "master"))),
        s(:lvasgn, :vendor,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Source), :Vendor), :new,
            s(:str, "a"))),
        s(:send, nil, :assert_equal,
          s(:int, 0),
          s(:send,
            s(:lvar, :installed), :<=>,
            s(:lvar, :installed)),
          s(:str, "installed <=> installed")),
        s(:send, nil, :assert_equal,
          s(:int, -1),
          s(:send,
            s(:lvar, :remote), :<=>,
            s(:lvar, :installed)),
          s(:str, "remote    <=> installed")),
        s(:send, nil, :assert_equal,
          s(:int, 1),
          s(:send,
            s(:lvar, :installed), :<=>,
            s(:lvar, :remote)),
          s(:str, "installed <=> remote")),
        s(:send, nil, :assert_equal,
          s(:int, 1),
          s(:send,
            s(:lvar, :installed), :<=>,
            s(:lvar, :local)),
          s(:str, "installed <=> local")),
        s(:send, nil, :assert_equal,
          s(:int, -1),
          s(:send,
            s(:lvar, :local), :<=>,
            s(:lvar, :installed)),
          s(:str, "local     <=> installed")),
        s(:send, nil, :assert_equal,
          s(:int, -1),
          s(:send,
            s(:lvar, :specific), :<=>,
            s(:lvar, :installed)),
          s(:str, "specific  <=> installed")),
        s(:send, nil, :assert_equal,
          s(:int, 1),
          s(:send,
            s(:lvar, :installed), :<=>,
            s(:lvar, :specific)),
          s(:str, "installed <=> specific")),
        s(:send, nil, :assert_equal,
          s(:int, 1),
          s(:send,
            s(:lvar, :git), :<=>,
            s(:lvar, :installed)),
          s(:str, "git       <=> installed")),
        s(:send, nil, :assert_equal,
          s(:int, -1),
          s(:send,
            s(:lvar, :installed), :<=>,
            s(:lvar, :git)),
          s(:str, "installed <=> git")),
        s(:send, nil, :assert_equal,
          s(:int, 1),
          s(:send,
            s(:lvar, :vendor), :<=>,
            s(:lvar, :installed)),
          s(:str, "vendor    <=> installed")),
        s(:send, nil, :assert_equal,
          s(:int, -1),
          s(:send,
            s(:lvar, :installed), :<=>,
            s(:lvar, :vendor)),
          s(:str, "installed <=> vendor"))))))
