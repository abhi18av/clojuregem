s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestKernel),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@old_path,
            s(:send,
              s(:gvar, :$:), :dup)),
          s(:send, nil, :util_make_gems))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:gvar, :$:), :replace,
            s(:ivar, :@old_path)))),
      s(:def, :test_gem,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 1")),
            s(:str, "Should load")),
          s(:send, nil, :assert,
            s(:block,
              s(:send,
                s(:gvar, :$:), :any?),
              s(:args,
                s(:arg, :p)),
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "a-1/lib"),
                  s(:regopt)),
                s(:lvar, :p)))))),
      s(:def, :test_gem_default,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, ">= 0"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@a2),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :loaded_specs), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_default_re_gem,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "=1"))),
          s(:send, nil, :refute,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, ">= 0"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@a1),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :loaded_specs), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_re_gem_mismatch,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "=1"))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const, nil, :Gem), :LoadError)),
            s(:args),
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 2"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@a1),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :loaded_specs), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_redundant,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 1")),
            s(:str, "Should load")),
          s(:send, nil, :refute,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 1")),
            s(:str, "Should not load")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:block,
                s(:send,
                  s(:gvar, :$:), :select),
                s(:args,
                  s(:arg, :p)),
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "a-1/lib"),
                    s(:regopt)),
                  s(:lvar, :p))), :size)))),
      s(:def, :test_gem_overlapping,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 1")),
            s(:str, "Should load")),
          s(:send, nil, :refute,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, ">= 1")),
            s(:str, "Should not load")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:block,
                s(:send,
                  s(:gvar, :$:), :select),
                s(:args,
                  s(:arg, :p)),
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "a-1/lib"),
                    s(:regopt)),
                  s(:lvar, :p))), :size)))),
      s(:def, :test_gem_prerelease,
        s(:args),
        s(:begin,
          s(:send, nil, :quick_gem,
            s(:str, "d"),
            s(:str, "1.1.a")),
          s(:send, nil, :refute,
            s(:send, nil, :gem,
              s(:str, "d"),
              s(:str, ">= 1")),
            s(:str, "release requirement must not load prerelease")),
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "d"),
              s(:str, ">= 1.a")),
            s(:str, "prerelease requirement may load prerelease")))),
      s(:def, :test_gem_conflicting,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 1")),
            s(:str, "Should load")),
          s(:lvasgn, :ex,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :LoadError)),
              s(:args),
              s(:send, nil, :gem,
                s(:str, "a"),
                s(:str, "= 2")))),
          s(:send, nil, :assert_equal,
            s(:str, "can't activate a-2, already activated a-1"),
            s(:send,
              s(:lvar, :ex), :message)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "activated a-1"),
              s(:regopt)),
            s(:send,
              s(:lvar, :ex), :message)),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :ex), :name)),
          s(:send, nil, :assert,
            s(:block,
              s(:send,
                s(:gvar, :$:), :any?),
              s(:args,
                s(:arg, :p)),
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "a-1/lib"),
                  s(:regopt)),
                s(:lvar, :p)))),
          s(:send, nil, :refute,
            s(:block,
              s(:send,
                s(:gvar, :$:), :any?),
              s(:args,
                s(:arg, :p)),
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "a-2/lib"),
                  s(:regopt)),
                s(:lvar, :p)))))),
      s(:def, :test_gem_not_adding_bin,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send, nil, :gem,
              s(:str, "a"),
              s(:str, "= 1")),
            s(:str, "Should load")),
          s(:send, nil, :refute,
            s(:block,
              s(:send,
                s(:gvar, :$:), :any?),
              s(:args,
                s(:arg, :p)),
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "a-1/bin"),
                  s(:regopt)),
                s(:lvar, :p)))))))))
