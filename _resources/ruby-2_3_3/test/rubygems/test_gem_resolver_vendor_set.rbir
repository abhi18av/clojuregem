s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemResolverVendorSet),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSet), :new)))),
      s(:def, :test_add_vendor_gem,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :version),
              s(:lvasgn, :directory)),
            s(:send, nil, :vendor_gem)),
          s(:lvasgn, :added,
            s(:send,
              s(:ivar, :@set), :add_vendor_gem,
              s(:lvar, :name),
              s(:lvar, :directory))),
          s(:lvasgn, :spec,
            s(:send,
              s(:ivar, :@set), :load_spec,
              s(:lvar, :name),
              s(:lvar, :version),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY),
              s(:nil))),
          s(:send, nil, :assert_equal,
            s(:lvar, :spec),
            s(:lvar, :added)),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:lvar, :name)),
              s(:str, "-"),
              s(:begin,
                s(:lvar, :version))),
            s(:send,
              s(:lvar, :spec), :full_name)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:lvar, :directory)),
            s(:send,
              s(:lvar, :spec), :full_gem_path)))),
      s(:def, :test_add_vendor_gem_missing,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :directory)),
            s(:send, nil, :vendor_gem)),
          s(:send,
            s(:const, nil, :FileUtils), :rm_r,
            s(:lvar, :directory)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :GemNotFoundException)),
              s(:args),
              s(:send,
                s(:ivar, :@set), :add_vendor_gem,
                s(:lvar, :name),
                s(:lvar, :directory)))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "unable to find "),
              s(:begin,
                s(:lvar, :directory)),
              s(:str, "/"),
              s(:begin,
                s(:lvar, :name)),
              s(:str, ".gemspec for gem "),
              s(:begin,
                s(:lvar, :name))),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_find_all,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :version),
              s(:lvasgn, :directory)),
            s(:send, nil, :vendor_gem)),
          s(:send,
            s(:ivar, :@set), :add_vendor_gem,
            s(:lvar, :name),
            s(:lvar, :directory)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :req))),
          s(:lvasgn, :spec,
            s(:send,
              s(:ivar, :@set), :load_spec,
              s(:lvar, :name),
              s(:lvar, :version),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY),
              s(:nil))),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Vendor), :new,
              s(:lvar, :directory))),
          s(:lvasgn, :expected,
            s(:array,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
                s(:ivar, :@set),
                s(:lvar, :spec),
                s(:lvar, :source)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:lvar, :found)))),
      s(:def, :test_find_all_prerelease,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :directory)),
            s(:send, nil, :vendor_gem,
              s(:str, "a"),
              s(:str, "1.a"))),
          s(:send,
            s(:ivar, :@set), :add_vendor_gem,
            s(:lvar, :name),
            s(:lvar, :directory)),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:send, nil, :dep,
                s(:str, "a")),
              s(:nil))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :req))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, ">= 0.a")),
              s(:nil))),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :req))))),
      s(:def, :test_load_spec,
        s(:args),
        s(:begin,
          s(:lvasgn, :error,
            s(:if,
              s(:send,
                s(:const, nil, :Object), :const_defined?,
                s(:sym, :KeyError)),
              s(:const, nil, :KeyError),
              s(:const, nil, :IndexError))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:lvar, :error)),
            s(:args),
            s(:send,
              s(:ivar, :@set), :load_spec,
              s(:str, "b"),
              s(:send, nil, :v,
                s(:int, 1)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY),
              s(:nil))))))))
