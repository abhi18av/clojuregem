s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/rdoc")),
  s(:class,
    s(:const, nil, :TestGemRDoc),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:send,
        s(:const,
          s(:const, nil, :Gem), :RDoc), :load_rdoc),
      s(:lvasgn, :rdoc_4,
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Requirement), :new,
            s(:str, "> 3")), :satisfied_by?,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RDoc), :rdoc_version))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@a,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "a")),
              s(:args,
                s(:arg, :s)),
              s(:begin,
                s(:send,
                  s(:lvar, :s), :rdoc_options=,
                  s(:array,
                    s(:str, "--main"),
                    s(:str, "MyTitle"))),
                s(:send,
                  s(:lvar, :s), :extra_rdoc_files=,
                  s(:array,
                    s(:str, "README")))))),
          s(:send, nil, :write_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "lib"),
              s(:str, "a.rb"))),
          s(:send, nil, :write_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "README"))),
          s(:send, nil, :install_gem,
            s(:ivar, :@a)),
          s(:ivasgn, :@hook,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :new,
              s(:ivar, :@a))),
          s(:kwbegin,
            s(:rescue,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :RDoc), :load_rdoc),
              s(:resbody,
                s(:array,
                  s(:const,
                    s(:const, nil, :Gem), :DocumentError)),
                s(:lvasgn, :e),
                s(:send, nil, :skip,
                  s(:send,
                    s(:lvar, :e), :message))), nil)),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :[]=,
            s(:sym, :rdoc),
            s(:nil)))),
      s(:def, :rdoc_4?,
        s(:args),
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Requirement), :new,
            s(:str, ">= 4.0.0.preview2")), :satisfied_by?,
          s(:send,
            s(:send,
              s(:ivar, :@hook), :class), :rdoc_version))),
      s(:def, :rdoc_3?,
        s(:args),
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Requirement), :new,
            s(:str, "~> 3.0")), :satisfied_by?,
          s(:send,
            s(:send,
              s(:ivar, :@hook), :class), :rdoc_version))),
      s(:def, :rdoc_3_8_or_better?,
        s(:args),
        s(:send,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Requirement), :new,
            s(:str, ">= 3.8")), :satisfied_by?,
          s(:send,
            s(:send,
              s(:ivar, :@hook), :class), :rdoc_version))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:if,
            s(:send, nil, :rdoc_4?),
            s(:send, nil, :refute,
              s(:send,
                s(:ivar, :@hook), :generate_rdoc)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :generate_rdoc))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@hook), :generate_ri)),
          s(:lvasgn, :rdoc,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :new,
              s(:ivar, :@a),
              s(:false),
              s(:false))),
          s(:send, nil, :refute,
            s(:send,
              s(:lvar, :rdoc), :generate_rdoc)),
          s(:send, nil, :refute,
            s(:send,
              s(:lvar, :rdoc), :generate_ri)))),
      s(:def, :test_delete_legacy_args,
        s(:args),
        s(:begin,
          s(:lvasgn, :args,
            s(:array,
              s(:str, "--inline-source"),
              s(:str, "--one-file"),
              s(:str, "--promiscuous"),
              s(:str, "-p"))),
          s(:send,
            s(:ivar, :@hook), :delete_legacy_args,
            s(:lvar, :args)),
          s(:send, nil, :assert_empty,
            s(:lvar, :args)))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_document,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3?), nil,
              s(:send, nil, :skip,
                s(:str, "RDoc 3 required"))),
            s(:lvasgn, :options,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :Options), :new)),
            s(:send,
              s(:lvar, :options), :files=,
              s(:array)),
            s(:lvasgn, :rdoc,
              s(:send,
                s(:ivar, :@hook), :new_rdoc)),
            s(:send,
              s(:ivar, :@hook), :instance_variable_set,
              s(:sym, :@rdoc),
              s(:lvar, :rdoc)),
            s(:send,
              s(:ivar, :@hook), :instance_variable_set,
              s(:sym, :@file_info),
              s(:array)),
            s(:send,
              s(:ivar, :@hook), :document,
              s(:str, "darkfish"),
              s(:lvar, :options),
              s(:send,
                s(:ivar, :@a), :doc_dir,
                s(:str, "rdoc"))),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :rdoc_installed?))))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_generate,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3?), nil,
              s(:send, nil, :skip,
                s(:str, "RDoc 3 required"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :generate),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :rdoc_installed?)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :ri_installed?)),
            s(:lvasgn, :rdoc,
              s(:send,
                s(:ivar, :@hook), :instance_variable_get,
                s(:sym, :@rdoc))),
            s(:send, nil, :refute,
              s(:send,
                s(:send,
                  s(:lvar, :rdoc), :options), :hyperlink_all))))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_generate_configuration_rdoc_array,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3?), nil,
              s(:send, nil, :skip,
                s(:str, "RDoc 3 required"))),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :[]=,
              s(:sym, :rdoc),
              s(:array,
                s(:str, "-A"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :generate),
            s(:lvasgn, :rdoc,
              s(:send,
                s(:ivar, :@hook), :instance_variable_get,
                s(:sym, :@rdoc))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :rdoc), :options), :hyperlink_all))))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_generate_configuration_rdoc_string,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3?), nil,
              s(:send, nil, :skip,
                s(:str, "RDoc 3 required"))),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :[]=,
              s(:sym, :rdoc),
              s(:str, "-A")),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :generate),
            s(:lvasgn, :rdoc,
              s(:send,
                s(:ivar, :@hook), :instance_variable_get,
                s(:sym, :@rdoc))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :rdoc), :options), :hyperlink_all))))),
      s(:def, :test_generate_disabled,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@hook), :generate_rdoc=,
            s(:false)),
          s(:send,
            s(:ivar, :@hook), :generate_ri=,
            s(:false)),
          s(:send,
            s(:ivar, :@hook), :generate),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@hook), :rdoc_installed?)),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@hook), :ri_installed?)))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_generate_force,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3?), nil,
              s(:send, nil, :skip,
                s(:str, "RDoc 3 required"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir,
                s(:str, "ri"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir,
                s(:str, "rdoc"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :force=,
              s(:true)),
            s(:send,
              s(:ivar, :@hook), :generate),
            s(:send, nil, :assert_path_exists,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :doc_dir,
                  s(:str, "rdoc")),
                s(:str, "index.html"))),
            s(:send, nil, :assert_path_exists,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :doc_dir,
                  s(:str, "ri")),
                s(:str, "cache.ri")))))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_generate_no_overwrite,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3?), nil,
              s(:send, nil, :skip,
                s(:str, "RDoc 3 required"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir,
                s(:str, "ri"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir,
                s(:str, "rdoc"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :generate),
            s(:send, nil, :refute_path_exists,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :doc_dir,
                  s(:str, "rdoc")),
                s(:str, "index.html"))),
            s(:send, nil, :refute_path_exists,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :doc_dir,
                  s(:str, "ri")),
                s(:str, "cache.ri")))))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_generate_legacy,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3_8_or_better?),
              s(:send, nil, :skip,
                s(:str, "RDoc < 3.8 required")), nil),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :generate_legacy),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :rdoc_installed?)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :ri_installed?))))),
      s(:if,
        s(:lvar, :rdoc_4), nil,
        s(:def, :test_legacy_rdoc,
          s(:args),
          s(:begin,
            s(:if,
              s(:send, nil, :rdoc_3_8_or_better?),
              s(:send, nil, :skip,
                s(:str, "RDoc < 3.8 required")), nil),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@a), :gem_dir),
                s(:str, "lib"))),
            s(:send,
              s(:ivar, :@hook), :legacy_rdoc,
              s(:str, "--op"),
              s(:send,
                s(:ivar, :@a), :doc_dir,
                s(:str, "rdoc"))),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@hook), :rdoc_installed?))))),
      s(:def, :test_new_rdoc,
        s(:args),
        s(:send, nil, :assert_kind_of,
          s(:const,
            s(:const, nil, :RDoc), :RDoc),
          s(:send,
            s(:ivar, :@hook), :new_rdoc))),
      s(:def, :test_rdoc_installed?,
        s(:args),
        s(:begin,
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@hook), :rdoc_installed?)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:ivar, :@a), :doc_dir,
              s(:str, "rdoc"))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@hook), :rdoc_installed?)))),
      s(:def, :test_remove,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:ivar, :@a), :doc_dir,
              s(:str, "rdoc"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:ivar, :@a), :doc_dir,
              s(:str, "ri"))),
          s(:send,
            s(:ivar, :@hook), :remove),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@hook), :rdoc_installed?)),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@hook), :ri_installed?)),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@a), :doc_dir)))),
      s(:def, :test_remove_unwritable,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "chmod not supported")), nil),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :base_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :chmod,
              s(:int, 0),
              s(:send,
                s(:ivar, :@a), :base_dir)),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const, nil, :Gem), :FilePermissionError)),
                s(:args),
                s(:send,
                  s(:ivar, :@hook), :remove))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@a), :base_dir),
              s(:send,
                s(:lvar, :e), :directory))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :directory?,
              s(:send,
                s(:ivar, :@a), :base_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :chmod,
              s(:int, 493),
              s(:send,
                s(:ivar, :@a), :base_dir)), nil))),
      s(:def, :test_ri_installed?,
        s(:args),
        s(:begin,
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@hook), :ri_installed?)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:ivar, :@a), :doc_dir,
              s(:str, "ri"))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@hook), :ri_installed?)))),
      s(:def, :test_setup,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@hook), :setup),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@a), :doc_dir)))),
      s(:def, :test_setup_unwritable,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "chmod not supported")), nil),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:send,
              s(:const, nil, :FileUtils), :chmod,
              s(:int, 0),
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const, nil, :Gem), :FilePermissionError)),
                s(:args),
                s(:send,
                  s(:ivar, :@hook), :setup))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@a), :doc_dir),
              s(:send,
                s(:lvar, :e), :directory))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:ivar, :@a), :doc_dir)),
            s(:begin,
              s(:send,
                s(:const, nil, :FileUtils), :chmod,
                s(:int, 493),
                s(:send,
                  s(:ivar, :@a), :doc_dir)),
              s(:send,
                s(:const, nil, :FileUtils), :rm_r,
                s(:send,
                  s(:ivar, :@a), :doc_dir))), nil))))))
