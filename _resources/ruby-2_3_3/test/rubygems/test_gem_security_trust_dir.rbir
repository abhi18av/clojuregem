s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :SSL)), nil,
    s(:send, nil, :warn,
      s(:str, "Skipping Gem::Security::TrustDir tests.  openssl not found."))),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :SSL)),
    s(:class,
      s(:const, nil, :TestGemSecurityTrustDir),
      s(:const,
        s(:const, nil, :Gem), :TestCase),
      s(:begin,
        s(:casgn, nil, :CHILD_CERT,
          s(:send, nil, :load_cert,
            s(:str, "child"))),
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:zsuper),
            s(:ivasgn, :@dest_dir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "trust"))),
            s(:ivasgn, :@trust_dir,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :TrustDir), :new,
                s(:ivar, :@dest_dir))))),
        s(:def, :test_cert_path,
          s(:args),
          s(:begin,
            s(:lvasgn, :digest,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :Digest), :SHA1), :hexdigest,
                s(:send,
                  s(:send,
                    s(:const, nil, :PUBLIC_CERT), :subject), :to_s))),
            s(:lvasgn, :expected,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@dest_dir),
                s(:dstr,
                  s(:str, "cert-"),
                  s(:begin,
                    s(:lvar, :digest)),
                  s(:str, ".pem")))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:send,
                s(:ivar, :@trust_dir), :cert_path,
                s(:const, nil, :PUBLIC_CERT))))),
        s(:def, :test_issuer_of,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_nil,
              s(:send,
                s(:ivar, :@trust_dir), :issuer_of,
                s(:const, nil, :CHILD_CERT))),
            s(:send,
              s(:ivar, :@trust_dir), :trust_cert,
              s(:const, nil, :PUBLIC_CERT)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :PUBLIC_CERT), :to_pem),
              s(:send,
                s(:send,
                  s(:ivar, :@trust_dir), :issuer_of,
                  s(:const, nil, :CHILD_CERT)), :to_pem)))),
        s(:def, :test_load_certificate,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@trust_dir), :trust_cert,
              s(:const, nil, :PUBLIC_CERT)),
            s(:lvasgn, :path,
              s(:send,
                s(:ivar, :@trust_dir), :cert_path,
                s(:const, nil, :PUBLIC_CERT))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :PUBLIC_CERT), :to_pem),
              s(:send,
                s(:send,
                  s(:ivar, :@trust_dir), :load_certificate,
                  s(:lvar, :path)), :to_pem)))),
        s(:def, :test_name_path,
          s(:args),
          s(:begin,
            s(:lvasgn, :digest,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :Digest), :SHA1), :hexdigest,
                s(:send,
                  s(:send,
                    s(:const, nil, :PUBLIC_CERT), :subject), :to_s))),
            s(:lvasgn, :expected,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@dest_dir),
                s(:dstr,
                  s(:str, "cert-"),
                  s(:begin,
                    s(:lvar, :digest)),
                  s(:str, ".pem")))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:send,
                s(:ivar, :@trust_dir), :name_path,
                s(:send,
                  s(:const, nil, :PUBLIC_CERT), :subject))))),
        s(:def, :test_trust_cert,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@trust_dir), :trust_cert,
              s(:const, nil, :PUBLIC_CERT)),
            s(:lvasgn, :trusted,
              s(:send,
                s(:ivar, :@trust_dir), :cert_path,
                s(:const, nil, :PUBLIC_CERT))),
            s(:send, nil, :assert_path_exists,
              s(:lvar, :trusted)),
            s(:lvasgn, :mask,
              s(:send,
                s(:int, 33152), :&,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :umask), :~)))),
            s(:if,
              s(:send, nil, :win_platform?), nil,
              s(:send, nil, :assert_equal,
                s(:lvar, :mask),
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :stat,
                    s(:lvar, :trusted)), :mode))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :PUBLIC_CERT), :to_pem),
              s(:send,
                s(:const, nil, :File), :read,
                s(:lvar, :trusted))))),
        s(:def, :test_verify,
          s(:args),
          s(:begin,
            s(:send, nil, :refute_path_exists,
              s(:ivar, :@dest_dir)),
            s(:send,
              s(:ivar, :@trust_dir), :verify),
            s(:send, nil, :assert_path_exists,
              s(:ivar, :@dest_dir)),
            s(:lvasgn, :mask,
              s(:send,
                s(:int, 16832), :&,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :umask), :~)))),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "aix"),
                  s(:regopt)),
                s(:const, nil, :RUBY_PLATFORM)),
              s(:op_asgn,
                s(:lvasgn, :mask), :|,
                s(:int, 65536)), nil),
            s(:if,
              s(:send, nil, :win_platform?), nil,
              s(:send, nil, :assert_equal,
                s(:lvar, :mask),
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :stat,
                    s(:ivar, :@dest_dir)), :mode))))),
        s(:def, :test_verify_file,
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :FileUtils), :touch,
              s(:ivar, :@dest_dir)),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Security), :Exception)),
                s(:args),
                s(:send,
                  s(:ivar, :@trust_dir), :verify))),
            s(:send, nil, :assert_equal,
              s(:dstr,
                s(:str, "trust directory "),
                s(:begin,
                  s(:ivar, :@dest_dir)),
                s(:str, " is not a directory")),
              s(:send,
                s(:lvar, :e), :message)))),
        s(:def, :test_verify_wrong_permissions,
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:ivar, :@dest_dir),
              s(:hash,
                s(:pair,
                  s(:sym, :mode),
                  s(:int, 511)))),
            s(:send,
              s(:ivar, :@trust_dir), :verify),
            s(:lvasgn, :mask,
              s(:send,
                s(:int, 16832), :&,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const, nil, :File), :umask), :~)))),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "aix"),
                  s(:regopt)),
                s(:const, nil, :RUBY_PLATFORM)),
              s(:op_asgn,
                s(:lvasgn, :mask), :|,
                s(:int, 65536)), nil),
            s(:if,
              s(:send, nil, :win_platform?), nil,
              s(:send, nil, :assert_equal,
                s(:lvar, :mask),
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :stat,
                    s(:ivar, :@dest_dir)), :mode))))))), nil))
