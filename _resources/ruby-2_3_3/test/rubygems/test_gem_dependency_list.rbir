s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/dependency_list")),
  s(:class,
    s(:const, nil, :TestGemDependencyList),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send, nil, :util_clear_gems),
          s(:ivasgn, :@deplist,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :DependencyList), :new)),
          s(:ivasgn, :@a1,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:str, "1"))),
          s(:ivasgn, :@a2,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:str, "2"))),
          s(:ivasgn, :@a3,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:str, "3"))),
          s(:ivasgn, :@b1,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "b"),
                s(:str, "1")),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "a"),
                s(:str, ">= 1")))),
          s(:ivasgn, :@b2,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "b"),
                s(:str, "2")),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "a"),
                s(:str, ">= 1")))),
          s(:ivasgn, :@c1,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "c"),
                s(:str, "1")),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "b"),
                s(:str, ">= 1")))),
          s(:ivasgn, :@c2,
            s(:send, nil, :util_spec,
              s(:str, "c"),
              s(:str, "2"))),
          s(:ivasgn, :@d1,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "d"),
                s(:str, "1")),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "c"),
                s(:str, ">= 1")))))),
      s(:def, :test_active_count,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:ivar, :@deplist), :send,
              s(:sym, :active_count),
              s(:array),
              s(:hash))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:ivar, :@deplist), :send,
              s(:sym, :active_count),
              s(:array,
                s(:ivar, :@a1)),
              s(:hash))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:ivar, :@deplist), :send,
              s(:sym, :active_count),
              s(:array,
                s(:ivar, :@a1)),
              s(:hash,
                s(:pair,
                  s(:send,
                    s(:ivar, :@a1), :full_name),
                  s(:true))))))),
      s(:def, :test_add,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:ivar, :@deplist), :dependency_order)),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@b2)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@b2),
              s(:ivar, :@a1)),
            s(:send,
              s(:ivar, :@deplist), :dependency_order)))),
      s(:def, :test_dependency_order,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@b1),
            s(:ivar, :@c1),
            s(:ivar, :@d1)),
          s(:lvasgn, :order,
            s(:send,
              s(:ivar, :@deplist), :dependency_order)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "d-1"),
              s(:str, "c-1"),
              s(:str, "b-1"),
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:lvar, :order), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :test_dependency_order_circle,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@a1), :add_dependency,
            s(:str, "c"),
            s(:str, ">= 1")),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@b1),
            s(:ivar, :@c1)),
          s(:lvasgn, :order,
            s(:send,
              s(:ivar, :@deplist), :dependency_order)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "b-1"),
              s(:str, "c-1"),
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:lvar, :order), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :test_dependency_order_development,
        s(:args),
        s(:begin,
          s(:lvasgn, :e1,
            s(:send, nil, :util_spec,
              s(:str, "e"),
              s(:str, "1"))),
          s(:lvasgn, :f1,
            s(:send, nil, :util_spec,
              s(:str, "f"),
              s(:str, "1"))),
          s(:lvasgn, :g1,
            s(:send, nil, :util_spec,
              s(:str, "g"),
              s(:str, "1"))),
          s(:send,
            s(:ivar, :@a1), :add_dependency,
            s(:str, "e")),
          s(:send,
            s(:ivar, :@a1), :add_dependency,
            s(:str, "f")),
          s(:send,
            s(:ivar, :@a1), :add_dependency,
            s(:str, "g")),
          s(:send,
            s(:lvar, :g1), :add_development_dependency,
            s(:str, "a")),
          s(:lvasgn, :deplist,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :DependencyList), :new,
              s(:true))),
          s(:send,
            s(:lvar, :deplist), :add,
            s(:ivar, :@a1),
            s(:lvar, :e1),
            s(:lvar, :f1),
            s(:lvar, :g1)),
          s(:lvasgn, :order,
            s(:send,
              s(:lvar, :deplist), :dependency_order)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "g-1"),
              s(:str, "a-1"),
              s(:str, "f-1"),
              s(:str, "e-1")),
            s(:block,
              s(:send,
                s(:lvar, :order), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name)),
            s(:str, "development on")),
          s(:lvasgn, :deplist2,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :DependencyList), :new)),
          s(:send,
            s(:lvar, :deplist2), :add,
            s(:ivar, :@a1),
            s(:lvar, :e1),
            s(:lvar, :f1),
            s(:lvar, :g1)),
          s(:lvasgn, :order,
            s(:send,
              s(:lvar, :deplist2), :dependency_order)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1"),
              s(:str, "g-1"),
              s(:str, "f-1"),
              s(:str, "e-1")),
            s(:block,
              s(:send,
                s(:lvar, :order), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name)),
            s(:str, "development off")))),
      s(:def, :test_dependency_order_diamond,
        s(:args),
        s(:begin,
          s(:send, nil, :util_diamond),
          s(:lvasgn, :e1,
            s(:send, nil, :util_spec,
              s(:str, "e"),
              s(:str, "1"))),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:lvar, :e1)),
          s(:send,
            s(:ivar, :@a1), :add_dependency,
            s(:str, "e"),
            s(:str, ">= 1")),
          s(:lvasgn, :order,
            s(:send,
              s(:ivar, :@deplist), :dependency_order)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "d-1"),
              s(:str, "c-2"),
              s(:str, "b-1"),
              s(:str, "a-2"),
              s(:str, "e-1")),
            s(:block,
              s(:send,
                s(:lvar, :order), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name)),
            s(:str, "deps of trimmed specs not included")))),
      s(:def, :test_dependency_order_no_dependencies,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@c2)),
          s(:lvasgn, :order,
            s(:send,
              s(:ivar, :@deplist), :dependency_order)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "c-2"),
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:lvar, :order), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :test_find_name,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@b2)),
          s(:send, nil, :assert_equal,
            s(:str, "a-1"),
            s(:send,
              s(:send,
                s(:ivar, :@deplist), :find_name,
                s(:str, "a-1")), :full_name)),
          s(:send, nil, :assert_equal,
            s(:str, "b-2"),
            s(:send,
              s(:send,
                s(:ivar, :@deplist), :find_name,
                s(:str, "b-2")), :full_name)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@deplist), :find_name,
              s(:str, "c-2"))))),
      s(:def, :test_ok_eh,
        s(:args),
        s(:begin,
          s(:send, nil, :util_clear_gems),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok?),
            s(:str, "no dependencies")),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@b2)),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@deplist), :ok?),
            s(:str, "unsatisfied dependency")),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok?),
            s(:str, "satisfied dependency")))),
      s(:def, :test_why_not_ok_eh,
        s(:args),
        s(:begin,
          s(:send, nil, :util_clear_gems),
          s(:send, nil, :assert_equal,
            s(:hash),
            s(:send,
              s(:ivar, :@deplist), :why_not_ok?)),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@b2)),
          s(:lvasgn, :exp,
            s(:hash,
              s(:pair,
                s(:str, "b"),
                s(:array,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Dependency), :new,
                    s(:str, "a"),
                    s(:str, ">= 1")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:send,
              s(:ivar, :@deplist), :why_not_ok?)))),
      s(:def, :test_why_not_ok_eh_old_dependency,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:send, nil, :new_spec,
              s(:str, "a"),
              s(:str, "1"),
              s(:hash,
                s(:pair,
                  s(:str, "b"),
                  s(:str, "~> 1.0"))))),
          s(:lvasgn, :b0,
            s(:send, nil, :new_spec,
              s(:str, "b"),
              s(:str, "1.0"),
              s(:hash,
                s(:pair,
                  s(:str, "d"),
                  s(:str, ">= 0"))))),
          s(:lvasgn, :b1,
            s(:send, nil, :new_spec,
              s(:str, "b"),
              s(:str, "1.1"))),
          s(:send, nil, :util_clear_gems),
          s(:send,
            s(:ivar, :@deplist), :clear),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:lvar, :a),
            s(:lvar, :b0),
            s(:lvar, :b1)),
          s(:send, nil, :assert_equal,
            s(:hash),
            s(:send,
              s(:ivar, :@deplist), :why_not_ok?)))),
      s(:def, :test_ok_eh_mismatch,
        s(:args),
        s(:begin,
          s(:lvasgn, :a1,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:str, "1"))),
          s(:lvasgn, :a2,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:str, "2"))),
          s(:lvasgn, :b,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "b"),
                s(:str, "1")),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "a"),
                s(:str, "= 1")))),
          s(:lvasgn, :c,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "c"),
                s(:str, "1")),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "a"),
                s(:str, "= 2")))),
          s(:lvasgn, :d,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "d"),
                s(:str, "1")),
              s(:args,
                s(:arg, :s)),
              s(:begin,
                s(:send,
                  s(:lvar, :s), :add_dependency,
                  s(:str, "b")),
                s(:send,
                  s(:lvar, :s), :add_dependency,
                  s(:str, "c"))))),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:lvar, :a1),
            s(:lvar, :a2),
            s(:lvar, :b),
            s(:lvar, :c),
            s(:lvar, :d)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok?),
            s(:str, "this will break on require")))),
      s(:def, :test_ok_eh_redundant,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@a3),
            s(:ivar, :@b2)),
          s(:send,
            s(:ivar, :@deplist), :remove_by_name,
            s(:str, "a-1")),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok?)))),
      s(:def, :test_ok_to_remove_eh,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-1"))),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@b2)),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-1"))),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a2)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-1"))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-2"))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "b-2"))))),
      s(:def, :test_ok_to_remove_eh_after_sibling_removed,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@a2),
            s(:ivar, :@b2)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-1"))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-2"))),
          s(:send,
            s(:ivar, :@deplist), :remove_by_name,
            s(:str, "a-1")),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@deplist), :ok_to_remove?,
              s(:str, "a-2"))))),
      s(:def, :test_remove_by_name,
        s(:args),
        s(:begin,
          s(:send, nil, :util_clear_gems),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@b2)),
          s(:send,
            s(:ivar, :@deplist), :remove_by_name,
            s(:str, "a-1")),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@deplist), :ok?)))),
      s(:def, :test_tsort_each_node,
        s(:args),
        s(:begin,
          s(:send, nil, :util_diamond),
          s(:lvasgn, :order,
            s(:array,
              s(:str, "a-1"),
              s(:str, "a-2"),
              s(:str, "b-1"),
              s(:str, "c-2"),
              s(:str, "d-1"))),
          s(:block,
            s(:send,
              s(:ivar, :@deplist), :tsort_each_node),
            s(:args,
              s(:arg, :node)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :order), :shift),
              s(:send,
                s(:lvar, :node), :full_name))),
          s(:send, nil, :assert_empty,
            s(:lvar, :order)))),
      s(:def, :test_tsort_each_child,
        s(:args),
        s(:begin,
          s(:send, nil, :util_diamond),
          s(:lvasgn, :order,
            s(:array,
              s(:str, "a-2"))),
          s(:block,
            s(:send,
              s(:ivar, :@deplist), :tsort_each_child,
              s(:ivar, :@b1)),
            s(:args,
              s(:arg, :node)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :order), :shift),
              s(:send,
                s(:lvar, :node), :full_name))),
          s(:send, nil, :assert_empty,
            s(:lvar, :order)))),
      s(:def, :util_diamond,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@c2), :add_dependency,
            s(:str, "a"),
            s(:str, ">= 2")),
          s(:send,
            s(:ivar, :@d1), :add_dependency,
            s(:str, "b")),
          s(:send,
            s(:ivar, :@deplist), :add,
            s(:ivar, :@a1),
            s(:ivar, :@a2),
            s(:ivar, :@b1),
            s(:ivar, :@c2),
            s(:ivar, :@d1)))))))
