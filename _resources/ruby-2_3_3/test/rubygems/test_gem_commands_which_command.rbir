s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/which_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsWhichCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Specification), :reset),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :WhichCommand), :new)))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:send, nil, :util_foo_bar),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "foo_bar"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:ivar, :@foo_bar), :full_gem_path)),
              s(:str, "/lib/foo_bar.rb\n")),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_execute_directory,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "directory"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :MockGemUi), :TermError)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Can.t find ruby library file or shared library directory\\n"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_execute_one_missing,
        s(:args),
        s(:begin,
          s(:send, nil, :util_foo_bar),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "foo_bar"),
              s(:str, "missinglib"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :MockGemUi), :TermError)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:ivar, :@foo_bar), :full_gem_path)),
              s(:str, "/lib/foo_bar.rb\n")),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Can.t find ruby library file or shared library missinglib\\n"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_execute_missing,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "missinglib"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :MockGemUi), :TermError)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Can.t find ruby library file or shared library missinglib\\n"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :util_foo_bar,
        s(:args),
        s(:begin,
          s(:lvasgn, :files,
            s(:array,
              s(:str, "lib/foo_bar.rb"),
              s(:str, "lib/directory/baz.rb"),
              s(:str, "Rakefile"))),
          s(:ivasgn, :@foo_bar,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "foo_bar")),
              s(:args,
                s(:arg, :gem)),
              s(:send,
                s(:lvar, :gem), :files=,
                s(:lvar, :files)))),
          s(:send, nil, :install_specs,
            s(:ivar, :@foo_bar)),
          s(:block,
            s(:send,
              s(:lvar, :files), :each),
            s(:args,
              s(:arg, :file)),
            s(:begin,
              s(:lvasgn, :filename,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:send,
                    s(:ivar, :@foo_bar), :full_gem_path),
                  s(:lvar, :file))),
              s(:send,
                s(:const, nil, :FileUtils), :mkdir_p,
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:lvar, :filename))),
              s(:send,
                s(:const, nil, :FileUtils), :touch,
                s(:lvar, :filename)))))))))
