s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/source")),
  s(:class,
    s(:const, nil, :TestGemSourceGit),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@name),
              s(:ivasgn, :@version),
              s(:ivasgn, :@repository),
              s(:ivasgn, :@head)),
            s(:send, nil, :git_gem)),
          s(:ivasgn, :@hash,
            s(:send,
              s(:const,
                s(:const, nil, :Digest), :SHA1), :hexdigest,
              s(:ivar, :@repository))),
          s(:ivasgn, :@source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "master"),
              s(:false))))),
      s(:def, :test_base_dir,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:str, "bundler")),
            s(:send,
              s(:ivar, :@source), :base_dir)),
          s(:send,
            s(:ivar, :@source), :root_dir=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:dstr,
                s(:begin,
                  s(:ivar, :@gemhome)),
                s(:str, "2")),
              s(:str, "bundler")),
            s(:send,
              s(:ivar, :@source), :base_dir)))),
      s(:def, :test_checkout,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :checkout),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:ivar, :@source), :install_dir),
              s(:str, "a.gemspec"))))),
      s(:def, :test_checkout_master,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@repository)),
            s(:args),
            s(:begin,
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "checkout"),
                s(:str, "-q"),
                s(:str, "-b"),
                s(:str, "other")),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "mv"),
                s(:str, "a.gemspec"),
                s(:str, "b.gemspec")),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "commit"),
                s(:str, "-q"),
                s(:str, "-a"),
                s(:str, "-m"),
                s(:str, "rename gemspec")),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "checkout"),
                s(:str, "-q"),
                s(:str, "master")))),
          s(:ivasgn, :@source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "other"),
              s(:false))),
          s(:send,
            s(:ivar, :@source), :checkout),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:ivar, :@source), :install_dir),
              s(:str, "b.gemspec"))))),
      s(:def, :test_checkout_local,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :remote=,
            s(:false)),
          s(:send,
            s(:ivar, :@source), :checkout),
          s(:lvasgn, :install_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:str, "bundler"),
              s(:str, "gems"),
              s(:dstr,
                s(:str, "a-"),
                s(:begin,
                  s(:send,
                    s(:ivar, :@head), :[],
                    s(:irange,
                      s(:int, 0),
                      s(:int, 11))))))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :install_dir),
              s(:str, "a.gemspec"))))),
      s(:def, :test_checkout_local_cached,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :cache),
          s(:send,
            s(:ivar, :@source), :remote=,
            s(:false)),
          s(:send,
            s(:ivar, :@source), :checkout),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:ivar, :@source), :install_dir),
              s(:str, "a.gemspec"))))),
      s(:def, :test_checkout_submodules,
        s(:args),
        s(:begin,
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "master"),
              s(:true))),
          s(:send, nil, :git_gem,
            s(:str, "b")),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:str, "git/a")),
            s(:args),
            s(:begin,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Util), :silent_system,
                s(:ivar, :@git),
                s(:str, "submodule"),
                s(:str, "--quiet"),
                s(:str, "add"),
                s(:send,
                  s(:const, nil, :File), :expand_path,
                  s(:str, "../b")),
                s(:str, "b")),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "commit"),
                s(:str, "--quiet"),
                s(:str, "-m"),
                s(:str, "add submodule b")))),
          s(:send,
            s(:lvar, :source), :checkout),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :source), :install_dir),
              s(:str, "a.gemspec"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :source), :install_dir),
              s(:str, "b/b.gemspec"))))),
      s(:def, :test_cache,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@source), :cache)),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@source), :repo_cache_dir)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:send,
                s(:ivar, :@source), :repo_cache_dir)),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:ivar, :@head),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Util), :popen,
                  s(:ivar, :@git),
                  s(:str, "rev-parse"),
                  s(:str, "master")), :strip))))),
      s(:def, :test_cache_local,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :remote=,
            s(:false)),
          s(:send,
            s(:ivar, :@source), :cache),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@source), :repo_cache_dir)))),
      s(:def, :test_dir_shortref,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :cache),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@head), :[],
              s(:irange,
                s(:int, 0),
                s(:int, 11))),
            s(:send,
              s(:ivar, :@source), :dir_shortref)))),
      s(:def, :test_download,
        s(:args),
        s(:send, nil, :refute,
          s(:send,
            s(:ivar, :@source), :download,
            s(:nil),
            s(:nil)))),
      s(:def, :test_equals2,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@source),
            s(:ivar, :@source)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@source),
            s(:send,
              s(:ivar, :@source), :dup)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:send,
                s(:ivar, :@source), :name),
              s(:send,
                s(:ivar, :@source), :repository),
              s(:str, "other"),
              s(:false))),
          s(:send, nil, :refute_equal,
            s(:ivar, :@source),
            s(:lvar, :source)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:send,
                s(:ivar, :@source), :name),
              s(:str, "repo/other"),
              s(:send,
                s(:ivar, :@source), :reference),
              s(:false))),
          s(:send, nil, :refute_equal,
            s(:ivar, :@source),
            s(:lvar, :source)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:str, "b"),
              s(:send,
                s(:ivar, :@source), :repository),
              s(:send,
                s(:ivar, :@source), :reference),
              s(:false))),
          s(:send, nil, :refute_equal,
            s(:ivar, :@source),
            s(:lvar, :source)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:send,
                s(:ivar, :@source), :name),
              s(:send,
                s(:ivar, :@source), :repository),
              s(:send,
                s(:ivar, :@source), :reference),
              s(:true))),
          s(:send, nil, :refute_equal,
            s(:ivar, :@source),
            s(:lvar, :source)))),
      s(:def, :test_install_dir,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :cache),
          s(:lvasgn, :expected,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:str, "bundler"),
              s(:str, "gems"),
              s(:dstr,
                s(:str, "a-"),
                s(:begin,
                  s(:send,
                    s(:ivar, :@head), :[],
                    s(:irange,
                      s(:int, 0),
                      s(:int, 11))))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@source), :install_dir)))),
      s(:def, :test_install_dir_local,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :remote=,
            s(:false)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@source), :install_dir)))),
      s(:def, :test_repo_cache_dir,
        s(:args),
        s(:begin,
          s(:lvasgn, :expected,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:str, "cache"),
              s(:str, "bundler"),
              s(:str, "git"),
              s(:dstr,
                s(:str, "a-"),
                s(:begin,
                  s(:ivar, :@hash))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@source), :repo_cache_dir)),
          s(:send,
            s(:ivar, :@source), :root_dir=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:lvasgn, :expected,
            s(:send,
              s(:const, nil, :File), :join,
              s(:dstr,
                s(:begin,
                  s(:ivar, :@gemhome)),
                s(:str, "2")),
              s(:str, "cache"),
              s(:str, "bundler"),
              s(:str, "git"),
              s(:dstr,
                s(:str, "a-"),
                s(:begin,
                  s(:ivar, :@hash))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@source), :repo_cache_dir)))),
      s(:def, :test_rev_parse,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@source), :cache),
          s(:send, nil, :assert_equal,
            s(:ivar, :@head),
            s(:send,
              s(:ivar, :@source), :rev_parse)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@repository)),
            s(:args),
            s(:send, nil, :system,
              s(:ivar, :@git),
              s(:str, "checkout"),
              s(:str, "--quiet"),
              s(:str, "-b"),
              s(:str, "other"))),
          s(:lvasgn, :master_head,
            s(:ivar, :@head)),
          s(:send, nil, :git_gem,
            s(:str, "a"),
            s(:int, 2)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "other"),
              s(:false))),
          s(:send,
            s(:lvar, :source), :cache),
          s(:send, nil, :refute_equal,
            s(:lvar, :master_head),
            s(:send,
              s(:lvar, :source), :rev_parse)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "nonexistent"),
              s(:false))),
          s(:send,
            s(:lvar, :source), :cache),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :Exception)),
              s(:args),
              s(:block,
                s(:send, nil, :capture_subprocess_io),
                s(:args),
                s(:send,
                  s(:lvar, :source), :rev_parse)))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "unable to find reference nonexistent in "),
              s(:begin,
                s(:ivar, :@repository))),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_root_dir,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :dir),
            s(:send,
              s(:ivar, :@source), :root_dir)),
          s(:send,
            s(:ivar, :@source), :root_dir=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2")),
            s(:send,
              s(:ivar, :@source), :root_dir)))),
      s(:def, :test_spaceship,
        s(:args),
        s(:begin,
          s(:lvasgn, :git,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:str, "a"),
              s(:str, "git/a"),
              s(:str, "master"),
              s(:false))),
          s(:lvasgn, :remote,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :installed,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Installed), :new)),
          s(:lvasgn, :vendor,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Vendor), :new,
              s(:str, "vendor/foo"))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :git), :<=>,
              s(:lvar, :git)),
            s(:str, "git    <=> git")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :git), :<=>,
              s(:lvar, :remote)),
            s(:str, "git    <=> remote")),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :remote), :<=>,
              s(:lvar, :git)),
            s(:str, "remote <=> git")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :git), :<=>,
              s(:lvar, :installed)),
            s(:str, "git       <=> installed")),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :installed), :<=>,
              s(:lvar, :git)),
            s(:str, "installed <=> git")),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :git), :<=>,
              s(:lvar, :vendor)),
            s(:str, "git       <=> vendor")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :vendor), :<=>,
              s(:lvar, :git)),
            s(:str, "vendor    <=> git")))),
      s(:def, :test_specs,
        s(:args),
        s(:begin,
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "master"),
              s(:true))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:str, "git/a")),
            s(:args),
            s(:begin,
              s(:send,
                s(:const, nil, :FileUtils), :mkdir,
                s(:str, "b")),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:str, "b")),
                s(:args),
                s(:begin,
                  s(:lvasgn, :b,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Specification), :new,
                      s(:str, "b"),
                      s(:int, 1))),
                  s(:block,
                    s(:send, nil, :open,
                      s(:str, "b.gemspec"),
                      s(:str, "w")),
                    s(:args,
                      s(:arg, :io)),
                    s(:send,
                      s(:lvar, :io), :write,
                      s(:send,
                        s(:lvar, :b), :to_ruby))),
                  s(:send, nil, :system,
                    s(:ivar, :@git),
                    s(:str, "add"),
                    s(:str, "b.gemspec")),
                  s(:send, nil, :system,
                    s(:ivar, :@git),
                    s(:str, "commit"),
                    s(:str, "--quiet"),
                    s(:str, "-m"),
                    s(:str, "add b/b.gemspec")))),
              s(:send,
                s(:const, nil, :FileUtils), :touch,
                s(:str, "c.gemspec")),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "add"),
                s(:str, "c.gemspec")),
              s(:send, nil, :system,
                s(:ivar, :@git),
                s(:str, "commit"),
                s(:str, "--quiet"),
                s(:str, "-m"),
                s(:str, "add c.gemspec")))),
          s(:lvasgn, :specs,
            s(:nil)),
          s(:block,
            s(:send, nil, :capture_io),
            s(:args),
            s(:lvasgn, :specs,
              s(:send,
                s(:lvar, :source), :specs))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1"),
              s(:str, "b-1")),
            s(:block,
              s(:send,
                s(:lvar, :specs), :map),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:lvar, :spec), :full_name))),
          s(:lvasgn, :a_spec,
            s(:send,
              s(:lvar, :specs), :shift)),
          s(:lvasgn, :base_dir,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send,
                s(:const, nil, :File), :dirname,
                s(:send,
                  s(:lvar, :source), :install_dir)))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :source), :install_dir),
            s(:send,
              s(:lvar, :a_spec), :full_gem_path)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :source), :install_dir),
              s(:str, "a.gemspec")),
            s(:send,
              s(:lvar, :a_spec), :loaded_from)),
          s(:send, nil, :assert_equal,
            s(:lvar, :base_dir),
            s(:send,
              s(:lvar, :a_spec), :base_dir)),
          s(:lvasgn, :extension_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:str, "bundler"),
              s(:str, "extensions"),
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :local), :to_s),
              s(:send,
                s(:const, nil, :Gem), :extension_api_version),
              s(:dstr,
                s(:str, "a-"),
                s(:begin,
                  s(:send,
                    s(:lvar, :source), :dir_shortref))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :extension_dir),
            s(:send,
              s(:lvar, :a_spec), :extension_dir)),
          s(:lvasgn, :b_spec,
            s(:send,
              s(:lvar, :specs), :shift)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :source), :install_dir),
              s(:str, "b")),
            s(:send,
              s(:lvar, :b_spec), :full_gem_path)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :source), :install_dir),
              s(:str, "b"),
              s(:str, "b.gemspec")),
            s(:send,
              s(:lvar, :b_spec), :loaded_from)),
          s(:send, nil, :assert_equal,
            s(:lvar, :base_dir),
            s(:send,
              s(:lvar, :b_spec), :base_dir)),
          s(:send, nil, :assert_equal,
            s(:lvar, :extension_dir),
            s(:send,
              s(:lvar, :b_spec), :extension_dir)))),
      s(:def, :test_specs_local,
        s(:args),
        s(:begin,
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:ivar, :@name),
              s(:ivar, :@repository),
              s(:str, "master"),
              s(:true))),
          s(:send,
            s(:lvar, :source), :remote=,
            s(:false)),
          s(:block,
            s(:send, nil, :capture_io),
            s(:args),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:lvar, :source), :specs))))),
      s(:def, :test_uri,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:send, nil, :URI,
            s(:ivar, :@repository)),
          s(:send,
            s(:ivar, :@source), :uri))),
      s(:def, :test_uri_hash,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@hash),
            s(:send,
              s(:ivar, :@source), :uri_hash)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:str, "a"),
              s(:str, "http://git@example/repo.git"),
              s(:str, "master"),
              s(:false))),
          s(:send, nil, :assert_equal,
            s(:str, "291c4caac7feba8bb64c297987028acb3dde6cfe"),
            s(:send,
              s(:lvar, :source), :uri_hash)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Git), :new,
              s(:str, "a"),
              s(:str, "HTTP://git@EXAMPLE/repo.git"),
              s(:str, "master"),
              s(:false))),
          s(:send, nil, :assert_equal,
            s(:str, "291c4caac7feba8bb64c297987028acb3dde6cfe"),
            s(:send,
              s(:lvar, :source), :uri_hash)))))))
