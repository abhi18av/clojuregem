s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/source_list")),
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemSourceList),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@uri,
            s(:str, "http://example")),
          s(:ivasgn, :@source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@uri))),
          s(:ivasgn, :@sl,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :new)),
          s(:send,
            s(:ivar, :@sl), :<<,
            s(:ivar, :@source)))),
      s(:def, :test_self_from,
        s(:args),
        s(:begin,
          s(:lvasgn, :sl,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :from,
              s(:array,
                s(:ivar, :@uri)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Source), :new,
                s(:ivar, :@uri))),
            s(:send,
              s(:lvar, :sl), :sources)))),
      s(:def, :test_Enumerable,
        s(:args),
        s(:send, nil, :assert_includes,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :SourceList), :ancestors),
          s(:const, nil, :Enumerable))),
      s(:def, :test_append,
        s(:args),
        s(:begin,
          s(:lvasgn, :sl,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :new)),
          s(:lvasgn, :source,
            s(:begin,
              s(:send,
                s(:lvar, :sl), :<<,
                s(:ivar, :@uri)))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :Gem), :Source),
            s(:lvar, :source)),
          s(:send, nil, :assert_kind_of,
            s(:const, nil, :URI),
            s(:send,
              s(:lvar, :source), :uri)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:lvar, :source), :uri), :to_s),
            s(:ivar, :@uri)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :source)),
            s(:send,
              s(:lvar, :sl), :sources)))),
      s(:def, :test_clear,
        s(:args),
        s(:begin,
          s(:lvasgn, :sl,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :new)),
          s(:send,
            s(:lvar, :sl), :<<,
            s(:str, "http://source.example")),
          s(:send,
            s(:lvar, :sl), :clear),
          s(:send, nil, :assert_empty,
            s(:lvar, :sl)))),
      s(:def, :test_replace,
        s(:args),
        s(:begin,
          s(:lvasgn, :sl,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :new)),
          s(:send,
            s(:lvar, :sl), :replace,
            s(:array,
              s(:ivar, :@uri))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@source)),
            s(:send,
              s(:lvar, :sl), :sources)))),
      s(:def, :test_each,
        s(:args),
        s(:block,
          s(:send,
            s(:ivar, :@sl), :each),
          s(:args,
            s(:arg, :x)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@uri),
            s(:lvar, :x)))),
      s(:def, :test_each_source,
        s(:args),
        s(:block,
          s(:send,
            s(:ivar, :@sl), :each_source),
          s(:args,
            s(:arg, :x)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@source),
            s(:lvar, :x)))),
      s(:def, :test_empty?,
        s(:args),
        s(:begin,
          s(:lvasgn, :sl,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :new)),
          s(:send, nil, :assert_empty,
            s(:lvar, :sl)),
          s(:send,
            s(:lvar, :sl), :<<,
            s(:str, "http://source.example")),
          s(:send, nil, :refute_empty,
            s(:lvar, :sl)))),
      s(:def, :test_equal_to_another_list,
        s(:args),
        s(:begin,
          s(:lvasgn, :sl2,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SourceList), :new)),
          s(:send,
            s(:lvar, :sl2), :<<,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@uri))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@sl), :==,
              s(:lvar, :sl2)),
            s(:str, "lists not equal")))),
      s(:def, :test_equal_to_array,
        s(:args),
        s(:send, nil, :assert,
          s(:send,
            s(:ivar, :@sl), :==,
            s(:array,
              s(:ivar, :@uri))),
          s(:str, "lists not equal"))),
      s(:def, :test_to_a,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:send,
            s(:ivar, :@sl), :to_a),
          s(:array,
            s(:ivar, :@uri)))),
      s(:def, :test_include_eh,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@sl), :include?,
              s(:ivar, :@uri)),
            s(:str, "string comparison not working")),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@sl), :include?,
              s(:send,
                s(:const, nil, :URI), :parse,
                s(:ivar, :@uri))),
            s(:str, "uri comparison not working")))),
      s(:def, :test_include_matches_a_source,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@sl), :include?,
              s(:ivar, :@source)),
            s(:str, "source comparison not working")),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@sl), :include?,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Source), :new,
                s(:ivar, :@uri))),
            s(:str, "source comparison not working")))),
      s(:def, :test_delete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@sl), :delete,
            s(:ivar, :@uri)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@sl), :sources),
            s(:array)))),
      s(:def, :test_delete_a_source,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@sl), :delete,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@uri))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@sl), :sources),
            s(:array)))))))
