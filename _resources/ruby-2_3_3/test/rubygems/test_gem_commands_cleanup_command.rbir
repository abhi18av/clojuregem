s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/cleanup_command")),
  s(:send, nil, :require,
    s(:str, "rubygems/installer")),
  s(:class,
    s(:const, nil, :TestGemCommandsCleanupCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :CleanupCommand), :new)),
          s(:ivasgn, :@a_1,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:int, 1))),
          s(:ivasgn, :@a_2,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:int, 2))),
          s(:send, nil, :install_gem,
            s(:ivar, :@a_1)),
          s(:send, nil, :install_gem,
            s(:ivar, :@a_2)))),
      s(:def, :test_handle_options_d,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-d"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :dryrun))))),
      s(:def, :test_handle_options_dry_run,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--dryrun"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :dryrun))))),
      s(:def, :test_handle_options_n,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-n"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :dryrun))))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@a_1), :gem_dir)))),
      s(:def, :test_execute_all_dependencies,
        s(:args),
        s(:begin,
          s(:ivasgn, :@b_1,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "b"),
                s(:int, 1)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "a"),
                s(:str, "1")))),
          s(:ivasgn, :@b_2,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "b"),
                s(:int, 2)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "a"),
                s(:str, "2")))),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_1)),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_2)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@a_1), :gem_dir)),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@b_1), :gem_dir)))),
      s(:def, :test_execute_all,
        s(:args),
        s(:begin,
          s(:lvasgn, :gemhome2,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "gemhome2"))),
          s(:send,
            s(:const, nil, :Gem), :ensure_gem_subdirectories,
            s(:lvar, :gemhome2)),
          s(:send,
            s(:const, nil, :Gem), :use_paths,
            s(:ivar, :@gemhome),
            s(:lvar, :gemhome2)),
          s(:ivasgn, :@b_1,
            s(:send, nil, :util_spec,
              s(:str, "b"),
              s(:int, 1))),
          s(:ivasgn, :@b_2,
            s(:send, nil, :util_spec,
              s(:str, "b"),
              s(:int, 2))),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_1)),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_2)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :assert_equal,
            s(:ivar, :@gemhome),
            s(:send,
              s(:const, nil, :Gem), :dir),
            s(:str, "GEM_HOME")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@gemhome),
              s(:lvar, :gemhome2)),
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :path), :sort),
            s(:str, "GEM_PATH")),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@a_1), :gem_dir)),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@b_1), :gem_dir)))),
      s(:def, :test_execute_all_user,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@a_1_1)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1.1"))),
          s(:ivasgn, :@a_1_1,
            s(:send, nil, :install_gem,
              s(:ivar, :@a_1_1))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Specification), :dirs=,
            s(:array,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:send,
                s(:const, nil, :Gem), :user_dir))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@a_1), :gem_dir)),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@a_1_1), :gem_dir)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@a_1), :gem_dir)),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:ivar, :@a_1_1), :gem_dir)))),
      s(:if,
        s(:send, nil, :win_platform?), nil,
        s(:def, :test_execute_all_user_no_sudo,
          s(:args),
          s(:ensure,
            s(:begin,
              s(:send,
                s(:const, nil, :FileUtils), :chmod,
                s(:int, 365),
                s(:ivar, :@gemhome)),
              s(:masgn,
                s(:mlhs,
                  s(:ivasgn, :@a_1_1)),
                s(:send, nil, :util_gem,
                  s(:str, "a"),
                  s(:str, "1.1"))),
              s(:ivasgn, :@a_1_1,
                s(:send, nil, :install_gem,
                  s(:ivar, :@a_1_1),
                  s(:hash,
                    s(:pair,
                      s(:sym, :user_install),
                      s(:true))))),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Specification), :dirs=,
                s(:array,
                  s(:send,
                    s(:const, nil, :Gem), :dir),
                  s(:send,
                    s(:const, nil, :Gem), :user_dir))),
              s(:send, nil, :assert_path_exists,
                s(:send,
                  s(:ivar, :@a_1), :gem_dir)),
              s(:send, nil, :assert_path_exists,
                s(:send,
                  s(:ivar, :@a_1_1), :gem_dir)),
              s(:send,
                s(:send,
                  s(:ivar, :@cmd), :options), :[]=,
                s(:sym, :args),
                s(:array,
                  s(:str, "a"))),
              s(:send,
                s(:ivar, :@cmd), :execute),
              s(:send, nil, :assert_path_exists,
                s(:send,
                  s(:ivar, :@a_1), :gem_dir)),
              s(:send, nil, :refute_path_exists,
                s(:send,
                  s(:ivar, :@a_1_1), :gem_dir))),
            s(:send,
              s(:const, nil, :FileUtils), :chmod,
              s(:int, 493),
              s(:ivar, :@gemhome))))),
      s(:def, :test_execute_dry_run,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :dryrun),
            s(:true)),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@a_1), :gem_dir)))),
      s(:def, :test_execute_keeps_older_versions_with_deps,
        s(:args),
        s(:begin,
          s(:ivasgn, :@b_1,
            s(:send, nil, :util_spec,
              s(:str, "b"),
              s(:int, 1))),
          s(:ivasgn, :@b_2,
            s(:send, nil, :util_spec,
              s(:str, "b"),
              s(:int, 2))),
          s(:ivasgn, :@c,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "c"),
                s(:int, 1)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "b"),
                s(:str, "1")))),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_1)),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_2)),
          s(:send, nil, :install_gem,
            s(:ivar, :@c)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:ivar, :@b_1), :gem_dir)))),
      s(:def, :test_execute_ignore_default_gem_verbose,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :verbose=,
            s(:sym, :really)),
          s(:ivasgn, :@b_1,
            s(:send, nil, :util_spec,
              s(:str, "b"),
              s(:int, 1))),
          s(:ivasgn, :@b_default,
            s(:send, nil, :new_default_spec,
              s(:str, "b"),
              s(:str, "2"))),
          s(:ivasgn, :@b_2,
            s(:send, nil, :util_spec,
              s(:str, "b"),
              s(:int, 3))),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_1)),
          s(:send, nil, :install_default_specs,
            s(:ivar, :@b_default)),
          s(:send, nil, :install_gem,
            s(:ivar, :@b_2)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^Skipped default gems: b-2"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@ui), :error)))))))
