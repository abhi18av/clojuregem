s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/update_command")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :gem,
        s(:str, "rdoc")),
      s(:resbody,
        s(:array,
          s(:const,
            s(:const, nil, :Gem), :LoadError)), nil, nil), nil)),
  s(:class,
    s(:const, nil, :TestGemCommandsUpdateCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send, nil, :common_installer_setup),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :UpdateCommand), :new)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :document),
            s(:array)),
          s(:ivasgn, :@specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "a"),
                  s(:str, "3.a"))))),
          s(:ivasgn, :@a1_path,
            s(:send,
              s(:send,
                s(:ivar, :@specs), :[],
                s(:str, "a-1")), :cache_file)),
          s(:ivasgn, :@a2_path,
            s(:send,
              s(:send,
                s(:ivar, :@specs), :[],
                s(:str, "a-1")), :cache_file)),
          s(:ivasgn, :@a3a_path,
            s(:send,
              s(:send,
                s(:ivar, :@specs), :[],
                s(:str, "a-3.a")), :cache_file)))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Updating a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems updated: a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_multiple,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "ab"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "ab"),
                s(:int, 1)))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Updating a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems updated: a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_system,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:block,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "rubygems-update"),
                s(:int, 9)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :files=,
                s(:array,
                  s(:str, "setup.rb"))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:true)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating rubygems-update"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Installing RubyGems 9"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "RubyGems system software updated"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_system_at_latest,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:block,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "rubygems-update"),
                s(:const,
                  s(:const, nil, :Gem), :VERSION)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :files=,
                s(:array,
                  s(:str, "setup.rb"))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:true)),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :SystemExitException)),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Latest version currently installed. Aborting."),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_system_multiple,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "rubygems-update"),
                  s(:int, 8)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :files=,
                  s(:array,
                    s(:str, "setup.rb")))),
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "rubygems-update"),
                  s(:int, 9)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :files=,
                  s(:array,
                    s(:str, "setup.rb")))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:true)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating rubygems-update"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Installing RubyGems 9"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "RubyGems system software updated"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_system_specific,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "rubygems-update"),
                  s(:int, 8)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :files=,
                  s(:array,
                    s(:str, "setup.rb")))),
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "rubygems-update"),
                  s(:int, 9)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :files=,
                  s(:array,
                    s(:str, "setup.rb")))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:str, "8")),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating rubygems-update"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Installing RubyGems 8"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "RubyGems system software updated"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_system_specifically_to_latest_version,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "rubygems-update"),
                  s(:int, 8)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :files=,
                  s(:array,
                    s(:str, "setup.rb")))),
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :download,
                  s(:str, "rubygems-update"),
                  s(:int, 9)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :files=,
                  s(:array,
                    s(:str, "setup.rb")))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:str, "9")),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating rubygems-update"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Installing RubyGems 9"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "RubyGems system software updated"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_system_with_gems,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "gem"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:true)),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :TermError)),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_equal,
            s(:str, "ERROR:  Gem names are not allowed with the --system option\n"),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_execute_dependencies,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2),
                s(:hash,
                  s(:pair,
                    s(:str, "b"),
                    s(:int, 2)),
                  s(:pair,
                    s(:str, "c"),
                    s(:int, 2)))),
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "b"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "c"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1),
                s(:hash,
                  s(:pair,
                    s(:str, "c"),
                    s(:str, "1.2")))),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "c"),
                s(:str, "1.2")))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Specification), :reset),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Updating a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems updated: a b c"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_rdoc,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :<=,
              s(:str, "1.8.7")),
            s(:send, nil, :skip), nil),
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)))),
          s(:send,
            s(:const, nil, :Gem), :done_installing,
            s(:block_pass,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :RDoc), :method,
                s(:sym, :generation_hook)))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :document),
            s(:array,
              s(:str, "rdoc"),
              s(:str, "ri"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:send, nil, :wait_for_child_process_to_exit),
          s(:lvasgn, :a2,
            s(:send,
              s(:ivar, :@specs), :[],
              s(:str, "a-2"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :a2), :doc_dir),
              s(:str, "rdoc"))))),
      s(:def, :test_execute_named,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Updating a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems updated: a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_named_some_up_to_date,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "b"),
                s(:int, 2)))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"),
              s(:str, "b"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Updating a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems updated: a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems already up-to-date: b"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_named_up_to_date,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :spec,
              s(:str, "a"),
              s(:int, 2))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Nothing to update"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_named_up_to_date_prerelease,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:str, "3.a")),
              s(:send,
                s(:lvar, :fetcher), :gem,
                s(:str, "a"),
                s(:int, 2)))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :prerelease),
            s(:true)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Updating a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Gems updated: a"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_up_to_date,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :gem,
              s(:str, "a"),
              s(:int, 2))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :out,
            s(:send,
              s(:send,
                s(:ivar, :@ui), :output), :split,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "Updating installed gems"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "Nothing to update"),
            s(:send,
              s(:lvar, :out), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :out)))),
      s(:def, :test_execute_user_install,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--user-install"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :installer,
            s(:send,
              s(:ivar, :@cmd), :installer)),
          s(:lvasgn, :user_install,
            s(:send,
              s(:lvar, :installer), :instance_variable_get,
              s(:sym, :@user_install))),
          s(:send, nil, :assert,
            s(:lvar, :user_install),
            s(:str, "user_install must be set on the installer")))),
      s(:def, :test_fetch_remote_gems,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2))))),
          s(:lvasgn, :expected,
            s(:array,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :NameTuple), :new,
                  s(:str, "a"),
                  s(:send, nil, :v,
                    s(:int, 2)),
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY)),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Source), :new,
                  s(:ivar, :@gem_repo))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@cmd), :fetch_remote_gems,
              s(:send,
                s(:lvar, :specs), :[],
                s(:str, "a-1")))))),
      s(:def, :test_fetch_remote_gems_error,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :sources), :replace,
            s(:array,
              s(:str, "http://nonexistent.example"))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :RemoteFetcher), :FetchError)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :fetch_remote_gems,
              s(:send,
                s(:ivar, :@specs), :[],
                s(:str, "a-1")))))),
      s(:def, :test_fetch_remote_gems_mismatch,
        s(:args),
        s(:begin,
          s(:lvasgn, :platform,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Platform), :new,
              s(:str, "x86-freebsd9"))),
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :spec,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :fetcher), :spec,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:block,
                  s(:send,
                    s(:lvar, :fetcher), :spec,
                    s(:str, "a"),
                    s(:int, 2)),
                  s(:args,
                    s(:arg, :s)),
                  s(:send,
                    s(:lvar, :s), :platform=,
                    s(:lvar, :platform)))))),
          s(:lvasgn, :expected,
            s(:array,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :NameTuple), :new,
                  s(:str, "a"),
                  s(:send, nil, :v,
                    s(:int, 2)),
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY)),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Source), :new,
                  s(:ivar, :@gem_repo))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@cmd), :fetch_remote_gems,
              s(:send,
                s(:lvar, :specs), :[],
                s(:str, "a-1")))))),
      s(:def, :test_fetch_remote_gems_prerelease,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:str, "3.a"))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :prerelease),
            s(:true)),
          s(:lvasgn, :expected,
            s(:array,
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :NameTuple), :new,
                  s(:str, "a"),
                  s(:send, nil, :v,
                    s(:int, 2)),
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY)),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Source), :new,
                  s(:ivar, :@gem_repo))),
              s(:array,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :NameTuple), :new,
                  s(:str, "a"),
                  s(:send, nil, :v,
                    s(:str, "3.a")),
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :RUBY)),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Source), :new,
                  s(:ivar, :@gem_repo))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@cmd), :fetch_remote_gems,
              s(:send,
                s(:lvar, :specs), :[],
                s(:str, "a-1")))))),
      s(:def, :test_handle_options_system,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--system"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:sym, :args),
                s(:array)),
              s(:pair,
                s(:sym, :document),
                s(:array,
                  s(:str, "rdoc"),
                  s(:str, "ri"))),
              s(:pair,
                s(:sym, :force),
                s(:false)),
              s(:pair,
                s(:sym, :system),
                s(:true)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@cmd), :options)))),
      s(:def, :test_handle_options_system_non_version,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raises,
            s(:const, nil, :ArgumentError)),
          s(:args),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--system"),
              s(:str, "non-version"))))),
      s(:def, :test_handle_options_system_specific,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--system"),
              s(:str, "1.3.7"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:sym, :args),
                s(:array)),
              s(:pair,
                s(:sym, :document),
                s(:array,
                  s(:str, "rdoc"),
                  s(:str, "ri"))),
              s(:pair,
                s(:sym, :force),
                s(:false)),
              s(:pair,
                s(:sym, :system),
                s(:str, "1.3.7")))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@cmd), :options)))),
      s(:def, :test_update_gem_prerelease,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:str, "1.a")),
              s(:send,
                s(:lvar, :fetcher), :gem,
                s(:str, "a"),
                s(:str, "1.b")))),
          s(:send,
            s(:ivar, :@cmd), :update_gem,
            s(:str, "a"),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :new,
              s(:str, "= 1.b"))),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:ivar, :@cmd), :updated)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :installer), :instance_variable_get,
              s(:sym, :@prerelease))))),
      s(:def, :test_update_gem_unresolved_dependency,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:block,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :add_dependency,
                  s(:str, "b"),
                  s(:str, ">= 2"))),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "b"),
                s(:int, 1)))),
          s(:send,
            s(:ivar, :@cmd), :update_gem,
            s(:str, "a")),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@cmd), :updated)))),
      s(:def, :test_update_rubygems_arguments,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:true)),
          s(:lvasgn, :arguments,
            s(:send,
              s(:ivar, :@cmd), :update_rubygems_arguments)),
          s(:send, nil, :assert_equal,
            s(:str, "--prefix"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :prefix),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "--no-rdoc"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "--no-ri"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "--previous-version"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const, nil, :Gem), :VERSION),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :arguments)))),
      s(:def, :test_update_rubygems_arguments_1_8_x,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :system),
            s(:str, "1.8.26")),
          s(:lvasgn, :arguments,
            s(:send,
              s(:ivar, :@cmd), :update_rubygems_arguments)),
          s(:send, nil, :assert_equal,
            s(:str, "--prefix"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :prefix),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "--no-rdoc"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_equal,
            s(:str, "--no-ri"),
            s(:send,
              s(:lvar, :arguments), :shift)),
          s(:send, nil, :assert_empty,
            s(:lvar, :arguments)))))))
