s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/installer_test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/install_update_options")),
  s(:send, nil, :require,
    s(:str, "rubygems/command")),
  s(:send, nil, :require,
    s(:str, "rubygems/dependency_installer")),
  s(:class,
    s(:const, nil, :TestGemInstallUpdateOptions),
    s(:const,
      s(:const, nil, :Gem), :InstallerTestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Command), :new,
              s(:str, "dummy"),
              s(:str, "dummy"),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :DependencyInstaller), :DEFAULT_OPTIONS))),
          s(:send,
            s(:ivar, :@cmd), :extend,
            s(:const,
              s(:const, nil, :Gem), :InstallUpdateOptions)),
          s(:send,
            s(:ivar, :@cmd), :add_install_update_options))),
      s(:def, :test_add_install_update_options,
        s(:args),
        s(:begin,
          s(:lvasgn, :args,
            s(:array,
              s(:str, "--document"),
              s(:str, "--build-root"),
              s(:str, "build_root"),
              s(:str, "--format-exec"),
              s(:str, "--ignore-dependencies"),
              s(:str, "--rdoc"),
              s(:str, "--ri"),
              s(:str, "-E"),
              s(:str, "-f"),
              s(:str, "-i"),
              s(:str, "/install_to"),
              s(:str, "-w"),
              s(:str, "--vendor"),
              s(:str, "--post-install-message"))),
          s(:if,
            s(:defined?,
              s(:const,
                s(:const, nil, :OpenSSL), :SSL)),
            s(:send,
              s(:lvar, :args), :concat,
              s(:array,
                s(:str, "-P"),
                s(:str, "HighSecurity"))), nil),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@cmd), :handles?,
              s(:lvar, :args))))),
      s(:def, :test_build_root,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--build-root"),
              s(:str, "build_root"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:str, "build_root")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :build_root))))),
      s(:def, :test_doc,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--doc"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@cmd), :options), :[],
                s(:sym, :document)), :sort)))),
      s(:def, :test_doc_rdoc,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--doc=rdoc"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "rdoc")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--doc"),
              s(:str, "ri"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_doc_rdoc_ri,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--doc=rdoc,ri"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "rdoc"),
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_doc_no,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--no-doc"))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_document,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--document"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@cmd), :options), :[],
                s(:sym, :document)), :sort)))),
      s(:def, :test_document_no,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--no-document"))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_document_rdoc,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--document=rdoc"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "rdoc")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--document"),
              s(:str, "ri"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_rdoc,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--rdoc"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "rdoc"),
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@cmd), :options), :[],
                s(:sym, :document)), :sort)))),
      s(:def, :test_rdoc_no,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--no-rdoc"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "ri")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_ri,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--no-ri"))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :document))))),
      s(:def, :test_security_policy,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const,
                s(:const, nil, :OpenSSL), :SSL)), nil,
            s(:send, nil, :skip,
              s(:str, "openssl is missing"))),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-P"),
              s(:str, "HighSecurity"))),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Security), :HighSecurity),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :security_policy))))),
      s(:def, :test_security_policy_unknown,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :add_install_update_options),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :handle_options,
              s(:array,
                s(:str, "-P"),
                s(:str, "UnknownSecurity")))))),
      s(:def, :test_user_install_enabled,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--user-install"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :user_install))),
          s(:ivasgn, :@installer,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Installer), :at,
              s(:ivar, :@gem),
              s(:send,
                s(:ivar, :@cmd), :options))),
          s(:send,
            s(:ivar, :@installer), :install),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :user_dir),
              s(:str, "gems"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Gem), :user_dir),
              s(:str, "gems"),
              s(:send,
                s(:ivar, :@spec), :full_name))))),
      s(:def, :test_user_install_disabled_read_only,
        s(:args),
        s(:ensure,
          s(:if,
            s(:send, nil, :win_platform?),
            s(:send, nil, :skip,
              s(:str, "test_user_install_disabled_read_only test skipped on MS Windows")),
            s(:begin,
              s(:send,
                s(:ivar, :@cmd), :handle_options,
                s(:array,
                  s(:str, "--no-user-install"))),
              s(:send, nil, :refute,
                s(:send,
                  s(:send,
                    s(:ivar, :@cmd), :options), :[],
                  s(:sym, :user_install))),
              s(:send,
                s(:const, nil, :FileUtils), :chmod,
                s(:int, 493),
                s(:ivar, :@userhome)),
              s(:send,
                s(:const, nil, :FileUtils), :chmod,
                s(:int, 0),
                s(:ivar, :@gemhome)),
              s(:send,
                s(:const, nil, :Gem), :use_paths,
                s(:ivar, :@gemhome),
                s(:ivar, :@userhome)),
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const, nil, :Gem), :FilePermissionError)),
                s(:args),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Installer), :at,
                    s(:ivar, :@gem),
                    s(:send,
                      s(:ivar, :@cmd), :options)), :install)))),
          s(:send,
            s(:const, nil, :FileUtils), :chmod,
            s(:int, 493),
            s(:ivar, :@gemhome)))),
      s(:def, :test_vendor,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--vendor"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :vendor))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :vendor_dir),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :install_dir))))),
      s(:def, :test_vendor_missing,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :orig_vendordir,
              s(:send,
                s(:const,
                  s(:const, nil, :RbConfig), :CONFIG), :[],
                s(:str, "vendordir"))),
            s(:send,
              s(:const,
                s(:const, nil, :RbConfig), :CONFIG), :delete,
              s(:str, "vendordir")),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const, nil, :OptionParser), :InvalidOption)),
                s(:args),
                s(:send,
                  s(:ivar, :@cmd), :handle_options,
                  s(:array,
                    s(:str, "--vendor"))))),
            s(:send, nil, :assert_equal,
              s(:str, "invalid option: --vendor your platform is not supported"),
              s(:send,
                s(:lvar, :e), :message)),
            s(:send, nil, :refute,
              s(:send,
                s(:send,
                  s(:ivar, :@cmd), :options), :[],
                s(:sym, :vendor))),
            s(:send, nil, :refute,
              s(:send,
                s(:send,
                  s(:ivar, :@cmd), :options), :[],
                s(:sym, :install_dir)))),
          s(:send,
            s(:const,
              s(:const, nil, :RbConfig), :CONFIG), :[]=,
            s(:str, "vendordir"),
            s(:lvar, :orig_vendordir)))),
      s(:def, :test_post_install_message_no,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--no-post-install-message"))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :post_install_message))))),
      s(:def, :test_post_install_message,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--post-install-message"))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :post_install_message))))))))
