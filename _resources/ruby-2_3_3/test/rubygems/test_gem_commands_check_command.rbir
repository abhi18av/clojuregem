s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/check_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsCheckCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :CheckCommand), :new)))),
      s(:def, :gem,
        s(:args,
          s(:arg, :name)),
        s(:begin,
          s(:lvasgn, :spec,
            s(:block,
              s(:send, nil, :quick_gem,
                s(:lvar, :name)),
              s(:args,
                s(:arg, :gem)),
              s(:send,
                s(:lvar, :gem), :files=,
                s(:array,
                  s(:dstr,
                    s(:str, "lib/"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ".rb")),
                  s(:str, "Rakefile"))))),
          s(:send, nil, :write_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:splat,
                s(:array,
                  s(:str, "gems"),
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :spec), :full_name))),
                  s(:str, "lib"),
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ".rb")))))),
          s(:send, nil, :write_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:splat,
                s(:array,
                  s(:str, "gems"),
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :spec), :full_name))),
                  s(:str, "Rakefile"))))),
          s(:lvar, :spec))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "check"),
            s(:send,
              s(:ivar, :@cmd), :command)),
          s(:send, nil, :assert_equal,
            s(:str, "gem check"),
            s(:send,
              s(:ivar, :@cmd), :program_name)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Check"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@cmd), :summary)))),
      s(:def, :test_handle_options,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--no-alien"),
              s(:str, "--no-gems"),
              s(:str, "--doctor"),
              s(:str, "--dry-run"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :doctor))),
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :alien))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :dry_run))),
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :gems))))),
      s(:def, :test_handle_options_defaults,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :alien))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :gems))),
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :doctor))),
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :dry_run))))),
      s(:def, :test_doctor,
        s(:args),
        s(:begin,
          s(:send, nil, :gem,
            s(:str, "a")),
          s(:lvasgn, :b,
            s(:send, nil, :gem,
              s(:str, "b"))),
          s(:send,
            s(:const, nil, :FileUtils), :rm,
            s(:send,
              s(:lvar, :b), :spec_file)),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:lvar, :b), :gem_dir)),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:lvar, :b), :spec_file)),
          s(:send,
            s(:const, nil, :Gem), :use_paths,
            s(:ivar, :@gemhome)),
          s(:block,
            s(:send, nil, :capture_io),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :doctor))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:lvar, :b), :gem_dir)),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:lvar, :b), :spec_file)))))))
