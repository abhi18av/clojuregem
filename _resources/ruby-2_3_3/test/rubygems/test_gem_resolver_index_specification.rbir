s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/available_set")),
  s(:class,
    s(:const, nil, :TestGemResolverIndexSpecification),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSet), :new)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :version,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:str, "3.0.3"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
              s(:lvar, :set),
              s(:str, "rails"),
              s(:lvar, :version),
              s(:lvar, :source),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:send, nil, :assert_equal,
            s(:str, "rails"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:lvar, :version),
            s(:send,
              s(:lvar, :spec), :version)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY),
            s(:send,
              s(:lvar, :spec), :platform)),
          s(:send, nil, :assert_equal,
            s(:lvar, :source),
            s(:send,
              s(:lvar, :spec), :source)))),
      s(:def, :test_initialize_platform,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSet), :new)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Local), :new)),
          s(:lvasgn, :version,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:str, "3.0.3"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
              s(:lvar, :set),
              s(:str, "rails"),
              s(:lvar, :version),
              s(:lvar, :source),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :local))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :local), :to_s),
            s(:send,
              s(:lvar, :spec), :platform)))),
      s(:def, :test_install,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :gem,
              s(:str, "a"),
              s(:int, 2))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSet), :new)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
              s(:lvar, :set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 2)),
              s(:lvar, :source),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:lvasgn, :called,
            s(:false)),
          s(:block,
            s(:send,
              s(:lvar, :spec), :install,
              s(:hash)),
            s(:args,
              s(:arg, :installer)),
            s(:lvasgn, :called,
              s(:lvar, :installer))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@gemhome),
              s(:str, "specifications"),
              s(:str, "a-2.gemspec"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :Gem), :Installer),
            s(:lvar, :called)))),
      s(:def, :test_spec,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :spec,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:block,
                  s(:send,
                    s(:lvar, :fetcher), :spec,
                    s(:str, "a"),
                    s(:int, 2)),
                  s(:args,
                    s(:arg, :s)),
                  s(:send,
                    s(:lvar, :s), :platform=,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :local)))))),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :version,
            s(:send, nil, :v,
              s(:int, 2))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSet), :new)),
          s(:lvasgn, :i_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
              s(:lvar, :set),
              s(:str, "a"),
              s(:lvar, :version),
              s(:lvar, :source),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :local))),
          s(:lvasgn, :spec,
            s(:send,
              s(:lvar, :i_spec), :spec)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:lvar, :specs), :[],
                s(:dstr,
                  s(:str, "a-2-"),
                  s(:begin,
                    s(:send,
                      s(:const,
                        s(:const, nil, :Gem), :Platform), :local)))), :full_name),
            s(:send,
              s(:lvar, :spec), :full_name)))),
      s(:def, :test_spec_local,
        s(:args),
        s(:begin,
          s(:lvasgn, :a_2_p,
            s(:block,
              s(:send, nil, :util_spec,
                s(:str, "a"),
                s(:int, 2)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :platform=,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :local)))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Package), :build,
            s(:lvar, :a_2_p)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Local), :new)),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :InstallerSet), :new,
              s(:sym, :local))),
          s(:send,
            s(:send,
              s(:lvar, :set), :always_install), :<<,
            s(:lvar, :a_2_p)),
          s(:lvasgn, :i_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
              s(:lvar, :set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 2)),
              s(:lvar, :source),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :local))),
          s(:lvasgn, :spec,
            s(:send,
              s(:lvar, :i_spec), :spec)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :a_2_p), :full_name),
            s(:send,
              s(:lvar, :spec), :full_name)))))))
