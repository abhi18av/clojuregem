s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/help_command")),
  s(:send, nil, :require,
    s(:str, "rubygems/package")),
  s(:send, nil, :require,
    s(:str, "rubygems/command_manager")),
  s(:send, nil, :require,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:str, "../rubygems_plugin"),
      s(:str, "(string)"))),
  s(:class,
    s(:const, nil, :TestGemCommandsHelpCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :HelpCommand), :new)),
          s(:if,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Commands), :const_defined?,
              s(:sym, :InterruptCommand)), nil,
            s(:send, nil, :load,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "../rubygems_plugin.rb"),
                s(:str, "(string)")))))),
      s(:def, :test_gem_help_bad,
        s(:args),
        s(:block,
          s(:send, nil, :util_gem,
            s(:str, "bad")),
          s(:args,
            s(:arg, :out),
            s(:arg, :err)),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:lvar, :out)),
            s(:send, nil, :assert_match,
              s(:str, "Unknown command bad"),
              s(:lvar, :err))))),
      s(:def, :test_gem_help_gem_dependencies,
        s(:args),
        s(:block,
          s(:send, nil, :util_gem,
            s(:str, "gem_dependencies")),
          s(:args,
            s(:arg, :out),
            s(:arg, :err)),
          s(:begin,
            s(:send, nil, :assert_match,
              s(:str, "gem.deps.rb"),
              s(:lvar, :out)),
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:lvar, :err))))),
      s(:def, :test_gem_help_platforms,
        s(:args),
        s(:block,
          s(:send, nil, :util_gem,
            s(:str, "platforms")),
          s(:args,
            s(:arg, :out),
            s(:arg, :err)),
          s(:begin,
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "x86-freebsd"),
                s(:regopt)),
              s(:lvar, :out)),
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:lvar, :err))))),
      s(:def, :test_gem_help_commands,
        s(:args),
        s(:begin,
          s(:lvasgn, :mgr,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :CommandManager), :new)),
          s(:block,
            s(:send, nil, :util_gem,
              s(:str, "commands")),
            s(:args,
              s(:arg, :out),
              s(:arg, :err)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :mgr), :command_names), :each),
                s(:args,
                  s(:arg, :cmd)),
                s(:send, nil, :assert_match,
                  s(:regexp,
                    s(:str, "\\s+"),
                    s(:begin,
                      s(:lvar, :cmd)),
                    s(:str, "\\s+\\S+"),
                    s(:regopt)),
                  s(:lvar, :out))),
              s(:if,
                s(:defined?,
                  s(:const,
                    s(:const, nil, :OpenSSL), :SSL)),
                s(:begin,
                  s(:send, nil, :assert_empty,
                    s(:lvar, :err)),
                  s(:send, nil, :refute_match,
                    s(:str, "No command found for "),
                    s(:lvar, :out))), nil))))),
      s(:def, :test_gem_no_args_shows_help,
        s(:args),
        s(:block,
          s(:send, nil, :util_gem),
          s(:args,
            s(:arg, :out),
            s(:arg, :err)),
          s(:begin,
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "Usage:"),
                s(:regopt)),
              s(:lvar, :out)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "gem install"),
                s(:regopt)),
              s(:lvar, :out)),
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:lvar, :err))))),
      s(:def, :util_gem,
        s(:args,
          s(:restarg, :args)),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:lvar, :args)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:yield,
            s(:send,
              s(:ivar, :@ui), :output),
            s(:send,
              s(:ivar, :@ui), :error)))))))
