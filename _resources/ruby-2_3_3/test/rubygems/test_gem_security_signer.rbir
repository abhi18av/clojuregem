s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :SSL)), nil,
    s(:send, nil, :warn,
      s(:str, "Skipping Gem::Security::Signer tests.  openssl not found."))),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :OpenSSL), :SSL)),
    s(:class,
      s(:const, nil, :TestGemSecuritySigner),
      s(:const,
        s(:const, nil, :Gem), :TestCase),
      s(:begin,
        s(:casgn, nil, :ALTERNATE_KEY,
          s(:send, nil, :load_key,
            s(:str, "alternate"))),
        s(:casgn, nil, :CHILD_KEY,
          s(:send, nil, :load_key,
            s(:str, "child"))),
        s(:casgn, nil, :GRANDCHILD_KEY,
          s(:send, nil, :load_key,
            s(:str, "grandchild"))),
        s(:casgn, nil, :CHILD_CERT,
          s(:send, nil, :load_cert,
            s(:str, "child"))),
        s(:casgn, nil, :GRANDCHILD_CERT,
          s(:send, nil, :load_cert,
            s(:str, "grandchild"))),
        s(:casgn, nil, :EXPIRED_CERT,
          s(:send, nil, :load_cert,
            s(:str, "expired"))),
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:zsuper),
            s(:ivasgn, :@cert_file,
              s(:const, nil, :PUBLIC_CERT)))),
        s(:def, :test_initialize,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:nil))),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :signer), :key)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :signer), :cert_chain)))),
        s(:def, :test_initialize_cert_chain_empty,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:const, nil, :PUBLIC_KEY),
                s(:array))),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:lvar, :signer), :cert_chain)))),
        s(:def, :test_initialize_cert_chain_mixed,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:array,
                  s(:ivar, :@cert_file),
                  s(:const, nil, :CHILD_CERT)))),
            s(:send, nil, :assert_equal,
              s(:block,
                s(:send,
                  s(:array,
                    s(:const, nil, :PUBLIC_CERT),
                    s(:const, nil, :CHILD_CERT)), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :signer), :cert_chain), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem))))),
        s(:def, :test_initialize_cert_chain_invalid,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :OpenSSL), :X509), :CertificateError)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Security), :Signer), :new,
              s(:nil),
              s(:array,
                s(:str, "garbage"))))),
        s(:def, :test_initialize_cert_chain_path,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:array,
                  s(:ivar, :@cert_file)))),
            s(:send, nil, :assert_equal,
              s(:block,
                s(:send,
                  s(:array,
                    s(:const, nil, :PUBLIC_CERT)), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :signer), :cert_chain), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem))))),
        s(:def, :test_initialize_default,
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem"))),
            s(:lvasgn, :private_key_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem"),
                s(:str, "gem-private_key.pem"))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :PRIVATE_KEY),
              s(:lvar, :private_key_path)),
            s(:lvasgn, :public_cert_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem"),
                s(:str, "gem-public_cert.pem"))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :PUBLIC_CERT),
              s(:lvar, :public_cert_path)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:nil))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :PRIVATE_KEY), :to_pem),
              s(:send,
                s(:send,
                  s(:lvar, :signer), :key), :to_pem)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:send,
                  s(:const, nil, :PUBLIC_CERT), :to_pem)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :signer), :cert_chain), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem))))),
        s(:def, :test_initialize_key_path,
          s(:args),
          s(:begin,
            s(:lvasgn, :key_file,
              s(:const, nil, :PRIVATE_KEY_PATH)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:lvar, :key_file),
                s(:nil))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :PRIVATE_KEY), :to_s),
              s(:send,
                s(:send,
                  s(:lvar, :signer), :key), :to_s)))),
        s(:def, :test_initialize_encrypted_key_path,
          s(:args),
          s(:begin,
            s(:lvasgn, :key_file,
              s(:const, nil, :ENCRYPTED_PRIVATE_KEY_PATH)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:lvar, :key_file),
                s(:nil),
                s(:const, nil, :PRIVATE_KEY_PASSPHRASE))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :ENCRYPTED_PRIVATE_KEY), :to_s),
              s(:send,
                s(:send,
                  s(:lvar, :signer), :key), :to_s)))),
        s(:def, :test_extract_name,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:nil))),
            s(:send, nil, :assert_equal,
              s(:str, "child@example"),
              s(:send,
                s(:lvar, :signer), :extract_name,
                s(:const, nil, :CHILD_CERT))))),
        s(:def, :test_load_cert_chain,
          s(:args),
          s(:begin,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Security), :trust_dir), :trust_cert,
              s(:const, nil, :PUBLIC_CERT)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:array))),
            s(:send,
              s(:send,
                s(:lvar, :signer), :cert_chain), :replace,
              s(:array,
                s(:const, nil, :CHILD_CERT))),
            s(:send,
              s(:lvar, :signer), :load_cert_chain),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:send,
                  s(:const, nil, :PUBLIC_CERT), :to_pem),
                s(:send,
                  s(:const, nil, :CHILD_CERT), :to_pem)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :signer), :cert_chain), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem))))),
        s(:def, :test_load_cert_chain_broken,
          s(:args),
          s(:begin,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Security), :trust_dir), :trust_cert,
              s(:const, nil, :CHILD_CERT)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:array))),
            s(:send,
              s(:send,
                s(:lvar, :signer), :cert_chain), :replace,
              s(:array,
                s(:const, nil, :GRANDCHILD_CERT))),
            s(:send,
              s(:lvar, :signer), :load_cert_chain),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:send,
                  s(:const, nil, :CHILD_CERT), :to_pem),
                s(:send,
                  s(:const, nil, :GRANDCHILD_CERT), :to_pem)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :signer), :cert_chain), :map),
                s(:args,
                  s(:arg, :c)),
                s(:send,
                  s(:lvar, :c), :to_pem))))),
        s(:def, :test_sign,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:const, nil, :PRIVATE_KEY),
                s(:array,
                  s(:const, nil, :PUBLIC_CERT)))),
            s(:lvasgn, :signature,
              s(:send,
                s(:lvar, :signer), :sign,
                s(:str, "hello"))),
            s(:lvasgn, :expected,
              s(:dstr,
                s(:str, "pxSf9ScaghbMNmNp8fqSJj7BiIGpbuoOVYCOM3TJNH9STLILA5z3xKp3gM6w\n"),
                s(:str, "VJ7aGsh9KCP485ftS3J9Kb/lKJsyoSkkRSQ5QG+LnyZwMuWlThPDR5o7q6al\n"),
                s(:str, "0oxE7vvbbqxFqcT4ojWIkwxJxOluFWmt2D8I6QTX2vLAn09y+Kl66AOrT7R5\n"),
                s(:str, "UinbXkz04VwcNvkBqJyko3yWxFKiGNpntZQg4jIw4L+h97EOaZp8H96udzQH\n"),
                s(:str, "Da3K0YZ6FsqLDFNnWAFhve3kmpE3CludpvDqH0piq0zKqnOiqAcvICIpPaJP\n"),
                s(:str, "c7NM7KZZjj7G++SXjYTEI1PHSA7aFQ/i/+qSUvx+Pg==\n"))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:send,
                s(:array,
                  s(:lvar, :signature)), :pack,
                s(:str, "m"))))),
        s(:def, :test_sign_expired,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:const, nil, :PRIVATE_KEY),
                s(:array,
                  s(:const, nil, :EXPIRED_CERT)))),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Exception)),
              s(:args),
              s(:send,
                s(:lvar, :signer), :sign,
                s(:str, "hello"))))),
        s(:def, :test_sign_expired_auto_update,
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem")),
              s(:hash,
                s(:pair,
                  s(:sym, :mode),
                  s(:int, 448)))),
            s(:lvasgn, :private_key_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem"),
                s(:str, "gem-private_key.pem"))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :PRIVATE_KEY),
              s(:lvar, :private_key_path)),
            s(:lvasgn, :cert_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem"),
                s(:str, "gem-public_cert.pem"))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :EXPIRED_CERT),
              s(:lvar, :cert_path)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:const, nil, :PRIVATE_KEY),
                s(:array,
                  s(:const, nil, :EXPIRED_CERT)))),
            s(:send,
              s(:lvar, :signer), :sign,
              s(:str, "hello")),
            s(:lvasgn, :cert,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :OpenSSL), :X509), :Certificate), :new,
                s(:send,
                  s(:const, nil, :File), :read,
                  s(:lvar, :cert_path)))),
            s(:send, nil, :refute_equal,
              s(:send,
                s(:const, nil, :EXPIRED_CERT), :to_pem),
              s(:send,
                s(:lvar, :cert), :to_pem)),
            s(:send, nil, :assert_in_delta,
              s(:send,
                s(:const, nil, :Time), :now),
              s(:send,
                s(:lvar, :cert), :not_before),
              s(:int, 10)),
            s(:lvasgn, :expiry,
              s(:send,
                s(:send,
                  s(:const, nil, :EXPIRED_CERT), :not_after), :strftime,
                s(:str, "%Y%m%d%H%M%S"))),
            s(:lvasgn, :expired_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem"),
                s(:dstr,
                  s(:str, "gem-public_cert.pem.expired."),
                  s(:begin,
                    s(:lvar, :expiry))))),
            s(:send, nil, :assert_path_exists,
              s(:lvar, :expired_path)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :EXPIRED_CERT), :to_pem),
              s(:send,
                s(:const, nil, :File), :read,
                s(:lvar, :expired_path))))),
        s(:def, :test_sign_expired_auto_update_exists,
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, ".gem")),
              s(:hash,
                s(:pair,
                  s(:sym, :mode),
                  s(:int, 448)))),
            s(:lvasgn, :expiry,
              s(:send,
                s(:send,
                  s(:const, nil, :EXPIRED_CERT), :not_after), :strftime,
                s(:str, "%Y%m%d%H%M%S"))),
            s(:lvasgn, :expired_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:dstr,
                  s(:str, "gem-public_cert.pem.expired."),
                  s(:begin,
                    s(:lvar, :expiry))))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :EXPIRED_CERT),
              s(:lvar, :expired_path)),
            s(:lvasgn, :private_key_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, "gem-private_key.pem"))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :PRIVATE_KEY),
              s(:lvar, :private_key_path)),
            s(:lvasgn, :cert_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :user_home),
                s(:str, "gem-public_cert.pem"))),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Security), :write,
              s(:const, nil, :EXPIRED_CERT),
              s(:lvar, :cert_path)),
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:const, nil, :PRIVATE_KEY),
                s(:array,
                  s(:const, nil, :EXPIRED_CERT)))),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Security), :Exception)),
                s(:args),
                s(:send,
                  s(:lvar, :signer), :sign,
                  s(:str, "hello")))),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "certificate /CN=nobody/DC=example not valid"),
                s(:regopt)),
              s(:send,
                s(:lvar, :e), :message)))),
        s(:def, :test_sign_no_key,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:nil),
                s(:nil))),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :signer), :sign,
                s(:str, "stuff"))))),
        s(:def, :test_sign_wrong_key,
          s(:args),
          s(:begin,
            s(:lvasgn, :signer,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Signer), :new,
                s(:const, nil, :ALTERNATE_KEY),
                s(:array,
                  s(:const, nil, :PUBLIC_CERT)))),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Security), :Exception)),
              s(:args),
              s(:send,
                s(:lvar, :signer), :sign,
                s(:str, "hello"))))))), nil))
