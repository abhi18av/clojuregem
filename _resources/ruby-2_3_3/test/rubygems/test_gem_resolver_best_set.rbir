s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemResolverBestSet),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@DR,
            s(:const,
              s(:const, nil, :Gem), :Resolver)))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:lvar, :set), :sets)))),
      s(:def, :test_find_all_index,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "b"),
                s(:int, 1)))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:lvar, :found), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :test_find_all_fallback,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :spec,
              s(:str, "a"),
              s(:int, 1))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:lvasgn, :api_uri,
            s(:send,
              s(:send, nil, :URI,
                s(:ivar, :@gem_repo)), :+,
              s(:str, "./api/v1/dependencies"))),
          s(:send,
            s(:send,
              s(:lvar, :set), :sets), :<<,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :APISet), :new,
              s(:lvar, :api_uri))),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:lvar, :found), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :test_find_all_local,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "b"),
                s(:int, 1)))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:send,
            s(:lvar, :set), :remote=,
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))),
          s(:send, nil, :assert_empty,
            s(:lvar, :found)))),
      s(:def, :test_prefetch,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :spec,
              s(:str, "a"),
              s(:int, 1))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:send,
            s(:lvar, :set), :prefetch,
            s(:array)),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:lvar, :set), :sets)))),
      s(:def, :test_prefetch_local,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :spec,
              s(:str, "a"),
              s(:int, 1))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:send,
            s(:lvar, :set), :remote=,
            s(:false)),
          s(:send,
            s(:lvar, :set), :prefetch,
            s(:array)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:lvar, :set), :sets)))),
      s(:def, :test_replace_failed_api_set,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:lvasgn, :api_uri,
            s(:send,
              s(:send, nil, :URI,
                s(:ivar, :@gem_repo)), :+,
              s(:str, "./api/v1/dependencies"))),
          s(:lvasgn, :api_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :APISet), :new,
              s(:lvar, :api_uri))),
          s(:send,
            s(:send,
              s(:lvar, :set), :sets), :<<,
            s(:lvar, :api_set)),
          s(:lvasgn, :error_uri,
            s(:send,
              s(:lvar, :api_uri), :+,
              s(:str, "?gems=a"))),
          s(:lvasgn, :error,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :RemoteFetcher), :FetchError), :new,
              s(:str, "bogus"),
              s(:lvar, :error_uri))),
          s(:send,
            s(:lvar, :set), :replace_failed_api_set,
            s(:lvar, :error)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:lvar, :set), :sets), :size)),
          s(:send, nil, :refute_includes,
            s(:send,
              s(:lvar, :set), :sets),
            s(:lvar, :api_set)),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :IndexSet),
            s(:send,
              s(:send,
                s(:lvar, :set), :sets), :first)))),
      s(:def, :test_replace_failed_api_set_no_api_set,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :BestSet), :new)),
          s(:lvasgn, :index_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSet), :new,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Source), :new,
                s(:ivar, :@gem_repo)))),
          s(:send,
            s(:send,
              s(:lvar, :set), :sets), :<<,
            s(:lvar, :index_set)),
          s(:lvasgn, :error,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :RemoteFetcher), :FetchError), :new,
              s(:str, "bogus"),
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :RemoteFetcher), :FetchError)),
              s(:args),
              s(:send,
                s(:lvar, :set), :replace_failed_api_set,
                s(:lvar, :error)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :error),
            s(:lvar, :e)))))))
