s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/yank_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsYankCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :YankCommand), :new)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :host),
            s(:str, "http://example")),
          s(:ivasgn, :@fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RemoteFetcher), :fetcher)),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :rubygems_api_key=,
            s(:str, "key")),
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :api_keys), :[]=,
            s(:sym, :KEY),
            s(:str, "other")))),
      s(:def, :test_handle_options,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "a"),
              s(:str, "--version"),
              s(:str, "1.0"),
              s(:str, "--platform"),
              s(:str, "x86-darwin"),
              s(:str, "-k"),
              s(:str, "KEY"),
              s(:str, "--host"),
              s(:str, "HOST"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :args))),
          s(:send, nil, :assert_equal,
            s(:sym, :KEY),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :key))),
          s(:send, nil, :assert_equal,
            s(:str, "HOST"),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :host))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :platform))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :req,
              s(:str, "= 1.0")),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :version))))),
      s(:def, :test_handle_options_missing_argument,
        s(:args),
        s(:block,
          s(:send,
            s(:array,
              s(:str, "-v"),
              s(:str, "--version"),
              s(:str, "-p"),
              s(:str, "--platform")), :each),
          s(:args,
            s(:arg, :option)),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const, nil, :OptionParser), :MissingArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :handle_options,
              s(:array,
                s(:str, "a"),
                s(:dstr,
                  s(:begin,
                    s(:lvar, :option)))))))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:lvasgn, :yank_uri,
            s(:str, "http://example/api/v1/gems/yank")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:lvar, :yank_uri),
            s(:array,
              s(:str, "Successfully yanked"),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :added_platform),
            s(:true)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :version),
            s(:send, nil, :req,
              s(:str, "= 1.0"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Yanking gem from http://example"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Successfully yanked"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:lvasgn, :platform,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :platforms), :[],
              s(:int, 1))),
          s(:lvasgn, :body,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@fetcher), :last_request), :body), :split,
                s(:str, "&")), :sort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "gem_name=a"),
              s(:dstr,
                s(:str, "platform="),
                s(:begin,
                  s(:lvar, :platform))),
              s(:str, "version=1.0")),
            s(:lvar, :body)),
          s(:send, nil, :assert_equal,
            s(:str, "key"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :yank_uri)),
            s(:send,
              s(:ivar, :@fetcher), :paths)))),
      s(:def, :test_execute_key,
        s(:args),
        s(:begin,
          s(:lvasgn, :yank_uri,
            s(:str, "http://example/api/v1/gems/yank")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:lvar, :yank_uri),
            s(:array,
              s(:str, "Successfully yanked"),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :version),
            s(:send, nil, :req,
              s(:str, "= 1.0"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :key),
            s(:sym, :KEY)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:lvasgn, :body,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@fetcher), :last_request), :body), :split,
                s(:str, "&")), :sort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "gem_name=a"),
              s(:str, "version=1.0")),
            s(:lvar, :body)),
          s(:send, nil, :assert_equal,
            s(:str, "other"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))))),
      s(:def, :test_execute_host,
        s(:args),
        s(:begin,
          s(:lvasgn, :host,
            s(:str, "https://other.example")),
          s(:lvasgn, :yank_uri,
            s(:dstr,
              s(:begin,
                s(:lvar, :host)),
              s(:str, "/api/v1/gems/yank"))),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:lvar, :yank_uri),
            s(:array,
              s(:str, "Successfully yanked"),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :version),
            s(:send, nil, :req,
              s(:str, "= 1.0"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :host),
            s(:lvar, :host)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Yanking gem from https://other.example"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Successfully yanked"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:lvasgn, :body,
            s(:send,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@fetcher), :last_request), :body), :split,
                s(:str, "&")), :sort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "gem_name=a"),
              s(:str, "version=1.0")),
            s(:lvar, :body)),
          s(:send, nil, :assert_equal,
            s(:str, "key"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :yank_uri)),
            s(:send,
              s(:ivar, :@fetcher), :paths)))))))
