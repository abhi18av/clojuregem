s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/server_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsServerCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :ServerCommand), :new)))),
      s(:def, :test_handle_options,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "-p"),
              s(:str, "8808"),
              s(:str, "--no-daemon"))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :daemon))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :gemdir))),
          s(:send, nil, :assert_equal,
            s(:int, 8808),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :port))),
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "-p"),
              s(:str, "9999"),
              s(:str, "-d"),
              s(:str, "/nonexistent"),
              s(:str, "--daemon"))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :daemon))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "/nonexistent"))),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :gemdir))),
          s(:send, nil, :assert_equal,
            s(:int, 9999),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :port))))),
      s(:def, :test_handle_options_gemdir,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "--dir"),
              s(:str, "a"),
              s(:str, "--dir"),
              s(:str, "b"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "a")),
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "b"))),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :gemdir))))),
      s(:def, :test_handle_options_port,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "-p"),
              s(:str, "0"))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :port))),
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "-p"),
              s(:str, "65535"))),
          s(:send, nil, :assert_equal,
            s(:int, 65535),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :port))),
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "-p"),
              s(:str, "discard"))),
          s(:send, nil, :assert_equal,
            s(:int, 9),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :port))),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :OptionParser), :InvalidArgument)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :send,
                s(:sym, :handle_options),
                s(:array,
                  s(:str, "-p"),
                  s(:str, "nonexistent"))))),
          s(:send, nil, :assert_equal,
            s(:str, "invalid argument: -p nonexistent: no such named service"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :OptionParser), :InvalidArgument)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :send,
                s(:sym, :handle_options),
                s(:array,
                  s(:str, "-p"),
                  s(:str, "65536"))))),
          s(:send, nil, :assert_equal,
            s(:str, "invalid argument: -p 65536: not a port number"),
            s(:send,
              s(:lvar, :e), :message)))))))
