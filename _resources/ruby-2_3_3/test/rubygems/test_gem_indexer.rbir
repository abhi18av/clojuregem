s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/indexer")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :Builder), :XChar)), nil,
    s(:if,
      s(:gvar, :$VERBOSE),
      s(:send, nil, :warn,
        s(:str, "Gem::Indexer tests are being skipped.  Install builder gem.")), nil)),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :Builder), :XChar)),
    s(:class,
      s(:const, nil, :TestGemIndexer),
      s(:const,
        s(:const, nil, :Gem), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:zsuper),
            s(:send, nil, :util_clear_gems),
            s(:send, nil, :util_make_gems),
            s(:ivasgn, :@d2_0,
              s(:block,
                s(:send, nil, :util_spec,
                  s(:str, "d"),
                  s(:str, "2.0")),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :date=,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :Specification), :TODAY), :-,
                    s(:send,
                      s(:int, 86400), :*,
                      s(:int, 3)))))),
            s(:send, nil, :util_build_gem,
              s(:ivar, :@d2_0)),
            s(:ivasgn, :@d2_0_a,
              s(:send, nil, :util_spec,
                s(:str, "d"),
                s(:str, "2.0.a"))),
            s(:send, nil, :util_build_gem,
              s(:ivar, :@d2_0_a)),
            s(:ivasgn, :@d2_0_b,
              s(:send, nil, :util_spec,
                s(:str, "d"),
                s(:str, "2.0.b"))),
            s(:send, nil, :util_build_gem,
              s(:ivar, :@d2_0_b)),
            s(:ivasgn, :@default,
              s(:send, nil, :new_default_spec,
                s(:str, "default"),
                s(:int, 2))),
            s(:send, nil, :install_default_gems,
              s(:ivar, :@default)),
            s(:ivasgn, :@tempdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "indexer"))),
            s(:lvasgn, :gems,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "gems"))),
            s(:send,
              s(:const, nil, :FileUtils), :mkdir_p,
              s(:lvar, :gems)),
            s(:send,
              s(:const, nil, :FileUtils), :mv,
              s(:send,
                s(:const, nil, :Dir), :[],
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@gemhome),
                  s(:str, "cache"),
                  s(:str, "*.gem"))),
              s(:lvar, :gems)),
            s(:ivasgn, :@indexer,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Indexer), :new,
                s(:ivar, :@tempdir))))),
        s(:def, :test_initialize,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:ivar, :@tempdir),
              s(:send,
                s(:ivar, :@indexer), :dest_directory)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Dir), :tmpdir),
                s(:dstr,
                  s(:str, "gem_generate_index_"),
                  s(:begin,
                    s(:gvar, :$$)))),
              s(:send,
                s(:ivar, :@indexer), :directory)),
            s(:lvasgn, :indexer,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Indexer), :new,
                s(:ivar, :@tempdir))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :indexer), :build_modern)),
            s(:lvasgn, :indexer,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Indexer), :new,
                s(:ivar, :@tempdir),
                s(:hash,
                  s(:pair,
                    s(:sym, :build_modern),
                    s(:true))))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :indexer), :build_modern)))),
        s(:def, :test_build_indices,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@indexer), :make_temp_directories),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :build_indices)),
            s(:lvasgn, :specs_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@indexer), :directory),
                s(:dstr,
                  s(:str, "specs."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:lvasgn, :specs_dump,
              s(:send,
                s(:const, nil, :Gem), :read_binary,
                s(:lvar, :specs_path))),
            s(:lvasgn, :specs,
              s(:send,
                s(:const, nil, :Marshal), :load,
                s(:lvar, :specs_dump))),
            s(:lvasgn, :expected,
              s(:array,
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "a_evil"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "9")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "b"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "c"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1.2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "d"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2.0")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "dep_x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "pl"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "i386-linux")),
                s(:array,
                  s(:str, "x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "ruby")))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :specs)),
            s(:lvasgn, :latest_specs_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:ivar, :@indexer), :directory),
                s(:dstr,
                  s(:str, "latest_specs."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:lvasgn, :latest_specs_dump,
              s(:send,
                s(:const, nil, :Gem), :read_binary,
                s(:lvar, :latest_specs_path))),
            s(:lvasgn, :latest_specs,
              s(:send,
                s(:const, nil, :Marshal), :load,
                s(:lvar, :latest_specs_dump))),
            s(:lvasgn, :expected,
              s(:array,
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "a_evil"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "9")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "b"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "c"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1.2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "d"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2.0")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "dep_x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "pl"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "i386-linux")),
                s(:array,
                  s(:str, "x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1")),
                  s(:str, "ruby")))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :latest_specs),
              s(:str, "latest_specs")))),
        s(:def, :test_generate_index,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:lvasgn, :quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "quick"))),
            s(:lvasgn, :marshal_quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :quickdir),
                s(:dstr,
                  s(:str, "Marshal."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :quickdir))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :marshal_quickdir))),
            s(:send, nil, :assert_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a1), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :assert_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a2), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :marshal_quickdir),
              s(:send,
                s(:const, nil, :File), :basename,
                s(:send,
                  s(:ivar, :@c1_2), :spec_file))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".gz"))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".gz"))))),
        s(:def, :test_generate_index_modern,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@indexer), :build_modern=,
              s(:true)),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:send, nil, :refute_indexed,
              s(:ivar, :@tempdir),
              s(:str, "yaml")),
            s(:send, nil, :refute_indexed,
              s(:ivar, :@tempdir),
              s(:str, "yaml.Z")),
            s(:send, nil, :refute_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "Marshal."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :refute_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "Marshal."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".Z"))),
            s(:lvasgn, :quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "quick"))),
            s(:lvasgn, :marshal_quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :quickdir),
                s(:dstr,
                  s(:str, "Marshal."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :quickdir)),
              s(:str, "quickdir should be directory")),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :marshal_quickdir))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:str, "index")),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:str, "index.rz")),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:str, "latest_index")),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:str, "latest_index.rz")),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a1), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a2), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@b2), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@c1_2), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:ivar, :@pl1), :original_name)),
                s(:str, ".gemspec.rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@pl1), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :assert_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a1), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :assert_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a2), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@c1_2), :spec_file))))),
            s(:send, nil, :refute_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@c1_2), :spec_file))))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".gz"))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".gz"))))),
        s(:def, :test_generate_index_modern_back_to_back,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@indexer), :build_modern=,
              s(:true)),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:ivasgn, :@indexer,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Indexer), :new,
                s(:ivar, :@tempdir))),
            s(:send,
              s(:ivar, :@indexer), :build_modern=,
              s(:true)),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:lvasgn, :quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "quick"))),
            s(:lvasgn, :marshal_quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :quickdir),
                s(:dstr,
                  s(:str, "Marshal."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :quickdir))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :marshal_quickdir))),
            s(:send, nil, :assert_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a1), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :assert_indexed,
              s(:lvar, :marshal_quickdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:send,
                      s(:ivar, :@a2), :spec_file))),
                s(:str, ".rz"))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".gz"))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)))),
            s(:send, nil, :assert_indexed,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:str, "latest_specs."),
                s(:begin,
                  s(:ivar, :@marshal_version)),
                s(:str, ".gz"))))),
        s(:def, :test_generate_index_ui,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Generating Marshal quick index gemspecs for 12 gems$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Complete$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Generating specs index$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Generating latest specs index$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Generating prerelease specs index$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Complete$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^Compressing indices$"),
                s(:regopt)),
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:send,
                s(:ivar, :@ui), :error)))),
        s(:def, :test_generate_index_specs,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:lvasgn, :specs_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:dstr,
                  s(:str, "specs."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:lvasgn, :specs_dump,
              s(:send,
                s(:const, nil, :Gem), :read_binary,
                s(:lvar, :specs_path))),
            s(:lvasgn, :specs,
              s(:send,
                s(:const, nil, :Marshal), :load,
                s(:lvar, :specs_dump))),
            s(:lvasgn, :expected,
              s(:array,
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 2)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "a_evil"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 9)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "b"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 2)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "c"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1.2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "d"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2.0")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "dep_x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "pl"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "i386-linux")),
                s(:array,
                  s(:str, "x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "ruby")))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :specs)),
            s(:send, nil, :assert_same,
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 0)), :first),
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 1)), :first),
              s(:str, "identical names not identical")),
            s(:send, nil, :assert_same,
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 0)), :[],
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, -1)), :[],
                s(:int, 1)),
              s(:str, "identical versions not identical")),
            s(:send, nil, :assert_same,
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 0)), :last),
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 1)), :last),
              s(:str, "identical platforms not identical")),
            s(:send, nil, :refute_same,
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 1)), :[],
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:lvar, :specs), :[],
                  s(:int, 5)), :[],
                s(:int, 1)),
              s(:str, "different versions not different")))),
        s(:def, :test_generate_index_latest_specs,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:lvasgn, :latest_specs_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:dstr,
                  s(:str, "latest_specs."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:lvasgn, :latest_specs_dump,
              s(:send,
                s(:const, nil, :Gem), :read_binary,
                s(:lvar, :latest_specs_path))),
            s(:lvasgn, :latest_specs,
              s(:send,
                s(:const, nil, :Marshal), :load,
                s(:lvar, :latest_specs_dump))),
            s(:lvasgn, :expected,
              s(:array,
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 2)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "a_evil"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 9)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "b"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 2)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "c"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "1.2")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "d"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2.0")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "dep_x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "pl"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "i386-linux")),
                s(:array,
                  s(:str, "x"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:int, 1)),
                  s(:str, "ruby")))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :latest_specs)),
            s(:send, nil, :assert_same,
              s(:send,
                s(:send,
                  s(:lvar, :latest_specs), :[],
                  s(:int, 0)), :[],
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:lvar, :latest_specs), :[],
                  s(:int, 2)), :[],
                s(:int, 1)),
              s(:str, "identical versions not identical")),
            s(:send, nil, :assert_same,
              s(:send,
                s(:send,
                  s(:lvar, :latest_specs), :[],
                  s(:int, 0)), :last),
              s(:send,
                s(:send,
                  s(:lvar, :latest_specs), :[],
                  s(:int, 1)), :last),
              s(:str, "identical platforms not identical")))),
        s(:def, :test_generate_index_prerelease_specs,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:lvasgn, :prerelease_specs_path,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:dstr,
                  s(:str, "prerelease_specs."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:lvasgn, :prerelease_specs_dump,
              s(:send,
                s(:const, nil, :Gem), :read_binary,
                s(:lvar, :prerelease_specs_path))),
            s(:lvasgn, :prerelease_specs,
              s(:send,
                s(:const, nil, :Marshal), :load,
                s(:lvar, :prerelease_specs_dump))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:array,
                  s(:str, "a"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "3.a")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "d"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2.0.a")),
                  s(:str, "ruby")),
                s(:array,
                  s(:str, "d"),
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Version), :new,
                    s(:str, "2.0.b")),
                  s(:str, "ruby"))),
              s(:lvar, :prerelease_specs)))),
        s(:def, :with_system_gems,
          s(:args),
          s(:begin,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :reset),
            s(:lvasgn, :sys_gem,
              s(:send, nil, :util_spec,
                s(:str, "systemgem"),
                s(:str, "1.0"))),
            s(:send, nil, :util_build_gem,
              s(:lvar, :sys_gem)),
            s(:send, nil, :install_default_gems,
              s(:lvar, :sys_gem)),
            s(:yield),
            s(:send, nil, :util_remove_gem,
              s(:lvar, :sys_gem)))),
        s(:def, :test_update_index,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@indexer), :generate_index)),
            s(:lvasgn, :quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "quick"))),
            s(:lvasgn, :marshal_quickdir,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :quickdir),
                s(:dstr,
                  s(:str, "Marshal."),
                  s(:begin,
                    s(:ivar, :@marshal_version))))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :quickdir))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :directory?,
                s(:lvar, :marshal_quickdir))),
            s(:ivasgn, :@d2_1,
              s(:send, nil, :util_spec,
                s(:str, "d"),
                s(:str, "2.1"))),
            s(:send, nil, :util_build_gem,
              s(:ivar, :@d2_1)),
            s(:ivasgn, :@d2_1_tuple,
              s(:array,
                s(:send,
                  s(:ivar, :@d2_1), :name),
                s(:send,
                  s(:ivar, :@d2_1), :version),
                s(:send,
                  s(:ivar, :@d2_1), :original_platform))),
            s(:ivasgn, :@d2_1_a,
              s(:send, nil, :util_spec,
                s(:str, "d"),
                s(:str, "2.2.a"))),
            s(:send, nil, :util_build_gem,
              s(:ivar, :@d2_1_a)),
            s(:ivasgn, :@d2_1_a_tuple,
              s(:array,
                s(:send,
                  s(:ivar, :@d2_1_a), :name),
                s(:send,
                  s(:ivar, :@d2_1_a), :version),
                s(:send,
                  s(:ivar, :@d2_1_a), :original_platform))),
            s(:lvasgn, :gems,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "gems"))),
            s(:send,
              s(:const, nil, :FileUtils), :mv,
              s(:send,
                s(:ivar, :@d2_1), :cache_file),
              s(:lvar, :gems)),
            s(:send,
              s(:const, nil, :FileUtils), :mv,
              s(:send,
                s(:ivar, :@d2_1_a), :cache_file),
              s(:lvar, :gems)),
            s(:block,
              s(:send, nil, :with_system_gems),
              s(:args),
              s(:begin,
                s(:block,
                  s(:send, nil, :use_ui,
                    s(:ivar, :@ui)),
                  s(:args),
                  s(:send,
                    s(:ivar, :@indexer), :update_index)),
                s(:send, nil, :assert_indexed,
                  s(:lvar, :marshal_quickdir),
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:const, nil, :File), :basename,
                        s(:send,
                          s(:ivar, :@d2_1), :spec_file))),
                    s(:str, ".rz"))),
                s(:lvasgn, :specs_index,
                  s(:send,
                    s(:const, nil, :Marshal), :load,
                    s(:send,
                      s(:const, nil, :Gem), :read_binary,
                      s(:send,
                        s(:ivar, :@indexer), :dest_specs_index)))),
                s(:send, nil, :assert_includes,
                  s(:lvar, :specs_index),
                  s(:ivar, :@d2_1_tuple)),
                s(:send, nil, :refute_includes,
                  s(:lvar, :specs_index),
                  s(:ivar, :@d2_1_a_tuple)),
                s(:lvasgn, :latest_specs_index,
                  s(:send,
                    s(:const, nil, :Marshal), :load,
                    s(:send,
                      s(:const, nil, :Gem), :read_binary,
                      s(:send,
                        s(:ivar, :@indexer), :dest_latest_specs_index)))),
                s(:send, nil, :assert_includes,
                  s(:lvar, :latest_specs_index),
                  s(:ivar, :@d2_1_tuple)),
                s(:send, nil, :assert_includes,
                  s(:lvar, :latest_specs_index),
                  s(:array,
                    s(:send,
                      s(:ivar, :@d2_0), :name),
                    s(:send,
                      s(:ivar, :@d2_0), :version),
                    s(:send,
                      s(:ivar, :@d2_0), :original_platform))),
                s(:send, nil, :refute_includes,
                  s(:lvar, :latest_specs_index),
                  s(:ivar, :@d2_1_a_tuple)),
                s(:lvasgn, :pre_specs_index,
                  s(:send,
                    s(:const, nil, :Marshal), :load,
                    s(:send,
                      s(:const, nil, :Gem), :read_binary,
                      s(:send,
                        s(:ivar, :@indexer), :dest_prerelease_specs_index)))),
                s(:send, nil, :assert_includes,
                  s(:lvar, :pre_specs_index),
                  s(:ivar, :@d2_1_a_tuple)),
                s(:send, nil, :refute_includes,
                  s(:lvar, :pre_specs_index),
                  s(:ivar, :@d2_1_tuple)))))),
        s(:def, :assert_indexed,
          s(:args,
            s(:arg, :dir),
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :file,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :dir),
                s(:lvar, :name))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:lvar, :file)),
              s(:dstr,
                s(:begin,
                  s(:lvar, :file)),
                s(:str, " does not exist"))))),
        s(:def, :refute_indexed,
          s(:args,
            s(:arg, :dir),
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :file,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :dir),
                s(:lvar, :name))),
            s(:send, nil, :refute,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:lvar, :file)),
              s(:dstr,
                s(:begin,
                  s(:lvar, :file)),
                s(:str, " exists"))))))), nil))
