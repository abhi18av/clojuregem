s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/deprecate")),
  s(:class,
    s(:const, nil, :TestDeprecate),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@original_skip,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Deprecate), :skip=,
            s(:false)))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Deprecate), :skip=,
            s(:ivar, :@original_skip)))),
      s(:def, :test_defaults,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:false),
          s(:ivar, :@original_skip))),
      s(:def, :test_assignment,
        s(:args),
        s(:begin,
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Deprecate), :skip=,
            s(:false)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Deprecate), :skip=,
            s(:true)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Deprecate), :skip=,
            s(:nil)),
          s(:send, nil, :assert,
            s(:send,
              s(:array,
                s(:true),
                s(:false)), :include?,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Deprecate), :skip))))),
      s(:def, :test_skip,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip_during),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Deprecate), :skip))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Deprecate), :skip=,
            s(:nil)))),
      s(:class,
        s(:const, nil, :Thing), nil,
        s(:begin,
          s(:send, nil, :extend,
            s(:const,
              s(:const, nil, :Gem), :Deprecate)),
          s(:send, nil, :attr_accessor,
            s(:sym, :message)),
          s(:def, :foo,
            s(:args),
            s(:ivasgn, :@message,
              s(:str, "foo"))),
          s(:def, :bar,
            s(:args),
            s(:ivasgn, :@message,
              s(:str, "bar"))),
          s(:send, nil, :deprecate,
            s(:sym, :foo),
            s(:sym, :bar),
            s(:int, 2099),
            s(:int, 3)))),
      s(:def, :test_deprecated_method_calls_the_old_method,
        s(:args),
        s(:block,
          s(:send, nil, :capture_io),
          s(:args),
          s(:begin,
            s(:lvasgn, :thing,
              s(:send,
                s(:const, nil, :Thing), :new)),
            s(:send,
              s(:lvar, :thing), :foo),
            s(:send, nil, :assert_equal,
              s(:str, "foo"),
              s(:send,
                s(:lvar, :thing), :message))))),
      s(:def, :test_deprecated_method_outputs_a_warning,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :out),
              s(:lvasgn, :err)),
            s(:block,
              s(:send, nil, :capture_io),
              s(:args),
              s(:begin,
                s(:lvasgn, :thing,
                  s(:send,
                    s(:const, nil, :Thing), :new)),
                s(:send,
                  s(:lvar, :thing), :foo)))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:lvar, :out)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Thing#foo is deprecated; use bar instead\\."),
              s(:regopt)),
            s(:lvar, :err)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "on or after 2099-03-01"),
              s(:regopt)),
            s(:lvar, :err)))))))
