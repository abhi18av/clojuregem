s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/package")),
  s(:send, nil, :require,
    s(:str, "rubygems/security")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/fetch_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsFetchCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :FetchCommand), :new)))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:send,
                s(:lvar, :fetcher), :gem,
                s(:str, "a"),
                s(:int, 2)))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "cache")),
            s(:str, "sanity check")),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:lvasgn, :a2,
            s(:send,
              s(:lvar, :specs), :[],
              s(:str, "a-2"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :a2), :file_name)),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :a2), :full_name)),
              s(:str, " not fetched"))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "cache")),
            s(:str, "gem repository directories must not be created")))),
      s(:def, :test_execute_latest,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2))))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "cache")),
            s(:str, "sanity check")),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :version),
            s(:send, nil, :req,
              s(:str, ">= 0.1"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:lvasgn, :a2,
            s(:send,
              s(:lvar, :specs), :[],
              s(:str, "a-2"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :a2), :file_name)),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :a2), :full_name)),
              s(:str, " not fetched"))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "cache")),
            s(:str, "gem repository directories must not be created")))),
      s(:def, :test_execute_prerelease,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:str, "2.a"))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :prerelease),
            s(:true)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:lvasgn, :a2,
            s(:send,
              s(:lvar, :specs), :[],
              s(:str, "a-2"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :a2), :file_name)),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :a2), :full_name)),
              s(:str, " not fetched"))))),
      s(:def, :test_execute_specific_prerelease,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:str, "2.a"))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :prerelease),
            s(:true)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :version),
            s(:str, "2.a")),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:lvasgn, :a2_pre,
            s(:send,
              s(:lvar, :specs), :[],
              s(:str, "a-2.a"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :a2_pre), :file_name)),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :a2_pre), :full_name)),
              s(:str, " not fetched"))))),
      s(:def, :test_execute_version,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:begin,
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :fetcher), :gem,
                  s(:str, "a"),
                  s(:int, 2))))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :version),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :new,
              s(:str, "1"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:lvasgn, :a1,
            s(:send,
              s(:lvar, :specs), :[],
              s(:str, "a-1"))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :a1), :file_name)),
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :a1), :full_name)),
              s(:str, " not fetched"))))))))
