s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/installer")),
  s(:send, nil, :require,
    s(:str, "rubygems/resolver")),
  s(:class,
    s(:const, nil, :TestGemResolverLockSpecification),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@LS,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Resolver), :LockSpecification)),
          s(:ivasgn, :@source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:ivasgn, :@set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :LockSet), :new,
              s(:array,
                s(:ivar, :@source)))))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:ivar, :@LS), :new,
              s(:ivar, :@set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 2)),
              s(:array,
                s(:ivar, :@source)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :v,
              s(:int, 2)),
            s(:send,
              s(:lvar, :spec), :version)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY),
            s(:send,
              s(:lvar, :spec), :platform)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@source),
            s(:send,
              s(:lvar, :spec), :source)))),
      s(:def, :test_add_dependency,
        s(:args),
        s(:begin,
          s(:lvasgn, :l_spec,
            s(:send,
              s(:ivar, :@LS), :new,
              s(:ivar, :@set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 2)),
              s(:array,
                s(:ivar, :@source)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:lvasgn, :b_dep,
            s(:send, nil, :dep,
              s(:str, "b"),
              s(:str, ">= 0"))),
          s(:send,
            s(:lvar, :l_spec), :add_dependency,
            s(:lvar, :b_dep)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :b_dep)),
            s(:send,
              s(:lvar, :l_spec), :dependencies)))),
      s(:def, :test_install,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :download,
              s(:str, "a"),
              s(:int, 2))),
          s(:lvasgn, :spec,
            s(:send,
              s(:ivar, :@LS), :new,
              s(:ivar, :@set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 2)),
              s(:array,
                s(:ivar, :@source)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:lvasgn, :called,
            s(:false)),
          s(:block,
            s(:send,
              s(:lvar, :spec), :install,
              s(:hash)),
            s(:args,
              s(:arg, :installer)),
            s(:lvasgn, :called,
              s(:lvar, :installer))),
          s(:send, nil, :refute_nil,
            s(:lvar, :called)))),
      s(:def, :test_install_installed,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:ivar, :@LS), :new,
              s(:ivar, :@set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 2)),
              s(:array,
                s(:ivar, :@source)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:send,
            s(:const, nil, :FileUtils), :touch,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@gemhome),
              s(:str, "specifications"),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :spec), :spec_name))),
          s(:lvasgn, :called,
            s(:false)),
          s(:block,
            s(:send,
              s(:lvar, :spec), :install,
              s(:hash)),
            s(:args,
              s(:arg, :installer)),
            s(:lvasgn, :called,
              s(:lvar, :installer))),
          s(:send, nil, :assert_nil,
            s(:lvar, :called)))),
      s(:def, :test_spec,
        s(:args),
        s(:begin,
          s(:lvasgn, :version,
            s(:send, nil, :v,
              s(:int, 2))),
          s(:lvasgn, :l_spec,
            s(:send,
              s(:ivar, :@LS), :new,
              s(:ivar, :@set),
              s(:str, "a"),
              s(:lvar, :version),
              s(:array,
                s(:ivar, :@source)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:lvasgn, :b_dep,
            s(:send, nil, :dep,
              s(:str, "b"),
              s(:str, ">= 0"))),
          s(:lvasgn, :c_dep,
            s(:send, nil, :dep,
              s(:str, "c"),
              s(:str, "~> 1"))),
          s(:send,
            s(:lvar, :l_spec), :add_dependency,
            s(:lvar, :b_dep)),
          s(:send,
            s(:lvar, :l_spec), :add_dependency,
            s(:lvar, :c_dep)),
          s(:lvasgn, :spec,
            s(:send,
              s(:lvar, :l_spec), :spec)),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:lvar, :version),
            s(:send,
              s(:lvar, :spec), :version)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY),
            s(:send,
              s(:lvar, :spec), :platform)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :b_dep),
              s(:lvar, :c_dep)),
            s(:send,
              s(:send,
                s(:lvar, :l_spec), :spec), :dependencies)))),
      s(:def, :test_spec_loaded,
        s(:args),
        s(:begin,
          s(:lvasgn, :real_spec,
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:int, 2))),
          s(:send, nil, :install_specs,
            s(:lvar, :real_spec)),
          s(:send,
            s(:lvar, :real_spec), :activate),
          s(:lvasgn, :version,
            s(:send, nil, :v,
              s(:int, 2))),
          s(:lvasgn, :l_spec,
            s(:send,
              s(:ivar, :@LS), :new,
              s(:ivar, :@set),
              s(:str, "a"),
              s(:lvar, :version),
              s(:array,
                s(:ivar, :@source)),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:send, nil, :assert_same,
            s(:lvar, :real_spec),
            s(:send,
              s(:lvar, :l_spec), :spec)))))))
