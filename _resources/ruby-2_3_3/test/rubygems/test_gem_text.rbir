s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/text")),
  s(:class,
    s(:const, nil, :TestGemText),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :Gem), :Text)),
      s(:def, :test_format_text,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "text to\nwrap"),
          s(:send, nil, :format_text,
            s(:str, "text to wrap"),
            s(:int, 8)))),
      s(:def, :test_format_text_indent,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "  text to\n  wrap"),
          s(:send, nil, :format_text,
            s(:str, "text to wrap"),
            s(:int, 8),
            s(:int, 2)))),
      s(:def, :test_format_text_none,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "text to wrap"),
          s(:send, nil, :format_text,
            s(:str, "text to wrap"),
            s(:int, 40)))),
      s(:def, :test_format_text_none_indent,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "  text to wrap"),
          s(:send, nil, :format_text,
            s(:str, "text to wrap"),
            s(:int, 40),
            s(:int, 2)))),
      s(:def, :test_format_text_trailing,
        s(:args),
        s(:begin,
          s(:lvasgn, :text,
            s(:str, "This line is really, really long.  So long, in fact, that it is more than eighty characters long!  The purpose of this line is for testing wrapping behavior because sometimes people don't wrap their text to eighty characters.  Without the wrapping, the text might not look good in the RSS feed.\n")),
          s(:lvasgn, :expected,
            s(:dstr,
              s(:str, "This line is really, really long.  So long, in fact, that it is more than\n"),
              s(:str, "eighty characters long!  The purpose of this line is for testing wrapping\n"),
              s(:str, "behavior because sometimes people don't wrap their text to eighty characters.\n"),
              s(:str, "Without the wrapping, the text might not look good in the RSS feed.\n"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send, nil, :format_text,
              s(:lvar, :text),
              s(:int, 78))))),
      s(:def, :test_min3,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 1),
              s(:int, 1),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 1),
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 1),
              s(:int, 2),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 2),
              s(:int, 1),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 1),
              s(:int, 2),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 2),
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 2),
              s(:int, 2),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 1),
              s(:int, 3),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 2),
              s(:int, 1),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 2),
              s(:int, 3),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 3),
              s(:int, 1),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send, nil, :min3,
              s(:int, 3),
              s(:int, 2),
              s(:int, 1))))),
      s(:def, :test_levenshtein_distance_add,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send, nil, :levenshtein_distance,
              s(:str, "zentest"),
              s(:str, "zntst"))),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send, nil, :levenshtein_distance,
              s(:str, "zntst"),
              s(:str, "zentest"))))),
      s(:def, :test_levenshtein_distance_empty,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send, nil, :levenshtein_distance,
              s(:str, "abcde"),
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send, nil, :levenshtein_distance,
              s(:str, ""),
              s(:str, "abcde"))))),
      s(:def, :test_levenshtein_distance_remove,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send, nil, :levenshtein_distance,
              s(:str, "zentest"),
              s(:str, "zentestxxx"))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send, nil, :levenshtein_distance,
              s(:str, "zentestxxx"),
              s(:str, "zentest"))),
          s(:send, nil, :assert_equal,
            s(:int, 13),
            s(:send, nil, :levenshtein_distance,
              s(:str, "cat"),
              s(:str, "thundercatsarego"))),
          s(:send, nil, :assert_equal,
            s(:int, 13),
            s(:send, nil, :levenshtein_distance,
              s(:str, "thundercatsarego"),
              s(:str, "cat"))))),
      s(:def, :test_levenshtein_distance_replace,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send, nil, :levenshtein_distance,
              s(:str, "zentest"),
              s(:str, "ZenTest"))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:send, nil, :levenshtein_distance,
              s(:str, "xxxxxxx"),
              s(:str, "ZenTest"))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:send, nil, :levenshtein_distance,
              s(:str, "zentest"),
              s(:str, "xxxxxxx"))))))))
