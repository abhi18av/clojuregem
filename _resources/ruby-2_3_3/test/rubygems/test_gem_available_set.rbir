s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/available_set")),
  s(:send, nil, :require,
    s(:str, "rubygems/security")),
  s(:class,
    s(:const, nil, :TestGemAvailableSet),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))))),
      s(:def, :test_add_and_empty,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :set), :empty?)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:ivar, :@source)),
          s(:send, nil, :refute,
            s(:send,
              s(:lvar, :set), :empty?)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :a1)),
            s(:send,
              s(:lvar, :set), :all_specs)))),
      s(:def, :test_find_all,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :a1_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:int, 1))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1a),
              s(:lvasgn, :a1a_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1.a"))),
          s(:lvasgn, :a1_source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :SpecificFile), :new,
              s(:lvar, :a1_gem))),
          s(:lvasgn, :a1a_source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :SpecificFile), :new,
              s(:lvar, :a1a_gem))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:lvar, :a1_source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1a),
            s(:lvar, :a1a_source)),
          s(:lvasgn, :dep,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:send, nil, :dep,
                s(:str, "a")),
              s(:nil))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :set), :find_all,
                  s(:lvar, :dep)), :map),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:lvar, :spec), :full_name))),
          s(:lvasgn, :dep,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, ">= 0.a")),
              s(:nil))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1"),
              s(:str, "a-1.a")),
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :set), :find_all,
                    s(:lvar, :dep)), :map),
                s(:args,
                  s(:arg, :spec)),
                s(:send,
                  s(:lvar, :spec), :full_name)), :sort)))),
      s(:def, :test_match_platform,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :_)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "a"),
                s(:str, "1")),
              s(:args,
                s(:arg, :g)),
              s(:send,
                s(:lvar, :g), :platform=,
                s(:str, "something-weird-yep")))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1c),
              s(:lvasgn, :_)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "a"),
                s(:str, "2")),
              s(:args,
                s(:arg, :g)),
              s(:send,
                s(:lvar, :g), :platform=,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :local)))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a2),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1c),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a2),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :match_platform!),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :a1c),
              s(:lvar, :a2)),
            s(:send,
              s(:lvar, :set), :all_specs)))),
      s(:def, :test_best,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a2),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a2),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :pick_best!),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :a2)),
            s(:send,
              s(:lvar, :set), :all_specs)))),
      s(:def, :test_remove_installed_bang,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :_)),
            s(:send, nil, :util_spec,
              s(:str, "a"),
              s(:str, "1"))),
          s(:send, nil, :install_specs,
            s(:lvar, :a1)),
          s(:send,
            s(:lvar, :a1), :activate),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:ivar, :@source)),
          s(:lvasgn, :dep,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Dependency), :new,
              s(:str, "a"),
              s(:str, ">= 0"))),
          s(:send,
            s(:lvar, :set), :remove_installed!,
            s(:lvar, :dep)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :set), :empty?)))),
      s(:def, :test_sorted_normal_versions,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a2),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a2),
            s(:ivar, :@source)),
          s(:lvasgn, :g,
            s(:send,
              s(:lvar, :set), :sorted)),
          s(:send, nil, :assert_equal,
            s(:lvar, :a2),
            s(:send,
              s(:send,
                s(:lvar, :g), :[],
                s(:int, 0)), :spec)),
          s(:send, nil, :assert_equal,
            s(:lvar, :a1),
            s(:send,
              s(:send,
                s(:lvar, :g), :[],
                s(:int, 1)), :spec)))),
      s(:def, :test_sorted_respect_pre,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1a),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1.a"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a1),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a2a),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2.a"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a2),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a3a),
              s(:lvasgn, :_)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "3.a"))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :AvailableSet), :new)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a1a),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a3a),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a2a),
            s(:ivar, :@source)),
          s(:send,
            s(:lvar, :set), :add,
            s(:lvar, :a2),
            s(:ivar, :@source)),
          s(:lvasgn, :g,
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :set), :sorted), :map),
              s(:args,
                s(:arg, :t)),
              s(:send,
                s(:lvar, :t), :spec))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :a3a),
              s(:lvar, :a2),
              s(:lvar, :a2a),
              s(:lvar, :a1),
              s(:lvar, :a1a)),
            s(:lvar, :g)))))))
