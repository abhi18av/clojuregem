s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:class,
    s(:const, nil, :TestGemPathSupport),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "GEM_HOME"),
            s(:ivar, :@tempdir)),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "GEM_PATH"),
            s(:send,
              s(:array,
                s(:ivar, :@tempdir),
                s(:str, "something")), :join,
              s(:const,
                s(:const, nil, :File), :PATH_SEPARATOR))))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :ENV), :[],
              s(:str, "GEM_HOME")),
            s(:send,
              s(:lvar, :ps), :home)),
          s(:lvasgn, :expected,
            s(:send, nil, :util_path)),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:lvar, :ps), :path),
            s(:str, "defaults to GEM_PATH")))),
      s(:def, :test_initialize_home,
        s(:args),
        s(:begin,
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new,
              s(:hash,
                s(:pair,
                  s(:str, "GEM_HOME"),
                  s(:dstr,
                    s(:begin,
                      s(:ivar, :@tempdir)),
                    s(:str, "/foo")))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "foo")),
            s(:send,
              s(:lvar, :ps), :home)),
          s(:lvasgn, :expected,
            s(:send,
              s(:send, nil, :util_path), :+,
              s(:array,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@tempdir),
                  s(:str, "foo"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:lvar, :ps), :path)))),
      s(:if,
        s(:and,
          s(:defined?,
            s(:const,
              s(:const, nil, :File), :ALT_SEPARATOR)),
          s(:const,
            s(:const, nil, :File), :ALT_SEPARATOR)),
        s(:def, :test_initialize_home_normalize,
          s(:args),
          s(:begin,
            s(:lvasgn, :alternate,
              s(:send,
                s(:ivar, :@tempdir), :gsub,
                s(:const,
                  s(:const, nil, :File), :SEPARATOR),
                s(:const,
                  s(:const, nil, :File), :ALT_SEPARATOR))),
            s(:lvasgn, :ps,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :PathSupport), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "GEM_HOME"),
                    s(:lvar, :alternate))))),
            s(:send, nil, :assert_equal,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :ps), :home),
              s(:str, "normalize values")))), nil),
      s(:def, :test_initialize_path,
        s(:args),
        s(:begin,
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new,
              s(:hash,
                s(:pair,
                  s(:str, "GEM_PATH"),
                  s(:array,
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@tempdir)),
                      s(:str, "/foo")),
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@tempdir)),
                      s(:str, "/bar"))))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :ENV), :[],
              s(:str, "GEM_HOME")),
            s(:send,
              s(:lvar, :ps), :home)),
          s(:lvasgn, :expected,
            s(:array,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "foo")),
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "bar")),
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "GEM_HOME")))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:lvar, :ps), :path)))),
      s(:def, :test_initialize_home_path,
        s(:args),
        s(:begin,
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new,
              s(:hash,
                s(:pair,
                  s(:str, "GEM_HOME"),
                  s(:dstr,
                    s(:begin,
                      s(:ivar, :@tempdir)),
                    s(:str, "/foo"))),
                s(:pair,
                  s(:str, "GEM_PATH"),
                  s(:array,
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@tempdir)),
                      s(:str, "/foo")),
                    s(:dstr,
                      s(:begin,
                        s(:ivar, :@tempdir)),
                      s(:str, "/bar"))))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "foo")),
            s(:send,
              s(:lvar, :ps), :home)),
          s(:lvasgn, :expected,
            s(:array,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "foo")),
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "bar")))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:lvar, :ps), :path)))),
      s(:def, :util_path,
        s(:args),
        s(:send,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "GEM_PATH")), :split,
          s(:const,
            s(:const, nil, :File), :PATH_SEPARATOR))),
      s(:def, :test_initialize_spec,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "GEM_SPEC_CACHE"),
            s(:nil)),
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :default_spec_cache_dir),
            s(:send,
              s(:lvar, :ps), :spec_cache_dir)),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "GEM_SPEC_CACHE"),
            s(:str, "bar")),
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :ENV), :[],
              s(:str, "GEM_SPEC_CACHE")),
            s(:send,
              s(:lvar, :ps), :spec_cache_dir)),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "GEM_SPEC_CACHE"),
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "spec_cache"))),
          s(:lvasgn, :ps,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :PathSupport), :new,
              s(:hash,
                s(:pair,
                  s(:str, "GEM_SPEC_CACHE"),
                  s(:str, "foo"))))),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:send,
              s(:lvar, :ps), :spec_cache_dir)))))))
