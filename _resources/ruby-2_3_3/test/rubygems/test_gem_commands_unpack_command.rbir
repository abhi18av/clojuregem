s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/unpack_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsUnpackCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@tempdir)),
            s(:args),
            s(:ivasgn, :@cmd,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Commands), :UnpackCommand), :new))))),
      s(:def, :test_find_in_cache,
        s(:args),
        s(:begin,
          s(:send, nil, :util_make_gems),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@cmd), :find_in_cache,
              s(:send,
                s(:const, nil, :File), :basename,
                s(:send,
                  s(:ivar, :@a1), :cache_file))),
            s(:send,
              s(:ivar, :@a1), :cache_file),
            s(:str, "found a-1.gem in the cache")))),
      s(:def, :test_get_path,
        s(:args),
        s(:begin,
          s(:lvasgn, :specs,
            s(:block,
              s(:send, nil, :spec_fetcher),
              s(:args,
                s(:arg, :fetcher)),
              s(:send,
                s(:lvar, :fetcher), :gem,
                s(:str, "a"),
                s(:int, 1)))),
          s(:lvasgn, :dep,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Dependency), :new,
              s(:str, "a"),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@cmd), :get_path,
              s(:lvar, :dep)),
            s(:send,
              s(:send,
                s(:lvar, :specs), :[],
                s(:str, "a-1")), :cache_file),
            s(:str, "fetches a-1 and returns the cache path")),
          s(:send,
            s(:const, nil, :FileUtils), :rm,
            s(:send,
              s(:send,
                s(:lvar, :specs), :[],
                s(:str, "a-1")), :cache_file)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@cmd), :get_path,
              s(:lvar, :dep)),
            s(:send,
              s(:send,
                s(:lvar, :specs), :[],
                s(:str, "a-1")), :cache_file),
            s(:str, "when removed from cache, refetches a-1")))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:send, nil, :util_make_gems),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"),
              s(:str, "b"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "a-3.a"))),
            s(:str, "a should be unpacked")),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "b-2"))),
            s(:str, "b should be unpacked")))),
      s(:def, :test_execute_gem_path,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :gem,
              s(:str, "a"),
              s(:str, "3.a"))),
          s(:send,
            s(:const, nil, :Gem), :clear_paths),
          s(:lvasgn, :gemhome2,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "gemhome2"))),
          s(:send,
            s(:const, nil, :Gem), :use_paths,
            s(:lvar, :gemhome2),
            s(:array,
              s(:lvar, :gemhome2),
              s(:ivar, :@gemhome))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "a-3.a")))))),
      s(:def, :test_execute_gem_path_missing,
        s(:args),
        s(:begin,
          s(:send, nil, :spec_fetcher),
          s(:send,
            s(:const, nil, :Gem), :clear_paths),
          s(:lvasgn, :gemhome2,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "gemhome2"))),
          s(:send,
            s(:const, nil, :Gem), :use_paths,
            s(:lvar, :gemhome2),
            s(:array,
              s(:lvar, :gemhome2),
              s(:ivar, :@gemhome))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "z"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_execute_remote,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :download,
                s(:str, "a"),
                s(:int, 2)))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :verbose=,
            s(:sym, :really)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "a-2"))),
            s(:str, "a should be unpacked")))),
      s(:def, :test_execute_spec,
        s(:args),
        s(:begin,
          s(:send, nil, :util_make_gems),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"),
              s(:str, "b"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :spec),
            s(:true)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "a-3.a.gemspec")))),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:str, "b-2.gemspec")))))),
      s(:def, :test_execute_sudo,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:if,
              s(:send, nil, :win_platform?),
              s(:send, nil, :skip,
                s(:str, "Cannot perform this test on windows (chmod)")), nil),
            s(:send, nil, :util_make_gems),
            s(:send,
              s(:const, nil, :FileUtils), :chmod,
              s(:int, 365),
              s(:ivar, :@gemhome)),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[]=,
              s(:sym, :args),
              s(:array,
                s(:str, "b"))),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:ivar, :@tempdir)),
                s(:args),
                s(:send,
                  s(:ivar, :@cmd), :execute))),
            s(:send, nil, :assert,
              s(:send,
                s(:const, nil, :File), :exist?,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@tempdir),
                  s(:str, "b-2"))),
              s(:str, "b should be unpacked"))),
          s(:send,
            s(:const, nil, :FileUtils), :chmod,
            s(:int, 493),
            s(:ivar, :@gemhome)))),
      s(:def, :test_execute_with_target_option,
        s(:args),
        s(:begin,
          s(:send, nil, :util_make_gems),
          s(:lvasgn, :target,
            s(:str, "with_target")),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "a"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :target),
            s(:lvar, :target)),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert,
            s(:send,
              s(:const, nil, :File), :exist?,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tempdir),
                s(:lvar, :target),
                s(:str, "a-3.a")))))),
      s(:def, :test_execute_exact_match,
        s(:args),
        s(:begin,
          s(:lvasgn, :foo_spec,
            s(:send, nil, :util_spec,
              s(:str, "foo"))),
          s(:lvasgn, :foo_bar_spec,
            s(:send, nil, :util_spec,
              s(:str, "foo_bar"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:begin,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :build,
                  s(:lvar, :foo_spec)),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :build,
                  s(:lvar, :foo_bar_spec))))),
          s(:lvasgn, :foo_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :foo_spec), :full_name)),
                s(:str, ".gem")))),
          s(:lvasgn, :foo_bar_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :foo_bar_spec), :full_name)),
                s(:str, ".gem")))),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Installer), :at,
              s(:lvar, :foo_path)), :install),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Installer), :at,
              s(:lvar, :foo_bar_path)), :install),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:str, "foo"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@tempdir)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:send,
                s(:lvar, :foo_spec), :full_name))))),
      s(:def, :test_handle_options_metadata,
        s(:args),
        s(:begin,
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :spec))),
          s(:send,
            s(:ivar, :@cmd), :send,
            s(:sym, :handle_options),
            s(:array,
              s(:str, "--spec"),
              s(:str, "a"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[],
              s(:sym, :spec))))))))
