s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/user_interaction")),
  s(:send, nil, :require,
    s(:str, "timeout")),
  s(:class,
    s(:const, nil, :TestGemStreamUI),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:module,
        s(:const, nil, :IsTty),
        s(:begin,
          s(:send, nil, :attr_accessor,
            s(:sym, :tty)),
          s(:def, :tty?,
            s(:args),
            s(:begin,
              s(:if,
                s(:defined?,
                  s(:ivar, :@tty)), nil,
                s(:ivasgn, :@tty,
                  s(:true))),
              s(:return,
                s(:ivar, :@tty)))),
          s(:send, nil, :alias_method,
            s(:sym, :isatty),
            s(:sym, :tty?)),
          s(:def, :noecho,
            s(:args),
            s(:yield,
              s(:self))))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cfg,
            s(:send,
              s(:const, nil, :Gem), :configuration)),
          s(:ivasgn, :@in,
            s(:send,
              s(:const, nil, :StringIO), :new)),
          s(:ivasgn, :@out,
            s(:send,
              s(:const, nil, :StringIO), :new)),
          s(:ivasgn, :@err,
            s(:send,
              s(:const, nil, :StringIO), :new)),
          s(:send,
            s(:ivar, :@in), :extend,
            s(:const, nil, :IsTty)),
          s(:send,
            s(:ivar, :@out), :extend,
            s(:const, nil, :IsTty)),
          s(:ivasgn, :@sui,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :new,
              s(:ivar, :@in),
              s(:ivar, :@out),
              s(:ivar, :@err),
              s(:true))))),
      s(:def, :test_ask,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "1.9.2")), nil,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "TTY detection broken on windows")), nil)),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:int, 1)),
            s(:args),
            s(:begin,
              s(:lvasgn, :expected_answer,
                s(:str, "Arthur, King of the Britons")),
              s(:send,
                s(:ivar, :@in), :string=,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :expected_answer)),
                  s(:str, "\n"))),
              s(:lvasgn, :actual_answer,
                s(:send,
                  s(:ivar, :@sui), :ask,
                  s(:str, "What is your name?"))),
              s(:send, nil, :assert_equal,
                s(:lvar, :expected_answer),
                s(:lvar, :actual_answer)))))),
      s(:def, :test_ask_no_tty,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "1.9.2")), nil,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "TTY detection broken on windows")), nil)),
          s(:send,
            s(:ivar, :@in), :tty=,
            s(:false)),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:float, 0.1)),
            s(:args),
            s(:begin,
              s(:lvasgn, :answer,
                s(:send,
                  s(:ivar, :@sui), :ask,
                  s(:str, "what is your favorite color?"))),
              s(:send, nil, :assert_equal,
                s(:nil),
                s(:lvar, :answer)))))),
      s(:def, :test_ask_for_password,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "1.9.2")), nil,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "Always uses $stdin on windows")), nil)),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:int, 1)),
            s(:args),
            s(:begin,
              s(:lvasgn, :expected_answer,
                s(:str, "Arthur, King of the Britons")),
              s(:send,
                s(:ivar, :@in), :string=,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :expected_answer)),
                  s(:str, "\n"))),
              s(:lvasgn, :actual_answer,
                s(:send,
                  s(:ivar, :@sui), :ask_for_password,
                  s(:str, "What is your name?"))),
              s(:send, nil, :assert_equal,
                s(:lvar, :expected_answer),
                s(:lvar, :actual_answer)))))),
      s(:def, :test_ask_for_password_no_tty,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "1.9.2")), nil,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "TTY handling is broken on windows")), nil)),
          s(:send,
            s(:ivar, :@in), :tty=,
            s(:false)),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:float, 0.1)),
            s(:args),
            s(:begin,
              s(:lvasgn, :answer,
                s(:send,
                  s(:ivar, :@sui), :ask_for_password,
                  s(:str, "what is the airspeed velocity of an unladen swallow?"))),
              s(:send, nil, :assert_equal,
                s(:nil),
                s(:lvar, :answer)))))),
      s(:def, :test_ask_yes_no_no_tty_with_default,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "1.9.2")), nil,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "TTY handling is broken on windows")), nil)),
          s(:send,
            s(:ivar, :@in), :tty=,
            s(:false)),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:float, 0.1)),
            s(:args),
            s(:begin,
              s(:lvasgn, :answer,
                s(:send,
                  s(:ivar, :@sui), :ask_yes_no,
                  s(:str, "do coconuts migrate?"),
                  s(:false))),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:lvar, :answer)),
              s(:lvasgn, :answer,
                s(:send,
                  s(:ivar, :@sui), :ask_yes_no,
                  s(:str, "do coconuts migrate?"),
                  s(:true))),
              s(:send, nil, :assert_equal,
                s(:true),
                s(:lvar, :answer)))))),
      s(:def, :test_ask_yes_no_no_tty_without_default,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :RUBY_VERSION), :>,
              s(:str, "1.9.2")), nil,
            s(:if,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:send, nil, :skip,
                s(:str, "TTY handling is broken on windows")), nil)),
          s(:send,
            s(:ivar, :@in), :tty=,
            s(:false)),
          s(:block,
            s(:send,
              s(:const, nil, :Timeout), :timeout,
              s(:float, 0.1)),
            s(:args),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :OperationNotSupportedError)),
              s(:args),
              s(:send,
                s(:ivar, :@sui), :ask_yes_no,
                s(:str, "do coconuts migrate?")))))),
      s(:def, :test_choose_from_list,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@in), :puts,
            s(:str, "1")),
          s(:send,
            s(:ivar, :@in), :rewind),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@sui), :choose_from_list,
              s(:str, "which one?"),
              s(:array,
                s(:str, "foo"),
                s(:str, "bar")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:int, 0)),
            s(:lvar, :result)),
          s(:send, nil, :assert_equal,
            s(:str, "which one?\n 1. foo\n 2. bar\n> "),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_choose_from_list_EOF,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@sui), :choose_from_list,
              s(:str, "which one?"),
              s(:array,
                s(:str, "foo"),
                s(:str, "bar")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:nil),
              s(:nil)),
            s(:lvar, :result)),
          s(:send, nil, :assert_equal,
            s(:str, "which one?\n 1. foo\n 2. bar\n> "),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_progress_reporter_silent_nil,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:nil)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :progress_reporter,
              s(:int, 10),
              s(:str, "hi"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :SilentProgressReporter),
            s(:lvar, :reporter)))),
      s(:def, :test_progress_reporter_silent_false,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:false)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :progress_reporter,
              s(:int, 10),
              s(:str, "hi"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :SilentProgressReporter),
            s(:lvar, :reporter)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_progress_reporter_simple,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :progress_reporter,
              s(:int, 10),
              s(:str, "hi"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :SimpleProgressReporter),
            s(:lvar, :reporter)),
          s(:send, nil, :assert_equal,
            s(:str, "hi\n"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_progress_reporter_verbose,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:int, 0)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :progress_reporter,
              s(:int, 10),
              s(:str, "hi"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :VerboseProgressReporter),
            s(:lvar, :reporter)),
          s(:send, nil, :assert_equal,
            s(:str, "hi\n"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_download_reporter_silent_nil,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:nil)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :SilentDownloadReporter),
            s(:lvar, :reporter)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_download_reporter_silent_false,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:false)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :SilentDownloadReporter),
            s(:lvar, :reporter)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_download_reporter_anything,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:int, 0)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :StreamUI), :VerboseDownloadReporter),
            s(:lvar, :reporter)))),
      s(:def, :test_verbose_download_reporter,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send, nil, :assert_equal,
            s(:str, "Fetching: a.gem"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_verbose_download_reporter_progress,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send,
            s(:lvar, :reporter), :update,
            s(:int, 512)),
          s(:send, nil, :assert_equal,
            s(:str, "Fetching: a.gem\rFetching: a.gem ( 50%)"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_verbose_download_reporter_progress_once,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send,
            s(:lvar, :reporter), :update,
            s(:int, 510)),
          s(:send,
            s(:lvar, :reporter), :update,
            s(:int, 512)),
          s(:send, nil, :assert_equal,
            s(:str, "Fetching: a.gem\rFetching: a.gem ( 50%)"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_verbose_download_reporter_progress_complete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send,
            s(:lvar, :reporter), :update,
            s(:int, 510)),
          s(:send,
            s(:lvar, :reporter), :done),
          s(:send, nil, :assert_equal,
            s(:str, "Fetching: a.gem\rFetching: a.gem ( 50%)\rFetching: a.gem (100%)\n"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_verbose_download_reporter_progress_nil_length,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:nil)),
          s(:send,
            s(:lvar, :reporter), :update,
            s(:int, 1024)),
          s(:send,
            s(:lvar, :reporter), :done),
          s(:send, nil, :assert_equal,
            s(:str, "Fetching: a.gem\rFetching: a.gem (1024B)\rFetching: a.gem (1024B)\n"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_verbose_download_reporter_progress_zero_length,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 0)),
          s(:send,
            s(:lvar, :reporter), :update,
            s(:int, 1024)),
          s(:send,
            s(:lvar, :reporter), :done),
          s(:send, nil, :assert_equal,
            s(:str, "Fetching: a.gem\rFetching: a.gem (1024B)\rFetching: a.gem (1024B)\n"),
            s(:send,
              s(:ivar, :@out), :string)))),
      s(:def, :test_verbose_download_reporter_no_tty,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@out), :tty=,
            s(:false)),
          s(:send,
            s(:ivar, :@cfg), :verbose=,
            s(:true)),
          s(:lvasgn, :reporter,
            s(:send,
              s(:ivar, :@sui), :download_reporter)),
          s(:send,
            s(:lvar, :reporter), :fetch,
            s(:str, "a.gem"),
            s(:int, 1024)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@out), :string)))))))
