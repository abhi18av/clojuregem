s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemResolverVendorSpecification),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSet), :new)),
          s(:ivasgn, :@spec,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :new,
              s(:str, "a"),
              s(:int, 1))))),
      s(:def, :test_equals2,
        s(:args),
        s(:begin,
          s(:lvasgn, :v_spec_a,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:ivar, :@spec))),
          s(:send, nil, :assert_equal,
            s(:lvar, :v_spec_a),
            s(:lvar, :v_spec_a)),
          s(:lvasgn, :spec_b,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :new,
              s(:str, "b"),
              s(:int, 1))),
          s(:lvasgn, :v_spec_b,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:lvar, :spec_b))),
          s(:send, nil, :refute_equal,
            s(:lvar, :v_spec_a),
            s(:lvar, :v_spec_b)),
          s(:lvasgn, :v_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSet), :new)),
          s(:lvasgn, :v_spec_s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:lvar, :v_set),
              s(:ivar, :@spec))),
          s(:send, nil, :refute_equal,
            s(:lvar, :v_spec_a),
            s(:lvar, :v_spec_s)),
          s(:lvasgn, :i_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSet), :new)),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :i_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :IndexSpecification), :new,
              s(:lvar, :i_set),
              s(:str, "a"),
              s(:send, nil, :v,
                s(:int, 1)),
              s(:lvar, :source),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY))),
          s(:send, nil, :refute_equal,
            s(:lvar, :v_spec_a),
            s(:lvar, :i_spec)))),
      s(:def, :test_dependencies,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@spec), :add_dependency,
            s(:str, "b")),
          s(:send,
            s(:ivar, :@spec), :add_dependency,
            s(:str, "c")),
          s(:lvasgn, :v_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:ivar, :@spec))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "b")),
              s(:send, nil, :dep,
                s(:str, "c"))),
            s(:send,
              s(:lvar, :v_spec), :dependencies)))),
      s(:def, :test_full_name,
        s(:args),
        s(:begin,
          s(:lvasgn, :v_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:ivar, :@spec))),
          s(:send, nil, :assert_equal,
            s(:str, "a-1"),
            s(:send,
              s(:lvar, :v_spec), :full_name)))),
      s(:def, :test_install,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:ivar, :@spec))),
          s(:lvasgn, :called,
            s(:sym, :junk)),
          s(:block,
            s(:send,
              s(:lvar, :spec), :install,
              s(:hash)),
            s(:args,
              s(:arg, :installer)),
            s(:lvasgn, :called,
              s(:lvar, :installer))),
          s(:send, nil, :assert_nil,
            s(:lvar, :called)))),
      s(:def, :test_name,
        s(:args),
        s(:begin,
          s(:lvasgn, :v_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:ivar, :@spec))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :v_spec), :name)))),
      s(:def, :test_platform,
        s(:args),
        s(:begin,
          s(:lvasgn, :v_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:ivar, :@spec))),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY),
            s(:send,
              s(:lvar, :v_spec), :platform)))),
      s(:def, :test_version,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Specification), :new,
              s(:str, "a"),
              s(:int, 1))),
          s(:lvasgn, :v_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSpecification), :new,
              s(:ivar, :@set),
              s(:lvar, :spec))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :v,
              s(:int, 1)),
            s(:send,
              s(:lvar, :v_spec), :version)))))))
