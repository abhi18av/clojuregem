s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/gem_runner")),
  s(:class,
    s(:const, nil, :TestGemGemRunner),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@orig_args,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Command), :build_args)),
          s(:ivasgn, :@runner,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :GemRunner), :new)))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Command), :build_args=,
            s(:ivar, :@orig_args)))),
      s(:def, :test_do_configuration,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :Gem), :clear_paths),
          s(:lvasgn, :temp_conf,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, ".gemrc"))),
          s(:lvasgn, :other_gem_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "other_gem_path"))),
          s(:lvasgn, :other_gem_home,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "other_gem_home"))),
          s(:send,
            s(:const, nil, :Gem), :ensure_gem_subdirectories,
            s(:lvar, :other_gem_path)),
          s(:send,
            s(:const, nil, :Gem), :ensure_gem_subdirectories,
            s(:lvar, :other_gem_home)),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:lvar, :temp_conf),
              s(:str, "w")),
            s(:args,
              s(:arg, :fp)),
            s(:begin,
              s(:send,
                s(:lvar, :fp), :puts,
                s(:str, "gem: --commands")),
              s(:send,
                s(:lvar, :fp), :puts,
                s(:dstr,
                  s(:str, "gemhome: "),
                  s(:begin,
                    s(:lvar, :other_gem_home)))),
              s(:send,
                s(:lvar, :fp), :puts,
                s(:str, "gempath:")),
              s(:send,
                s(:lvar, :fp), :puts,
                s(:dstr,
                  s(:str, "  - "),
                  s(:begin,
                    s(:lvar, :other_gem_path)))),
              s(:send,
                s(:lvar, :fp), :puts,
                s(:str, "rdoc: --all")))),
          s(:lvasgn, :gr,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :GemRunner), :new)),
          s(:send,
            s(:lvar, :gr), :send,
            s(:sym, :do_configuration),
            s(:array,
              s(:str, "--config-file"),
              s(:dstr,
                s(:begin,
                  s(:lvar, :temp_conf))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :other_gem_path),
              s(:lvar, :other_gem_home)),
            s(:send,
              s(:const, nil, :Gem), :path)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "--commands")),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Command), :extra_args)))),
      s(:def, :test_extract_build_args,
        s(:args),
        s(:begin,
          s(:lvasgn, :args,
            s(:array)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:ivar, :@runner), :extract_build_args,
              s(:lvar, :args))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:lvar, :args)),
          s(:lvasgn, :args,
            s(:array,
              s(:str, "foo"))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:ivar, :@runner), :extract_build_args,
              s(:lvar, :args))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo")),
            s(:lvar, :args)),
          s(:lvasgn, :args,
            s(:array,
              s(:str, "--foo"))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:ivar, :@runner), :extract_build_args,
              s(:lvar, :args))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "--foo")),
            s(:lvar, :args)),
          s(:lvasgn, :args,
            s(:array,
              s(:str, "--foo"),
              s(:str, "--"))),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:ivar, :@runner), :extract_build_args,
              s(:lvar, :args))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "--foo")),
            s(:lvar, :args)),
          s(:lvasgn, :args,
            s(:array,
              s(:str, "--foo"),
              s(:str, "--"),
              s(:str, "--bar"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "--bar")),
            s(:send,
              s(:ivar, :@runner), :extract_build_args,
              s(:lvar, :args))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "--foo")),
            s(:lvar, :args)))))))
