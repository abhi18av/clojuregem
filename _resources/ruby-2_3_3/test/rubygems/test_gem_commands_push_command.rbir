s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/push_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsPushCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "RUBYGEMS_HOST"),
            s(:nil)),
          s(:send,
            s(:const, nil, :Gem), :host=,
            s(:const,
              s(:const, nil, :Gem), :DEFAULT_HOST)),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :disable_default_gem_server=,
            s(:false)),
          s(:ivasgn, :@gems_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "gems"))),
          s(:ivasgn, :@cache_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@gemhome),
              s(:str, "cache"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir,
            s(:ivar, :@gems_dir)),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :rubygems_api_key=,
            s(:str, "ed244fbf2b1a52e012da8616c512fa47f9aa5250")),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@spec),
              s(:ivasgn, :@path)),
            s(:send, nil, :util_gem,
              s(:str, "freewill"),
              s(:str, "1.0.0"))),
          s(:ivasgn, :@host,
            s(:str, "https://rubygems.example")),
          s(:ivasgn, :@api_key,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :rubygems_api_key)),
          s(:ivasgn, :@fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :FakeFetcher), :new)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RemoteFetcher), :fetcher=,
            s(:ivar, :@fetcher)),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :PushCommand), :new)),
          s(:sclass,
            s(:const, nil, :Gem),
            s(:begin,
              s(:send, nil, :alias_method,
                s(:sym, :orig_latest_rubygems_version),
                s(:sym, :latest_rubygems_version)),
              s(:def, :latest_rubygems_version,
                s(:args),
                s(:send,
                  s(:const, nil, :Gem), :rubygems_version)))))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:sclass,
            s(:const, nil, :Gem),
            s(:begin,
              s(:send, nil, :remove_method,
                s(:sym, :latest_rubygems_version)),
              s(:send, nil, :alias_method,
                s(:sym, :latest_rubygems_version),
                s(:sym, :orig_latest_rubygems_version)))))),
      s(:def, :send_battery,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@cmd), :instance_variable_set,
                s(:sym, :@host),
                s(:ivar, :@host)),
              s(:send,
                s(:ivar, :@cmd), :send_gem,
                s(:ivar, :@path)))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Pushing gem to "),
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "..."),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Post),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :class)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:ivar, :@path)),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :body)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :size,
              s(:ivar, :@path)),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@fetcher), :last_request), :[],
                s(:str, "Content-Length")), :to_i)),
          s(:send, nil, :assert_equal,
            s(:str, "application/octet-stream"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Content-Type"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@api_key),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))),
          s(:send, nil, :assert_match,
            s(:ivar, :@response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_execute,
        s(:args),
        s(:begin,
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freewill (1.0.0)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:ivar, :@path))),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Post),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :class)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:ivar, :@path)),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :body)),
          s(:send, nil, :assert_equal,
            s(:str, "application/octet-stream"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Content-Type"))))),
      s(:def, :test_execute_host,
        s(:args),
        s(:begin,
          s(:lvasgn, :host,
            s(:str, "https://other.example")),
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freewill (1.0.0)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:lvar, :host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:str, "fail"),
              s(:int, 500),
              s(:str, "Internal Server Error"))),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :host),
            s(:lvar, :host)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :args),
            s(:array,
              s(:ivar, :@path))),
          s(:send,
            s(:ivar, :@cmd), :execute),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Post),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :class)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :read_binary,
              s(:ivar, :@path)),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :body)),
          s(:send, nil, :assert_equal,
            s(:str, "application/octet-stream"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Content-Type"))))),
      s(:def, :test_sending_when_default_host_disabled,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :disable_default_gem_server=,
            s(:true)),
          s(:lvasgn, :response,
            s(:str, "You must specify a gem server")),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :TermError)),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :send_gem,
                s(:ivar, :@path)))),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_sending_when_default_host_disabled_with_override,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "RUBYGEMS_HOST"),
            s(:ivar, :@host)),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :disable_default_gem_server=,
            s(:true)),
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freewill (1.0.0)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send, nil, :send_battery))),
      s(:def, :test_sending_gem_to_metadata_host,
        s(:args),
        s(:begin,
          s(:ivasgn, :@host,
            s(:str, "http://rubygems.engineyard.com")),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@spec),
              s(:ivasgn, :@path)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "freebird"),
                s(:str, "1.0.1")),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :metadata), :[]=,
                s(:str, "default_gem_server"),
                s(:ivar, :@host)))),
          s(:ivasgn, :@api_key,
            s(:str, "EYKEY")),
          s(:lvasgn, :keys,
            s(:hash,
              s(:pair,
                s(:sym, :rubygems_api_key),
                s(:str, "KEY")),
              s(:pair,
                s(:ivar, :@host),
                s(:ivar, :@api_key)))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path))),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:send,
                s(:lvar, :keys), :to_yaml))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:const, nil, :FileUtils), :rm,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :credentials_path)),
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freebird (1.0.1)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send, nil, :send_battery))),
      s(:def, :test_sending_gem,
        s(:args),
        s(:begin,
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freewill (1.0.0)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send, nil, :send_battery))),
      s(:def, :test_sending_gem_to_allowed_push_host,
        s(:args),
        s(:begin,
          s(:ivasgn, :@host,
            s(:str, "http://privategemserver.com")),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@spec),
              s(:ivasgn, :@path)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "freebird"),
                s(:str, "1.0.1")),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :metadata), :[]=,
                s(:str, "allowed_push_host"),
                s(:ivar, :@host)))),
          s(:ivasgn, :@api_key,
            s(:str, "PRIVKEY")),
          s(:lvasgn, :keys,
            s(:hash,
              s(:pair,
                s(:sym, :rubygems_api_key),
                s(:str, "KEY")),
              s(:pair,
                s(:ivar, :@host),
                s(:ivar, :@api_key)))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path))),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:send,
                s(:lvar, :keys), :to_yaml))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:const, nil, :FileUtils), :rm,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :credentials_path)),
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freebird (1.0.1)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send, nil, :send_battery))),
      s(:def, :test_sending_gem_to_allowed_push_host_with_basic_credentials,
        s(:args),
        s(:begin,
          s(:ivasgn, :@sanitized_host,
            s(:str, "http://privategemserver.com")),
          s(:ivasgn, :@host,
            s(:str, "http://user:password@privategemserver.com")),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@spec),
              s(:ivasgn, :@path)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "freebird"),
                s(:str, "1.0.1")),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :metadata), :[]=,
                s(:str, "allowed_push_host"),
                s(:ivar, :@sanitized_host)))),
          s(:ivasgn, :@api_key,
            s(:str, "DOESNTMATTER")),
          s(:lvasgn, :keys,
            s(:hash,
              s(:pair,
                s(:sym, :rubygems_api_key),
                s(:ivar, :@api_key)))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path))),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:send,
                s(:lvar, :keys), :to_yaml))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:const, nil, :FileUtils), :rm,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :credentials_path)),
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freebird (1.0.1)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send, nil, :send_battery))),
      s(:def, :test_sending_gem_to_disallowed_default_host,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@spec),
              s(:ivasgn, :@path)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "freebird"),
                s(:str, "1.0.1")),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :metadata), :[]=,
                s(:str, "allowed_push_host"),
                s(:str, "https://privategemserver.com")))),
          s(:lvasgn, :response,
            s(:dstr,
              s(:str, "ERROR:  \""),
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "\" is not allowed by the gemspec, which only allows \"https://privategemserver.com\""))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :TermError)),
            s(:args),
            s(:send, nil, :send_battery)),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_sending_gem_to_disallowed_push_host,
        s(:args),
        s(:begin,
          s(:ivasgn, :@host,
            s(:str, "https://somebodyelse.com")),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@spec),
              s(:ivasgn, :@path)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "freebird"),
                s(:str, "1.0.1")),
              s(:args,
                s(:arg, :spec)),
              s(:send,
                s(:send,
                  s(:lvar, :spec), :metadata), :[]=,
                s(:str, "allowed_push_host"),
                s(:str, "https://privategemserver.com")))),
          s(:ivasgn, :@api_key,
            s(:str, "PRIVKEY")),
          s(:lvasgn, :keys,
            s(:hash,
              s(:pair,
                s(:sym, :rubygems_api_key),
                s(:str, "KEY")),
              s(:pair,
                s(:ivar, :@host),
                s(:ivar, :@api_key)))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path))),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:send,
                s(:lvar, :keys), :to_yaml))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:const, nil, :FileUtils), :rm,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :credentials_path)),
          s(:lvasgn, :response,
            s(:str, "ERROR:  \"https://somebodyelse.com\" is not allowed by the gemspec, which only allows \"https://privategemserver.com\"")),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :TermError)),
            s(:args),
            s(:send, nil, :send_battery)),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_raises_error_with_no_arguments,
        s(:args),
        s(:begin,
          s(:defs,
            s(:ivar, :@cmd), :sign_in,
            s(:args,
              s(:restarg)), nil),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const, nil, :Gem), :CommandLineError)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)))),
      s(:def, :test_sending_gem_denied,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "You don't have permission to push to this gem")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:lvar, :response),
              s(:int, 403),
              s(:str, "Forbidden"))),
          s(:send,
            s(:ivar, :@cmd), :instance_variable_set,
            s(:sym, :@host),
            s(:ivar, :@host)),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :TermError)),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :send_gem,
                s(:ivar, :@path)))),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_sending_gem_key,
        s(:args),
        s(:begin,
          s(:ivasgn, :@response,
            s(:str, "Successfully registered gem: freewill (1.0.0)")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@host)),
              s(:str, "/api/v1/gems")),
            s(:array,
              s(:ivar, :@response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "a")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:str, ":other: 701229f217cdf23b1344c7b4b54ca97"))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-k"),
              s(:str, "other"))),
          s(:send,
            s(:ivar, :@cmd), :instance_variable_set,
            s(:sym, :@host),
            s(:ivar, :@host)),
          s(:send,
            s(:ivar, :@cmd), :send_gem,
            s(:ivar, :@path)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :api_keys), :[],
              s(:sym, :other)),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))))))))
