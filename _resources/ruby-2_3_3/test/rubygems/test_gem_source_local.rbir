s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/source")),
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:class,
    s(:const, nil, :TestGemSourceLocal),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@sl,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Local), :new)),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@a),
              s(:ivasgn, :@a_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@ap),
              s(:ivasgn, :@ap_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2.a"))),
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@b),
              s(:ivasgn, :@b_gem)),
            s(:send, nil, :util_gem,
              s(:str, "b"),
              s(:str, "1"))),
          s(:send,
            s(:const, nil, :FileUtils), :mv,
            s(:ivar, :@a_gem),
            s(:ivar, :@tempdir)),
          s(:send,
            s(:const, nil, :FileUtils), :mv,
            s(:ivar, :@ap_gem),
            s(:ivar, :@tempdir)),
          s(:send,
            s(:const, nil, :FileUtils), :mv,
            s(:ivar, :@b_gem),
            s(:ivar, :@tempdir)))),
      s(:def, :test_load_specs_released,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:send,
            s(:array,
              s(:send,
                s(:ivar, :@a), :name_tuple),
              s(:send,
                s(:ivar, :@b), :name_tuple)), :sort),
          s(:send,
            s(:send,
              s(:ivar, :@sl), :load_specs,
              s(:sym, :released)), :sort))),
      s(:def, :test_load_specs_prerelease,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:ivar, :@ap), :name_tuple)),
          s(:send,
            s(:ivar, :@sl), :load_specs,
            s(:sym, :prerelease)))),
      s(:def, :test_load_specs_latest,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a2),
              s(:lvasgn, :a2_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:send,
            s(:const, nil, :FileUtils), :mv,
            s(:lvar, :a2_gem),
            s(:ivar, :@tempdir)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:array,
                s(:send,
                  s(:lvar, :a2), :name_tuple),
                s(:send,
                  s(:ivar, :@b), :name_tuple)), :sort),
            s(:send,
              s(:send,
                s(:ivar, :@sl), :load_specs,
                s(:sym, :latest)), :sort)))),
      s(:def, :test_find_gem,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "a-1"),
          s(:send,
            s(:send,
              s(:ivar, :@sl), :find_gem,
              s(:str, "a")), :full_name))),
      s(:def, :test_find_gem_highest_version,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :a2_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:send,
            s(:const, nil, :FileUtils), :mv,
            s(:lvar, :a2_gem),
            s(:ivar, :@tempdir)),
          s(:send, nil, :assert_equal,
            s(:str, "a-2"),
            s(:send,
              s(:send,
                s(:ivar, :@sl), :find_gem,
                s(:str, "a")), :full_name)))),
      s(:def, :test_find_gem_specific_version,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :a2_gem)),
            s(:send, nil, :util_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:send,
            s(:const, nil, :FileUtils), :mv,
            s(:lvar, :a2_gem),
            s(:ivar, :@tempdir)),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :create,
              s(:str, "= 1"))),
          s(:send, nil, :assert_equal,
            s(:str, "a-1"),
            s(:send,
              s(:send,
                s(:ivar, :@sl), :find_gem,
                s(:str, "a"),
                s(:lvar, :req)), :full_name)))),
      s(:def, :test_find_gem_prerelease,
        s(:args),
        s(:begin,
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :create,
              s(:str, ">= 0"))),
          s(:send, nil, :assert_equal,
            s(:str, "a-2.a"),
            s(:send,
              s(:send,
                s(:ivar, :@sl), :find_gem,
                s(:str, "a"),
                s(:lvar, :req),
                s(:true)), :full_name)))),
      s(:def, :test_fetch_spec,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:ivar, :@sl), :fetch_spec,
              s(:send,
                s(:ivar, :@a), :name_tuple))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:ivar, :@a)))),
      s(:def, :test_inspect,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "#<Gem::Source::Local specs: \"NOT LOADED\">"),
            s(:send,
              s(:ivar, :@sl), :inspect)),
          s(:send,
            s(:ivar, :@sl), :load_specs,
            s(:sym, :released)),
          s(:lvasgn, :inner,
            s(:send,
              s(:block,
                s(:send,
                  s(:array,
                    s(:ivar, :@a),
                    s(:ivar, :@ap),
                    s(:ivar, :@b)), :map),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:lvar, :t), :name_tuple)), :inspect)),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "#<Gem::Source::Local specs: "),
              s(:begin,
                s(:lvar, :inner)),
              s(:str, ">")),
            s(:send,
              s(:ivar, :@sl), :inspect)))),
      s(:def, :test_download,
        s(:args),
        s(:begin,
          s(:lvasgn, :path,
            s(:send,
              s(:ivar, :@sl), :download,
              s(:ivar, :@a))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:send,
                s(:ivar, :@a), :file_name)),
            s(:lvar, :path)))),
      s(:def, :test_spaceship,
        s(:args),
        s(:begin,
          s(:lvasgn, :a1,
            s(:send, nil, :quick_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:send, nil, :util_build_gem,
            s(:lvar, :a1)),
          s(:lvasgn, :remote,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Source), :new,
              s(:ivar, :@gem_repo))),
          s(:lvasgn, :specific,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :SpecificFile), :new,
              s(:send,
                s(:lvar, :a1), :cache_file))),
          s(:lvasgn, :installed,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Installed), :new)),
          s(:lvasgn, :local,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :Local), :new)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :local), :<=>,
              s(:lvar, :local)),
            s(:str, "local     <=> local")),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :remote), :<=>,
              s(:lvar, :local)),
            s(:str, "remote    <=> local")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :local), :<=>,
              s(:lvar, :remote)),
            s(:str, "local     <=> remote")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :installed), :<=>,
              s(:lvar, :local)),
            s(:str, "installed <=> local")),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :local), :<=>,
              s(:lvar, :installed)),
            s(:str, "local     <=> installed")),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:lvar, :specific), :<=>,
              s(:lvar, :local)),
            s(:str, "specific  <=> local")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:lvar, :local), :<=>,
              s(:lvar, :specific)),
            s(:str, "local     <=> specific")))))))
