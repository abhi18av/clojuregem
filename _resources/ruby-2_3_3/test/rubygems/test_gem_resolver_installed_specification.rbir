s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemResolverInstalledSpecification),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :CurrentSet), :new)))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :source_spec,
            s(:send, nil, :util_spec,
              s(:str, "a"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :InstalledSpecification), :new,
              s(:ivar, :@set),
              s(:lvar, :source_spec))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:int, 2)),
            s(:send,
              s(:lvar, :spec), :version)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY),
            s(:send,
              s(:lvar, :spec), :platform)))),
      s(:def, :test_install,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:send, nil, :util_spec,
              s(:str, "a"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :InstalledSpecification), :new,
              s(:ivar, :@set),
              s(:lvar, :a))),
          s(:lvasgn, :called,
            s(:sym, :junk)),
          s(:block,
            s(:send,
              s(:lvar, :spec), :install,
              s(:hash)),
            s(:args,
              s(:arg, :installer)),
            s(:lvasgn, :called,
              s(:lvar, :installer))),
          s(:send, nil, :assert_nil,
            s(:lvar, :called)))),
      s(:def, :test_installable_platform_eh,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :b),
              s(:lvasgn, :b_gem)),
            s(:block,
              s(:send, nil, :util_gem,
                s(:str, "a"),
                s(:int, 1)),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :platform=,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :new,
                  s(:array,
                    s(:str, "cpu"),
                    s(:str, "other_platform"),
                    s(:str, "1")))))),
          s(:lvasgn, :source,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Source), :SpecificFile), :new,
              s(:lvar, :b_gem))),
          s(:lvasgn, :b_spec,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :InstalledSpecification), :new,
              s(:ivar, :@set),
              s(:lvar, :b),
              s(:lvar, :source))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :b_spec), :installable_platform?)))))))
