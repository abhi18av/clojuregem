s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/request")),
  s(:send, nil, :require,
    s(:str, "timeout")),
  s(:class,
    s(:const, nil, :TestGemRequestConnectionPool),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:class,
        s(:const, nil, :FakeHttp), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:restarg, :args)), nil),
          s(:def, :start,
            s(:args), nil))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@old_client,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :client)),
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Request), :ConnectionPools), :client=,
            s(:const, nil, :FakeHttp)),
          s(:ivasgn, :@proxy,
            s(:send, nil, :URI,
              s(:str, "http://proxy.example"))))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:send,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Request), :ConnectionPools), :client=,
            s(:ivar, :@old_client)),
          s(:zsuper))),
      s(:def, :test_checkout_same_connection,
        s(:args),
        s(:begin,
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://example/some_endpoint"))),
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :pool,
            s(:send,
              s(:lvar, :pools), :pool_for,
              s(:lvar, :uri))),
          s(:lvasgn, :conn,
            s(:send,
              s(:lvar, :pool), :checkout)),
          s(:send,
            s(:lvar, :pool), :checkin,
            s(:lvar, :conn)),
          s(:send, nil, :assert_equal,
            s(:lvar, :conn),
            s(:send,
              s(:lvar, :pool), :checkout)))),
      s(:def, :test_to_proxy_eh,
        s(:args),
        s(:begin,
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :env_no_proxy,
            s(:array,
              s(:str, "1.no-proxy.example"),
              s(:str, "2.no-proxy.example"))),
          s(:lvasgn, :no_proxy,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :no_proxy?),
              s(:str, "2.no-proxy.example"),
              s(:lvar, :env_no_proxy))),
          s(:send, nil, :assert,
            s(:lvar, :no_proxy),
            s(:str, "match")),
          s(:lvasgn, :no_proxy,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :no_proxy?),
              s(:str, "proxy.example"),
              s(:lvar, :env_no_proxy))),
          s(:send, nil, :refute,
            s(:lvar, :no_proxy),
            s(:str, "mismatch")))),
      s(:def, :test_to_proxy_eh_wildcard,
        s(:args),
        s(:begin,
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :env_no_proxy,
            s(:array,
              s(:str, ".no-proxy.example"))),
          s(:lvasgn, :no_proxy,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :no_proxy?),
              s(:str, "2.no-proxy.example"),
              s(:lvar, :env_no_proxy))),
          s(:send, nil, :assert,
            s(:lvar, :no_proxy),
            s(:str, "wildcard matching subdomain")),
          s(:lvasgn, :no_proxy,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :no_proxy?),
              s(:str, "no-proxy.example"),
              s(:lvar, :env_no_proxy))),
          s(:send, nil, :assert,
            s(:lvar, :no_proxy),
            s(:str, "wildcard matching dotless domain")),
          s(:lvasgn, :no_proxy,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :no_proxy?),
              s(:str, "proxy.example"),
              s(:lvar, :env_no_proxy))),
          s(:send, nil, :refute,
            s(:lvar, :no_proxy),
            s(:str, "wildcard mismatch")))),
      s(:def, :test_net_http_args,
        s(:args),
        s(:begin,
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :net_http_args,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :net_http_args),
              s(:send, nil, :URI,
                s(:str, "http://example")),
              s(:nil))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "example"),
              s(:int, 80)),
            s(:lvar, :net_http_args)))),
      s(:def, :test_net_http_args_ipv6,
        s(:args),
        s(:begin,
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :net_http_args,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :net_http_args),
              s(:send, nil, :URI,
                s(:str, "http://[::1]")),
              s(:nil))),
          s(:lvasgn, :expected_host,
            s(:if,
              s(:send,
                s(:const, nil, :RUBY_VERSION), :>=,
                s(:str, "1.9.3")),
              s(:str, "::1"),
              s(:str, "[::1]"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :expected_host),
              s(:int, 80)),
            s(:lvar, :net_http_args)))),
      s(:def, :test_net_http_args_proxy,
        s(:args),
        s(:begin,
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :net_http_args,
            s(:send,
              s(:lvar, :pools), :send,
              s(:sym, :net_http_args),
              s(:send, nil, :URI,
                s(:str, "http://example")),
              s(:ivar, :@proxy))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "example"),
              s(:int, 80),
              s(:str, "proxy.example"),
              s(:int, 80),
              s(:nil),
              s(:nil)),
            s(:lvar, :net_http_args)))),
      s(:def, :test_net_http_args_no_proxy,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :orig_no_proxy),
                s(:send,
                  s(:const, nil, :ENV), :[]=,
                  s(:str, "no_proxy"))),
              s(:array,
                s(:send,
                  s(:const, nil, :ENV), :[],
                  s(:str, "no_proxy")),
                s(:str, "example"))),
            s(:lvasgn, :pools,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
                s(:nil),
                s(:array))),
            s(:lvasgn, :net_http_args,
              s(:send,
                s(:lvar, :pools), :send,
                s(:sym, :net_http_args),
                s(:send, nil, :URI,
                  s(:str, "http://example")),
                s(:ivar, :@proxy))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "example"),
                s(:int, 80),
                s(:nil),
                s(:nil)),
              s(:lvar, :net_http_args))),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "no_proxy"),
            s(:lvar, :orig_no_proxy)))),
      s(:def, :test_thread_waits_for_connection,
        s(:args),
        s(:begin,
          s(:lvasgn, :uri,
            s(:send,
              s(:const, nil, :URI), :parse,
              s(:str, "http://example/some_endpoint"))),
          s(:lvasgn, :pools,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Request), :ConnectionPools), :new,
              s(:nil),
              s(:array))),
          s(:lvasgn, :pool,
            s(:send,
              s(:lvar, :pools), :pool_for,
              s(:lvar, :uri))),
          s(:send,
            s(:lvar, :pool), :checkout),
          s(:lvasgn, :t1,
            s(:block,
              s(:send,
                s(:const, nil, :Thread), :new),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Timeout), :timeout,
                  s(:int, 1)),
                s(:args),
                s(:send,
                  s(:lvar, :pool), :checkout)))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const, nil, :Timeout), :Error)),
            s(:args),
            s(:send,
              s(:lvar, :t1), :join)))))))
