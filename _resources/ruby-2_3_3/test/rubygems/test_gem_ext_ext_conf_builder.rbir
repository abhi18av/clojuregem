s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/ext")),
  s(:class,
    s(:const, nil, :TestGemExtExtConfBuilder),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@ext,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "ext"))),
          s(:ivasgn, :@dest_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "prefix"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@ext)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@dest_path)))),
      s(:def, :test_class_build,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:send, nil, :vc_windows?),
              s(:send,
                s(:send, nil, :nmake_found?), :!)),
            s(:send, nil, :skip,
              s(:str, "test_class_build skipped - nmake not found")), nil),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "extconf.rb")),
              s(:str, "w")),
            s(:args,
              s(:arg, :extconf)),
            s(:send,
              s(:lvar, :extconf), :puts,
              s(:str, "require 'mkmf'\ncreate_makefile 'foo'"))),
          s(:lvasgn, :output,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@ext)),
            s(:args),
            s(:begin,
              s(:lvasgn, :result,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :build,
                  s(:str, "extconf.rb"),
                  s(:nil),
                  s(:ivar, :@dest_path),
                  s(:lvar, :output))),
              s(:send, nil, :assert_same,
                s(:lvar, :result),
                s(:lvar, :output)))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^current directory:"),
              s(:regopt)),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 0))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^"),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :ruby)),
              s(:str, ".* extconf.rb"),
              s(:regopt)),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:str, "creating Makefile\n"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 2))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^current directory:"),
              s(:regopt)),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 3))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, "clean"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 4))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, ""),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 7))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, "install"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 10))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:const, nil, :Dir), :glob,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "siteconf*.rb")))))),
      s(:def, :test_class_build_rbconfig_make_prog,
        s(:args),
        s(:block,
          s(:send, nil, :configure_args),
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:const, nil, :File), :open,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:ivar, :@ext),
                  s(:str, "extconf.rb")),
                s(:str, "w")),
              s(:args,
                s(:arg, :extconf)),
              s(:send,
                s(:lvar, :extconf), :puts,
                s(:str, "require 'mkmf'\ncreate_makefile 'foo'"))),
            s(:lvasgn, :output,
              s(:array)),
            s(:block,
              s(:send,
                s(:const, nil, :Dir), :chdir,
                s(:ivar, :@ext)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :build,
                s(:str, "extconf.rb"),
                s(:nil),
                s(:ivar, :@dest_path),
                s(:lvar, :output))),
            s(:send, nil, :assert_equal,
              s(:str, "creating Makefile\n"),
              s(:send,
                s(:lvar, :output), :[],
                s(:int, 2))),
            s(:send, nil, :assert_contains_make_command,
              s(:str, "clean"),
              s(:send,
                s(:lvar, :output), :[],
                s(:int, 4))),
            s(:send, nil, :assert_contains_make_command,
              s(:str, ""),
              s(:send,
                s(:lvar, :output), :[],
                s(:int, 7))),
            s(:send, nil, :assert_contains_make_command,
              s(:str, "install"),
              s(:send,
                s(:lvar, :output), :[],
                s(:int, 10)))))),
      s(:def, :test_class_build_env_make,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :env_make,
              s(:send,
                s(:const, nil, :ENV), :delete,
                s(:str, "MAKE"))),
            s(:send,
              s(:const, nil, :ENV), :[]=,
              s(:str, "MAKE"),
              s(:str, "anothermake")),
            s(:block,
              s(:send, nil, :configure_args,
                s(:str, "")),
              s(:args),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:const, nil, :File), :open,
                    s(:send,
                      s(:const, nil, :File), :join,
                      s(:ivar, :@ext),
                      s(:str, "extconf.rb")),
                    s(:str, "w")),
                  s(:args,
                    s(:arg, :extconf)),
                  s(:send,
                    s(:lvar, :extconf), :puts,
                    s(:str, "require 'mkmf'\ncreate_makefile 'foo'"))),
                s(:lvasgn, :output,
                  s(:array)),
                s(:block,
                  s(:send, nil, :assert_raises,
                    s(:const,
                      s(:const, nil, :Gem), :InstallError)),
                  s(:args),
                  s(:block,
                    s(:send,
                      s(:const, nil, :Dir), :chdir,
                      s(:ivar, :@ext)),
                    s(:args),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :build,
                      s(:str, "extconf.rb"),
                      s(:nil),
                      s(:ivar, :@dest_path),
                      s(:lvar, :output)))),
                s(:send, nil, :assert_equal,
                  s(:str, "creating Makefile\n"),
                  s(:send,
                    s(:lvar, :output), :[],
                    s(:int, 2))),
                s(:send, nil, :assert_contains_make_command,
                  s(:str, "clean"),
                  s(:send,
                    s(:lvar, :output), :[],
                    s(:int, 4)))))),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "MAKE"),
            s(:lvar, :env_make)))),
      s(:def, :test_class_build_extconf_fail,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:send, nil, :vc_windows?),
              s(:send,
                s(:send, nil, :nmake_found?), :!)),
            s(:send, nil, :skip,
              s(:str, "test_class_build_extconf_fail skipped - nmake not found")), nil),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "extconf.rb")),
              s(:str, "w")),
            s(:args,
              s(:arg, :extconf)),
            s(:begin,
              s(:send,
                s(:lvar, :extconf), :puts,
                s(:str, "require 'mkmf'")),
              s(:send,
                s(:lvar, :extconf), :puts,
                s(:str, "have_library 'nonexistent' or abort 'need libnonexistent'")),
              s(:send,
                s(:lvar, :extconf), :puts,
                s(:str, "create_makefile 'foo'")))),
          s(:lvasgn, :output,
            s(:array)),
          s(:lvasgn, :error,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :InstallError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:ivar, :@ext)),
                s(:args),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :build,
                  s(:str, "extconf.rb"),
                  s(:nil),
                  s(:ivar, :@dest_path),
                  s(:lvar, :output))))),
          s(:send, nil, :assert_equal,
            s(:str, "extconf failed, exit code 1"),
            s(:send,
              s(:lvar, :error), :message)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "^"),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :ruby)),
              s(:str, ".* extconf.rb"),
              s(:regopt)),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 1))),
          s(:send, nil, :assert_match,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@dest_path),
              s(:str, "mkmf.log")),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 4))),
          s(:send, nil, :assert_path_exists,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@dest_path),
              s(:str, "mkmf.log"))))),
      s(:def, :test_class_build_unconventional,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:send, nil, :vc_windows?),
              s(:send,
                s(:send, nil, :nmake_found?), :!)),
            s(:send, nil, :skip,
              s(:str, "test_class_build skipped - nmake not found")), nil),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "extconf.rb")),
              s(:str, "w")),
            s(:args,
              s(:arg, :extconf)),
            s(:send,
              s(:lvar, :extconf), :puts,
              s(:dstr,
                s(:str, "include RbConfig\n"),
                s(:str, "\n"),
                s(:str, "ruby =\n"),
                s(:str, "  if ENV['RUBY'] then\n"),
                s(:str, "    ENV['RUBY']\n"),
                s(:str, "  else\n"),
                s(:str, "    ruby_exe = \"\#{CONFIG['RUBY_INSTALL_NAME']}\#{CONFIG['EXEEXT']}\"\n"),
                s(:str, "    File.join CONFIG['bindir'], ruby_exe\n"),
                s(:str, "  end\n"),
                s(:str, "\n"),
                s(:str, "open 'Makefile', 'w' do |io|\n"),
                s(:str, "  io.write <<-Makefile\n"),
                s(:str, "clean: ruby\n"),
                s(:str, "all: ruby\n"),
                s(:str, "install: ruby\n"),
                s(:str, "\n"),
                s(:str, "ruby:\n"),
                s(:str, "\\t\#{ruby} -e0\n"),
                s(:str, "\n"),
                s(:str, "  Makefile\n"),
                s(:str, "end\n")))),
          s(:lvasgn, :output,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@ext)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :build,
              s(:str, "extconf.rb"),
              s(:nil),
              s(:ivar, :@dest_path),
              s(:lvar, :output))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, "clean"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 4))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, ""),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 7))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, "install"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 10))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:const, nil, :Dir), :glob,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@ext),
                s(:str, "siteconf*.rb")))))),
      s(:def, :test_class_make,
        s(:args),
        s(:begin,
          s(:if,
            s(:and,
              s(:send, nil, :vc_windows?),
              s(:send,
                s(:send, nil, :nmake_found?), :!)),
            s(:send, nil, :skip,
              s(:str, "test_class_make skipped - nmake not found")), nil),
          s(:lvasgn, :output,
            s(:array)),
          s(:lvasgn, :makefile_path,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@ext),
              s(:str, "Makefile"))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:lvar, :makefile_path),
              s(:str, "w")),
            s(:args,
              s(:arg, :makefile)),
            s(:begin,
              s(:send,
                s(:lvar, :makefile), :puts,
                s(:str, "# π")),
              s(:send,
                s(:lvar, :makefile), :puts,
                s(:str, "RUBYARCHDIR = $(foo)$(target_prefix)")),
              s(:send,
                s(:lvar, :makefile), :puts,
                s(:str, "RUBYLIBDIR = $(bar)$(target_prefix)")),
              s(:send,
                s(:lvar, :makefile), :puts,
                s(:str, "clean:")),
              s(:send,
                s(:lvar, :makefile), :puts,
                s(:str, "all:")),
              s(:send,
                s(:lvar, :makefile), :puts,
                s(:str, "install:")))),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :chdir,
              s(:ivar, :@ext)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :make,
              s(:ivar, :@ext),
              s(:lvar, :output))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, "clean"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 1))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, ""),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 4))),
          s(:send, nil, :assert_contains_make_command,
            s(:str, "install"),
            s(:send,
              s(:lvar, :output), :[],
              s(:int, 7))))),
      s(:def, :test_class_make_no_Makefile,
        s(:args),
        s(:begin,
          s(:lvasgn, :error,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :InstallError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :chdir,
                  s(:ivar, :@ext)),
                s(:args),
                s(:send,
                  s(:const,
                    s(:const,
                      s(:const, nil, :Gem), :Ext), :ExtConfBuilder), :make,
                  s(:ivar, :@ext),
                  s(:array,
                    s(:str, "output")))))),
          s(:send, nil, :assert_equal,
            s(:str, "Makefile not found"),
            s(:send,
              s(:lvar, :error), :message)))),
      s(:def, :configure_args,
        s(:args,
          s(:optarg, :args,
            s(:nil))),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :configure_args,
              s(:send,
                s(:const,
                  s(:const, nil, :RbConfig), :CONFIG), :[],
                s(:str, "configure_args"))),
            s(:if,
              s(:lvar, :args),
              s(:send,
                s(:const,
                  s(:const, nil, :RbConfig), :CONFIG), :[]=,
                s(:str, "configure_args"),
                s(:lvar, :args)), nil),
            s(:yield)),
          s(:if,
            s(:lvar, :configure_args),
            s(:send,
              s(:const,
                s(:const, nil, :RbConfig), :CONFIG), :[]=,
              s(:str, "configure_args"),
              s(:lvar, :configure_args)),
            s(:send,
              s(:const,
                s(:const, nil, :RbConfig), :CONFIG), :delete,
              s(:str, "configure_args"))))))))
