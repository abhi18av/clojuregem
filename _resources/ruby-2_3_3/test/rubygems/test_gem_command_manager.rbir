s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/command_manager")),
  s(:class,
    s(:const, nil, :TestGemCommandManager),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@command_manager,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :CommandManager), :new)))),
      s(:def, :test_find_command,
        s(:args),
        s(:begin,
          s(:lvasgn, :command,
            s(:send,
              s(:ivar, :@command_manager), :find_command,
              s(:str, "install"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Commands), :InstallCommand),
            s(:lvar, :command)),
          s(:lvasgn, :command,
            s(:send,
              s(:ivar, :@command_manager), :find_command,
              s(:str, "ins"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Commands), :InstallCommand),
            s(:lvar, :command)))),
      s(:def, :test_find_command_ambiguous,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :CommandLineError)),
              s(:args),
              s(:send,
                s(:ivar, :@command_manager), :find_command,
                s(:str, "u")))),
          s(:send, nil, :assert_equal,
            s(:str, "Ambiguous command u matches [uninstall, unpack, update]"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_find_command_ambiguous_exact,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :ins_command,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Commands), :send,
              s(:sym, :const_set),
              s(:sym, :InsCommand),
              s(:lvar, :ins_command)),
            s(:send,
              s(:ivar, :@command_manager), :register_command,
              s(:sym, :ins)),
            s(:lvasgn, :command,
              s(:send,
                s(:ivar, :@command_manager), :find_command,
                s(:str, "ins"))),
            s(:send, nil, :assert_kind_of,
              s(:lvar, :ins_command),
              s(:lvar, :command))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :Commands), :send,
            s(:sym, :remove_const),
            s(:sym, :InsCommand)))),
      s(:def, :test_find_command_unknown,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :CommandLineError)),
              s(:args),
              s(:send,
                s(:ivar, :@command_manager), :find_command,
                s(:str, "xyz")))),
          s(:send, nil, :assert_equal,
            s(:str, "Unknown command xyz"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_run_interrupt,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :old_load_path,
              s(:send,
                s(:gvar, :$:), :dup)),
            s(:send,
              s(:gvar, :$:), :<<,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "test/rubygems"),
                s(:cvar, :@@project_dir))),
            s(:send,
              s(:const, nil, :Gem), :load_env_plugins),
            s(:send,
              s(:ivar, :@command_manager), :register_command,
              s(:sym, :interrupt)),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:begin,
                s(:block,
                  s(:send, nil, :assert_raises,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :MockGemUi), :TermError)),
                  s(:args),
                  s(:send,
                    s(:ivar, :@command_manager), :run,
                    s(:array,
                      s(:str, "interrupt")))),
                s(:send, nil, :assert_equal,
                  s(:str, ""),
                  s(:send,
                    s(:send, nil, :ui), :output)),
                s(:send, nil, :assert_equal,
                  s(:str, "ERROR:  Interrupted\n"),
                  s(:send,
                    s(:send, nil, :ui), :error))))),
          s(:begin,
            s(:send,
              s(:gvar, :$:), :replace,
              s(:lvar, :old_load_path)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :CommandManager), :reset)))),
      s(:def, :test_run_crash_command,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :old_load_path,
              s(:send,
                s(:gvar, :$:), :dup)),
            s(:send,
              s(:gvar, :$:), :<<,
              s(:send,
                s(:const, nil, :File), :expand_path,
                s(:str, "test/rubygems"),
                s(:cvar, :@@project_dir))),
            s(:send,
              s(:ivar, :@command_manager), :register_command,
              s(:sym, :crash)),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:begin,
                s(:block,
                  s(:send, nil, :assert_raises,
                    s(:const,
                      s(:const,
                        s(:const, nil, :Gem), :MockGemUi), :TermError)),
                  s(:args),
                  s(:send,
                    s(:ivar, :@command_manager), :run,
                    s(:array,
                      s(:str, "crash")))),
                s(:send, nil, :assert_equal,
                  s(:str, ""),
                  s(:send,
                    s(:send, nil, :ui), :output)),
                s(:lvasgn, :err,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send, nil, :ui), :error), :split,
                      s(:str, "\n")), :first)),
                s(:send, nil, :assert_equal,
                  s(:str, "ERROR:  Loading command: crash (RuntimeError)"),
                  s(:lvar, :err))))),
          s(:begin,
            s(:send,
              s(:gvar, :$:), :replace,
              s(:lvar, :old_load_path)),
            s(:send,
              s(:ivar, :@command_manager), :unregister_command,
              s(:sym, :crash))))),
      s(:def, :test_process_args_bad_arg,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :MockGemUi), :TermError)),
              s(:args),
              s(:send,
                s(:ivar, :@command_manager), :process_args,
                s(:array,
                  s(:str, "--bad-arg"))))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "invalid option: --bad-arg"),
              s(:regopt, :i)),
            s(:send,
              s(:ivar, :@ui), :error)))),
      s(:def, :test_process_args_install,
        s(:args),
        s(:block,
          s(:send, nil, :use_ui,
            s(:ivar, :@ui)),
          s(:args),
          s(:begin,
            s(:lvasgn, :check_options,
              s(:nil)),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@command_manager), :[],
                  s(:str, "install")), :when_invoked),
              s(:args,
                s(:arg, :options)),
              s(:begin,
                s(:lvasgn, :check_options,
                  s(:lvar, :options)),
                s(:true))),
            s(:send,
              s(:ivar, :@command_manager), :process_args,
              s(:array,
                s(:str, "install"))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "ri")),
              s(:send,
                s(:send,
                  s(:lvar, :check_options), :[],
                  s(:sym, :document)), :sort)),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :force))),
            s(:send, nil, :assert_equal,
              s(:sym, :both),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :domain))),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :wrappers))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Requirement), :default),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :version))),
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :install_dir))),
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :bin_dir))),
            s(:lvasgn, :check_options,
              s(:nil)),
            s(:send,
              s(:ivar, :@command_manager), :process_args,
              s(:array,
                s(:str, "install"),
                s(:str, "--force"),
                s(:str, "--local"),
                s(:str, "--rdoc"),
                s(:str, "--install-dir"),
                s(:str, "."),
                s(:str, "--version"),
                s(:str, "3.0"),
                s(:str, "--no-wrapper"),
                s(:str, "--bindir"),
                s(:str, "."))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "rdoc"),
                s(:str, "ri")),
              s(:send,
                s(:send,
                  s(:lvar, :check_options), :[],
                  s(:sym, :document)), :sort)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :force))),
            s(:send, nil, :assert_equal,
              s(:sym, :local),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :domain))),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :wrappers))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Requirement), :new,
                s(:str, "3.0")),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :version))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :Dir), :pwd),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :install_dir))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:const, nil, :Dir), :pwd),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :bin_dir))),
            s(:lvasgn, :check_options,
              s(:nil)),
            s(:send,
              s(:ivar, :@command_manager), :process_args,
              s(:array,
                s(:str, "install"),
                s(:str, "--remote"))),
            s(:send, nil, :assert_equal,
              s(:sym, :remote),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :domain))),
            s(:lvasgn, :check_options,
              s(:nil)),
            s(:send,
              s(:ivar, :@command_manager), :process_args,
              s(:array,
                s(:str, "install"),
                s(:str, "--both"))),
            s(:send, nil, :assert_equal,
              s(:sym, :both),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :domain))),
            s(:lvasgn, :check_options,
              s(:nil)),
            s(:send,
              s(:ivar, :@command_manager), :process_args,
              s(:array,
                s(:str, "install"),
                s(:str, "--both"))),
            s(:send, nil, :assert_equal,
              s(:sym, :both),
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :domain)))))),
      s(:def, :test_process_args_uninstall,
        s(:args),
        s(:begin,
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@command_manager), :[],
                s(:str, "uninstall")), :when_invoked),
            s(:args,
              s(:arg, :options)),
            s(:begin,
              s(:lvasgn, :check_options,
                s(:lvar, :options)),
              s(:true))),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "uninstall"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :default),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :version))),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "uninstall"),
              s(:str, "foobar"),
              s(:str, "--version"),
              s(:str, "3.0"))),
          s(:send, nil, :assert_equal,
            s(:str, "foobar"),
            s(:send,
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :args)), :first)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Requirement), :new,
              s(:str, "3.0")),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :version))))),
      s(:def, :test_process_args_check,
        s(:args),
        s(:begin,
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@command_manager), :[],
                s(:str, "check")), :when_invoked),
            s(:args,
              s(:arg, :options)),
            s(:begin,
              s(:lvasgn, :check_options,
                s(:lvar, :options)),
              s(:true))),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "check"))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :alien))),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "check"),
              s(:str, "foobar"),
              s(:str, "--alien"))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :alien))))),
      s(:def, :test_process_args_build,
        s(:args),
        s(:begin,
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@command_manager), :[],
                s(:str, "build")), :when_invoked),
            s(:args,
              s(:arg, :options)),
            s(:begin,
              s(:lvasgn, :check_options,
                s(:lvar, :options)),
              s(:true))),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "build"))),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "build"),
              s(:str, "foobar.rb"))),
          s(:send, nil, :assert_equal,
            s(:str, "foobar.rb"),
            s(:send,
              s(:send,
                s(:lvar, :check_options), :[],
                s(:sym, :args)), :first)))),
      s(:def, :test_process_args_query,
        s(:args),
        s(:begin,
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@command_manager), :[],
                s(:str, "query")), :when_invoked),
            s(:args,
              s(:arg, :options)),
            s(:begin,
              s(:lvasgn, :check_options,
                s(:lvar, :options)),
              s(:true))),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "query"))),
          s(:send, nil, :assert_equal,
            s(:regexp,
              s(:regopt)),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :name))),
          s(:send, nil, :assert_equal,
            s(:sym, :local),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :domain))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :details))),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "query"),
              s(:str, "--name"),
              s(:str, "foobar"),
              s(:str, "--local"),
              s(:str, "--details"))),
          s(:send, nil, :assert_equal,
            s(:regexp,
              s(:str, "foobar"),
              s(:regopt, :i)),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :name))),
          s(:send, nil, :assert_equal,
            s(:sym, :local),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :domain))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :details))),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "query"),
              s(:str, "--remote"))),
          s(:send, nil, :assert_equal,
            s(:sym, :remote),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :domain))),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "query"),
              s(:str, "--both"))),
          s(:send, nil, :assert_equal,
            s(:sym, :both),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :domain))))),
      s(:def, :test_process_args_update,
        s(:args),
        s(:begin,
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:block,
            s(:send,
              s(:send,
                s(:ivar, :@command_manager), :[],
                s(:str, "update")), :when_invoked),
            s(:args,
              s(:arg, :options)),
            s(:begin,
              s(:lvasgn, :check_options,
                s(:lvar, :options)),
              s(:true))),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "update"))),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :document)),
            s(:str, "rdoc")),
          s(:lvasgn, :check_options,
            s(:nil)),
          s(:send,
            s(:ivar, :@command_manager), :process_args,
            s(:array,
              s(:str, "update"),
              s(:str, "--force"),
              s(:str, "--rdoc"),
              s(:str, "--install-dir"),
              s(:str, "."))),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :document)),
            s(:str, "ri")),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :force))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Dir), :pwd),
            s(:send,
              s(:lvar, :check_options), :[],
              s(:sym, :install_dir))))))))
