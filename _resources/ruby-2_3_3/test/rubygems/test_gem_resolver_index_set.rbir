s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemResolverIndexSet),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@DR,
            s(:const,
              s(:const, nil, :Gem), :Resolver)))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :IndexSet), :new)),
          s(:lvasgn, :fetcher,
            s(:send,
              s(:lvar, :set), :instance_variable_get,
              s(:sym, :@f))),
          s(:send, nil, :assert_same,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SpecFetcher), :fetcher),
            s(:lvar, :fetcher)))),
      s(:def, :test_initialize_source,
        s(:args),
        s(:begin,
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :IndexSet), :new,
              s(:str, "http://alternate.example"))),
          s(:lvasgn, :fetcher,
            s(:send,
              s(:lvar, :set), :instance_variable_get,
              s(:sym, :@f))),
          s(:send, nil, :refute_same,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :SpecFetcher), :fetcher),
            s(:lvar, :fetcher)),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:lvar, :set), :errors)))),
      s(:def, :test_find_all,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "b"),
                s(:int, 1)))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :IndexSet), :new)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1")),
            s(:block,
              s(:send,
                s(:lvar, :found), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))),
      s(:def, :test_find_all_local,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:begin,
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 1)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "a"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :fetcher), :spec,
                s(:str, "b"),
                s(:int, 1)))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :IndexSet), :new)),
          s(:send,
            s(:lvar, :set), :remote=,
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))))),
      s(:def, :test_find_all_prerelease,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :spec,
              s(:str, "a"),
              s(:str, "1.a"))),
          s(:lvasgn, :set,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :IndexSet), :new)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))),
          s(:send, nil, :assert_empty,
            s(:lvar, :found)),
          s(:send,
            s(:lvar, :dependency), :prerelease=,
            s(:true)),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:ivar, :@DR), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:lvasgn, :found,
            s(:send,
              s(:lvar, :set), :find_all,
              s(:lvar, :req))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a-1.a")),
            s(:block,
              s(:send,
                s(:lvar, :found), :map),
              s(:args,
                s(:arg, :s)),
              s(:send,
                s(:lvar, :s), :full_name))))))))
