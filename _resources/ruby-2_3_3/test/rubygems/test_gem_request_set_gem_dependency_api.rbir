s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/request_set")),
  s(:class,
    s(:const, nil, :TestGemRequestSetGemDependencyAPI),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@GDA,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :RequestSet), :GemDependencyAPI)),
          s(:ivasgn, :@set,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RequestSet), :new)),
          s(:ivasgn, :@git_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :GitSet), :new)),
          s(:ivasgn, :@vendor_set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :VendorSet), :new)),
          s(:ivasgn, :@gda,
            s(:send,
              s(:ivar, :@GDA), :new,
              s(:ivar, :@set),
              s(:str, "gem.deps.rb"))),
          s(:send,
            s(:ivar, :@gda), :instance_variable_set,
            s(:sym, :@git_set),
            s(:ivar, :@git_set)),
          s(:send,
            s(:ivar, :@gda), :instance_variable_set,
            s(:sym, :@vendor_set),
            s(:ivar, :@vendor_set)))),
      s(:def, :with_engine_version,
        s(:args,
          s(:arg, :name),
          s(:arg, :version)),
        s(:ensure,
          s(:begin,
            s(:if,
              s(:send,
                s(:const, nil, :Object), :const_defined?,
                s(:sym, :RUBY_ENGINE)),
              s(:lvasgn, :engine,
                s(:const, nil, :RUBY_ENGINE)), nil),
            s(:lvasgn, :engine_version_const,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:const, nil, :Gem), :ruby_engine), :upcase)),
                s(:str, "_VERSION"))),
            s(:lvasgn, :engine_version,
              s(:send,
                s(:const, nil, :Object), :const_get,
                s(:lvar, :engine_version_const))),
            s(:if,
              s(:lvar, :engine),
              s(:send,
                s(:const, nil, :Object), :send,
                s(:sym, :remove_const),
                s(:sym, :RUBY_ENGINE)), nil),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :name), :==,
                  s(:str, "ruby")),
                s(:send,
                  s(:const, nil, :Object), :const_defined?,
                  s(:lvar, :engine_version_const))),
              s(:send,
                s(:const, nil, :Object), :send,
                s(:sym, :remove_const),
                s(:lvar, :engine_version_const)), nil),
            s(:lvasgn, :new_engine_version_const,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:lvar, :name), :upcase)),
                s(:str, "_VERSION"))),
            s(:if,
              s(:lvar, :name),
              s(:send,
                s(:const, nil, :Object), :const_set,
                s(:sym, :RUBY_ENGINE),
                s(:lvar, :name)), nil),
            s(:if,
              s(:lvar, :version),
              s(:send,
                s(:const, nil, :Object), :const_set,
                s(:lvar, :new_engine_version_const),
                s(:lvar, :version)), nil),
            s(:send,
              s(:const, nil, :Gem), :instance_variable_set,
              s(:sym, :@ruby_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:lvar, :version))),
            s(:yield)),
          s(:begin,
            s(:if,
              s(:lvar, :name),
              s(:send,
                s(:const, nil, :Object), :send,
                s(:sym, :remove_const),
                s(:sym, :RUBY_ENGINE)), nil),
            s(:if,
              s(:lvar, :version),
              s(:send,
                s(:const, nil, :Object), :send,
                s(:sym, :remove_const),
                s(:lvar, :new_engine_version_const)), nil),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :name), :==,
                  s(:str, "ruby")),
                s(:send,
                  s(:const, nil, :Object), :const_defined?,
                  s(:lvar, :engine_version_const))),
              s(:send,
                s(:const, nil, :Object), :send,
                s(:sym, :remove_const),
                s(:lvar, :engine_version_const)), nil),
            s(:if,
              s(:lvar, :engine),
              s(:send,
                s(:const, nil, :Object), :const_set,
                s(:sym, :RUBY_ENGINE),
                s(:lvar, :engine)), nil),
            s(:if,
              s(:send,
                s(:const, nil, :Object), :const_defined?,
                s(:lvar, :engine_version_const)), nil,
              s(:send,
                s(:const, nil, :Object), :const_set,
                s(:lvar, :engine_version_const),
                s(:lvar, :engine_version))),
            s(:if,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :instance_variables), :include?,
                s(:sym, :@ruby_version)),
              s(:send,
                s(:const, nil, :Gem), :send,
                s(:sym, :remove_instance_variable),
                s(:sym, :@ruby_version)), nil)))),
      s(:def, :test_gempspec_with_multiple_runtime_deps,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "foo"),
              s(:str, "1.0")),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_runtime_dependency,
              s(:str, "bar"),
              s(:str, ">= 1.6.0"),
              s(:str, "< 1.6.4"))),
          s(:send,
            s(:ivar, :@gda), :gemspec),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:array,
                s(:str, "foo"),
                s(:str, "bar")), :sort),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@set), :dependencies), :map,
                s(:block_pass,
                  s(:sym, :name))), :sort)),
          s(:lvasgn, :bar,
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@set), :dependencies), :find),
              s(:args,
                s(:arg, :d)),
              s(:send,
                s(:send,
                  s(:lvar, :d), :name), :==,
                s(:str, "bar")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "<"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :create,
                  s(:str, "1.6.4"))),
              s(:array,
                s(:str, ">="),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :create,
                  s(:str, "1.6.0")))),
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :bar), :requirement), :requirements), :sort)))),
      s(:def, :test_gemspec_without_group,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :send,
            s(:sym, :add_dependencies),
            s(:array,
              s(:sym, :development)),
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send,
            s(:send,
              s(:ivar, :@gda), :without_groups), :<<,
            s(:sym, :development)),
          s(:send,
            s(:ivar, :@gda), :send,
            s(:sym, :add_dependencies),
            s(:array,
              s(:sym, :development)),
            s(:array,
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "= 2")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_gem,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a")),
            s(:send,
              s(:send,
                s(:ivar, :@gda), :requires), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :default)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_duplicate,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a")),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :err)),
            s(:block,
              s(:send, nil, :capture_io),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "a")))),
          s(:lvasgn, :expected,
            s(:str, "Gem dependencies file gem.deps.rb requires a more than once.")),
          s(:send, nil, :assert_match,
            s(:lvar, :expected),
            s(:lvar, :err)))),
      s(:def, :test_gem_git,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :git),
                s(:str, "git/a")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git/a"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_bitbucket,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :bitbucket),
                s(:str, "example/repository")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "https://example@bitbucket.org/example/repository.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_bitbucket_expand_path,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :bitbucket),
                s(:str, "example")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "https://example@bitbucket.org/example/example.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_git_branch,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :err)),
            s(:block,
              s(:send, nil, :capture_io),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :git),
                    s(:str, "git/a")),
                  s(:pair,
                    s(:sym, :branch),
                    s(:str, "other")),
                  s(:pair,
                    s(:sym, :tag),
                    s(:str, "v1")))))),
          s(:lvasgn, :expected,
            s(:str, "Gem dependencies file gem.deps.rb includes git reference for both ref/branch and tag but only ref/branch is used.")),
          s(:send, nil, :assert_match,
            s(:lvar, :expected),
            s(:lvar, :err)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git/a"),
              s(:str, "other")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_git_gist,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :gist),
                s(:str, "a")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "https://gist.github.com/a.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_git_ref,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :_),
              s(:lvasgn, :err)),
            s(:block,
              s(:send, nil, :capture_io),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :git),
                    s(:str, "git/a")),
                  s(:pair,
                    s(:sym, :ref),
                    s(:str, "abcd123")),
                  s(:pair,
                    s(:sym, :branch),
                    s(:str, "other")))))),
          s(:lvasgn, :expected,
            s(:str, "Gem dependencies file gem.deps.rb includes git reference for both ref and branch but only ref is used.")),
          s(:send, nil, :assert_match,
            s(:lvar, :expected),
            s(:lvar, :err)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git/a"),
              s(:str, "abcd123")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_git_submodules,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :git),
                s(:str, "git/a")),
              s(:pair,
                s(:sym, :submodules),
                s(:true)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git/a"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git/a")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :need_submodules), :keys)))),
      s(:def, :test_gem_git_tag,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :git),
                s(:str, "git/a")),
              s(:pair,
                s(:sym, :tag),
                s(:str, "v1")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git/a"),
              s(:str, "v1")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_github,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :github),
                s(:str, "example/repository")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git://github.com/example/repository.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_github_expand_path,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :github),
                s(:str, "example")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git://github.com/example/example.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_group,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :group),
                s(:sym, :test)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_gem_group_without,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@gda), :without_groups), :<<,
            s(:sym, :test)),
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :group),
                s(:sym, :test)))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :default)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_groups,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :groups),
                s(:array,
                  s(:sym, :test),
                  s(:sym, :development))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_gem_path,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :version),
              s(:lvasgn, :directory)),
            s(:send, nil, :vendor_gem)),
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:lvar, :name),
            s(:hash,
              s(:pair,
                s(:sym, :path),
                s(:lvar, :directory)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:lvar, :name))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:lvasgn, :loaded,
            s(:send,
              s(:ivar, :@vendor_set), :load_spec,
              s(:lvar, :name),
              s(:lvar, :version),
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :RUBY),
              s(:nil))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:lvar, :name)),
              s(:str, "-"),
              s(:begin,
                s(:lvar, :version))),
            s(:send,
              s(:lvar, :loaded), :full_name)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:lvar, :name),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_platforms,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win_platform),
                s(:send,
                  s(:const, nil, :Gem), :win_platform=)),
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:false))),
            s(:block,
              s(:send, nil, :with_engine_version,
                s(:str, "ruby"),
                s(:str, "2.0.0")),
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "a"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :platforms),
                      s(:sym, :ruby)))),
                s(:send, nil, :refute_empty,
                  s(:send,
                    s(:ivar, :@set), :dependencies))))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_gem_platforms_bundler_ruby,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :win_platform),
              s(:send,
                s(:const, nil, :Gem), :win_platform=)),
            s(:array,
              s(:send,
                s(:const, nil, :Gem), :win_platform?),
              s(:false))),
          s(:block,
            s(:send, nil, :with_engine_version,
              s(:str, "ruby"),
              s(:str, "2.0.0")),
            s(:args),
            s(:begin,
              s(:lvasgn, :set,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :RequestSet), :new)),
              s(:lvasgn, :gda,
                s(:send,
                  s(:ivar, :@GDA), :new,
                  s(:lvar, :set),
                  s(:str, "gem.deps.rb"))),
              s(:send,
                s(:lvar, :gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :platforms),
                    s(:sym, :ruby)))),
              s(:send, nil, :refute_empty,
                s(:send,
                  s(:lvar, :set), :dependencies)))),
          s(:block,
            s(:send, nil, :with_engine_version,
              s(:str, "rbx"),
              s(:str, "2.0.0")),
            s(:args),
            s(:begin,
              s(:lvasgn, :set,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :RequestSet), :new)),
              s(:lvasgn, :gda,
                s(:send,
                  s(:ivar, :@GDA), :new,
                  s(:lvar, :set),
                  s(:str, "gem.deps.rb"))),
              s(:send,
                s(:lvar, :gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :platforms),
                    s(:sym, :ruby)))),
              s(:send, nil, :refute_empty,
                s(:send,
                  s(:lvar, :set), :dependencies)))),
          s(:block,
            s(:send, nil, :with_engine_version,
              s(:str, "jruby"),
              s(:str, "1.7.6")),
            s(:args),
            s(:begin,
              s(:lvasgn, :set,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :RequestSet), :new)),
              s(:lvasgn, :gda,
                s(:send,
                  s(:ivar, :@GDA), :new,
                  s(:lvar, :set),
                  s(:str, "gem.deps.rb"))),
              s(:send,
                s(:lvar, :gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :platforms),
                    s(:sym, :ruby)))),
              s(:send, nil, :assert_empty,
                s(:send,
                  s(:lvar, :set), :dependencies)))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:true)),
          s(:block,
            s(:send, nil, :with_engine_version,
              s(:str, "ruby"),
              s(:str, "2.0.0")),
            s(:args),
            s(:begin,
              s(:lvasgn, :set,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :RequestSet), :new)),
              s(:lvasgn, :gda,
                s(:send,
                  s(:ivar, :@GDA), :new,
                  s(:lvar, :set),
                  s(:str, "gem.deps.rb"))),
              s(:send,
                s(:lvar, :gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :platforms),
                    s(:sym, :ruby)))),
              s(:send, nil, :assert_empty,
                s(:send,
                  s(:lvar, :set), :dependencies)))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_gem_platforms_engine,
        s(:args),
        s(:block,
          s(:send, nil, :with_engine_version,
            s(:str, "jruby"),
            s(:str, "1.7.6")),
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@gda), :gem,
              s(:str, "a"),
              s(:hash,
                s(:pair,
                  s(:sym, :platforms),
                  s(:sym, :mri)))),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:ivar, :@set), :dependencies))))),
      s(:def, :test_gem_platforms_maglev,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win_platform),
                s(:send,
                  s(:const, nil, :Gem), :win_platform=)),
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:false))),
            s(:block,
              s(:send, nil, :with_engine_version,
                s(:str, "maglev"),
                s(:str, "1.0.0")),
              s(:args),
              s(:begin,
                s(:lvasgn, :set,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :RequestSet), :new)),
                s(:lvasgn, :gda,
                  s(:send,
                    s(:ivar, :@GDA), :new,
                    s(:lvar, :set),
                    s(:str, "gem.deps.rb"))),
                s(:send,
                  s(:lvar, :gda), :gem,
                  s(:str, "a"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :platforms),
                      s(:sym, :ruby)))),
                s(:send, nil, :refute_empty,
                  s(:send,
                    s(:lvar, :set), :dependencies)),
                s(:lvasgn, :set,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :RequestSet), :new)),
                s(:lvasgn, :gda,
                  s(:send,
                    s(:ivar, :@GDA), :new,
                    s(:lvar, :set),
                    s(:str, "gem.deps.rb"))),
                s(:send,
                  s(:lvar, :gda), :gem,
                  s(:str, "a"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :platforms),
                      s(:sym, :maglev)))),
                s(:send, nil, :refute_empty,
                  s(:send,
                    s(:lvar, :set), :dependencies))))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_gem_platforms_multiple,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win_platform),
                s(:send,
                  s(:const, nil, :Gem), :win_platform=)),
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:false))),
            s(:block,
              s(:send, nil, :with_engine_version,
                s(:str, "ruby"),
                s(:str, "2.0.0")),
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "a"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :platforms),
                      s(:array,
                        s(:sym, :mswin),
                        s(:sym, :jruby))))),
                s(:send, nil, :assert_empty,
                  s(:send,
                    s(:ivar, :@set), :dependencies))))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_gem_platforms_platform,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win_platform),
                s(:send,
                  s(:const, nil, :Gem), :win_platform=)),
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:false))),
            s(:block,
              s(:send, nil, :with_engine_version,
                s(:str, "ruby"),
                s(:str, "2.0.0")),
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "a"),
                  s(:hash,
                    s(:pair,
                      s(:sym, :platforms),
                      s(:sym, :jruby)),
                    s(:pair,
                      s(:sym, :platform),
                      s(:sym, :ruby)))),
                s(:send, nil, :refute_empty,
                  s(:send,
                    s(:ivar, :@set), :dependencies))))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_gem_platforms_version,
        s(:args),
        s(:block,
          s(:send, nil, :with_engine_version,
            s(:str, "ruby"),
            s(:str, "2.0.0")),
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@gda), :gem,
              s(:str, "a"),
              s(:hash,
                s(:pair,
                  s(:sym, :platforms),
                  s(:sym, :ruby_18)))),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:ivar, :@set), :dependencies))))),
      s(:def, :test_gem_platforms_unknown,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :platforms),
                    s(:sym, :unknown)))))),
          s(:send, nil, :assert_equal,
            s(:str, "unknown platform :unknown"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_gem_requires,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :require),
                s(:array,
                  s(:str, "b"),
                  s(:str, "c"))))),
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "d"),
            s(:hash,
              s(:pair,
                s(:sym, :require),
                s(:str, "e")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a")),
              s(:send, nil, :dep,
                s(:str, "d"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "b"),
              s(:str, "c")),
            s(:send,
              s(:send,
                s(:ivar, :@gda), :requires), :[],
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "e")),
            s(:send,
              s(:send,
                s(:ivar, :@gda), :requires), :[],
              s(:str, "d"))))),
      s(:def, :test_gem_requires_false,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :require),
                s(:false)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@gda), :requires)))),
      s(:def, :test_gem_requires_without_group,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@gda), :without_groups), :<<,
            s(:sym, :test)),
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :group),
                s(:sym, :test)))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:send,
                s(:ivar, :@gda), :requires), :[],
              s(:str, "a"))))),
      s(:def, :test_gem_requirement,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:str, "~> 1.0")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "~> 1.0"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:array,
                    s(:str, "~> 1.0")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_requirements,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "b"),
            s(:str, "~> 1.0"),
            s(:str, ">= 1.0.2")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "~> 1.0"),
                s(:str, ">= 1.0.2"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "b"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:array,
                    s(:str, "~> 1.0"),
                    s(:str, ">= 1.0.2")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gem_requirements_options,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "c"),
            s(:hash,
              s(:pair,
                s(:sym, :git),
                s(:str, "https://example/c.git")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "c"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_gem_source_mismatch,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :directory)),
            s(:send, nil, :vendor_gem)),
          s(:lvasgn, :gda,
            s(:send,
              s(:ivar, :@GDA), :new,
              s(:ivar, :@set),
              s(:nil))),
          s(:send,
            s(:lvar, :gda), :gem,
            s(:lvar, :name)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :gda), :gem,
                s(:lvar, :name),
                s(:hash,
                  s(:pair,
                    s(:sym, :path),
                    s(:lvar, :directory)))))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "duplicate source path: "),
              s(:begin,
                s(:lvar, :directory)),
              s(:str, " for gem "),
              s(:begin,
                s(:lvar, :name))),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :gda,
            s(:send,
              s(:ivar, :@GDA), :new,
              s(:ivar, :@set),
              s(:nil))),
          s(:send,
            s(:lvar, :gda), :instance_variable_set,
            s(:sym, :@vendor_set),
            s(:ivar, :@vendor_set)),
          s(:send,
            s(:lvar, :gda), :gem,
            s(:lvar, :name),
            s(:hash,
              s(:pair,
                s(:sym, :path),
                s(:lvar, :directory)))),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :gda), :gem,
                s(:lvar, :name)))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "duplicate source (default) for gem "),
              s(:begin,
                s(:lvar, :name))),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_gem_deps_file,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "gem.deps.rb"),
            s(:send,
              s(:ivar, :@gda), :gem_deps_file)),
          s(:lvasgn, :gda,
            s(:send,
              s(:ivar, :@GDA), :new,
              s(:ivar, :@set),
              s(:str, "foo/Gemfile"))),
          s(:send, nil, :assert_equal,
            s(:str, "Gemfile"),
            s(:send,
              s(:lvar, :gda), :gem_deps_file)))),
      s(:def, :test_gem_group_method,
        s(:args),
        s(:begin,
          s(:lvasgn, :groups,
            s(:array)),
          s(:block,
            s(:send,
              s(:ivar, :@gda), :group,
              s(:sym, :a)),
            s(:args),
            s(:lvasgn, :groups,
              s(:send,
                s(:ivar, :@gda), :send,
                s(:sym, :gem_group),
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :group),
                    s(:sym, :b)),
                  s(:pair,
                    s(:sym, :groups),
                    s(:array,
                      s(:sym, :c),
                      s(:sym, :d))))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:sym, :a),
              s(:sym, :b),
              s(:sym, :c),
              s(:sym, :d)),
            s(:block,
              s(:send,
                s(:lvar, :groups), :sort_by),
              s(:args,
                s(:arg, :group)),
              s(:send,
                s(:lvar, :group), :to_s))))),
      s(:def, :test_gemspec,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "a"),
              s(:int, 1)),
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "b"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :s), :add_development_dependency,
                s(:str, "c"),
                s(:int, 3)))),
          s(:send,
            s(:ivar, :@gda), :gemspec),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1")),
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "= 2")),
              s(:send, nil, :dep,
                s(:str, "c"),
                s(:str, "=3"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a")),
            s(:send,
              s(:send,
                s(:ivar, :@gda), :requires), :[],
              s(:str, "a"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Requirement), :create,
                  s(:str, "!"))),
              s(:pair,
                s(:str, "b"),
                s(:send, nil, :req,
                  s(:str, "= 2"))),
              s(:pair,
                s(:str, "c"),
                s(:send, nil, :req,
                  s(:str, "= 3"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@gda), :dependencies)))),
      s(:def, :test_gemspec_bad,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :touch,
            s(:str, "a.gemspec")),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:block,
                s(:send, nil, :capture_io),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :gemspec)))),
          s(:send, nil, :assert_equal,
            s(:str, "invalid gemspec ./a.gemspec"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_gemspec_development_group,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "a"),
              s(:int, 1)),
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:send,
                s(:lvar, :s), :add_dependency,
                s(:str, "b"),
                s(:int, 2)),
              s(:send,
                s(:lvar, :s), :add_development_dependency,
                s(:str, "c"),
                s(:int, 3)))),
          s(:send,
            s(:send,
              s(:ivar, :@gda), :without_groups), :<<,
            s(:sym, :other)),
          s(:send,
            s(:ivar, :@gda), :gemspec,
            s(:hash,
              s(:pair,
                s(:sym, :development_group),
                s(:sym, :other)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1")),
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "= 2"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "a")),
            s(:send,
              s(:send,
                s(:ivar, :@gda), :requires), :[],
              s(:str, "a"))))),
      s(:def, :test_gemspec_multiple,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "a"),
              s(:int, 1)),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_dependency,
              s(:str, "b"),
              s(:int, 2))),
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "b"),
              s(:int, 2)),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_dependency,
              s(:str, "c"),
              s(:int, 3))),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gemspec))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "found multiple gemspecs at "),
              s(:begin,
                s(:ivar, :@tempdir)),
              s(:str, ", use the name: option to specify the one you want")),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_gemspec_name,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "a"),
              s(:int, 1)),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_dependency,
              s(:str, "b"),
              s(:int, 2))),
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "b"),
              s(:int, 2)),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_dependency,
              s(:str, "c"),
              s(:int, 3))),
          s(:send,
            s(:ivar, :@gda), :gemspec,
            s(:hash,
              s(:pair,
                s(:sym, :name),
                s(:str, "b")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "= 2")),
              s(:send, nil, :dep,
                s(:str, "c"),
                s(:str, "= 3"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_gemspec_named,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "a"),
              s(:int, 1)),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_dependency,
              s(:str, "b"),
              s(:int, 2))),
          s(:send,
            s(:ivar, :@gda), :gemspec),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1")),
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "= 2"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_gemspec_none,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gemspec))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "no gemspecs found at "),
              s(:begin,
                s(:ivar, :@tempdir))),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_gemspec_path,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :mkdir,
            s(:str, "other")),
          s(:block,
            s(:send, nil, :save_gemspec,
              s(:str, "a"),
              s(:int, 1),
              s(:str, "other")),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :add_dependency,
              s(:str, "b"),
              s(:int, 2))),
          s(:send,
            s(:ivar, :@gda), :gemspec,
            s(:hash,
              s(:pair,
                s(:sym, :path),
                s(:str, "other")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"),
                s(:str, "= 1")),
              s(:send, nil, :dep,
                s(:str, "b"),
                s(:str, "= 2"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_git,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@gda), :git,
              s(:str, "git://example/repo.git")),
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "a")),
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "b")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a")),
              s(:send, nil, :dep,
                s(:str, "b"))),
            s(:send,
              s(:ivar, :@set), :dependencies)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git://example/repo.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git://example/repo.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "b"))))),
      s(:def, :test_git_source,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@gda), :git_source,
              s(:sym, :example)),
            s(:args,
              s(:arg, :repo_name)),
            s(:dstr,
              s(:str, "git://example/"),
              s(:begin,
                s(:lvar, :repo_name)),
              s(:str, ".git"))),
          s(:send,
            s(:ivar, :@gda), :gem,
            s(:str, "a"),
            s(:hash,
              s(:pair,
                s(:sym, :example),
                s(:str, "repo")))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "git://example/repo.git"),
              s(:str, "master")),
            s(:send,
              s(:send,
                s(:ivar, :@git_set), :repositories), :[],
              s(:str, "a"))))),
      s(:def, :test_group,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@gda), :group,
              s(:sym, :test)),
            s(:args),
            s(:send,
              s(:ivar, :@gda), :gem,
              s(:str, "a"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send, nil, :dep,
                s(:str, "a"))),
            s(:send,
              s(:ivar, :@set), :dependencies)))),
      s(:def, :test_load,
        s(:args),
        s(:begin,
          s(:lvasgn, :tf,
            s(:block,
              s(:send,
                s(:const, nil, :Tempfile), :open,
                s(:str, "gem.deps.rb")),
              s(:args,
                s(:arg, :io)),
              s(:begin,
                s(:send,
                  s(:lvar, :io), :write,
                  s(:dstr,
                    s(:str, "gem 'a'\n"),
                    s(:str, "\n"),
                    s(:str, "group :test do\n"),
                    s(:str, "  gem 'b'\n"),
                    s(:str, "end\n"))),
                s(:send,
                  s(:lvar, :io), :flush),
                s(:lvasgn, :gda,
                  s(:send,
                    s(:ivar, :@GDA), :new,
                    s(:ivar, :@set),
                    s(:send,
                      s(:lvar, :io), :path))),
                s(:send, nil, :assert_equal,
                  s(:lvar, :gda),
                  s(:send,
                    s(:lvar, :gda), :load)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:send, nil, :dep,
                      s(:str, "a")),
                    s(:send, nil, :dep,
                      s(:str, "b"))),
                  s(:send,
                    s(:ivar, :@set), :dependencies)),
                s(:lvar, :io)))),
          s(:if,
            s(:send,
              s(:lvar, :tf), :respond_to?,
              s(:sym, :close!)),
            s(:send,
              s(:lvar, :tf), :close!), nil))),
      s(:def, :test_name_typo,
        s(:args),
        s(:send, nil, :assert_same,
          s(:ivar, :@GDA),
          s(:const,
            s(:const,
              s(:const, nil, :Gem), :RequestSet), :GemDepedencyAPI))),
      s(:def, :test_pin_gem_source,
        s(:args),
        s(:begin,
          s(:lvasgn, :gda,
            s(:send,
              s(:ivar, :@GDA), :new,
              s(:ivar, :@set),
              s(:nil))),
          s(:send,
            s(:lvar, :gda), :send,
            s(:sym, :pin_gem_source),
            s(:str, "a")),
          s(:send,
            s(:lvar, :gda), :send,
            s(:sym, :pin_gem_source),
            s(:str, "a")),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :gda), :send,
                s(:sym, :pin_gem_source),
                s(:str, "a"),
                s(:sym, :path),
                s(:str, "vendor/a")))),
          s(:send, nil, :assert_equal,
            s(:str, "duplicate source path: vendor/a for gem a"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :gda), :send,
                s(:sym, :pin_gem_source),
                s(:str, "a"),
                s(:sym, :git),
                s(:str, "git://example/repo.git")))),
          s(:send, nil, :assert_equal,
            s(:str, "duplicate source git: git://example/repo.git for gem a"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_platform_mswin,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :util_set_arch,
              s(:str, "i686-darwin8.10.1")),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@gda), :platform,
                  s(:sym, :mswin)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "a"))),
              s(:send, nil, :assert_empty,
                s(:send,
                  s(:ivar, :@set), :dependencies)))),
          s(:block,
            s(:send, nil, :util_set_arch,
              s(:str, "x86-mswin32-60")),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@gda), :platform,
                  s(:sym, :mswin)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "a"))),
              s(:send, nil, :refute_empty,
                s(:send,
                  s(:ivar, :@set), :dependencies)))))),
      s(:def, :test_platform_multiple,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win_platform),
                s(:send,
                  s(:const, nil, :Gem), :win_platform=)),
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:false))),
            s(:lvasgn, :gda,
              s(:send,
                s(:ivar, :@GDA), :new,
                s(:ivar, :@set),
                s(:nil))),
            s(:block,
              s(:send, nil, :with_engine_version,
                s(:str, "ruby"),
                s(:str, "1.8.7")),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :gda), :platform,
                  s(:sym, :mri_19),
                  s(:sym, :mri_20)),
                s(:args),
                s(:send,
                  s(:lvar, :gda), :gem,
                  s(:str, "a")))),
            s(:send, nil, :assert_empty,
              s(:send,
                s(:ivar, :@set), :dependencies)),
            s(:lvasgn, :gda,
              s(:send,
                s(:ivar, :@GDA), :new,
                s(:ivar, :@set),
                s(:nil))),
            s(:block,
              s(:send, nil, :with_engine_version,
                s(:str, "ruby"),
                s(:str, "2.0.0")),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :gda), :platform,
                  s(:sym, :mri_19),
                  s(:sym, :mri_20)),
                s(:args),
                s(:send,
                  s(:lvar, :gda), :gem,
                  s(:str, "a")))),
            s(:send, nil, :refute_empty,
              s(:send,
                s(:ivar, :@set), :dependencies))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_platform_ruby,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :win_platform),
                s(:send,
                  s(:const, nil, :Gem), :win_platform=)),
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :win_platform?),
                s(:false))),
            s(:block,
              s(:send,
                s(:ivar, :@gda), :platform,
                s(:sym, :ruby)),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :gem,
                s(:str, "a"))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:send, nil, :dep,
                  s(:str, "a"))),
              s(:send,
                s(:ivar, :@set), :dependencies))),
          s(:send,
            s(:const, nil, :Gem), :win_platform=,
            s(:lvar, :win_platform)))),
      s(:def, :test_platforms,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :util_set_arch,
              s(:str, "i686-darwin8.10.1")),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@gda), :platforms,
                  s(:sym, :ruby)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "a"))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:send, nil, :dep,
                    s(:str, "a"))),
                s(:send,
                  s(:ivar, :@set), :dependencies)),
              s(:block,
                s(:send,
                  s(:ivar, :@gda), :platforms,
                  s(:sym, :mswin)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "b"))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:send, nil, :dep,
                    s(:str, "a"))),
                s(:send,
                  s(:ivar, :@set), :dependencies)))),
          s(:block,
            s(:send, nil, :util_set_arch,
              s(:str, "x86-mswin32-60")),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@gda), :platforms,
                  s(:sym, :mswin)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :gem,
                  s(:str, "c"))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:send, nil, :dep,
                    s(:str, "a")),
                  s(:send, nil, :dep,
                    s(:str, "c"))),
                s(:send,
                  s(:ivar, :@set), :dependencies)))))),
      s(:def, :test_ruby,
        s(:args),
        s(:send, nil, :assert,
          s(:send,
            s(:ivar, :@gda), :ruby,
            s(:const, nil, :RUBY_VERSION)))),
      s(:def, :test_ruby_engine,
        s(:args),
        s(:block,
          s(:send, nil, :with_engine_version,
            s(:str, "jruby"),
            s(:str, "1.7.6")),
          s(:args),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@gda), :ruby,
              s(:const, nil, :RUBY_VERSION),
              s(:hash,
                s(:pair,
                  s(:sym, :engine),
                  s(:str, "jruby")),
                s(:pair,
                  s(:sym, :engine_version),
                  s(:str, "1.7.6"))))))),
      s(:def, :test_ruby_engine_mismatch_engine,
        s(:args),
        s(:block,
          s(:send, nil, :with_engine_version,
            s(:str, "ruby"),
            s(:str, "2.0.0")),
          s(:args),
          s(:begin,
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const, nil, :Gem), :RubyVersionMismatch)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :ruby,
                  s(:const, nil, :RUBY_VERSION),
                  s(:hash,
                    s(:pair,
                      s(:sym, :engine),
                      s(:str, "jruby")),
                    s(:pair,
                      s(:sym, :engine_version),
                      s(:str, "1.7.4")))))),
            s(:send, nil, :assert_equal,
              s(:str, "Your ruby engine is ruby, but your gem.deps.rb requires jruby"),
              s(:send,
                s(:lvar, :e), :message))))),
      s(:def, :test_ruby_engine_mismatch_version,
        s(:args),
        s(:block,
          s(:send, nil, :with_engine_version,
            s(:str, "jruby"),
            s(:str, "1.7.6")),
          s(:args),
          s(:begin,
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raises,
                  s(:const,
                    s(:const, nil, :Gem), :RubyVersionMismatch)),
                s(:args),
                s(:send,
                  s(:ivar, :@gda), :ruby,
                  s(:const, nil, :RUBY_VERSION),
                  s(:hash,
                    s(:pair,
                      s(:sym, :engine),
                      s(:str, "jruby")),
                    s(:pair,
                      s(:sym, :engine_version),
                      s(:str, "1.7.4")))))),
            s(:send, nil, :assert_equal,
              s(:str, "Your ruby engine version is jruby 1.7.6, but your gem.deps.rb requires jruby 1.7.4"),
              s(:send,
                s(:lvar, :e), :message))))),
      s(:def, :test_ruby_engine_no_engine_version,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :ruby,
                s(:const, nil, :RUBY_VERSION),
                s(:hash,
                  s(:pair,
                    s(:sym, :engine),
                    s(:str, "jruby")))))),
          s(:send, nil, :assert_equal,
            s(:str, "you must specify engine_version along with the ruby engine"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_ruby_mismatch,
        s(:args),
        s(:begin,
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const, nil, :Gem), :RubyVersionMismatch)),
              s(:args),
              s(:send,
                s(:ivar, :@gda), :ruby,
                s(:str, "1.8.0")))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "Your Ruby version is "),
              s(:begin,
                s(:const, nil, :RUBY_VERSION)),
              s(:str, ", but your gem.deps.rb requires 1.8.0")),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_ruby_mismatch_installing,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@gda), :installing=,
            s(:true)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@gda), :ruby,
              s(:str, "1.8.0"))))),
      s(:def, :test_source,
        s(:args),
        s(:begin,
          s(:lvasgn, :sources,
            s(:send,
              s(:const, nil, :Gem), :sources)),
          s(:send,
            s(:ivar, :@gda), :source,
            s(:str, "http://first.example")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "http://first.example")),
            s(:send,
              s(:const, nil, :Gem), :sources)),
          s(:send, nil, :assert_same,
            s(:lvar, :sources),
            s(:send,
              s(:const, nil, :Gem), :sources)),
          s(:send,
            s(:ivar, :@gda), :source,
            s(:str, "http://second.example")),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "http://first.example"),
              s(:str, "http://second.example")),
            s(:send,
              s(:const, nil, :Gem), :sources)))),
      s(:def, :test_with_engine_version,
        s(:args),
        s(:begin,
          s(:lvasgn, :version,
            s(:const, nil, :RUBY_VERSION)),
          s(:lvasgn, :engine,
            s(:send,
              s(:const, nil, :Gem), :ruby_engine)),
          s(:lvasgn, :engine_version_const,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:const, nil, :Gem), :ruby_engine), :upcase)),
              s(:str, "_VERSION"))),
          s(:lvasgn, :engine_version,
            s(:send,
              s(:const, nil, :Object), :const_get,
              s(:lvar, :engine_version_const))),
          s(:block,
            s(:send, nil, :with_engine_version,
              s(:str, "other"),
              s(:str, "1.2.3")),
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:str, "other"),
                s(:send,
                  s(:const, nil, :Gem), :ruby_engine)),
              s(:send, nil, :assert_equal,
                s(:str, "1.2.3"),
                s(:const, nil, :OTHER_VERSION)),
              s(:if,
                s(:lvar, :engine),
                s(:send, nil, :assert_equal,
                  s(:lvar, :version),
                  s(:const, nil, :RUBY_VERSION)), nil))),
          s(:send, nil, :assert_equal,
            s(:lvar, :version),
            s(:const, nil, :RUBY_VERSION)),
          s(:send, nil, :assert_equal,
            s(:lvar, :engine),
            s(:send,
              s(:const, nil, :Gem), :ruby_engine)),
          s(:if,
            s(:lvar, :engine),
            s(:send, nil, :assert_equal,
              s(:lvar, :engine_version),
              s(:send,
                s(:const, nil, :Object), :const_get,
                s(:lvar, :engine_version_const))), nil))))))
