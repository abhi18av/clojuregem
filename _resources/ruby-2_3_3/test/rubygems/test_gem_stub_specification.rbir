s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/stub_specification")),
  s(:class,
    s(:const, nil, :TestStubSpecification),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:casgn, nil, :SPECIFICATIONS,
        s(:send,
          s(:const, nil, :File), :expand_path,
          s(:send,
            s(:const, nil, :File), :join,
            s(:str, ".."),
            s(:str, "specifications")),
          s(:str, "(string)"))),
      s(:casgn, nil, :FOO,
        s(:send,
          s(:const, nil, :File), :join,
          s(:const, nil, :SPECIFICATIONS),
          s(:str, "foo-0.0.1-x86-mswin32.gemspec"))),
      s(:casgn, nil, :BAR,
        s(:send,
          s(:const, nil, :File), :join,
          s(:const, nil, :SPECIFICATIONS),
          s(:str, "bar-0.0.2.gemspec"))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@base_dir,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:const, nil, :SPECIFICATIONS))),
          s(:ivasgn, :@gems_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :File), :dirname,
                s(:const, nil, :SPECIFICATIONS)),
              s(:str, "gem"))),
          s(:ivasgn, :@foo,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :StubSpecification), :gemspec_stub,
              s(:const, nil, :FOO),
              s(:ivar, :@base_dir),
              s(:ivar, :@gems_dir))))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:send,
              s(:ivar, :@foo), :name)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:str, "0.0.1")),
            s(:send,
              s(:ivar, :@foo), :version)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Platform), :new,
              s(:str, "mswin32")),
            s(:send,
              s(:ivar, :@foo), :platform)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "lib"),
              s(:str, "lib/f oo/ext")),
            s(:send,
              s(:ivar, :@foo), :require_paths)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@foo), :stubbed?)))),
      s(:def, :test_initialize_extension,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send, nil, :stub_with_extension)),
          s(:send, nil, :assert_equal,
            s(:str, "stub_e"),
            s(:send,
              s(:lvar, :stub), :name)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :v,
              s(:int, 2)),
            s(:send,
              s(:lvar, :stub), :version)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Platform), :RUBY),
            s(:send,
              s(:lvar, :stub), :platform)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:lvar, :stub), :extension_dir),
              s(:str, "lib")),
            s(:send,
              s(:lvar, :stub), :require_paths)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "ext/stub_e/extconf.rb")),
            s(:send,
              s(:lvar, :stub), :extensions)))),
      s(:def, :test_initialize_missing_stubline,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :StubSpecification), :gemspec_stub,
              s(:const, nil, :BAR),
              s(:ivar, :@base_dir),
              s(:ivar, :@gems_dir))),
          s(:send, nil, :assert_equal,
            s(:str, "bar"),
            s(:send,
              s(:lvar, :stub), :name)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:str, "0.0.2")),
            s(:send,
              s(:lvar, :stub), :version)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Platform), :new,
              s(:str, "ruby")),
            s(:send,
              s(:lvar, :stub), :platform)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "lib")),
            s(:send,
              s(:lvar, :stub), :require_paths)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :stub), :stubbed?), :!)))),
      s(:def, :test_contains_requirable_file_eh,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send, nil, :stub_without_extension)),
          s(:lvasgn, :code_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :stub), :gem_dir),
              s(:str, "lib"),
              s(:str, "code.rb"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:lvar, :code_rb))),
          s(:send,
            s(:const, nil, :FileUtils), :touch,
            s(:lvar, :code_rb)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :stub), :contains_requirable_file?,
              s(:str, "code"))))),
      s(:def, :test_contains_requirable_file_eh_extension,
        s(:args),
        s(:block,
          s(:send, nil, :stub_with_extension),
          s(:args,
            s(:arg, :stub)),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :_),
                s(:lvasgn, :err)),
              s(:block,
                s(:send, nil, :capture_io),
                s(:args),
                s(:send, nil, :refute,
                  s(:send,
                    s(:lvar, :stub), :contains_requirable_file?,
                    s(:str, "nonexistent"))))),
            s(:lvasgn, :expected,
              s(:send,
                s(:str, "Ignoring stub_e-2 because its extensions are not built.  "), :+,
                s(:str, "Try: gem pristine stub_e --version 2\n"))),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :err))))),
      s(:def, :test_full_require_paths,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send, nil, :stub_with_extension)),
          s(:lvasgn, :expected,
            s(:array,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:lvar, :stub), :full_gem_path),
                s(:str, "lib")),
              s(:send,
                s(:lvar, :stub), :extension_dir))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:lvar, :stub), :full_require_paths)))),
      s(:def, :test_lib_dirs_glob,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send, nil, :stub_without_extension)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :stub), :full_gem_path),
              s(:str, "lib")),
            s(:send,
              s(:lvar, :stub), :lib_dirs_glob)))),
      s(:def, :test_matches_for_glob,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send, nil, :stub_without_extension)),
          s(:lvasgn, :code_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:lvar, :stub), :gem_dir),
              s(:str, "lib"),
              s(:str, "code.rb"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:lvar, :code_rb))),
          s(:send,
            s(:const, nil, :FileUtils), :touch,
            s(:lvar, :code_rb)),
          s(:send, nil, :assert_equal,
            s(:lvar, :code_rb),
            s(:send,
              s(:send,
                s(:lvar, :stub), :matches_for_glob,
                s(:str, "code*")), :first)))),
      s(:def, :test_missing_extensions_eh,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:block,
              s(:send, nil, :stub_with_extension),
              s(:args,
                s(:arg, :s)),
              s(:begin,
                s(:lvasgn, :extconf_rb,
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:send,
                      s(:lvar, :s), :gem_dir),
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :extensions), :first))),
                s(:send,
                  s(:const, nil, :FileUtils), :mkdir_p,
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:lvar, :extconf_rb))),
                s(:block,
                  s(:send, nil, :open,
                    s(:lvar, :extconf_rb),
                    s(:str, "w")),
                  s(:args,
                    s(:arg, :f)),
                  s(:send,
                    s(:lvar, :f), :write,
                    s(:dstr,
                      s(:str, "        open 'Makefile', 'w' do |f|\n"),
                      s(:str, "          f.puts \"clean:\\n\\techo clean\"\n"),
                      s(:str, "          f.puts \"default:\\n\\techo built\"\n"),
                      s(:str, "          f.puts \"install:\\n\\techo installed\"\n"),
                      s(:str, "        end\n"))))))),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :stub), :missing_extensions?)),
          s(:send,
            s(:lvar, :stub), :build_extensions),
          s(:send, nil, :refute,
            s(:send,
              s(:lvar, :stub), :missing_extensions?)))),
      s(:def, :test_missing_extensions_eh_default_gem,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send, nil, :new_default_spec,
              s(:str, "default"),
              s(:int, 1))),
          s(:send,
            s(:send,
              s(:lvar, :spec), :extensions), :<<,
            s(:str, "extconf.rb")),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:lvar, :spec), :loaded_from),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:lvar, :spec), :to_ruby_for_cache))),
          s(:lvasgn, :default_spec,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :StubSpecification), :gemspec_stub,
              s(:send,
                s(:lvar, :spec), :loaded_from),
              s(:send,
                s(:lvar, :spec), :base_dir),
              s(:send,
                s(:lvar, :spec), :gems_dir))),
          s(:send, nil, :refute,
            s(:send,
              s(:lvar, :default_spec), :missing_extensions?)))),
      s(:def, :test_missing_extensions_eh_none,
        s(:args),
        s(:send, nil, :refute,
          s(:send,
            s(:ivar, :@foo), :missing_extensions?))),
      s(:def, :test_to_spec,
        s(:args),
        s(:begin,
          s(:lvasgn, :real_foo,
            s(:send, nil, :util_spec,
              s(:send,
                s(:ivar, :@foo), :name),
              s(:send,
                s(:ivar, :@foo), :version))),
          s(:send,
            s(:lvar, :real_foo), :activate),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@foo), :version),
            s(:send,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :loaded_specs), :[],
                s(:send,
                  s(:ivar, :@foo), :name)), :version),
            s(:str, "sanity check")),
          s(:send, nil, :assert_same,
            s(:lvar, :real_foo),
            s(:send,
              s(:ivar, :@foo), :to_spec)))),
      s(:def, :test_to_spec_with_other_specs_loaded_does_not_warn,
        s(:args),
        s(:begin,
          s(:lvasgn, :real_foo,
            s(:send, nil, :util_spec,
              s(:send,
                s(:ivar, :@foo), :name),
              s(:send,
                s(:ivar, :@foo), :version))),
          s(:send,
            s(:lvar, :real_foo), :activate),
          s(:lvasgn, :bar,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :StubSpecification), :gemspec_stub,
              s(:const, nil, :BAR),
              s(:send,
                s(:lvar, :real_foo), :base_dir),
              s(:send,
                s(:lvar, :real_foo), :gems_dir))),
          s(:send, nil, :refute_predicate,
            s(:send,
              s(:const, nil, :Gem), :loaded_specs),
            s(:sym, :empty?)),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :bar), :to_spec)))),
      s(:def, :test_to_spec_activated,
        s(:args),
        s(:begin,
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@foo), :to_spec), :is_a?,
              s(:const,
                s(:const, nil, :Gem), :Specification))),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:send,
              s(:send,
                s(:ivar, :@foo), :to_spec), :name)),
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@foo), :to_spec), :instance_variable_get,
              s(:sym, :@ignored))))),
      s(:def, :test_to_spec_missing_extensions,
        s(:args),
        s(:begin,
          s(:lvasgn, :stub,
            s(:send, nil, :stub_with_extension)),
          s(:block,
            s(:send, nil, :capture_io),
            s(:args),
            s(:send,
              s(:lvar, :stub), :contains_requirable_file?,
              s(:str, "nonexistent"))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:lvar, :stub), :to_spec), :instance_variable_get,
              s(:sym, :@ignored))))),
      s(:def, :stub_with_extension,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@gemhome),
              s(:str, "specifications"),
              s(:str, "stub_e-2.gemspec"))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :spec),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:send,
                s(:lvar, :io), :write,
                s(:dstr,
                  s(:str, "# -*- encoding: utf-8 -*-\n"),
                  s(:str, "# stub: stub_e 2 ruby lib\n"),
                  s(:str, "# stub: ext/stub_e/extconf.rb\n"),
                  s(:str, "\n"),
                  s(:str, "Gem::Specification.new do |s|\n"),
                  s(:str, "  s.name = 'stub_e'\n"),
                  s(:str, "  s.version = Gem::Version.new '2'\n"),
                  s(:str, "  s.extensions = ['ext/stub_e/extconf.rb']\n"),
                  s(:str, "  s.installed_by_version = '2.2'\n"),
                  s(:str, "end\n"))),
              s(:send,
                s(:lvar, :io), :flush),
              s(:lvasgn, :stub,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :StubSpecification), :gemspec_stub,
                  s(:send,
                    s(:lvar, :io), :path),
                  s(:ivar, :@gemhome),
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:ivar, :@gemhome),
                    s(:str, "gems")))),
              s(:if,
                s(:send, nil, :block_given?),
                s(:yield,
                  s(:lvar, :stub)), nil),
              s(:return,
                s(:lvar, :stub)))))),
      s(:def, :stub_without_extension,
        s(:args),
        s(:begin,
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@gemhome),
              s(:str, "specifications"),
              s(:str, "stub-2.gemspec"))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :spec),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:send,
                s(:lvar, :io), :write,
                s(:dstr,
                  s(:str, "# -*- encoding: utf-8 -*-\n"),
                  s(:str, "# stub: stub 2 ruby lib\n"),
                  s(:str, "\n"),
                  s(:str, "Gem::Specification.new do |s|\n"),
                  s(:str, "  s.name = 'stub'\n"),
                  s(:str, "  s.version = Gem::Version.new '2'\n"),
                  s(:str, "end\n"))),
              s(:send,
                s(:lvar, :io), :flush),
              s(:lvasgn, :stub,
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :StubSpecification), :gemspec_stub,
                  s(:send,
                    s(:lvar, :io), :path),
                  s(:ivar, :@gemhome),
                  s(:send,
                    s(:const, nil, :File), :join,
                    s(:ivar, :@gemhome),
                    s(:str, "gems")))),
              s(:if,
                s(:send, nil, :block_given?),
                s(:yield,
                  s(:lvar, :stub)), nil),
              s(:return,
                s(:lvar, :stub)))))))))
