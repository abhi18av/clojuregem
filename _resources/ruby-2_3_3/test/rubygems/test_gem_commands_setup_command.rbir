s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/setup_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsSetupCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@install_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tempdir),
              s(:str, "install"))),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :SetupCommand), :new)),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :options), :[]=,
            s(:sym, :prefix),
            s(:ivar, :@install_dir)),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:str, "bin")),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:str, "lib/rubygems/ssl_certs")),
          s(:block,
            s(:send, nil, :open,
              s(:str, "bin/gem"),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# gem"))),
          s(:block,
            s(:send, nil, :open,
              s(:str, "lib/rubygems.rb"),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# rubygems.rb"))),
          s(:block,
            s(:send, nil, :open,
              s(:str, "lib/rubygems/test_case.rb"),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# test_case.rb"))),
          s(:block,
            s(:send, nil, :open,
              s(:str, "lib/rubygems/ssl_certs/foo.pem"),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "PEM"))))),
      s(:def, :test_pem_files_in,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "rubygems/ssl_certs/foo.pem")),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :pem_files_in,
              s(:str, "lib")), :sort))),
      s(:def, :test_rb_files_in,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "rubygems.rb"),
            s(:str, "rubygems/test_case.rb")),
          s(:send,
            s(:send,
              s(:ivar, :@cmd), :rb_files_in,
              s(:str, "lib")), :sort))),
      s(:def, :test_install_lib,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :extend,
            s(:const, nil, :FileUtils)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :mktmpdir,
              s(:str, "lib")),
            s(:args,
              s(:arg, :dir)),
            s(:begin,
              s(:send,
                s(:ivar, :@cmd), :install_lib,
                s(:lvar, :dir)),
              s(:send, nil, :assert_path_exists,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :dir),
                  s(:str, "rubygems.rb"))),
              s(:send, nil, :assert_path_exists,
                s(:send,
                  s(:const, nil, :File), :join,
                  s(:lvar, :dir),
                  s(:str, "rubygems/ssl_certs/foo.pem"))))))),
      s(:def, :test_remove_old_lib_files,
        s(:args),
        s(:begin,
          s(:lvasgn, :lib,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@install_dir),
              s(:str, "lib"))),
          s(:lvasgn, :lib_rubygems,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib),
              s(:str, "rubygems"))),
          s(:lvasgn, :lib_rubygems_defaults,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib_rubygems),
              s(:str, "defaults"))),
          s(:lvasgn, :securerandom_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib),
              s(:str, "securerandom.rb"))),
          s(:lvasgn, :engine_defaults_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib_rubygems_defaults),
              s(:str, "jruby.rb"))),
          s(:lvasgn, :os_defaults_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib_rubygems_defaults),
              s(:str, "operating_system.rb"))),
          s(:lvasgn, :old_builder_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib_rubygems),
              s(:str, "builder.rb"))),
          s(:lvasgn, :old_format_rb,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :lib_rubygems),
              s(:str, "format.rb"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:lvar, :lib_rubygems_defaults)),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :securerandom_rb),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# securerandom.rb"))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :old_builder_rb),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# builder.rb"))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :old_format_rb),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# format.rb"))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :engine_defaults_rb),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# jruby.rb"))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :os_defaults_rb),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :puts,
              s(:str, "# operating_system.rb"))),
          s(:send,
            s(:ivar, :@cmd), :remove_old_lib_files,
            s(:lvar, :lib)),
          s(:send, nil, :refute_path_exists,
            s(:lvar, :old_builder_rb)),
          s(:send, nil, :refute_path_exists,
            s(:lvar, :old_format_rb)),
          s(:send, nil, :assert_path_exists,
            s(:lvar, :securerandom_rb)),
          s(:send, nil, :assert_path_exists,
            s(:lvar, :engine_defaults_rb)),
          s(:send, nil, :assert_path_exists,
            s(:lvar, :os_defaults_rb)))),
      s(:def, :test_show_release_notes,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:ivasgn, :@default_external,
              s(:nil)),
            s(:if,
              s(:send,
                s(:const, nil, :Object), :const_defined?,
                s(:sym, :Encoding)),
              s(:begin,
                s(:ivasgn, :@default_external,
                  s(:send,
                    s(:send,
                      s(:ivar, :@ui), :outs), :external_encoding)),
                s(:send,
                  s(:send,
                    s(:ivar, :@ui), :outs), :set_encoding,
                  s(:const,
                    s(:const, nil, :Encoding), :US_ASCII))), nil),
            s(:send,
              s(:send,
                s(:ivar, :@cmd), :options), :[]=,
              s(:sym, :previous_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:str, "2.0.2"))),
            s(:block,
              s(:send, nil, :open,
                s(:str, "History.txt"),
                s(:str, "w")),
              s(:args,
                s(:arg, :io)),
              s(:send,
                s(:lvar, :io), :puts,
                s(:dstr,
                  s(:str, "# coding: UTF-8\n"),
                  s(:str, "\n"),
                  s(:str, "=== "),
                  s(:begin,
                    s(:const,
                      s(:const, nil, :Gem), :VERSION)),
                  s(:str, " / 2013-03-26\n"),
                  s(:str, "\n"),
                  s(:str, "* Bug fixes:\n"),
                  s(:str, "  * Fixed release note display for LANG=C when installing rubygems\n"),
                  s(:str, "  * Ï€ is tasty\n"),
                  s(:str, "\n"),
                  s(:str, "=== 2.0.2 / 2013-03-06\n"),
                  s(:str, "\n"),
                  s(:str, "* Bug fixes:\n"),
                  s(:str, "  * Other bugs fixed\n"),
                  s(:str, "\n"),
                  s(:str, "=== 2.0.1 / 2013-03-05\n"),
                  s(:str, "\n"),
                  s(:str, "* Bug fixes:\n"),
                  s(:str, "  * Yet more bugs fixed\n")))),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :show_release_notes)),
            s(:lvasgn, :expected,
              s(:dstr,
                s(:str, "=== "),
                s(:begin,
                  s(:const,
                    s(:const, nil, :Gem), :VERSION)),
                s(:str, " / 2013-03-26\n"),
                s(:str, "\n"),
                s(:str, "* Bug fixes:\n"),
                s(:str, "  * Fixed release note display for LANG=C when installing rubygems\n"),
                s(:str, "  * Ï€ is tasty\n"),
                s(:str, "\n"),
                s(:str, "=== 2.0.2 / 2013-03-06\n"),
                s(:str, "\n"),
                s(:str, "* Bug fixes:\n"),
                s(:str, "  * Other bugs fixed\n"),
                s(:str, "\n"))),
            s(:lvasgn, :output,
              s(:send,
                s(:ivar, :@ui), :output)),
            s(:if,
              s(:send,
                s(:const, nil, :Object), :const_defined?,
                s(:sym, :Encoding)),
              s(:send,
                s(:lvar, :output), :force_encoding,
                s(:const,
                  s(:const, nil, :Encoding), :UTF_8)), nil),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :output))),
          s(:if,
            s(:ivar, :@default_external),
            s(:send,
              s(:send,
                s(:ivar, :@ui), :outs), :set_encoding,
              s(:ivar, :@default_external)), nil))))))
