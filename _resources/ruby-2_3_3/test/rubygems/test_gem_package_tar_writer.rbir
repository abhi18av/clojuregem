s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_writer")),
  s(:send, nil, :require,
    s(:str, "minitest/mock")),
  s(:class,
    s(:const, nil, :TestGemPackageTarWriter),
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Package), :TarTestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@data,
            s(:str, "abcde12345")),
          s(:ivasgn, :@io,
            s(:send,
              s(:const, nil, :TempIO), :new)),
          s(:ivasgn, :@tar_writer,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarWriter), :new,
              s(:ivar, :@io))))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:ivar, :@tar_writer), :closed?), nil,
            s(:send,
              s(:ivar, :@tar_writer), :close)),
          s(:send,
            s(:ivar, :@io), :close!),
          s(:zsuper))),
      s(:def, :test_add_file,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@tar_writer), :add_file,
                  s(:str, "x"),
                  s(:int, 420)),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:lvar, :f), :write,
                  s(:send,
                    s(:str, "a"), :*,
                    s(:int, 10)))),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:int, 10),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "aaaaaaaaaa"),
              s(:begin,
                s(:send,
                  s(:str, "\u0000"), :*,
                  s(:int, 502)))),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))),
          s(:send, nil, :assert_equal,
            s(:int, 1024),
            s(:send,
              s(:ivar, :@io), :pos)))),
      s(:def, :test_add_symlink,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@tar_writer), :add_symlink,
                s(:str, "x"),
                s(:str, "y"),
                s(:int, 420)),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_symlink_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:send,
                    s(:const, nil, :Time), :now),
                  s(:str, "y")),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:int, 512),
            s(:send,
              s(:ivar, :@io), :pos)))),
      s(:def, :test_add_file_digest,
        s(:args),
        s(:begin,
          s(:lvasgn, :digest_algorithms,
            s(:array,
              s(:const,
                s(:const, nil, :Digest), :SHA1),
              s(:const,
                s(:const, nil, :Digest), :SHA512))),
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:lvasgn, :digests,
                s(:block,
                  s(:send,
                    s(:ivar, :@tar_writer), :add_file_digest,
                    s(:str, "x"),
                    s(:int, 420),
                    s(:lvar, :digest_algorithms)),
                  s(:args,
                    s(:arg, :io)),
                  s(:send,
                    s(:lvar, :io), :write,
                    s(:send,
                      s(:str, "a"), :*,
                      s(:int, 10))))),
              s(:send, nil, :assert_equal,
                s(:str, "3495ff69d34671d1e15b33a63c1379fdedd3a32a"),
                s(:send,
                  s(:send,
                    s(:lvar, :digests), :[],
                    s(:str, "SHA1")), :hexdigest)),
              s(:send, nil, :assert_equal,
                s(:dstr,
                  s(:str, "4714870aff6c97ca09d135834fdb58a6389a50c1"),
                  s(:str, "1fef8ec4afef466fb60a23ac6b7a9c92658f14df"),
                  s(:str, "4993d6b40a4e4d8424196afc347e97640d68de61"),
                  s(:str, "e1cf14b0")),
                s(:send,
                  s(:send,
                    s(:lvar, :digests), :[],
                    s(:str, "SHA512")), :hexdigest)),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:int, 10),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "aaaaaaaaaa"),
              s(:begin,
                s(:send,
                  s(:str, "\u0000"), :*,
                  s(:int, 502)))),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))),
          s(:send, nil, :assert_equal,
            s(:int, 1024),
            s(:send,
              s(:ivar, :@io), :pos)))),
      s(:def, :test_add_file_digest_multiple,
        s(:args),
        s(:begin,
          s(:lvasgn, :digest_algorithms,
            s(:array,
              s(:const,
                s(:const, nil, :Digest), :SHA1),
              s(:const,
                s(:const, nil, :Digest), :SHA512))),
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:lvasgn, :digests,
                s(:block,
                  s(:send,
                    s(:ivar, :@tar_writer), :add_file_digest,
                    s(:str, "x"),
                    s(:int, 420),
                    s(:lvar, :digest_algorithms)),
                  s(:args,
                    s(:arg, :io)),
                  s(:send,
                    s(:lvar, :io), :write,
                    s(:send,
                      s(:str, "a"), :*,
                      s(:int, 10))))),
              s(:send, nil, :assert_equal,
                s(:str, "3495ff69d34671d1e15b33a63c1379fdedd3a32a"),
                s(:send,
                  s(:send,
                    s(:lvar, :digests), :[],
                    s(:str, "SHA1")), :hexdigest)),
              s(:send, nil, :assert_equal,
                s(:dstr,
                  s(:str, "4714870aff6c97ca09d135834fdb58a6389a50c1"),
                  s(:str, "1fef8ec4afef466fb60a23ac6b7a9c92658f14df"),
                  s(:str, "4993d6b40a4e4d8424196afc347e97640d68de61"),
                  s(:str, "e1cf14b0")),
                s(:send,
                  s(:send,
                    s(:lvar, :digests), :[],
                    s(:str, "SHA512")), :hexdigest)),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:int, 10),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "aaaaaaaaaa"),
              s(:begin,
                s(:send,
                  s(:str, "\u0000"), :*,
                  s(:int, 502)))),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))),
          s(:send, nil, :assert_equal,
            s(:int, 1024),
            s(:send,
              s(:ivar, :@io), :pos)))),
      s(:def, :test_add_file_signer,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const,
                s(:const, nil, :OpenSSL), :SSL)), nil,
            s(:send, nil, :skip,
              s(:str, "openssl is missing"))),
          s(:lvasgn, :signer,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Security), :Signer), :new,
              s(:const, nil, :PRIVATE_KEY),
              s(:array,
                s(:const, nil, :PUBLIC_CERT)))),
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@tar_writer), :add_file_signed,
                  s(:str, "x"),
                  s(:int, 420),
                  s(:lvar, :signer)),
                s(:args,
                  s(:arg, :io)),
                s(:send,
                  s(:lvar, :io), :write,
                  s(:send,
                    s(:str, "a"), :*,
                    s(:int, 10)))),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:int, 10),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))),
              s(:send, nil, :assert_equal,
                s(:dstr,
                  s(:str, "aaaaaaaaaa"),
                  s(:begin,
                    s(:send,
                      s(:str, "\u0000"), :*,
                      s(:int, 502)))),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 512),
                  s(:int, 512))),
              s(:lvasgn, :digest,
                s(:send,
                  s(:send,
                    s(:lvar, :signer), :digest_algorithm), :new)),
              s(:send,
                s(:lvar, :digest), :update,
                s(:send,
                  s(:str, "a"), :*,
                  s(:int, 10))),
              s(:lvasgn, :signature,
                s(:send,
                  s(:lvar, :signer), :sign,
                  s(:send,
                    s(:lvar, :digest), :digest))),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x.sig"),
                  s(:str, ""),
                  s(:int, 292),
                  s(:send,
                    s(:lvar, :signature), :length),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 1024),
                  s(:int, 512))),
              s(:send, nil, :assert_equal,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :signature)),
                  s(:begin,
                    s(:send,
                      s(:str, "\u0000"), :*,
                      s(:begin,
                        s(:send,
                          s(:int, 512), :-,
                          s(:send,
                            s(:lvar, :signature), :length)))))),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 1536),
                  s(:int, 512))),
              s(:send, nil, :assert_equal,
                s(:int, 2048),
                s(:send,
                  s(:ivar, :@io), :pos)))))),
      s(:def, :test_add_file_signer_empty,
        s(:args),
        s(:begin,
          s(:lvasgn, :signer,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Security), :Signer), :new,
              s(:nil),
              s(:nil))),
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@tar_writer), :add_file_signed,
                  s(:str, "x"),
                  s(:int, 420),
                  s(:lvar, :signer)),
                s(:args,
                  s(:arg, :io)),
                s(:send,
                  s(:lvar, :io), :write,
                  s(:send,
                    s(:str, "a"), :*,
                    s(:int, 10)))),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:int, 10),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "aaaaaaaaaa"),
              s(:begin,
                s(:send,
                  s(:str, "\u0000"), :*,
                  s(:int, 502)))),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))),
          s(:send, nil, :assert_equal,
            s(:int, 1024),
            s(:send,
              s(:ivar, :@io), :pos)))),
      s(:def, :test_add_file_simple,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@tar_writer), :add_file_simple,
                  s(:str, "x"),
                  s(:int, 420),
                  s(:int, 10)),
                s(:args,
                  s(:arg, :io)),
                s(:send,
                  s(:lvar, :io), :write,
                  s(:send,
                    s(:str, "a"), :*,
                    s(:int, 10)))),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 420),
                  s(:int, 10),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "aaaaaaaaaa"),
              s(:begin,
                s(:send,
                  s(:str, "\u0000"), :*,
                  s(:int, 502)))),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))),
          s(:send, nil, :assert_equal,
            s(:int, 1024),
            s(:send,
              s(:ivar, :@io), :pos)))),
      s(:def, :test_add_file_simple_padding,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Time), :stub,
              s(:sym, :now),
              s(:send,
                s(:const, nil, :Time), :at,
                s(:int, 1458518157))),
            s(:args),
            s(:begin,
              s(:send,
                s(:ivar, :@tar_writer), :add_file_simple,
                s(:str, "x"),
                s(:int, 0),
                s(:int, 100)),
              s(:send, nil, :assert_headers_equal,
                s(:send, nil, :tar_file_header,
                  s(:str, "x"),
                  s(:str, ""),
                  s(:int, 0),
                  s(:int, 100),
                  s(:send,
                    s(:const, nil, :Time), :now)),
                s(:send,
                  s(:send,
                    s(:ivar, :@io), :string), :[],
                  s(:int, 0),
                  s(:int, 512))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "\u0000"), :*,
              s(:int, 512)),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))))),
      s(:def, :test_add_file_simple_data,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:ivar, :@tar_writer), :add_file_simple,
              s(:str, "lib/foo/bar"),
              s(:int, 0),
              s(:int, 10)),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:ivar, :@data))),
          s(:send,
            s(:ivar, :@tar_writer), :flush),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@data), :+,
              s(:begin,
                s(:send,
                  s(:str, "\u0000"), :*,
                  s(:begin,
                    s(:send,
                      s(:int, 512), :-,
                      s(:send,
                        s(:ivar, :@data), :size)))))),
            s(:send,
              s(:send,
                s(:ivar, :@io), :string), :[],
              s(:int, 512),
              s(:int, 512))))),
      s(:def, :test_add_file_simple_size,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raises,
            s(:const,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarWriter), :FileOverflow)),
          s(:args),
          s(:block,
            s(:send,
              s(:ivar, :@tar_writer), :add_file_simple,
              s(:str, "lib/foo/bar"),
              s(:int, 0),
              s(:int, 10)),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:str, "1"), :*,
                s(:int, 11)))))),
      s(:def, :test_add_file_unseekable,
        s(:args),
        s(:block,
          s(:send, nil, :assert_raises,
            s(:const,
              s(:const,
                s(:const, nil, :Gem), :Package), :NonSeekableIO)),
          s(:args),
          s(:send,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarWriter), :new,
              s(:send,
                s(:const, nil, :Object), :new)), :add_file,
            s(:str, "x"),
            s(:int, 0)))),
      s(:def, :test_close,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@tar_writer), :close),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "\u0000"), :*,
              s(:int, 1024)),
            s(:send,
              s(:ivar, :@io), :string)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :IOError)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :close))),
          s(:send, nil, :assert_equal,
            s(:str, "closed Gem::Package::TarWriter"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :IOError)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :flush))),
          s(:send, nil, :assert_equal,
            s(:str, "closed Gem::Package::TarWriter"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :IOError)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :add_file,
                s(:str, "x"),
                s(:int, 0)))),
          s(:send, nil, :assert_equal,
            s(:str, "closed Gem::Package::TarWriter"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :IOError)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :add_file_simple,
                s(:str, "x"),
                s(:int, 0),
                s(:int, 0)))),
          s(:send, nil, :assert_equal,
            s(:str, "closed Gem::Package::TarWriter"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const, nil, :IOError)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :mkdir,
                s(:str, "x"),
                s(:int, 0)))),
          s(:send, nil, :assert_equal,
            s(:str, "closed Gem::Package::TarWriter"),
            s(:send,
              s(:lvar, :e), :message)))),
      s(:def, :test_mkdir,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :Time), :stub,
            s(:sym, :now),
            s(:send,
              s(:const, nil, :Time), :at,
              s(:int, 1458518157))),
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@tar_writer), :mkdir,
              s(:str, "foo"),
              s(:int, 420)),
            s(:send, nil, :assert_headers_equal,
              s(:send, nil, :tar_dir_header,
                s(:str, "foo"),
                s(:str, ""),
                s(:int, 420),
                s(:send,
                  s(:const, nil, :Time), :now)),
              s(:send,
                s(:send,
                  s(:ivar, :@io), :string), :[],
                s(:int, 0),
                s(:int, 512))),
            s(:send, nil, :assert_equal,
              s(:int, 512),
              s(:send,
                s(:ivar, :@io), :pos))))),
      s(:def, :test_split_name,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:str, "b"), :*,
                s(:int, 100)),
              s(:send,
                s(:str, "a"), :*,
                s(:int, 155))),
            s(:send,
              s(:ivar, :@tar_writer), :split_name,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:str, "a"), :*,
                    s(:int, 155))),
                s(:str, "/"),
                s(:begin,
                  s(:send,
                    s(:str, "b"), :*,
                    s(:int, 100)))))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:str, "qwer/"), :*,
                    s(:int, 19))),
                s(:str, "bla")),
              s(:send,
                s(:str, "a"), :*,
                s(:int, 151))),
            s(:send,
              s(:ivar, :@tar_writer), :split_name,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:str, "a"), :*,
                    s(:int, 151))),
                s(:str, "/"),
                s(:begin,
                  s(:send,
                    s(:str, "qwer/"), :*,
                    s(:int, 19))),
                s(:str, "bla")))))),
      s(:def, :test_split_name_too_long_name,
        s(:args),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:const, nil, :File), :join,
              s(:str, "a"),
              s(:send,
                s(:str, "b"), :*,
                s(:int, 100)))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:str, "b"), :*,
                s(:int, 100)),
              s(:str, "a")),
            s(:send,
              s(:ivar, :@tar_writer), :split_name,
              s(:lvar, :name))),
          s(:lvasgn, :name,
            s(:send,
              s(:const, nil, :File), :join,
              s(:str, "a"),
              s(:send,
                s(:str, "b"), :*,
                s(:int, 101)))),
          s(:lvasgn, :exception,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :TooLongFileName)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :split_name,
                s(:lvar, :name)))),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:lvar, :exception), :message),
            s(:lvar, :name)))),
      s(:def, :test_split_name_too_long_prefix,
        s(:args),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:str, "a"), :*,
                s(:int, 155)),
              s(:str, "b"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "b"),
              s(:send,
                s(:str, "a"), :*,
                s(:int, 155))),
            s(:send,
              s(:ivar, :@tar_writer), :split_name,
              s(:lvar, :name))),
          s(:lvasgn, :name,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:str, "a"), :*,
                s(:int, 156)),
              s(:str, "b"))),
          s(:lvasgn, :exception,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :TooLongFileName)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :split_name,
                s(:lvar, :name)))),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:lvar, :exception), :message),
            s(:lvar, :name)))),
      s(:def, :test_split_name_too_long_total,
        s(:args),
        s(:begin,
          s(:lvasgn, :name,
            s(:send,
              s(:str, "a"), :*,
              s(:int, 257))),
          s(:lvasgn, :exception,
            s(:block,
              s(:send, nil, :assert_raises,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :TooLongFileName)),
              s(:args),
              s(:send,
                s(:ivar, :@tar_writer), :split_name,
                s(:lvar, :name)))),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:lvar, :exception), :message),
            s(:lvar, :name)))))))
