s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/package/tar_test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/package")),
  s(:class,
    s(:const, nil, :TestGemPackageTarHeader),
    s(:const,
      s(:const,
        s(:const, nil, :Gem), :Package), :TarTestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:lvasgn, :header,
            s(:hash,
              s(:pair,
                s(:sym, :name),
                s(:str, "x")),
              s(:pair,
                s(:sym, :mode),
                s(:int, 420)),
              s(:pair,
                s(:sym, :uid),
                s(:int, 1000)),
              s(:pair,
                s(:sym, :gid),
                s(:int, 10000)),
              s(:pair,
                s(:sym, :size),
                s(:int, 100)),
              s(:pair,
                s(:sym, :mtime),
                s(:int, 12345)),
              s(:pair,
                s(:sym, :typeflag),
                s(:str, "0")),
              s(:pair,
                s(:sym, :linkname),
                s(:str, "link")),
              s(:pair,
                s(:sym, :uname),
                s(:str, "user")),
              s(:pair,
                s(:sym, :gname),
                s(:str, "group")),
              s(:pair,
                s(:sym, :devmajor),
                s(:int, 1)),
              s(:pair,
                s(:sym, :devminor),
                s(:int, 2)),
              s(:pair,
                s(:sym, :prefix),
                s(:str, "y")))),
          s(:ivasgn, :@tar_header,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:lvar, :header))))),
      s(:def, :test_self_from,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :io,
              s(:send,
                s(:const, nil, :TempIO), :new,
                s(:send,
                  s(:ivar, :@tar_header), :to_s))),
            s(:lvasgn, :new_header,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Package), :TarHeader), :from,
                s(:lvar, :io))),
            s(:send, nil, :assert_headers_equal,
              s(:ivar, :@tar_header),
              s(:lvar, :new_header))),
          s(:send,
            s(:lvar, :io), :close!))),
      s(:def, :test_initialize,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@tar_header), :checksum),
            s(:str, "checksum")),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:ivar, :@tar_header), :devmajor),
            s(:str, "devmajor")),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:ivar, :@tar_header), :devminor),
            s(:str, "devminor")),
          s(:send, nil, :assert_equal,
            s(:int, 10000),
            s(:send,
              s(:ivar, :@tar_header), :gid),
            s(:str, "gid")),
          s(:send, nil, :assert_equal,
            s(:str, "group"),
            s(:send,
              s(:ivar, :@tar_header), :gname),
            s(:str, "gname")),
          s(:send, nil, :assert_equal,
            s(:str, "link"),
            s(:send,
              s(:ivar, :@tar_header), :linkname),
            s(:str, "linkname")),
          s(:send, nil, :assert_equal,
            s(:str, "ustar"),
            s(:send,
              s(:ivar, :@tar_header), :magic),
            s(:str, "magic")),
          s(:send, nil, :assert_equal,
            s(:int, 420),
            s(:send,
              s(:ivar, :@tar_header), :mode),
            s(:str, "mode")),
          s(:send, nil, :assert_equal,
            s(:int, 12345),
            s(:send,
              s(:ivar, :@tar_header), :mtime),
            s(:str, "mtime")),
          s(:send, nil, :assert_equal,
            s(:str, "x"),
            s(:send,
              s(:ivar, :@tar_header), :name),
            s(:str, "name")),
          s(:send, nil, :assert_equal,
            s(:str, "y"),
            s(:send,
              s(:ivar, :@tar_header), :prefix),
            s(:str, "prefix")),
          s(:send, nil, :assert_equal,
            s(:int, 100),
            s(:send,
              s(:ivar, :@tar_header), :size),
            s(:str, "size")),
          s(:send, nil, :assert_equal,
            s(:str, "0"),
            s(:send,
              s(:ivar, :@tar_header), :typeflag),
            s(:str, "typeflag")),
          s(:send, nil, :assert_equal,
            s(:int, 1000),
            s(:send,
              s(:ivar, :@tar_header), :uid),
            s(:str, "uid")),
          s(:send, nil, :assert_equal,
            s(:str, "user"),
            s(:send,
              s(:ivar, :@tar_header), :uname),
            s(:str, "uname")),
          s(:send, nil, :assert_equal,
            s(:str, "00"),
            s(:send,
              s(:ivar, :@tar_header), :version),
            s(:str, "version")),
          s(:send, nil, :refute_empty,
            s(:ivar, :@tar_header),
            s(:str, "empty")))),
      s(:def, :test_initialize_bad,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :name),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :size),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :mode),
                  s(:str, ""))))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :name),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :size),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :prefix),
                  s(:str, ""))))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :name),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :prefix),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :mode),
                  s(:str, ""))))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :prefix),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :size),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :mode),
                  s(:str, ""))))))),
      s(:def, :test_initialize_typeflag,
        s(:args),
        s(:begin,
          s(:lvasgn, :header,
            s(:hash,
              s(:pair,
                s(:sym, :mode),
                s(:str, "")),
              s(:pair,
                s(:sym, :name),
                s(:str, "")),
              s(:pair,
                s(:sym, :prefix),
                s(:str, "")),
              s(:pair,
                s(:sym, :size),
                s(:str, "")),
              s(:pair,
                s(:sym, :typeflag),
                s(:str, "")))),
          s(:lvasgn, :tar_header,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:lvar, :header))),
          s(:send, nil, :assert_equal,
            s(:str, "0"),
            s(:send,
              s(:lvar, :tar_header), :typeflag)))),
      s(:def, :test_empty_eh,
        s(:args),
        s(:begin,
          s(:send, nil, :refute_empty,
            s(:ivar, :@tar_header)),
          s(:ivasgn, :@tar_header,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Package), :TarHeader), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :name),
                  s(:str, "x")),
                s(:pair,
                  s(:sym, :prefix),
                  s(:str, "")),
                s(:pair,
                  s(:sym, :mode),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :size),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :empty),
                  s(:true))))),
          s(:send, nil, :assert_empty,
            s(:ivar, :@tar_header)))),
      s(:def, :test_equals2,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@tar_header),
            s(:ivar, :@tar_header)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@tar_header),
            s(:send,
              s(:ivar, :@tar_header), :dup)))),
      s(:def, :test_to_s,
        s(:args),
        s(:begin,
          s(:lvasgn, :expected,
            s(:send,
              s(:send,
                s(:dstr,
                  s(:str, "x\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u00000000644\u00000001750\u00000023420\u000000000000144\u000000000030071\n"),
                  s(:str, "\u0000012467\u0000 0link\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000ustar\u000000user\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "group\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000000001\u00000000002\u0000y\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n"),
                  s(:str, "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n")), :split,
                s(:str, "\n")), :join)),
          s(:send, nil, :assert_headers_equal,
            s(:lvar, :expected),
            s(:ivar, :@tar_header)))),
      s(:def, :test_update_checksum,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@tar_header), :checksum)),
          s(:send,
            s(:ivar, :@tar_header), :update_checksum),
          s(:send, nil, :assert_equal,
            s(:str, "012467"),
            s(:send,
              s(:ivar, :@tar_header), :checksum)))))))
