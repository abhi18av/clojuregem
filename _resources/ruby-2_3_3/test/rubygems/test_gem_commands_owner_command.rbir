s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/owner_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsOwnerCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "RUBYGEMS_HOST"),
            s(:nil)),
          s(:ivasgn, :@fetcher,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :FakeFetcher), :new)),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RemoteFetcher), :fetcher=,
            s(:ivar, :@fetcher)),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :rubygems_api_key=,
            s(:str, "ed244fbf2b1a52e012da8616c512fa47f9aa5250")),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :OwnerCommand), :new)))),
      s(:def, :test_show_owners,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:dstr,
              s(:str, "---\n"),
              s(:str, "- email: user1@example.com\n"),
              s(:str, "- email: user2@example.com\n"))),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners.yaml")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :show_owners,
              s(:str, "freewill"))),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Get),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :class)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :rubygems_api_key),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Owners for gem: freewill"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "- user1@example.com"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "- user2@example.com"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_show_owners_setting_up_host_through_env_var,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "- email: user1@example.com\n")),
          s(:lvasgn, :host,
            s(:str, "http://rubygems.example")),
          s(:send,
            s(:const, nil, :ENV), :[]=,
            s(:str, "RUBYGEMS_HOST"),
            s(:lvar, :host)),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:lvar, :host)),
              s(:str, "/api/v1/gems/freewill/owners.yaml")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :show_owners,
              s(:str, "freewill"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Owners for gem: freewill"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "- user1@example.com"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_show_owners_setting_up_host,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "- email: user1@example.com\n")),
          s(:lvasgn, :host,
            s(:str, "http://rubygems.example")),
          s(:send,
            s(:ivar, :@cmd), :host=,
            s(:lvar, :host)),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:lvar, :host)),
              s(:str, "/api/v1/gems/freewill/owners.yaml")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :show_owners,
              s(:str, "freewill"))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Owners for gem: freewill"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "- user1@example.com"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_show_owners_denied,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "You don't have permission to push to this gem")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners.yaml")),
            s(:array,
              s(:lvar, :response),
              s(:int, 403),
              s(:str, "Forbidden"))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :TermError)),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :show_owners,
                s(:str, "freewill")))),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_show_owners_key,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "- email: user1@example.com\n")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners.yaml")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "a")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:str, ":other: 701229f217cdf23b1344c7b4b54ca97"))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-k"),
              s(:str, "other"))),
          s(:send,
            s(:ivar, :@cmd), :show_owners,
            s(:str, "freewill")),
          s(:send, nil, :assert_equal,
            s(:str, "701229f217cdf23b1344c7b4b54ca97"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))))),
      s(:def, :test_add_owners,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "Owner added successfully.")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :add_owners,
              s(:str, "freewill"),
              s(:array,
                s(:str, "user-new1@example.com")))),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Post),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :class)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :rubygems_api_key),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))),
          s(:send, nil, :assert_equal,
            s(:str, "email=user-new1%40example.com"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :body)),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_add_owners_denied,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "You don't have permission to push to this gem")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 403),
              s(:str, "Forbidden"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :add_owners,
              s(:str, "freewill"),
              s(:array,
                s(:str, "user-new1@example.com")))),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_add_owner_with_host_option_through_execute,
        s(:args),
        s(:begin,
          s(:lvasgn, :host,
            s(:str, "http://rubygems.example")),
          s(:lvasgn, :add_owner_response,
            s(:str, "Owner added successfully.")),
          s(:lvasgn, :show_owners_response,
            s(:str, "- email: user1@example.com\n")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:lvar, :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :add_owner_response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:lvar, :host)),
              s(:str, "/api/v1/gems/freewill/owners.yaml")),
            s(:array,
              s(:lvar, :show_owners_response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "--host"),
              s(:dstr,
                s(:begin,
                  s(:lvar, :host))),
              s(:str, "--add"),
              s(:str, "user-new1@example.com"),
              s(:str, "freewill"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :execute)),
          s(:send, nil, :assert_match,
            s(:lvar, :add_owner_response),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "Owners for gem: freewill"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "- user1@example.com"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_add_owners_key,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "Owner added successfully.")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "a")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:str, ":other: 701229f217cdf23b1344c7b4b54ca97"))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-k"),
              s(:str, "other"))),
          s(:send,
            s(:ivar, :@cmd), :add_owners,
            s(:str, "freewill"),
            s(:array,
              s(:str, "user-new1@example.com"))),
          s(:send, nil, :assert_equal,
            s(:str, "701229f217cdf23b1344c7b4b54ca97"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))))),
      s(:def, :test_remove_owners,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "Owner removed successfully.")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :remove_owners,
              s(:str, "freewill"),
              s(:array,
                s(:str, "user-remove1@example.com")))),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Delete),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :class)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:const, nil, :Gem), :configuration), :rubygems_api_key),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))),
          s(:send, nil, :assert_equal,
            s(:str, "email=user-remove1%40example.com"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :body)),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_remove_owners_denied,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "You don't have permission to push to this gem")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 403),
              s(:str, "Forbidden"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :remove_owners,
              s(:str, "freewill"),
              s(:array,
                s(:str, "user-remove1@example.com")))),
          s(:send, nil, :assert_match,
            s(:lvar, :response),
            s(:send,
              s(:ivar, :@ui), :output)))),
      s(:def, :test_remove_owners_key,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "Owner removed successfully.")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 200),
              s(:str, "OK"))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:send,
                s(:send,
                  s(:const, nil, :Gem), :configuration), :credentials_path),
              s(:str, "a")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:str, ":other: 701229f217cdf23b1344c7b4b54ca97"))),
          s(:send,
            s(:send,
              s(:const, nil, :Gem), :configuration), :load_api_keys),
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "-k"),
              s(:str, "other"))),
          s(:send,
            s(:ivar, :@cmd), :remove_owners,
            s(:str, "freewill"),
            s(:array,
              s(:str, "user-remove1@example.com"))),
          s(:send, nil, :assert_equal,
            s(:str, "701229f217cdf23b1344c7b4b54ca97"),
            s(:send,
              s(:send,
                s(:ivar, :@fetcher), :last_request), :[],
              s(:str, "Authorization"))))),
      s(:def, :test_remove_owners_missing,
        s(:args),
        s(:begin,
          s(:lvasgn, :response,
            s(:str, "Owner could not be found.")),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :host)),
              s(:str, "/api/v1/gems/freewill/owners")),
            s(:array,
              s(:lvar, :response),
              s(:int, 404),
              s(:str, "Not Found"))),
          s(:block,
            s(:send, nil, :use_ui,
              s(:ivar, :@ui)),
            s(:args),
            s(:send,
              s(:ivar, :@cmd), :remove_owners,
              s(:str, "freewill"),
              s(:array,
                s(:str, "missing@example")))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "Removing missing@example: "),
              s(:begin,
                s(:lvar, :response)),
              s(:str, "\n")),
            s(:send,
              s(:ivar, :@ui), :output)))))))
