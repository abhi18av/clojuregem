s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/commands/list_command")),
  s(:class,
    s(:const, nil, :TestGemCommandsListCommand),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@cmd,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Commands), :ListCommand), :new)),
          s(:block,
            s(:send, nil, :spec_fetcher),
            s(:args,
              s(:arg, :fetcher)),
            s(:send,
              s(:lvar, :fetcher), :spec,
              s(:str, "c"),
              s(:int, 1))),
          s(:send,
            s(:send,
              s(:ivar, :@fetcher), :data), :[]=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gem_repo)),
              s(:str, "Marshal."),
              s(:begin,
                s(:send,
                  s(:const, nil, :Gem), :marshal_version))),
            s(:block,
              s(:send, nil, :proc),
              s(:args),
              s(:send, nil, :raise,
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :RemoteFetcher), :FetchError)))))),
      s(:def, :test_execute_installed,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@cmd), :handle_options,
            s(:array,
              s(:str, "c"),
              s(:str, "--installed"))),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :MockGemUi), :SystemExitException)),
            s(:args),
            s(:block,
              s(:send, nil, :use_ui,
                s(:ivar, :@ui)),
              s(:args),
              s(:send,
                s(:ivar, :@cmd), :execute))),
          s(:send, nil, :assert_equal,
            s(:str, "true\n"),
            s(:send,
              s(:ivar, :@ui), :output)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:ivar, :@ui), :error)))))))
