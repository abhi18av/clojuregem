s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:send, nil, :require,
    s(:str, "rubygems/server")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:class,
    s(:const,
      s(:const, nil, :Gem), :Server), nil,
    s(:send, nil, :attr_reader,
      s(:sym, :server))),
  s(:class,
    s(:const, nil, :TestGemServer),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :process_based_port,
        s(:args),
        s(:int, 0)),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@a1,
            s(:send, nil, :quick_gem,
              s(:str, "a"),
              s(:str, "1"))),
          s(:ivasgn, :@a2,
            s(:send, nil, :quick_gem,
              s(:str, "a"),
              s(:str, "2"))),
          s(:ivasgn, :@a3_p,
            s(:send, nil, :quick_gem,
              s(:str, "a"),
              s(:str, "3.a"))),
          s(:ivasgn, :@server,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:ivasgn, :@req,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPRequest), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :Logger),
                  s(:nil))))),
          s(:ivasgn, :@res,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPResponse), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :HTTPVersion),
                  s(:str, "1.0"))))))),
      s(:def, :test_doc_root_3,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :orig_rdoc_version,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :RDoc), :rdoc_version)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :instance_variable_set,
              s(:sym, :@rdoc_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:str, "3.12"))),
            s(:send, nil, :assert_equal,
              s(:str, "/doc_root/X-1/rdoc/index.html"),
              s(:send,
                s(:ivar, :@server), :doc_root,
                s(:str, "X-1")))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RDoc), :instance_variable_set,
            s(:sym, :@rdoc_version),
            s(:lvar, :orig_rdoc_version)))),
      s(:def, :test_doc_root_4,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :orig_rdoc_version,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :RDoc), :rdoc_version)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :instance_variable_set,
              s(:sym, :@rdoc_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:str, "4.0"))),
            s(:send, nil, :assert_equal,
              s(:str, "/doc_root/X-1/"),
              s(:send,
                s(:ivar, :@server), :doc_root,
                s(:str, "X-1")))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RDoc), :instance_variable_set,
            s(:sym, :@rdoc_version),
            s(:lvar, :orig_rdoc_version)))),
      s(:def, :test_have_rdoc_4_plus_eh,
        s(:args),
        s(:ensure,
          s(:begin,
            s(:lvasgn, :orig_rdoc_version,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :RDoc), :rdoc_version)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :instance_variable_set,
              s(:sym, :@rdoc_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:str, "4.0"))),
            s(:lvasgn, :server,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Server), :new,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:int, 0),
                s(:false))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :server), :have_rdoc_4_plus?)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :instance_variable_set,
              s(:sym, :@rdoc_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:str, "3.12"))),
            s(:lvasgn, :server,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Server), :new,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:int, 0),
                s(:false))),
            s(:send, nil, :refute,
              s(:send,
                s(:lvar, :server), :have_rdoc_4_plus?)),
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :RDoc), :instance_variable_set,
              s(:sym, :@rdoc_version),
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Version), :new,
                s(:str, "4.0.0.preview2"))),
            s(:lvasgn, :server,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Server), :new,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:int, 0),
                s(:false))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :server), :have_rdoc_4_plus?))),
          s(:send,
            s(:const,
              s(:const, nil, :Gem), :RDoc), :instance_variable_set,
            s(:sym, :@rdoc_version),
            s(:lvar, :orig_rdoc_version)))),
      s(:def, :test_spec_dirs,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:send,
                s(:const, nil, :Gem), :dir),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:str, "specifications"))),
            s(:send,
              s(:lvar, :s), :spec_dirs)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:array,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:send,
                  s(:const, nil, :Gem), :dir)),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:str, "specifications")),
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :Gem), :dir),
                s(:str, "specifications"))),
            s(:send,
              s(:lvar, :s), :spec_dirs)))),
      s(:def, :test_latest_specs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /latest_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, " HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip_during),
            s(:args),
            s(:send,
              s(:ivar, :@server), :latest_specs,
              s(:ivar, :@req),
              s(:ivar, :@res))),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/octet-stream"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 2)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:ivar, :@res), :body))))),
      s(:def, :test_latest_specs_gemdirs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /latest_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, " HTTP/1.0\r\n\r\n")))),
          s(:lvasgn, :dir,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:lvasgn, :spec,
            s(:send, nil, :util_spec,
              s(:str, "z"),
              s(:int, 9))),
          s(:lvasgn, :specs_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :dir),
              s(:str, "specifications"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:lvar, :specs_dir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :specs_dir),
                s(:send,
                  s(:lvar, :spec), :spec_name)),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:lvar, :spec), :to_ruby))),
          s(:lvasgn, :server,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:lvar, :dir),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:lvar, :server), :latest_specs,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "z"),
                s(:send, nil, :v,
                  s(:int, 9)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:ivar, :@res), :body))))),
      s(:def, :test_latest_specs_gz,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /latest_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, ".gz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip_during),
            s(:args),
            s(:send,
              s(:ivar, :@server), :latest_specs,
              s(:ivar, :@req),
              s(:ivar, :@res))),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-gzip"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 2)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :gunzip,
                s(:send,
                  s(:ivar, :@res), :body)))))),
      s(:def, :test_listen,
        s(:args),
        s(:begin,
          s(:send, nil, :util_listen),
          s(:block,
            s(:send, nil, :capture_io),
            s(:args),
            s(:send,
              s(:ivar, :@server), :listen)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@server), :server), :listeners), :length)))),
      s(:def, :test_listen_addresses,
        s(:args),
        s(:begin,
          s(:send, nil, :util_listen),
          s(:block,
            s(:send, nil, :capture_io),
            s(:args),
            s(:send,
              s(:ivar, :@server), :listen,
              s(:array,
                s(:str, "a"),
                s(:str, "b")))),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@server), :server), :listeners), :length)))),
      s(:def, :test_prerelease_specs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /prerelease_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, " HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip_during),
            s(:args),
            s(:send,
              s(:ivar, :@server), :prerelease_specs,
              s(:ivar, :@req),
              s(:ivar, :@res))),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/octet-stream"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "a"),
                s(:send, nil, :v,
                  s(:str, "3.a")),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:ivar, :@res), :body))))),
      s(:def, :test_prerelease_specs_gz,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /prerelease_specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, ".gz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:block,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Deprecate), :skip_during),
            s(:args),
            s(:send,
              s(:ivar, :@server), :prerelease_specs,
              s(:ivar, :@req),
              s(:ivar, :@res))),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-gzip"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "a"),
                s(:send, nil, :v,
                  s(:str, "3.a")),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :gunzip,
                s(:send,
                  s(:ivar, :@res), :body)))))),
      s(:def, :test_quick_gemdirs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:str, "GET /quick/Marshal.4.8/z-9.gemspec.rz HTTP/1.0\r\n\r\n"))),
          s(:lvasgn, :dir,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:lvasgn, :server,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:lvar, :dir),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:lvar, :server), :quick,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 404),
            s(:send,
              s(:ivar, :@res), :status)),
          s(:lvasgn, :spec,
            s(:send, nil, :util_spec,
              s(:str, "z"),
              s(:int, 9))),
          s(:lvasgn, :specs_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :dir),
              s(:str, "specifications"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:lvar, :specs_dir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :specs_dir),
                s(:send,
                  s(:lvar, :spec), :spec_name)),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:lvar, :spec), :to_ruby))),
          s(:send,
            s(:lvar, :data), :rewind),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPRequest), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :Logger),
                  s(:nil))))),
          s(:lvasgn, :res,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPResponse), :new,
              s(:hash,
                s(:pair,
                  s(:sym, :HTTPVersion),
                  s(:str, "1.0"))))),
          s(:send,
            s(:lvar, :req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:lvar, :server), :quick,
            s(:lvar, :req),
            s(:lvar, :res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:lvar, :res), :status)))),
      s(:def, :test_quick_missing,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:str, "GET /quick/Marshal.4.8/z-9.gemspec.rz HTTP/1.0\r\n\r\n"))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :quick,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 404),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "text/plain"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:str, "No gems found matching \"z\" \"9\" nil"),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_equal,
            s(:int, 404),
            s(:send,
              s(:ivar, :@res), :status)))),
      s(:def, :test_quick_marshal_a_1_gemspec_rz,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /quick/Marshal."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, "/a-1.gemspec.rz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :quick,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-deflate"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :inflate,
                s(:send,
                  s(:ivar, :@res), :body)))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:int, 1)),
            s(:send,
              s(:lvar, :spec), :version)))),
      s(:def, :test_quick_marshal_a_1_mswin32_gemspec_rz,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :quick_gem,
              s(:str, "a"),
              s(:str, "1")),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :s), :platform=,
              s(:send,
                s(:const,
                  s(:const, nil, :Gem), :Platform), :local))),
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /quick/Marshal."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, "/a-1-"),
                s(:begin,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Gem), :Platform), :local)),
                s(:str, ".gemspec.rz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :quick,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-deflate"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :inflate,
                s(:send,
                  s(:ivar, :@res), :body)))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Version), :new,
              s(:int, 1)),
            s(:send,
              s(:lvar, :spec), :version)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Platform), :local),
            s(:send,
              s(:lvar, :spec), :platform)))),
      s(:def, :test_quick_marshal_a_3_a_gemspec_rz,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /quick/Marshal."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, "/a-3.a.gemspec.rz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :quick,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-deflate"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :inflate,
                s(:send,
                  s(:ivar, :@res), :body)))),
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :v,
              s(:str, "3.a")),
            s(:send,
              s(:lvar, :spec), :version)))),
      s(:def, :test_quick_marshal_a_b_3_a_gemspec_rz,
        s(:args),
        s(:begin,
          s(:send, nil, :quick_gem,
            s(:str, "a-b"),
            s(:str, "3.a")),
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /quick/Marshal."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, "/a-b-3.a.gemspec.rz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :quick,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-deflate"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:lvasgn, :spec,
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :inflate,
                s(:send,
                  s(:ivar, :@res), :body)))),
          s(:send, nil, :assert_equal,
            s(:str, "a-b"),
            s(:send,
              s(:lvar, :spec), :name)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :v,
              s(:str, "3.a")),
            s(:send,
              s(:lvar, :spec), :version)))),
      s(:def, :test_rdoc,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:str, "GET /rdoc?q=a HTTP/1.0\r\n\r\n"))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :rdoc,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "No documentation found"),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_equal,
            s(:str, "text/html"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))))),
      s(:def, :test_root,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:str, "GET / HTTP/1.0\r\n\r\n"))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :root,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "text/html"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))))),
      s(:def, :test_root_gemdirs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:str, "GET / HTTP/1.0\r\n\r\n"))),
          s(:lvasgn, :dir,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:lvasgn, :spec,
            s(:send, nil, :util_spec,
              s(:str, "z"),
              s(:int, 9))),
          s(:lvasgn, :specs_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :dir),
              s(:str, "specifications"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:lvar, :specs_dir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :specs_dir),
                s(:send,
                  s(:lvar, :spec), :spec_name)),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:lvar, :spec), :to_ruby))),
          s(:lvasgn, :server,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:lvar, :dir),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:lvar, :server), :root,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status)),
          s(:send, nil, :assert_match,
            s(:str, "z 9"),
            s(:send,
              s(:ivar, :@res), :body)))),
      s(:def, :test_specs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, " HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :specs,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/octet-stream"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 1)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY)),
              s(:array,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 2)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY)),
              s(:array,
                s(:str, "a"),
                s(:send, nil, :v,
                  s(:str, "3.a")),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:ivar, :@res), :body))))),
      s(:def, :test_specs_gemdirs,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, " HTTP/1.0\r\n\r\n")))),
          s(:lvasgn, :dir,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:lvasgn, :spec,
            s(:send, nil, :util_spec,
              s(:str, "z"),
              s(:int, 9))),
          s(:lvasgn, :specs_dir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:lvar, :dir),
              s(:str, "specifications"))),
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:lvar, :specs_dir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:lvar, :specs_dir),
                s(:send,
                  s(:lvar, :spec), :spec_name)),
              s(:str, "w")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:lvar, :spec), :to_ruby))),
          s(:lvasgn, :server,
            s(:send,
              s(:const,
                s(:const, nil, :Gem), :Server), :new,
              s(:lvar, :dir),
              s(:send, nil, :process_based_port),
              s(:false))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:lvar, :server), :specs,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "z"),
                s(:send, nil, :v,
                  s(:int, 9)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:ivar, :@res), :body))))),
      s(:def, :test_specs_gz,
        s(:args),
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :StringIO), :new,
              s(:dstr,
                s(:str, "GET /specs."),
                s(:begin,
                  s(:send,
                    s(:const, nil, :Gem), :marshal_version)),
                s(:str, ".gz HTTP/1.0\r\n\r\n")))),
          s(:send,
            s(:ivar, :@req), :parse,
            s(:lvar, :data)),
          s(:send,
            s(:ivar, :@server), :specs,
            s(:ivar, :@req),
            s(:ivar, :@res)),
          s(:send, nil, :assert_equal,
            s(:int, 200),
            s(:send,
              s(:ivar, :@res), :status),
            s(:send,
              s(:ivar, :@res), :body)),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, " \\d\\d:\\d\\d:\\d\\d "),
              s(:regopt)),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "date"))),
          s(:send, nil, :assert_equal,
            s(:str, "application/x-gzip"),
            s(:send,
              s(:ivar, :@res), :[],
              s(:str, "content-type"))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:array,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 1)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY)),
              s(:array,
                s(:str, "a"),
                s(:send,
                  s(:const,
                    s(:const, nil, :Gem), :Version), :new,
                  s(:int, 2)),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY)),
              s(:array,
                s(:str, "a"),
                s(:send, nil, :v,
                  s(:str, "3.a")),
                s(:const,
                  s(:const,
                    s(:const, nil, :Gem), :Platform), :RUBY))),
            s(:send,
              s(:const, nil, :Marshal), :load,
              s(:send,
                s(:const, nil, :Gem), :gunzip,
                s(:send,
                  s(:ivar, :@res), :body)))))),
      s(:def, :util_listen,
        s(:args),
        s(:begin,
          s(:lvasgn, :webrick,
            s(:send,
              s(:const, nil, :Object), :new)),
          s(:send,
            s(:lvar, :webrick), :instance_variable_set,
            s(:sym, :@listeners),
            s(:array)),
          s(:defs,
            s(:lvar, :webrick), :listeners,
            s(:args),
            s(:ivar, :@listeners)),
          s(:defs,
            s(:lvar, :webrick), :listen,
            s(:args,
              s(:arg, :host),
              s(:arg, :port)),
            s(:begin,
              s(:lvasgn, :socket,
                s(:send,
                  s(:const, nil, :Object), :new)),
              s(:send,
                s(:lvar, :socket), :instance_variable_set,
                s(:sym, :@host),
                s(:lvar, :host)),
              s(:send,
                s(:lvar, :socket), :instance_variable_set,
                s(:sym, :@port),
                s(:lvar, :port)),
              s(:defs,
                s(:lvar, :socket), :addr,
                s(:args),
                s(:array,
                  s(:nil),
                  s(:ivar, :@port),
                  s(:ivar, :@host))),
              s(:send,
                s(:ivar, :@listeners), :<<,
                s(:lvar, :socket)))),
          s(:send,
            s(:ivar, :@server), :instance_variable_set,
            s(:sym, :@server),
            s(:lvar, :webrick)))))))
