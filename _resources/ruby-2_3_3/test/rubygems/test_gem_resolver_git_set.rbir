s(:begin,
  s(:send, nil, :require,
    s(:str, "rubygems/test_case")),
  s(:class,
    s(:const, nil, :TestGemResolverGitSet),
    s(:const,
      s(:const, nil, :Gem), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@set,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :GitSet), :new)),
          s(:ivasgn, :@reqs,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :RequirementList), :new)))),
      s(:def, :test_add_git_gem,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :version),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"))),
          s(:lvasgn, :specs,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:lvar, :name)),
              s(:str, "-"),
              s(:begin,
                s(:lvar, :version))),
            s(:send,
              s(:send,
                s(:lvar, :specs), :first), :full_name)),
          s(:send, nil, :refute,
            s(:send,
              s(:send,
                s(:ivar, :@set), :need_submodules), :[],
              s(:lvar, :repository))))),
      s(:def, :test_add_git_gem_submodules,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:true)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"))),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@set), :need_submodules), :[],
              s(:lvar, :repository))))),
      s(:def, :test_add_git_spec,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :version),
              s(:lvasgn, :repository),
              s(:lvasgn, :revision)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_spec,
            s(:lvar, :name),
            s(:lvar, :version),
            s(:lvar, :repository),
            s(:lvar, :revision),
            s(:true)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"))),
          s(:lvasgn, :specs,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))),
          s(:lvasgn, :spec,
            s(:send,
              s(:lvar, :specs), :first)),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:lvar, :name)),
              s(:str, "-"),
              s(:begin,
                s(:lvar, :version))),
            s(:send,
              s(:lvar, :spec), :full_name)),
          s(:send, nil, :assert,
            s(:send,
              s(:send,
                s(:ivar, :@set), :need_submodules), :[],
              s(:lvar, :repository))),
          s(:send, nil, :refute_path_exists,
            s(:send,
              s(:send,
                s(:lvar, :spec), :source), :repo_cache_dir)))),
      s(:def, :test_find_all,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1.0"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:lvasgn, :found,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:send,
                s(:send,
                  s(:ivar, :@set), :specs), :[],
                s(:str, "a"))),
            s(:lvar, :found)))),
      s(:def, :test_find_all_local,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:send,
            s(:ivar, :@set), :remote=,
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, "~> 1.0"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))))),
      s(:def, :test_find_all_prerelease,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem,
              s(:str, "a"),
              s(:str, "1.a"))),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, ">= 0"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:lvasgn, :found,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))),
          s(:send, nil, :assert_empty,
            s(:lvar, :found)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "a"),
              s(:str, ">= 0.a"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:lvasgn, :found,
            s(:send,
              s(:ivar, :@set), :find_all,
              s(:lvar, :dependency))),
          s(:send, nil, :refute_empty,
            s(:lvar, :found)))),
      s(:def, :test_root_dir,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Gem), :dir),
            s(:send,
              s(:ivar, :@set), :root_dir)),
          s(:send,
            s(:ivar, :@set), :root_dir=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2")),
            s(:send,
              s(:ivar, :@set), :root_dir)))),
      s(:def, :test_prefetch,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:lvar, :name))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:ivar, :@set), :specs)))),
      s(:def, :test_prefetch_cache,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:lvar, :name))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:lvasgn, :spec,
            s(:send,
              s(:send,
                s(:ivar, :@set), :specs), :[],
              s(:lvar, :name))),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:send, nil, :assert_same,
            s(:lvar, :spec),
            s(:send,
              s(:send,
                s(:ivar, :@set), :specs), :[],
              s(:lvar, :name))))),
      s(:def, :test_prefetch_filter,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:str, "b"))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:ivar, :@set), :specs),
            s(:str, "the git source does not filter")))),
      s(:def, :test_prefetch_root_dir,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :name),
              s(:lvasgn, :_),
              s(:lvasgn, :repository)),
            s(:send, nil, :git_gem)),
          s(:send,
            s(:ivar, :@set), :add_git_gem,
            s(:lvar, :name),
            s(:lvar, :repository),
            s(:str, "master"),
            s(:false)),
          s(:lvasgn, :dependency,
            s(:send, nil, :dep,
              s(:lvar, :name))),
          s(:lvasgn, :req,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :Gem), :Resolver), :DependencyRequest), :new,
              s(:lvar, :dependency),
              s(:nil))),
          s(:send,
            s(:ivar, :@reqs), :add,
            s(:lvar, :req)),
          s(:send,
            s(:ivar, :@set), :root_dir=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2"))),
          s(:send,
            s(:ivar, :@set), :prefetch,
            s(:ivar, :@reqs)),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:ivar, :@set), :specs)),
          s(:lvasgn, :spec,
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@set), :specs), :values), :first)),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:begin,
                s(:ivar, :@gemhome)),
              s(:str, "2")),
            s(:send,
              s(:send,
                s(:lvar, :spec), :source), :root_dir)))))))
