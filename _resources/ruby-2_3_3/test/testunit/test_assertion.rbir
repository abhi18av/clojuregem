s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestAssertion),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:def, :test_wrong_assertion,
      s(:args),
      s(:begin,
        s(:masgn,
          s(:mlhs,
            s(:lvasgn, :error),
            s(:lvasgn, :line)),
          s(:array,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send, nil, :assert,
                s(:true),
                s(:true))),
            s(:int, 5))),
        s(:send, nil, :assert_match,
          s(:regexp,
            s(:str, "assertion message must be String or Proc, but TrueClass was given"),
            s(:regopt)),
          s(:send,
            s(:lvar, :error), :message)),
        s(:send, nil, :assert_match,
          s(:regexp,
            s(:str, "\\A"),
            s(:begin,
              s(:send,
                s(:const, nil, :Regexp), :quote,
                s(:str, "(string)"))),
            s(:str, ":"),
            s(:begin,
              s(:lvar, :line)),
            s(:str, ":"),
            s(:regopt)),
          s(:send,
            s(:send,
              s(:lvar, :error), :backtrace), :[],
            s(:int, 0)))))))
