s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "test_optparse")),
  s(:class,
    s(:const,
      s(:const, nil, :TestOptionParser), :Acceptable),
    s(:const, nil, :TestOptionParser),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--integer VAL"),
              s(:const, nil, :Integer)),
            s(:args,
              s(:arg, :v)),
            s(:ivasgn, :@integer,
              s(:lvar, :v))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--float VAL"),
              s(:const, nil, :Float)),
            s(:args,
              s(:arg, :v)),
            s(:ivasgn, :@float,
              s(:lvar, :v))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--numeric VAL"),
              s(:const, nil, :Numeric)),
            s(:args,
              s(:arg, :v)),
            s(:ivasgn, :@numeric,
              s(:lvar, :v))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--decimal-integer VAL"),
              s(:const,
                s(:const, nil, :OptionParser), :DecimalInteger)),
            s(:args,
              s(:arg, :i)),
            s(:ivasgn, :@decimal_integer,
              s(:lvar, :i))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--octal-integer VAL"),
              s(:const,
                s(:const, nil, :OptionParser), :OctalInteger)),
            s(:args,
              s(:arg, :i)),
            s(:ivasgn, :@octal_integer,
              s(:lvar, :i))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--decimal-numeric VAL"),
              s(:const,
                s(:const, nil, :OptionParser), :DecimalNumeric)),
            s(:args,
              s(:arg, :i)),
            s(:ivasgn, :@decimal_numeric,
              s(:lvar, :i))))),
      s(:def, :test_integer,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--integer"),
                  s(:str, "0"))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:ivar, :@integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--integer"),
                  s(:str, "0b10"))))),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:ivar, :@integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--integer"),
                  s(:str, "077"))))),
          s(:send, nil, :assert_equal,
            s(:int, 63),
            s(:ivar, :@integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--integer"),
                  s(:str, "10"))))),
          s(:send, nil, :assert_equal,
            s(:int, 10),
            s(:ivar, :@integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--integer"),
                  s(:str, "0x3"))))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:ivar, :@integer)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--integer"),
                s(:str, "0b")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--integer"),
                s(:str, "09")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--integer"),
                s(:str, "0x")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--integer"),
                s(:str, "1234xyz")))))),
      s(:def, :test_float,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--float"),
                  s(:str, "0"))))),
          s(:send, nil, :assert_in_epsilon,
            s(:float, 0.0),
            s(:ivar, :@float)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--float"),
                  s(:str, "0.0"))))),
          s(:send, nil, :assert_in_epsilon,
            s(:float, 0.0),
            s(:ivar, :@float)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--float"),
                  s(:str, "1.2"))))),
          s(:send, nil, :assert_in_epsilon,
            s(:float, 1.2),
            s(:ivar, :@float)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--float"),
                  s(:str, "1E2"))))),
          s(:send, nil, :assert_in_epsilon,
            s(:int, 100),
            s(:ivar, :@float)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--float"),
                  s(:str, "1E-2"))))),
          s(:send, nil, :assert_in_epsilon,
            s(:float, 0.01),
            s(:ivar, :@float)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--float"),
                s(:str, "0e")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--float"),
                s(:str, "1.234xyz")))))),
      s(:def, :test_numeric,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--numeric"),
                  s(:str, "0"))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:ivar, :@numeric)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--numeric"),
                  s(:str, "0/1"))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:ivar, :@numeric)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--numeric"),
                  s(:str, "1/2"))))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 1),
              s(:int, 2)),
            s(:ivar, :@numeric)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--numeric"),
                  s(:str, "1.2/2.3"))))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 12),
              s(:int, 23)),
            s(:ivar, :@numeric)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--numeric"),
                s(:str, "1/")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--numeric"),
                s(:str, "12/34xyz")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--numeric"),
                s(:str, "12x/34yz")))))),
      s(:def, :test_decimal_integer,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-integer"),
                  s(:str, "0"))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:ivar, :@decimal_integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-integer"),
                  s(:str, "10"))))),
          s(:send, nil, :assert_equal,
            s(:int, 10),
            s(:ivar, :@decimal_integer)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--decimal-integer"),
                s(:str, "0b1")))),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const,
                  s(:const, nil, :OptionParser), :InvalidArgument)),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-integer"),
                  s(:str, "09"))))),
          s(:send, nil, :assert_equal,
            s(:str, "invalid argument: --decimal-integer 09"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--decimal-integer"),
                s(:str, "x")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--decimal-integer"),
                s(:str, "1234xyz")))))),
      s(:def, :test_octal_integer,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--octal-integer"),
                  s(:str, "0"))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:ivar, :@octal_integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--octal-integer"),
                  s(:str, "6"))))),
          s(:send, nil, :assert_equal,
            s(:int, 6),
            s(:ivar, :@octal_integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--octal-integer"),
                  s(:str, "07"))))),
          s(:send, nil, :assert_equal,
            s(:int, 7),
            s(:ivar, :@octal_integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--octal-integer"),
                  s(:str, "10"))))),
          s(:send, nil, :assert_equal,
            s(:int, 8),
            s(:ivar, :@octal_integer)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--octal-integer"),
                  s(:str, "011"))))),
          s(:send, nil, :assert_equal,
            s(:int, 9),
            s(:ivar, :@octal_integer)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--octal-integer"),
                s(:str, "09")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--octal-integer"),
                s(:str, "0b1")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--octal-integer"),
                s(:str, "x")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--octal-integer"),
                s(:str, "01234xyz")))))),
      s(:def, :test_decimal_numeric,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-numeric"),
                  s(:str, "0"))))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:ivar, :@decimal_numeric)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-numeric"),
                  s(:str, "01"))))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:ivar, :@decimal_numeric)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-numeric"),
                  s(:str, "1.2"))))),
          s(:send, nil, :assert_in_delta,
            s(:float, 1.2),
            s(:ivar, :@decimal_numeric)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-numeric"),
                  s(:str, "1E2"))))),
          s(:send, nil, :assert_in_delta,
            s(:float, 100.0),
            s(:ivar, :@decimal_numeric)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--decimal-numeric"),
                s(:str, "0b1")))),
          s(:lvasgn, :e,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const,
                  s(:const, nil, :OptionParser), :InvalidArgument)),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--decimal-numeric"),
                  s(:str, "09"))))),
          s(:send, nil, :assert_equal,
            s(:str, "invalid argument: --decimal-numeric 09"),
            s(:send,
              s(:lvar, :e), :message)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--decimal-integer"),
                s(:str, "1234xyz")))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const,
                s(:const, nil, :OptionParser), :InvalidArgument)),
            s(:args),
            s(:send,
              s(:ivar, :@opt), :parse!,
              s(:array,
                s(:str, "--decimal-integer"),
                s(:str, "12.34xyz")))))))))
