s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "test_optparse")),
  s(:class,
    s(:const,
      s(:const, nil, :TestOptionParser), :SummaryTest),
    s(:const, nil, :TestOptionParser),
    s(:begin,
      s(:def, :test_short_clash,
        s(:args),
        s(:begin,
          s(:lvasgn, :r,
            s(:nil)),
          s(:lvasgn, :o,
            s(:block,
              s(:send,
                s(:const, nil, :OptionParser), :new),
              s(:args,
                s(:arg, :opts)),
              s(:begin,
                s(:block,
                  s(:send,
                    s(:lvar, :opts), :on,
                    s(:str, "-f"),
                    s(:str, "--first-option"),
                    s(:str, "description 1"),
                    s(:str, "description 2")),
                  s(:args),
                  s(:lvasgn, :r,
                    s(:str, "first-option"))),
                s(:block,
                  s(:send,
                    s(:lvar, :opts), :on,
                    s(:str, "-t"),
                    s(:str, "--test-option")),
                  s(:args),
                  s(:lvasgn, :r,
                    s(:str, "test-option"))),
                s(:block,
                  s(:send,
                    s(:lvar, :opts), :on,
                    s(:str, "-t"),
                    s(:str, "--another-test-option")),
                  s(:args),
                  s(:lvasgn, :r,
                    s(:str, "another-test-option"))),
                s(:send,
                  s(:lvar, :opts), :separator,
                  s(:str, "this is\nseparator")),
                s(:block,
                  s(:send,
                    s(:lvar, :opts), :on,
                    s(:str, "-l"),
                    s(:str, "--last-option")),
                  s(:args),
                  s(:lvasgn, :r,
                    s(:str, "last-option")))))),
          s(:lvasgn, :s,
            s(:send,
              s(:lvar, :o), :summarize)),
          s(:send,
            s(:lvar, :o), :parse,
            s(:str, "-t")),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "--"),
              s(:begin,
                s(:lvar, :r)),
              s(:regopt)),
            s(:send,
              s(:send,
                s(:lvar, :s), :grep,
                s(:regexp,
                  s(:str, "^\\s*-t,"),
                  s(:regopt))), :[],
              s(:int, 0))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "first-option"),
              s(:regopt)),
            s(:send,
              s(:lvar, :s), :[],
              s(:int, 0))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "description 1"),
              s(:regopt)),
            s(:send,
              s(:lvar, :s), :[],
              s(:int, 0))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "description 2"),
              s(:regopt)),
            s(:send,
              s(:lvar, :s), :[],
              s(:int, 1))),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "last-option"),
              s(:regopt)),
            s(:send,
              s(:lvar, :s), :[],
              s(:int, -1))))),
      s(:def, :test_banner,
        s(:args),
        s(:begin,
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :OptionParser), :new,
              s(:str, "foo bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "foo bar"),
            s(:send,
              s(:lvar, :o), :banner)))),
      s(:def, :test_banner_from_progname,
        s(:args),
        s(:begin,
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :OptionParser), :new)),
          s(:send,
            s(:lvar, :o), :program_name=,
            s(:str, "foobar")),
          s(:send, nil, :assert_equal,
            s(:str, "Usage: foobar [options]\n"),
            s(:send,
              s(:lvar, :o), :help)))),
      s(:def, :test_summary,
        s(:args),
        s(:begin,
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :OptionParser), :new,
              s(:str, "foo\nbar"))),
          s(:send, nil, :assert_equal,
            s(:str, "foo\nbar\n"),
            s(:send,
              s(:lvar, :o), :to_s)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo\n"),
              s(:str, "bar")),
            s(:send,
              s(:lvar, :o), :to_a)))),
      s(:def, :test_summary_containing_space,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug6348,
            s(:str, "[ruby-dev:45568]")),
          s(:lvasgn, :o,
            s(:send,
              s(:const, nil, :OptionParser), :new,
              s(:str, "foo bar"))),
          s(:send, nil, :assert_equal,
            s(:str, "foo bar\n"),
            s(:send,
              s(:lvar, :o), :to_s),
            s(:lvar, :bug6348)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo bar")),
            s(:send,
              s(:lvar, :o), :to_a),
            s(:lvar, :bug6348)))))))
