s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:class,
    s(:const, nil, :TestOptionParser),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@opt,
            s(:send,
              s(:const, nil, :OptionParser), :new)),
          s(:ivasgn, :@flag,
            s(:send,
              s(:self), :class)))),
      s(:class,
        s(:const, nil, :DummyOutput),
        s(:const, nil, :String),
        s(:alias,
          s(:sym, :write),
          s(:sym, :<<))),
      s(:def, :assert_no_error,
        s(:args,
          s(:restarg, :args)),
        s(:ensure,
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:gvasgn, :$stderr),
                s(:lvasgn, :stderr)),
              s(:array,
                s(:send,
                  s(:const, nil, :DummyOutput), :new),
                s(:gvar, :$stderr))),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:splat,
                  s(:lvar, :args))),
              s(:args),
              s(:return,
                s(:yield)))),
          s(:begin,
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :stderr),
                s(:gvasgn, :$stderr)),
              s(:array,
                s(:gvar, :$stderr),
                s(:lvar, :stderr))),
            s(:if,
              s(:gvar, :$!),
              s(:block,
                s(:send,
                  s(:send,
                    s(:gvar, :$!), :backtrace), :delete_if),
                s(:args,
                  s(:arg, :e)),
                s(:send,
                  s(:regexp,
                    s(:str, "\\A"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :Regexp), :quote,
                        s(:str, "(string)"))),
                    s(:str, ":"),
                    s(:begin,
                      s(:send,
                        s(:int, 19), :-,
                        s(:int, 2))),
                    s(:regopt, :o)), :=~,
                  s(:lvar, :e))), nil),
            s(:send, nil, :assert_empty,
              s(:lvar, :stderr))))),
      s(:alias,
        s(:sym, :no_error),
        s(:sym, :assert_no_error)),
      s(:def, :test_permute,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array)))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "-"),
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "-"),
                  s(:str, "foo"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "--"),
                  s(:str, "foo"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "-"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "-"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "--"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "--help"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "--"),
                  s(:str, "--help"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)))),
      s(:def, :test_order,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :order!,
                s(:array)))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :order!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "-"),
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :order!,
                s(:array,
                  s(:str, "-"),
                  s(:str, "foo"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :permute!,
                s(:array,
                  s(:str, "--"),
                  s(:str, "foo"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "-"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :order!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "-"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "--"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :order!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "--"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo"),
              s(:str, "--"),
              s(:str, "--help"),
              s(:str, "bar")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :order!,
                s(:array,
                  s(:str, "foo"),
                  s(:str, "--"),
                  s(:str, "--help"),
                  s(:str, "bar"))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:self), :class),
            s(:ivar, :@flag)))),
      s(:def, :test_regexp,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:ivar, :@reopt)), nil,
            s(:return)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--regexp=/foo/"))))),
          s(:send, nil, :assert_equal,
            s(:regexp,
              s(:str, "foo"),
              s(:regopt)),
            s(:ivar, :@reopt)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--regexp=/foo/i"))))),
          s(:send, nil, :assert_equal,
            s(:regexp,
              s(:str, "foo"),
              s(:regopt, :i)),
            s(:ivar, :@reopt)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--regexp=/foo/n"))))),
          s(:send, nil, :assert_equal,
            s(:regexp,
              s(:str, "foo"),
              s(:regopt, :n)),
            s(:ivar, :@reopt)))))))
