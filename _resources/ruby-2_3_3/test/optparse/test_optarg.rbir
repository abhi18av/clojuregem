s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "test_optparse")),
  s(:class,
    s(:const,
      s(:const, nil, :TestOptionParser), :OptArg),
    s(:const, nil, :TestOptionParser),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "-x[VAL]")),
            s(:args,
              s(:arg, :x)),
            s(:ivasgn, :@flag,
              s(:lvar, :x))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--option[=VAL]")),
            s(:args,
              s(:arg, :x)),
            s(:ivasgn, :@flag,
              s(:lvar, :x))),
          s(:block,
            s(:send,
              s(:ivar, :@opt), :def_option,
              s(:str, "--regexp[=REGEXP]"),
              s(:const, nil, :Regexp)),
            s(:args,
              s(:arg, :x)),
            s(:ivasgn, :@reopt,
              s(:lvar, :x))),
          s(:ivasgn, :@reopt,
            s(:nil)))),
      s(:def, :test_short,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-x"))))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:ivar, :@flag)),
          s(:ivasgn, :@flag,
            s(:false)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-x"),
                  s(:str, "foo"))))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-xfoo"))))),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-x="))))),
          s(:send, nil, :assert_equal,
            s(:str, "="),
            s(:ivar, :@flag)))),
      s(:def, :test_abbrev,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-o"))))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:ivar, :@flag)),
          s(:ivasgn, :@flag,
            s(:false)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-o"),
                  s(:str, "foo"))))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-ofoo"))))),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "-o="))))),
          s(:send, nil, :assert_equal,
            s(:str, "="),
            s(:ivar, :@flag)))),
      s(:def, :test_long,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--opt"))))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--opt="),
                  s(:str, "foo"))))),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--opt=foo"))))),
          s(:send, nil, :assert_equal,
            s(:str, "foo"),
            s(:ivar, :@flag)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "foo")),
            s(:block,
              s(:send, nil, :no_error),
              s(:args),
              s(:send,
                s(:ivar, :@opt), :parse!,
                s(:array,
                  s(:str, "--opt"),
                  s(:str, "foo"))))),
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:ivar, :@flag)))))))
