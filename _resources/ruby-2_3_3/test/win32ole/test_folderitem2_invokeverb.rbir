s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "win32ole")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:if,
    s(:defined?,
      s(:const, nil, :WIN32OLE)),
    s(:class,
      s(:const, nil, :TestInvokeVerb),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@fso,
              s(:send,
                s(:const, nil, :WIN32OLE), :new,
                s(:str, "Scripting.FileSystemObject"))),
            s(:lvasgn, :dummy_file,
              s(:send,
                s(:ivar, :@fso), :GetTempName)),
            s(:ivasgn, :@cfolder,
              s(:send,
                s(:ivar, :@fso), :getFolder,
                s(:str, "."))),
            s(:lvasgn, :f,
              s(:send,
                s(:ivar, :@cfolder), :CreateTextFile,
                s(:lvar, :dummy_file))),
            s(:send,
              s(:lvar, :f), :close),
            s(:ivasgn, :@dummy_path,
              s(:send,
                s(:send,
                  s(:send,
                    s(:ivar, :@cfolder), :path), :+,
                  s(:str, "\\")), :+,
                s(:lvar, :dummy_file))),
            s(:lvasgn, :shell,
              s(:send,
                s(:const, nil, :WIN32OLE), :new,
                s(:str, "Shell.Application"))),
            s(:ivasgn, :@nsp,
              s(:send,
                s(:lvar, :shell), :NameSpace,
                s(:send,
                  s(:ivar, :@cfolder), :path))),
            s(:ivasgn, :@fi2,
              s(:send,
                s(:ivar, :@nsp), :parseName,
                s(:lvar, :dummy_file))))),
        s(:def, :find_link,
          s(:args,
            s(:arg, :path)),
          s(:begin,
            s(:lvasgn, :arlink,
              s(:array)),
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@cfolder), :files), :each),
              s(:args,
                s(:arg, :f)),
              s(:if,
                s(:match_with_lvasgn,
                  s(:regexp,
                    s(:str, "\\.lnk$"),
                    s(:regopt)),
                  s(:send,
                    s(:lvar, :f), :path)),
                s(:begin,
                  s(:lvasgn, :linkinfo,
                    s(:send,
                      s(:send,
                        s(:ivar, :@nsp), :parseName,
                        s(:send,
                          s(:lvar, :f), :name)), :getLink)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :linkinfo), :path), :==,
                      s(:lvar, :path)),
                    s(:send,
                      s(:lvar, :arlink), :push,
                      s(:lvar, :f)), nil)), nil)),
            s(:lvar, :arlink))),
        s(:def, :test_invokeverb,
          s(:args),
          s(:begin,
            s(:lvasgn, :links,
              s(:send, nil, :find_link,
                s(:ivar, :@dummy_path))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :links), :size)),
            s(:lvasgn, :arg,
              s(:send,
                s(:const, nil, :WIN32OLE_VARIANT), :new,
                s(:str, "Link"))),
            s(:send,
              s(:ivar, :@fi2), :InvokeVerb,
              s(:lvar, :arg)),
            s(:lvasgn, :links,
              s(:send, nil, :find_link,
                s(:ivar, :@dummy_path))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :links), :size)),
            s(:ivasgn, :@lpath,
              s(:send,
                s(:send,
                  s(:lvar, :links), :[],
                  s(:int, 0)), :path)))),
        s(:def, :teardown,
          s(:args),
          s(:begin,
            s(:if,
              s(:ivar, :@lpath),
              s(:send,
                s(:ivar, :@fso), :deleteFile,
                s(:ivar, :@lpath)), nil),
            s(:if,
              s(:ivar, :@dummy_path),
              s(:send,
                s(:ivar, :@fso), :deleteFile,
                s(:ivar, :@dummy_path)), nil))))), nil))
