s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "win32ole")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:if,
    s(:defined?,
      s(:const, nil, :WIN32OLE)),
    s(:begin,
      s(:send, nil, :require,
        s(:str, "mkmf")),
      s(:send, nil, :require,
        s(:str, "pathname")),
      s(:send, nil, :require,
        s(:str, "test/unit")),
      s(:send, nil, :require,
        s(:str, "tmpdir")),
      s(:class,
        s(:const, nil, :TestErrInCallBack),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:ivasgn, :@ruby,
                s(:nil)),
              s(:if,
                s(:send,
                  s(:const, nil, :File), :exist?,
                  s(:send,
                    s(:send,
                      s(:str, "./"), :+,
                      s(:send,
                        s(:const, nil, :CONFIG), :[],
                        s(:str, "RUBY_INSTALL_NAME"))), :+,
                    s(:send,
                      s(:const, nil, :CONFIG), :[],
                      s(:str, "EXEEXT")))),
                s(:begin,
                  s(:lvasgn, :sep,
                    s(:or,
                      s(:const,
                        s(:const, nil, :File), :ALT_SEPARATOR),
                      s(:str, "/"))),
                  s(:ivasgn, :@ruby,
                    s(:send,
                      s(:send,
                        s(:str, "."), :+,
                        s(:lvar, :sep)), :+,
                      s(:send,
                        s(:const, nil, :CONFIG), :[],
                        s(:str, "RUBY_INSTALL_NAME")))),
                  s(:lvasgn, :cwd,
                    s(:send,
                      s(:const, nil, :Pathname), :new,
                      s(:send,
                        s(:const, nil, :File), :expand_path,
                        s(:str, ".")))),
                  s(:ivasgn, :@iopt,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:gvar, :$:), :map),
                        s(:args,
                          s(:arg, :e)),
                        s(:send,
                          s(:str, " -I "), :+,
                          s(:begin,
                            s(:rescue,
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:const, nil, :Pathname), :new,
                                    s(:lvar, :e)), :relative_path_from,
                                  s(:lvar, :cwd)), :to_s),
                              s(:resbody, nil, nil,
                                s(:lvar, :e)), nil)))), :join,
                      s(:str, ""))),
                  s(:lvasgn, :script,
                    s(:send,
                      s(:const, nil, :File), :join,
                      s(:send,
                        s(:const, nil, :File), :dirname,
                        s(:str, "(string)")),
                      s(:str, "err_in_callback.rb"))),
                  s(:ivasgn, :@script,
                    s(:rescue,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Pathname), :new,
                            s(:lvar, :script)), :relative_path_from,
                          s(:lvar, :cwd)), :to_s),
                      s(:resbody, nil, nil,
                        s(:lvar, :script)), nil))), nil))),
          s(:def, :available_adodb?,
            s(:args),
            s(:begin,
              s(:kwbegin,
                s(:rescue,
                  s(:send,
                    s(:const, nil, :WIN32OLE), :new,
                    s(:str, "ADODB.Connection")),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :WIN32OLERuntimeError)), nil,
                    s(:return,
                      s(:false))), nil)),
              s(:return,
                s(:true)))),
          s(:def, :test_err_in_callback,
            s(:args),
            s(:begin,
              s(:if,
                s(:send, nil, :available_adodb?), nil,
                s(:send, nil, :skip,
                  s(:str, "'ADODB.Connection' is not available"))),
              s(:if,
                s(:ivar, :@ruby),
                s(:block,
                  s(:send,
                    s(:const, nil, :Dir), :mktmpdir),
                  s(:args,
                    s(:arg, :tmpdir)),
                  s(:begin,
                    s(:lvasgn, :logfile,
                      s(:send,
                        s(:const, nil, :File), :join,
                        s(:lvar, :tmpdir),
                        s(:str, "test_err_in_callback.log"))),
                    s(:lvasgn, :cmd,
                      s(:dstr,
                        s(:begin,
                          s(:ivar, :@ruby)),
                        s(:str, " -v "),
                        s(:begin,
                          s(:ivar, :@iopt)),
                        s(:str, " "),
                        s(:begin,
                          s(:ivar, :@script)),
                        s(:str, " > "),
                        s(:begin,
                          s(:send,
                            s(:lvar, :logfile), :gsub,
                            s(:regexp,
                              s(:str, "/"),
                              s(:regopt)),
                            s(:str, "\\"))),
                        s(:str, " 2>&1"))),
                    s(:send, nil, :system,
                      s(:lvar, :cmd)),
                    s(:lvasgn, :str,
                      s(:str, "")),
                    s(:block,
                      s(:send, nil, :open,
                        s(:lvar, :logfile)),
                      s(:args,
                        s(:arg, :ifs)),
                      s(:lvasgn, :str,
                        s(:send,
                          s(:lvar, :ifs), :read))),
                    s(:send, nil, :assert_match,
                      s(:regexp,
                        s(:str, "NameError"),
                        s(:regopt)),
                      s(:lvar, :str)))), nil)))))), nil))
