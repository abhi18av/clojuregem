s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "win32ole")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:if,
    s(:defined?,
      s(:const, nil, :WIN32OLE_TYPE)),
    s(:class,
      s(:const, nil, :TestWIN32OLE_TYPE),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :test_s_progids,
          s(:args),
          s(:begin,
            s(:lvasgn, :progids,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :progids)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Array),
              s(:lvar, :progids)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :progids), :size), :>,
                s(:int, 0))),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :String),
              s(:send,
                s(:lvar, :progids), :[],
                s(:int, 0))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :progids), :include?,
                s(:str, "Shell.Application.1"))))),
        s(:def, :test_initialize,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "foo"))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :TypeError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:int, 1),
                s(:int, 2))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :TypeError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:int, 1))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :WIN32OLERuntimeError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:str, "foo"))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :WIN32OLERuntimeError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:str, "Application"))),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:str, "Shell"))),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :WIN32OLE_TYPE),
              s(:lvar, :ole_type)),
            s(:send, nil, :assert_equal,
              s(:str, "Shell"),
              s(:send,
                s(:lvar, :ole_type), :name)),
            s(:send, nil, :assert_equal,
              s(:str, "Class"),
              s(:send,
                s(:lvar, :ole_type), :ole_type)),
            s(:send, nil, :assert_equal,
              s(:str, "{13709620-C279-11CE-A49E-444553540000}"),
              s(:send,
                s(:lvar, :ole_type), :guid)),
            s(:send, nil, :assert_equal,
              s(:str, "Shell.Application.1"),
              s(:send,
                s(:lvar, :ole_type), :progid)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :ole_type), :visible?)),
            s(:send, nil, :assert_equal,
              s(:str, "Shell"),
              s(:send,
                s(:lvar, :ole_type), :to_s)),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :ole_type), :major_version)),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :ole_type), :minor_version)),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:lvar, :ole_type), :typekind)),
            s(:send, nil, :assert_equal,
              s(:str, "Shell Object Type Information"),
              s(:send,
                s(:lvar, :ole_type), :helpstring)),
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:lvar, :ole_type), :src_type)),
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:send,
                s(:lvar, :ole_type), :helpfile)),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :ole_type), :helpcontext)),
            s(:send, nil, :assert_equal,
              s(:array),
              s(:send,
                s(:lvar, :ole_type), :variables)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :ole_type), :ole_methods), :select),
                    s(:args,
                      s(:arg, :m)),
                    s(:match_with_lvasgn,
                      s(:regexp,
                        s(:str, "NameSpace"),
                        s(:regopt, :i)),
                      s(:send,
                        s(:lvar, :m), :name))), :size), :>,
                s(:int, 0))),
            s(:lvasgn, :ole_type2,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "{13709620-C279-11CE-A49E-444553540000}"),
                s(:str, "Shell"))),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :WIN32OLE_TYPE),
              s(:lvar, :ole_type)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :name),
              s(:send,
                s(:lvar, :ole_type2), :name)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :ole_type),
              s(:send,
                s(:lvar, :ole_type2), :ole_type)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :guid),
              s(:send,
                s(:lvar, :ole_type2), :guid)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :progid),
              s(:send,
                s(:lvar, :ole_type2), :progid)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :visible?),
              s(:send,
                s(:lvar, :ole_type2), :visible?)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :to_s),
              s(:send,
                s(:lvar, :ole_type2), :to_s)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :major_version),
              s(:send,
                s(:lvar, :ole_type2), :major_version)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :minor_version),
              s(:send,
                s(:lvar, :ole_type2), :minor_version)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :typekind),
              s(:send,
                s(:lvar, :ole_type2), :typekind)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :helpstring),
              s(:send,
                s(:lvar, :ole_type2), :helpstring)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :src_type),
              s(:send,
                s(:lvar, :ole_type2), :src_type)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :helpfile),
              s(:send,
                s(:lvar, :ole_type2), :helpfile)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :helpcontext),
              s(:send,
                s(:lvar, :ole_type2), :helpcontext)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :ole_type), :variables), :size),
              s(:send,
                s(:send,
                  s(:lvar, :ole_type2), :variables), :size)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ole_type), :ole_methods), :[],
                  s(:int, 0)), :name),
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :ole_type2), :ole_methods), :[],
                  s(:int, 0)), :name)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :ole_type), :ole_typelib), :name),
              s(:send,
                s(:send,
                  s(:lvar, :ole_type2), :ole_typelib), :name)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :ole_type), :implemented_ole_types), :size),
              s(:send,
                s(:send,
                  s(:lvar, :ole_type2), :implemented_ole_types), :size)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :ole_type), :inspect),
              s(:send,
                s(:lvar, :ole_type2), :inspect)))),
        s(:def, :setup,
          s(:args),
          s(:ivasgn, :@ole_type,
            s(:send,
              s(:const, nil, :WIN32OLE_TYPE), :new,
              s(:str, "Microsoft Shell Controls And Automation"),
              s(:str, "Shell")))),
        s(:def, :test_name,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Shell"),
            s(:send,
              s(:ivar, :@ole_type), :name))),
        s(:def, :test_ole_type,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Class"),
            s(:send,
              s(:ivar, :@ole_type), :ole_type))),
        s(:def, :test_guid,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "{13709620-C279-11CE-A49E-444553540000}"),
            s(:send,
              s(:ivar, :@ole_type), :guid))),
        s(:def, :test_progid,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Shell.Application.1"),
            s(:send,
              s(:ivar, :@ole_type), :progid))),
        s(:def, :test_visible?,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@ole_type), :visible?)),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:str, "IShellDispatch"))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :ole_type), :visible?), :!)))),
        s(:def, :test_to_s,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@ole_type), :to_s),
            s(:send,
              s(:ivar, :@ole_type), :name))),
        s(:def, :test_major_version,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:ivar, :@ole_type), :major_version))),
        s(:def, :test_minor_version,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:ivar, :@ole_type), :minor_version))),
        s(:def, :test_typekind,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send,
              s(:ivar, :@ole_type), :typekind))),
        s(:def, :test_helpstring,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Shell Object Type Information"),
            s(:send,
              s(:ivar, :@ole_type), :helpstring))),
        s(:def, :test_src_type,
          s(:args),
          s(:begin,
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Scripting Runtime"),
                s(:str, "DriveTypeConst"))),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "__MIDL___MIDL_itf_scrrun_"),
                s(:regopt)),
              s(:send,
                s(:lvar, :ole_type), :src_type)),
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:ivar, :@ole_type), :src_type)))),
        s(:def, :test_helpfile,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, ""),
              s(:send,
                s(:ivar, :@ole_type), :helpfile)),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Scripting Runtime"),
                s(:str, "Folders"))),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "VBENLR98\\.CHM$"),
                s(:regopt, :i)),
              s(:send,
                s(:lvar, :ole_type), :helpfile)))),
        s(:def, :test_helpcontext,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:ivar, :@ole_type), :helpcontext)),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Scripting Runtime"),
                s(:str, "Folders"))),
            s(:send, nil, :assert_equal,
              s(:int, 2181929),
              s(:send,
                s(:lvar, :ole_type), :helpcontext)))),
        s(:def, :test_variables,
          s(:args),
          s(:begin,
            s(:lvasgn, :variables,
              s(:send,
                s(:ivar, :@ole_type), :variables)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Array),
              s(:lvar, :variables)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :variables), :size), :==,
                s(:int, 0))),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:str, "ShellSpecialFolderConstants"))),
            s(:lvasgn, :variables,
              s(:send,
                s(:lvar, :ole_type), :variables)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Array),
              s(:lvar, :variables)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :variables), :size), :>,
                s(:int, 0))),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :WIN32OLE_VARIABLE),
              s(:send,
                s(:lvar, :variables), :[],
                s(:int, 0))))),
        s(:def, :test_ole_methods,
          s(:args),
          s(:begin,
            s(:lvasgn, :methods,
              s(:send,
                s(:ivar, :@ole_type), :ole_methods)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Array),
              s(:lvar, :methods)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:lvar, :methods), :size), :>,
                s(:int, 0))),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :WIN32OLE_METHOD),
              s(:send,
                s(:lvar, :methods), :[],
                s(:int, 0))),
            s(:send, nil, :assert,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :methods), :collect),
                  s(:args,
                    s(:arg, :m)),
                  s(:send,
                    s(:lvar, :m), :name)), :include?,
                s(:str, "Application"))))),
        s(:def, :test_ole_typelib,
          s(:args),
          s(:begin,
            s(:lvasgn, :tlib,
              s(:send,
                s(:ivar, :@ole_type), :ole_typelib)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :WIN32OLE_TYPELIB),
              s(:lvar, :tlib)),
            s(:send, nil, :assert_equal,
              s(:str, "Microsoft Shell Controls And Automation"),
              s(:send,
                s(:lvar, :tlib), :name)))),
        s(:def, :test_implemented_ole_types,
          s(:args),
          s(:begin,
            s(:lvasgn, :ole_types,
              s(:send,
                s(:ivar, :@ole_type), :implemented_ole_types)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Array),
              s(:lvar, :ole_types)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :ole_types), :size)),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "^IShellDispatch\\d{0,1}$"),
                s(:regopt)),
              s(:send,
                s(:send,
                  s(:lvar, :ole_types), :[],
                  s(:int, 0)), :name)),
            s(:lvasgn, :ie_otype,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Internet Controls"),
                s(:str, "InternetExplorer"))),
            s(:lvasgn, :ole_types,
              s(:send,
                s(:lvar, :ie_otype), :implemented_ole_types)),
            s(:send, nil, :assert_equal,
              s(:int, 4),
              s(:send,
                s(:lvar, :ole_types), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowser2")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowserApp")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents2")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)))),
        s(:def, :test_default_ole_types,
          s(:args),
          s(:begin,
            s(:lvasgn, :ie_otype,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Internet Controls"),
                s(:str, "InternetExplorer"))),
            s(:lvasgn, :ole_types,
              s(:send,
                s(:lvar, :ie_otype), :default_ole_types)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowser2")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowserApp")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents2")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)))),
        s(:def, :test_source_ole_types,
          s(:args),
          s(:begin,
            s(:lvasgn, :ie_otype,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Internet Controls"),
                s(:str, "InternetExplorer"))),
            s(:lvasgn, :ole_types,
              s(:send,
                s(:lvar, :ie_otype), :source_ole_types)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowser2")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowserApp")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents2")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)))),
        s(:def, :test_default_event_sources,
          s(:args),
          s(:begin,
            s(:lvasgn, :ie_otype,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Internet Controls"),
                s(:str, "InternetExplorer"))),
            s(:lvasgn, :ole_types,
              s(:send,
                s(:lvar, :ie_otype), :default_event_sources)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowser2")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "IWebBrowserApp")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents2")))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :otype), :size)),
            s(:lvasgn, :otype,
              s(:block,
                s(:send,
                  s(:lvar, :ole_types), :select),
                s(:args,
                  s(:arg, :t)),
                s(:send,
                  s(:send,
                    s(:lvar, :t), :name), :==,
                  s(:str, "DWebBrowserEvents")))),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :otype), :size)))),
        s(:def, :test_inspect,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "#<WIN32OLE_TYPE:Shell>"),
            s(:send,
              s(:ivar, :@ole_type), :inspect))),
        s(:def, :test_s_typelibs,
          s(:args),
          s(:begin,
            s(:lvasgn, :tlibs,
              s(:send,
                s(:send,
                  s(:const, nil, :WIN32OLE_TYPE), :typelibs), :sort)),
            s(:lvasgn, :tlibs2,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:const, nil, :WIN32OLE_TYPELIB), :typelibs), :collect),
                  s(:args,
                    s(:arg, :t)),
                  s(:send,
                    s(:lvar, :t), :name)), :sort)),
            s(:send, nil, :assert_equal,
              s(:lvar, :tlibs2),
              s(:lvar, :tlibs)))),
        s(:def, :test_s_ole_classes,
          s(:args),
          s(:begin,
            s(:lvasgn, :ots1,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :ole_classes,
                s(:str, "Microsoft Shell Controls And Automation"))),
            s(:lvasgn, :ots2,
              s(:send,
                s(:send,
                  s(:const, nil, :WIN32OLE_TYPELIB), :new,
                  s(:str, "Microsoft Shell Controls And Automation")), :ole_types)),
            s(:lvasgn, :otns1,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :ots1), :collect),
                  s(:args,
                    s(:arg, :t)),
                  s(:send,
                    s(:lvar, :t), :name)), :sort)),
            s(:lvasgn, :otns2,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :ots2), :collect),
                  s(:args,
                    s(:arg, :t)),
                  s(:send,
                    s(:lvar, :t), :name)), :sort)),
            s(:send, nil, :assert_equal,
              s(:lvar, :otns2),
              s(:lvar, :otns1)))))), nil))
