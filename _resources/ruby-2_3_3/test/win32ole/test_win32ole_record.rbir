s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "win32ole")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:casgn, nil, :PROGID_RBCOMTEST,
    s(:str, "RbComTest.ComSrvTest")),
  s(:if,
    s(:defined?,
      s(:const, nil, :WIN32OLE_RECORD)),
    s(:begin,
      s(:def, :rbcomtest_exist?,
        s(:args),
        s(:begin,
          s(:lvasgn, :exist,
            s(:false)),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:const, nil, :WIN32OLE), :new,
                    s(:const, nil, :PROGID_RBCOMTEST))),
                s(:lvasgn, :exist,
                  s(:true))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :WIN32OLERuntimeError)), nil,
                s(:lvasgn, :exist,
                  s(:false))), nil)),
          s(:lvar, :exist))),
      s(:class,
        s(:const, nil, :TestWIN32OLE_RECORD_BY_RBCOMTEST),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:if,
          s(:send, nil, :rbcomtest_exist?),
          s(:begin,
            s(:def, :setup,
              s(:args),
              s(:ivasgn, :@obj,
                s(:send,
                  s(:const, nil, :WIN32OLE), :new,
                  s(:const, nil, :PROGID_RBCOMTEST)))),
            s(:def, :test_s_new_from_win32ole,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send, nil, :assert,
                  s(:lvar, :rec)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :WIN32OLE_RECORD),
                  s(:lvar, :rec)))),
            s(:def, :test_s_new_from_win32ole_typelib,
              s(:args),
              s(:begin,
                s(:lvasgn, :tlib,
                  s(:send,
                    s(:ivar, :@obj), :ole_typelib)),
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:lvar, :tlib))),
                s(:send, nil, :assert,
                  s(:lvar, :rec)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :WIN32OLE_RECORD),
                  s(:lvar, :rec)))),
            s(:def, :test_s_new_raise,
              s(:args),
              s(:begin,
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :WIN32OLERuntimeError)),
                  s(:args),
                  s(:lvasgn, :rec,
                    s(:send,
                      s(:const, nil, :WIN32OLE_RECORD), :new,
                      s(:str, "NonExistRecordName"),
                      s(:ivar, :@obj)))),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ArgumentError)),
                  s(:args),
                  s(:lvasgn, :rec,
                    s(:send,
                      s(:const, nil, :WIN32OLE_RECORD), :new))),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :ArgumentError)),
                  s(:args),
                  s(:lvasgn, :rec,
                    s(:send,
                      s(:const, nil, :WIN32OLE_RECORD), :new,
                      s(:str, "NonExistRecordName")))))),
            s(:def, :test_to_h,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send, nil, :assert_equal,
                  s(:hash,
                    s(:pair,
                      s(:str, "title"),
                      s(:nil)),
                    s(:pair,
                      s(:str, "cost"),
                      s(:nil))),
                  s(:send,
                    s(:lvar, :rec), :to_h)))),
            s(:def, :test_typename,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send, nil, :assert_equal,
                  s(:str, "Book"),
                  s(:send,
                    s(:lvar, :rec), :typename)))),
            s(:def, :test_method_missing_getter,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:lvar, :rec), :title)),
                s(:block,
                  s(:send, nil, :assert_raise,
                    s(:const, nil, :KeyError)),
                  s(:args),
                  s(:send,
                    s(:lvar, :rec), :non_exist_name)))),
            s(:def, :test_method_missing_setter,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send,
                  s(:lvar, :rec), :title=,
                  s(:str, "Ruby Book")),
                s(:send, nil, :assert_equal,
                  s(:str, "Ruby Book"),
                  s(:send,
                    s(:lvar, :rec), :title)))),
            s(:def, :test_get_record_from_comserver,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:ivar, :@obj), :getBook)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :WIN32OLE_RECORD),
                  s(:lvar, :rec)),
                s(:send, nil, :assert_equal,
                  s(:str, "The Ruby Book"),
                  s(:send,
                    s(:lvar, :rec), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 20),
                  s(:send,
                    s(:lvar, :rec), :cost)))),
            s(:def, :test_get_record_array_from_comserver,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:ivar, :@obj), :getBooks)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :Array),
                  s(:lvar, :rec)),
                s(:send, nil, :assert_equal,
                  s(:int, 2),
                  s(:send,
                    s(:lvar, :rec), :size)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :WIN32OLE_RECORD),
                  s(:send,
                    s(:lvar, :rec), :[],
                    s(:int, 0))),
                s(:send, nil, :assert_equal,
                  s(:str, "The CRuby Book"),
                  s(:send,
                    s(:send,
                      s(:lvar, :rec), :[],
                      s(:int, 0)), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 30),
                  s(:send,
                    s(:send,
                      s(:lvar, :rec), :[],
                      s(:int, 0)), :cost)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :WIN32OLE_RECORD),
                  s(:send,
                    s(:lvar, :rec), :[],
                    s(:int, 1))),
                s(:send, nil, :assert_equal,
                  s(:str, "The JRuby Book"),
                  s(:send,
                    s(:send,
                      s(:lvar, :rec), :[],
                      s(:int, 1)), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 40),
                  s(:send,
                    s(:send,
                      s(:lvar, :rec), :[],
                      s(:int, 1)), :cost)))),
            s(:def, :test_pass_record_parameter,
              s(:args),
              s(:begin,
                s(:lvasgn, :rec,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send,
                  s(:lvar, :rec), :title=,
                  s(:str, "Ruby Book")),
                s(:send,
                  s(:lvar, :rec), :cost=,
                  s(:int, 60)),
                s(:lvasgn, :book,
                  s(:send,
                    s(:ivar, :@obj), :getVer2BookByValBook,
                    s(:lvar, :rec))),
                s(:send, nil, :assert_equal,
                  s(:str, "Ruby Book ver2"),
                  s(:send,
                    s(:lvar, :book), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 66),
                  s(:send,
                    s(:lvar, :book), :cost)))),
            s(:def, :test_pass_variant_parameter_byref,
              s(:args),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:const, nil, :WIN32OLE_VARIANT), :new,
                    s(:nil),
                    s(:send,
                      s(:const,
                        s(:const,
                          s(:const, nil, :WIN32OLE), :VARIANT), :VT_VARIANT), :|,
                      s(:const,
                        s(:const,
                          s(:const, nil, :WIN32OLE), :VARIANT), :VT_BYREF)))),
                s(:send,
                  s(:ivar, :@obj), :getBookByRefBook,
                  s(:lvar, :obj)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :WIN32OLE_RECORD),
                  s(:send,
                    s(:lvar, :obj), :value)),
                s(:lvasgn, :book,
                  s(:send,
                    s(:lvar, :obj), :value)),
                s(:send, nil, :assert_equal,
                  s(:str, "The Ruby Reference Book2"),
                  s(:send,
                    s(:lvar, :book), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 44),
                  s(:send,
                    s(:lvar, :book), :cost)))),
            s(:def, :test_pass_record_parameter_byref,
              s(:args),
              s(:begin,
                s(:lvasgn, :book,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send,
                  s(:ivar, :@obj), :getBookByRefBook,
                  s(:lvar, :book)),
                s(:send, nil, :assert_equal,
                  s(:str, "The Ruby Reference Book2"),
                  s(:send,
                    s(:lvar, :book), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 44),
                  s(:send,
                    s(:lvar, :book), :cost)))),
            s(:def, :test_pass_and_get_record_parameter_byref,
              s(:args),
              s(:begin,
                s(:lvasgn, :book,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send,
                  s(:lvar, :book), :title=,
                  s(:str, "Ruby Book")),
                s(:send,
                  s(:lvar, :book), :cost=,
                  s(:int, 60)),
                s(:send,
                  s(:ivar, :@obj), :getVer3BookByRefBook,
                  s(:lvar, :book)),
                s(:send, nil, :assert_equal,
                  s(:str, "Ruby Book ver3"),
                  s(:send,
                    s(:lvar, :book), :title)),
                s(:send, nil, :assert_equal,
                  s(:int, 72),
                  s(:send,
                    s(:lvar, :book), :cost)))),
            s(:def, :test_ole_instance_variable_get,
              s(:args),
              s(:begin,
                s(:lvasgn, :obj,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:lvar, :obj), :ole_instance_variable_get,
                    s(:sym, :title))),
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:lvar, :obj), :ole_instance_variable_get,
                    s(:str, "title"))))),
            s(:def, :test_ole_instance_variable_set,
              s(:args),
              s(:begin,
                s(:lvasgn, :book,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send,
                  s(:lvar, :book), :ole_instance_variable_set,
                  s(:sym, :title),
                  s(:str, "Ruby Book")),
                s(:send, nil, :assert_equal,
                  s(:str, "Ruby Book"),
                  s(:send,
                    s(:lvar, :book), :title)),
                s(:send,
                  s(:lvar, :book), :ole_instance_variable_set,
                  s(:str, "title"),
                  s(:str, "Ruby Book2")),
                s(:send, nil, :assert_equal,
                  s(:str, "Ruby Book2"),
                  s(:send,
                    s(:lvar, :book), :title)))),
            s(:def, :test_inspect,
              s(:args),
              s(:begin,
                s(:lvasgn, :book,
                  s(:send,
                    s(:const, nil, :WIN32OLE_RECORD), :new,
                    s(:str, "Book"),
                    s(:ivar, :@obj))),
                s(:send, nil, :assert_equal,
                  s(:str, "#<WIN32OLE_RECORD(Book) {\"title\"=>nil, \"cost\"=>nil}>"),
                  s(:send,
                    s(:lvar, :book), :inspect))))),
          s(:def, :test_dummy_for_skip_message,
            s(:args),
            s(:send, nil, :skip,
              s(:dstr,
                s(:begin,
                  s(:const, nil, :PROGID_RBCOMTEST)),
                s(:str, " for WIN32OLE_RECORD test is not installed"))))))), nil))
