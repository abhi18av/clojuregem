s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "win32ole")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:if,
    s(:defined?,
      s(:const, nil, :WIN32OLE_PARAM)),
    s(:class,
      s(:const, nil, :TestWIN32OLE_PARAM),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Internet Controls"),
                s(:str, "WebBrowser"))),
            s(:lvasgn, :m_navigate,
              s(:send,
                s(:const, nil, :WIN32OLE_METHOD), :new,
                s(:lvar, :ole_type),
                s(:str, "Navigate"))),
            s(:lvasgn, :m_before_navigate,
              s(:send,
                s(:const, nil, :WIN32OLE_METHOD), :new,
                s(:lvar, :ole_type),
                s(:str, "BeforeNavigate"))),
            s(:lvasgn, :params,
              s(:send,
                s(:lvar, :m_navigate), :params)),
            s(:ivasgn, :@param_url,
              s(:send,
                s(:lvar, :params), :[],
                s(:int, 0))),
            s(:ivasgn, :@param_flags,
              s(:send,
                s(:lvar, :params), :[],
                s(:int, 1))),
            s(:ivasgn, :@param_cancel,
              s(:send,
                s(:send,
                  s(:lvar, :m_before_navigate), :params), :[],
                s(:int, 5))),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Shell Controls And Automation"),
                s(:str, "ShellLinkObject"))),
            s(:lvasgn, :m_geticonlocation,
              s(:send,
                s(:const, nil, :WIN32OLE_METHOD), :new,
                s(:lvar, :ole_type),
                s(:str, "GetIconLocation"))),
            s(:ivasgn, :@param_pbs,
              s(:send,
                s(:send,
                  s(:lvar, :m_geticonlocation), :params), :[],
                s(:int, 0))),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft HTML Object Library"),
                s(:str, "FontNames"))),
            s(:lvasgn, :m_count,
              s(:send,
                s(:const, nil, :WIN32OLE_METHOD), :new,
                s(:lvar, :ole_type),
                s(:str, "Count"))),
            s(:ivasgn, :@param_p,
              s(:send,
                s(:send,
                  s(:lvar, :m_count), :params), :[],
                s(:int, 0))),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Scripting Runtime"),
                s(:str, "FileSystemObject"))),
            s(:lvasgn, :m_copyfile,
              s(:send,
                s(:const, nil, :WIN32OLE_METHOD), :new,
                s(:lvar, :ole_type),
                s(:str, "CopyFile"))),
            s(:ivasgn, :@param_overwritefiles,
              s(:send,
                s(:send,
                  s(:lvar, :m_copyfile), :params), :[],
                s(:int, 2))))),
        s(:def, :test_s_new,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_PARAM), :new,
                s(:str, "hoge"))),
            s(:lvasgn, :ole_type,
              s(:send,
                s(:const, nil, :WIN32OLE_TYPE), :new,
                s(:str, "Microsoft Scripting Runtime"),
                s(:str, "FileSystemObject"))),
            s(:lvasgn, :m_copyfile,
              s(:send,
                s(:const, nil, :WIN32OLE_METHOD), :new,
                s(:lvar, :ole_type),
                s(:str, "CopyFile"))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :IndexError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_PARAM), :new,
                s(:lvar, :m_copyfile),
                s(:int, 4))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :IndexError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_PARAM), :new,
                s(:lvar, :m_copyfile),
                s(:int, 0))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :IndexError)),
              s(:args),
              s(:send,
                s(:const, nil, :WIN32OLE_PARAM), :new,
                s(:lvar, :m_copyfile),
                s(:int, 0))),
            s(:lvasgn, :param,
              s(:send,
                s(:const, nil, :WIN32OLE_PARAM), :new,
                s(:lvar, :m_copyfile),
                s(:int, 3))),
            s(:send, nil, :assert_equal,
              s(:str, "OverWriteFiles"),
              s(:send,
                s(:lvar, :param), :name)),
            s(:send, nil, :assert_equal,
              s(:const, nil, :WIN32OLE_PARAM),
              s(:send,
                s(:lvar, :param), :class)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:lvar, :param), :default)),
            s(:send, nil, :assert_equal,
              s(:str, "#<WIN32OLE_PARAM:OverWriteFiles=true>"),
              s(:send,
                s(:lvar, :param), :inspect)))),
        s(:def, :test_name,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, "URL"),
              s(:send,
                s(:ivar, :@param_url), :name)),
            s(:send, nil, :assert_equal,
              s(:str, "Flags"),
              s(:send,
                s(:ivar, :@param_flags), :name)),
            s(:send, nil, :assert_equal,
              s(:str, "Cancel"),
              s(:send,
                s(:ivar, :@param_cancel), :name)))),
        s(:def, :test_ole_type,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, "BSTR"),
              s(:send,
                s(:ivar, :@param_url), :ole_type)),
            s(:send, nil, :assert_equal,
              s(:str, "VARIANT"),
              s(:send,
                s(:ivar, :@param_flags), :ole_type)))),
        s(:def, :test_ole_type_detail,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "BSTR")),
              s(:send,
                s(:ivar, :@param_url), :ole_type_detail)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "PTR"),
                s(:str, "VARIANT")),
              s(:send,
                s(:ivar, :@param_flags), :ole_type_detail)))),
        s(:def, :test_input?,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@param_url), :input?)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@param_cancel), :input?)),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:ivar, :@param_pbs), :input?), :!)))),
        s(:def, :test_output?,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:ivar, :@param_url), :output?), :!)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@param_cancel), :output?)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@param_pbs), :output?)))),
        s(:def, :test_optional?,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:ivar, :@param_url), :optional?), :!)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@param_flags), :optional?)))),
        s(:def, :test_retval?,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:ivar, :@param_url), :retval?), :!)),
            s(:send, nil, :assert,
              s(:send,
                s(:ivar, :@param_p), :retval?)))),
        s(:def, :test_default,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:nil),
              s(:send,
                s(:ivar, :@param_url), :default)),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:ivar, :@param_overwritefiles), :default)))),
        s(:def, :test_to_s,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@param_url), :name),
            s(:send,
              s(:ivar, :@param_url), :to_s))),
        s(:def, :test_inspect,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, "#<WIN32OLE_PARAM:URL>"),
              s(:send,
                s(:ivar, :@param_url), :inspect)),
            s(:send, nil, :assert_equal,
              s(:str, "#<WIN32OLE_PARAM:OverWriteFiles=true>"),
              s(:send,
                s(:ivar, :@param_overwritefiles), :inspect)))))), nil))
