s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "readline")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil),
      s(:send, nil, :require,
        s(:str, "test/unit")))),
  s(:if,
    s(:and,
      s(:and,
        s(:defined?,
          s(:const,
            s(:cbase), :Readline)),
        s(:defined?,
          s(:const,
            s(:const,
              s(:cbase), :Readline), :HISTORY))),
      s(:begin,
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:const,
                s(:const, nil, :Readline), :HISTORY), :clear),
            s(:resbody,
              s(:array,
                s(:const, nil, :NotImplementedError)), nil,
              s(:false)), nil)))),
    s(:class,
      s(:const,
        s(:const, nil, :Readline), :TestHistory),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :Readline)),
        s(:def, :setup,
          s(:args),
          s(:send,
            s(:const, nil, :HISTORY), :clear)),
        s(:def, :test_to_s,
          s(:args),
          s(:begin,
            s(:lvasgn, :expected,
              s(:str, "HISTORY")),
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:send,
                s(:const, nil, :HISTORY), :to_s)))),
        s(:def, :test_get,
          s(:args),
          s(:begin,
            s(:lvasgn, :lines,
              s(:send, nil, :push_history,
                s(:int, 5))),
            s(:block,
              s(:send,
                s(:lvar, :lines), :each_with_index),
              s(:args,
                s(:arg, :s),
                s(:arg, :i)),
              s(:send, nil, :assert_external_string_equal,
                s(:lvar, :s),
                s(:send,
                  s(:const, nil, :HISTORY), :[],
                  s(:lvar, :i)))))),
        s(:def, :test_get__negative,
          s(:args),
          s(:begin,
            s(:lvasgn, :lines,
              s(:send, nil, :push_history,
                s(:int, 5))),
            s(:block,
              s(:send,
                s(:begin,
                  s(:irange,
                    s(:int, 1),
                    s(:int, 5))), :each),
              s(:args,
                s(:arg, :i)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :lines), :[],
                  s(:send,
                    s(:lvar, :i), :-@)),
                s(:send,
                  s(:const, nil, :HISTORY), :[],
                  s(:send,
                    s(:lvar, :i), :-@)))))),
        s(:def, :test_get__out_of_range,
          s(:args),
          s(:begin,
            s(:send, nil, :push_history,
              s(:int, 5)),
            s(:lvasgn, :invalid_indexes,
              s(:array,
                s(:int, 5),
                s(:int, 6),
                s(:int, 100),
                s(:int, -6),
                s(:int, -7),
                s(:int, -100))),
            s(:block,
              s(:send,
                s(:lvar, :invalid_indexes), :each),
              s(:args,
                s(:arg, :i)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :IndexError),
                  s(:dstr,
                    s(:str, "i=<"),
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, ">"))),
                s(:args),
                s(:send,
                  s(:const, nil, :HISTORY), :[],
                  s(:lvar, :i)))),
            s(:lvasgn, :invalid_indexes,
              s(:array,
                s(:int, 100000000000000000000),
                s(:int, -100000000000000000000))),
            s(:block,
              s(:send,
                s(:lvar, :invalid_indexes), :each),
              s(:args,
                s(:arg, :i)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :RangeError),
                  s(:dstr,
                    s(:str, "i=<"),
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, ">"))),
                s(:args),
                s(:send,
                  s(:const, nil, :HISTORY), :[],
                  s(:lvar, :i)))))),
        s(:def, :test_set,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send, nil, :push_history,
                  s(:int, 5)),
                s(:block,
                  s(:send,
                    s(:int, 5), :times),
                  s(:args,
                    s(:arg, :i)),
                  s(:begin,
                    s(:lvasgn, :expected,
                      s(:dstr,
                        s(:str, "set: "),
                        s(:begin,
                          s(:lvar, :i)))),
                    s(:send,
                      s(:const, nil, :HISTORY), :[]=,
                      s(:lvar, :i),
                      s(:lvar, :expected)),
                    s(:send, nil, :assert_external_string_equal,
                      s(:lvar, :expected),
                      s(:send,
                        s(:const, nil, :HISTORY), :[],
                        s(:lvar, :i)))))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NotImplementedError)), nil, nil), nil))),
        s(:def, :test_set__out_of_range,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :IndexError),
                s(:const, nil, :NotImplementedError),
                s(:str, "index=<0>")),
              s(:args),
              s(:send,
                s(:const, nil, :HISTORY), :[]=,
                s(:int, 0),
                s(:str, "set: 0"))),
            s(:send, nil, :push_history,
              s(:int, 5)),
            s(:lvasgn, :invalid_indexes,
              s(:array,
                s(:int, 5),
                s(:int, 6),
                s(:int, 100),
                s(:int, -6),
                s(:int, -7),
                s(:int, -100))),
            s(:block,
              s(:send,
                s(:lvar, :invalid_indexes), :each),
              s(:args,
                s(:arg, :i)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :IndexError),
                  s(:const, nil, :NotImplementedError),
                  s(:dstr,
                    s(:str, "index=<"),
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, ">"))),
                s(:args),
                s(:send,
                  s(:const, nil, :HISTORY), :[]=,
                  s(:lvar, :i),
                  s(:dstr,
                    s(:str, "set: "),
                    s(:begin,
                      s(:lvar, :i)))))),
            s(:lvasgn, :invalid_indexes,
              s(:array,
                s(:int, 100000000000000000000),
                s(:int, -100000000000000000000))),
            s(:block,
              s(:send,
                s(:lvar, :invalid_indexes), :each),
              s(:args,
                s(:arg, :i)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :RangeError),
                  s(:const, nil, :NotImplementedError),
                  s(:dstr,
                    s(:str, "index=<"),
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, ">"))),
                s(:args),
                s(:send,
                  s(:const, nil, :HISTORY), :[]=,
                  s(:lvar, :i),
                  s(:dstr,
                    s(:str, "set: "),
                    s(:begin,
                      s(:lvar, :i)))))))),
        s(:def, :test_push,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:int, 5), :times),
              s(:args,
                s(:arg, :i)),
              s(:begin,
                s(:lvasgn, :s,
                  s(:send,
                    s(:lvar, :i), :to_s)),
                s(:send, nil, :assert_equal,
                  s(:const, nil, :HISTORY),
                  s(:send,
                    s(:const, nil, :HISTORY), :push,
                    s(:lvar, :s))),
                s(:send, nil, :assert_external_string_equal,
                  s(:lvar, :s),
                  s(:send,
                    s(:const, nil, :HISTORY), :[],
                    s(:lvar, :i))))),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:const, nil, :HISTORY), :length)))),
        s(:def, :test_push__operator,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:int, 5), :times),
              s(:args,
                s(:arg, :i)),
              s(:begin,
                s(:lvasgn, :s,
                  s(:send,
                    s(:lvar, :i), :to_s)),
                s(:send, nil, :assert_equal,
                  s(:const, nil, :HISTORY),
                  s(:send,
                    s(:const, nil, :HISTORY), :<<,
                    s(:lvar, :s))),
                s(:send, nil, :assert_external_string_equal,
                  s(:lvar, :s),
                  s(:send,
                    s(:const, nil, :HISTORY), :[],
                    s(:lvar, :i))))),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:const, nil, :HISTORY), :length)))),
        s(:def, :test_push__plural,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:const, nil, :HISTORY),
              s(:send,
                s(:const, nil, :HISTORY), :push,
                s(:str, "0"),
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3"),
                s(:str, "4"))),
            s(:block,
              s(:send,
                s(:begin,
                  s(:irange,
                    s(:int, 0),
                    s(:int, 4))), :each),
              s(:args,
                s(:arg, :i)),
              s(:send, nil, :assert_external_string_equal,
                s(:send,
                  s(:lvar, :i), :to_s),
                s(:send,
                  s(:const, nil, :HISTORY), :[],
                  s(:lvar, :i)))),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:const, nil, :HISTORY), :length)),
            s(:send, nil, :assert_equal,
              s(:const, nil, :HISTORY),
              s(:send,
                s(:const, nil, :HISTORY), :push,
                s(:str, "5"),
                s(:str, "6"),
                s(:str, "7"),
                s(:str, "8"),
                s(:str, "9"))),
            s(:block,
              s(:send,
                s(:begin,
                  s(:irange,
                    s(:int, 5),
                    s(:int, 9))), :each),
              s(:args,
                s(:arg, :i)),
              s(:send, nil, :assert_external_string_equal,
                s(:send,
                  s(:lvar, :i), :to_s),
                s(:send,
                  s(:const, nil, :HISTORY), :[],
                  s(:lvar, :i)))),
            s(:send, nil, :assert_equal,
              s(:int, 10),
              s(:send,
                s(:const, nil, :HISTORY), :length)))),
        s(:def, :test_pop,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:const, nil, :HISTORY), :pop)),
                s(:lvasgn, :lines,
                  s(:send, nil, :push_history,
                    s(:int, 5))),
                s(:block,
                  s(:send,
                    s(:begin,
                      s(:irange,
                        s(:int, 1),
                        s(:int, 5))), :each),
                  s(:args,
                    s(:arg, :i)),
                  s(:begin,
                    s(:send, nil, :assert_external_string_equal,
                      s(:send,
                        s(:lvar, :lines), :[],
                        s(:send,
                          s(:lvar, :i), :-@)),
                      s(:send,
                        s(:const, nil, :HISTORY), :pop)),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:send,
                          s(:lvar, :lines), :length), :-,
                        s(:lvar, :i)),
                      s(:send,
                        s(:const, nil, :HISTORY), :length)))),
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:const, nil, :HISTORY), :pop))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NotImplementedError)), nil, nil), nil))),
        s(:def, :test_shift,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:const, nil, :HISTORY), :shift)),
                s(:lvasgn, :lines,
                  s(:send, nil, :push_history,
                    s(:int, 5))),
                s(:block,
                  s(:send,
                    s(:begin,
                      s(:irange,
                        s(:int, 0),
                        s(:int, 4))), :each),
                  s(:args,
                    s(:arg, :i)),
                  s(:begin,
                    s(:send, nil, :assert_external_string_equal,
                      s(:send,
                        s(:lvar, :lines), :[],
                        s(:lvar, :i)),
                      s(:send,
                        s(:const, nil, :HISTORY), :shift)),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:send,
                          s(:lvar, :lines), :length), :-,
                        s(:begin,
                          s(:send,
                            s(:lvar, :i), :+,
                            s(:int, 1)))),
                      s(:send,
                        s(:const, nil, :HISTORY), :length)))),
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:send,
                    s(:const, nil, :HISTORY), :shift))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NotImplementedError)), nil, nil), nil))),
        s(:def, :test_each,
          s(:args),
          s(:begin,
            s(:lvasgn, :e,
              s(:block,
                s(:send,
                  s(:const, nil, :HISTORY), :each),
                s(:args,
                  s(:arg, :s)),
                s(:send, nil, :assert,
                  s(:false)))),
            s(:send, nil, :assert_equal,
              s(:const, nil, :HISTORY),
              s(:lvar, :e)),
            s(:lvasgn, :lines,
              s(:send, nil, :push_history,
                s(:int, 5))),
            s(:lvasgn, :i,
              s(:int, 0)),
            s(:lvasgn, :e,
              s(:block,
                s(:send,
                  s(:const, nil, :HISTORY), :each),
                s(:args,
                  s(:arg, :s)),
                s(:begin,
                  s(:send, nil, :assert_external_string_equal,
                    s(:send,
                      s(:const, nil, :HISTORY), :[],
                      s(:lvar, :i)),
                    s(:lvar, :s)),
                  s(:send, nil, :assert_external_string_equal,
                    s(:send,
                      s(:lvar, :lines), :[],
                      s(:lvar, :i)),
                    s(:lvar, :s)),
                  s(:op_asgn,
                    s(:lvasgn, :i), :+,
                    s(:int, 1))))),
            s(:send, nil, :assert_equal,
              s(:const, nil, :HISTORY),
              s(:lvar, :e)))),
        s(:def, :test_each__enumerator,
          s(:args),
          s(:begin,
            s(:lvasgn, :e,
              s(:send,
                s(:const, nil, :HISTORY), :each)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :Enumerator),
              s(:lvar, :e)))),
        s(:def, :test_length,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:const, nil, :HISTORY), :length)),
            s(:send, nil, :push_history,
              s(:int, 1)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:const, nil, :HISTORY), :length)),
            s(:send, nil, :push_history,
              s(:int, 4)),
            s(:send, nil, :assert_equal,
              s(:int, 5),
              s(:send,
                s(:const, nil, :HISTORY), :length)),
            s(:send,
              s(:const, nil, :HISTORY), :clear),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:const, nil, :HISTORY), :length)))),
        s(:def, :test_empty_p,
          s(:args),
          s(:block,
            s(:send,
              s(:int, 2), :times),
            s(:args),
            s(:begin,
              s(:send, nil, :assert,
                s(:send,
                  s(:const, nil, :HISTORY), :empty?)),
              s(:send,
                s(:const, nil, :HISTORY), :push,
                s(:str, "s")),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:const, nil, :HISTORY), :empty?)),
              s(:send,
                s(:const, nil, :HISTORY), :clear),
              s(:send, nil, :assert,
                s(:send,
                  s(:const, nil, :HISTORY), :empty?))))),
        s(:def, :test_delete_at,
          s(:args),
          s(:kwbegin,
            s(:rescue,
              s(:begin,
                s(:lvasgn, :lines,
                  s(:send, nil, :push_history,
                    s(:int, 5))),
                s(:block,
                  s(:send,
                    s(:begin,
                      s(:irange,
                        s(:int, 0),
                        s(:int, 4))), :each),
                  s(:args,
                    s(:arg, :i)),
                  s(:send, nil, :assert_external_string_equal,
                    s(:send,
                      s(:lvar, :lines), :[],
                      s(:lvar, :i)),
                    s(:send,
                      s(:const, nil, :HISTORY), :delete_at,
                      s(:int, 0)))),
                s(:send, nil, :assert,
                  s(:send,
                    s(:const, nil, :HISTORY), :empty?)),
                s(:lvasgn, :lines,
                  s(:send, nil, :push_history,
                    s(:int, 5))),
                s(:block,
                  s(:send,
                    s(:begin,
                      s(:irange,
                        s(:int, 1),
                        s(:int, 5))), :each),
                  s(:args,
                    s(:arg, :i)),
                  s(:send, nil, :assert_external_string_equal,
                    s(:send,
                      s(:lvar, :lines), :[],
                      s(:send,
                        s(:send,
                          s(:lvar, :lines), :length), :-,
                        s(:lvar, :i))),
                    s(:send,
                      s(:const, nil, :HISTORY), :delete_at,
                      s(:int, -1)))),
                s(:send, nil, :assert,
                  s(:send,
                    s(:const, nil, :HISTORY), :empty?)),
                s(:lvasgn, :lines,
                  s(:send, nil, :push_history,
                    s(:int, 5))),
                s(:send, nil, :assert_external_string_equal,
                  s(:send,
                    s(:lvar, :lines), :[],
                    s(:int, 0)),
                  s(:send,
                    s(:const, nil, :HISTORY), :delete_at,
                    s(:int, 0))),
                s(:send, nil, :assert_external_string_equal,
                  s(:send,
                    s(:lvar, :lines), :[],
                    s(:int, 4)),
                  s(:send,
                    s(:const, nil, :HISTORY), :delete_at,
                    s(:int, 3))),
                s(:send, nil, :assert_external_string_equal,
                  s(:send,
                    s(:lvar, :lines), :[],
                    s(:int, 1)),
                  s(:send,
                    s(:const, nil, :HISTORY), :delete_at,
                    s(:int, 0))),
                s(:send, nil, :assert_external_string_equal,
                  s(:send,
                    s(:lvar, :lines), :[],
                    s(:int, 3)),
                  s(:send,
                    s(:const, nil, :HISTORY), :delete_at,
                    s(:int, 1))),
                s(:send, nil, :assert_external_string_equal,
                  s(:send,
                    s(:lvar, :lines), :[],
                    s(:int, 2)),
                  s(:send,
                    s(:const, nil, :HISTORY), :delete_at,
                    s(:int, 0))),
                s(:send, nil, :assert,
                  s(:send,
                    s(:const, nil, :HISTORY), :empty?))),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NotImplementedError)), nil, nil), nil))),
        s(:def, :test_delete_at__out_of_range,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :IndexError),
                s(:const, nil, :NotImplementedError),
                s(:str, "index=<0>")),
              s(:args),
              s(:send,
                s(:const, nil, :HISTORY), :delete_at,
                s(:int, 0))),
            s(:send, nil, :push_history,
              s(:int, 5)),
            s(:lvasgn, :invalid_indexes,
              s(:array,
                s(:int, 5),
                s(:int, 6),
                s(:int, 100),
                s(:int, -6),
                s(:int, -7),
                s(:int, -100))),
            s(:block,
              s(:send,
                s(:lvar, :invalid_indexes), :each),
              s(:args,
                s(:arg, :i)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :IndexError),
                  s(:const, nil, :NotImplementedError),
                  s(:dstr,
                    s(:str, "index=<"),
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, ">"))),
                s(:args),
                s(:send,
                  s(:const, nil, :HISTORY), :delete_at,
                  s(:lvar, :i)))),
            s(:lvasgn, :invalid_indexes,
              s(:array,
                s(:int, 100000000000000000000),
                s(:int, -100000000000000000000))),
            s(:block,
              s(:send,
                s(:lvar, :invalid_indexes), :each),
              s(:args,
                s(:arg, :i)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :RangeError),
                  s(:const, nil, :NotImplementedError),
                  s(:dstr,
                    s(:str, "index=<"),
                    s(:begin,
                      s(:lvar, :i)),
                    s(:str, ">"))),
                s(:args),
                s(:send,
                  s(:const, nil, :HISTORY), :delete_at,
                  s(:lvar, :i)))))),
        s(:send, nil, :private),
        s(:def, :push_history,
          s(:args,
            s(:arg, :num)),
          s(:begin,
            s(:lvasgn, :lines,
              s(:array)),
            s(:block,
              s(:send,
                s(:lvar, :num), :times),
              s(:args,
                s(:arg, :i)),
              s(:begin,
                s(:lvasgn, :s,
                  s(:str, "a")),
                s(:block,
                  s(:send,
                    s(:lvar, :i), :times),
                  s(:args),
                  s(:lvasgn, :s,
                    s(:send,
                      s(:lvar, :s), :succ))),
                s(:send,
                  s(:lvar, :lines), :push,
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:lvar, :i), :+,
                        s(:int, 1))),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :s)))))),
            s(:send,
              s(:const, nil, :HISTORY), :push,
              s(:splat,
                s(:lvar, :lines))),
            s(:return,
              s(:lvar, :lines)))),
        s(:def, :assert_external_string_equal,
          s(:args,
            s(:arg, :expected),
            s(:arg, :actual)),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:lvar, :expected),
              s(:lvar, :actual)),
            s(:send, nil, :assert_equal,
              s(:send, nil, :get_default_internal_encoding),
              s(:send,
                s(:lvar, :actual), :encoding)))),
        s(:def, :get_default_internal_encoding,
          s(:args),
          s(:return,
            s(:or,
              s(:send,
                s(:const, nil, :Encoding), :default_internal),
              s(:send,
                s(:const, nil, :Encoding), :find,
                s(:str, "locale"))))))), nil))
