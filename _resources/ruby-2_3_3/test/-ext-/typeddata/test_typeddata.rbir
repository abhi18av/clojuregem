s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/typeddata/typeddata")),
  s(:class,
    s(:const, nil, :Test_TypedData),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:def, :test_wrong_argtype,
      s(:args),
      s(:begin,
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :TypeError),
            s(:str, "wrong argument type false (expected typed_data)")),
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :TypedData), :check,
            s(:false))),
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :TypeError),
            s(:str, "wrong argument type true (expected typed_data)")),
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :TypedData), :check,
            s(:true))),
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :TypeError),
            s(:str, "wrong argument type Symbol (expected typed_data)")),
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :TypedData), :check,
            s(:sym, :e))),
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :TypeError),
            s(:str, "wrong argument type Fixnum (expected typed_data)")),
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :TypedData), :check,
            s(:int, 0))),
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :TypeError),
            s(:str, "wrong argument type String (expected typed_data)")),
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :TypedData), :check,
            s(:str, "a"))),
        s(:lvasgn, :obj,
          s(:send,
            s(:send, nil, :eval,
              s(:str, "class CðŸ—¿; self; end")), :new)),
        s(:block,
          s(:send, nil, :assert_raise_with_message,
            s(:const, nil, :TypeError),
            s(:regexp,
              s(:str, "C\\u{1f5ff}"),
              s(:regopt))),
          s(:args),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :TypedData), :check,
            s(:lvar, :obj)))))))
