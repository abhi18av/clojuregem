s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/num2int/num2int")),
  s(:class,
    s(:const, nil, :TestNum2int),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :SHRT_MIN,
        s(:int, -32768)),
      s(:casgn, nil, :SHRT_MAX,
        s(:int, 32767)),
      s(:casgn, nil, :USHRT_MAX,
        s(:int, 65535)),
      s(:casgn, nil, :INT_MIN,
        s(:int, -2147483648)),
      s(:casgn, nil, :INT_MAX,
        s(:int, 2147483647)),
      s(:casgn, nil, :UINT_MAX,
        s(:int, 4294967295)),
      s(:case,
        s(:send,
          s(:send,
            s(:array,
              s(:int, 0)), :pack,
            s(:str, "L!")), :size),
        s(:when,
          s(:int, 4),
          s(:begin,
            s(:casgn, nil, :LONG_MAX,
              s(:int, 2147483647)),
            s(:casgn, nil, :LONG_MIN,
              s(:int, -2147483648)),
            s(:casgn, nil, :ULONG_MAX,
              s(:int, 4294967295)))),
        s(:when,
          s(:int, 8),
          s(:begin,
            s(:casgn, nil, :LONG_MAX,
              s(:int, 9223372036854775807)),
            s(:casgn, nil, :LONG_MIN,
              s(:int, -9223372036854775808)),
            s(:casgn, nil, :ULONG_MAX,
              s(:int, 18446744073709551615)))), nil),
      s(:casgn, nil, :LLONG_MAX,
        s(:int, 9223372036854775807)),
      s(:casgn, nil, :LLONG_MIN,
        s(:int, -9223372036854775808)),
      s(:casgn, nil, :ULLONG_MAX,
        s(:int, 18446744073709551615)),
      s(:casgn, nil, :FIXNUM_MAX,
        s(:send,
          s(:const, nil, :LONG_MAX), :/,
          s(:int, 2))),
      s(:casgn, nil, :FIXNUM_MIN,
        s(:send,
          s(:const, nil, :LONG_MIN), :/,
          s(:int, 2))),
      s(:def, :fix2big,
        s(:args,
          s(:arg, :n)),
        s(:send,
          s(:send,
            s(:int, 10000000000000000000000000000), :coerce,
            s(:lvar, :n)), :[],
          s(:int, 0))),
      s(:def, :assert_num2i_success_internal,
        s(:args,
          s(:arg, :exp),
          s(:arg, :func),
          s(:arg, :arg)),
        s(:begin,
          s(:lvasgn, :mesg,
            s(:dstr,
              s(:begin,
                s(:lvar, :func)),
              s(:str, "("),
              s(:begin,
                s(:send,
                  s(:lvar, :arg), :inspect)),
              s(:str, ")"))),
          s(:lvasgn, :out,
            s(:nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:lvar, :mesg)),
            s(:args),
            s(:lvasgn, :out,
              s(:send,
                s(:const, nil, :Num2int), :send,
                s(:lvar, :func),
                s(:lvar, :arg)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :out),
            s(:lvar, :mesg)))),
      s(:def, :assert_num2i_success,
        s(:args,
          s(:arg, :type),
          s(:arg, :num),
          s(:optarg, :result,
            s(:lvar, :num))),
        s(:begin,
          s(:lvasgn, :func,
            s(:send,
              s(:dstr,
                s(:str, "NUM2"),
                s(:begin,
                  s(:lvar, :type))), :upcase)),
          s(:send, nil, :assert_num2i_success_internal,
            s(:send,
              s(:lvar, :result), :to_s),
            s(:lvar, :func),
            s(:lvar, :num)),
          s(:send, nil, :assert_num2i_success_internal,
            s(:send,
              s(:lvar, :result), :to_s),
            s(:lvar, :func),
            s(:send, nil, :fix2big,
              s(:lvar, :num))),
          s(:send, nil, :assert_num2i_success_internal,
            s(:send,
              s(:lvar, :result), :to_s),
            s(:lvar, :func),
            s(:send, nil, :Rational,
              s(:lvar, :num),
              s(:int, 1))),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :num), :to_f), :to_i), :==,
              s(:lvar, :num)),
            s(:send, nil, :assert_num2i_success_internal,
              s(:send,
                s(:lvar, :result), :to_s),
              s(:lvar, :func),
              s(:send,
                s(:lvar, :num), :to_f)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:begin,
                  s(:lvasgn, :arg,
                    s(:send,
                      s(:send,
                        s(:lvar, :num), :to_f), :+,
                      s(:float, 0.5)))), :!=,
                s(:send,
                  s(:lvar, :num), :to_f)),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_success_internal,
              s(:send,
                s(:lvar, :result), :to_s),
              s(:lvar, :func),
              s(:lvar, :arg)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:begin,
                  s(:lvasgn, :arg,
                    s(:send,
                      s(:send,
                        s(:lvar, :num), :to_f), :-,
                      s(:float, 0.5)))), :!=,
                s(:send,
                  s(:lvar, :num), :to_f)),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_success_internal,
              s(:send,
                s(:lvar, :result), :to_s),
              s(:lvar, :func),
              s(:lvar, :arg)), nil),
          s(:if,
            s(:and,
              s(:begin,
                s(:lvasgn, :arg,
                  s(:send,
                    s(:lvar, :num), :+,
                    s(:send, nil, :Rational,
                      s(:int, 1),
                      s(:int, 2))))),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_success_internal,
              s(:send,
                s(:lvar, :result), :to_s),
              s(:lvar, :func),
              s(:lvar, :arg)), nil),
          s(:if,
            s(:and,
              s(:begin,
                s(:lvasgn, :arg,
                  s(:send,
                    s(:lvar, :num), :-,
                    s(:send, nil, :Rational,
                      s(:int, 1),
                      s(:int, 2))))),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_success_internal,
              s(:send,
                s(:lvar, :result), :to_s),
              s(:lvar, :func),
              s(:lvar, :arg)), nil))),
      s(:def, :assert_num2i_error_internal,
        s(:args,
          s(:arg, :func),
          s(:arg, :arg)),
        s(:block,
          s(:send, nil, :assert_raise,
            s(:const, nil, :RangeError),
            s(:dstr,
              s(:begin,
                s(:lvar, :func)),
              s(:str, "("),
              s(:begin,
                s(:send,
                  s(:lvar, :arg), :inspect)),
              s(:str, ")"))),
          s(:args),
          s(:send,
            s(:const, nil, :Num2int), :send,
            s(:lvar, :func),
            s(:lvar, :arg)))),
      s(:def, :assert_num2i_error,
        s(:args,
          s(:arg, :type),
          s(:arg, :num)),
        s(:begin,
          s(:lvasgn, :func,
            s(:send,
              s(:dstr,
                s(:str, "NUM2"),
                s(:begin,
                  s(:lvar, :type))), :upcase)),
          s(:send, nil, :assert_num2i_error_internal,
            s(:lvar, :func),
            s(:lvar, :num)),
          s(:send, nil, :assert_num2i_error_internal,
            s(:lvar, :func),
            s(:send, nil, :fix2big,
              s(:lvar, :num))),
          s(:send, nil, :assert_num2i_error_internal,
            s(:lvar, :func),
            s(:send, nil, :Rational,
              s(:lvar, :num),
              s(:int, 1))),
          s(:if,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :num), :to_f), :to_i), :==,
              s(:lvar, :num)),
            s(:send, nil, :assert_num2i_error_internal,
              s(:lvar, :func),
              s(:send,
                s(:lvar, :num), :to_f)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:begin,
                  s(:lvasgn, :arg,
                    s(:send,
                      s(:send,
                        s(:lvar, :num), :to_f), :+,
                      s(:float, 0.5)))), :!=,
                s(:send,
                  s(:lvar, :num), :to_f)),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_error_internal,
              s(:lvar, :func),
              s(:lvar, :arg)), nil),
          s(:if,
            s(:and,
              s(:send,
                s(:begin,
                  s(:lvasgn, :arg,
                    s(:send,
                      s(:send,
                        s(:lvar, :num), :to_f), :-,
                      s(:float, 0.5)))), :!=,
                s(:send,
                  s(:lvar, :num), :to_f)),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_error_internal,
              s(:lvar, :func),
              s(:lvar, :arg)), nil),
          s(:if,
            s(:and,
              s(:begin,
                s(:lvasgn, :arg,
                  s(:send,
                    s(:lvar, :num), :+,
                    s(:send, nil, :Rational,
                      s(:int, 1),
                      s(:int, 2))))),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_error_internal,
              s(:lvar, :func),
              s(:lvar, :arg)), nil),
          s(:if,
            s(:and,
              s(:begin,
                s(:lvasgn, :arg,
                  s(:send,
                    s(:lvar, :num), :-,
                    s(:send, nil, :Rational,
                      s(:int, 1),
                      s(:int, 2))))),
              s(:send,
                s(:send,
                  s(:lvar, :arg), :to_int), :==,
                s(:lvar, :num))),
            s(:send, nil, :assert_num2i_error_internal,
              s(:lvar, :func),
              s(:lvar, :arg)), nil))),
      s(:def, :assert_fix2i_success_internal,
        s(:args,
          s(:arg, :exp),
          s(:arg, :func),
          s(:arg, :arg)),
        s(:begin,
          s(:lvasgn, :mesg,
            s(:dstr,
              s(:begin,
                s(:lvar, :func)),
              s(:str, "("),
              s(:begin,
                s(:send,
                  s(:lvar, :arg), :inspect)),
              s(:str, ")"))),
          s(:lvasgn, :out,
            s(:nil)),
          s(:block,
            s(:send, nil, :assert_nothing_raised,
              s(:lvar, :mesg)),
            s(:args),
            s(:lvasgn, :out,
              s(:send,
                s(:const, nil, :Num2int), :send,
                s(:lvar, :func),
                s(:lvar, :arg)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :exp),
            s(:lvar, :out),
            s(:lvar, :mesg)))),
      s(:def, :assert_fix2i_success,
        s(:args,
          s(:arg, :type),
          s(:arg, :num),
          s(:optarg, :result,
            s(:lvar, :num))),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :num), :kind_of?,
                s(:const, nil, :Fixnum)), :!),
            s(:return), nil),
          s(:lvasgn, :func,
            s(:send,
              s(:dstr,
                s(:str, "FIX2"),
                s(:begin,
                  s(:lvar, :type))), :upcase)),
          s(:send, nil, :assert_fix2i_success_internal,
            s(:send,
              s(:lvar, :result), :to_s),
            s(:lvar, :func),
            s(:lvar, :num)))),
      s(:def, :assert_fix2i_error_internal,
        s(:args,
          s(:arg, :func),
          s(:arg, :arg)),
        s(:block,
          s(:send, nil, :assert_raise,
            s(:const, nil, :RangeError),
            s(:dstr,
              s(:begin,
                s(:lvar, :func)),
              s(:str, "("),
              s(:begin,
                s(:send,
                  s(:lvar, :arg), :inspect)),
              s(:str, ")"))),
          s(:args),
          s(:send,
            s(:const, nil, :Num2int), :send,
            s(:lvar, :func),
            s(:lvar, :arg)))),
      s(:def, :assert_fix2i_error,
        s(:args,
          s(:arg, :type),
          s(:arg, :num)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :num), :kind_of?,
                s(:const, nil, :Fixnum)), :!),
            s(:return), nil),
          s(:lvasgn, :func,
            s(:send,
              s(:dstr,
                s(:str, "FIX2"),
                s(:begin,
                  s(:lvar, :type))), :upcase)),
          s(:send, nil, :assert_num2i_error_internal,
            s(:lvar, :func),
            s(:lvar, :num)))),
      s(:def, :test_num2short,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_num2i_success,
            s(:sym, :short),
            s(:const, nil, :SHRT_MIN)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :SHRT_MIN), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :short),
            s(:const, nil, :SHRT_MAX)),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :SHRT_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :SHRT_MAX), :+,
              s(:int, 1))))),
      s(:def, :test_num2ushort,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ushort),
            s(:int, 0)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ushort),
            s(:const, nil, :USHRT_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ushort),
            s(:int, -1),
            s(:const, nil, :USHRT_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ushort),
            s(:const, nil, :SHRT_MIN),
            s(:send,
              s(:const, nil, :SHRT_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ushort),
            s(:send,
              s(:const, nil, :SHRT_MIN), :+,
              s(:int, 1)),
            s(:send,
              s(:const, nil, :SHRT_MAX), :+,
              s(:int, 2))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :ushort),
            s(:send,
              s(:const, nil, :SHRT_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :ushort),
            s(:send,
              s(:const, nil, :USHRT_MAX), :+,
              s(:int, 1))))),
      s(:def, :test_num2int,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_num2i_success,
            s(:sym, :int),
            s(:const, nil, :INT_MIN)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :int),
            s(:send,
              s(:const, nil, :INT_MIN), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :int),
            s(:const, nil, :INT_MAX)),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :int),
            s(:send,
              s(:const, nil, :INT_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :int),
            s(:send,
              s(:const, nil, :INT_MAX), :+,
              s(:int, 1))))),
      s(:def, :test_num2uint,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_num2i_success,
            s(:sym, :uint),
            s(:int, 0)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :uint),
            s(:const, nil, :UINT_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :uint),
            s(:int, -1),
            s(:const, nil, :UINT_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :uint),
            s(:const, nil, :INT_MIN),
            s(:send,
              s(:const, nil, :INT_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :uint),
            s(:send,
              s(:const, nil, :INT_MIN), :+,
              s(:int, 1)),
            s(:send,
              s(:const, nil, :INT_MAX), :+,
              s(:int, 2))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :uint),
            s(:send,
              s(:const, nil, :INT_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :uint),
            s(:send,
              s(:const, nil, :UINT_MAX), :+,
              s(:int, 1))))),
      s(:def, :test_num2long,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:const, nil, :LONG_MIN)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :LONG_MIN), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:const, nil, :LONG_MAX)),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :LONG_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :LONG_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:const, nil, :FIXNUM_MIN)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:const, nil, :FIXNUM_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :FIXNUM_MAX), :+,
              s(:int, 1))))),
      s(:def, :test_num2ulong,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:int, 0)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:const, nil, :ULONG_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:int, -1),
            s(:const, nil, :ULONG_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:const, nil, :LONG_MIN),
            s(:send,
              s(:const, nil, :LONG_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:send,
              s(:const, nil, :LONG_MIN), :+,
              s(:int, 1)),
            s(:send,
              s(:const, nil, :LONG_MAX), :+,
              s(:int, 2))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :ulong),
            s(:send,
              s(:const, nil, :LONG_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_error,
            s(:sym, :ulong),
            s(:send,
              s(:const, nil, :ULONG_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:const, nil, :FIXNUM_MIN),
            s(:send,
              s(:const, nil, :ULONG_MAX), :-,
              s(:const, nil, :FIXNUM_MAX))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :+,
              s(:int, 1)),
            s(:send,
              s(:send,
                s(:const, nil, :ULONG_MAX), :-,
                s(:const, nil, :FIXNUM_MAX)), :+,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :-,
              s(:int, 1)),
            s(:send,
              s(:send,
                s(:const, nil, :ULONG_MAX), :-,
                s(:const, nil, :FIXNUM_MAX)), :-,
              s(:int, 1))),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:const, nil, :FIXNUM_MAX),
            s(:const, nil, :FIXNUM_MAX)),
          s(:send, nil, :assert_num2i_success,
            s(:sym, :ulong),
            s(:send,
              s(:const, nil, :FIXNUM_MAX), :+,
              s(:int, 1)),
            s(:send,
              s(:const, nil, :FIXNUM_MAX), :+,
              s(:int, 1))))),
      s(:if,
        s(:defined?,
          s(:send,
            s(:const, nil, :Num2int), :NUM2LL)),
        s(:def, :test_num2ll,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:const, nil, :LLONG_MIN)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:send,
                s(:const, nil, :LLONG_MIN), :+,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:const, nil, :LLONG_MAX)),
            s(:send, nil, :assert_num2i_error,
              s(:sym, :ll),
              s(:send,
                s(:const, nil, :LLONG_MIN), :-,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_error,
              s(:sym, :ll),
              s(:send,
                s(:const, nil, :LLONG_MAX), :+,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:const, nil, :FIXNUM_MIN)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :+,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :-,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:const, nil, :FIXNUM_MAX)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ll),
              s(:send,
                s(:const, nil, :FIXNUM_MAX), :+,
                s(:int, 1))))), nil),
      s(:if,
        s(:defined?,
          s(:send,
            s(:const, nil, :Num2int), :NUM2ULL)),
        s(:def, :test_num2ull,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:int, 0)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:const, nil, :ULLONG_MAX)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:int, -1),
              s(:const, nil, :ULLONG_MAX)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:const, nil, :LLONG_MIN),
              s(:send,
                s(:const, nil, :LLONG_MAX), :+,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:send,
                s(:const, nil, :LLONG_MIN), :+,
                s(:int, 1)),
              s(:send,
                s(:const, nil, :LLONG_MAX), :+,
                s(:int, 2))),
            s(:send, nil, :assert_num2i_error,
              s(:sym, :ull),
              s(:send,
                s(:const, nil, :LLONG_MIN), :-,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_error,
              s(:sym, :ull),
              s(:send,
                s(:const, nil, :ULLONG_MAX), :+,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:const, nil, :FIXNUM_MIN),
              s(:send,
                s(:const, nil, :ULLONG_MAX), :-,
                s(:const, nil, :FIXNUM_MAX))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :+,
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:const, nil, :ULLONG_MAX), :-,
                  s(:const, nil, :FIXNUM_MAX)), :+,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :-,
                s(:int, 1)),
              s(:send,
                s(:send,
                  s(:const, nil, :ULLONG_MAX), :-,
                  s(:const, nil, :FIXNUM_MAX)), :-,
                s(:int, 1))),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:const, nil, :FIXNUM_MAX)),
            s(:send, nil, :assert_num2i_success,
              s(:sym, :ull),
              s(:send,
                s(:const, nil, :FIXNUM_MAX), :+,
                s(:int, 1))))), nil),
      s(:def, :test_fix2short,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :short),
            s(:int, 0)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :short),
            s(:const, nil, :SHRT_MAX)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :short),
            s(:const, nil, :SHRT_MIN)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :SHRT_MIN), :+,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :SHRT_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :SHRT_MIN), :-,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :short),
            s(:const, nil, :FIXNUM_MAX)),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :short),
            s(:const, nil, :FIXNUM_MIN)),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :short),
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :+,
              s(:int, 1))))),
      s(:def, :test_fix2int,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :int),
            s(:int, 0)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :int),
            s(:const, nil, :INT_MAX)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :int),
            s(:const, nil, :INT_MIN)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :int),
            s(:send,
              s(:const, nil, :INT_MIN), :+,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :int),
            s(:send,
              s(:const, nil, :INT_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :int),
            s(:send,
              s(:const, nil, :INT_MIN), :-,
              s(:int, 1))),
          s(:if,
            s(:send,
              s(:const, nil, :INT_MAX), :<,
              s(:const, nil, :FIXNUM_MAX)),
            s(:send, nil, :assert_fix2i_error,
              s(:sym, :int),
              s(:const, nil, :FIXNUM_MAX)), nil),
          s(:if,
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :<,
              s(:const, nil, :INT_MIN)),
            s(:send, nil, :assert_fix2i_error,
              s(:sym, :int),
              s(:const, nil, :FIXNUM_MIN)), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :+,
                s(:int, 1)), :<,
              s(:const, nil, :INT_MIN)),
            s(:send, nil, :assert_fix2i_error,
              s(:sym, :int),
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :+,
                s(:int, 1))), nil))),
      s(:def, :test_fix2uint,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :uint),
            s(:int, 0)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :uint),
            s(:const, nil, :UINT_MAX)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :uint),
            s(:const, nil, :INT_MAX)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :uint),
            s(:const, nil, :INT_MIN),
            s(:send,
              s(:const, nil, :INT_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :uint),
            s(:send,
              s(:const, nil, :INT_MIN), :+,
              s(:int, 1)),
            s(:send,
              s(:const, nil, :INT_MAX), :+,
              s(:int, 2))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :uint),
            s(:send,
              s(:const, nil, :UINT_MAX), :+,
              s(:int, 1))),
          s(:send, nil, :assert_fix2i_error,
            s(:sym, :uint),
            s(:send,
              s(:const, nil, :INT_MIN), :-,
              s(:int, 1))),
          s(:if,
            s(:send,
              s(:const, nil, :UINT_MAX), :<,
              s(:const, nil, :FIXNUM_MAX)),
            s(:send, nil, :assert_fix2i_error,
              s(:sym, :uint),
              s(:const, nil, :FIXNUM_MAX)), nil),
          s(:if,
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :<,
              s(:const, nil, :INT_MIN)),
            s(:send, nil, :assert_fix2i_error,
              s(:sym, :uint),
              s(:const, nil, :FIXNUM_MIN)), nil),
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :+,
                s(:int, 1)), :<,
              s(:const, nil, :INT_MIN)),
            s(:send, nil, :assert_fix2i_error,
              s(:sym, :uint),
              s(:send,
                s(:const, nil, :FIXNUM_MIN), :+,
                s(:int, 1))), nil))),
      s(:def, :test_fix2long,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :long),
            s(:int, 0)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :long),
            s(:const, nil, :FIXNUM_MAX)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :long),
            s(:const, nil, :FIXNUM_MIN)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :long),
            s(:send,
              s(:const, nil, :FIXNUM_MIN), :+,
              s(:int, 1))))),
      s(:def, :test_fix2ulong,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :ulong),
            s(:int, 0)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :ulong),
            s(:const, nil, :FIXNUM_MAX)),
          s(:send, nil, :assert_fix2i_success,
            s(:sym, :ulong),
            s(:int, -1),
            s(:const, nil, :ULONG_MAX)))))))
