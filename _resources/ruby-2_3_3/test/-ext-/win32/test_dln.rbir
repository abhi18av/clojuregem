s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:send, nil, :require,
    s(:str, "rbconfig")),
  s(:if,
    s(:match_with_lvasgn,
      s(:regexp,
        s(:str, "mswin|mingw"),
        s(:regopt)),
      s(:const, nil, :RUBY_PLATFORM)),
    s(:module,
      s(:const, nil, :Bug),
      s(:module,
        s(:const, nil, :Win32),
        s(:class,
          s(:const, nil, :TestDln),
          s(:const,
            s(:const,
              s(:const, nil, :Test), :Unit), :TestCase),
          s(:begin,
            s(:def, :test_check_imported,
              s(:args),
              s(:begin,
                s(:lvasgn, :bug,
                  s(:str, "[Bug #6303]")),
                s(:send, nil, :assert_in_out_err,
                  s(:array,
                    s(:str, "-r-test-/win32/dln"),
                    s(:str, "-eexit")),
                  s(:str, ""),
                  s(:array),
                  s(:array),
                  s(:lvar, :bug),
                  s(:hash,
                    s(:pair,
                      s(:sym, :timeout),
                      s(:int, 10)))))),
            s(:def, :test_nonascii_load,
              s(:args),
              s(:ensure,
                s(:begin,
                  s(:lvasgn, :bug9699,
                    s(:str, "[ruby-core:61845] [Bug #9699]")),
                  s(:lvasgn, :so,
                    s(:send,
                      s(:str, "-test-/dln/empty."), :+,
                      s(:send,
                        s(:const,
                          s(:const, nil, :RbConfig), :CONFIG), :[],
                        s(:str, "DLEXT")))),
                  s(:lvasgn, :so,
                    s(:block,
                      s(:send,
                        s(:gvar, :$:), :find),
                      s(:args,
                        s(:arg, :d)),
                      s(:begin,
                        s(:lvasgn, :d,
                          s(:send,
                            s(:const,
                              s(:cbase), :File), :join,
                            s(:lvar, :d),
                            s(:lvar, :so))),
                        s(:if,
                          s(:send,
                            s(:const,
                              s(:cbase), :File), :exist?,
                            s(:lvar, :d)),
                          s(:break,
                            s(:lvar, :d)), nil)))),
                  s(:send, nil, :assert_not_nil,
                    s(:lvar, :so)),
                  s(:send,
                    s(:const, nil, :Dir), :mkdir,
                    s(:lvasgn, :dir,
                      s(:send,
                        s(:const,
                          s(:cbase), :File), :join,
                        s(:lvasgn, :testdir,
                          s(:send,
                            s(:const, nil, :Dir), :mktmpdir,
                            s(:str, "test"))),
                        s(:str, "テスト")))),
                  s(:send,
                    s(:const,
                      s(:cbase), :File), :copy_stream,
                    s(:lvar, :so),
                    s(:send,
                      s(:const,
                        s(:cbase), :File), :join,
                      s(:lvar, :dir),
                      s(:send,
                        s(:const,
                          s(:cbase), :File), :basename,
                        s(:lvar, :so)))),
                  s(:send, nil, :assert_separately,
                    s(:array,
                      s(:str, "-"),
                      s(:lvar, :bug9699),
                      s(:lvar, :testdir),
                      s(:send,
                        s(:const,
                          s(:cbase), :File), :basename,
                        s(:lvar, :so))),
                    s(:dstr,
                      s(:str, "          bug, dir, so = *ARGV\n"),
                      s(:str, "          assert_nothing_raised(LoadError, bug) do\n"),
                      s(:str, "            require ::File.join(dir, \"\\u{30c6 30b9 30c8}\", so)\n"),
                      s(:str, "          end\n")))),
                s(:begin,
                  s(:rescue,
                    s(:send,
                      s(:const,
                        s(:cbase), :File), :unlink,
                      s(:send,
                        s(:const,
                          s(:cbase), :File), :join,
                        s(:lvar, :dir),
                        s(:send,
                          s(:const,
                            s(:cbase), :File), :basename,
                          s(:lvar, :so)))),
                    s(:resbody, nil, nil,
                      s(:nil)), nil),
                  s(:rescue,
                    s(:send,
                      s(:const, nil, :Dir), :rmdir,
                      s(:lvar, :dir)),
                    s(:resbody, nil, nil,
                      s(:nil)), nil),
                  s(:rescue,
                    s(:send,
                      s(:const, nil, :Dir), :rmdir,
                      s(:lvar, :testdir)),
                    s(:resbody, nil, nil,
                      s(:nil)), nil)))))))), nil))
