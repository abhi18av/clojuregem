s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:class,
    s(:const, nil, :TestWaitForSingleFD),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:send, nil, :require,
        s(:str, "-test-/wait_for_single_fd/wait_for_single_fd")),
      s(:def, :with_pipe,
        s(:args),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :r),
              s(:lvasgn, :w)),
            s(:send,
              s(:const, nil, :IO), :pipe)),
          s(:kwbegin,
            s(:ensure,
              s(:yield,
                s(:lvar, :r),
                s(:lvar, :w)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :r), :closed?), nil,
                  s(:send,
                    s(:lvar, :r), :close)),
                s(:if,
                  s(:send,
                    s(:lvar, :w), :closed?), nil,
                  s(:send,
                    s(:lvar, :w), :close))))))),
      s(:def, :test_wait_for_valid_fd,
        s(:args),
        s(:block,
          s(:send, nil, :with_pipe),
          s(:args,
            s(:arg, :r),
            s(:arg, :w)),
          s(:begin,
            s(:lvasgn, :rc,
              s(:send,
                s(:const, nil, :IO), :wait_for_single_fd,
                s(:send,
                  s(:lvar, :w), :fileno),
                s(:const, nil, :RB_WAITFD_OUT),
                s(:nil))),
            s(:send, nil, :assert_equal,
              s(:const, nil, :RB_WAITFD_OUT),
              s(:lvar, :rc))))),
      s(:def, :test_wait_for_invalid_fd,
        s(:args),
        s(:begin,
          s(:if,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "freebsd[1-8]"),
                s(:regopt)),
              s(:const, nil, :RUBY_PLATFORM)),
            s(:send, nil, :skip), nil),
          s(:block,
            s(:send, nil, :with_pipe),
            s(:args,
              s(:arg, :r),
              s(:arg, :w)),
            s(:begin,
              s(:lvasgn, :wfd,
                s(:send,
                  s(:lvar, :w), :fileno)),
              s(:send,
                s(:lvar, :w), :close),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const,
                    s(:const, nil, :Errno), :EBADF)),
                s(:args),
                s(:send,
                  s(:const, nil, :IO), :wait_for_single_fd,
                  s(:lvar, :wfd),
                  s(:const, nil, :RB_WAITFD_OUT),
                  s(:nil))))))),
      s(:def, :test_wait_for_closed_pipe,
        s(:args),
        s(:block,
          s(:send, nil, :with_pipe),
          s(:args,
            s(:arg, :r),
            s(:arg, :w)),
          s(:begin,
            s(:send,
              s(:lvar, :w), :close),
            s(:lvasgn, :rc,
              s(:send,
                s(:const, nil, :IO), :wait_for_single_fd,
                s(:send,
                  s(:lvar, :r), :fileno),
                s(:const, nil, :RB_WAITFD_IN),
                s(:nil))),
            s(:send, nil, :assert_equal,
              s(:const, nil, :RB_WAITFD_IN),
              s(:lvar, :rc))))))))
