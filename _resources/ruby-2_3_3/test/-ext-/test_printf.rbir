s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/printf")),
  s(:send, nil, :require_relative,
    s(:str, "../ruby/allpairs")),
  s(:class,
    s(:const, nil, :Test_SPrintf),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :to_s,
        s(:args),
        s(:dstr,
          s(:begin,
            s(:send,
              s(:self), :class)),
          s(:str, ":"),
          s(:begin,
            s(:send, nil, :object_id)))),
      s(:def, :inspect,
        s(:args),
        s(:dstr,
          s(:str, "<"),
          s(:begin,
            s(:send,
              s(:self), :class)),
          s(:str, ":"),
          s(:begin,
            s(:send, nil, :object_id)),
          s(:str, ">"))),
      s(:def, :test_to_str,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:dstr,
            s(:str, "<"),
            s(:begin,
              s(:send,
                s(:self), :class)),
            s(:str, ":"),
            s(:begin,
              s(:send, nil, :object_id)),
            s(:str, ">")),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :Printf), :s,
            s(:self)))),
      s(:def, :test_inspect,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:dstr,
            s(:str, "{<"),
            s(:begin,
              s(:send,
                s(:self), :class)),
            s(:str, ":"),
            s(:begin,
              s(:send, nil, :object_id)),
            s(:str, ">}")),
          s(:send,
            s(:const,
              s(:const, nil, :Bug), :Printf), :v,
            s(:self)))),
      s(:def, :test_quote,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "[\"\\n\"]"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Printf), :q,
              s(:str, "\n"))),
          s(:send, nil, :assert_equal,
            s(:str, "[aaa]"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Printf), :q,
              s(:str, "aaa"))),
          s(:send, nil, :assert_equal,
            s(:str, "[a a]"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Printf), :q,
              s(:str, "a a"))))),
      s(:def, :test_encoding,
        s(:args),
        s(:begin,
          s(:defs,
            s(:self), :to_s,
            s(:args),
            s(:str, "あいうえお")),
          s(:send, nil, :assert_equal,
            s(:str, "<あいうえお>"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Printf), :s,
              s(:self))))),
      s(:def, :test_taint,
        s(:args),
        s(:begin,
          s(:lvasgn, :obj,
            s(:send,
              s(:send,
                s(:const, nil, :Object), :new), :taint)),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:sym, :to_s),
                s(:true)),
              s(:pair,
                s(:sym, :inspect),
                s(:true))),
            s(:hash,
              s(:pair,
                s(:sym, :to_s),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Bug), :Printf), :s,
                    s(:lvar, :obj)), :tainted?)),
              s(:pair,
                s(:sym, :inspect),
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Bug), :Printf), :v,
                    s(:lvar, :obj)), :tainted?)))))),
      s(:casgn, nil, :VS,
        s(:array,
          s(:int, -18446744073709551618),
          s(:int, -18446744073709551617),
          s(:int, -18446744073709551616),
          s(:int, -18446744073709551615),
          s(:int, -4611686018427387906),
          s(:int, -4611686018427387905),
          s(:int, -4611686018427387904),
          s(:int, -4611686018427387903),
          s(:int, -4294967298),
          s(:int, -4294967297),
          s(:int, -4294967296),
          s(:int, -4294967295),
          s(:int, -2147483650),
          s(:int, -2147483649),
          s(:int, -2147483648),
          s(:int, -2147483647),
          s(:int, -1073741826),
          s(:int, -1073741825),
          s(:int, -1073741824),
          s(:int, -1073741823),
          s(:int, -3),
          s(:int, -2),
          s(:int, -1),
          s(:int, 0),
          s(:int, 1),
          s(:int, 2),
          s(:int, 3),
          s(:int, 1073741822),
          s(:int, 1073741823),
          s(:int, 1073741824),
          s(:int, 1073741825),
          s(:int, 2147483646),
          s(:int, 2147483647),
          s(:int, 2147483648),
          s(:int, 2147483649),
          s(:int, 4294967294),
          s(:int, 4294967295),
          s(:int, 4294967296),
          s(:int, 4294967297),
          s(:int, 4611686018427387902),
          s(:int, 4611686018427387903),
          s(:int, 4611686018427387904),
          s(:int, 4611686018427387905),
          s(:int, 18446744073709551614),
          s(:int, 18446744073709551615),
          s(:int, 18446744073709551616),
          s(:int, 18446744073709551617))),
      s(:send,
        s(:const, nil, :VS), :reverse!),
      s(:casgn, nil, :FLAGS,
        s(:array,
          s(:array,
            s(:nil),
            s(:str, " ")),
          s(:array,
            s(:nil),
            s(:str, "#")),
          s(:array,
            s(:nil),
            s(:str, "+")),
          s(:array,
            s(:nil),
            s(:str, "-")),
          s(:array,
            s(:nil),
            s(:str, "0")))),
      s(:defs,
        s(:self), :assertions_format_integer,
        s(:args,
          s(:arg, :format),
          s(:arg, :type),
          s(:kwrestarg, :opts)),
        s(:block,
          s(:send, nil, :proc),
          s(:args),
          s(:block,
            s(:send,
              s(:const, nil, :VS), :each),
            s(:args,
              s(:arg, :v)),
            s(:kwbegin,
              s(:rescue,
                s(:lvasgn, :r,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Bug), :Printf), :call,
                    s(:lvar, :type),
                    s(:lvar, :v),
                    s(:hash,
                      s(:kwsplat,
                        s(:lvar, :opts))))),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :RangeError)), nil, nil),
                s(:begin,
                  s(:lvasgn, :e,
                    s(:send, nil, :sprintf,
                      s(:lvar, :format),
                      s(:lvar, :v))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:lvar, :e),
                      s(:lvar, :format)),
                    s(:lvar, :r),
                    s(:dstr,
                      s(:str, "rb_sprintf("),
                      s(:begin,
                        s(:send,
                          s(:lvar, :format), :dump)),
                      s(:str, ", "),
                      s(:begin,
                        s(:lvar, :v)),
                      s(:str, ")"))))))))),
      s(:block,
        s(:send,
          s(:const, nil, :AllPairs), :each,
          s(:array,
            s(:str, "d")),
          s(:array,
            s(:nil),
            s(:int, 0),
            s(:int, 5),
            s(:int, 20)),
          s(:array,
            s(:nil),
            s(:true),
            s(:int, 0)),
          s(:splat,
            s(:const, nil, :FLAGS))),
        s(:args,
          s(:arg, :type),
          s(:arg, :width),
          s(:arg, :prec),
          s(:arg, :sp),
          s(:arg, :hs),
          s(:arg, :pl),
          s(:arg, :mi),
          s(:arg, :zr)),
        s(:begin,
          s(:if,
            s(:lvar, :prec),
            s(:lvasgn, :precision,
              s(:dstr,
                s(:str, "."),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :prec), :==,
                      s(:true)), nil,
                    s(:lvar, :prec))))), nil),
          s(:lvasgn, :format,
            s(:dstr,
              s(:str, "%"),
              s(:begin,
                s(:lvar, :sp)),
              s(:begin,
                s(:lvar, :hs)),
              s(:begin,
                s(:lvar, :pl)),
              s(:begin,
                s(:lvar, :mi)),
              s(:begin,
                s(:lvar, :zr)),
              s(:begin,
                s(:lvar, :width)),
              s(:begin,
                s(:lvar, :precision)),
              s(:begin,
                s(:lvar, :type)))),
          s(:send, nil, :define_method,
            s(:dstr,
              s(:str, "test_format_integer("),
              s(:begin,
                s(:lvar, :format)),
              s(:str, ")")),
            s(:send, nil, :assertions_format_integer,
              s(:lvar, :format),
              s(:lvar, :type),
              s(:hash,
                s(:pair,
                  s(:sym, :space),
                  s(:lvar, :sp)),
                s(:pair,
                  s(:sym, :hash),
                  s(:lvar, :hs)),
                s(:pair,
                  s(:sym, :plus),
                  s(:lvar, :pl)),
                s(:pair,
                  s(:sym, :minus),
                  s(:lvar, :mi)),
                s(:pair,
                  s(:sym, :zero),
                  s(:lvar, :zr)),
                s(:pair,
                  s(:sym, :width),
                  s(:lvar, :width)),
                s(:pair,
                  s(:sym, :prec),
                  s(:lvar, :prec))))))),
      s(:def, :test_string_prec,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "a"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :Printf), :call,
                s(:str, "s"),
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :prec),
                    s(:int, 3)))), :[],
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:str, "  a"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :Printf), :call,
                s(:str, "s"),
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :width),
                    s(:int, 3)),
                  s(:pair,
                    s(:sym, :prec),
                    s(:int, 3)))), :[],
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:str, "a  "),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :Printf), :call,
                s(:str, "s"),
                s(:str, "a"),
                s(:hash,
                  s(:pair,
                    s(:sym, :minus),
                    s(:true)),
                  s(:pair,
                    s(:sym, :width),
                    s(:int, 3)),
                  s(:pair,
                    s(:sym, :prec),
                    s(:int, 3)))), :[],
              s(:int, 0))))))))
