s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/string")),
  s(:send, nil, :require,
    s(:str, "rbconfig/sizeof")),
  s(:class,
    s(:const, nil, :Test_StringModifyExpand),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_modify_expand_memory_leak,
        s(:args),
        s(:send, nil, :assert_no_memory_leak,
          s(:array,
            s(:str, "-r-test-/string")),
          s(:str, "      s=Bug::String.new\n"),
          s(:dstr,
            s(:str, "      size = $initial_size\n"),
            s(:str, "      10.times{s.modify_expand!(size)}\n"),
            s(:str, "      s.replace(\"\")\n")),
          s(:str, "rb_str_modify_expand()"),
          s(:hash,
            s(:pair,
              s(:sym, :limit),
              s(:float, 2.5))))),
      s(:def, :test_integer_overflow,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug12390,
            s(:str, "[ruby-core:75592] [Bug #12390]")),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :new)),
          s(:lvasgn, :long_max,
            s(:send,
              s(:begin,
                s(:send,
                  s(:int, 1), :<<,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:int, 8), :*,
                        s(:send,
                          s(:const,
                            s(:const, nil, :RbConfig), :SIZEOF), :[],
                          s(:str, "long"))), :-,
                      s(:int, 1))))), :-,
              s(:int, 1))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError),
              s(:lvar, :bug12390)),
            s(:args),
            s(:send,
              s(:lvar, :s), :modify_expand!,
              s(:lvar, :long_max))))))))
