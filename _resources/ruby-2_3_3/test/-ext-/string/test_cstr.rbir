s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/string")),
  s(:class,
    s(:const, nil, :Test_StringCStr),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :Bug4319,
        s(:str, "[ruby-dev:43094]")),
      s(:def, :test_embed,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :new,
              s(:str, "abcdef"))),
          s(:send,
            s(:lvar, :s), :set_len,
            s(:int, 3)),
          s(:send,
            s(:lvar, :s), :cstr_unterm,
            s(:str, "x")),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :s), :cstr_term),
            s(:const, nil, :Bug4319)))),
      s(:def, :test_long,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:str, "abcdef")), :*,
              s(:int, 100000))),
          s(:send,
            s(:lvar, :s), :cstr_unterm,
            s(:str, "x")),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:lvar, :s), :cstr_term),
            s(:const, nil, :Bug4319)))),
      s(:def, :test_frozen,
        s(:args),
        s(:begin,
          s(:lvasgn, :s0,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :new,
              s(:send,
                s(:str, "abcdefgh"), :*,
                s(:int, 8)))),
          s(:block,
            s(:send,
              s(:array,
                s(:int, 4),
                s(:send,
                  s(:send,
                    s(:int, 4), :*,
                    s(:int, 3)), :-,
                  s(:int, 1)),
                s(:send,
                  s(:send,
                    s(:int, 8), :*,
                    s(:int, 3)), :-,
                  s(:int, 1)),
                s(:int, 64)), :each),
            s(:args,
              s(:arg, :n)),
            s(:begin,
              s(:lvasgn, :s,
                s(:send,
                  s(:lvar, :s0), :[],
                  s(:int, 0),
                  s(:lvar, :n))),
              s(:send,
                s(:lvar, :s), :cstr_unterm,
                s(:str, "x")),
              s(:send,
                s(:lvar, :s), :freeze),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:send,
                  s(:lvar, :s), :cstr_term)),
              s(:block,
                s(:send,
                  s(:const, nil, :WCHARS), :each),
                s(:args,
                  s(:arg, :enc)),
                s(:begin,
                  s(:lvasgn, :s,
                    s(:send,
                      s(:lvar, :s0), :encode,
                      s(:lvar, :enc))),
                  s(:send,
                    s(:lvar, :s), :set_len,
                    s(:send,
                      s(:lvar, :n), :-,
                      s(:send,
                        s(:lvar, :n), :%,
                        s(:send,
                          s(:send,
                            s(:lvar, :s), :[],
                            s(:int, 0)), :bytesize)))),
                  s(:send,
                    s(:lvar, :s), :cstr_unterm,
                    s(:str, "x")),
                  s(:send,
                    s(:lvar, :s), :freeze),
                  s(:send, nil, :assert_equal,
                    s(:int, 0),
                    s(:send,
                      s(:lvar, :s), :cstr_term)))))))),
      s(:def, :test_rb_str_new_frozen_embed,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :cstr_noembed,
              s(:str, "rbconfig.rb"))),
          s(:lvasgn, :str,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :rb_str_new_frozen,
              s(:lvar, :str))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :cstr_embedded?,
              s(:lvar, :str))))),
      s(:casgn, nil, :WCHARS,
        s(:array,
          s(:const,
            s(:const, nil, :Encoding), :UTF_16BE),
          s(:const,
            s(:const, nil, :Encoding), :UTF_16LE),
          s(:const,
            s(:const, nil, :Encoding), :UTF_32BE),
          s(:const,
            s(:const, nil, :Encoding), :UTF_32LE))),
      s(:def, :test_wchar_embed,
        s(:args),
        s(:block,
          s(:send,
            s(:const, nil, :WCHARS), :each),
          s(:args,
            s(:arg, :enc)),
          s(:begin,
            s(:lvasgn, :s,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:send,
                  s(:str, "䀢a"), :encode,
                  s(:lvar, :enc)))),
            s(:send,
              s(:lvar, :s), :cstr_unterm,
              s(:str, "x")),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send,
                s(:lvar, :s), :cstr_term)),
            s(:send,
              s(:lvar, :s), :set_len,
              s(:send,
                s(:send,
                  s(:lvar, :s), :bytesize), :/,
                s(:int, 2))),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :s), :size)),
            s(:send,
              s(:lvar, :s), :cstr_unterm,
              s(:str, "x")),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:lvar, :s), :cstr_term))))),
      s(:def, :test_wchar_long,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:str, "䀢abcdef")),
          s(:lvasgn, :n,
            s(:int, 100)),
          s(:lvasgn, :len,
            s(:send,
              s(:send,
                s(:lvar, :str), :size), :*,
              s(:lvar, :n))),
          s(:block,
            s(:send,
              s(:const, nil, :WCHARS), :each),
            s(:args,
              s(:arg, :enc)),
            s(:begin,
              s(:lvasgn, :s,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Bug), :String), :new,
                    s(:send,
                      s(:lvar, :str), :encode,
                      s(:lvar, :enc))), :*,
                  s(:lvar, :n))),
              s(:send,
                s(:lvar, :s), :cstr_unterm,
                s(:str, "x")),
              s(:block,
                s(:send, nil, :assert_nothing_raised,
                  s(:const, nil, :ArgumentError),
                  s(:send,
                    s(:lvar, :enc), :name)),
                s(:args),
                s(:send,
                  s(:lvar, :s), :cstr_term)),
              s(:send,
                s(:lvar, :s), :set_len,
                s(:send,
                  s(:send,
                    s(:lvar, :s), :bytesize), :/,
                  s(:int, 2))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :len), :/,
                  s(:int, 2)),
                s(:send,
                  s(:lvar, :s), :size),
                s(:send,
                  s(:lvar, :enc), :name)),
              s(:send,
                s(:lvar, :s), :cstr_unterm,
                s(:str, "x")),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:send,
                  s(:lvar, :s), :cstr_term),
                s(:send,
                  s(:lvar, :enc), :name)))))),
      s(:def, :test_wchar_lstrip!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, " a")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :lstrip!))),
      s(:def, :test_wchar_rstrip!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "a ")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :rstrip!))),
      s(:def, :test_wchar_chop!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "a\n")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :chop!))),
      s(:def, :test_wchar_chomp!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "a\n")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :chomp!))),
      s(:def, :test_wchar_aset,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:send,
              s(:str, "a"), :*,
              s(:int, 30))),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :[]=,
            s(:int, 29),
            s(:int, 1),
            s(:str, "")))),
      s(:def, :test_wchar_sub!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "foobar")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :sub!,
            s(:regexp,
              s(:begin,
                s(:send,
                  s(:str, "foo"), :encode,
                  s(:send,
                    s(:lvar, :s), :encoding))),
              s(:regopt)),
            s(:str, "")))),
      s(:def, :test_wchar_delete!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "foobar")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :delete!,
            s(:send,
              s(:str, "ao"), :encode,
              s(:send,
                s(:lvar, :s), :encoding))))),
      s(:def, :test_wchar_squeeze!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "foo!")),
          s(:args,
            s(:arg, :s)),
          s(:send,
            s(:lvar, :s), :squeeze!))),
      s(:def, :test_wchar_tr!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "あfoobar")),
          s(:args,
            s(:arg, :s)),
          s(:begin,
            s(:lvasgn, :enc,
              s(:send,
                s(:lvar, :s), :encoding)),
            s(:send,
              s(:lvar, :s), :tr!,
              s(:send,
                s(:str, "あ"), :encode,
                s(:lvar, :enc)),
              s(:send,
                s(:str, "c"), :encode,
                s(:lvar, :enc)))))),
      s(:def, :test_wchar_tr_s!,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "あfoobar")),
          s(:args,
            s(:arg, :s)),
          s(:begin,
            s(:lvasgn, :enc,
              s(:send,
                s(:lvar, :s), :encoding)),
            s(:send,
              s(:lvar, :s), :tr_s!,
              s(:send,
                s(:str, "あ"), :encode,
                s(:lvar, :enc)),
              s(:send,
                s(:str, "c"), :encode,
                s(:lvar, :enc)))))),
      s(:def, :test_wchar_replace,
        s(:args),
        s(:block,
          s(:send, nil, :assert_wchars_term_char,
            s(:str, "abc")),
          s(:args,
            s(:arg, :s)),
          s(:begin,
            s(:lvasgn, :w,
              s(:send,
                s(:lvar, :s), :dup)),
            s(:send,
              s(:lvar, :s), :replace,
              s(:str, "abcdefghijklmnop")),
            s(:send,
              s(:lvar, :s), :replace,
              s(:lvar, :w))))),
      s(:def, :test_embedded_from_heap,
        s(:args),
        s(:begin,
          s(:lvasgn, :gh821,
            s(:str, "[GH-821]")),
          s(:lvasgn, :embedded_string,
            s(:str, "abcdefghi")),
          s(:lvasgn, :string,
            s(:send,
              s(:lvar, :embedded_string), :gsub,
              s(:str, "efg"),
              s(:str, "123"))),
          s(:send,
            s(:hash), :[]=,
            s(:lvar, :string),
            s(:int, 1)),
          s(:lvasgn, :non_terminated,
            s(:dstr,
              s(:begin,
                s(:lvar, :string)),
              s(:begin,
                s(:nil)))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :cstr_term_char,
              s(:lvar, :non_terminated)),
            s(:lvar, :gh821)),
          s(:lvasgn, :result,
            s(:hash)),
          s(:block,
            s(:send,
              s(:const, nil, :WCHARS), :map),
            s(:args,
              s(:arg, :enc)),
            s(:begin,
              s(:lvasgn, :embedded_string,
                s(:send,
                  s(:str, "ab"), :encode,
                  s(:lvar, :enc))),
              s(:lvasgn, :string,
                s(:send,
                  s(:lvar, :embedded_string), :gsub,
                  s(:send,
                    s(:str, "b"), :encode,
                    s(:lvar, :enc)),
                  s(:send,
                    s(:str, "1"), :encode,
                    s(:lvar, :enc)))),
              s(:send,
                s(:hash), :[]=,
                s(:lvar, :string),
                s(:int, 1)),
              s(:lvasgn, :non_terminated,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :string)),
                  s(:begin,
                    s(:nil)))),
              s(:lvasgn, :c,
                s(:send,
                  s(:const,
                    s(:const, nil, :Bug), :String), :cstr_term_char,
                  s(:lvar, :non_terminated))),
              s(:if,
                s(:lvar, :c),
                s(:send,
                  s(:lvar, :result), :[]=,
                  s(:lvar, :enc),
                  s(:lvar, :c)), nil))),
          s(:send, nil, :assert_empty,
            s(:lvar, :result),
            s(:lvar, :gh821)))),
      s(:def, :assert_wchars_term_char,
        s(:args,
          s(:arg, :str)),
        s(:begin,
          s(:lvasgn, :result,
            s(:hash)),
          s(:block,
            s(:send,
              s(:const, nil, :WCHARS), :map),
            s(:args,
              s(:arg, :enc)),
            s(:begin,
              s(:lvasgn, :s,
                s(:send,
                  s(:const,
                    s(:const, nil, :Bug), :String), :new,
                  s(:send,
                    s(:lvar, :str), :encode,
                    s(:lvar, :enc)))),
              s(:yield,
                s(:lvar, :s)),
              s(:lvasgn, :c,
                s(:send,
                  s(:lvar, :s), :cstr_term_char)),
              s(:if,
                s(:lvar, :c),
                s(:send,
                  s(:lvar, :result), :[]=,
                  s(:lvar, :enc),
                  s(:lvar, :c)), nil))),
          s(:send, nil, :assert_empty,
            s(:lvar, :result)))))))
