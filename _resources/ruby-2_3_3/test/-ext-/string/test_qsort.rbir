s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/string")),
  s(:class,
    s(:const, nil, :Test_StringQSort),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_qsort,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :new,
              s(:str, "xxozfxx"))),
          s(:send,
            s(:lvar, :s), :qsort!),
          s(:send, nil, :assert_equal,
            s(:str, "foxxxxz"),
            s(:lvar, :s)))),
      s(:def, :test_qsort_slice,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :new,
              s(:str, "xxofzx1"))),
          s(:send,
            s(:lvar, :s), :qsort!,
            s(:nil),
            s(:nil),
            s(:int, 3)),
          s(:send, nil, :assert_equal,
            s(:str, "fzxxxo1"),
            s(:lvar, :s)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :new,
              s(:str, "xxofzx231"))),
          s(:send,
            s(:lvar, :s), :qsort!,
            s(:nil),
            s(:nil),
            s(:int, 3)),
          s(:send, nil, :assert_equal,
            s(:str, "231fzxxxo"),
            s(:lvar, :s)))))))
