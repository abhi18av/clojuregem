s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/string")),
  s(:class,
    s(:const, nil, :Test_String_Fstring),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :assert_fstring,
        s(:args,
          s(:arg, :str)),
        s(:begin,
          s(:lvasgn, :fstr,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :String), :fstring,
              s(:lvar, :str))),
          s(:yield,
            s(:lvar, :str)),
          s(:yield,
            s(:lvar, :fstr)))),
      s(:def, :test_taint_shared_string,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :dup)),
          s(:send,
            s(:lvar, :str), :taint),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_predicate,
              s(:lvar, :s),
              s(:sym, :tainted?))))),
      s(:def, :test_taint_normal_string,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:send,
            s(:lvar, :str), :taint),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_predicate,
              s(:lvar, :s),
              s(:sym, :tainted?))))),
      s(:def, :test_taint_registered_tainted,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:send,
            s(:lvar, :str), :taint),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_predicate,
              s(:lvar, :s),
              s(:sym, :tainted?))),
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_not_predicate,
              s(:lvar, :s),
              s(:sym, :tainted?))))),
      s(:def, :test_taint_registered_untainted,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_not_predicate,
              s(:lvar, :s),
              s(:sym, :tainted?))),
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:send,
            s(:lvar, :str), :taint),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_predicate,
              s(:lvar, :s),
              s(:sym, :tainted?))))),
      s(:def, :test_instance_variable,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:send,
            s(:lvar, :str), :instance_variable_set,
            s(:sym, :@test),
            s(:int, 42)),
          s(:send,
            s(:lvar, :str), :freeze),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_send,
              s(:array,
                s(:lvar, :s),
                s(:sym, :instance_variable_defined?),
                s(:sym, :@test)))))),
      s(:def, :test_singleton_method,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:send,
                s(:send, nil, :__method__), :to_s), :*,
              s(:int, 3))),
          s(:defs,
            s(:lvar, :str), :foo,
            s(:args), nil),
          s(:send,
            s(:lvar, :str), :freeze),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_send,
              s(:array,
                s(:lvar, :s),
                s(:sym, :respond_to?),
                s(:sym, :foo)))))),
      s(:class,
        s(:const, nil, :S),
        s(:const, nil, :String), nil),
      s(:def, :test_subclass,
        s(:args),
        s(:begin,
          s(:lvasgn, :str,
            s(:send,
              s(:const, nil, :S), :new,
              s(:send,
                s(:send,
                  s(:send, nil, :__method__), :to_s), :*,
                s(:int, 3)))),
          s(:send,
            s(:lvar, :str), :freeze),
          s(:block,
            s(:send, nil, :assert_fstring,
              s(:lvar, :str)),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_instance_of,
              s(:const, nil, :S),
              s(:lvar, :s))))))))
