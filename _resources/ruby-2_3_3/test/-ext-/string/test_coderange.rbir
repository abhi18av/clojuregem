s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/string")),
  s(:send, nil, :require,
    s(:str, "rbconfig/sizeof")),
  s(:class,
    s(:const, nil, :Test_StringCoderange),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@sizeof_voidp,
            s(:send,
              s(:const,
                s(:const, nil, :RbConfig), :SIZEOF), :[],
              s(:str, "void*"))),
          s(:ivasgn, :@a8,
            s(:const,
              s(:const, nil, :Encoding), :ASCII_8BIT)),
          s(:ivasgn, :@a7,
            s(:const,
              s(:const, nil, :Encoding), :US_ASCII)),
          s(:ivasgn, :@u8,
            s(:const,
              s(:const, nil, :Encoding), :UTF_8)))),
      s(:def, :test_ascii8bit,
        s(:args),
        s(:begin,
          s(:lvasgn, :enc,
            s(:ivar, :@a8)),
          s(:lvasgn, :str,
            s(:str, "a")),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :"7bit"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)),
          s(:lvasgn, :str,
            s(:send,
              s(:str, "a\xBE"), :force_encoding,
              s(:lvar, :enc))),
          s(:send, nil, :assert_equal,
            s(:sym, :valid),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)))),
      s(:def, :test_usascii,
        s(:args),
        s(:begin,
          s(:lvasgn, :enc,
            s(:ivar, :@a7)),
          s(:lvasgn, :str,
            s(:str, "a")),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :"7bit"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)),
          s(:lvasgn, :str,
            s(:send,
              s(:str, "a"), :*,
              s(:begin,
                s(:send,
                  s(:ivar, :@sizeof_voidp), :*,
                  s(:int, 2))))),
          s(:send,
            s(:lvar, :str), :<<,
            s(:str, "\xBE")),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :broken),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)))),
      s(:def, :test_utf8,
        s(:args),
        s(:begin,
          s(:lvasgn, :enc,
            s(:ivar, :@u8)),
          s(:lvasgn, :str,
            s(:str, "a")),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :"7bit"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)),
          s(:lvasgn, :str,
            s(:send,
              s(:str, "a"), :*,
              s(:begin,
                s(:send,
                  s(:ivar, :@sizeof_voidp), :*,
                  s(:int, 3))))),
          s(:send,
            s(:lvar, :str), :<<,
            s(:str, "aa\xC2\x80")),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :valid),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)),
          s(:lvasgn, :str,
            s(:send,
              s(:str, "a"), :*,
              s(:begin,
                s(:send,
                  s(:ivar, :@sizeof_voidp), :*,
                  s(:int, 2))))),
          s(:send,
            s(:lvar, :str), :<<,
            s(:str, "\xC2\x80")),
          s(:send,
            s(:lvar, :str), :<<,
            s(:send,
              s(:str, "a"), :*,
              s(:begin,
                s(:send,
                  s(:ivar, :@sizeof_voidp), :*,
                  s(:int, 2))))),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :valid),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)),
          s(:lvasgn, :str,
            s(:send,
              s(:str, "a"), :*,
              s(:begin,
                s(:send,
                  s(:ivar, :@sizeof_voidp), :*,
                  s(:int, 2))))),
          s(:send,
            s(:lvar, :str), :<<,
            s(:str, "\xC1\x80")),
          s(:send,
            s(:lvar, :str), :<<,
            s(:send,
              s(:str, "a"), :*,
              s(:begin,
                s(:send,
                  s(:ivar, :@sizeof_voidp), :*,
                  s(:int, 2))))),
          s(:send,
            s(:lvar, :str), :force_encoding,
            s(:lvar, :enc)),
          s(:send, nil, :assert_equal,
            s(:sym, :broken),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :String), :new,
                s(:lvar, :str)), :coderange_scan)))))))
