s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/st/numhash")),
  s(:class,
    s(:const,
      s(:const, nil, :Bug), :StNumHash), nil,
    s(:class,
      s(:const, nil, :Test_NumHash),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@tbl,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :StNumHash), :new)),
            s(:block,
              s(:send,
                s(:int, 5), :times),
              s(:args,
                s(:arg, :i)),
              s(:send,
                s(:ivar, :@tbl), :[]=,
                s(:lvar, :i),
                s(:lvar, :i))))),
        s(:def, :test_check,
          s(:args),
          s(:begin,
            s(:lvasgn, :keys,
              s(:array)),
            s(:block,
              s(:send,
                s(:ivar, :@tbl), :each),
              s(:args,
                s(:arg, :k),
                s(:arg, :v),
                s(:arg, :t)),
              s(:begin,
                s(:send,
                  s(:lvar, :keys), :<<,
                  s(:lvar, :k)),
                s(:if,
                  s(:send,
                    s(:lvar, :k), :==,
                    s(:int, 3)),
                  s(:send,
                    s(:lvar, :t), :[]=,
                    s(:int, 5),
                    s(:int, 5)), nil),
                s(:true))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:splat,
                  s(:irange,
                    s(:int, 0),
                    s(:int, 5)))),
              s(:lvar, :keys)))),
        s(:def, :test_update,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:true),
              s(:block,
                s(:send,
                  s(:ivar, :@tbl), :update,
                  s(:int, 0)),
                s(:args),
                s(:send,
                  s(:ivar, :@tbl), :[]=,
                  s(:int, 5),
                  s(:sym, :x)))),
            s(:send, nil, :assert_equal,
              s(:sym, :x),
              s(:send,
                s(:ivar, :@tbl), :[],
                s(:int, 0))),
            s(:send, nil, :assert_equal,
              s(:sym, :x),
              s(:send,
                s(:ivar, :@tbl), :[],
                s(:int, 5))))),
        s(:def, :test_size_after_delete_safe,
          s(:args),
          s(:block,
            s(:send,
              s(:int, 10), :downto,
              s(:int, 1)),
            s(:args,
              s(:arg, :up)),
            s(:begin,
              s(:lvasgn, :tbl,
                s(:send,
                  s(:const,
                    s(:const, nil, :Bug), :StNumHash), :new)),
              s(:block,
                s(:send,
                  s(:int, 1), :upto,
                  s(:lvar, :up)),
                s(:args,
                  s(:arg, :i)),
                s(:send,
                  s(:lvar, :tbl), :[]=,
                  s(:lvar, :i),
                  s(:lvar, :i))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:lvar, :tbl), :delete_safe,
                  s(:int, 1))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :up), :-,
                  s(:int, 1)),
                s(:send,
                  s(:lvar, :tbl), :size),
                s(:dstr,
                  s(:str, "delete_safe doesn't change size from "),
                  s(:begin,
                    s(:lvar, :up)),
                  s(:str, " to "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :up), :-,
                      s(:int, 1)))))))),
        s(:def, :test_delete_safe_on_iteration,
          s(:args),
          s(:block,
            s(:send,
              s(:int, 10), :downto,
              s(:int, 1)),
            s(:args,
              s(:arg, :up)),
            s(:begin,
              s(:lvasgn, :tbl,
                s(:send,
                  s(:const,
                    s(:const, nil, :Bug), :StNumHash), :new)),
              s(:block,
                s(:send,
                  s(:int, 1), :upto,
                  s(:lvar, :up)),
                s(:args,
                  s(:arg, :i)),
                s(:send,
                  s(:lvar, :tbl), :[]=,
                  s(:lvar, :i),
                  s(:lvar, :i))),
              s(:block,
                s(:send, nil, :assert_nothing_raised,
                  s(:dstr,
                    s(:str, "delete_safe forces iteration to fail with size "),
                    s(:begin,
                      s(:lvar, :up)))),
                s(:args),
                s(:block,
                  s(:send,
                    s(:lvar, :tbl), :each),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v),
                    s(:arg, :t)),
                  s(:begin,
                    s(:send, nil, :assert_equal,
                      s(:lvar, :k),
                      s(:send,
                        s(:lvar, :t), :delete_safe,
                        s(:lvar, :k))),
                    s(:true)))))))))))
