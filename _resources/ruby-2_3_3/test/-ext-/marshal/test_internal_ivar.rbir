s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/marshal/internal_ivar")),
  s(:module,
    s(:const, nil, :Bug), nil),
  s(:module,
    s(:const,
      s(:const, nil, :Bug), :Marshal),
    s(:class,
      s(:const, nil, :TestInternalIVar),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:def, :test_marshal,
        s(:args),
        s(:begin,
          s(:lvasgn, :v,
            s(:send,
              s(:const, nil, :InternalIVar), :new,
              s(:str, "hello"),
              s(:str, "world"))),
          s(:send, nil, :assert_equal,
            s(:str, "hello"),
            s(:send,
              s(:lvar, :v), :normal)),
          s(:send, nil, :assert_equal,
            s(:str, "world"),
            s(:send,
              s(:lvar, :v), :internal)),
          s(:lvasgn, :dump,
            s(:send,
              s(:const,
                s(:cbase), :Marshal), :dump,
              s(:lvar, :v))),
          s(:lvasgn, :v,
            s(:block,
              s(:send, nil, :assert_nothing_raised),
              s(:args),
              s(:break,
                s(:send,
                  s(:const,
                    s(:cbase), :Marshal), :load,
                  s(:lvar, :dump))))),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :InternalIVar),
            s(:lvar, :v)),
          s(:send, nil, :assert_equal,
            s(:str, "hello"),
            s(:send,
              s(:lvar, :v), :normal)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:lvar, :v), :internal)))))))
