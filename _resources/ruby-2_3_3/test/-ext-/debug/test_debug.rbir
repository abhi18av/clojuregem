s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/debug")),
  s(:class,
    s(:const, nil, :TestDebug),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :binds_check,
        s(:args,
          s(:arg, :binds),
          s(:optarg, :msg,
            s(:nil))),
        s(:begin,
          s(:lvasgn, :count,
            s(:send,
              s(:const, nil, :Hash), :new,
              s(:int, 0))),
          s(:send, nil, :assert_instance_of,
            s(:const, nil, :Array),
            s(:lvar, :binds),
            s(:lvar, :msg)),
          s(:block,
            s(:send,
              s(:lvar, :binds), :each),
            s(:args,
              s(:mlhs,
                s(:arg, :_self),
                s(:arg, :bind),
                s(:arg, :klass),
                s(:arg, :iseq),
                s(:arg, :loc))),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :_self), :==,
                  s(:self)),
                s(:op_asgn,
                  s(:send,
                    s(:lvar, :count), :[],
                    s(:sym, :self)), :+,
                  s(:int, 1)), nil),
              s(:if,
                s(:lvar, :bind),
                s(:begin,
                  s(:send, nil, :assert_instance_of,
                    s(:const, nil, :Binding),
                    s(:lvar, :bind),
                    s(:lvar, :msg)),
                  s(:op_asgn,
                    s(:send,
                      s(:lvar, :count), :[],
                      s(:sym, :bind)), :+,
                    s(:int, 1))), nil),
              s(:if,
                s(:lvar, :klass),
                s(:begin,
                  s(:send, nil, :assert,
                    s(:or,
                      s(:send,
                        s(:lvar, :klass), :instance_of?,
                        s(:const, nil, :Module)),
                      s(:send,
                        s(:lvar, :klass), :instance_of?,
                        s(:const, nil, :Class))),
                    s(:lvar, :msg)),
                  s(:op_asgn,
                    s(:send,
                      s(:lvar, :count), :[],
                      s(:sym, :class)), :+,
                    s(:int, 1))), nil),
              s(:if,
                s(:lvar, :iseq),
                s(:begin,
                  s(:op_asgn,
                    s(:send,
                      s(:lvar, :count), :[],
                      s(:sym, :iseq)), :+,
                    s(:int, 1)),
                  s(:send, nil, :assert_instance_of,
                    s(:const,
                      s(:const, nil, :RubyVM), :InstructionSequence),
                    s(:lvar, :iseq),
                    s(:lvar, :msg)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :loc), :path),
                    s(:send,
                      s(:lvar, :iseq), :path),
                    s(:lvar, :msg)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :loc), :absolute_path),
                    s(:send,
                      s(:lvar, :iseq), :absolute_path),
                    s(:lvar, :msg)),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :loc), :label),
                    s(:send,
                      s(:lvar, :iseq), :label),
                    s(:lvar, :msg)),
                  s(:send, nil, :assert_operator,
                    s(:send,
                      s(:lvar, :loc), :lineno),
                    s(:sym, :>=),
                    s(:send,
                      s(:lvar, :iseq), :first_lineno),
                    s(:lvar, :msg))), nil),
              s(:send, nil, :assert_instance_of,
                s(:const,
                  s(:const,
                    s(:const, nil, :Thread), :Backtrace), :Location),
                s(:lvar, :loc),
                s(:lvar, :msg)))),
          s(:send, nil, :assert_operator,
            s(:int, 0),
            s(:sym, :<),
            s(:send,
              s(:lvar, :count), :[],
              s(:sym, :self)),
            s(:lvar, :msg)),
          s(:send, nil, :assert_operator,
            s(:int, 0),
            s(:sym, :<),
            s(:send,
              s(:lvar, :count), :[],
              s(:sym, :bind)),
            s(:lvar, :msg)),
          s(:send, nil, :assert_operator,
            s(:int, 0),
            s(:sym, :<),
            s(:send,
              s(:lvar, :count), :[],
              s(:sym, :iseq)),
            s(:lvar, :msg)),
          s(:send, nil, :assert_operator,
            s(:int, 0),
            s(:sym, :<),
            s(:send,
              s(:lvar, :count), :[],
              s(:sym, :class)),
            s(:lvar, :msg)))),
      s(:def, :test_inspector_open,
        s(:args),
        s(:begin,
          s(:lvasgn, :binds,
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Debug), :inspector)),
          s(:send, nil, :binds_check,
            s(:lvar, :binds)))),
      s(:def, :inspector_in_eval,
        s(:args),
        s(:send, nil, :eval,
          s(:str, "Bug::Debug.inspector"))),
      s(:def, :test_inspector_open_in_eval,
        s(:args),
        s(:begin,
          s(:lvasgn, :bug7635,
            s(:str, "[ruby-core:51640]")),
          s(:lvasgn, :binds,
            s(:send, nil, :inspector_in_eval)),
          s(:send, nil, :binds_check,
            s(:lvar, :binds),
            s(:lvar, :bug7635)))))))
