s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/bignum")),
  s(:class,
    s(:const, nil, :TestBignum),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:class,
        s(:const, nil, :TestPack),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:casgn, nil, :MSWORD_FIRST,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_MSWORD_FIRST)),
          s(:casgn, nil, :LSWORD_FIRST,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_LSWORD_FIRST)),
          s(:casgn, nil, :MSBYTE_FIRST,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_MSBYTE_FIRST)),
          s(:casgn, nil, :LSBYTE_FIRST,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_LSBYTE_FIRST)),
          s(:casgn, nil, :NATIVE_BYTE_ORDER,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_NATIVE_BYTE_ORDER)),
          s(:casgn, nil, :TWOCOMP,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_2COMP)),
          s(:casgn, nil, :LITTLE_ENDIAN,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_LITTLE_ENDIAN)),
          s(:casgn, nil, :BIG_ENDIAN,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_BIG_ENDIAN)),
          s(:casgn, nil, :NEGATIVE,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_NEGATIVE)),
          s(:casgn, nil, :GENERIC,
            s(:const,
              s(:const, nil, :Integer), :INTEGER_PACK_FORCE_GENERIC_IMPLEMENTATION)),
          s(:def, :test_pack_zero,
            s(:args),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:int, 0),
                s(:str, "")),
              s(:send,
                s(:int, 0), :test_pack,
                s(:int, 0),
                s(:int, 1),
                s(:int, 0),
                s(:const, nil, :BIG_ENDIAN)))),
          s(:def, :test_pack_argument_check,
            s(:args),
            s(:begin,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:int, 0), :test_pack_raw,
                  s(:str, ""),
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :MSBYTE_FIRST))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:int, 0), :test_pack_raw,
                  s(:str, ""),
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :MSWORD_FIRST))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:int, 0), :test_pack_raw,
                  s(:str, ""),
                  s(:int, 0),
                  s(:int, 0),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:int, 0), :test_pack_raw,
                  s(:str, ""),
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 8),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:int, 0), :test_pack_raw,
                  s(:str, ""),
                  s(:send,
                    s(:int, 1), :<<,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:array,
                                s(:str, "")), :pack,
                              s(:str, "p")), :length), :*,
                          s(:int, 8)), :-,
                        s(:int, 1)))),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))))),
          s(:def, :test_pack_wordsize,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x00\x01")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x00\x00\x01")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 3),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01\x00")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01\x00\x00")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 3),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))))),
          s(:def, :test_pack_fixed_buffer,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 0),
                  s(:str, "\x00\x00")),
                s(:send,
                  s(:int, 0), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x00\x01")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x02\x01")),
                s(:send,
                  s(:int, 513), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x02\x01")),
                s(:send,
                  s(:int, 197121), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x02\x01")),
                s(:send,
                  s(:int, 67305985), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 0),
                  s(:str, "\x00\x00")),
                s(:send,
                  s(:int, 0), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01\x00")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01\x02")),
                s(:send,
                  s(:int, 513), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x01\x02")),
                s(:send,
                  s(:int, 197121), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x01\x02")),
                s(:send,
                  s(:int, 67305985), :test_pack,
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))))),
          s(:def, :test_pack_wordorder_and_endian,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x124Vx")),
                s(:send,
                  s(:int, 305419896), :test_pack,
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :MSWORD_FIRST), :|,
                    s(:const, nil, :MSBYTE_FIRST)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "4\x12xV")),
                s(:send,
                  s(:int, 305419896), :test_pack,
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :MSWORD_FIRST), :|,
                    s(:const, nil, :LSBYTE_FIRST)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "Vx\x124")),
                s(:send,
                  s(:int, 305419896), :test_pack,
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :LSWORD_FIRST), :|,
                    s(:const, nil, :MSBYTE_FIRST)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "xV4\x12")),
                s(:send,
                  s(:int, 305419896), :test_pack,
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :LSWORD_FIRST), :|,
                    s(:const, nil, :LSBYTE_FIRST)))))),
          s(:def, :test_pack_native_endian,
            s(:args),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:int, 1),
                s(:send,
                  s(:array,
                    s(:int, 4660)), :pack,
                  s(:str, "S!"))),
              s(:send,
                s(:int, 4660), :test_pack,
                s(:int, 1),
                s(:int, 2),
                s(:int, 0),
                s(:send,
                  s(:const, nil, :MSWORD_FIRST), :|,
                  s(:const, nil, :NATIVE_BYTE_ORDER))))),
          s(:def, :test_pack_nail,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01\x00\x00\x00\x01\x01")),
                s(:send,
                  s(:int, 35), :test_pack,
                  s(:int, 6),
                  s(:int, 1),
                  s(:int, 7),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01\x02\x03\x04\x05\x06\a\b")),
                s(:send,
                  s(:int, 305419896), :test_pack,
                  s(:int, 8),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x00\x12\x004\x00V\x00x")),
                s(:send,
                  s(:int, 305419896), :test_pack,
                  s(:int, 4),
                  s(:int, 2),
                  s(:int, 8),
                  s(:const, nil, :BIG_ENDIAN))))),
          s(:def, :test_pack_overflow,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -17)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, -16)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x0F")),
                s(:send,
                  s(:begin,
                    s(:int, -15)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x0F")),
                s(:send,
                  s(:begin,
                    s(:int, 15)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, 16)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, 17)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -257)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, -256)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, -255)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, 255)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, 256)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, 257)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -18446744073709551617)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x00")),
                s(:send,
                  s(:begin,
                    s(:int, -18446744073709551616)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, -18446744073709551615)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, 18446744073709551615)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x00")),
                s(:send,
                  s(:begin,
                    s(:int, 18446744073709551616)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x01")),
                s(:send,
                  s(:begin,
                    s(:int, 18446744073709551617)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:block,
                s(:send,
                  s(:int, 1), :upto,
                  s(:int, 16)),
                s(:args,
                  s(:arg, :wordsize)),
                s(:block,
                  s(:send,
                    s(:int, 1), :upto,
                    s(:int, 20)),
                  s(:args,
                    s(:arg, :numwords)),
                  s(:begin,
                    s(:lvasgn, :w,
                      s(:send,
                        s(:lvar, :numwords), :*,
                        s(:lvar, :wordsize))),
                    s(:lvasgn, :n,
                      s(:send,
                        s(:int, 256), :**,
                        s(:lvar, :w))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -2),
                        s(:send,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))), :+,
                          s(:str, "\x01"))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :BIG_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -2),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :-@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :BIG_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -1),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :BIG_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 1),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :BIG_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :+@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :BIG_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))), :+,
                          s(:str, "\x01"))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :BIG_ENDIAN)))))),
              s(:block,
                s(:send,
                  s(:int, 1), :upto,
                  s(:int, 16)),
                s(:args,
                  s(:arg, :wordsize)),
                s(:block,
                  s(:send,
                    s(:int, 1), :upto,
                    s(:int, 20)),
                  s(:args,
                    s(:arg, :numwords)),
                  s(:begin,
                    s(:lvasgn, :w,
                      s(:send,
                        s(:lvar, :numwords), :*,
                        s(:lvar, :wordsize))),
                    s(:lvasgn, :n,
                      s(:send,
                        s(:int, 256), :**,
                        s(:lvar, :w))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -2),
                        s(:send,
                          s(:str, "\x01"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :LITTLE_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -2),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :-@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :LITTLE_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -1),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :LITTLE_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 1),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :LITTLE_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :+@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :LITTLE_ENDIAN))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:str, "\x01"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:const, nil, :LITTLE_ENDIAN)))))))),
          s(:def, :test_pack_sign,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -1)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x80p`P@0 \x10")),
                s(:send,
                  s(:begin,
                    s(:int, -9255003132036915216)), :test_pack,
                  s(:int, 8),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))))),
          s(:def, :test_pack_orders,
            s(:args),
            s(:block,
              s(:send,
                s(:array,
                  s(:const, nil, :MSWORD_FIRST),
                  s(:const, nil, :LSWORD_FIRST)), :each),
              s(:args,
                s(:arg, :word_order)),
              s(:block,
                s(:send,
                  s(:array,
                    s(:const, nil, :MSBYTE_FIRST),
                    s(:const, nil, :LSBYTE_FIRST),
                    s(:const, nil, :NATIVE_BYTE_ORDER)), :each),
                s(:args,
                  s(:arg, :byte_order)),
                s(:block,
                  s(:send,
                    s(:int, 1), :upto,
                    s(:int, 16)),
                  s(:args,
                    s(:arg, :wordsize)),
                  s(:block,
                    s(:send,
                      s(:int, 1), :upto,
                      s(:int, 20)),
                    s(:args,
                      s(:arg, :numwords)),
                    s(:begin,
                      s(:lvasgn, :w,
                        s(:send,
                          s(:lvar, :numwords), :*,
                          s(:lvar, :wordsize))),
                      s(:lvasgn, :n,
                        s(:int, 0)),
                      s(:block,
                        s(:send,
                          s(:int, 0), :upto,
                          s(:lvar, :w)),
                        s(:args,
                          s(:arg, :i)),
                        s(:op_asgn,
                          s(:lvasgn, :n), :|,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:begin,
                                  s(:send,
                                    s(:lvar, :i), :+,
                                    s(:int, 1))), :%,
                                s(:int, 256))), :<<,
                            s(:begin,
                              s(:send,
                                s(:lvar, :i), :*,
                                s(:int, 8)))))),
                      s(:send, nil, :assert_equal,
                        s(:send,
                          s(:lvar, :n), :test_pack,
                          s(:lvar, :numwords),
                          s(:lvar, :wordsize),
                          s(:int, 0),
                          s(:send,
                            s(:send,
                              s(:lvar, :word_order), :|,
                              s(:lvar, :byte_order)), :|,
                            s(:const, nil, :GENERIC))),
                        s(:send,
                          s(:lvar, :n), :test_pack,
                          s(:lvar, :numwords),
                          s(:lvar, :wordsize),
                          s(:int, 0),
                          s(:send,
                            s(:lvar, :word_order), :|,
                            s(:lvar, :byte_order))),
                        s(:dstr,
                          s(:begin,
                            s(:send,
                              s(:str, "%#x"), :%,
                              s(:lvar, :n))),
                          s(:str, ".test_pack("),
                          s(:begin,
                            s(:lvar, :numwords)),
                          s(:str, ", "),
                          s(:begin,
                            s(:lvar, :wordsize)),
                          s(:str, ", 0, "),
                          s(:begin,
                            s(:send,
                              s(:str, "%#x"), :%,
                              s(:begin,
                                s(:send,
                                  s(:lvar, :word_order), :|,
                                  s(:lvar, :byte_order))))),
                          s(:str, ")"))))))))),
          s(:def, :test_pack2comp_zero,
            s(:args),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:int, 0),
                s(:str, "")),
              s(:send,
                s(:int, 0), :test_pack,
                s(:int, 0),
                s(:int, 1),
                s(:int, 0),
                s(:send,
                  s(:const, nil, :TWOCOMP), :|,
                  s(:const, nil, :BIG_ENDIAN))))),
          s(:def, :test_pack2comp_emptybuf,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "")),
                s(:send,
                  s(:begin,
                    s(:int, -3)), :test_pack,
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "")),
                s(:send,
                  s(:begin,
                    s(:int, -2)), :test_pack,
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "")),
                s(:send,
                  s(:begin,
                    s(:int, -1)), :test_pack,
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 0),
                  s(:str, "")),
                s(:send,
                  s(:int, 0), :test_pack,
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "")),
                s(:send,
                  s(:int, 2), :test_pack,
                  s(:int, 0),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))))),
          s(:def, :test_pack2comp_nearly_zero,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\xFE")),
                s(:send,
                  s(:begin,
                    s(:int, -2)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, -1)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 0),
                  s(:str, "\x00")),
                s(:send,
                  s(:int, 0), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x01")),
                s(:send,
                  s(:int, 1), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x02")),
                s(:send,
                  s(:int, 2), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))))),
          s(:def, :test_pack2comp_overflow,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\x0F")),
                s(:send,
                  s(:begin,
                    s(:int, -17)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, -16)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -15)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\x0F")),
                s(:send,
                  s(:begin,
                    s(:int, 15)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, 16)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, 17)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 4),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, -257)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, -256)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -255)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, 255)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00")),
                s(:send,
                  s(:begin,
                    s(:int, 256)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x01")),
                s(:send,
                  s(:begin,
                    s(:int, 257)), :test_pack,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -2),
                  s(:str, "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, -18446744073709551617)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x00")),
                s(:send,
                  s(:begin,
                    s(:int, -18446744073709551616)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, -1),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x01")),
                s(:send,
                  s(:begin,
                    s(:int, -18446744073709551615)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 1),
                  s(:str, "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF")),
                s(:send,
                  s(:begin,
                    s(:int, 18446744073709551615)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x00")),
                s(:send,
                  s(:begin,
                    s(:int, 18446744073709551616)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:array,
                  s(:int, 2),
                  s(:str, "\x00\x00\x00\x00\x00\x00\x00\x01")),
                s(:send,
                  s(:begin,
                    s(:int, 18446744073709551617)), :test_pack,
                  s(:int, 2),
                  s(:int, 4),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:block,
                s(:send,
                  s(:int, 1), :upto,
                  s(:int, 16)),
                s(:args,
                  s(:arg, :wordsize)),
                s(:block,
                  s(:send,
                    s(:int, 1), :upto,
                    s(:int, 20)),
                  s(:args,
                    s(:arg, :numwords)),
                  s(:begin,
                    s(:lvasgn, :w,
                      s(:send,
                        s(:lvar, :numwords), :*,
                        s(:lvar, :wordsize))),
                    s(:lvasgn, :n,
                      s(:send,
                        s(:int, 256), :**,
                        s(:lvar, :w))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -2),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :BIG_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -1),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :-@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :BIG_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -1),
                        s(:send,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))), :+,
                          s(:str, "\x01"))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :BIG_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 1),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :BIG_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :+@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :BIG_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))), :+,
                          s(:str, "\x01"))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :BIG_ENDIAN))))))),
              s(:block,
                s(:send,
                  s(:int, 1), :upto,
                  s(:int, 16)),
                s(:args,
                  s(:arg, :wordsize)),
                s(:block,
                  s(:send,
                    s(:int, 1), :upto,
                    s(:int, 20)),
                  s(:args,
                    s(:arg, :numwords)),
                  s(:begin,
                    s(:lvasgn, :w,
                      s(:send,
                        s(:lvar, :numwords), :*,
                        s(:lvar, :wordsize))),
                    s(:lvasgn, :n,
                      s(:send,
                        s(:int, 256), :**,
                        s(:lvar, :w))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -2),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :LITTLE_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -1),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :-@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :LITTLE_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, -1),
                        s(:send,
                          s(:str, "\x01"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :-@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :LITTLE_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 1),
                        s(:send,
                          s(:str, "\xFF"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :-,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :LITTLE_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:str, "\x00"), :*,
                          s(:lvar, :w))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:lvar, :n), :+@)), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :LITTLE_ENDIAN)))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:int, 2),
                        s(:send,
                          s(:str, "\x01"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 1)))))),
                      s(:send,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :n), :+@), :+,
                            s(:int, 1))), :test_pack,
                        s(:lvar, :numwords),
                        s(:lvar, :wordsize),
                        s(:int, 0),
                        s(:send,
                          s(:const, nil, :TWOCOMP), :|,
                          s(:const, nil, :LITTLE_ENDIAN))))))),
              s(:block,
                s(:send,
                  s(:int, 2), :upto,
                  s(:int, 16)),
                s(:args,
                  s(:arg, :wordsize)),
                s(:begin,
                  s(:lvasgn, :w,
                    s(:lvar, :wordsize)),
                  s(:lvasgn, :b,
                    s(:send,
                      s(:send,
                        s(:int, 8), :*,
                        s(:lvar, :wordsize)), :-,
                      s(:int, 1))),
                  s(:lvasgn, :n,
                    s(:send,
                      s(:int, 2), :**,
                      s(:lvar, :b))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, -2),
                      s(:send,
                        s(:send,
                          s(:str, "\x7F"), :+,
                          s(:send,
                            s(:str, "\xFF"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\xFF"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :-@), :-,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :MSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, -1),
                      s(:send,
                        s(:send,
                          s(:str, "\x00"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x00"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :n), :-@)), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :MSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, -1),
                      s(:send,
                        s(:send,
                          s(:str, "\x00"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x01"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :-@), :+,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :MSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, 1),
                      s(:send,
                        s(:send,
                          s(:str, "\x7F"), :+,
                          s(:send,
                            s(:str, "\xFF"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\xFF"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :+@), :-,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :MSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, 2),
                      s(:send,
                        s(:send,
                          s(:str, "\x00"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x00"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :n), :+@)), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :MSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, 2),
                      s(:send,
                        s(:send,
                          s(:str, "\x00"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x01"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :+@), :+,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :MSBYTE_FIRST)))))),
              s(:block,
                s(:send,
                  s(:int, 2), :upto,
                  s(:int, 16)),
                s(:args,
                  s(:arg, :wordsize)),
                s(:begin,
                  s(:lvasgn, :w,
                    s(:lvar, :wordsize)),
                  s(:lvasgn, :b,
                    s(:send,
                      s(:send,
                        s(:int, 8), :*,
                        s(:lvar, :wordsize)), :-,
                      s(:int, 1))),
                  s(:lvasgn, :n,
                    s(:send,
                      s(:int, 2), :**,
                      s(:lvar, :b))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, -2),
                      s(:send,
                        s(:send,
                          s(:str, "\xFF"), :+,
                          s(:send,
                            s(:str, "\xFF"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x7F"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :-@), :-,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :LSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, -1),
                      s(:send,
                        s(:send,
                          s(:str, "\x00"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x00"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :n), :-@)), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :LSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, -1),
                      s(:send,
                        s(:send,
                          s(:str, "\x01"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x00"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :-@), :+,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :LSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, 1),
                      s(:send,
                        s(:send,
                          s(:str, "\xFF"), :+,
                          s(:send,
                            s(:str, "\xFF"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x7F"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :+@), :-,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :LSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, 2),
                      s(:send,
                        s(:send,
                          s(:str, "\x00"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x00"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:lvar, :n), :+@)), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :LSBYTE_FIRST)))),
                  s(:send, nil, :assert_equal,
                    s(:array,
                      s(:int, 2),
                      s(:send,
                        s(:send,
                          s(:str, "\x01"), :+,
                          s(:send,
                            s(:str, "\x00"), :*,
                            s(:begin,
                              s(:send,
                                s(:lvar, :w), :-,
                                s(:int, 2))))), :+,
                        s(:str, "\x00"))),
                    s(:send,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:lvar, :n), :+@), :+,
                          s(:int, 1))), :test_pack,
                      s(:int, 1),
                      s(:lvar, :wordsize),
                      s(:int, 1),
                      s(:send,
                        s(:const, nil, :TWOCOMP), :|,
                        s(:const, nil, :LSBYTE_FIRST)))))))),
          s(:def, :test_unpack_zero,
            s(:args),
            s(:send, nil, :assert_equal,
              s(:int, 0),
              s(:send,
                s(:const, nil, :Integer), :test_unpack,
                s(:str, ""),
                s(:int, 0),
                s(:int, 1),
                s(:int, 0),
                s(:const, nil, :BIG_ENDIAN)))),
          s(:def, :test_unpack_argument_check,
            s(:args),
            s(:begin,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "x"),
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :MSBYTE_FIRST))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "x"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :MSWORD_FIRST))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "x"),
                  s(:int, 1),
                  s(:int, 0),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "x"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 8),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "x"),
                  s(:int, 1),
                  s(:send,
                    s(:int, 1), :<<,
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:array,
                                s(:str, "")), :pack,
                              s(:str, "p")), :length), :*,
                          s(:int, 8)), :-,
                        s(:int, 1)))),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))))),
          s(:def, :test_unpack_wordsize,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x00\x01"),
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x00\x00\x01"),
                  s(:int, 1),
                  s(:int, 3),
                  s(:int, 0),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x00"),
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x00\x00"),
                  s(:int, 1),
                  s(:int, 3),
                  s(:int, 0),
                  s(:const, nil, :LITTLE_ENDIAN))))),
          s(:def, :test_unpack_wordorder_and_endian,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, 16909060),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x02\x03\x04"),
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :MSWORD_FIRST), :|,
                    s(:const, nil, :MSBYTE_FIRST)))),
              s(:send, nil, :assert_equal,
                s(:int, 33620995),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x02\x03\x04"),
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :MSWORD_FIRST), :|,
                    s(:const, nil, :LSBYTE_FIRST)))),
              s(:send, nil, :assert_equal,
                s(:int, 50594050),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x02\x03\x04"),
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :LSWORD_FIRST), :|,
                    s(:const, nil, :MSBYTE_FIRST)))),
              s(:send, nil, :assert_equal,
                s(:int, 67305985),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x02\x03\x04"),
                  s(:int, 2),
                  s(:int, 2),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :LSWORD_FIRST), :|,
                    s(:const, nil, :LSBYTE_FIRST)))))),
          s(:def, :test_unpack_native_endian,
            s(:args),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:str, "\x124"), :unpack,
                  s(:str, "S!")), :[],
                s(:int, 0)),
              s(:send,
                s(:const, nil, :Integer), :test_unpack,
                s(:str, "\x124"),
                s(:int, 1),
                s(:int, 2),
                s(:int, 0),
                s(:send,
                  s(:const, nil, :MSWORD_FIRST), :|,
                  s(:const, nil, :NATIVE_BYTE_ORDER))))),
          s(:def, :test_unpack_nail,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, 35),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x00\x00\x00\x01\x01"),
                  s(:int, 6),
                  s(:int, 1),
                  s(:int, 7),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 305419896),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01\x02\x03\x04\x05\x06\a\b"),
                  s(:int, 8),
                  s(:int, 1),
                  s(:int, 4),
                  s(:const, nil, :BIG_ENDIAN))),
              s(:send, nil, :assert_equal,
                s(:int, 305419896),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x00\x12\x004\x00V\x00x"),
                  s(:int, 4),
                  s(:int, 2),
                  s(:int, 8),
                  s(:const, nil, :BIG_ENDIAN))))),
          s(:def, :test_unpack_sign,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :BIG_ENDIAN), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -9255003132036915216),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x80p`P@0 \x10"),
                  s(:int, 8),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :BIG_ENDIAN), :|,
                    s(:const, nil, :NEGATIVE)))))),
          s(:def, :test_unpack_orders,
            s(:args),
            s(:block,
              s(:send,
                s(:array,
                  s(:const, nil, :MSWORD_FIRST),
                  s(:const, nil, :LSWORD_FIRST)), :each),
              s(:args,
                s(:arg, :word_order)),
              s(:block,
                s(:send,
                  s(:array,
                    s(:const, nil, :MSBYTE_FIRST),
                    s(:const, nil, :LSBYTE_FIRST),
                    s(:const, nil, :NATIVE_BYTE_ORDER)), :each),
                s(:args,
                  s(:arg, :byte_order)),
                s(:block,
                  s(:send,
                    s(:int, 1), :upto,
                    s(:int, 16)),
                  s(:args,
                    s(:arg, :wordsize)),
                  s(:block,
                    s(:send,
                      s(:int, 1), :upto,
                      s(:int, 20)),
                    s(:args,
                      s(:arg, :numwords)),
                    s(:begin,
                      s(:lvasgn, :w,
                        s(:send,
                          s(:lvar, :numwords), :*,
                          s(:lvar, :wordsize))),
                      s(:lvasgn, :ary,
                        s(:array)),
                      s(:block,
                        s(:send,
                          s(:int, 0), :upto,
                          s(:lvar, :w)),
                        s(:args,
                          s(:arg, :i)),
                        s(:send,
                          s(:lvar, :ary), :<<,
                          s(:begin,
                            s(:send,
                              s(:begin,
                                s(:send,
                                  s(:lvar, :i), :+,
                                  s(:int, 1))), :%,
                              s(:int, 256))))),
                      s(:lvasgn, :str,
                        s(:send,
                          s(:lvar, :ary), :pack,
                          s(:str, "C*"))),
                      s(:lvasgn, :flags,
                        s(:send,
                          s(:lvar, :word_order), :|,
                          s(:lvar, :byte_order))),
                      s(:send, nil, :assert_equal,
                        s(:send,
                          s(:const, nil, :Integer), :test_unpack,
                          s(:lvar, :str),
                          s(:lvar, :numwords),
                          s(:lvar, :wordsize),
                          s(:int, 0),
                          s(:send,
                            s(:lvar, :flags), :|,
                            s(:const, nil, :GENERIC))),
                        s(:send,
                          s(:const, nil, :Integer), :test_unpack,
                          s(:lvar, :str),
                          s(:lvar, :numwords),
                          s(:lvar, :wordsize),
                          s(:int, 0),
                          s(:lvar, :flags)),
                        s(:dstr,
                          s(:str, "Integer.test_unpack("),
                          s(:begin,
                            s(:send,
                              s(:lvar, :str), :dump)),
                          s(:str, ", "),
                          s(:begin,
                            s(:lvar, :numwords)),
                          s(:str, ", "),
                          s(:begin,
                            s(:lvar, :wordsize)),
                          s(:str, ", 0, "),
                          s(:begin,
                            s(:send,
                              s(:str, "%#x"), :%,
                              s(:lvar, :flags))),
                          s(:str, ")"))))))))),
          s(:def, :test_unpack2comp_single_byte,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, -128),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x80"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -2),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\xFE"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\xFF"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x00"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, 2),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x02"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, 127),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x7F"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))))),
          s(:def, :test_unpack2comp_sequence_of_ff,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 2)),
                  s(:int, 2),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 3)),
                  s(:int, 3),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 4)),
                  s(:int, 4),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 5)),
                  s(:int, 5),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 6)),
                  s(:int, 6),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 7)),
                  s(:int, 7),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 8)),
                  s(:int, 8),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:send,
                    s(:str, "\xFF"), :*,
                    s(:int, 9)),
                  s(:int, 9),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:const, nil, :TWOCOMP), :|,
                    s(:const, nil, :BIG_ENDIAN)))))),
          s(:def, :test_unpack2comp_negative_single_byte,
            s(:args),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:int, -256),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x00"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -255),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x01"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -254),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x02"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -129),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x7F"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -128),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\x80"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -2),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\xFE"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))),
              s(:send, nil, :assert_equal,
                s(:int, -1),
                s(:send,
                  s(:const, nil, :Integer), :test_unpack,
                  s(:str, "\xFF"),
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 0),
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE)))))),
          s(:def, :test_unpack2comp_negative_zero,
            s(:args),
            s(:block,
              s(:send,
                s(:int, 0), :upto,
                s(:int, 100)),
              s(:args,
                s(:arg, :n)),
              s(:begin,
                s(:lvasgn, :str,
                  s(:send,
                    s(:str, "\x00"), :*,
                    s(:lvar, :n))),
                s(:lvasgn, :flags,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :BIG_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE))),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:int, 256), :**,
                        s(:lvar, :n))), :-@),
                  s(:send,
                    s(:const, nil, :Integer), :test_unpack,
                    s(:lvar, :str),
                    s(:lvar, :n),
                    s(:int, 1),
                    s(:int, 0),
                    s(:lvar, :flags))),
                s(:lvasgn, :flags,
                  s(:send,
                    s(:send,
                      s(:const, nil, :TWOCOMP), :|,
                      s(:const, nil, :LITTLE_ENDIAN)), :|,
                    s(:const, nil, :NEGATIVE))),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:int, 256), :**,
                        s(:lvar, :n))), :-@),
                  s(:send,
                    s(:const, nil, :Integer), :test_unpack,
                    s(:lvar, :str),
                    s(:lvar, :n),
                    s(:int, 1),
                    s(:int, 0),
                    s(:lvar, :flags)),
                  s(:dstr,
                    s(:str, "Integer.test_unpack("),
                    s(:begin,
                      s(:send,
                        s(:lvar, :str), :dump)),
                    s(:str, ", "),
                    s(:begin,
                      s(:lvar, :n)),
                    s(:str, ", 1, 0, "),
                    s(:begin,
                      s(:send,
                        s(:str, "%#x"), :%,
                        s(:lvar, :flags))),
                    s(:str, ")")))))))),
      s(:def, :test_numbits_2comp,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, -9), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, -8), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, -7), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, -6), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, -5), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, -4), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, -3), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, -2), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, -1), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 0), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 1), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, 2), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, 3), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, 4), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, 5), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, 6), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, 7), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, 8), :test_numbits_2comp_without_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, 9), :test_numbits_2comp_without_sign)))),
      s(:def, :test_numbytes_2comp,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 6),
            s(:send,
              s(:int, -549755813889), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send,
              s(:int, -549755813888), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send,
              s(:int, -2147483649), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, -2147483648), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, -8388609), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, -8388608), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, -32769), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, -32768), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, -129), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, -128), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, -1), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 0), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 1), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 127), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, 128), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:int, 32767), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, 32768), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:int, 8388607), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, 8388608), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:int, 2147483647), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send,
              s(:int, 2147483648), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send,
              s(:int, 549755813887), :test_numbytes_2comp_with_sign)),
          s(:send, nil, :assert_equal,
            s(:int, 6),
            s(:send,
              s(:int, 549755813888), :test_numbytes_2comp_with_sign)))))))
