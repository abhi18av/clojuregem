s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/symbol")),
  s(:module,
    s(:const, nil, :Test_Symbol),
    s(:class,
      s(:const, nil, :TestInadvertent),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :noninterned_name,
          s(:args,
            s(:optarg, :prefix,
              s(:str, ""))),
          s(:begin,
            s(:op_asgn,
              s(:lvasgn, :prefix), :+,
              s(:dstr,
                s(:str, "_"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Thread), :current), :object_id), :to_s,
                      s(:int, 36)), :tr,
                    s(:str, "-"),
                    s(:str, "_"))))),
            s(:while_post,
              s(:send,
                s(:const,
                  s(:const, nil, :Bug), :Symbol), :find,
                s(:lvar, :name)),
              s(:kwbegin,
                s(:lvasgn, :name,
                  s(:dstr,
                    s(:begin,
                      s(:lvar, :prefix)),
                    s(:str, "_"),
                    s(:begin,
                      s(:send,
                        s(:send, nil, :rand,
                          s(:int, 4096)), :to_s,
                        s(:int, 16))),
                    s(:str, "_"),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Time), :now), :usec)))))),
            s(:lvar, :name))),
        s(:def, :setup,
          s(:args),
          s(:ivasgn, :@obj,
            s(:send,
              s(:const, nil, :Object), :new))),
        s(:def, :assert_not_pinneddown,
          s(:args,
            s(:arg, :name),
            s(:optarg, :msg,
              s(:nil))),
          s(:send, nil, :assert_not_send,
            s(:array,
              s(:const,
                s(:const, nil, :Bug), :Symbol),
              s(:sym, :pinneddown?),
              s(:lvar, :name)),
            s(:lvar, :msg))),
        s(:def, :assert_not_interned,
          s(:args,
            s(:arg, :name),
            s(:optarg, :msg,
              s(:nil))),
          s(:send, nil, :assert_not_send,
            s(:array,
              s(:const,
                s(:const, nil, :Bug), :Symbol),
              s(:sym, :find),
              s(:lvar, :name)),
            s(:lvar, :msg))),
        s(:def, :assert_not_interned_error,
          s(:args,
            s(:arg, :obj),
            s(:arg, :meth),
            s(:arg, :name),
            s(:optarg, :msg,
              s(:nil)),
            s(:blockarg, :block)),
          s(:begin,
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :NameError),
                  s(:lvar, :msg)),
                s(:args),
                s(:send,
                  s(:lvar, :obj), :__send__,
                  s(:lvar, :meth),
                  s(:lvar, :name),
                  s(:block_pass,
                    s(:lvar, :block))))),
            s(:if,
              s(:send,
                s(:const, nil, :Symbol), :===,
                s(:lvar, :name)),
              s(:send, nil, :assert_not_pinneddown,
                s(:lvar, :name),
                s(:lvar, :msg)),
              s(:send, nil, :assert_not_interned,
                s(:lvar, :name),
                s(:lvar, :msg))),
            s(:lvar, :e))),
        s(:def, :assert_not_interned_false,
          s(:args,
            s(:arg, :obj),
            s(:arg, :meth),
            s(:arg, :name),
            s(:optarg, :msg,
              s(:nil))),
          s(:begin,
            s(:send, nil, :assert_not_send,
              s(:array,
                s(:lvar, :obj),
                s(:lvar, :meth),
                s(:lvar, :name)),
              s(:lvar, :msg)),
            s(:if,
              s(:send,
                s(:const, nil, :Symbol), :===,
                s(:lvar, :name)),
              s(:send, nil, :assert_not_pinneddown,
                s(:lvar, :name),
                s(:lvar, :msg)),
              s(:send, nil, :assert_not_interned,
                s(:lvar, :name),
                s(:lvar, :msg))))),
        s(:casgn, nil, :Feature5072,
          s(:str, "[ruby-core:38367]")),
        s(:def, :test_module_const_get,
          s(:args),
          s(:begin,
            s(:lvasgn, :cl,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "A"))),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :cl),
              s(:sym, :const_get),
              s(:lvar, :name),
              s(:const, nil, :Feature5072)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :cl),
              s(:sym, :const_get),
              s(:send,
                s(:lvar, :name), :to_sym)))),
        s(:def, :test_module_const_get_toplevel,
          s(:args),
          s(:begin,
            s(:lvasgn, :bug12089,
              s(:str, "[ruby-dev:49498] [Bug #12089]")),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "A"))),
            s(:lvasgn, :e,
              s(:send, nil, :assert_not_interned_error,
                s(:const, nil, :Object),
                s(:sym, :const_get),
                s(:lvar, :name))),
            s(:send, nil, :assert_equal,
              s(:lvar, :name),
              s(:send,
                s(:lvar, :e), :name)),
            s(:send, nil, :assert_not_match,
              s(:regexp,
                s(:str, "Object::"),
                s(:regopt)),
              s(:send,
                s(:lvar, :e), :message),
              s(:lvar, :bug12089)))),
        s(:def, :test_module_const_defined?,
          s(:args),
          s(:begin,
            s(:lvasgn, :cl,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "A"))),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :cl),
              s(:sym, :const_defined?),
              s(:lvar, :name),
              s(:const, nil, :Feature5072)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :cl),
              s(:sym, :const_defined?),
              s(:send,
                s(:lvar, :name), :to_sym)))),
        s(:def, :test_module_define_method_type_error,
          s(:args),
          s(:begin,
            s(:lvasgn, :cl,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :TypeError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :cl), :class_eval),
                s(:args),
                s(:send, nil, :define_method,
                  s(:lvar, :name),
                  s(:str, "")))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :TypeError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :cl), :class_eval),
                s(:args),
                s(:send, nil, :define_method,
                  s(:send,
                    s(:lvar, :name), :to_sym),
                  s(:str, "")))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_module_define_method_argument_error,
          s(:args),
          s(:begin,
            s(:lvasgn, :cl,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :cl), :class_eval),
                s(:args),
                s(:send, nil, :define_method,
                  s(:lvar, :name)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :cl), :class_eval),
                s(:args),
                s(:send, nil, :define_method,
                  s(:send,
                    s(:lvar, :name), :to_sym)))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_respond_to_missing,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5072,
              s(:const, nil, :Feature5072)),
            s(:lvasgn, :c,
              s(:block,
                s(:send,
                  s(:const, nil, :Class), :new),
                s(:args),
                s(:defs,
                  s(:self), :respond_to_missing?,
                  s(:args,
                    s(:restarg)),
                  s(:zsuper)))),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :method_defined?),
              s(:lvar, :s),
              s(:lvar, :feature5072)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :public_method_defined?),
              s(:lvar, :s),
              s(:lvar, :feature5072)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :private_method_defined?),
              s(:lvar, :s),
              s(:lvar, :feature5072)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :protected_method_defined?),
              s(:lvar, :s),
              s(:lvar, :feature5072)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :const_defined?),
              s(:send, nil, :noninterned_name,
                s(:str, "A")),
              s(:lvar, :feature5072)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :instance_variable_defined?),
              s(:send, nil, :noninterned_name,
                s(:str, "@")),
              s(:lvar, :feature5072)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :class_variable_defined?),
              s(:send, nil, :noninterned_name,
                s(:str, "@@")),
              s(:lvar, :feature5072)))),
        s(:def, :test_missing_method,
          s(:args),
          s(:begin,
            s(:lvasgn, :bug10985,
              s(:str, "[ruby-core:68564] [Bug #10985]")),
            s(:lvasgn, :m,
              s(:nil)),
            s(:lvasgn, :c,
              s(:block,
                s(:send,
                  s(:const, nil, :Class), :new),
                s(:args),
                s(:defs,
                  s(:self), :respond_to_missing?,
                  s(:args,
                    s(:restarg)),
                  s(:true)))),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :NameError),
                s(:lvar, :bug10985)),
              s(:args),
              s(:lvasgn, :m,
                s(:send,
                  s(:lvar, :c), :method,
                  s(:lvar, :s)))),
            s(:block,
              s(:send, nil, :assert_raise_with_message,
                s(:const, nil, :NoMethodError),
                s(:regexp,
                  s(:begin,
                    s(:lvar, :s)),
                  s(:regopt))),
              s(:args),
              s(:send,
                s(:lvar, :m), :call)),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :NameError),
                s(:lvar, :bug10985)),
              s(:args),
              s(:lvasgn, :m,
                s(:send,
                  s(:lvar, :c), :public_method,
                  s(:send,
                    s(:lvar, :s), :to_sym)))),
            s(:block,
              s(:send, nil, :assert_raise_with_message,
                s(:const, nil, :NoMethodError),
                s(:regexp,
                  s(:begin,
                    s(:lvar, :s)),
                  s(:regopt))),
              s(:args),
              s(:send,
                s(:lvar, :m), :call)),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :NameError),
                s(:lvar, :bug10985)),
              s(:args),
              s(:lvasgn, :m,
                s(:send,
                  s(:lvar, :c), :singleton_method,
                  s(:send,
                    s(:lvar, :s), :to_sym)))),
            s(:block,
              s(:send, nil, :assert_raise_with_message,
                s(:const, nil, :NoMethodError),
                s(:regexp,
                  s(:begin,
                    s(:lvar, :s)),
                  s(:regopt))),
              s(:args),
              s(:send,
                s(:lvar, :m), :call)))),
        s(:casgn, nil, :Feature5079,
          s(:str, "[ruby-core:38404]")),
        s(:def, :test_undefined_instance_variable,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5079,
              s(:const, nil, :Feature5079)),
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :iv,
              s(:send, nil, :noninterned_name,
                s(:str, "@"))),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :instance_variable_get),
              s(:lvar, :iv),
              s(:lvar, :feature5079)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :remove_instance_variable),
              s(:lvar, :iv),
              s(:lvar, :feature5079)))),
        s(:def, :test_undefined_class_variable,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5079,
              s(:const, nil, :Feature5079)),
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :cv,
              s(:send, nil, :noninterned_name,
                s(:str, "@@"))),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :class_variable_get),
              s(:lvar, :cv),
              s(:lvar, :feature5079)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :remove_class_variable),
              s(:lvar, :cv),
              s(:lvar, :feature5079)))),
        s(:def, :test_undefined_const,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5079,
              s(:const, nil, :Feature5079)),
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name,
                s(:str, "A"))),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :remove_const),
              s(:lvar, :s),
              s(:lvar, :feature5079)))),
        s(:def, :test_undefined_method,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5079,
              s(:const, nil, :Feature5079)),
            s(:lvasgn, :c,
              s(:send,
                s(:const, nil, :Class), :new)),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :method),
              s(:lvar, :s),
              s(:lvar, :feature5079)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :public_method),
              s(:lvar, :s),
              s(:lvar, :feature5079)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :instance_method),
              s(:lvar, :s),
              s(:lvar, :feature5079)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :public_instance_method),
              s(:lvar, :s),
              s(:lvar, :feature5079)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :singleton_method),
              s(:lvar, :s),
              s(:lvar, :feature5079)))),
        s(:casgn, nil, :Feature5089,
          s(:str, "[ruby-core:38447]")),
        s(:def, :test_const_missing,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5089,
              s(:const, nil, :Feature5089)),
            s(:lvasgn, :c,
              s(:block,
                s(:send,
                  s(:const, nil, :Class), :new),
                s(:args),
                s(:defs,
                  s(:self), :const_missing,
                  s(:args,
                    s(:arg, :const_name)),
                  s(:send, nil, :raise,
                    s(:const, nil, :NameError),
                    s(:send,
                      s(:lvar, :const_name), :to_s))))),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name,
                s(:str, "A"))),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :const_get),
              s(:send,
                s(:lvar, :s), :to_sym),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_false,
              s(:lvar, :c),
              s(:sym, :autoload?),
              s(:send,
                s(:lvar, :s), :to_sym),
              s(:lvar, :feature5089)))),
        s(:def, :test_aliased_method,
          s(:args),
          s(:begin,
            s(:lvasgn, :feature5089,
              s(:const, nil, :Feature5089)),
            s(:lvasgn, :c,
              s(:block,
                s(:send,
                  s(:const, nil, :Class), :new),
                s(:args),
                s(:defs,
                  s(:self), :alias_method,
                  s(:args,
                    s(:arg, :str)),
                  s(:super,
                    s(:sym, :puts),
                    s(:lvar, :str))))),
            s(:lvasgn, :s,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :alias_method),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :private_class_method),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :private_constant),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :private),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :protected),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :public),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :public_class_method),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :public_constant),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :remove_method),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :undef_method),
              s(:lvar, :s),
              s(:lvar, :feature5089)),
            s(:send, nil, :assert_not_interned_error,
              s(:lvar, :c),
              s(:sym, :untrace_var),
              s(:lvar, :s),
              s(:lvar, :feature5089)))),
        s(:casgn, nil, :Feature5112,
          s(:str, "[ruby-core:38576]")),
        s(:def, :test_public_send,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :NoMethodError)),
                s(:args),
                s(:send,
                  s(:ivar, :@obj), :public_send,
                  s(:lvar, :name),
                  s(:const, nil, :Feature5112)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:send, nil, :assert_equal,
              s(:lvar, :name),
              s(:send,
                s(:lvar, :e), :name)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:const, nil, :Feature5112)),
              s(:send,
                s(:lvar, :e), :args)))),
        s(:def, :test_send,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :NoMethodError)),
                s(:args),
                s(:send,
                  s(:ivar, :@obj), :send,
                  s(:lvar, :name),
                  s(:const, nil, :Feature5112)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:send, nil, :assert_equal,
              s(:lvar, :name),
              s(:send,
                s(:lvar, :e), :name)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:const, nil, :Feature5112)),
              s(:send,
                s(:lvar, :e), :args)))),
        s(:def, :test___send__,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:lvasgn, :e,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :NoMethodError)),
                s(:args),
                s(:send,
                  s(:ivar, :@obj), :__send__,
                  s(:lvar, :name),
                  s(:const, nil, :Feature5112)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:send, nil, :assert_equal,
              s(:lvar, :name),
              s(:send,
                s(:lvar, :e), :name)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:const, nil, :Feature5112)),
              s(:send,
                s(:lvar, :e), :args)))),
        s(:def, :test_thread_aref,
          s(:args),
          s(:begin,
            s(:send,
              s(:send,
                s(:const, nil, :Thread), :current), :[]=,
              s(:sym, :test),
              s(:nil)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:send,
                  s(:const, nil, :Thread), :current), :[],
                s(:lvar, :name))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_thread_key?,
          s(:args),
          s(:begin,
            s(:send,
              s(:send,
                s(:const, nil, :Thread), :current), :[]=,
              s(:sym, :test),
              s(:nil)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_not_send,
              s(:array,
                s(:send,
                  s(:const, nil, :Thread), :current),
                s(:sym, :key?),
                s(:lvar, :name))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_thread_variable_get,
          s(:args),
          s(:begin,
            s(:send,
              s(:send,
                s(:const, nil, :Thread), :current), :thread_variable_set,
              s(:sym, :test),
              s(:nil)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:send,
                  s(:const, nil, :Thread), :current), :thread_variable_get,
                s(:lvar, :name))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_thread_variable_set,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:send,
              s(:send,
                s(:const, nil, :Thread), :current), :thread_variable_set,
              s(:lvar, :name),
              s(:int, 42)),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_thread_variable?,
          s(:args),
          s(:begin,
            s(:send,
              s(:send,
                s(:const, nil, :Thread), :current), :thread_variable_set,
              s(:sym, :test),
              s(:nil)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:send, nil, :assert_not_send,
              s(:array,
                s(:send,
                  s(:const, nil, :Thread), :current),
                s(:sym, :thread_variable?),
                s(:lvar, :name))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_enumerable_inject_op,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NoMethodError)),
              s(:args),
              s(:send,
                s(:array,
                  s(:int, 1),
                  s(:int, 2)), :inject,
                s(:lvar, :name))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_module_const_set,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:lvasgn, :mod,
              s(:send,
                s(:const, nil, :Module), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :mod), :const_set,
                s(:lvar, :name),
                s(:true))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :mod), :const_set,
                s(:send,
                  s(:lvar, :name), :to_sym),
                s(:true))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_module_cvar_set,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:lvasgn, :mod,
              s(:send,
                s(:const, nil, :Module), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :mod), :class_variable_set,
                s(:lvar, :name),
                s(:true))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :mod), :class_variable_set,
                s(:send,
                  s(:lvar, :name), :to_sym),
                s(:true))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_object_ivar_set,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:lvasgn, :obj,
              s(:send,
                s(:const, nil, :Object), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :obj), :instance_variable_set,
                s(:lvar, :name),
                s(:true))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :obj), :instance_variable_set,
                s(:send,
                  s(:lvar, :name), :to_sym),
                s(:true))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_struct_new,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:const, nil, :Struct), :new,
                s(:lvar, :name))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_struct_aref,
          s(:args),
          s(:begin,
            s(:lvasgn, :s,
              s(:send,
                s(:send,
                  s(:const, nil, :Struct), :new,
                  s(:sym, :foo)), :new)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :s), :[],
                s(:lvar, :name))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_struct_aset,
          s(:args),
          s(:begin,
            s(:lvasgn, :s,
              s(:send,
                s(:send,
                  s(:const, nil, :Struct), :new,
                  s(:sym, :foo)), :new)),
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:send,
                s(:lvar, :s), :[]=,
                s(:lvar, :name),
                s(:true))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)))),
        s(:def, :test_invalid_attr,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "*"))),
            s(:lvasgn, :mod,
              s(:send,
                s(:const, nil, :Module), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr,
                  s(:lvar, :name)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr,
                  s(:send,
                    s(:lvar, :name), :to_sym)))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_invalid_attr_reader,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "*"))),
            s(:lvasgn, :mod,
              s(:send,
                s(:const, nil, :Module), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr_reader,
                  s(:lvar, :name)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr_reader,
                  s(:send,
                    s(:lvar, :name), :to_sym)))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_invalid_attr_writer,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "*"))),
            s(:lvasgn, :mod,
              s(:send,
                s(:const, nil, :Module), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr_writer,
                  s(:lvar, :name)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr_writer,
                  s(:send,
                    s(:lvar, :name), :to_sym)))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_invalid_attr_accessor,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:str, "*"))),
            s(:lvasgn, :mod,
              s(:send,
                s(:const, nil, :Module), :new)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr_accessor,
                  s(:lvar, :name)))),
            s(:send, nil, :assert_not_interned,
              s(:lvar, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NameError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :mod), :module_eval),
                s(:args),
                s(:send, nil, :attr_accessor,
                  s(:send,
                    s(:lvar, :name), :to_sym)))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_gc_attrset,
          s(:args),
          s(:send, nil, :assert_separately,
            s(:array,
              s(:str, "-r-test-/symbol"),
              s(:str, "-"),
              s(:str, "[ruby-core:62226] [Bug #9787]")),
            s(:dstr,
              s(:str, "      bug = ARGV.shift\n"),
              s(:str, "      def noninterned_name(prefix = \"\")\n"),
              s(:str, "        prefix += \"_\#{Thread.current.object_id.to_s(36).tr('-', '_')}\"\n"),
              s(:str, "        begin\n"),
              s(:str, "          name = \"\#{prefix}_\#{rand(0x1000).to_s(16)}_\#{Time.now.usec}\"\n"),
              s(:str, "        end while Bug::Symbol.find(name) or Bug::Symbol.find(name + \"=\")\n"),
              s(:str, "        name\n"),
              s(:str, "      end\n"),
              s(:str, "      names = Array.new(1000) {noninterned_name(\"gc\")}\n"),
              s(:str, "      names.each {|n| n.to_sym}\n"),
              s(:str, "      GC.start(immediate_sweep: false)\n"),
              s(:str, "      names.each do |n|\n"),
              s(:str, "        eval(\":\#{n}=\")\n"),
              s(:str, "        assert_nothing_raised(TypeError, bug) {eval(\"proc{self.\#{n} = nil}\")}\n"),
              s(:str, "      end\n")))),
        s(:def, :test_execopt_key,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send,
                s(:send, nil, :noninterned_name), :intern)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send, nil, :system,
                s(:str, "."),
                s(:hash,
                  s(:pair,
                    s(:lvar, :name),
                    s(:nil))))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_execopt_redirect_value,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send,
                s(:send, nil, :noninterned_name), :intern)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send, nil, :system,
                s(:str, "."),
                s(:hash,
                  s(:pair,
                    s(:array),
                    s(:lvar, :name))))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_execopt_redirect_path,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send,
                s(:send, nil, :noninterned_name), :intern)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :TypeError)),
              s(:args),
              s(:send, nil, :system,
                s(:str, "."),
                s(:hash,
                  s(:pair,
                    s(:array),
                    s(:array,
                      s(:lvar, :name),
                      s(:int, 0)))))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :test_execopt_redirect_symbol,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:send,
                s(:send, nil, :noninterned_name), :intern)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :ArgumentError)),
              s(:args),
              s(:send, nil, :system,
                s(:str, "."),
                s(:hash,
                  s(:pair,
                    s(:sym, :in),
                    s(:lvar, :name))))),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :assert_no_immortal_symbol_created,
          s(:args,
            s(:arg, :name)),
          s(:begin,
            s(:lvasgn, :name,
              s(:send, nil, :noninterned_name,
                s(:lvar, :name))),
            s(:yield,
              s(:lvar, :name)),
            s(:send, nil, :assert_not_pinneddown,
              s(:lvar, :name)))),
        s(:def, :assert_no_immortal_symbol_in_method_missing,
          s(:args,
            s(:arg, :name)),
          s(:block,
            s(:send, nil, :assert_no_immortal_symbol_created,
              s(:dstr,
                s(:str, "send should not leak - "),
                s(:begin,
                  s(:lvar, :name)))),
            s(:args,
              s(:arg, :name)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :NoMethodError)),
              s(:args),
              s(:yield,
                s(:lvar, :name))))),
        s(:def, :test_send_leak_string,
          s(:args),
          s(:block,
            s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
              s(:str, "str")),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:int, 42), :send,
              s(:lvar, :name)))),
        s(:def, :test_send_leak_symbol,
          s(:args),
          s(:block,
            s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
              s(:str, "sym")),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:int, 42), :send,
              s(:send,
                s(:lvar, :name), :to_sym)))),
        s(:def, :test_send_leak_string_custom_method_missing,
          s(:args),
          s(:begin,
            s(:lvasgn, :x,
              s(:send,
                s(:const, nil, :Object), :new)),
            s(:defs,
              s(:lvar, :x), :method_missing,
              s(:args,
                s(:restarg)),
              s(:zsuper)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
                s(:str, "str mm")),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:lvar, :x), :send,
                s(:lvar, :name))))),
        s(:def, :test_send_leak_symbol_custom_method_missing,
          s(:args),
          s(:begin,
            s(:lvasgn, :x,
              s(:send,
                s(:const, nil, :Object), :new)),
            s(:defs,
              s(:lvar, :x), :method_missing,
              s(:args,
                s(:restarg)),
              s(:zsuper)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
                s(:str, "sym mm")),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:lvar, :x), :send,
                s(:send,
                  s(:lvar, :name), :to_sym))))),
        s(:def, :test_send_leak_string_no_optimization,
          s(:args),
          s(:block,
            s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
              s(:str, "str slow")),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:send,
                s(:int, 42), :method,
                s(:sym, :send)), :call,
              s(:lvar, :name)))),
        s(:def, :test_send_leak_symbol_no_optimization,
          s(:args),
          s(:block,
            s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
              s(:str, "sym slow")),
            s(:args,
              s(:arg, :name)),
            s(:send,
              s(:send,
                s(:int, 42), :method,
                s(:sym, :send)), :call,
              s(:send,
                s(:lvar, :name), :to_sym)))),
        s(:def, :test_send_leak_string_custom_method_missing_no_optimization,
          s(:args),
          s(:begin,
            s(:lvasgn, :x,
              s(:send,
                s(:const, nil, :Object), :new)),
            s(:defs,
              s(:lvar, :x), :method_missing,
              s(:args,
                s(:restarg)),
              s(:zsuper)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
                s(:str, "str mm slow")),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:send,
                  s(:lvar, :x), :method,
                  s(:sym, :send)), :call,
                s(:lvar, :name))))),
        s(:def, :test_send_leak_symbol_custom_method_missing_no_optimization,
          s(:args),
          s(:begin,
            s(:lvasgn, :x,
              s(:send,
                s(:const, nil, :Object), :new)),
            s(:defs,
              s(:lvar, :x), :method_missing,
              s(:args,
                s(:restarg)),
              s(:zsuper)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_in_method_missing,
                s(:str, "sym mm slow")),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:send,
                  s(:lvar, :x), :method,
                  s(:sym, :send)), :call,
                s(:send,
                  s(:lvar, :name), :to_sym))))),
        s(:def, :test_kwarg_symbol_leak_no_rest,
          s(:args),
          s(:begin,
            s(:lvasgn, :foo,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:kwoptarg, :arg,
                    s(:int, 42))), nil)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_created,
                s(:str, "kwarg no rest")),
              s(:args,
                s(:arg, :name)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :ArgumentError)),
                s(:args),
                s(:send,
                  s(:lvar, :foo), :call,
                  s(:hash,
                    s(:pair,
                      s(:send,
                        s(:lvar, :name), :to_sym),
                      s(:int, 42)))))))),
        s(:def, :test_kwarg_symbol_leak_with_rest,
          s(:args),
          s(:begin,
            s(:lvasgn, :foo,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:kwoptarg, :arg,
                    s(:int, 2)),
                  s(:kwrestarg, :options)), nil)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_created,
                s(:str, "kwarg with rest")),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:lvar, :foo), :call,
                s(:hash,
                  s(:pair,
                    s(:send,
                      s(:lvar, :name), :to_sym),
                    s(:int, 42))))))),
        s(:def, :test_kwarg_symbol_leak_just_rest,
          s(:args),
          s(:begin,
            s(:lvasgn, :foo,
              s(:block,
                s(:send, nil, :lambda),
                s(:args,
                  s(:kwrestarg, :options)), nil)),
            s(:block,
              s(:send, nil, :assert_no_immortal_symbol_created,
                s(:str, "kwarg just rest")),
              s(:args,
                s(:arg, :name)),
              s(:send,
                s(:lvar, :foo), :call,
                s(:hash,
                  s(:pair,
                    s(:send,
                      s(:lvar, :name), :to_sym),
                    s(:int, 42)))))))))))
