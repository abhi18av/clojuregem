s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "-test-/class")),
  s(:class,
    s(:const, nil, :Test_Class),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:class,
      s(:const, nil, :Test_Class2Name),
      s(:send, nil, :superclass),
      s(:begin,
        s(:def, :test_toplevel_class,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Object"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Class), :class2name,
              s(:const,
                s(:cbase), :Object)))),
        s(:def, :test_toplevel_module,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Kernel"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Class), :class2name,
              s(:const,
                s(:cbase), :Kernel)))),
        s(:def, :test_singleton_class,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "Object"),
            s(:send,
              s(:const,
                s(:const, nil, :Bug), :Class), :class2name,
              s(:send,
                s(:send,
                  s(:const,
                    s(:cbase), :Object), :new), :singleton_class))))))))
