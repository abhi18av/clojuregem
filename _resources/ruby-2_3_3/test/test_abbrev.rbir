s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "abbrev")),
  s(:class,
    s(:const, nil, :TestAbbrev),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_abbrev,
        s(:args),
        s(:begin,
          s(:lvasgn, :words,
            s(:array,
              s(:str, "summer"),
              s(:str, "winter"),
              s(:str, "win"),
              s(:str, "ruby"),
              s(:str, "rules"))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:str, "rub"),
                s(:str, "ruby")),
              s(:pair,
                s(:str, "ruby"),
                s(:str, "ruby")),
              s(:pair,
                s(:str, "rul"),
                s(:str, "rules")),
              s(:pair,
                s(:str, "rule"),
                s(:str, "rules")),
              s(:pair,
                s(:str, "rules"),
                s(:str, "rules")),
              s(:pair,
                s(:str, "s"),
                s(:str, "summer")),
              s(:pair,
                s(:str, "su"),
                s(:str, "summer")),
              s(:pair,
                s(:str, "sum"),
                s(:str, "summer")),
              s(:pair,
                s(:str, "summ"),
                s(:str, "summer")),
              s(:pair,
                s(:str, "summe"),
                s(:str, "summer")),
              s(:pair,
                s(:str, "summer"),
                s(:str, "summer")),
              s(:pair,
                s(:str, "win"),
                s(:str, "win")),
              s(:pair,
                s(:str, "wint"),
                s(:str, "winter")),
              s(:pair,
                s(:str, "winte"),
                s(:str, "winter")),
              s(:pair,
                s(:str, "winter"),
                s(:str, "winter"))),
            s(:send,
              s(:lvar, :words), :abbrev)),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:str, "rub"),
                s(:str, "ruby")),
              s(:pair,
                s(:str, "ruby"),
                s(:str, "ruby")),
              s(:pair,
                s(:str, "rul"),
                s(:str, "rules")),
              s(:pair,
                s(:str, "rule"),
                s(:str, "rules")),
              s(:pair,
                s(:str, "rules"),
                s(:str, "rules"))),
            s(:send,
              s(:lvar, :words), :abbrev,
              s(:str, "ru"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :words), :abbrev),
            s(:send,
              s(:const, nil, :Abbrev), :abbrev,
              s(:lvar, :words))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :words), :abbrev,
              s(:str, "ru")),
            s(:send,
              s(:const, nil, :Abbrev), :abbrev,
              s(:lvar, :words),
              s(:str, "ru"))))),
      s(:def, :test_abbrev_lf,
        s(:args),
        s(:begin,
          s(:lvasgn, :words,
            s(:array,
              s(:str, "abc"),
              s(:str, "abc\nd"),
              s(:str, "de"))),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:str, "abc"),
                s(:str, "abc")),
              s(:pair,
                s(:str, "abc\n"),
                s(:str, "abc\nd")),
              s(:pair,
                s(:str, "abc\nd"),
                s(:str, "abc\nd")),
              s(:pair,
                s(:str, "d"),
                s(:str, "de")),
              s(:pair,
                s(:str, "de"),
                s(:str, "de"))),
            s(:send,
              s(:lvar, :words), :abbrev)),
          s(:send, nil, :assert_equal,
            s(:hash,
              s(:pair,
                s(:str, "d"),
                s(:str, "de")),
              s(:pair,
                s(:str, "de"),
                s(:str, "de"))),
            s(:send,
              s(:lvar, :words), :abbrev,
              s(:str, "d"))))))))
