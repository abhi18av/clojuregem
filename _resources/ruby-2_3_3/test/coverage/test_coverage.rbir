s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "coverage")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:if,
    s(:send,
      s(:const, nil, :ENV), :[],
      s(:str, "COVERAGE")), nil,
    s(:class,
      s(:const, nil, :TestCoverage),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :test_result_without_start,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send,
              s(:const, nil, :Coverage), :result))),
        s(:def, :test_peek_result_without_start,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :RuntimeError)),
            s(:args),
            s(:send,
              s(:const, nil, :Coverage), :peek_result))),
        s(:def, :test_result_with_nothing,
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :Coverage), :start),
            s(:lvasgn, :result,
              s(:send,
                s(:const, nil, :Coverage), :result)),
            s(:send, nil, :assert_kind_of,
              s(:const, nil, :Hash),
              s(:lvar, :result)),
            s(:block,
              s(:send,
                s(:lvar, :result), :each),
              s(:args,
                s(:arg, :key),
                s(:arg, :val)),
              s(:begin,
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :String),
                  s(:lvar, :key)),
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :Array),
                  s(:lvar, :val)))))),
        s(:def, :test_coverage_snapshot,
          s(:args),
          s(:ensure,
            s(:begin,
              s(:lvasgn, :loaded_features,
                s(:send,
                  s(:gvar, :$"), :dup)),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :mktmpdir),
                s(:args,
                  s(:arg, :tmp)),
                s(:block,
                  s(:send,
                    s(:const, nil, :Dir), :chdir,
                    s(:lvar, :tmp)),
                  s(:args),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:const, nil, :File), :open,
                        s(:str, "test.rb"),
                        s(:str, "w")),
                      s(:args,
                        s(:arg, :f)),
                      s(:send,
                        s(:lvar, :f), :puts,
                        s(:dstr,
                          s(:str, "            def coverage_test_method\n"),
                          s(:str, "              :ok\n"),
                          s(:str, "            end\n")))),
                    s(:send,
                      s(:const, nil, :Coverage), :start),
                    s(:send, nil, :require,
                      s(:send,
                        s(:lvar, :tmp), :+,
                        s(:str, "/test.rb"))),
                    s(:lvasgn, :cov,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Coverage), :peek_result), :[],
                        s(:send,
                          s(:lvar, :tmp), :+,
                          s(:str, "/test.rb")))),
                    s(:send, nil, :coverage_test_method),
                    s(:lvasgn, :cov2,
                      s(:send,
                        s(:send,
                          s(:const, nil, :Coverage), :peek_result), :[],
                        s(:send,
                          s(:lvar, :tmp), :+,
                          s(:str, "/test.rb")))),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:send,
                          s(:lvar, :cov), :[],
                          s(:int, 1)), :+,
                        s(:int, 1)),
                      s(:send,
                        s(:lvar, :cov2), :[],
                        s(:int, 1))),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :cov2),
                      s(:send,
                        s(:send,
                          s(:const, nil, :Coverage), :result), :[],
                        s(:send,
                          s(:lvar, :tmp), :+,
                          s(:str, "/test.rb")))))))),
            s(:send,
              s(:gvar, :$"), :replace,
              s(:lvar, :loaded_features)))),
        s(:def, :test_restarting_coverage,
          s(:args),
          s(:ensure,
            s(:begin,
              s(:lvasgn, :loaded_features,
                s(:send,
                  s(:gvar, :$"), :dup)),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :mktmpdir),
                s(:args,
                  s(:arg, :tmp)),
                s(:block,
                  s(:send,
                    s(:const, nil, :Dir), :chdir,
                    s(:lvar, :tmp)),
                  s(:args),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:const, nil, :File), :open,
                        s(:str, "test.rb"),
                        s(:str, "w")),
                      s(:args,
                        s(:arg, :f)),
                      s(:send,
                        s(:lvar, :f), :puts,
                        s(:dstr,
                          s(:str, "            def coverage_test_method\n"),
                          s(:str, "              :ok\n"),
                          s(:str, "            end\n")))),
                    s(:block,
                      s(:send,
                        s(:const, nil, :File), :open,
                        s(:str, "test2.rb"),
                        s(:str, "w")),
                      s(:args,
                        s(:arg, :f)),
                      s(:send,
                        s(:lvar, :f), :puts,
                        s(:dstr,
                          s(:str, "            def coverage_test_method2\n"),
                          s(:str, "              :ok\n"),
                          s(:str, "              :ok\n"),
                          s(:str, "            end\n")))),
                    s(:send,
                      s(:const, nil, :Coverage), :start),
                    s(:send, nil, :require,
                      s(:send,
                        s(:lvar, :tmp), :+,
                        s(:str, "/test.rb"))),
                    s(:send, nil, :assert_equal,
                      s(:int, 3),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Coverage), :result), :[],
                          s(:send,
                            s(:lvar, :tmp), :+,
                            s(:str, "/test.rb"))), :size)),
                    s(:send,
                      s(:const, nil, :Coverage), :start),
                    s(:send, nil, :coverage_test_method),
                    s(:send, nil, :assert_equal,
                      s(:int, 0),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Coverage), :result), :[],
                          s(:send,
                            s(:lvar, :tmp), :+,
                            s(:str, "/test.rb"))), :size)),
                    s(:send,
                      s(:const, nil, :Coverage), :start),
                    s(:send, nil, :require,
                      s(:send,
                        s(:lvar, :tmp), :+,
                        s(:str, "/test2.rb"))),
                    s(:send, nil, :assert_equal,
                      s(:int, 4),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Coverage), :result), :[],
                          s(:send,
                            s(:lvar, :tmp), :+,
                            s(:str, "/test2.rb"))), :size)))))),
            s(:send,
              s(:gvar, :$"), :replace,
              s(:lvar, :loaded_features)))),
        s(:def, :test_big_code,
          s(:args),
          s(:ensure,
            s(:begin,
              s(:lvasgn, :loaded_features,
                s(:send,
                  s(:gvar, :$"), :dup)),
              s(:block,
                s(:send,
                  s(:const, nil, :Dir), :mktmpdir),
                s(:args,
                  s(:arg, :tmp)),
                s(:block,
                  s(:send,
                    s(:const, nil, :Dir), :chdir,
                    s(:lvar, :tmp)),
                  s(:args),
                  s(:begin,
                    s(:block,
                      s(:send,
                        s(:const, nil, :File), :open,
                        s(:str, "test.rb"),
                        s(:str, "w")),
                      s(:args,
                        s(:arg, :f)),
                      s(:begin,
                        s(:send,
                          s(:lvar, :f), :puts,
                          s(:send,
                            s(:str, "__id__\n"), :*,
                            s(:int, 10000))),
                        s(:send,
                          s(:lvar, :f), :puts,
                          s(:str, "def ignore(x); end")),
                        s(:send,
                          s(:lvar, :f), :puts,
                          s(:str, "ignore([1")),
                        s(:send,
                          s(:lvar, :f), :puts,
                          s(:str, "])")))),
                    s(:send,
                      s(:const, nil, :Coverage), :start),
                    s(:send, nil, :require,
                      s(:send,
                        s(:lvar, :tmp), :+,
                        s(:str, "/test.rb"))),
                    s(:send, nil, :assert_equal,
                      s(:int, 10003),
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:const, nil, :Coverage), :result), :[],
                          s(:send,
                            s(:lvar, :tmp), :+,
                            s(:str, "/test.rb"))), :size)))))),
            s(:send,
              s(:gvar, :$"), :replace,
              s(:lvar, :loaded_features)))),
        s(:def, :test_nonpositive_linenumber,
          s(:args),
          s(:begin,
            s(:lvasgn, :bug12517,
              s(:str, "[ruby-core:76141] [Bug #12517]")),
            s(:send,
              s(:const, nil, :Coverage), :start),
            s(:block,
              s(:send, nil, :assert_nothing_raised,
                s(:const, nil, :ArgumentError),
                s(:lvar, :bug12517)),
              s(:args),
              s(:send,
                s(:const,
                  s(:const, nil, :RubyVM), :InstructionSequence), :compile,
                s(:str, ":ok"),
                s(:nil),
                s(:str, "<compiled>"),
                s(:int, 0))),
            s(:send, nil, :assert_include,
              s(:send,
                s(:const, nil, :Coverage), :result),
              s(:str, "<compiled>"))))))))
