s(:begin,
  s(:send, nil, :require,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:str, "../xref_test_case"),
      s(:str, "(string)"))),
  s(:class,
    s(:const, nil, :TestRDocExtend),
    s(:const, nil, :XrefTestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@ext,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "M1"),
              s(:str, "comment"))),
          s(:send,
            s(:ivar, :@ext), :parent=,
            s(:ivar, :@m1)),
          s(:send,
            s(:ivar, :@ext), :store=,
            s(:ivar, :@store)))),
      s(:def, :test_module,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@m1),
            s(:send,
              s(:ivar, :@ext), :module)),
          s(:send, nil, :assert_equal,
            s(:str, "Unknown"),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :Extend), :new,
                s(:str, "Unknown"),
                s(:str, "comment")), :module)))),
      s(:def, :test_module_extended,
        s(:args),
        s(:begin,
          s(:lvasgn, :m1,
            s(:send,
              s(:ivar, :@xref_data), :add_module,
              s(:const,
                s(:const, nil, :RDoc), :NormalModule),
              s(:str, "Mod1"))),
          s(:send,
            s(:lvar, :m1), :add_module,
            s(:const,
              s(:const, nil, :RDoc), :NormalModule),
            s(:str, "Mod3")),
          s(:lvasgn, :m1_m2,
            s(:send,
              s(:lvar, :m1), :add_module,
              s(:const,
                s(:const, nil, :RDoc), :NormalModule),
              s(:str, "Mod2"))),
          s(:lvasgn, :m1_m2_m3,
            s(:send,
              s(:lvar, :m1_m2), :add_module,
              s(:const,
                s(:const, nil, :RDoc), :NormalModule),
              s(:str, "Mod3"))),
          s(:send,
            s(:lvar, :m1_m2_m3), :add_module,
            s(:const,
              s(:const, nil, :RDoc), :NormalModule),
            s(:str, "Mod4")),
          s(:send,
            s(:lvar, :m1_m2), :add_module,
            s(:const,
              s(:const, nil, :RDoc), :NormalModule),
            s(:str, "Mod4")),
          s(:lvasgn, :m1_m2_k0,
            s(:send,
              s(:lvar, :m1_m2), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "Klass0"))),
          s(:lvasgn, :m1_m2_k0_m4,
            s(:send,
              s(:lvar, :m1_m2_k0), :add_module,
              s(:const,
                s(:const, nil, :RDoc), :NormalModule),
              s(:str, "Mod4"))),
          s(:send,
            s(:lvar, :m1_m2_k0_m4), :add_module,
            s(:const,
              s(:const, nil, :RDoc), :NormalModule),
            s(:str, "Mod6")),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_module,
            s(:const,
              s(:const, nil, :RDoc), :NormalModule),
            s(:str, "Mod5")),
          s(:lvasgn, :e0_m4,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod4"),
              s(:nil))),
          s(:lvasgn, :e0_m5,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod5"),
              s(:nil))),
          s(:lvasgn, :e0_m6,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod6"),
              s(:nil))),
          s(:lvasgn, :e0_m1,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod1"),
              s(:nil))),
          s(:lvasgn, :e0_m2,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod2"),
              s(:nil))),
          s(:lvasgn, :e0_m3,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod3"),
              s(:nil))),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_extend,
            s(:lvar, :e0_m4)),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_extend,
            s(:lvar, :e0_m5)),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_extend,
            s(:lvar, :e0_m6)),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_extend,
            s(:lvar, :e0_m1)),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_extend,
            s(:lvar, :e0_m2)),
          s(:send,
            s(:lvar, :m1_m2_k0), :add_extend,
            s(:lvar, :e0_m3)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :e0_m4),
              s(:lvar, :e0_m5),
              s(:lvar, :e0_m6),
              s(:lvar, :e0_m1),
              s(:lvar, :e0_m2),
              s(:lvar, :e0_m3)),
            s(:send,
              s(:lvar, :m1_m2_k0), :extends)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "Object")),
            s(:send,
              s(:lvar, :m1_m2_k0), :ancestors)),
          s(:lvasgn, :m1_k1,
            s(:send,
              s(:lvar, :m1), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "Klass1"))),
          s(:lvasgn, :e1_m1,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod1"),
              s(:nil))),
          s(:lvasgn, :e1_m2,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod2"),
              s(:nil))),
          s(:lvasgn, :e1_m3,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod3"),
              s(:nil))),
          s(:lvasgn, :e1_m4,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod4"),
              s(:nil))),
          s(:lvasgn, :e1_k0_m4,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Klass0::Mod4"),
              s(:nil))),
          s(:send,
            s(:lvar, :m1_k1), :add_extend,
            s(:lvar, :e1_m1)),
          s(:send,
            s(:lvar, :m1_k1), :add_extend,
            s(:lvar, :e1_m2)),
          s(:send,
            s(:lvar, :m1_k1), :add_extend,
            s(:lvar, :e1_m3)),
          s(:send,
            s(:lvar, :m1_k1), :add_extend,
            s(:lvar, :e1_m4)),
          s(:send,
            s(:lvar, :m1_k1), :add_extend,
            s(:lvar, :e1_k0_m4)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :e1_m1),
              s(:lvar, :e1_m2),
              s(:lvar, :e1_m3),
              s(:lvar, :e1_m4),
              s(:lvar, :e1_k0_m4)),
            s(:send,
              s(:lvar, :m1_k1), :extends)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "Object")),
            s(:send,
              s(:lvar, :m1_k1), :ancestors)),
          s(:lvasgn, :m1_k2,
            s(:send,
              s(:lvar, :m1), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "Klass2"))),
          s(:lvasgn, :e2_m1,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod1"),
              s(:nil))),
          s(:lvasgn, :e2_m2,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod2"),
              s(:nil))),
          s(:lvasgn, :e2_m3,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod3"),
              s(:nil))),
          s(:lvasgn, :e2_k0_m4,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Klass0::Mod4"),
              s(:nil))),
          s(:send,
            s(:lvar, :m1_k2), :add_extend,
            s(:lvar, :e2_m1)),
          s(:send,
            s(:lvar, :m1_k2), :add_extend,
            s(:lvar, :e2_m3)),
          s(:send,
            s(:lvar, :m1_k2), :add_extend,
            s(:lvar, :e2_m2)),
          s(:send,
            s(:lvar, :m1_k2), :add_extend,
            s(:lvar, :e2_k0_m4)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :e2_m1),
              s(:lvar, :e2_m3),
              s(:lvar, :e2_m2),
              s(:lvar, :e2_k0_m4)),
            s(:send,
              s(:lvar, :m1_k2), :extends)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "Object")),
            s(:send,
              s(:lvar, :m1_k2), :ancestors)),
          s(:lvasgn, :m1_k3,
            s(:send,
              s(:lvar, :m1), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "Klass3"))),
          s(:lvasgn, :e3_m1,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod1"),
              s(:nil))),
          s(:lvasgn, :e3_m2,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod2"),
              s(:nil))),
          s(:lvasgn, :e3_m4,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Extend), :new,
              s(:str, "Mod4"),
              s(:nil))),
          s(:send,
            s(:lvar, :m1_k3), :add_extend,
            s(:lvar, :e3_m1)),
          s(:send,
            s(:lvar, :m1_k3), :add_extend,
            s(:lvar, :e3_m2)),
          s(:send,
            s(:lvar, :m1_k3), :add_extend,
            s(:lvar, :e3_m4)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:lvar, :e3_m1),
              s(:lvar, :e3_m2),
              s(:lvar, :e3_m4)),
            s(:send,
              s(:lvar, :m1_k3), :extends)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "Object")),
            s(:send,
              s(:lvar, :m1_k3), :ancestors)))))))
