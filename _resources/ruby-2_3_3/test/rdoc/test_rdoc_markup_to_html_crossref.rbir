s(:begin,
  s(:send, nil, :require,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:str, "../xref_test_case"),
      s(:str, "(string)"))),
  s(:class,
    s(:const, nil, :TestRDocMarkupToHtmlCrossref),
    s(:const, nil, :XrefTestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:ivar, :@options), :hyperlink_all=,
            s(:true)),
          s(:ivasgn, :@to,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref), :new,
              s(:ivar, :@options),
              s(:str, "index.html"),
              s(:ivar, :@c1))))),
      s(:def, :test_convert_CROSSREF,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "C1"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html\">C1</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_CROSSREF_label,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "C1@foo"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#label-foo\">foo at C1</a>")),
            s(:lvar, :result)),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "C1#m@foo"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-i-m-label-foo\">foo at C1#m</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_CROSSREF_label_period,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "C1@foo."))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#label-foo\">foo at C1</a>.")),
            s(:lvar, :result)))),
      s(:def, :test_convert_CROSSREF_label_space,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "C1@foo+bar"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#label-foo+bar\">foo bar at C1</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_CROSSREF_section,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@c1), :add_section,
            s(:str, "Section")),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "C1@Section"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#Section\">Section at C1</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_RDOCLINK_rdoc_ref,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html\">C1</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_RDOCLINK_rdoc_ref_method,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1#m"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-i-m\">#m</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_RDOCLINK_rdoc_ref_method_label,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1#m@foo"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-i-m-label-foo\">foo at C1#m</a>")),
            s(:lvar, :result),
            s(:str, "rdoc-ref:C1#m@foo")))),
      s(:def, :test_convert_RDOCLINK_rdoc_ref_method_percent,
        s(:args),
        s(:begin,
          s(:lvasgn, :m,
            s(:send,
              s(:ivar, :@c1), :add_method,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :AnyMethod), :new,
                s(:nil),
                s(:str, "%")))),
          s(:send,
            s(:lvar, :m), :singleton=,
            s(:false)),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1#%"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-i-25\">#%</a>")),
            s(:lvar, :result)),
          s(:send,
            s(:lvar, :m), :singleton=,
            s(:true)),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1::%"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-c-25\">::%</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_RDOCLINK_rdoc_ref_method_percent_label,
        s(:args),
        s(:begin,
          s(:lvasgn, :m,
            s(:send,
              s(:ivar, :@c1), :add_method,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :AnyMethod), :new,
                s(:nil),
                s(:str, "%")))),
          s(:send,
            s(:lvar, :m), :singleton=,
            s(:false)),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1#%@f"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-i-25-label-f\">f at C1#%</a>")),
            s(:lvar, :result)),
          s(:send,
            s(:lvar, :m), :singleton=,
            s(:true)),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1::%@f"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#method-c-25-label-f\">f at C1::%</a>")),
            s(:lvar, :result)))),
      s(:def, :test_convert_RDOCLINK_rdoc_ref_label,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :convert,
              s(:str, "rdoc-ref:C1@foo"))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :para,
              s(:str, "<a href=\"C1.html#label-foo\">foo at C1</a>")),
            s(:lvar, :result),
            s(:str, "rdoc-ref:C1@foo")))),
      s(:def, :test_gen_url,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C1.html\">Some class</a>"),
            s(:send,
              s(:ivar, :@to), :gen_url,
              s(:str, "rdoc-ref:C1"),
              s(:str, "Some class"))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"http://example\">HTTP example</a>"),
            s(:send,
              s(:ivar, :@to), :gen_url,
              s(:str, "http://example"),
              s(:str, "HTTP example"))))),
      s(:def, :test_handle_special_CROSSREF,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "<a href=\"C2/C3.html\">C2::C3</a>"),
          s(:send, nil, :SPECIAL,
            s(:str, "C2::C3")))),
      s(:def, :test_handle_special_CROSSREF_label,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "<a href=\"C1.html#method-i-m-label-foo\">foo at C1#m</a>"),
          s(:send, nil, :SPECIAL,
            s(:str, "C1#m@foo")))),
      s(:def, :test_handle_special_CROSSREF_show_hash_false,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@to), :show_hash=,
            s(:false)),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C1.html#method-i-m\">m</a>"),
            s(:send, nil, :SPECIAL,
              s(:str, "#m"))))),
      s(:def, :test_handle_special_HYPERLINK_rdoc,
        s(:args),
        s(:begin,
          s(:lvasgn, :readme,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "README.txt"))),
          s(:send,
            s(:lvar, :readme), :parser=,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Parser), :Simple)),
          s(:ivasgn, :@to,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref), :new,
              s(:ivar, :@options),
              s(:str, "C2.html"),
              s(:ivar, :@c2))),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_HYPERLINK,
              s(:send, nil, :hyper,
                s(:str, "C2::C3")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C2/C3.html\">C2::C3</a>"),
            s(:lvar, :link)),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_HYPERLINK,
              s(:send, nil, :hyper,
                s(:str, "C4")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C4.html\">C4</a>"),
            s(:lvar, :link)),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_HYPERLINK,
              s(:send, nil, :hyper,
                s(:str, "README.txt")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"README_txt.html\">README.txt</a>"),
            s(:lvar, :link)))),
      s(:def, :test_handle_special_TIDYLINK_rdoc,
        s(:args),
        s(:begin,
          s(:lvasgn, :readme,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "README.txt"))),
          s(:send,
            s(:lvar, :readme), :parser=,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Parser), :Simple)),
          s(:ivasgn, :@to,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref), :new,
              s(:ivar, :@options),
              s(:str, "C2.html"),
              s(:ivar, :@c2))),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_TIDYLINK,
              s(:send, nil, :tidy,
                s(:str, "C2::C3")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C2/C3.html\">tidy</a>"),
            s(:lvar, :link)),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_TIDYLINK,
              s(:send, nil, :tidy,
                s(:str, "C4")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C4.html\">tidy</a>"),
            s(:lvar, :link)),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_TIDYLINK,
              s(:send, nil, :tidy,
                s(:str, "C1#m")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C1.html#method-i-m\">tidy</a>"),
            s(:lvar, :link)),
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_TIDYLINK,
              s(:send, nil, :tidy,
                s(:str, "README.txt")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"README_txt.html\">tidy</a>"),
            s(:lvar, :link)))),
      s(:def, :test_handle_special_TIDYLINK_label,
        s(:args),
        s(:begin,
          s(:lvasgn, :link,
            s(:send,
              s(:ivar, :@to), :handle_special_TIDYLINK,
              s(:send, nil, :tidy,
                s(:str, "C1#m@foo")))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C1.html#method-i-m-label-foo\">tidy</a>"),
            s(:lvar, :link),
            s(:str, "C1#m@foo")))),
      s(:def, :test_to_html_CROSSREF_email,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@options), :hyperlink_all=,
            s(:false)),
          s(:ivasgn, :@to,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref), :new,
              s(:ivar, :@options),
              s(:str, "index.html"),
              s(:ivar, :@c1))),
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :to_html,
              s(:str, "first.last@example.com"))),
          s(:send, nil, :assert_equal,
            s(:str, "first.last@example.com"),
            s(:lvar, :result)))),
      s(:def, :test_to_html_CROSSREF_email_hyperlink_all,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:send,
              s(:ivar, :@to), :to_html,
              s(:str, "first.last@example.com"))),
          s(:send, nil, :assert_equal,
            s(:str, "first.last@example.com"),
            s(:lvar, :result)))),
      s(:def, :test_link,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "n"),
            s(:send,
              s(:ivar, :@to), :link,
              s(:str, "n"),
              s(:str, "n"))),
          s(:send, nil, :assert_equal,
            s(:str, "<a href=\"C1.html#method-c-m\">::m</a>"),
            s(:send,
              s(:ivar, :@to), :link,
              s(:str, "m"),
              s(:str, "m"))))),
      s(:def, :test_link_class_method_full,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "<a href=\"Parent.html#method-c-m\">Parent.m</a>"),
          s(:send,
            s(:ivar, :@to), :link,
            s(:str, "Parent::m"),
            s(:str, "Parent::m")))),
      s(:def, :para,
        s(:args,
          s(:arg, :text)),
        s(:dstr,
          s(:str, "\n<p>"),
          s(:begin,
            s(:lvar, :text)),
          s(:str, "</p>\n"))),
      s(:def, :SPECIAL,
        s(:args,
          s(:arg, :text)),
        s(:send,
          s(:ivar, :@to), :handle_special_CROSSREF,
          s(:send, nil, :special,
            s(:lvar, :text)))),
      s(:def, :hyper,
        s(:args,
          s(:arg, :reference)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Special), :new,
          s(:int, 0),
          s(:dstr,
            s(:str, "rdoc-ref:"),
            s(:begin,
              s(:lvar, :reference))))),
      s(:def, :special,
        s(:args,
          s(:arg, :text)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Special), :new,
          s(:int, 0),
          s(:lvar, :text))),
      s(:def, :tidy,
        s(:args,
          s(:arg, :reference)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Markup), :Special), :new,
          s(:int, 0),
          s(:dstr,
            s(:str, "{tidy}[rdoc-ref:"),
            s(:begin,
              s(:lvar, :reference)),
            s(:str, "]")))))))
