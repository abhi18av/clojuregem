s(:begin,
  s(:send, nil, :require,
    s(:str, "rdoc/test_case")),
  s(:class,
    s(:const, nil, :TestRDocParserRd),
    s(:const,
      s(:const, nil, :RDoc), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@RP,
            s(:const,
              s(:const, nil, :RDoc), :Parser)),
          s(:ivasgn, :@tempfile,
            s(:send,
              s(:const, nil, :Tempfile), :new,
              s(:send,
                s(:send,
                  s(:self), :class), :name))),
          s(:lvasgn, :filename,
            s(:send,
              s(:ivar, :@tempfile), :path)),
          s(:ivasgn, :@top_level,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:lvar, :filename))),
          s(:ivasgn, :@fn,
            s(:lvar, :filename)),
          s(:ivasgn, :@options,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Options), :new)),
          s(:ivasgn, :@stats,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Stats), :new,
              s(:ivar, :@store),
              s(:int, 0))))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:ivar, :@tempfile), :close!))),
      s(:def, :test_file,
        s(:args),
        s(:send, nil, :assert_kind_of,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Parser), :Text),
          s(:send, nil, :util_parser,
            s(:str, "")))),
      s(:def, :test_class_can_parse,
        s(:args),
        s(:block,
          s(:send, nil, :temp_dir),
          s(:args),
          s(:begin,
            s(:send,
              s(:const, nil, :FileUtils), :touch,
              s(:str, "foo.rd")),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:ivar, :@RP), :RD),
              s(:send,
                s(:ivar, :@RP), :can_parse,
                s(:str, "foo.rd"))),
            s(:send,
              s(:const, nil, :FileUtils), :touch,
              s(:str, "foo.rd.ja")),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:ivar, :@RP), :RD),
              s(:send,
                s(:ivar, :@RP), :can_parse,
                s(:str, "foo.rd.ja")))))),
      s(:def, :test_scan,
        s(:args),
        s(:begin,
          s(:lvasgn, :parser,
            s(:send, nil, :util_parser,
              s(:str, "it ((*really*)) works"))),
          s(:lvasgn, :expected,
            s(:send, nil, :doc,
              s(:send, nil, :para,
                s(:str, "it <em>really</em> works")))),
          s(:send,
            s(:lvar, :expected), :file=,
            s(:ivar, :@top_level)),
          s(:send,
            s(:lvar, :parser), :scan),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:send,
                s(:ivar, :@top_level), :comment), :parse)))),
      s(:def, :util_parser,
        s(:args,
          s(:arg, :content)),
        s(:send,
          s(:const,
            s(:const,
              s(:const, nil, :RDoc), :Parser), :RD), :new,
          s(:ivar, :@top_level),
          s(:ivar, :@fn),
          s(:lvar, :content),
          s(:ivar, :@options),
          s(:ivar, :@stats))))))
