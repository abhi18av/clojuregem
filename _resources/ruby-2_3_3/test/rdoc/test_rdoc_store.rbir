s(:begin,
  s(:send, nil, :require,
    s(:send,
      s(:const, nil, :File), :expand_path,
      s(:str, "../xref_test_case"),
      s(:str, "(string)"))),
  s(:class,
    s(:const, nil, :TestRDocStore),
    s(:const, nil, :XrefTestCase),
    s(:begin,
      s(:casgn, nil, :OBJECT_ANCESTORS,
        s(:if,
          s(:defined?,
            s(:const,
              s(:cbase), :BasicObject)),
          s(:array,
            s(:str, "BasicObject")),
          s(:array))),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@tmpdir,
            s(:send,
              s(:const, nil, :File), :join,
              s(:send,
                s(:const, nil, :Dir), :tmpdir),
              s(:dstr,
                s(:str, "test_rdoc_ri_store_"),
                s(:begin,
                  s(:gvar, :$$))))),
          s(:ivasgn, :@s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:send,
            s(:ivar, :@s), :rdoc=,
            s(:ivar, :@rdoc)),
          s(:ivasgn, :@top_level,
            s(:send,
              s(:ivar, :@s), :add_file,
              s(:str, "file.rb"))),
          s(:ivasgn, :@page,
            s(:send,
              s(:ivar, :@s), :add_file,
              s(:str, "README.txt"))),
          s(:send,
            s(:ivar, :@page), :parser=,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Parser), :Simple)),
          s(:send,
            s(:ivar, :@page), :comment=,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Comment), :new,
              s(:str, "This is a page"),
              s(:ivar, :@page))),
          s(:ivasgn, :@klass,
            s(:send,
              s(:ivar, :@top_level), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "Object"))),
          s(:send,
            s(:ivar, :@klass), :add_comment,
            s(:str, "original"),
            s(:ivar, :@top_level)),
          s(:send,
            s(:ivar, :@klass), :record_location,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@cmeth,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :AnyMethod), :new,
              s(:nil),
              s(:str, "cmethod"))),
          s(:send,
            s(:ivar, :@cmeth), :singleton=,
            s(:true)),
          s(:send,
            s(:ivar, :@cmeth), :record_location,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@meth_comment,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Comment), :new,
              s(:str, "method comment"))),
          s(:send,
            s(:ivar, :@meth_comment), :location=,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@meth,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :AnyMethod), :new,
              s(:nil),
              s(:str, "method"))),
          s(:send,
            s(:ivar, :@meth), :record_location,
            s(:ivar, :@top_level)),
          s(:send,
            s(:ivar, :@meth), :comment=,
            s(:ivar, :@meth_comment)),
          s(:ivasgn, :@meth_bang,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :AnyMethod), :new,
              s(:nil),
              s(:str, "method!"))),
          s(:send,
            s(:ivar, :@meth_bang), :record_location,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@meth_bang_alias,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Alias), :new,
              s(:nil),
              s(:str, "method!"),
              s(:str, "method_bang"),
              s(:str, ""))),
          s(:send,
            s(:ivar, :@meth_bang_alias), :record_location,
            s(:ivar, :@top_level)),
          s(:send,
            s(:ivar, :@meth_bang), :add_alias,
            s(:ivar, :@meth_bang_alias),
            s(:ivar, :@klass)),
          s(:ivasgn, :@attr_comment,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Comment), :new,
              s(:str, "attribute comment"))),
          s(:send,
            s(:ivar, :@attr_comment), :location=,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@attr,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Attr), :new,
              s(:nil),
              s(:str, "attr"),
              s(:str, "RW"),
              s(:str, ""))),
          s(:send,
            s(:ivar, :@attr), :record_location,
            s(:ivar, :@top_level)),
          s(:send,
            s(:ivar, :@attr), :comment=,
            s(:ivar, :@attr_comment)),
          s(:send,
            s(:ivar, :@klass), :add_method,
            s(:ivar, :@cmeth)),
          s(:send,
            s(:ivar, :@klass), :add_method,
            s(:ivar, :@meth)),
          s(:send,
            s(:ivar, :@klass), :add_method,
            s(:ivar, :@meth_bang)),
          s(:send,
            s(:ivar, :@klass), :add_attribute,
            s(:ivar, :@attr)),
          s(:ivasgn, :@nest_klass,
            s(:send,
              s(:ivar, :@klass), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "SubClass"))),
          s(:ivasgn, :@nest_meth,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :AnyMethod), :new,
              s(:nil),
              s(:str, "method"))),
          s(:send,
            s(:ivar, :@nest_meth), :record_location,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@nest_incl,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Include), :new,
              s(:str, "Incl"),
              s(:str, ""))),
          s(:send,
            s(:ivar, :@nest_incl), :record_location,
            s(:ivar, :@top_level)),
          s(:send,
            s(:ivar, :@nest_klass), :add_method,
            s(:ivar, :@nest_meth)),
          s(:send,
            s(:ivar, :@nest_klass), :add_include,
            s(:ivar, :@nest_incl)),
          s(:ivasgn, :@mod,
            s(:send,
              s(:ivar, :@top_level), :add_module,
              s(:const,
                s(:const, nil, :RDoc), :NormalModule),
              s(:str, "Mod"))),
          s(:send,
            s(:ivar, :@mod), :record_location,
            s(:ivar, :@top_level)))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:ivar, :@tmpdir)))),
      s(:def, :assert_cache,
        s(:args,
          s(:arg, :imethods),
          s(:arg, :cmethods),
          s(:arg, :attrs),
          s(:arg, :modules),
          s(:optarg, :ancestors,
            s(:hash)),
          s(:optarg, :pages,
            s(:array)),
          s(:optarg, :main,
            s(:nil)),
          s(:optarg, :title,
            s(:nil))),
        s(:begin,
          s(:or_asgn,
            s(:lvasgn, :imethods),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "method"),
                  s(:str, "method!"),
                  s(:str, "method_bang"))))),
          s(:or_asgn,
            s(:lvasgn, :cmethods),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "cmethod"))))),
          s(:or_asgn,
            s(:lvasgn, :attrs),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "attr_accessor attr"))))),
          s(:send,
            s(:ivar, :@s), :clean_cache_collection,
            s(:lvar, :ancestors)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:lvar, :ancestors)),
              s(:pair,
                s(:sym, :attributes),
                s(:lvar, :attrs)),
              s(:pair,
                s(:sym, :class_methods),
                s(:lvar, :cmethods)),
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :encoding),
                s(:nil)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:lvar, :imethods)),
              s(:pair,
                s(:sym, :modules),
                s(:lvar, :modules)),
              s(:pair,
                s(:sym, :pages),
                s(:lvar, :pages)),
              s(:pair,
                s(:sym, :main),
                s(:lvar, :main)),
              s(:pair,
                s(:sym, :title),
                s(:lvar, :title)))),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :cache)))),
      s(:def, :test_add_c_enclosure,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :add_c_enclosure,
            s(:str, "cC1"),
            s(:ivar, :@c1)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "cC1"),
                s(:ivar, :@c1)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :c_enclosure_classes)))),
      s(:def, :test_add_c_variables,
        s(:args),
        s(:begin,
          s(:lvasgn, :options,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Options), :new)),
          s(:lvasgn, :c_file,
            s(:send,
              s(:ivar, :@s), :add_file,
              s(:str, "ext.c"))),
          s(:lvasgn, :some_ext,
            s(:send,
              s(:lvar, :c_file), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "SomeExt"))),
          s(:send,
            s(:lvar, :c_file), :add_class,
            s(:const,
              s(:const, nil, :RDoc), :SingleClass),
            s(:str, "SomeExtSingle")),
          s(:lvasgn, :c_parser,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Parser), :C), :new,
              s(:lvar, :c_file),
              s(:str, "ext.c"),
              s(:str, ""),
              s(:lvar, :options),
              s(:nil))),
          s(:send,
            s(:send,
              s(:lvar, :c_parser), :classes), :[]=,
            s(:str, "cSomeExt"),
            s(:lvar, :some_ext)),
          s(:send,
            s(:send,
              s(:lvar, :c_parser), :singleton_classes), :[]=,
            s(:str, "s_cSomeExt"),
            s(:str, "SomeExtSingle")),
          s(:send,
            s(:ivar, :@s), :add_c_variables,
            s(:lvar, :c_parser)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "ext.c"),
                s(:hash,
                  s(:pair,
                    s(:str, "cSomeExt"),
                    s(:str, "SomeExt")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :c_class_variables)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "ext.c"),
                s(:hash,
                  s(:pair,
                    s(:str, "s_cSomeExt"),
                    s(:str, "SomeExtSingle")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :c_singleton_class_variables)))),
      s(:def, :test_add_file,
        s(:args),
        s(:begin,
          s(:lvasgn, :top_level,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "file.rb"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :RDoc), :TopLevel),
            s(:lvar, :top_level)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@store),
            s(:send,
              s(:lvar, :top_level), :store)),
          s(:send, nil, :assert_equal,
            s(:str, "file.rb"),
            s(:send,
              s(:lvar, :top_level), :name)),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:ivar, :@store), :all_files),
            s(:lvar, :top_level)),
          s(:send, nil, :assert_same,
            s(:lvar, :top_level),
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "file.rb"))),
          s(:send, nil, :refute_same,
            s(:lvar, :top_level),
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "other.rb"))))),
      s(:def, :test_add_file_relative,
        s(:args),
        s(:begin,
          s(:lvasgn, :top_level,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "path/file.rb"),
              s(:str, "file.rb"))),
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const, nil, :RDoc), :TopLevel),
            s(:lvar, :top_level)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@store),
            s(:send,
              s(:lvar, :top_level), :store)),
          s(:send, nil, :assert_equal,
            s(:str, "path/file.rb"),
            s(:send,
              s(:lvar, :top_level), :absolute_name)),
          s(:send, nil, :assert_equal,
            s(:str, "file.rb"),
            s(:send,
              s(:lvar, :top_level), :relative_name)),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:ivar, :@store), :all_files),
            s(:lvar, :top_level)),
          s(:send, nil, :assert_same,
            s(:lvar, :top_level),
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "file.rb"))),
          s(:send, nil, :refute_same,
            s(:lvar, :top_level),
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "other.rb"))))),
      s(:def, :test_all_classes_and_modules,
        s(:args),
        s(:begin,
          s(:lvasgn, :expected,
            s(:array,
              s(:str, "C1"),
              s(:str, "C2"),
              s(:str, "C2::C3"),
              s(:str, "C2::C3::H1"),
              s(:str, "C3"),
              s(:str, "C3::H1"),
              s(:str, "C3::H2"),
              s(:str, "C4"),
              s(:str, "C4::C4"),
              s(:str, "C5"),
              s(:str, "C5::C1"),
              s(:str, "Child"),
              s(:str, "M1"),
              s(:str, "M1::M2"),
              s(:str, "Parent"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@store), :all_classes_and_modules), :map),
                s(:args,
                  s(:arg, :m)),
                s(:send,
                  s(:lvar, :m), :full_name)), :sort)))),
      s(:def, :test_all_files,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "xref_data.rb")),
          s(:send,
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@store), :all_files), :map),
              s(:args,
                s(:arg, :m)),
              s(:send,
                s(:lvar, :m), :full_name)), :sort))),
      s(:def, :test_all_modules,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "M1"),
            s(:str, "M1::M2")),
          s(:send,
            s(:block,
              s(:send,
                s(:send,
                  s(:ivar, :@store), :all_modules), :map),
              s(:args,
                s(:arg, :m)),
              s(:send,
                s(:lvar, :m), :full_name)), :sort))),
      s(:def, :test_attributes,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@s), :cache), :[],
              s(:sym, :attributes)), :[]=,
            s(:str, "Object"),
            s(:array,
              s(:str, "attr"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "attr"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :attributes)))),
      s(:def, :test_class_file,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri")),
            s(:send,
              s(:ivar, :@s), :class_file,
              s(:str, "Object"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass"),
              s(:str, "cdesc-SubClass.ri")),
            s(:send,
              s(:ivar, :@s), :class_file,
              s(:str, "Object::SubClass"))))),
      s(:def, :test_class_methods,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@s), :cache), :[],
              s(:sym, :class_methods)), :[]=,
            s(:str, "Object"),
            s(:array,
              s(:str, "method"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "method"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :class_methods)))),
      s(:def, :test_class_path,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object")),
            s(:send,
              s(:ivar, :@s), :class_path,
              s(:str, "Object"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass")),
            s(:send,
              s(:ivar, :@s), :class_path,
              s(:str, "Object::SubClass"))))),
      s(:def, :test_classes,
        s(:args),
        s(:begin,
          s(:lvasgn, :expected,
            s(:array,
              s(:str, "C1"),
              s(:str, "C2"),
              s(:str, "C2::C3"),
              s(:str, "C2::C3::H1"),
              s(:str, "C3"),
              s(:str, "C3::H1"),
              s(:str, "C3::H2"),
              s(:str, "C4"),
              s(:str, "C4::C4"),
              s(:str, "C5"),
              s(:str, "C5::C1"),
              s(:str, "Child"),
              s(:str, "Parent"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:block,
                s(:send,
                  s(:send,
                    s(:ivar, :@store), :all_classes), :map),
                s(:args,
                  s(:arg, :m)),
                s(:send,
                  s(:lvar, :m), :full_name)), :sort)))),
      s(:def, :test_complete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@c2), :add_module_alias,
            s(:ivar, :@c2_c3),
            s(:str, "A1"),
            s(:ivar, :@top_level)),
          s(:send,
            s(:ivar, :@store), :complete,
            s(:sym, :public)),
          s(:lvasgn, :a1,
            s(:send,
              s(:ivar, :@xref_data), :find_class_or_module,
              s(:str, "C2::A1"))),
          s(:send, nil, :assert_equal,
            s(:str, "C2::A1"),
            s(:send,
              s(:lvar, :a1), :full_name)),
          s(:send, nil, :refute_empty,
            s(:send,
              s(:lvar, :a1), :aliases)))),
      s(:def, :test_complete_nodoc,
        s(:args),
        s(:begin,
          s(:lvasgn, :c_nodoc,
            s(:send,
              s(:ivar, :@top_level), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "Nodoc"))),
          s(:send,
            s(:lvar, :c_nodoc), :record_location,
            s(:ivar, :@top_level)),
          s(:send,
            s(:lvar, :c_nodoc), :document_self=,
            s(:nil)),
          s(:send,
            s(:ivar, :@s), :complete,
            s(:sym, :nodoc)),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:send,
                s(:ivar, :@s), :classes_hash), :keys),
            s(:str, "Nodoc")))),
      s(:def, :test_find_c_enclosure,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@s), :find_c_enclosure,
              s(:str, "cC1"))),
          s(:send,
            s(:ivar, :@s), :add_c_enclosure,
            s(:str, "cC1"),
            s(:ivar, :@c1)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@c1),
            s(:send,
              s(:ivar, :@s), :find_c_enclosure,
              s(:str, "cC1"))))),
      s(:def, :test_find_c_enclosure_from_cache,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send,
            s(:send,
              s(:ivar, :@s), :classes_hash), :clear),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@s), :find_c_enclosure,
              s(:str, "cObject"))),
          s(:send,
            s(:send,
              s(:ivar, :@s), :c_enclosure_names), :[]=,
            s(:str, "cObject"),
            s(:str, "Object")),
          s(:lvasgn, :klass,
            s(:send,
              s(:ivar, :@s), :find_c_enclosure,
              s(:str, "cObject"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:lvar, :klass)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:lvar, :klass), :comment_location)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@top_level),
            s(:send,
              s(:lvar, :klass), :parent)),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:ivar, :@s), :c_enclosure_classes),
            s(:str, "cObject")))),
      s(:def, :test_find_c_enclosure_from_cache_legacy,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:ivar, :@klass), :in_files), :clear),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send,
            s(:send,
              s(:ivar, :@s), :classes_hash), :clear),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@s), :find_c_enclosure,
              s(:str, "cObject"))),
          s(:send,
            s(:send,
              s(:ivar, :@s), :c_enclosure_names), :[]=,
            s(:str, "cObject"),
            s(:str, "Object")),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@s), :find_c_enclosure,
              s(:str, "cObject"))))),
      s(:def, :test_find_class_named,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@c1),
            s(:send,
              s(:ivar, :@store), :find_class_named,
              s(:str, "C1"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@c2_c3),
            s(:send,
              s(:ivar, :@store), :find_class_named,
              s(:str, "C2::C3"))))),
      s(:def, :test_find_class_named_from,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@c5_c1),
            s(:send,
              s(:ivar, :@store), :find_class_named_from,
              s(:str, "C1"),
              s(:str, "C5"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@c1),
            s(:send,
              s(:ivar, :@store), :find_class_named_from,
              s(:str, "C1"),
              s(:str, "C4"))))),
      s(:def, :test_find_class_or_module,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@m1),
            s(:send,
              s(:ivar, :@store), :find_class_or_module,
              s(:str, "M1"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@c1),
            s(:send,
              s(:ivar, :@store), :find_class_or_module,
              s(:str, "C1"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@m1),
            s(:send,
              s(:ivar, :@store), :find_class_or_module,
              s(:str, "::M1"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@c1),
            s(:send,
              s(:ivar, :@store), :find_class_or_module,
              s(:str, "::C1"))))),
      s(:def, :test_find_file_named,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:ivar, :@xref_data),
          s(:send,
            s(:ivar, :@store), :find_file_named,
            s(:ivar, :@file_name)))),
      s(:def, :test_find_module_named,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:ivar, :@m1),
            s(:send,
              s(:ivar, :@store), :find_module_named,
              s(:str, "M1"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@m1_m2),
            s(:send,
              s(:ivar, :@store), :find_module_named,
              s(:str, "M1::M2"))))),
      s(:def, :test_find_text_page,
        s(:args),
        s(:begin,
          s(:lvasgn, :page,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "PAGE.txt"))),
          s(:send,
            s(:lvar, :page), :parser=,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Parser), :Simple)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@store), :find_text_page,
              s(:str, "no such page"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :page),
            s(:send,
              s(:ivar, :@store), :find_text_page,
              s(:str, "PAGE.txt"))))),
      s(:def, :test_friendly_path,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :path=,
            s(:ivar, :@tmpdir)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:nil)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@s), :path),
            s(:send,
              s(:ivar, :@s), :friendly_path)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :extra)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@s), :path),
            s(:send,
              s(:ivar, :@s), :friendly_path)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :system)),
          s(:send, nil, :assert_equal,
            s(:str, "ruby core"),
            s(:send,
              s(:ivar, :@s), :friendly_path)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :site)),
          s(:send, nil, :assert_equal,
            s(:str, "ruby site"),
            s(:send,
              s(:ivar, :@s), :friendly_path)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :home)),
          s(:send, nil, :assert_equal,
            s(:str, "~/.rdoc"),
            s(:send,
              s(:ivar, :@s), :friendly_path)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :gem)),
          s(:send,
            s(:ivar, :@s), :path=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@tmpdir)),
              s(:str, "/gem_repository/doc/gem_name-1.0/ri"))),
          s(:send, nil, :assert_equal,
            s(:str, "gem gem_name-1.0"),
            s(:send,
              s(:ivar, :@s), :friendly_path)))),
      s(:def, :test_dry_run,
        s(:args),
        s(:begin,
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@s), :dry_run)),
          s(:send,
            s(:ivar, :@s), :dry_run=,
            s(:true)),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@s), :dry_run)))),
      s(:def, :test_instance_methods,
        s(:args),
        s(:begin,
          s(:send,
            s(:send,
              s(:send,
                s(:ivar, :@s), :cache), :[],
              s(:sym, :instance_methods)), :[]=,
            s(:str, "Object"),
            s(:array,
              s(:str, "method"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "method"))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :instance_methods)))),
      s(:def, :test_load_all,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@tmpdir)),
          s(:send,
            s(:ivar, :@s), :save),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:send,
            s(:lvar, :s), :load_all),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@klass),
              s(:ivar, :@nest_klass)),
            s(:send,
              s(:send,
                s(:lvar, :s), :all_classes), :sort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@mod)),
            s(:send,
              s(:send,
                s(:lvar, :s), :all_modules), :sort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@page),
              s(:ivar, :@top_level)),
            s(:send,
              s(:send,
                s(:lvar, :s), :all_files), :sort)),
          s(:lvasgn, :methods,
            s(:send,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :s), :all_classes_and_modules), :map),
                  s(:args,
                    s(:arg, :mod)),
                  s(:send,
                    s(:lvar, :mod), :method_list)), :flatten), :sort)),
          s(:lvasgn, :_meth_bang_alias,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :AnyMethod), :new,
              s(:nil),
              s(:str, "method_bang"))),
          s(:send,
            s(:lvar, :_meth_bang_alias), :parent=,
            s(:ivar, :@klass)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@meth),
              s(:ivar, :@meth_bang),
              s(:lvar, :_meth_bang_alias),
              s(:ivar, :@nest_meth),
              s(:ivar, :@cmeth)),
            s(:block,
              s(:send,
                s(:lvar, :methods), :sort_by),
              s(:args,
                s(:arg, :m)),
              s(:send,
                s(:lvar, :m), :full_name))),
          s(:lvasgn, :method,
            s(:block,
              s(:send,
                s(:lvar, :methods), :find),
              s(:args,
                s(:arg, :m)),
              s(:send,
                s(:lvar, :m), :==,
                s(:ivar, :@meth)))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@meth_comment), :parse),
            s(:send,
              s(:lvar, :method), :comment)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:send,
                s(:lvar, :methods), :last), :parent)),
          s(:lvasgn, :attributes,
            s(:send,
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :s), :all_classes_and_modules), :map),
                  s(:args,
                    s(:arg, :mod)),
                  s(:send,
                    s(:lvar, :mod), :attributes)), :flatten), :sort)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:ivar, :@attr)),
            s(:lvar, :attributes)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@attr_comment), :parse),
            s(:send,
              s(:send,
                s(:lvar, :attributes), :first), :comment)))),
      s(:def, :test_load_cache,
        s(:args),
        s(:begin,
          s(:lvasgn, :cache,
            s(:hash,
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash,
                  s(:pair,
                    s(:str, "file.c"),
                    s(:hash,
                      s(:pair,
                        s(:str, "cKlass"),
                        s(:str, "Klass")))))),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash,
                  s(:pair,
                    s(:str, "file.c"),
                    s(:hash,
                      s(:pair,
                        s(:str, "sKlass"),
                        s(:str, "KlassSingle")))))),
              s(:pair,
                s(:sym, :encoding),
                s(:sym, :encoding_value)),
              s(:pair,
                s(:sym, :methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "Object#method"))))),
              s(:pair,
                s(:sym, :main),
                s(:send,
                  s(:ivar, :@page), :full_name)),
              s(:pair,
                s(:sym, :modules),
                s(:array,
                  s(:str, "Object"))),
              s(:pair,
                s(:sym, :pages),
                s(:array)))),
          s(:send,
            s(:const, nil, :Dir), :mkdir,
            s(:ivar, :@tmpdir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tmpdir),
                s(:str, "cache.ri")),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :cache),
              s(:lvar, :io))),
          s(:send,
            s(:ivar, :@s), :load_cache),
          s(:send, nil, :assert_equal,
            s(:lvar, :cache),
            s(:send,
              s(:ivar, :@s), :cache)),
          s(:send, nil, :assert_equal,
            s(:sym, :encoding_value),
            s(:send,
              s(:ivar, :@s), :encoding)),
          s(:send, nil, :assert_equal,
            s(:str, "README.txt"),
            s(:send,
              s(:ivar, :@s), :main)),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "file.c"),
                s(:hash,
                  s(:pair,
                    s(:str, "cKlass"),
                    s(:str, "Klass")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:send,
                s(:ivar, :@s), :cache), :[],
              s(:sym, :c_class_variables))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "file.c"),
                s(:hash,
                  s(:pair,
                    s(:str, "sKlass"),
                    s(:str, "KlassSingle")))))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:send,
                s(:ivar, :@s), :cache), :[],
              s(:sym, :c_singleton_class_variables))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:str, "cKlass"),
                s(:str, "Klass")))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :c_enclosure_names)))),
      s(:def, :test_load_cache_encoding_differs,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Object), :const_defined?,
              s(:sym, :Encoding)), nil,
            s(:send, nil, :skip,
              s(:str, "Encoding not implemented"))),
          s(:lvasgn, :cache,
            s(:hash,
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :encoding),
                s(:const,
                  s(:const, nil, :Encoding), :ISO_8859_1)),
              s(:pair,
                s(:sym, :main),
                s(:nil)),
              s(:pair,
                s(:sym, :methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "Object#method"))))),
              s(:pair,
                s(:sym, :modules),
                s(:array,
                  s(:str, "Object"))),
              s(:pair,
                s(:sym, :pages),
                s(:array)))),
          s(:send,
            s(:const, nil, :Dir), :mkdir,
            s(:ivar, :@tmpdir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tmpdir),
                s(:str, "cache.ri")),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :cache),
              s(:lvar, :io))),
          s(:send,
            s(:ivar, :@s), :encoding=,
            s(:const,
              s(:const, nil, :Encoding), :UTF_8)),
          s(:send,
            s(:ivar, :@s), :load_cache),
          s(:send, nil, :assert_equal,
            s(:lvar, :cache),
            s(:send,
              s(:ivar, :@s), :cache)),
          s(:send, nil, :assert_equal,
            s(:const,
              s(:const, nil, :Encoding), :UTF_8),
            s(:send,
              s(:ivar, :@s), :encoding)))),
      s(:def, :test_load_cache_no_cache,
        s(:args),
        s(:begin,
          s(:lvasgn, :cache,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:hash)),
              s(:pair,
                s(:sym, :attributes),
                s(:hash)),
              s(:pair,
                s(:sym, :class_methods),
                s(:hash)),
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :encoding),
                s(:nil)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:hash)),
              s(:pair,
                s(:sym, :main),
                s(:nil)),
              s(:pair,
                s(:sym, :modules),
                s(:array)),
              s(:pair,
                s(:sym, :pages),
                s(:array)),
              s(:pair,
                s(:sym, :title),
                s(:nil)))),
          s(:send,
            s(:ivar, :@s), :load_cache),
          s(:send, nil, :assert_equal,
            s(:lvar, :cache),
            s(:send,
              s(:ivar, :@s), :cache)))),
      s(:def, :test_load_cache_legacy,
        s(:args),
        s(:begin,
          s(:lvasgn, :cache,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:hash)),
              s(:pair,
                s(:sym, :attributes),
                s(:hash)),
              s(:pair,
                s(:sym, :class_methods),
                s(:hash)),
              s(:pair,
                s(:sym, :encoding),
                s(:sym, :encoding_value)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "Object#method"))))),
              s(:pair,
                s(:sym, :modules),
                s(:array,
                  s(:str, "Object"))))),
          s(:send,
            s(:const, nil, :Dir), :mkdir,
            s(:ivar, :@tmpdir)),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tmpdir),
                s(:str, "cache.ri")),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:const, nil, :Marshal), :dump,
              s(:lvar, :cache),
              s(:lvar, :io))),
          s(:send,
            s(:ivar, :@s), :load_cache),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:hash)),
              s(:pair,
                s(:sym, :attributes),
                s(:hash)),
              s(:pair,
                s(:sym, :class_methods),
                s(:hash)),
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :encoding),
                s(:sym, :encoding_value)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "Object#method"))))),
              s(:pair,
                s(:sym, :main),
                s(:nil)),
              s(:pair,
                s(:sym, :modules),
                s(:array,
                  s(:str, "Object"))),
              s(:pair,
                s(:sym, :pages),
                s(:array)))),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:ivar, :@s), :cache)),
          s(:send, nil, :assert_equal,
            s(:sym, :encoding_value),
            s(:send,
              s(:ivar, :@s), :encoding)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@s), :main)))),
      s(:def, :test_load_class,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send,
            s(:send,
              s(:ivar, :@s), :classes_hash), :clear),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:ivar, :@s), :load_class,
              s(:str, "Object"))),
          s(:send, nil, :assert_includes,
            s(:send,
              s(:ivar, :@s), :classes_hash),
            s(:str, "Object")))),
      s(:def, :test_load_method,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth_bang)),
          s(:lvasgn, :meth,
            s(:send,
              s(:ivar, :@s), :load_method,
              s(:str, "Object"),
              s(:str, "#method!"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@meth_bang),
            s(:lvar, :meth)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:lvar, :meth), :parent)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@s),
            s(:send,
              s(:lvar, :meth), :store)))),
      s(:def, :test_load_method_legacy,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:lvasgn, :file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth), :full_name))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :file),
              s(:str, "wb")),
            s(:args,
              s(:arg, :io)),
            s(:send,
              s(:lvar, :io), :write,
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:str, "\u0004\bU:\u0014RDoc::AnyMethod[\u000Fi\u0000I"), :+,
                              s(:str, "\"\vmethod\u0006:\u0006EF\"\u0011Klass#method0:\vpublic")), :+,
                            s(:str, "o:\eRDoc::Markup::Document\u0006:\v@parts[\u0006")), :+,
                          s(:str, "o:\u001CRDoc::Markup::Paragraph\u0006;\t[\u0006I")), :+,
                        s(:str, "\"\u0016this is a comment\u0006;\u0006FI")), :+,
                      s(:str, "\"\rcall_seq\u0006;\u0006FI\"\u000Fsome_block\u0006;\u0006F")), :+,
                    s(:str, "[\u0006[\aI\"\faliased\u0006;\u0006Fo;\b\u0006;\t[\u0006")), :+,
                  s(:str, "o;\n\u0006;\t[\u0006I\"\u0012alias comment\u0006;\u0006FI")), :+,
                s(:str, "\"\nparam\u0006;\u0006F")))),
          s(:lvasgn, :meth,
            s(:send,
              s(:ivar, :@s), :load_method,
              s(:str, "Object"),
              s(:str, "#method"))),
          s(:send, nil, :assert_equal,
            s(:str, "Klass#method"),
            s(:send,
              s(:lvar, :meth), :full_name)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:lvar, :meth), :parent)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@s),
            s(:send,
              s(:lvar, :meth), :store)))),
      s(:def, :test_load_page,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_page,
            s(:ivar, :@page)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@page),
            s(:send,
              s(:ivar, :@s), :load_page,
              s(:str, "README.txt"))))),
      s(:def, :test_main,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:ivar, :@s), :main)),
          s(:send,
            s(:ivar, :@s), :main=,
            s(:str, "README.txt")),
          s(:send, nil, :assert_equal,
            s(:str, "README.txt"),
            s(:send,
              s(:ivar, :@s), :main)))),
      s(:def, :test_method_file,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "method-i.ri")),
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:str, "Object"),
              s(:str, "Object#method"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "method%21-i.ri")),
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:str, "Object"),
              s(:str, "Object#method!"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass"),
              s(:str, "method%21-i.ri")),
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:str, "Object::SubClass"),
              s(:str, "Object::SubClass#method!"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "method-c.ri")),
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:str, "Object"),
              s(:str, "Object::method"))))),
      s(:def, :test_module_names,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "Object")),
            s(:send,
              s(:ivar, :@s), :module_names)))),
      s(:def, :test_page,
        s(:args),
        s(:begin,
          s(:lvasgn, :page,
            s(:send,
              s(:ivar, :@store), :add_file,
              s(:str, "PAGE.txt"))),
          s(:send,
            s(:lvar, :page), :parser=,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Parser), :Simple)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:ivar, :@store), :page,
              s(:str, "no such page"))),
          s(:send, nil, :assert_equal,
            s(:lvar, :page),
            s(:send,
              s(:ivar, :@store), :page,
              s(:str, "PAGE"))))),
      s(:def, :test_save,
        s(:args),
        s(:begin,
          s(:send,
            s(:const, nil, :FileUtils), :mkdir_p,
            s(:ivar, :@tmpdir)),
          s(:send,
            s(:ivar, :@s), :save),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "method-i.ri"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "page-README_txt.ri"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "cache.ri"))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:hash,
                  s(:pair,
                    s(:str, "Object::SubClass"),
                    s(:array,
                      s(:str, "Incl"),
                      s(:str, "Object"))))),
              s(:pair,
                s(:sym, :attributes),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "attr_accessor attr"))))),
              s(:pair,
                s(:sym, :class_methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "cmethod"))))),
              s(:pair,
                s(:sym, :c_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:hash)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "attr"),
                      s(:str, "method"),
                      s(:str, "method!"),
                      s(:str, "method_bang"))),
                  s(:pair,
                    s(:str, "Object::SubClass"),
                    s(:array,
                      s(:str, "method"))))),
              s(:pair,
                s(:sym, :main),
                s(:nil)),
              s(:pair,
                s(:sym, :modules),
                s(:array,
                  s(:str, "Mod"),
                  s(:str, "Object"),
                  s(:str, "Object::SubClass"))),
              s(:pair,
                s(:sym, :encoding),
                s(:nil)),
              s(:pair,
                s(:sym, :pages),
                s(:array,
                  s(:str, "README.txt"))),
              s(:pair,
                s(:sym, :title),
                s(:nil)))),
          s(:if,
            s(:defined?,
              s(:const,
                s(:cbase), :BasicObject)),
            s(:send,
              s(:send,
                s(:lvar, :expected), :[],
                s(:sym, :ancestors)), :[]=,
              s(:str, "Object"),
              s(:array,
                s(:str, "BasicObject"))), nil),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tmpdir),
                s(:str, "cache.ri")),
              s(:str, "rb")),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:lvasgn, :cache,
                s(:send,
                  s(:const, nil, :Marshal), :load,
                  s(:send,
                    s(:lvar, :io), :read))),
              s(:send, nil, :assert_equal,
                s(:lvar, :expected),
                s(:lvar, :cache)))))),
      s(:def, :test_save_cache,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@cmeth)),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@nest_klass)),
          s(:send,
            s(:ivar, :@s), :save_page,
            s(:ivar, :@page)),
          s(:send,
            s(:ivar, :@s), :encoding=,
            s(:sym, :encoding_value)),
          s(:send,
            s(:ivar, :@s), :main=,
            s(:send,
              s(:ivar, :@page), :full_name)),
          s(:send,
            s(:ivar, :@s), :title=,
            s(:str, "title")),
          s(:lvasgn, :options,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Options), :new)),
          s(:lvasgn, :c_file,
            s(:send,
              s(:ivar, :@s), :add_file,
              s(:str, "ext.c"))),
          s(:lvasgn, :some_ext,
            s(:send,
              s(:lvar, :c_file), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "SomeExt"))),
          s(:send,
            s(:lvar, :c_file), :add_class,
            s(:const,
              s(:const, nil, :RDoc), :SingleClass),
            s(:str, "SomeExtSingle")),
          s(:lvasgn, :c_parser,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Parser), :C), :new,
              s(:lvar, :c_file),
              s(:str, "ext.c"),
              s(:str, ""),
              s(:lvar, :options),
              s(:nil))),
          s(:send,
            s(:send,
              s(:lvar, :c_parser), :classes), :[]=,
            s(:str, "cSomeExt"),
            s(:lvar, :some_ext)),
          s(:send,
            s(:send,
              s(:lvar, :c_parser), :singleton_classes), :[]=,
            s(:str, "s_cSomeExt"),
            s(:str, "SomeExtSingle")),
          s(:send,
            s(:ivar, :@s), :add_c_variables,
            s(:lvar, :c_parser)),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "cache.ri"))),
          s(:lvasgn, :c_class_variables,
            s(:hash,
              s(:pair,
                s(:str, "ext.c"),
                s(:hash,
                  s(:pair,
                    s(:str, "cSomeExt"),
                    s(:str, "SomeExt")))))),
          s(:lvasgn, :c_singleton_class_variables,
            s(:hash,
              s(:pair,
                s(:str, "ext.c"),
                s(:hash,
                  s(:pair,
                    s(:str, "s_cSomeExt"),
                    s(:str, "SomeExtSingle")))))),
          s(:lvasgn, :expected,
            s(:hash,
              s(:pair,
                s(:sym, :ancestors),
                s(:hash,
                  s(:pair,
                    s(:str, "Object::SubClass"),
                    s(:array,
                      s(:str, "Incl"),
                      s(:str, "Object"))))),
              s(:pair,
                s(:sym, :attributes),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "attr_accessor attr"))))),
              s(:pair,
                s(:sym, :class_methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "cmethod"))))),
              s(:pair,
                s(:sym, :c_class_variables),
                s(:lvar, :c_class_variables)),
              s(:pair,
                s(:sym, :c_singleton_class_variables),
                s(:lvar, :c_singleton_class_variables)),
              s(:pair,
                s(:sym, :instance_methods),
                s(:hash,
                  s(:pair,
                    s(:str, "Object"),
                    s(:array,
                      s(:str, "method"),
                      s(:str, "method!"),
                      s(:str, "method_bang"))),
                  s(:pair,
                    s(:str, "Object::SubClass"),
                    s(:array,
                      s(:str, "method"))))),
              s(:pair,
                s(:sym, :main),
                s(:send,
                  s(:ivar, :@page), :full_name)),
              s(:pair,
                s(:sym, :modules),
                s(:array,
                  s(:str, "Object"),
                  s(:str, "Object::SubClass"))),
              s(:pair,
                s(:sym, :encoding),
                s(:sym, :encoding_value)),
              s(:pair,
                s(:sym, :pages),
                s(:array,
                  s(:str, "README.txt"))),
              s(:pair,
                s(:sym, :title),
                s(:str, "title")))),
          s(:if,
            s(:defined?,
              s(:const,
                s(:cbase), :BasicObject)),
            s(:send,
              s(:send,
                s(:lvar, :expected), :[],
                s(:sym, :ancestors)), :[]=,
              s(:str, "Object"),
              s(:array,
                s(:str, "BasicObject"))), nil),
          s(:block,
            s(:send, nil, :open,
              s(:send,
                s(:const, nil, :File), :join,
                s(:ivar, :@tmpdir),
                s(:str, "cache.ri")),
              s(:str, "rb")),
            s(:args,
              s(:arg, :io)),
            s(:begin,
              s(:lvasgn, :cache,
                s(:send,
                  s(:const, nil, :Marshal), :load,
                  s(:send,
                    s(:lvar, :io), :read))),
              s(:send, nil, :assert_equal,
                s(:lvar, :expected),
                s(:lvar, :cache)))))),
      s(:def, :test_save_cache_dry_run,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :dry_run=,
            s(:true)),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@cmeth)),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@nest_klass)),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:send, nil, :refute_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "cache.ri"))))),
      s(:def, :test_save_cache_duplicate_methods,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:send, nil, :assert_cache,
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "method")))),
            s(:hash),
            s(:hash),
            s(:array)))),
      s(:def, :test_save_cache_duplicate_pages,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_page,
            s(:ivar, :@page)),
          s(:send,
            s(:ivar, :@s), :save_page,
            s(:ivar, :@page)),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:send, nil, :assert_cache,
            s(:hash),
            s(:hash),
            s(:hash),
            s(:array),
            s(:hash),
            s(:array,
              s(:str, "README.txt"))))),
      s(:def, :test_save_class,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri"))),
          s(:send, nil, :assert_cache,
            s(:nil),
            s(:nil),
            s(:nil),
            s(:array,
              s(:str, "Object")),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:const, nil, :OBJECT_ANCESTORS)))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:ivar, :@s), :load_class,
              s(:str, "Object"))))),
      s(:def, :test_save_class_basic_object,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@klass), :instance_variable_set,
            s(:sym, :@superclass),
            s(:nil)),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri"))),
          s(:send, nil, :assert_cache,
            s(:nil),
            s(:nil),
            s(:nil),
            s(:array,
              s(:str, "Object"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:ivar, :@s), :load_class,
              s(:str, "Object"))))),
      s(:def, :test_save_class_delete,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth_bang)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@cmeth)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@attr)),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:lvasgn, :klass,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass), :new,
              s(:str, "Object"))),
          s(:lvasgn, :meth,
            s(:send,
              s(:lvar, :klass), :add_method,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :AnyMethod), :new,
                s(:nil),
                s(:str, "replace")))),
          s(:send,
            s(:lvar, :meth), :record_location,
            s(:ivar, :@top_level)),
          s(:ivasgn, :@s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:send,
            s(:ivar, :@s), :load_cache),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:lvar, :klass)),
          s(:send,
            s(:ivar, :@s), :save_cache),
          s(:ivasgn, :@s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:send,
            s(:ivar, :@s), :load_cache),
          s(:send,
            s(:ivar, :@s), :load_class,
            s(:str, "Object")),
          s(:send, nil, :assert_cache,
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "replace")))),
            s(:hash),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "attr_accessor attr")))),
            s(:array,
              s(:str, "Object")),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:const, nil, :OBJECT_ANCESTORS)))),
          s(:send, nil, :refute_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth), :full_name))),
          s(:send, nil, :refute_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth_bang), :full_name))),
          s(:send, nil, :refute_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@cmeth), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@attr), :full_name))))),
      s(:def, :test_save_class_dry_run,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :dry_run=,
            s(:true)),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send, nil, :refute_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :refute_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri"))))),
      s(:def, :test_save_class_loaded,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@attr), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@cmeth), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:ivar, :@s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth_bang), :full_name))),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Store), :new,
              s(:send,
                s(:ivar, :@s), :path))),
          s(:send,
            s(:lvar, :s), :load_cache),
          s(:lvasgn, :loaded,
            s(:send,
              s(:lvar, :s), :load_class,
              s(:str, "Object"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:lvar, :loaded)),
          s(:send,
            s(:lvar, :s), :save_class,
            s(:lvar, :loaded)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Store), :new,
              s(:send,
                s(:ivar, :@s), :path))),
          s(:send,
            s(:lvar, :s), :load_cache),
          s(:lvasgn, :reloaded,
            s(:send,
              s(:lvar, :s), :load_class,
              s(:str, "Object"))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:lvar, :reloaded)),
          s(:send, nil, :assert_file,
            s(:send,
              s(:lvar, :s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@attr), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:lvar, :s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@cmeth), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:lvar, :s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth), :full_name))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:lvar, :s), :method_file,
              s(:send,
                s(:ivar, :@klass), :full_name),
              s(:send,
                s(:ivar, :@meth_bang), :full_name))))),
      s(:def, :test_save_class_merge,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:lvasgn, :klass,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass), :new,
              s(:str, "Object"))),
          s(:send,
            s(:lvar, :klass), :add_comment,
            s(:str, "new comment"),
            s(:ivar, :@top_level)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:send,
            s(:lvar, :s), :save_class,
            s(:lvar, :klass)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:lvasgn, :inner,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Document), :new,
              s(:send,
                s(:const,
                  s(:ivar, :@RM), :Paragraph), :new,
                s(:str, "new comment")))),
          s(:send,
            s(:lvar, :inner), :file=,
            s(:ivar, :@top_level)),
          s(:lvasgn, :document,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Document), :new,
              s(:lvar, :inner))),
          s(:send, nil, :assert_equal,
            s(:lvar, :document),
            s(:send,
              s(:send,
                s(:lvar, :s), :load_class,
                s(:str, "Object")), :comment_location)))),
      s(:def, :test_save_class_merge_constant,
        s(:args),
        s(:begin,
          s(:lvasgn, :store,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Store), :new)),
          s(:lvasgn, :tl,
            s(:send,
              s(:lvar, :store), :add_file,
              s(:str, "file.rb"))),
          s(:lvasgn, :klass,
            s(:send,
              s(:lvar, :tl), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "C"))),
          s(:send,
            s(:lvar, :klass), :add_comment,
            s(:str, "comment"),
            s(:lvar, :tl)),
          s(:lvasgn, :const,
            s(:send,
              s(:lvar, :klass), :add_constant,
              s(:send,
                s(:const,
                  s(:const, nil, :RDoc), :Constant), :new,
                s(:str, "CONST"),
                s(:nil),
                s(:nil)))),
          s(:send,
            s(:lvar, :const), :record_location,
            s(:lvar, :tl)),
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:lvar, :klass)),
          s(:lvasgn, :store,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Store), :new)),
          s(:lvasgn, :tl,
            s(:send,
              s(:lvar, :store), :add_file,
              s(:str, "file.rb"))),
          s(:lvasgn, :klass2,
            s(:send,
              s(:lvar, :tl), :add_class,
              s(:const,
                s(:const, nil, :RDoc), :NormalClass),
              s(:str, "C"))),
          s(:send,
            s(:lvar, :klass2), :record_location,
            s(:lvar, :tl)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:send,
            s(:lvar, :s), :save_class,
            s(:lvar, :klass2)),
          s(:lvasgn, :s,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :RI), :Store), :new,
              s(:ivar, :@tmpdir))),
          s(:lvasgn, :result,
            s(:send,
              s(:lvar, :s), :load_class,
              s(:str, "C"))),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:lvar, :result), :constants)))),
      s(:def, :test_save_class_methods,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@klass)),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "cdesc-Object.ri"))),
          s(:send, nil, :assert_cache,
            s(:nil),
            s(:nil),
            s(:nil),
            s(:array,
              s(:str, "Object")),
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:const, nil, :OBJECT_ANCESTORS)))),
          s(:send, nil, :assert_equal,
            s(:ivar, :@klass),
            s(:send,
              s(:ivar, :@s), :load_class,
              s(:str, "Object"))))),
      s(:def, :test_save_class_nested,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_class,
            s(:ivar, :@nest_klass)),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass"),
              s(:str, "cdesc-SubClass.ri"))),
          s(:send, nil, :assert_cache,
            s(:hash,
              s(:pair,
                s(:str, "Object::SubClass"),
                s(:array,
                  s(:str, "method")))),
            s(:hash),
            s(:hash),
            s(:array,
              s(:str, "Object::SubClass")),
            s(:hash,
              s(:pair,
                s(:str, "Object::SubClass"),
                s(:array,
                  s(:str, "Incl"),
                  s(:str, "Object"))))))),
      s(:def, :test_save_method,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "method-i.ri"))),
          s(:send, nil, :assert_cache,
            s(:hash,
              s(:pair,
                s(:str, "Object"),
                s(:array,
                  s(:str, "method")))),
            s(:hash),
            s(:hash),
            s(:array)),
          s(:send, nil, :assert_equal,
            s(:ivar, :@meth),
            s(:send,
              s(:ivar, :@s), :load_method,
              s(:str, "Object"),
              s(:str, "#method"))))),
      s(:def, :test_save_method_dry_run,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :dry_run=,
            s(:true)),
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@klass),
            s(:ivar, :@meth)),
          s(:send, nil, :refute_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"))),
          s(:send, nil, :refute_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "method-i.ri"))))),
      s(:def, :test_save_method_nested,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_method,
            s(:ivar, :@nest_klass),
            s(:ivar, :@nest_meth)),
          s(:send, nil, :assert_directory,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass"))),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "Object"),
              s(:str, "SubClass"),
              s(:str, "method-i.ri"))),
          s(:send, nil, :assert_cache,
            s(:hash,
              s(:pair,
                s(:str, "Object::SubClass"),
                s(:array,
                  s(:str, "method")))),
            s(:hash),
            s(:hash),
            s(:array)))),
      s(:def, :test_save_page,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_page,
            s(:ivar, :@page)),
          s(:send, nil, :assert_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "page-README_txt.ri"))),
          s(:send, nil, :assert_cache,
            s(:hash),
            s(:hash),
            s(:hash),
            s(:array),
            s(:hash),
            s(:array,
              s(:str, "README.txt"))))),
      s(:def, :test_save_page_file,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :save_page,
            s(:ivar, :@top_level)),
          s(:send, nil, :refute_file,
            s(:send,
              s(:const, nil, :File), :join,
              s(:ivar, :@tmpdir),
              s(:str, "page-file_rb.ri"))))),
      s(:def, :test_source,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@s), :path=,
            s(:ivar, :@tmpdir)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:nil)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@s), :path),
            s(:send,
              s(:ivar, :@s), :source)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :extra)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:ivar, :@s), :path),
            s(:send,
              s(:ivar, :@s), :source)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :system)),
          s(:send, nil, :assert_equal,
            s(:str, "ruby"),
            s(:send,
              s(:ivar, :@s), :source)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :site)),
          s(:send, nil, :assert_equal,
            s(:str, "site"),
            s(:send,
              s(:ivar, :@s), :source)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :home)),
          s(:send, nil, :assert_equal,
            s(:str, "home"),
            s(:send,
              s(:ivar, :@s), :source)),
          s(:send,
            s(:ivar, :@s), :type=,
            s(:sym, :gem)),
          s(:send,
            s(:ivar, :@s), :path=,
            s(:dstr,
              s(:begin,
                s(:ivar, :@tmpdir)),
              s(:str, "/gem_repository/doc/gem_name-1.0/ri"))),
          s(:send, nil, :assert_equal,
            s(:str, "gem_name-1.0"),
            s(:send,
              s(:ivar, :@s), :source)))),
      s(:def, :test_title,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:nil),
            s(:send,
              s(:ivar, :@s), :title)),
          s(:send,
            s(:ivar, :@s), :title=,
            s(:str, "rdoc")),
          s(:send, nil, :assert_equal,
            s(:str, "rdoc"),
            s(:send,
              s(:ivar, :@s), :title)))))))
