s(:begin,
  s(:send, nil, :require,
    s(:str, "rdoc/test_case")),
  s(:class,
    s(:const, nil, :TestRDocMarkupToTableOfContents),
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Markup), :FormatterTestCase),
    s(:begin,
      s(:send, nil, :add_visitor_tests),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@to,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToTableOfContents), :new)))),
      s(:def, :end_accepting,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "hi")),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :empty,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 5),
              s(:str, "Hello"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading_1,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 1),
              s(:str, "Hello"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading_2,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 2),
              s(:str, "Hello"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading_3,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 3),
              s(:str, "Hello"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading_4,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 4),
              s(:str, "Hello"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading_b,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 1),
              s(:str, "*Hello*"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading_suppressed_crossref,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:send,
              s(:const,
                s(:ivar, :@RM), :Heading), :new,
              s(:int, 1),
              s(:str, "\\Hello"))),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:alias,
        s(:sym, :accept_blank_line),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_block_quote),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_document),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_end_bullet),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_end_label),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_end_lalpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_end_note),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_end_number),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_end_ualpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_end_bullet),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_end_label),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_end_lalpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_end_note),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_end_number),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_end_ualpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_bullet),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_label),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_lalpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_note),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_note_2),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_note_multi_description),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_note_multi_label),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_number),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_item_start_ualpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_start_bullet),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_start_label),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_start_lalpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_start_note),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_start_number),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_list_start_ualpha),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_b),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_br),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_break),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_i),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_plus),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_star),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_paragraph_underscore),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_raw),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_rule),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :accept_verbatim),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :list_nested),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :list_verbatim),
        s(:sym, :empty)),
      s(:alias,
        s(:sym, :start_accepting),
        s(:sym, :empty)),
      s(:def, :test_accept_document_omit_headings_below,
        s(:args),
        s(:begin,
          s(:lvasgn, :document,
            s(:send, nil, :doc)),
          s(:send,
            s(:lvar, :document), :omit_headings_below=,
            s(:int, 2)),
          s(:send,
            s(:ivar, :@to), :accept_document,
            s(:lvar, :document)),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:ivar, :@to), :omit_headings_below)))),
      s(:def, :test_accept_heading_suppressed,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@to), :start_accepting),
          s(:send,
            s(:ivar, :@to), :omit_headings_below=,
            s(:int, 4)),
          s(:lvasgn, :suppressed,
            s(:send, nil, :head,
              s(:int, 5),
              s(:str, "Hello"))),
          s(:send,
            s(:ivar, :@to), :accept_heading,
            s(:lvar, :suppressed)),
          s(:send, nil, :assert_empty,
            s(:send,
              s(:ivar, :@to), :res)))),
      s(:def, :test_suppressed_eh,
        s(:args),
        s(:begin,
          s(:send,
            s(:ivar, :@to), :omit_headings_below=,
            s(:nil)),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@to), :suppressed?,
              s(:send, nil, :head,
                s(:int, 1),
                s(:str, "")))),
          s(:send,
            s(:ivar, :@to), :omit_headings_below=,
            s(:int, 1)),
          s(:send, nil, :refute,
            s(:send,
              s(:ivar, :@to), :suppressed?,
              s(:send, nil, :head,
                s(:int, 1),
                s(:str, "")))),
          s(:send, nil, :assert,
            s(:send,
              s(:ivar, :@to), :suppressed?,
              s(:send, nil, :head,
                s(:int, 2),
                s(:str, "")))))))))
