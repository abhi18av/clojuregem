s(:begin,
  s(:send, nil, :require,
    s(:str, "rdoc/test_case")),
  s(:class,
    s(:const, nil, :TestRDocMarkupToTtOnly),
    s(:const,
      s(:const,
        s(:const, nil, :RDoc), :Markup), :FormatterTestCase),
    s(:begin,
      s(:send, nil, :add_visitor_tests),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@to,
            s(:send,
              s(:const,
                s(:const,
                  s(:const, nil, :RDoc), :Markup), :ToTtOnly), :new)))),
      s(:def, :accept_blank_line,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_block_quote,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_document,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_heading,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_list_end_bullet,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_end_label,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_end_lalpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_end_note,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_end_number,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_end_ualpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_end_bullet,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_end_label,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_end_lalpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_end_note,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_end_number,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_end_ualpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_bullet,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_label,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_lalpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_note,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_number,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_ualpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_start_bullet,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_start_label,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_start_lalpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_start_note,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_start_number,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_start_ualpha,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_paragraph,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_break,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_raw,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_rule,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_verbatim,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :end_accepting,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "hi")),
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :start_accepting,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_1,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_2,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_3,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_4,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_indent,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_b,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_heading_suppressed_crossref,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_list_item_start_note_2,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:nil),
            s(:str, "teletype"),
            s(:nil)),
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_note_multi_description,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_list_item_start_note_multi_label,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :res))),
      s(:def, :accept_paragraph_b,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_br,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_i,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_indent,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_plus,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:str, "teletype")),
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_star,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_underscore,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_paragraph_wrap,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_rule_indent,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_verbatim_indent,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :accept_verbatim_big_indent,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :list_nested,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))),
      s(:def, :list_verbatim,
        s(:args),
        s(:send, nil, :assert_empty,
          s(:send,
            s(:ivar, :@to), :end_accepting))))))
