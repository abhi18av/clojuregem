s(:begin,
  s(:send, nil, :require,
    s(:str, "rdoc/test_case")),
  s(:class,
    s(:const, nil, :TestRDocGeneratorMarkup),
    s(:const,
      s(:const, nil, :RDoc), :TestCase),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const, nil, :RDoc), :Text)),
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const, nil, :RDoc), :Generator), :Markup)),
      s(:send, nil, :attr_reader,
        s(:sym, :store)),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:zsuper),
          s(:ivasgn, :@options,
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :Options), :new)),
          s(:send,
            s(:ivar, :@rdoc), :options=,
            s(:ivar, :@options)),
          s(:ivasgn, :@parent,
            s(:self)),
          s(:ivasgn, :@path,
            s(:str, "/index.html")),
          s(:ivasgn, :@symbols,
            s(:hash)))),
      s(:def, :test_aref_to,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "Foo/Bar.html"),
          s(:send, nil, :aref_to,
            s(:str, "Foo/Bar.html")))),
      s(:def, :test_as_href,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, "../index.html"),
          s(:send, nil, :as_href,
            s(:str, "Foo/Bar.html")))),
      s(:def, :test_cvs_url,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:str, "http://example/this_page"),
            s(:send, nil, :cvs_url,
              s(:str, "http://example/"),
              s(:str, "this_page"))),
          s(:send, nil, :assert_equal,
            s(:str, "http://example/?page=this_page&foo=bar"),
            s(:send, nil, :cvs_url,
              s(:str, "http://example/?page=%s&foo=bar"),
              s(:str, "this_page"))))),
      s(:def, :test_description,
        s(:args),
        s(:begin,
          s(:ivasgn, :@comment,
            s(:str, "= Hello")),
          s(:lvasgn, :links,
            s(:send,
              s(:str, "<span><a href=\"#label-Hello\">&para;</a> "), :+,
              s(:str, "<a href=\"#top\">&uarr;</a></span>"))),
          s(:send, nil, :assert_equal,
            s(:dstr,
              s(:str, "\n<h1 id=\"label-Hello\">Hello"),
              s(:begin,
                s(:lvar, :links)),
              s(:str, "</h1>\n")),
            s(:send, nil, :description)))),
      s(:def, :test_formatter,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_kind_of,
            s(:const,
              s(:const,
                s(:const, nil, :RDoc), :Markup), :ToHtmlCrossref),
            s(:send, nil, :formatter)),
          s(:send, nil, :refute,
            s(:send,
              s(:send, nil, :formatter), :show_hash)),
          s(:send, nil, :assert_same,
            s(:self),
            s(:send,
              s(:send, nil, :formatter), :context)))),
      s(:send, nil, :attr_reader,
        s(:sym, :path)),
      s(:def, :find_symbol,
        s(:args,
          s(:arg, :name)),
        s(:send,
          s(:ivar, :@symbols), :[],
          s(:lvar, :name))))))
