s(:begin,
  s(:send, nil, :require,
    s(:str, "rdoc/test_case")),
  s(:class,
    s(:const, nil, :TestRDocTokenStream),
    s(:const,
      s(:const, nil, :RDoc), :TestCase),
    s(:begin,
      s(:def, :test_class_to_html,
        s(:args),
        s(:begin,
          s(:lvasgn, :tokens,
            s(:array,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkCONSTANT), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "CONSTANT")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkDEF), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "KW")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkIVAR), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "IVAR")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkOp), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "Op")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkId), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "Id")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkNode), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "Node")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkCOMMENT), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "COMMENT")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkREGEXP), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "REGEXP")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkSTRING), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "STRING")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkVal), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "Val")),
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDoc), :RubyToken), :TkBACKSLASH), :new,
                s(:int, 0),
                s(:int, 0),
                s(:int, 0),
                s(:str, "\\")))),
          s(:lvasgn, :expected,
            s(:send,
              s(:array,
                s(:str, "<span class=\"ruby-constant\">CONSTANT</span>"),
                s(:str, "<span class=\"ruby-keyword\">KW</span>"),
                s(:str, "<span class=\"ruby-ivar\">IVAR</span>"),
                s(:str, "<span class=\"ruby-operator\">Op</span>"),
                s(:str, "<span class=\"ruby-identifier\">Id</span>"),
                s(:str, "<span class=\"ruby-node\">Node</span>"),
                s(:str, "<span class=\"ruby-comment\">COMMENT</span>"),
                s(:str, "<span class=\"ruby-regexp\">REGEXP</span>"),
                s(:str, "<span class=\"ruby-string\">STRING</span>"),
                s(:str, "<span class=\"ruby-value\">Val</span>"),
                s(:str, "\\")), :join)),
          s(:send, nil, :assert_equal,
            s(:lvar, :expected),
            s(:send,
              s(:const,
                s(:const, nil, :RDoc), :TokenStream), :to_html,
              s(:lvar, :tokens))))),
      s(:def, :test_class_to_html_empty,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:str, ""),
          s(:send,
            s(:const,
              s(:const, nil, :RDoc), :TokenStream), :to_html,
            s(:array)))))))
