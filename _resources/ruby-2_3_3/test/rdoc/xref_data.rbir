s(:casgn, nil, :XREF_DATA,
  s(:dstr,
    s(:str, "class C1\n"),
    s(:str, "\n"),
    s(:str, "  attr :attr\n"),
    s(:str, "\n"),
    s(:str, "  # :section: separate\n"),
    s(:str, "\n"),
    s(:str, "  attr_reader :attr_reader\n"),
    s(:str, "  attr_writer :attr_writer\n"),
    s(:str, "\n"),
    s(:str, "  # :section:\n"),
    s(:str, "  attr_accessor :attr_accessor\n"),
    s(:str, "\n"),
    s(:str, "  CONST = :const\n"),
    s(:str, "\n"),
    s(:str, "  def self.m\n"),
    s(:str, "  end\n"),
    s(:str, "\n"),
    s(:str, "  def m foo\n"),
    s(:str, "  end\n"),
    s(:str, "\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "class C2\n"),
    s(:str, "  def b\n"),
    s(:str, "  end\n"),
    s(:str, "\n"),
    s(:str, "  alias a b\n"),
    s(:str, "\n"),
    s(:str, "  class C3\n"),
    s(:str, "    def m\n"),
    s(:str, "    end\n"),
    s(:str, "\n"),
    s(:str, "    class H1\n"),
    s(:str, "      def m?\n"),
    s(:str, "      end\n"),
    s(:str, "    end\n"),
    s(:str, "  end\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "class C3\n"),
    s(:str, "  class H1\n"),
    s(:str, "  end\n"),
    s(:str, "\n"),
    s(:str, "  class H2 < H1\n"),
    s(:str, "  end\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "class C4\n"),
    s(:str, "  class C4\n"),
    s(:str, "  end\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "class C5\n"),
    s(:str, "  class C1\n"),
    s(:str, "  end\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "module M1\n"),
    s(:str, "  def m\n"),
    s(:str, "  end\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "module M1::M2\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "class Parent\n"),
    s(:str, "  def m() end\n"),
    s(:str, "  def self.m() end\n"),
    s(:str, "end\n"),
    s(:str, "\n"),
    s(:str, "class Child < Parent\n"),
    s(:str, "end\n"),
    s(:str, "\n")))
