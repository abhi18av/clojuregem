s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "date")),
  s(:kwbegin,
    s(:rescue,
      s(:begin,
        s(:send, nil, :require,
          s(:str, "calendar")),
        s(:send, nil, :include,
          s(:const, nil, :Calendar))),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:class,
    s(:const, nil, :TestDateBase),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :setup,
        s(:args),
        s(:if,
          s(:defined?,
            s(:const, nil, :Calendar)),
          s(:begin,
            s(:or_asgn,
              s(:ivasgn, :@from),
              s(:send, nil, :julian_day_number_from_absolute,
                s(:send, nil, :absolute_from_julian,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 1601)))),
            s(:or_asgn,
              s(:ivasgn, :@to),
              s(:send, nil, :julian_day_number_from_absolute,
                s(:send, nil, :absolute_from_julian,
                  s(:int, 12),
                  s(:int, 31),
                  s(:int, 2400)))),
            s(:or_asgn,
              s(:ivasgn, :@from4t),
              s(:send, nil, :julian_day_number_from_absolute,
                s(:send, nil, :absolute_from_julian,
                  s(:int, 1),
                  s(:int, 1),
                  s(:int, 1970)))),
            s(:or_asgn,
              s(:ivasgn, :@to4t),
              s(:send, nil, :julian_day_number_from_absolute,
                s(:send, nil, :absolute_from_julian,
                  s(:int, 12),
                  s(:int, 31),
                  s(:int, 2037))))), nil)),
      s(:def, :test__inf,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, -1)), :<=>,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, -1)))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, -1)), :<=>,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, -1)), :<=>,
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, 1)), :<=>,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, -1)))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, 1)), :<=>,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, 1)), :<=>,
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:int, 0), :<=>,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, -1)))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:int, 0), :<=>,
              s(:send,
                s(:const,
                  s(:const, nil, :Date), :Infinity), :new,
                s(:int, 1)))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:int, 0), :<=>,
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ITALY), :<=>,
              s(:const,
                s(:const, nil, :Date), :ITALY))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ITALY), :<=>,
              s(:const,
                s(:const, nil, :Date), :ENGLAND))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ITALY), :<=>,
              s(:const,
                s(:const, nil, :Date), :JULIAN))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ITALY), :<=>,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ENGLAND), :<=>,
              s(:const,
                s(:const, nil, :Date), :ITALY))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ENGLAND), :<=>,
              s(:const,
                s(:const, nil, :Date), :ENGLAND))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ENGLAND), :<=>,
              s(:const,
                s(:const, nil, :Date), :JULIAN))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :ENGLAND), :<=>,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :JULIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :ITALY))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :JULIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :ENGLAND))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :JULIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :JULIAN))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :JULIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :ITALY))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :ENGLAND))),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :JULIAN))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN), :<=>,
              s(:const,
                s(:const, nil, :Date), :GREGORIAN))))),
      s(:def, :test_ordinal__julian,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from),
              s(:ivar, :@to)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :m),
                  s(:lvasgn, :d),
                  s(:lvasgn, :y)),
                s(:send, nil, :julian_from_absolute,
                  s(:send, nil, :absolute_from_julian_day_number,
                    s(:lvar, :j)))),
              s(:lvasgn, :j0,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_julian,
                    s(:int, 12),
                    s(:int, 31),
                    s(:send,
                      s(:lvar, :y), :-,
                      s(:int, 1))))),
              s(:lvasgn, :j2,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_julian,
                    s(:lvar, :m),
                    s(:lvar, :d),
                    s(:lvar, :y)))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :j2)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :oy),
                  s(:lvasgn, :od)),
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :jd_to_ordinal),
                  s(:lvar, :j),
                  s(:const,
                    s(:const, nil, :Date), :JULIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :y),
                s(:lvar, :oy)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :j2), :-,
                  s(:lvar, :j0)),
                s(:lvar, :od)),
              s(:lvasgn, :oj,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :ordinal_to_jd),
                  s(:lvar, :oy),
                  s(:lvar, :od),
                  s(:const,
                    s(:const, nil, :Date), :JULIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :oj)))))),
      s(:def, :test_ordinal__gregorian,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from),
              s(:ivar, :@to)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :m),
                  s(:lvasgn, :d),
                  s(:lvasgn, :y)),
                s(:send, nil, :gregorian_from_absolute,
                  s(:send, nil, :absolute_from_julian_day_number,
                    s(:lvar, :j)))),
              s(:lvasgn, :j0,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_gregorian,
                    s(:int, 12),
                    s(:int, 31),
                    s(:send,
                      s(:lvar, :y), :-,
                      s(:int, 1))))),
              s(:lvasgn, :j2,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_gregorian,
                    s(:lvar, :m),
                    s(:lvar, :d),
                    s(:lvar, :y)))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :j2)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :oy),
                  s(:lvasgn, :od)),
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :jd_to_ordinal),
                  s(:lvar, :j),
                  s(:const,
                    s(:const, nil, :Date), :GREGORIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :y),
                s(:lvar, :oy)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :j2), :-,
                  s(:lvar, :j0)),
                s(:lvar, :od)),
              s(:lvasgn, :oj,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :ordinal_to_jd),
                  s(:lvar, :oy),
                  s(:lvar, :od),
                  s(:const,
                    s(:const, nil, :Date), :GREGORIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :oj)))))),
      s(:def, :test_civil__julian,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from),
              s(:ivar, :@to)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :m),
                  s(:lvasgn, :d),
                  s(:lvasgn, :y)),
                s(:send, nil, :julian_from_absolute,
                  s(:send, nil, :absolute_from_julian_day_number,
                    s(:lvar, :j)))),
              s(:lvasgn, :j2,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_julian,
                    s(:lvar, :m),
                    s(:lvar, :d),
                    s(:lvar, :y)))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j2),
                s(:lvar, :j)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :cy),
                  s(:lvasgn, :cm),
                  s(:lvasgn, :cd)),
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :jd_to_civil),
                  s(:lvar, :j),
                  s(:const,
                    s(:const, nil, :Date), :JULIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :y),
                s(:lvar, :cy)),
              s(:send, nil, :assert_equal,
                s(:lvar, :m),
                s(:lvar, :cm)),
              s(:send, nil, :assert_equal,
                s(:lvar, :d),
                s(:lvar, :cd)),
              s(:lvasgn, :cj,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :civil_to_jd),
                  s(:lvar, :cy),
                  s(:lvar, :cm),
                  s(:lvar, :cd),
                  s(:const,
                    s(:const, nil, :Date), :JULIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :cj)))))),
      s(:def, :test_civil__gregorian,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from),
              s(:ivar, :@to)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :m),
                  s(:lvasgn, :d),
                  s(:lvasgn, :y)),
                s(:send, nil, :gregorian_from_absolute,
                  s(:send, nil, :absolute_from_julian_day_number,
                    s(:lvar, :j)))),
              s(:lvasgn, :j2,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_gregorian,
                    s(:lvar, :m),
                    s(:lvar, :d),
                    s(:lvar, :y)))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j2),
                s(:lvar, :j)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :cy),
                  s(:lvasgn, :cm),
                  s(:lvasgn, :cd)),
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :jd_to_civil),
                  s(:lvar, :j),
                  s(:const,
                    s(:const, nil, :Date), :GREGORIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :y),
                s(:lvar, :cy)),
              s(:send, nil, :assert_equal,
                s(:lvar, :m),
                s(:lvar, :cm)),
              s(:send, nil, :assert_equal,
                s(:lvar, :d),
                s(:lvar, :cd)),
              s(:lvasgn, :cj,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :civil_to_jd),
                  s(:lvar, :cy),
                  s(:lvar, :cm),
                  s(:lvar, :cd),
                  s(:const,
                    s(:const, nil, :Date), :GREGORIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :cj)))))),
      s(:def, :test_commercial__gregorian,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from),
              s(:ivar, :@to)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :w),
                  s(:lvasgn, :d),
                  s(:lvasgn, :y)),
                s(:send, nil, :iso_from_absolute,
                  s(:send, nil, :absolute_from_julian_day_number,
                    s(:lvar, :j)))),
              s(:lvasgn, :j2,
                s(:send, nil, :julian_day_number_from_absolute,
                  s(:send, nil, :absolute_from_iso,
                    s(:lvar, :w),
                    s(:lvar, :d),
                    s(:lvar, :y)))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j2),
                s(:lvar, :j)),
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :cy),
                  s(:lvasgn, :cw),
                  s(:lvasgn, :cd)),
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :jd_to_commercial),
                  s(:lvar, :j),
                  s(:const,
                    s(:const, nil, :Date), :GREGORIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :y),
                s(:lvar, :cy)),
              s(:send, nil, :assert_equal,
                s(:lvar, :w),
                s(:lvar, :cw)),
              s(:send, nil, :assert_equal,
                s(:lvar, :d),
                s(:lvar, :cd)),
              s(:lvasgn, :cj,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:sym, :commercial_to_jd),
                  s(:lvar, :cy),
                  s(:lvar, :cw),
                  s(:lvar, :cd),
                  s(:const,
                    s(:const, nil, :Date), :GREGORIAN))),
              s(:send, nil, :assert_equal,
                s(:lvar, :j),
                s(:lvar, :cj)))))),
      s(:def, :test_weeknum,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from),
              s(:ivar, :@to)),
            s(:for,
              s(:lvasgn, :k),
              s(:irange,
                s(:int, 0),
                s(:int, 1)),
              s(:begin,
                s(:masgn,
                  s(:mlhs,
                    s(:lvasgn, :wy),
                    s(:lvasgn, :ww),
                    s(:lvasgn, :wd)),
                  s(:send,
                    s(:const, nil, :Date), :__send__,
                    s(:sym, :jd_to_weeknum),
                    s(:lvar, :j),
                    s(:lvar, :k),
                    s(:const,
                      s(:const, nil, :Date), :GREGORIAN))),
                s(:lvasgn, :wj,
                  s(:send,
                    s(:const, nil, :Date), :__send__,
                    s(:sym, :weeknum_to_jd),
                    s(:lvar, :wy),
                    s(:lvar, :ww),
                    s(:lvar, :wd),
                    s(:lvar, :k),
                    s(:const,
                      s(:const, nil, :Date), :GREGORIAN))),
                s(:send, nil, :assert_equal,
                  s(:lvar, :j),
                  s(:lvar, :wj))))))),
      s(:def, :test_weeknum__2,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:ivar, :@from4t),
              s(:ivar, :@to4t)),
            s(:begin,
              s(:lvasgn, :d,
                s(:send,
                  s(:const, nil, :Date), :jd,
                  s(:lvar, :j))),
              s(:lvasgn, :t,
                s(:send,
                  s(:const, nil, :Time), :mktime,
                  s(:send,
                    s(:lvar, :d), :year),
                  s(:send,
                    s(:lvar, :d), :mon),
                  s(:send,
                    s(:lvar, :d), :mday))),
              s(:block,
                s(:send,
                  s(:array,
                    s(:str, "%Y %U %w"),
                    s(:str, "%Y %U %u"),
                    s(:str, "%Y %W %w"),
                    s(:str, "%Y %W %u")), :each),
                s(:args,
                  s(:arg, :fmt)),
                s(:begin,
                  s(:lvasgn, :s,
                    s(:send,
                      s(:lvar, :t), :strftime,
                      s(:lvar, :fmt))),
                  s(:lvasgn, :d2,
                    s(:send,
                      s(:const, nil, :Date), :strptime,
                      s(:lvar, :s),
                      s(:lvar, :fmt))),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :j),
                    s(:send,
                      s(:lvar, :d2), :jd)))))))),
      s(:def, :test_nth_kday,
        s(:args),
        s(:begin,
          s(:if,
            s(:defined?,
              s(:const, nil, :Calendar)), nil,
            s(:send, nil, :skip)),
          s(:if,
            s(:begin,
              s(:and,
                s(:send,
                  s(:const, nil, :Date), :respond_to?,
                  s(:sym, :nth_kday_to_jd),
                  s(:true)),
                s(:send,
                  s(:const, nil, :Date), :respond_to?,
                  s(:sym, :jd_to_nth_kday),
                  s(:true)))), nil,
            s(:send, nil, :skip)),
          s(:for,
            s(:lvasgn, :y),
            s(:irange,
              s(:int, 1601),
              s(:int, 2401)),
            s(:for,
              s(:lvasgn, :m),
              s(:irange,
                s(:int, 1),
                s(:int, 12)),
              s(:for,
                s(:lvasgn, :n),
                s(:irange,
                  s(:int, -5),
                  s(:int, 5)),
                s(:begin,
                  s(:if,
                    s(:send,
                      s(:lvar, :n), :==,
                      s(:int, 0)),
                    s(:next), nil),
                  s(:for,
                    s(:lvasgn, :k),
                    s(:irange,
                      s(:int, 0),
                      s(:int, 6)),
                    s(:begin,
                      s(:lvasgn, :j,
                        s(:send, nil, :julian_day_number_from_absolute,
                          s(:send, nil, :Nth_Kday,
                            s(:lvar, :n),
                            s(:lvar, :k),
                            s(:lvar, :m),
                            s(:lvar, :y)))),
                      s(:lvasgn, :j2,
                        s(:send,
                          s(:const, nil, :Date), :__send__,
                          s(:sym, :nth_kday_to_jd),
                          s(:lvar, :y),
                          s(:lvar, :m),
                          s(:lvar, :n),
                          s(:lvar, :k),
                          s(:const,
                            s(:const, nil, :Date), :GREGORIAN))),
                      s(:send, nil, :assert_equal,
                        s(:lvar, :j),
                        s(:lvar, :j2)),
                      s(:lvasgn, :d1,
                        s(:send,
                          s(:const, nil, :Date), :__send__,
                          s(:sym, :jd_to_nth_kday),
                          s(:lvar, :j2),
                          s(:const,
                            s(:const, nil, :Date), :GREGORIAN))),
                      s(:lvasgn, :j3,
                        s(:send,
                          s(:const, nil, :Date), :__send__,
                          s(:sym, :nth_kday_to_jd),
                          s(:splat,
                            s(:lvar, :d1)))),
                      s(:send, nil, :assert_equal,
                        s(:lvar, :j),
                        s(:lvar, :j3)))))))))),
      s(:def, :test_jd,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:send,
            s(:int, 1), :<<,
            s(:int, 33)),
          s(:send,
            s(:send,
              s(:const, nil, :Date), :jd,
              s(:send,
                s(:int, 1), :<<,
                s(:int, 33))), :jd))),
      s(:def, :test_mjd,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:sym, :mjd_to_jd),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:lvasgn, :jd,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :mjd_to_jd),
              s(:int, 51321))),
          s(:lvasgn, :mjd,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_mjd),
              s(:lvar, :jd))),
          s(:send, nil, :assert_equal,
            s(:int, 51321),
            s(:lvar, :mjd)))),
      s(:def, :test_ld,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:sym, :ld_to_jd),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:lvasgn, :jd,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :ld_to_jd),
              s(:int, 152162))),
          s(:lvasgn, :ld,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_ld),
              s(:lvar, :jd))),
          s(:send, nil, :assert_equal,
            s(:int, 152162),
            s(:lvar, :ld)))),
      s(:def, :test_wday,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:sym, :jd_to_wday),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_equal,
            s(:int, 4),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:int, 3),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, 2))),
          s(:send, nil, :assert_equal,
            s(:int, 2),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:int, 6),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, -2))),
          s(:send, nil, :assert_equal,
            s(:int, 5),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:sym, :jd_to_wday),
              s(:int, -3))))),
      s(:def, :test_leap?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:const, nil, :Date), :julian_leap?,
              s(:int, 1900))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:const, nil, :Date), :julian_leap?,
              s(:int, 1999))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:const, nil, :Date), :julian_leap?,
              s(:int, 2000))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:const, nil, :Date), :gregorian_leap?,
              s(:int, 1900))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:const, nil, :Date), :gregorian_leap?,
              s(:int, 1999))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:const, nil, :Date), :gregorian_leap?,
              s(:int, 2000))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Date), :leap?,
              s(:int, 1990)),
            s(:send,
              s(:const, nil, :Date), :gregorian_leap?,
              s(:int, 1900))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Date), :leap?,
              s(:int, 1999)),
            s(:send,
              s(:const, nil, :Date), :gregorian_leap?,
              s(:int, 1999))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Date), :leap?,
              s(:int, 2000)),
            s(:send,
              s(:const, nil, :Date), :gregorian_leap?,
              s(:int, 2000))))),
      s(:def, :test_valid_jd,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_jd_p,
            s(:sym, :_valid_jd?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_jd_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_equal,
            s(:int, -1),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_jd_p),
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:int, 0),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_jd_p),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 1),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_jd_p),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 2452348),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_jd_p),
              s(:int, 2452348))))),
      s(:def, :test_valid_ordinal,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_ordinal_p,
            s(:sym, :_valid_ordinal?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_ordinal_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 1999),
              s(:int, 366))),
          s(:send, nil, :assert_equal,
            s(:int, 2451910),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2000),
              s(:int, 366))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 1999),
              s(:int, -366))),
          s(:send, nil, :assert_equal,
            s(:int, 2451545),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2000),
              s(:int, -366))),
          s(:send, nil, :assert_equal,
            s(:int, 2452275),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2001),
              s(:int, 365))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2001),
              s(:int, 366))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2001),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2001),
              s(:int, -365))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2001),
              s(:int, -366))),
          s(:send, nil, :assert_equal,
            s(:int, 2452348),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_ordinal_p),
              s(:int, 2002),
              s(:int, 73))))),
      s(:def, :test_valid_ordinal__edge,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_ordinal_p,
            s(:sym, :_valid_ordinal?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_ordinal_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1601),
                  s(:int, 2400))), :each),
            s(:args,
              s(:arg, :y)),
            s(:begin,
              s(:lvasgn, :d,
                s(:if,
                  s(:send,
                    s(:const, nil, :Date), :leap?,
                    s(:lvar, :y)),
                  s(:int, 366),
                  s(:int, 365))),
              s(:send, nil, :assert_not_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_ordinal_p),
                  s(:lvar, :y),
                  s(:lvar, :d))),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_ordinal_p),
                  s(:lvar, :y),
                  s(:send,
                    s(:lvar, :d), :+,
                    s(:int, 1)))),
              s(:send, nil, :assert_not_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_ordinal_p),
                  s(:lvar, :y),
                  s(:send,
                    s(:lvar, :d), :-@))),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_ordinal_p),
                  s(:lvar, :y),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :d), :+,
                        s(:int, 1))), :-@))))))),
      s(:def, :test_valid_ordinal__italy,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_ordinal_p,
            s(:sym, :_valid_ordinal?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_ordinal_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 355))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_ordinal_p),
                s(:int, 1582),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 356),
                  s(:int, 365))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_ordinal_p),
                s(:int, 1582),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))))),
      s(:def, :test_valid_ordinal__england,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_ordinal_p,
            s(:sym, :_valid_ordinal?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_ordinal_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 355))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_ordinal_p),
                s(:int, 1752),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 356),
                  s(:int, 366))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_ordinal_p),
                s(:int, 1752),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))))),
      s(:def, :test_valid_civil,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_civil_p,
            s(:sym, :_valid_civil?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_civil_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 1999),
              s(:int, 2),
              s(:int, 29))),
          s(:send, nil, :assert_equal,
            s(:int, 2451604),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2000),
              s(:int, 2),
              s(:int, 29))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 1999),
              s(:int, 2),
              s(:int, -29))),
          s(:send, nil, :assert_equal,
            s(:int, 2451576),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2000),
              s(:int, 2),
              s(:int, -29))),
          s(:send, nil, :assert_equal,
            s(:int, 2451941),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2001),
              s(:int, 1),
              s(:int, 31))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2001),
              s(:int, 1),
              s(:int, 32))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2001),
              s(:int, 1),
              s(:int, 1)),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2001),
              s(:int, 1),
              s(:int, -31))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2001),
              s(:int, 1),
              s(:int, -32))),
          s(:send, nil, :assert_equal,
            s(:int, 2452348),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2002),
              s(:int, 3),
              s(:int, 14))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_civil_p),
              s(:int, 2010),
              s(:int, -13),
              s(:int, -1))))),
      s(:def, :test_valid_civil__edge,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_civil_p,
            s(:sym, :_valid_civil?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_civil_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1601),
                  s(:int, 2400))), :each),
            s(:args,
              s(:arg, :y)),
            s(:begin,
              s(:lvasgn, :d,
                s(:if,
                  s(:send,
                    s(:const, nil, :Date), :leap?,
                    s(:lvar, :y)),
                  s(:int, 29),
                  s(:int, 28))),
              s(:send, nil, :assert_not_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_civil_p),
                  s(:lvar, :y),
                  s(:int, 2),
                  s(:lvar, :d))),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_civil_p),
                  s(:lvar, :y),
                  s(:int, 2),
                  s(:send,
                    s(:lvar, :d), :+,
                    s(:int, 1)))),
              s(:send, nil, :assert_not_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_civil_p),
                  s(:lvar, :y),
                  s(:int, 2),
                  s(:send,
                    s(:lvar, :d), :-@))),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:const, nil, :Date), :__send__,
                  s(:lvar, :valid_civil_p),
                  s(:lvar, :y),
                  s(:int, 2),
                  s(:send,
                    s(:begin,
                      s(:send,
                        s(:lvar, :d), :+,
                        s(:int, 1))), :-@))))))),
      s(:def, :test_valid_civil__italy,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_civil_p,
            s(:sym, :_valid_civil?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_civil_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 4))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1582),
                s(:int, 10),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 5),
                  s(:int, 14))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1582),
                s(:int, 10),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 15),
                  s(:int, 31))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1582),
                s(:int, 10),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 32),
                  s(:int, 100))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1582),
                s(:int, 10),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, -31),
                  s(:int, -22))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1582),
                s(:int, 10),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, -21),
                  s(:int, -1))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1582),
                s(:int, 10),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ITALY)))))),
      s(:def, :test_valid_civil__england,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_civil_p,
            s(:sym, :_valid_civil?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_civil_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 2))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1752),
                s(:int, 9),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 3),
                  s(:int, 13))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1752),
                s(:int, 9),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 14),
                  s(:int, 30))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1752),
                s(:int, 9),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 31),
                  s(:int, 100))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1752),
                s(:int, 9),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, -31),
                  s(:int, -20))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1752),
                s(:int, 9),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, -19),
                  s(:int, -1))), :each),
            s(:args,
              s(:arg, :d)),
            s(:send, nil, :assert_not_nil,
              s(:send,
                s(:const, nil, :Date), :__send__,
                s(:lvar, :valid_civil_p),
                s(:int, 1752),
                s(:int, 9),
                s(:lvar, :d),
                s(:const,
                  s(:const, nil, :Date), :ENGLAND)))))),
      s(:def, :test_valid_commercial,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_commercial_p,
            s(:sym, :_valid_commercial?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_commercial_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_commercial_p),
              s(:int, 1999),
              s(:int, 53),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 2453367),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_commercial_p),
              s(:int, 2004),
              s(:int, 53),
              s(:int, 1))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_commercial_p),
              s(:int, 1999),
              s(:int, -53),
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:int, 2453009),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_commercial_p),
              s(:int, 2004),
              s(:int, -53),
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:int, 2452348),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_commercial_p),
              s(:int, 2002),
              s(:int, 11),
              s(:int, 4))))),
      s(:def, :test_valid_weeknum,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_weeknum_p,
            s(:sym, :_valid_weeknum?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_weeknum_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 1999),
              s(:int, 53),
              s(:int, 0),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 2454101),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 2006),
              s(:int, 53),
              s(:int, 0),
              s(:int, 0))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 1999),
              s(:int, -53),
              s(:int, -1),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 2453743),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 2006),
              s(:int, -53),
              s(:int, -1),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 2452355),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 2002),
              s(:int, 11),
              s(:int, 4),
              s(:int, 0))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 1999),
              s(:int, 53),
              s(:int, 0),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 2454101),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 2006),
              s(:int, 52),
              s(:int, 6),
              s(:int, 1))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 1999),
              s(:int, -53),
              s(:int, -1),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 2453743),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 2006),
              s(:int, -52),
              s(:int, -2),
              s(:int, 1))),
          s(:send, nil, :assert_equal,
            s(:int, 2452355),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_weeknum_p),
              s(:int, 2002),
              s(:int, 11),
              s(:int, 3),
              s(:int, 1))))),
      s(:def, :test_valid_nth_kday,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_nth_kday_p,
            s(:sym, :_valid_nth_kday?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_nth_kday_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_nth_kday_p),
              s(:int, 1992),
              s(:int, 2),
              s(:int, 5),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:int, 2448682),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_nth_kday_p),
              s(:int, 1992),
              s(:int, 2),
              s(:int, 5),
              s(:int, 6))),
          s(:send, nil, :assert_equal,
            s(:int, 2448682),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_nth_kday_p),
              s(:int, 1992),
              s(:int, 2),
              s(:int, 5),
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:int, 2448682),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_nth_kday_p),
              s(:int, 1992),
              s(:int, 2),
              s(:int, -1),
              s(:int, 6))),
          s(:send, nil, :assert_equal,
            s(:int, 2448682),
            s(:send,
              s(:const, nil, :Date), :__send__,
              s(:lvar, :valid_nth_kday_p),
              s(:int, 1992),
              s(:int, 2),
              s(:int, -1),
              s(:int, -1))))),
      s(:def, :test_valid_time,
        s(:args),
        s(:begin,
          s(:lvasgn, :valid_time_p,
            s(:sym, :_valid_time?)),
          s(:if,
            s(:send,
              s(:const, nil, :Date), :respond_to?,
              s(:lvar, :valid_time_p),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 0)),
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 0),
              s(:int, 0),
              s(:int, 0))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 25),
              s(:int, 59),
              s(:int, 59))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 23),
              s(:int, 60),
              s(:int, 59))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 23),
              s(:int, 59),
              s(:int, 60))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 86399),
              s(:int, 86400)),
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 23),
              s(:int, 59),
              s(:int, 59))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 86399),
              s(:int, 86400)),
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, -1),
              s(:int, -1),
              s(:int, -1))),
          s(:send, nil, :assert_equal,
            s(:send, nil, :Rational,
              s(:int, 1)),
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 24),
              s(:int, 0),
              s(:int, 0))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 24),
              s(:int, 0),
              s(:int, 1))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 24),
              s(:int, 1),
              s(:int, 0))),
          s(:send, nil, :assert_nil,
            s(:send,
              s(:const, nil, :DateTime), :__send__,
              s(:lvar, :valid_time_p),
              s(:int, 24),
              s(:int, 1),
              s(:int, 1))))))))
