s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "date")),
  s(:class,
    s(:const, nil, :TestDateAttr),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test__attr,
        s(:args),
        s(:begin,
          s(:lvasgn, :date,
            s(:send,
              s(:const, nil, :Date), :new,
              s(:int, 1965),
              s(:int, 5),
              s(:int, 23))),
          s(:lvasgn, :datetime,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 1965),
              s(:int, 5),
              s(:int, 23),
              s(:int, 22),
              s(:int, 31),
              s(:int, 59))),
          s(:block,
            s(:send,
              s(:array,
                s(:lvar, :date),
                s(:lvar, :datetime)), :each_with_index),
            s(:args,
              s(:arg, :d),
              s(:arg, :i)),
            s(:begin,
              s(:if,
                s(:send,
                  s(:lvar, :i), :==,
                  s(:int, 0)),
                s(:send, nil, :assert_equal,
                  s(:str, "1965-05-23"),
                  s(:send,
                    s(:lvar, :d), :to_s)),
                s(:send, nil, :assert_equal,
                  s(:str, "1965-05-23T22:31:59+00:00"),
                  s(:send,
                    s(:lvar, :d), :to_s))),
              s(:send, nil, :assert_equal,
                s(:str, ""),
                s(:send,
                  s(:send,
                    s(:lvar, :d), :inspect), :gsub!,
                  s(:regexp,
                    s(:str, "."),
                    s(:regopt)),
                  s(:str, ""))),
              s(:send, nil, :assert_equal,
                s(:str, ""),
                s(:send,
                  s(:send,
                    s(:lvar, :d), :to_s), :gsub!,
                  s(:regexp,
                    s(:str, "."),
                    s(:regopt)),
                  s(:str, ""))),
              s(:send, nil, :assert_equal,
                s(:int, 2438904),
                s(:send,
                  s(:lvar, :d), :jd)),
              s(:if,
                s(:send,
                  s(:lvar, :i), :==,
                  s(:int, 0)),
                s(:send, nil, :assert_equal,
                  s(:int, 0),
                  s(:send,
                    s(:lvar, :d), :day_fraction)),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:int, 22), :to_r), :/,
                        s(:int, 24)), :+,
                      s(:send,
                        s(:send,
                          s(:int, 31), :to_r), :/,
                        s(:int, 1440))), :+,
                    s(:send,
                      s(:send,
                        s(:int, 59), :to_r), :/,
                      s(:int, 86400))),
                  s(:send,
                    s(:lvar, :d), :day_fraction))),
              s(:send, nil, :assert_equal,
                s(:int, 38903),
                s(:send,
                  s(:lvar, :d), :mjd)),
              s(:send, nil, :assert_equal,
                s(:int, 139744),
                s(:send,
                  s(:lvar, :d), :ld)),
              s(:send, nil, :assert_equal,
                s(:int, 1965),
                s(:send,
                  s(:lvar, :d), :year)),
              s(:send, nil, :assert_equal,
                s(:int, 143),
                s(:send,
                  s(:lvar, :d), :yday)),
              s(:send, nil, :assert_equal,
                s(:int, 5),
                s(:send,
                  s(:lvar, :d), :mon)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :d), :mon),
                s(:send,
                  s(:lvar, :d), :month)),
              s(:send, nil, :assert_equal,
                s(:int, 23),
                s(:send,
                  s(:lvar, :d), :mday)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :d), :mday),
                s(:send,
                  s(:lvar, :d), :day)),
              s(:if,
                s(:send,
                  s(:lvar, :i), :==,
                  s(:int, 0)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send,
                      s(:lvar, :d), :respond_to?,
                      s(:sym, :hour))),
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send,
                      s(:lvar, :d), :respond_to?,
                      s(:sym, :min))),
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send,
                      s(:lvar, :d), :respond_to?,
                      s(:sym, :sec))),
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send,
                      s(:lvar, :d), :respond_to?,
                      s(:sym, :sec_fraction))),
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send,
                      s(:lvar, :d), :respond_to?,
                      s(:sym, :zone))),
                  s(:send, nil, :assert_equal,
                    s(:false),
                    s(:send,
                      s(:lvar, :d), :respond_to?,
                      s(:sym, :offset)))),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:int, 22),
                    s(:send,
                      s(:lvar, :d), :hour)),
                  s(:send, nil, :assert_equal,
                    s(:int, 31),
                    s(:send,
                      s(:lvar, :d), :min)),
                  s(:send, nil, :assert_equal,
                    s(:int, 59),
                    s(:send,
                      s(:lvar, :d), :sec)),
                  s(:send, nil, :assert_equal,
                    s(:int, 0),
                    s(:send,
                      s(:lvar, :d), :sec_fraction)),
                  s(:send, nil, :assert_equal,
                    s(:str, "+00:00"),
                    s(:send,
                      s(:lvar, :d), :zone)),
                  s(:send, nil, :assert_equal,
                    s(:int, 0),
                    s(:send,
                      s(:lvar, :d), :offset)))),
              s(:send, nil, :assert_equal,
                s(:int, 1965),
                s(:send,
                  s(:lvar, :d), :cwyear)),
              s(:send, nil, :assert_equal,
                s(:int, 20),
                s(:send,
                  s(:lvar, :d), :cweek)),
              s(:send, nil, :assert_equal,
                s(:int, 7),
                s(:send,
                  s(:lvar, :d), :cwday)),
              s(:send, nil, :assert_equal,
                s(:int, 0),
                s(:send,
                  s(:lvar, :d), :wday)),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:lvar, :d), :leap?)),
              s(:send, nil, :assert_equal,
                s(:false),
                s(:send,
                  s(:lvar, :d), :julian?)),
              s(:send, nil, :assert_equal,
                s(:true),
                s(:send,
                  s(:lvar, :d), :gregorian?)),
              s(:send, nil, :assert_equal,
                s(:const,
                  s(:const, nil, :Date), :ITALY),
                s(:send,
                  s(:lvar, :d), :start)),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :d), :start),
                s(:send,
                  s(:lvar, :d), :start)))),
          s(:lvasgn, :d,
            s(:send,
              s(:send,
                s(:const, nil, :DateTime), :new,
                s(:int, 1965),
                s(:int, 5),
                s(:int, 23),
                s(:int, 22),
                s(:int, 31),
                s(:int, 59)), :+,
              s(:send,
                s(:send,
                  s(:int, 1), :to_r), :/,
                s(:begin,
                  s(:send,
                    s(:int, 86400), :*,
                    s(:int, 2)))))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:int, 1), :to_r), :/,
              s(:int, 2)),
            s(:send,
              s(:lvar, :d), :sec_fraction)))),
      s(:def, :test__wday_predicate,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :Date), :new,
              s(:int, 2005),
              s(:int, 10),
              s(:int, 23))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:lvar, :d), :sunday?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :d), :monday?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :d), :tuesday?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :d), :wednesday?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :d), :thursday?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :d), :friday?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:lvar, :d), :saturday?)),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :Date), :new,
              s(:int, 2005),
              s(:int, 10),
              s(:int, 30))),
          s(:block,
            s(:send,
              s(:int, 14), :times),
            s(:args,
              s(:arg, :i)),
            s(:send, nil, :assert,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :d), :+,
                    s(:lvar, :i))), :__send__,
                s(:send,
                  s(:array,
                    s(:str, "sunday?"),
                    s(:str, "monday?"),
                    s(:str, "tuesday?"),
                    s(:str, "wednesday?"),
                    s(:str, "thursday?"),
                    s(:str, "friday?"),
                    s(:str, "saturday?")), :[],
                  s(:send,
                    s(:lvar, :i), :%,
                    s(:int, 7)))))))),
      s(:def, :test_nth_kday,
        s(:args),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new), :respond_to?,
              s(:sym, :nth_kday?),
              s(:true)), nil,
            s(:send, nil, :skip)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, 1),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, 2),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, 3),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, 4),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, 5),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, -1),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, -2),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, -3),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, -4),
              s(:int, 0))),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2001),
                s(:int, 1),
                s(:int, 14)), :__send__,
              s(:sym, :nth_kday?),
              s(:int, -5),
              s(:int, 0))))))))
