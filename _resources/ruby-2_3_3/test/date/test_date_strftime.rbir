s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "date")),
  s(:class,
    s(:const, nil, :TestDateStrftime),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:casgn, nil, :STRFTIME_2001_02_03,
        s(:hash,
          s(:pair,
            s(:str, "%A"),
            s(:array,
              s(:str, "Saturday"),
              s(:hash,
                s(:pair,
                  s(:sym, :wday),
                  s(:int, 6))))),
          s(:pair,
            s(:str, "%a"),
            s(:array,
              s(:str, "Sat"),
              s(:hash,
                s(:pair,
                  s(:sym, :wday),
                  s(:int, 6))))),
          s(:pair,
            s(:str, "%B"),
            s(:array,
              s(:str, "February"),
              s(:hash,
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2))))),
          s(:pair,
            s(:str, "%b"),
            s(:array,
              s(:str, "Feb"),
              s(:hash,
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2))))),
          s(:pair,
            s(:str, "%c"),
            s(:array,
              s(:str, "Sat Feb  3 00:00:00 2001"),
              s(:hash,
                s(:pair,
                  s(:sym, :wday),
                  s(:int, 6)),
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :sec),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%d"),
            s(:array,
              s(:str, "03"),
              s(:hash,
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3))))),
          s(:pair,
            s(:str, "%e"),
            s(:array,
              s(:str, " 3"),
              s(:hash,
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3))))),
          s(:pair,
            s(:str, "%H"),
            s(:array,
              s(:str, "00"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%I"),
            s(:array,
              s(:str, "12"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%j"),
            s(:array,
              s(:str, "034"),
              s(:hash,
                s(:pair,
                  s(:sym, :yday),
                  s(:int, 34))))),
          s(:pair,
            s(:str, "%M"),
            s(:array,
              s(:str, "00"),
              s(:hash,
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%m"),
            s(:array,
              s(:str, "02"),
              s(:hash,
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2))))),
          s(:pair,
            s(:str, "%p"),
            s(:array,
              s(:str, "AM"),
              s(:hash))),
          s(:pair,
            s(:str, "%S"),
            s(:array,
              s(:str, "00"),
              s(:hash,
                s(:pair,
                  s(:sym, :sec),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%U"),
            s(:array,
              s(:str, "04"),
              s(:hash,
                s(:pair,
                  s(:sym, :wnum0),
                  s(:int, 4))))),
          s(:pair,
            s(:str, "%W"),
            s(:array,
              s(:str, "05"),
              s(:hash,
                s(:pair,
                  s(:sym, :wnum1),
                  s(:int, 5))))),
          s(:pair,
            s(:str, "%X"),
            s(:array,
              s(:str, "00:00:00"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :sec),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%x"),
            s(:array,
              s(:str, "02/03/01"),
              s(:hash,
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%Y"),
            s(:array,
              s(:str, "2001"),
              s(:hash,
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%y"),
            s(:array,
              s(:str, "01"),
              s(:hash,
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%Z"),
            s(:array,
              s(:str, "+00:00"),
              s(:hash,
                s(:pair,
                  s(:sym, :zone),
                  s(:str, "+00:00")),
                s(:pair,
                  s(:sym, :offset),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%%"),
            s(:array,
              s(:str, "%"),
              s(:hash))),
          s(:pair,
            s(:str, "%C"),
            s(:array,
              s(:str, "20"),
              s(:hash))),
          s(:pair,
            s(:str, "%D"),
            s(:array,
              s(:str, "02/03/01"),
              s(:hash,
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%F"),
            s(:array,
              s(:str, "2001-02-03"),
              s(:hash,
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001)),
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3))))),
          s(:pair,
            s(:str, "%G"),
            s(:array,
              s(:str, "2001"),
              s(:hash,
                s(:pair,
                  s(:sym, :cwyear),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%g"),
            s(:array,
              s(:str, "01"),
              s(:hash,
                s(:pair,
                  s(:sym, :cwyear),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%h"),
            s(:array,
              s(:str, "Feb"),
              s(:hash,
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2))))),
          s(:pair,
            s(:str, "%k"),
            s(:array,
              s(:str, " 0"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%L"),
            s(:array,
              s(:str, "000"),
              s(:hash,
                s(:pair,
                  s(:sym, :sec_fraction),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%l"),
            s(:array,
              s(:str, "12"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%N"),
            s(:array,
              s(:str, "000000000"),
              s(:hash,
                s(:pair,
                  s(:sym, :sec_fraction),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%n"),
            s(:array,
              s(:str, "\n"),
              s(:hash))),
          s(:pair,
            s(:str, "%P"),
            s(:array,
              s(:str, "am"),
              s(:hash))),
          s(:pair,
            s(:str, "%Q"),
            s(:array,
              s(:str, "981158400000"),
              s(:hash,
                s(:pair,
                  s(:sym, :seconds),
                  s(:send,
                    s(:int, 981158400), :to_r))))),
          s(:pair,
            s(:str, "%R"),
            s(:array,
              s(:str, "00:00"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%r"),
            s(:array,
              s(:str, "12:00:00 AM"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :sec),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%s"),
            s(:array,
              s(:str, "981158400"),
              s(:hash,
                s(:pair,
                  s(:sym, :seconds),
                  s(:int, 981158400))))),
          s(:pair,
            s(:str, "%T"),
            s(:array,
              s(:str, "00:00:00"),
              s(:hash,
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :sec),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%t"),
            s(:array,
              s(:str, "\t"),
              s(:hash))),
          s(:pair,
            s(:str, "%u"),
            s(:array,
              s(:str, "6"),
              s(:hash,
                s(:pair,
                  s(:sym, :cwday),
                  s(:int, 6))))),
          s(:pair,
            s(:str, "%V"),
            s(:array,
              s(:str, "05"),
              s(:hash,
                s(:pair,
                  s(:sym, :cweek),
                  s(:int, 5))))),
          s(:pair,
            s(:str, "%v"),
            s(:array,
              s(:str, " 3-Feb-2001"),
              s(:hash,
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))),
          s(:pair,
            s(:str, "%z"),
            s(:array,
              s(:str, "+0000"),
              s(:hash,
                s(:pair,
                  s(:sym, :zone),
                  s(:str, "+0000")),
                s(:pair,
                  s(:sym, :offset),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%+"),
            s(:array,
              s(:str, "Sat Feb  3 00:00:00 +00:00 2001"),
              s(:hash,
                s(:pair,
                  s(:sym, :wday),
                  s(:int, 6)),
                s(:pair,
                  s(:sym, :mon),
                  s(:int, 2)),
                s(:pair,
                  s(:sym, :mday),
                  s(:int, 3)),
                s(:pair,
                  s(:sym, :hour),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :min),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :sec),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :zone),
                  s(:str, "+00:00")),
                s(:pair,
                  s(:sym, :offset),
                  s(:int, 0)),
                s(:pair,
                  s(:sym, :year),
                  s(:int, 2001))))))),
      s(:casgn, nil, :STRFTIME_2001_02_03_CVS19,
        s(:hash)),
      s(:casgn, nil, :STRFTIME_2001_02_03_GNUext,
        s(:hash,
          s(:pair,
            s(:str, "%:z"),
            s(:array,
              s(:str, "+00:00"),
              s(:hash,
                s(:pair,
                  s(:sym, :zone),
                  s(:str, "+00:00")),
                s(:pair,
                  s(:sym, :offset),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%::z"),
            s(:array,
              s(:str, "+00:00:00"),
              s(:hash,
                s(:pair,
                  s(:sym, :zone),
                  s(:str, "+00:00:00")),
                s(:pair,
                  s(:sym, :offset),
                  s(:int, 0))))),
          s(:pair,
            s(:str, "%:::z"),
            s(:array,
              s(:str, "+00"),
              s(:hash,
                s(:pair,
                  s(:sym, :zone),
                  s(:str, "+00")),
                s(:pair,
                  s(:sym, :offset),
                  s(:int, 0))))))),
      s(:send,
        s(:const, nil, :STRFTIME_2001_02_03), :update,
        s(:const, nil, :STRFTIME_2001_02_03_CVS19)),
      s(:send,
        s(:const, nil, :STRFTIME_2001_02_03), :update,
        s(:const, nil, :STRFTIME_2001_02_03_GNUext)),
      s(:def, :test_strftime,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :Date), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3))),
          s(:block,
            s(:send,
              s(:const, nil, :STRFTIME_2001_02_03), :each),
            s(:args,
              s(:arg, :f),
              s(:arg, :s)),
            s(:begin,
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :s), :[],
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :d), :strftime,
                  s(:lvar, :f)),
                s(:send,
                  s(:array,
                    s(:lvar, :f),
                    s(:lvar, :s)), :inspect)),
              s(:case,
                s(:send,
                  s(:lvar, :f), :[],
                  s(:int, -1),
                  s(:int, 1)),
                s(:when,
                  s(:str, "c"),
                  s(:str, "C"),
                  s(:str, "x"),
                  s(:str, "X"),
                  s(:str, "y"),
                  s(:str, "Y"),
                  s(:begin,
                    s(:lvasgn, :f2,
                      s(:send,
                        s(:lvar, :f), :sub,
                        s(:regexp,
                          s(:str, "\\A%"),
                          s(:regopt)),
                        s(:str, "%E"))),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :s), :[],
                        s(:int, 0)),
                      s(:send,
                        s(:lvar, :d), :strftime,
                        s(:lvar, :f2)),
                      s(:send,
                        s(:array,
                          s(:lvar, :f2),
                          s(:lvar, :s)), :inspect)))),
                s(:begin,
                  s(:lvasgn, :f2,
                    s(:send,
                      s(:lvar, :f), :sub,
                      s(:regexp,
                        s(:str, "\\A%"),
                        s(:regopt)),
                      s(:str, "%E"))),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :f2),
                    s(:send,
                      s(:lvar, :d), :strftime,
                      s(:lvar, :f2)),
                    s(:send,
                      s(:array,
                        s(:lvar, :f2),
                        s(:lvar, :s)), :inspect)))),
              s(:case,
                s(:send,
                  s(:lvar, :f), :[],
                  s(:int, -1),
                  s(:int, 1)),
                s(:when,
                  s(:str, "d"),
                  s(:str, "e"),
                  s(:str, "H"),
                  s(:str, "k"),
                  s(:str, "I"),
                  s(:str, "l"),
                  s(:str, "m"),
                  s(:str, "M"),
                  s(:str, "S"),
                  s(:str, "u"),
                  s(:str, "U"),
                  s(:str, "V"),
                  s(:str, "w"),
                  s(:str, "W"),
                  s(:str, "y"),
                  s(:begin,
                    s(:lvasgn, :f2,
                      s(:send,
                        s(:lvar, :f), :sub,
                        s(:regexp,
                          s(:str, "\\A%"),
                          s(:regopt)),
                        s(:str, "%O"))),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :s), :[],
                        s(:int, 0)),
                      s(:send,
                        s(:lvar, :d), :strftime,
                        s(:lvar, :f2)),
                      s(:send,
                        s(:array,
                          s(:lvar, :f2),
                          s(:lvar, :s)), :inspect)))),
                s(:begin,
                  s(:lvasgn, :f2,
                    s(:send,
                      s(:lvar, :f), :sub,
                      s(:regexp,
                        s(:str, "\\A%"),
                        s(:regopt)),
                      s(:str, "%O"))),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :f2),
                    s(:send,
                      s(:lvar, :d), :strftime,
                      s(:lvar, :f2)),
                    s(:send,
                      s(:array,
                        s(:lvar, :f2),
                        s(:lvar, :s)), :inspect)))))))),
      s(:def, :test_strftime__2,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :Date), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03"),
            s(:send,
              s(:lvar, :d), :strftime)),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T00:00:00+00:00"),
            s(:send,
              s(:lvar, :d), :strftime)),
          s(:send, nil, :assert_equal,
            s(:str, ""),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, ""))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, " "), :*,
              s(:int, 3)),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:send,
                s(:str, " "), :*,
                s(:int, 3)))),
          s(:send, nil, :assert_equal,
            s(:str, "\tfoo\n\u0000\r"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "\tfoo\n\u0000\r"))),
          s(:send, nil, :assert_equal,
            s(:str, "%\n"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%\n"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:send,
                s(:str, "Saturday"), :*,
                s(:int, 1024)), :+,
              s(:str, ",")),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:send,
                s(:send,
                  s(:str, "%A"), :*,
                  s(:int, 1024)), :+,
                s(:str, ",")))),
          s(:send, nil, :assert_equal,
            s(:str, "%%"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%%%"))),
          s(:send, nil, :assert_equal,
            s(:str, "Anton von Webern"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "Anton von Webern"))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3),
              s(:int, 1),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T01:02:03+00:00"),
            s(:send,
              s(:lvar, :d), :strftime)),
          s(:send, nil, :assert_equal,
            s(:str, "AM"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%p"))),
          s(:send, nil, :assert_equal,
            s(:str, "am"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%P"))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3),
              s(:int, 13),
              s(:int, 14),
              s(:int, 15))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T13:14:15+00:00"),
            s(:send,
              s(:lvar, :d), :strftime)),
          s(:send, nil, :assert_equal,
            s(:str, "PM"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%p"))),
          s(:send, nil, :assert_equal,
            s(:str, "pm"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%P"))))),
      s(:def, :test_strftime__3_1,
        s(:args),
        s(:block,
          s(:send,
            s(:begin,
              s(:irange,
                s(:send,
                  s(:const, nil, :Date), :new,
                  s(:int, 1970),
                  s(:int, 1),
                  s(:int, 1)),
                s(:send,
                  s(:const, nil, :Date), :new,
                  s(:int, 2037),
                  s(:int, 12),
                  s(:int, 31)))), :each),
          s(:args,
            s(:arg, :d)),
          s(:begin,
            s(:lvasgn, :t,
              s(:send,
                s(:const, nil, :Time), :utc,
                s(:send,
                  s(:lvar, :d), :year),
                s(:send,
                  s(:lvar, :d), :mon),
                s(:send,
                  s(:lvar, :d), :mday))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :t), :strftime,
                s(:str, "%U")),
              s(:send,
                s(:lvar, :d), :strftime,
                s(:str, "%U"))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :t), :strftime,
                s(:str, "%W")),
              s(:send,
                s(:lvar, :d), :strftime,
                s(:str, "%W")))))),
      s(:def, :test_strftime__3_2,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:send,
                s(:const, nil, :Time), :now), :strftime,
              s(:str, "%G"))),
          s(:if,
            s(:or,
              s(:send,
                s(:lvar, :s), :empty?),
              s(:send,
                s(:lvar, :s), :==,
                s(:str, "%G"))),
            s(:send, nil, :skip), nil),
          s(:block,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:send,
                    s(:const, nil, :Date), :new,
                    s(:int, 1970),
                    s(:int, 1),
                    s(:int, 1)),
                  s(:send,
                    s(:const, nil, :Date), :new,
                    s(:int, 2037),
                    s(:int, 12),
                    s(:int, 31)))), :each),
            s(:args,
              s(:arg, :d)),
            s(:begin,
              s(:lvasgn, :t,
                s(:send,
                  s(:const, nil, :Time), :utc,
                  s(:send,
                    s(:lvar, :d), :year),
                  s(:send,
                    s(:lvar, :d), :mon),
                  s(:send,
                    s(:lvar, :d), :mday))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :t), :strftime,
                  s(:str, "%G")),
                s(:send,
                  s(:lvar, :d), :strftime,
                  s(:str, "%G"))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :t), :strftime,
                  s(:str, "%g")),
                s(:send,
                  s(:lvar, :d), :strftime,
                  s(:str, "%g"))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :t), :strftime,
                  s(:str, "%V")),
                s(:send,
                  s(:lvar, :d), :strftime,
                  s(:str, "%V"))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :t), :strftime,
                  s(:str, "%u")),
                s(:send,
                  s(:lvar, :d), :strftime,
                  s(:str, "%u"))))))),
      s(:def, :test_strftime__4,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:str, "2006-08-08T23:15:33.123456789")),
          s(:lvasgn, :f,
            s(:str, "%FT%T.%N")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:lvar, :s))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :strptime,
              s(:lvar, :s),
              s(:lvar, :f))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :s,
            s(:str, "2006-08-08T23:15:33.123456789")),
          s(:lvasgn, :f,
            s(:str, "%FT%T.%N")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:send,
                s(:lvar, :s), :+,
                s(:str, "123456789")))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :strptime,
              s(:send,
                s(:lvar, :s), :+,
                s(:str, "123456789")),
              s(:lvar, :f))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :si,
            s(:str, "2006-08-08T23:15:33.9")),
          s(:lvasgn, :so,
            s(:str, "2006-08-08T23:15:33.900000000")),
          s(:lvasgn, :f,
            s(:str, "%FT%T.%N")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:lvar, :si))),
          s(:send, nil, :assert_equal,
            s(:lvar, :so),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :strptime,
              s(:lvar, :si),
              s(:lvar, :f))),
          s(:send, nil, :assert_equal,
            s(:lvar, :so),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :s,
            s(:str, "2006-08-08T23:15:33.123")),
          s(:lvasgn, :f,
            s(:str, "%FT%T.%L")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:lvar, :s))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :strptime,
              s(:lvar, :s),
              s(:lvar, :f))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :s,
            s(:str, "2006-08-08T23:15:33.123")),
          s(:lvasgn, :f,
            s(:str, "%FT%T.%L")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:send,
                s(:lvar, :s), :+,
                s(:str, "123")))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :strptime,
              s(:send,
                s(:lvar, :s), :+,
                s(:str, "123")),
              s(:lvar, :f))),
          s(:send, nil, :assert_equal,
            s(:lvar, :s),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :si,
            s(:str, "2006-08-08T23:15:33.9")),
          s(:lvasgn, :so,
            s(:str, "2006-08-08T23:15:33.900")),
          s(:lvasgn, :f,
            s(:str, "%FT%T.%L")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:lvar, :si))),
          s(:send, nil, :assert_equal,
            s(:lvar, :so),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :strptime,
              s(:lvar, :si),
              s(:lvar, :f))),
          s(:send, nil, :assert_equal,
            s(:lvar, :so),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:lvar, :f))))),
      s(:def, :test_strftime__offset,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:str, "2006-08-08T23:15:33")),
          s(:block,
            s(:send,
              s(:block,
                s(:send,
                  s(:begin,
                    s(:irange,
                      s(:int, -24),
                      s(:int, 24))), :collect),
                s(:args,
                  s(:arg, :x)),
                s(:send,
                  s(:str, "%+.2d"), :%,
                  s(:lvar, :x))), :each),
            s(:args,
              s(:arg, :hh)),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "00"),
                  s(:str, "30")), :each),
              s(:args,
                s(:arg, :mm)),
              s(:begin,
                s(:lvasgn, :r,
                  s(:send,
                    s(:lvar, :hh), :+,
                    s(:lvar, :mm))),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :r), :[],
                      s(:int, -4),
                      s(:int, 4)), :==,
                    s(:str, "2430")),
                  s(:lvasgn, :r,
                    s(:str, "+0000")), nil),
                s(:lvasgn, :d,
                  s(:send,
                    s(:const, nil, :DateTime), :parse,
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :+,
                        s(:lvar, :hh)), :+,
                      s(:lvar, :mm)))),
                s(:send, nil, :assert_equal,
                  s(:lvar, :r),
                  s(:send,
                    s(:lvar, :d), :strftime,
                    s(:str, "%z")))))))),
      s(:def, :test_strftime_milli,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:str, "1970-01-01T00:00:00.123456789")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:lvar, :s))),
          s(:send, nil, :assert_equal,
            s(:str, "123"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%Q"))),
          s(:lvasgn, :s,
            s(:str, "1970-01-02T02:03:04.123456789")),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:lvar, :s))),
          s(:send, nil, :assert_equal,
            s(:str, "93784123"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%Q"))))),
      s(:def, :test_strftime__minus,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 1969),
              s(:int, 12),
              s(:int, 31),
              s(:int, 23),
              s(:int, 59),
              s(:int, 59))),
          s(:send, nil, :assert_equal,
            s(:str, "-1"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%s"))),
          s(:send, nil, :assert_equal,
            s(:str, "-1000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%Q"))))),
      s(:def, :test_strftime__gnuext,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 2006),
              s(:int, 8),
              s(:int, 8),
              s(:int, 23),
              s(:int, 15),
              s(:int, 33),
              s(:send,
                s(:send,
                  s(:int, 9), :to_r), :/,
                s(:int, 24)))),
          s(:send, nil, :assert_equal,
            s(:str, "2006"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "2006"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "02006"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "2006"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_Y"))),
          s(:send, nil, :assert_equal,
            s(:str, " 2006"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "02006"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%05Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-d"))),
          s(:send, nil, :assert_equal,
            s(:str, "8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-3d"))),
          s(:send, nil, :assert_equal,
            s(:str, "008"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%3d"))),
          s(:send, nil, :assert_equal,
            s(:str, " 8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_d"))),
          s(:send, nil, :assert_equal,
            s(:str, "  8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_3d"))),
          s(:send, nil, :assert_equal,
            s(:str, "008"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%03d"))),
          s(:send, nil, :assert_equal,
            s(:str, "8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-e"))),
          s(:send, nil, :assert_equal,
            s(:str, "8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-3e"))),
          s(:send, nil, :assert_equal,
            s(:str, "  8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%3e"))),
          s(:send, nil, :assert_equal,
            s(:str, " 8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_e"))),
          s(:send, nil, :assert_equal,
            s(:str, "  8"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_3e"))),
          s(:send, nil, :assert_equal,
            s(:str, "008"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%03e"))),
          s(:send, nil, :assert_equal,
            s(:str, "Tuesday"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-10A"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Tuesday"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%10A"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Tuesday"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_10A"))),
          s(:send, nil, :assert_equal,
            s(:str, "000Tuesday"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%010A"))),
          s(:send, nil, :assert_equal,
            s(:str, "TUESDAY"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^A"))),
          s(:send, nil, :assert_equal,
            s(:str, "TUESDAY"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#A"))),
          s(:send, nil, :assert_equal,
            s(:str, "Tue"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-6a"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Tue"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%6a"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Tue"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_6a"))),
          s(:send, nil, :assert_equal,
            s(:str, "000Tue"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%06a"))),
          s(:send, nil, :assert_equal,
            s(:str, "TUE"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^a"))),
          s(:send, nil, :assert_equal,
            s(:str, "TUE"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#a"))),
          s(:send, nil, :assert_equal,
            s(:str, "   TUE"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#6a"))),
          s(:send, nil, :assert_equal,
            s(:str, "August"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-10B"))),
          s(:send, nil, :assert_equal,
            s(:str, "    August"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%10B"))),
          s(:send, nil, :assert_equal,
            s(:str, "    August"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_10B"))),
          s(:send, nil, :assert_equal,
            s(:str, "0000August"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%010B"))),
          s(:send, nil, :assert_equal,
            s(:str, "AUGUST"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^B"))),
          s(:send, nil, :assert_equal,
            s(:str, "AUGUST"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#B"))),
          s(:send, nil, :assert_equal,
            s(:str, "Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-6b"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%6b"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_6b"))),
          s(:send, nil, :assert_equal,
            s(:str, "000Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%06b"))),
          s(:send, nil, :assert_equal,
            s(:str, "AUG"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^b"))),
          s(:send, nil, :assert_equal,
            s(:str, "AUG"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#b"))),
          s(:send, nil, :assert_equal,
            s(:str, "   AUG"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#6b"))),
          s(:send, nil, :assert_equal,
            s(:str, "Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-6h"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%6h"))),
          s(:send, nil, :assert_equal,
            s(:str, "   Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_6h"))),
          s(:send, nil, :assert_equal,
            s(:str, "000Aug"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%06h"))),
          s(:send, nil, :assert_equal,
            s(:str, "AUG"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^h"))),
          s(:send, nil, :assert_equal,
            s(:str, "AUG"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#h"))),
          s(:send, nil, :assert_equal,
            s(:str, "   AUG"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#6h"))),
          s(:send, nil, :assert_equal,
            s(:str, "PM"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^p"))),
          s(:send, nil, :assert_equal,
            s(:str, "pm"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#p"))),
          s(:send, nil, :assert_equal,
            s(:str, "PM"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^P"))),
          s(:send, nil, :assert_equal,
            s(:str, "PM"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%#P"))),
          s(:send, nil, :assert_equal,
            s(:str, "+000900"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%7z"))),
          s(:send, nil, :assert_equal,
            s(:str, "   +900"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_7z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+09:00"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%:z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+0009:00"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%8:z"))),
          s(:send, nil, :assert_equal,
            s(:str, "   +9:00"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_8:z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+09:00:00"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+0009:00:00"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%11::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "   +9:00:00"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_11::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+09"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%:::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+0009"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%5:::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "   +9"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_5:::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+9"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-:::z"))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, -200),
              s(:int, 8),
              s(:int, 8),
              s(:int, 23),
              s(:int, 15),
              s(:int, 33),
              s(:send,
                s(:send,
                  s(:int, 9), :to_r), :/,
                s(:int, 24)))),
          s(:send, nil, :assert_equal,
            s(:str, "-0200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-0200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, " -200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_Y"))),
          s(:send, nil, :assert_equal,
            s(:str, " -200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-0200"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%05Y"))),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, -2000),
              s(:int, 8),
              s(:int, 8),
              s(:int, 23),
              s(:int, 15),
              s(:int, 33),
              s(:send,
                s(:send,
                  s(:int, 9), :to_r), :/,
                s(:int, 24)))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_5Y"))),
          s(:send, nil, :assert_equal,
            s(:str, "-2000"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%05Y"))))),
      s(:def, :test_strftime__gnuext_LN,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:str, "2008-11-25T00:11:22.0123456789"))),
          s(:send, nil, :assert_equal,
            s(:str, "012"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%L"))),
          s(:send, nil, :assert_equal,
            s(:str, "012"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%0L"))),
          s(:send, nil, :assert_equal,
            s(:str, "0"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%1L"))),
          s(:send, nil, :assert_equal,
            s(:str, "01"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%2L"))),
          s(:send, nil, :assert_equal,
            s(:str, "01234567890"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%11L"))),
          s(:send, nil, :assert_equal,
            s(:str, "01234567890"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%011L"))),
          s(:send, nil, :assert_equal,
            s(:str, "01234567890"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_11L"))),
          s(:send, nil, :assert_equal,
            s(:str, "012345678"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%N"))),
          s(:send, nil, :assert_equal,
            s(:str, "012345678"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%0N"))),
          s(:send, nil, :assert_equal,
            s(:str, "0"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%1N"))),
          s(:send, nil, :assert_equal,
            s(:str, "01"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%2N"))),
          s(:send, nil, :assert_equal,
            s(:str, "01234567890"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%11N"))),
          s(:send, nil, :assert_equal,
            s(:str, "01234567890"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%011N"))),
          s(:send, nil, :assert_equal,
            s(:str, "01234567890"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_11N"))))),
      s(:def, :test_strftime__gnuext_z,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:str, "2006-08-08T23:15:33+09:08:07"))),
          s(:send, nil, :assert_equal,
            s(:str, "+0908"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+09:08"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%:z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+09:08:07"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%::z"))),
          s(:send, nil, :assert_equal,
            s(:str, "+09:08:07"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%:::z"))))),
      s(:def, :test_strftime__gnuext_complex,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:str, "2001-02-03T04:05:06+09:00"))),
          s(:send, nil, :assert_equal,
            s(:str, "Sat Feb  3 04:05:06 2001"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-100c"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "Sat Feb  3 04:05:06 2001"), :rjust,
              s(:int, 100)),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%100c"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "Sat Feb  3 04:05:06 2001"), :rjust,
              s(:int, 100)),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_100c"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "Sat Feb  3 04:05:06 2001"), :rjust,
              s(:int, 100),
              s(:str, "0")),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%0100c"))),
          s(:send, nil, :assert_equal,
            s(:str, "SAT FEB  3 04:05:06 2001"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^c"))),
          s(:send, nil, :assert_equal,
            s(:str, "Sat Feb  3 04:05:06 +09:00 2001"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%-100+"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "Sat Feb  3 04:05:06 +09:00 2001"), :rjust,
              s(:int, 100)),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%100+"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "Sat Feb  3 04:05:06 +09:00 2001"), :rjust,
              s(:int, 100)),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%_100+"))),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:str, "Sat Feb  3 04:05:06 +09:00 2001"), :rjust,
              s(:int, 100),
              s(:str, "0")),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%0100+"))),
          s(:send, nil, :assert_equal,
            s(:str, "SAT FEB  3 04:05:06 +09:00 2001"),
            s(:send,
              s(:lvar, :d), :strftime,
              s(:str, "%^+"))))),
      s(:def, :test__different_format,
        s(:args),
        s(:begin,
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :Date), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "Sat Feb  3 00:00:00 2001"),
            s(:send,
              s(:lvar, :d), :ctime)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :ctime),
            s(:send,
              s(:lvar, :d), :asctime)),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03"),
            s(:send,
              s(:lvar, :d), :iso8601)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :xmlschema),
            s(:send,
              s(:lvar, :d), :iso8601)),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T00:00:00+00:00"),
            s(:send,
              s(:lvar, :d), :rfc3339)),
          s(:send, nil, :assert_equal,
            s(:str, "Sat, 3 Feb 2001 00:00:00 +0000"),
            s(:send,
              s(:lvar, :d), :rfc2822)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :rfc822),
            s(:send,
              s(:lvar, :d), :rfc2822)),
          s(:send, nil, :assert_equal,
            s(:str, "Sat, 03 Feb 2001 00:00:00 GMT"),
            s(:send,
              s(:lvar, :d), :httpdate)),
          s(:send, nil, :assert_equal,
            s(:str, "H13.02.03"),
            s(:send,
              s(:lvar, :d), :jisx0301)),
          s(:lvasgn, :d,
            s(:send,
              s(:const, nil, :DateTime), :new,
              s(:int, 2001),
              s(:int, 2),
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "Sat Feb  3 00:00:00 2001"),
            s(:send,
              s(:lvar, :d), :ctime)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :ctime),
            s(:send,
              s(:lvar, :d), :asctime)),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T00:00:00+00:00"),
            s(:send,
              s(:lvar, :d), :iso8601)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :rfc3339),
            s(:send,
              s(:lvar, :d), :iso8601)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :xmlschema),
            s(:send,
              s(:lvar, :d), :iso8601)),
          s(:send, nil, :assert_equal,
            s(:str, "Sat, 3 Feb 2001 00:00:00 +0000"),
            s(:send,
              s(:lvar, :d), :rfc2822)),
          s(:send, nil, :assert_equal,
            s(:send,
              s(:lvar, :d), :rfc822),
            s(:send,
              s(:lvar, :d), :rfc2822)),
          s(:send, nil, :assert_equal,
            s(:str, "Sat, 03 Feb 2001 00:00:00 GMT"),
            s(:send,
              s(:lvar, :d), :httpdate)),
          s(:send, nil, :assert_equal,
            s(:str, "H13.02.03T00:00:00+00:00"),
            s(:send,
              s(:lvar, :d), :jisx0301)),
          s(:lvasgn, :d2,
            s(:send,
              s(:const, nil, :DateTime), :parse,
              s(:str, "2001-02-03T04:05:06.123456"))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123+00:00"),
            s(:send,
              s(:lvar, :d2), :iso8601,
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123+00:00"),
            s(:send,
              s(:lvar, :d2), :rfc3339,
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "H13.02.03T04:05:06.123+00:00"),
            s(:send,
              s(:lvar, :d2), :jisx0301,
              s(:int, 3))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123+00:00"),
            s(:send,
              s(:lvar, :d2), :iso8601,
              s(:float, 3.5))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123+00:00"),
            s(:send,
              s(:lvar, :d2), :rfc3339,
              s(:float, 3.5))),
          s(:send, nil, :assert_equal,
            s(:str, "H13.02.03T04:05:06.123+00:00"),
            s(:send,
              s(:lvar, :d2), :jisx0301,
              s(:float, 3.5))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123456000+00:00"),
            s(:send,
              s(:lvar, :d2), :iso8601,
              s(:int, 9))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123456000+00:00"),
            s(:send,
              s(:lvar, :d2), :rfc3339,
              s(:int, 9))),
          s(:send, nil, :assert_equal,
            s(:str, "H13.02.03T04:05:06.123456000+00:00"),
            s(:send,
              s(:lvar, :d2), :jisx0301,
              s(:int, 9))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123456000+00:00"),
            s(:send,
              s(:lvar, :d2), :iso8601,
              s(:float, 9.9))),
          s(:send, nil, :assert_equal,
            s(:str, "2001-02-03T04:05:06.123456000+00:00"),
            s(:send,
              s(:lvar, :d2), :rfc3339,
              s(:float, 9.9))),
          s(:send, nil, :assert_equal,
            s(:str, "H13.02.03T04:05:06.123456000+00:00"),
            s(:send,
              s(:lvar, :d2), :jisx0301,
              s(:float, 9.9))),
          s(:send, nil, :assert_equal,
            s(:str, "1800-01-01T00:00:00+00:00"),
            s(:send,
              s(:send,
                s(:const, nil, :DateTime), :new,
                s(:int, 1800)), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "1868-01-25"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1868-01-25")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "1872-12-31"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1872-12-31")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "M06.01.01"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1873-01-01")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "M45.07.29"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1912-07-29")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "T01.07.30"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1912-07-30")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "T15.12.24"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1926-12-24")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "S01.12.25"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1926-12-25")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "S64.01.07"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1989-01-07")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "H01.01.08"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "1989-01-08")), :jisx0301)),
          s(:send, nil, :assert_equal,
            s(:str, "H18.09.01"),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :parse,
                s(:str, "2006-09-01")), :jisx0301)),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "M06.01.01"),
                s(:str, "M45.07.29"),
                s(:str, "T01.07.30"),
                s(:str, "T15.12.24"),
                s(:str, "S01.12.25"),
                s(:str, "S64.01.07"),
                s(:str, "H01.01.08"),
                s(:str, "H18.09.01")), :each),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:send,
                  s(:const, nil, :Date), :parse,
                  s(:lvar, :s)), :jisx0301))))),
      s(:def, :test_overflow,
        s(:args),
        s(:begin,
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError),
              s(:const,
                s(:const, nil, :Errno), :ERANGE)),
            s(:args),
            s(:send,
              s(:send,
                s(:const, nil, :Date), :new,
                s(:int, 2000),
                s(:int, 1),
                s(:int, 1)), :strftime,
              s(:str, "%2147483647c"))),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError),
              s(:const,
                s(:const, nil, :Errno), :ERANGE)),
            s(:args),
            s(:send,
              s(:send,
                s(:const, nil, :DateTime), :new,
                s(:int, 2000),
                s(:int, 1),
                s(:int, 1)), :strftime,
              s(:str, "%2147483647c"))))))))
