s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestObjectReferences),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_range_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:irange,
              s(:int, 1),
              s(:int, 2)))),
        s(:def, :test_module_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:const, nil, :Psych))),
        s(:def, :test_class_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:const, nil, :TestObjectReferences))),
        s(:def, :test_rational_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:send, nil, :Rational,
              s(:str, "1.2")))),
        s(:def, :test_complex_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:send, nil, :Complex,
              s(:int, 1),
              s(:int, 2)))),
        s(:def, :test_datetime_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:send,
              s(:const, nil, :DateTime), :now))),
        s(:def, :test_struct_has_references,
          s(:args),
          s(:send, nil, :assert_reference_trip,
            s(:send,
              s(:send,
                s(:const, nil, :Struct), :new,
                s(:sym, :foo)), :new,
              s(:int, 1)))),
        s(:def, :assert_reference_trip,
          s(:args,
            s(:arg, :obj)),
          s(:begin,
            s(:lvasgn, :yml,
              s(:send,
                s(:const, nil, :Psych), :dump,
                s(:array,
                  s(:lvar, :obj),
                  s(:lvar, :obj)))),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "\\*-?\\d+"),
                s(:regopt)),
              s(:lvar, :yml)),
            s(:lvasgn, :data,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:lvar, :yml))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :data), :first), :object_id),
              s(:send,
                s(:send,
                  s(:lvar, :data), :last), :object_id)))),
        s(:def, :test_float_references,
          s(:args),
          s(:begin,
            s(:lvasgn, :data,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- \n"),
                  s(:str, "- &name 1.2\n"),
                  s(:str, "- *name\n")))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :data), :first),
              s(:send,
                s(:lvar, :data), :last)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :data), :first), :object_id),
              s(:send,
                s(:send,
                  s(:lvar, :data), :last), :object_id)))),
        s(:def, :test_binary_references,
          s(:args),
          s(:begin,
            s(:lvasgn, :data,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "---\n"),
                  s(:str, "- &name !binary |-\n"),
                  s(:str, "  aGVsbG8gd29ybGQh\n"),
                  s(:str, "- *name\n")))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :data), :first),
              s(:send,
                s(:lvar, :data), :last)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :data), :first), :object_id),
              s(:send,
                s(:send,
                  s(:lvar, :data), :last), :object_id)))),
        s(:def, :test_regexp_references,
          s(:args),
          s(:begin,
            s(:lvasgn, :data,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- \n"),
                  s(:str, "- &name !ruby/regexp /pattern/i\n"),
                  s(:str, "- *name\n")))),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :data), :first),
              s(:send,
                s(:lvar, :data), :last)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:lvar, :data), :first), :object_id),
              s(:send,
                s(:send,
                  s(:lvar, :data), :last), :object_id))))))))
