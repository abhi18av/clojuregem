s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "yaml/dbm")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:if,
    s(:and,
      s(:defined?,
        s(:const,
          s(:const, nil, :YAML), :DBM)),
      s(:defined?,
        s(:const, nil, :Psych))),
    s(:module,
      s(:const, nil, :Psych),
      s(:begin,
        s(:if,
          s(:defined?,
            s(:const,
              s(:const,
                s(:cbase), :Psych), :DBM)), nil,
          s(:casgn,
            s(:const,
              s(:cbase), :Psych), :DBM,
            s(:const,
              s(:const,
                s(:cbase), :YAML), :DBM))),
        s(:class,
          s(:const, nil, :YAMLDBMTest),
          s(:const, nil, :TestCase),
          s(:begin,
            s(:def, :setup,
              s(:args),
              s(:begin,
                s(:ivasgn, :@dir,
                  s(:send,
                    s(:const, nil, :Dir), :mktmpdir,
                    s(:str, "rubytest-file"))),
                s(:send,
                  s(:const, nil, :File), :chown,
                  s(:int, -1),
                  s(:send,
                    s(:const, nil, :Process), :gid),
                  s(:ivar, :@dir)),
                s(:ivasgn, :@yamldbm_file,
                  s(:send, nil, :make_tmp_filename,
                    s(:str, "yamldbm"))),
                s(:ivasgn, :@yamldbm,
                  s(:send,
                    s(:const,
                      s(:const, nil, :YAML), :DBM), :new,
                    s(:ivar, :@yamldbm_file))))),
            s(:def, :teardown,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :clear),
                s(:send,
                  s(:ivar, :@yamldbm), :close),
                s(:send,
                  s(:const, nil, :FileUtils), :remove_entry_secure,
                  s(:ivar, :@dir)))),
            s(:def, :make_tmp_filename,
              s(:args,
                s(:arg, :prefix)),
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:ivar, :@dir), :+,
                      s(:str, "/")), :+,
                    s(:lvar, :prefix)), :+,
                  s(:send,
                    s(:const, nil, :File), :basename,
                    s(:str, "(string)"))), :+,
                s(:dstr,
                  s(:str, "."),
                  s(:begin,
                    s(:gvar, :$$)),
                  s(:str, ".test")))),
            s(:def, :test_store,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :store,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :store,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:str, "b"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "a"))),
                s(:send, nil, :assert_equal,
                  s(:str, "d"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))))),
            s(:def, :test_store_using_carret,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:str, "b"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "a"))),
                s(:send, nil, :assert_equal,
                  s(:str, "d"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))))),
            s(:def, :test_to_a,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array,
                      s(:str, "a"),
                      s(:str, "b")),
                    s(:array,
                      s(:str, "c"),
                      s(:str, "d"))),
                  s(:send,
                    s(:send,
                      s(:ivar, :@yamldbm), :to_a), :sort)))),
            s(:def, :test_to_hash,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:hash,
                    s(:pair,
                      s(:str, "a"),
                      s(:str, "b")),
                    s(:pair,
                      s(:str, "c"),
                      s(:str, "d"))),
                  s(:send,
                    s(:ivar, :@yamldbm), :to_hash)))),
            s(:def, :test_has_value?,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:true),
                  s(:send,
                    s(:ivar, :@yamldbm), :has_value?,
                    s(:str, "b"))),
                s(:send, nil, :assert_equal,
                  s(:true),
                  s(:send,
                    s(:ivar, :@yamldbm), :has_value?,
                    s(:str, "d"))),
                s(:send, nil, :assert_equal,
                  s(:false),
                  s(:send,
                    s(:ivar, :@yamldbm), :has_value?,
                    s(:str, "f"))))),
            s(:def, :test_key,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:str, "a"),
                  s(:send,
                    s(:ivar, :@yamldbm), :key,
                    s(:str, "b"))),
                s(:send, nil, :assert_equal,
                  s(:str, "c"),
                  s(:send,
                    s(:ivar, :@yamldbm), :key,
                    s(:str, "d"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :key,
                    s(:str, "f"))))),
            s(:def, :test_fetch,
              s(:args),
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:str, "bar"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[]=,
                    s(:str, "foo"),
                    s(:str, "bar"))),
                s(:send, nil, :assert_equal,
                  s(:str, "bar"),
                  s(:send,
                    s(:ivar, :@yamldbm), :fetch,
                    s(:str, "foo"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :fetch,
                    s(:str, "bar"))),
                s(:send, nil, :assert_equal,
                  s(:str, "baz"),
                  s(:send,
                    s(:ivar, :@yamldbm), :fetch,
                    s(:str, "bar"),
                    s(:str, "baz"))),
                s(:send, nil, :assert_equal,
                  s(:str, "foobar"),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :fetch,
                      s(:str, "bar")),
                    s(:args,
                      s(:arg, :key)),
                    s(:send,
                      s(:str, "foo"), :+,
                      s(:lvar, :key)))))),
            s(:def, :test_shift,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array,
                      s(:str, "a"),
                      s(:str, "b")),
                    s(:array,
                      s(:str, "c"),
                      s(:str, "d"))),
                  s(:send,
                    s(:array,
                      s(:send,
                        s(:ivar, :@yamldbm), :shift),
                      s(:send,
                        s(:ivar, :@yamldbm), :shift)), :sort)),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :shift)))),
            s(:def, :test_invert,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:hash,
                    s(:pair,
                      s(:str, "b"),
                      s(:str, "a")),
                    s(:pair,
                      s(:str, "d"),
                      s(:str, "c"))),
                  s(:send,
                    s(:ivar, :@yamldbm), :invert)))),
            s(:def, :test_update,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send,
                  s(:ivar, :@yamldbm), :update,
                  s(:hash,
                    s(:pair,
                      s(:str, "c"),
                      s(:str, "d")),
                    s(:pair,
                      s(:str, "e"),
                      s(:str, "f")))),
                s(:send, nil, :assert_equal,
                  s(:str, "b"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "a"))),
                s(:send, nil, :assert_equal,
                  s(:str, "d"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_equal,
                  s(:str, "f"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))))),
            s(:def, :test_replace,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send,
                  s(:ivar, :@yamldbm), :replace,
                  s(:hash,
                    s(:pair,
                      s(:str, "c"),
                      s(:str, "d")),
                    s(:pair,
                      s(:str, "e"),
                      s(:str, "f")))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "a"))),
                s(:send, nil, :assert_equal,
                  s(:str, "d"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_equal,
                  s(:str, "f"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))))),
            s(:def, :test_delete,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:str, "b"),
                  s(:send,
                    s(:ivar, :@yamldbm), :delete,
                    s(:str, "a"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "a"))),
                s(:send, nil, :assert_equal,
                  s(:str, "d"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :delete,
                    s(:str, "e"))))),
            s(:def, :test_delete_if,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "e"),
                  s(:str, "f")),
                s(:block,
                  s(:send,
                    s(:ivar, :@yamldbm), :delete_if),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:send,
                    s(:lvar, :k), :==,
                    s(:str, "a"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "a"))),
                s(:send, nil, :assert_equal,
                  s(:str, "d"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_equal,
                  s(:str, "f"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))),
                s(:block,
                  s(:send,
                    s(:ivar, :@yamldbm), :delete_if),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:send,
                    s(:lvar, :v), :==,
                    s(:str, "d"))),
                s(:send, nil, :assert_nil,
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "c"))),
                s(:send, nil, :assert_equal,
                  s(:str, "f"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))),
                s(:block,
                  s(:send,
                    s(:ivar, :@yamldbm), :delete_if),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:false)),
                s(:send, nil, :assert_equal,
                  s(:str, "f"),
                  s(:send,
                    s(:ivar, :@yamldbm), :[],
                    s(:str, "e"))))),
            s(:def, :test_reject,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "e"),
                  s(:str, "f")),
                s(:send, nil, :assert_equal,
                  s(:hash,
                    s(:pair,
                      s(:str, "c"),
                      s(:str, "d")),
                    s(:pair,
                      s(:str, "e"),
                      s(:str, "f"))),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :reject),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:send,
                      s(:lvar, :k), :==,
                      s(:str, "a")))),
                s(:send, nil, :assert_equal,
                  s(:hash,
                    s(:pair,
                      s(:str, "a"),
                      s(:str, "b")),
                    s(:pair,
                      s(:str, "e"),
                      s(:str, "f"))),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :reject),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:send,
                      s(:lvar, :v), :==,
                      s(:str, "d")))),
                s(:send, nil, :assert_equal,
                  s(:hash,
                    s(:pair,
                      s(:str, "a"),
                      s(:str, "b")),
                    s(:pair,
                      s(:str, "c"),
                      s(:str, "d")),
                    s(:pair,
                      s(:str, "e"),
                      s(:str, "f"))),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :reject),
                    s(:args),
                    s(:false))))),
            s(:def, :test_values,
              s(:args),
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:send,
                    s(:ivar, :@yamldbm), :values)),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:str, "b"),
                    s(:str, "d")),
                  s(:send,
                    s(:send,
                      s(:ivar, :@yamldbm), :values), :sort)))),
            s(:def, :test_values_at,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:str, "b"),
                    s(:str, "d")),
                  s(:send,
                    s(:ivar, :@yamldbm), :values_at,
                    s(:str, "a"),
                    s(:str, "c"))))),
            s(:def, :test_selsct,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "e"),
                  s(:str, "f")),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:str, "b"),
                    s(:str, "d")),
                  s(:send,
                    s(:ivar, :@yamldbm), :select,
                    s(:str, "a"),
                    s(:str, "c"))))),
            s(:def, :test_selsct_with_block,
              s(:args),
              s(:begin,
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "a"),
                  s(:str, "b")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "c"),
                  s(:str, "d")),
                s(:send,
                  s(:ivar, :@yamldbm), :[]=,
                  s(:str, "e"),
                  s(:str, "f")),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array,
                      s(:str, "a"),
                      s(:str, "b"))),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :select),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:send,
                      s(:lvar, :k), :==,
                      s(:str, "a")))),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array,
                      s(:str, "c"),
                      s(:str, "d"))),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :select),
                    s(:args,
                      s(:arg, :k),
                      s(:arg, :v)),
                    s(:send,
                      s(:lvar, :v), :==,
                      s(:str, "d")))),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:block,
                    s(:send,
                      s(:ivar, :@yamldbm), :select),
                    s(:args),
                    s(:false))))))))), nil))
