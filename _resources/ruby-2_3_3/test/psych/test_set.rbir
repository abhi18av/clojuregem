s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestSet),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:zsuper),
            s(:ivasgn, :@set,
              s(:send,
                s(:const,
                  s(:const, nil, :Psych), :Set), :new)),
            s(:send,
              s(:ivar, :@set), :[]=,
              s(:str, "foo"),
              s(:str, "bar")),
            s(:send,
              s(:ivar, :@set), :[]=,
              s(:str, "bar"),
              s(:str, "baz")))),
        s(:def, :test_dump,
          s(:args),
          s(:send, nil, :assert_match,
            s(:regexp,
              s(:str, "!set"),
              s(:regopt)),
            s(:send,
              s(:const, nil, :Psych), :dump,
              s(:ivar, :@set)))),
        s(:def, :test_roundtrip,
          s(:args),
          s(:send, nil, :assert_cycle,
            s(:ivar, :@set))),
        s(:def, :test_load_from_yaml,
          s(:args),
          s(:begin,
            s(:lvasgn, :loaded,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- !set\n"),
                  s(:str, "foo: bar\n"),
                  s(:str, "bar: baz\n")))),
            s(:send, nil, :assert_equal,
              s(:ivar, :@set),
              s(:lvar, :loaded)))),
        s(:def, :test_loaded_class,
          s(:args),
          s(:send, nil, :assert_instance_of,
            s(:const,
              s(:const, nil, :Psych), :Set),
            s(:send,
              s(:const, nil, :Psych), :load,
              s(:send,
                s(:const, nil, :Psych), :dump,
                s(:ivar, :@set))))),
        s(:def, :test_set_shorthand,
          s(:args),
          s(:begin,
            s(:lvasgn, :loaded,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- !!set\n"),
                  s(:str, "foo: bar\n"),
                  s(:str, "bar: baz\n")))),
            s(:send, nil, :assert_instance_of,
              s(:const,
                s(:const, nil, :Psych), :Set),
              s(:lvar, :loaded)))),
        s(:def, :test_set_self_reference,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@set), :[]=,
              s(:str, "self"),
              s(:ivar, :@set)),
            s(:send, nil, :assert_cycle,
              s(:ivar, :@set))))))))
