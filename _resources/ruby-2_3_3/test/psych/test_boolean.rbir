s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestBoolean),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:block,
          s(:send,
            s(:array,
              s(:str, "yes"),
              s(:str, "Yes"),
              s(:str, "YES"),
              s(:str, "true"),
              s(:str, "True"),
              s(:str, "TRUE"),
              s(:str, "on"),
              s(:str, "On"),
              s(:str, "ON")), :each),
          s(:args,
            s(:arg, :truth)),
          s(:block,
            s(:send, nil, :define_method,
              s(:dsym,
                s(:str, "test_"),
                s(:begin,
                  s(:lvar, :truth)))),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:true),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- "),
                  s(:begin,
                    s(:lvar, :truth))))))),
        s(:block,
          s(:send,
            s(:array,
              s(:str, "no"),
              s(:str, "No"),
              s(:str, "NO"),
              s(:str, "false"),
              s(:str, "False"),
              s(:str, "FALSE"),
              s(:str, "off"),
              s(:str, "Off"),
              s(:str, "OFF")), :each),
          s(:args,
            s(:arg, :truth)),
          s(:block,
            s(:send, nil, :define_method,
              s(:dsym,
                s(:str, "test_"),
                s(:begin,
                  s(:lvar, :truth)))),
            s(:args),
            s(:send, nil, :assert_equal,
              s(:false),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- "),
                  s(:begin,
                    s(:lvar, :truth))))))),
        s(:def, :test_y,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, "y"),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:str, "--- y"))),
            s(:send, nil, :assert_equal,
              s(:str, "Y"),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:str, "--- Y"))))),
        s(:def, :test_n,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:str, "n"),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:str, "--- n"))),
            s(:send, nil, :assert_equal,
              s(:str, "N"),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:str, "--- N")))))))))
