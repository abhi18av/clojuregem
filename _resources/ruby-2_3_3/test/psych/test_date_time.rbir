s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:send, nil, :require,
    s(:str, "date")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestDateTime),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_negative_year,
          s(:args),
          s(:begin,
            s(:lvasgn, :time,
              s(:send,
                s(:const, nil, :Time), :utc,
                s(:int, -1),
                s(:int, 12),
                s(:int, 16))),
            s(:send, nil, :assert_cycle,
              s(:lvar, :time)))),
        s(:def, :test_new_datetime,
          s(:args),
          s(:send, nil, :assert_cycle,
            s(:send,
              s(:const, nil, :DateTime), :new))),
        s(:def, :test_invalid_date,
          s(:args),
          s(:send, nil, :assert_cycle,
            s(:str, "2013-10-31T10:40:07-000000000000033"))),
        s(:def, :test_string_tag,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send,
                s(:const, nil, :DateTime), :now)),
            s(:lvasgn, :yaml,
              s(:send,
                s(:const, nil, :Psych), :dump,
                s(:lvar, :dt))),
            s(:send, nil, :assert_match,
              s(:regexp,
                s(:str, "DateTime"),
                s(:regopt)),
              s(:lvar, :yaml)))),
        s(:def, :test_round_trip,
          s(:args),
          s(:begin,
            s(:lvasgn, :dt,
              s(:send,
                s(:const, nil, :DateTime), :now)),
            s(:send, nil, :assert_cycle,
              s(:lvar, :dt)))),
        s(:def, :test_alias_with_time,
          s(:args),
          s(:begin,
            s(:lvasgn, :t,
              s(:send,
                s(:const, nil, :Time), :now)),
            s(:lvasgn, :h,
              s(:hash,
                s(:pair,
                  s(:sym, :a),
                  s(:lvar, :t)),
                s(:pair,
                  s(:sym, :b),
                  s(:lvar, :t)))),
            s(:lvasgn, :yaml,
              s(:send,
                s(:const, nil, :Psych), :dump,
                s(:lvar, :h))),
            s(:send, nil, :assert_match,
              s(:str, "&"),
              s(:lvar, :yaml)),
            s(:send, nil, :assert_match,
              s(:str, "*"),
              s(:lvar, :yaml))))))))
