s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestSerializeSubclasses),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:class,
          s(:const, nil, :SomeObject), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :one),
                s(:arg, :two)),
              s(:begin,
                s(:ivasgn, :@one,
                  s(:lvar, :one)),
                s(:ivasgn, :@two,
                  s(:lvar, :two)))),
            s(:def, :==,
              s(:args,
                s(:arg, :other)),
              s(:and,
                s(:send,
                  s(:ivar, :@one), :==,
                  s(:block,
                    s(:send,
                      s(:lvar, :other), :instance_eval),
                    s(:args),
                    s(:ivar, :@one))),
                s(:send,
                  s(:ivar, :@two), :==,
                  s(:block,
                    s(:send,
                      s(:lvar, :other), :instance_eval),
                    s(:args),
                    s(:ivar, :@two))))))),
        s(:def, :test_some_object,
          s(:args),
          s(:begin,
            s(:lvasgn, :so,
              s(:send,
                s(:const, nil, :SomeObject), :new,
                s(:str, "foo"),
                s(:array,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 3)))),
            s(:send, nil, :assert_equal,
              s(:lvar, :so),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:send,
                  s(:const, nil, :Psych), :dump,
                  s(:lvar, :so)))))),
        s(:class,
          s(:const, nil, :StructSubclass),
          s(:send,
            s(:const, nil, :Struct), :new,
            s(:sym, :foo)),
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:arg, :foo),
                s(:arg, :bar)),
              s(:begin,
                s(:super,
                  s(:lvar, :foo)),
                s(:ivasgn, :@bar,
                  s(:lvar, :bar)))),
            s(:def, :==,
              s(:args,
                s(:arg, :other)),
              s(:and,
                s(:super,
                  s(:lvar, :other)),
                s(:send,
                  s(:ivar, :@bar), :==,
                  s(:block,
                    s(:send,
                      s(:lvar, :other), :instance_eval),
                    s(:args),
                    s(:ivar, :@bar))))))),
        s(:def, :test_struct_subclass,
          s(:args),
          s(:begin,
            s(:lvasgn, :so,
              s(:send,
                s(:const, nil, :StructSubclass), :new,
                s(:str, "foo"),
                s(:array,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 3)))),
            s(:send, nil, :assert_equal,
              s(:lvar, :so),
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:send,
                  s(:const, nil, :Psych), :dump,
                  s(:lvar, :so))))))))))
