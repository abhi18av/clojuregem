s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestClass),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:module,
          s(:const, nil, :Foo), nil),
        s(:def, :test_cycle_anonymous_class,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:cbase), :TypeError)),
            s(:args),
            s(:send, nil, :assert_cycle,
              s(:send,
                s(:const, nil, :Class), :new)))),
        s(:def, :test_cycle_anonymous_module,
          s(:args),
          s(:block,
            s(:send, nil, :assert_raises,
              s(:const,
                s(:cbase), :TypeError)),
            s(:args),
            s(:send, nil, :assert_cycle,
              s(:send,
                s(:const, nil, :Module), :new)))),
        s(:def, :test_cycle,
          s(:args),
          s(:send, nil, :assert_cycle,
            s(:const, nil, :TestClass))),
        s(:def, :test_dump,
          s(:args),
          s(:send,
            s(:const, nil, :Psych), :dump,
            s(:const, nil, :TestClass))),
        s(:def, :test_cycle_module,
          s(:args),
          s(:send, nil, :assert_cycle,
            s(:const, nil, :Foo))),
        s(:def, :test_dump_module,
          s(:args),
          s(:send,
            s(:const, nil, :Psych), :dump,
            s(:const, nil, :Foo)))))))
