s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:module,
    s(:const, nil, :Psych),
    s(:class,
      s(:const, nil, :TestArray),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:class,
          s(:const, nil, :X),
          s(:const, nil, :Array), nil),
        s(:class,
          s(:const, nil, :Y),
          s(:const, nil, :Array),
          s(:send, nil, :attr_accessor,
            s(:sym, :val))),
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:zsuper),
            s(:ivasgn, :@list,
              s(:array,
                s(:hash,
                  s(:pair,
                    s(:sym, :a),
                    s(:str, "b"))),
                s(:str, "foo"))))),
        s(:def, :test_another_subclass_with_attributes,
          s(:args),
          s(:begin,
            s(:lvasgn, :y,
              s(:block,
                s(:send,
                  s(:send,
                    s(:const, nil, :Y), :new), :tap),
                s(:args,
                  s(:arg, :y)),
                s(:send,
                  s(:lvar, :y), :val=,
                  s(:int, 1)))),
            s(:send,
              s(:send,
                s(:lvar, :y), :<<,
                s(:str, "foo")), :<<,
              s(:str, "bar")),
            s(:lvasgn, :y,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:send,
                  s(:const, nil, :Psych), :dump,
                  s(:lvar, :y)))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "foo"),
                s(:str, "bar")),
              s(:lvar, :y)),
            s(:send, nil, :assert_equal,
              s(:const, nil, :Y),
              s(:send,
                s(:lvar, :y), :class)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :y), :val)))),
        s(:def, :test_subclass,
          s(:args),
          s(:begin,
            s(:lvasgn, :yaml,
              s(:send,
                s(:const, nil, :Psych), :dump,
                s(:send,
                  s(:const, nil, :X), :new))),
            s(:send, nil, :assert_match,
              s(:send,
                s(:const, nil, :X), :name),
              s(:lvar, :yaml)),
            s(:lvasgn, :list,
              s(:send,
                s(:const, nil, :X), :new)),
            s(:send,
              s(:lvar, :list), :<<,
              s(:int, 1)),
            s(:send, nil, :assert_equal,
              s(:const, nil, :X),
              s(:send,
                s(:lvar, :list), :class)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :list), :first)))),
        s(:def, :test_subclass_with_attributes,
          s(:args),
          s(:begin,
            s(:lvasgn, :y,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:send,
                  s(:const, nil, :Psych), :dump,
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:const, nil, :Y), :new), :tap),
                    s(:args,
                      s(:arg, :y)),
                    s(:send,
                      s(:lvar, :y), :val=,
                      s(:int, 1)))))),
            s(:send, nil, :assert_equal,
              s(:const, nil, :Y),
              s(:send,
                s(:lvar, :y), :class)),
            s(:send, nil, :assert_equal,
              s(:int, 1),
              s(:send,
                s(:lvar, :y), :val)))),
        s(:def, :test_backwards_with_syck,
          s(:args),
          s(:begin,
            s(:lvasgn, :x,
              s(:send,
                s(:const, nil, :Psych), :load,
                s(:dstr,
                  s(:str, "--- !seq:"),
                  s(:begin,
                    s(:send,
                      s(:const, nil, :X), :name)),
                  s(:str, " []\n\n")))),
            s(:send, nil, :assert_equal,
              s(:const, nil, :X),
              s(:send,
                s(:lvar, :x), :class)))),
        s(:def, :test_self_referential,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@list), :<<,
              s(:ivar, :@list)),
            s(:send, nil, :assert_cycle,
              s(:ivar, :@list)))),
        s(:def, :test_cycle,
          s(:args),
          s(:send, nil, :assert_cycle,
            s(:ivar, :@list)))))))
