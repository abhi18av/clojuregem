s(:begin,
  s(:send, nil, :require,
    s(:str, "minitest/autorun")),
  s(:send, nil, :require,
    s(:str, "minitest/benchmark")),
  s(:class,
    s(:const, nil, :TestMiniTestBenchmark),
    s(:const,
      s(:const,
        s(:const, nil, :MiniTest), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_cls_bench_exp,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:int, 2),
            s(:int, 4),
            s(:int, 8),
            s(:int, 16),
            s(:int, 32)),
          s(:send,
            s(:send,
              s(:self), :class), :bench_exp,
            s(:int, 2),
            s(:int, 32),
            s(:int, 2)))),
      s(:def, :test_cls_bench_linear,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:int, 2),
            s(:int, 4),
            s(:int, 6),
            s(:int, 8),
            s(:int, 10)),
          s(:send,
            s(:send,
              s(:self), :class), :bench_linear,
            s(:int, 2),
            s(:int, 10),
            s(:int, 2)))),
      s(:def, :test_cls_benchmark_methods,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:array),
            s(:send,
              s(:send,
                s(:self), :class), :benchmark_methods)),
          s(:lvasgn, :c,
            s(:block,
              s(:send,
                s(:const, nil, :Class), :new,
                s(:const,
                  s(:const,
                    s(:const, nil, :MiniTest), :Unit), :TestCase)),
              s(:args),
              s(:def, :bench_blah,
                s(:args), nil))),
          s(:send, nil, :assert_equal,
            s(:array,
              s(:str, "bench_blah")),
            s(:send,
              s(:lvar, :c), :benchmark_methods)))),
      s(:def, :test_cls_bench_range,
        s(:args),
        s(:send, nil, :assert_equal,
          s(:array,
            s(:int, 1),
            s(:int, 10),
            s(:int, 100),
            s(:int, 1000),
            s(:int, 10000)),
          s(:send,
            s(:send,
              s(:self), :class), :bench_range))),
      s(:def, :test_fit_exponential_clean,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:float, 1.0),
              s(:float, 2.0),
              s(:float, 3.0),
              s(:float, 4.0),
              s(:float, 5.0))),
          s(:lvasgn, :y,
            s(:block,
              s(:send,
                s(:lvar, :x), :map),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:float, 1.1), :*,
                s(:send,
                  s(:const, nil, :Math), :exp,
                  s(:send,
                    s(:float, 2.1), :*,
                    s(:lvar, :n)))))),
          s(:send, nil, :assert_fit,
            s(:sym, :exponential),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 1.0),
            s(:float, 1.1),
            s(:float, 2.1)))),
      s(:def, :test_fit_exponential_noisy,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:float, 1.0),
              s(:float, 1.9),
              s(:float, 2.6),
              s(:float, 3.4),
              s(:float, 5.0))),
          s(:lvasgn, :y,
            s(:array,
              s(:int, 12),
              s(:int, 10),
              s(:float, 8.2),
              s(:float, 6.9),
              s(:float, 5.9))),
          s(:send, nil, :assert_fit,
            s(:sym, :exponential),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 0.95),
            s(:float, 13.81148),
            s(:float, -0.182)))),
      s(:def, :test_fit_logarithmic_clean,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:float, 1.0),
              s(:float, 2.0),
              s(:float, 3.0),
              s(:float, 4.0),
              s(:float, 5.0))),
          s(:lvasgn, :y,
            s(:block,
              s(:send,
                s(:lvar, :x), :map),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:float, 1.1), :+,
                s(:send,
                  s(:float, 2.1), :*,
                  s(:send,
                    s(:const, nil, :Math), :log,
                    s(:lvar, :n)))))),
          s(:send, nil, :assert_fit,
            s(:sym, :logarithmic),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 1.0),
            s(:float, 1.1),
            s(:float, 2.1)))),
      s(:def, :test_fit_logarithmic_noisy,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:float, 1.0),
              s(:float, 2.0),
              s(:float, 3.0),
              s(:float, 4.0),
              s(:float, 5.0))),
          s(:lvasgn, :y,
            s(:array,
              s(:float, 0.0),
              s(:float, 0.6935),
              s(:float, 1.0995),
              s(:float, 1.3873),
              s(:float, 1.6097))),
          s(:send, nil, :assert_fit,
            s(:sym, :logarithmic),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 0.95),
            s(:int, 0),
            s(:int, 1)))),
      s(:def, :test_fit_constant_clean,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 5))), :to_a)),
          s(:lvasgn, :y,
            s(:array,
              s(:float, 5.0),
              s(:float, 5.0),
              s(:float, 5.0),
              s(:float, 5.0),
              s(:float, 5.0))),
          s(:send, nil, :assert_fit,
            s(:sym, :linear),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:nil),
            s(:float, 5.0),
            s(:int, 0)))),
      s(:def, :test_fit_constant_noisy,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 5))), :to_a)),
          s(:lvasgn, :y,
            s(:array,
              s(:float, 1.0),
              s(:float, 1.2),
              s(:float, 1.0),
              s(:float, 0.8),
              s(:float, 1.0))),
          s(:send, nil, :assert_fit,
            s(:sym, :linear),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:nil),
            s(:float, 1.12),
            s(:float, -0.04)))),
      s(:def, :test_fit_linear_clean,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:send,
              s(:begin,
                s(:irange,
                  s(:int, 1),
                  s(:int, 5))), :to_a)),
          s(:lvasgn, :y,
            s(:block,
              s(:send,
                s(:lvar, :x), :map),
              s(:args,
                s(:arg, :n)),
              s(:send,
                s(:send,
                  s(:float, 2.2), :*,
                  s(:lvar, :n)), :+,
                s(:float, 3.1)))),
          s(:send, nil, :assert_fit,
            s(:sym, :linear),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 1.0),
            s(:float, 3.1),
            s(:float, 2.2)))),
      s(:def, :test_fit_linear_noisy,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:int, 60),
              s(:int, 61),
              s(:int, 62),
              s(:int, 63),
              s(:int, 65))),
          s(:lvasgn, :y,
            s(:array,
              s(:float, 3.1),
              s(:float, 3.6),
              s(:float, 3.8),
              s(:float, 4.0),
              s(:float, 4.1))),
          s(:send, nil, :assert_fit,
            s(:sym, :linear),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 0.8315),
            s(:float, -7.9635),
            s(:float, 0.1878)))),
      s(:def, :test_fit_power_clean,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:float, 1.0),
              s(:float, 2.0),
              s(:float, 3.0),
              s(:float, 4.0),
              s(:float, 5.0))),
          s(:lvasgn, :y,
            s(:array,
              s(:float, 1.0),
              s(:float, 4.0),
              s(:float, 9.0),
              s(:float, 16.0),
              s(:float, 25.0))),
          s(:send, nil, :assert_fit,
            s(:sym, :power),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 1.0),
            s(:float, 1.0),
            s(:float, 2.0)))),
      s(:def, :test_fit_power_noisy,
        s(:args),
        s(:begin,
          s(:lvasgn, :x,
            s(:array,
              s(:int, 10),
              s(:int, 12),
              s(:int, 15),
              s(:int, 17),
              s(:int, 20),
              s(:int, 22),
              s(:int, 25),
              s(:int, 27),
              s(:int, 30),
              s(:int, 32),
              s(:int, 35))),
          s(:lvasgn, :y,
            s(:array,
              s(:int, 95),
              s(:int, 105),
              s(:int, 125),
              s(:int, 141),
              s(:int, 173),
              s(:int, 200),
              s(:int, 253),
              s(:int, 298),
              s(:int, 385),
              s(:int, 459),
              s(:int, 602))),
          s(:send, nil, :assert_fit,
            s(:sym, :power),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 0.9),
            s(:float, 2.6217),
            s(:float, 1.4556)),
          s(:lvasgn, :x,
            s(:array,
              s(:int, 15000),
              s(:int, 25000),
              s(:int, 35000),
              s(:int, 50000),
              s(:int, 75000),
              s(:int, 100000))),
          s(:lvasgn, :y,
            s(:array,
              s(:float, 0.154),
              s(:float, 0.283),
              s(:float, 0.402),
              s(:float, 0.55),
              s(:float, 0.733),
              s(:float, 0.843))),
          s(:send, nil, :assert_fit,
            s(:sym, :power),
            s(:lvar, :x),
            s(:lvar, :y),
            s(:float, 0.96),
            s(:float, 3.119e-05),
            s(:float, 0.8959)))),
      s(:def, :assert_fit,
        s(:args,
          s(:arg, :msg),
          s(:arg, :x),
          s(:arg, :y),
          s(:arg, :fit),
          s(:arg, :exp_a),
          s(:arg, :exp_b)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :a),
              s(:lvasgn, :b),
              s(:lvasgn, :rr)),
            s(:send, nil, :send,
              s(:dstr,
                s(:str, "fit_"),
                s(:begin,
                  s(:lvar, :msg))),
              s(:lvar, :x),
              s(:lvar, :y))),
          s(:if,
            s(:lvar, :fit),
            s(:send, nil, :assert_operator,
              s(:lvar, :rr),
              s(:sym, :>=),
              s(:lvar, :fit)), nil),
          s(:send, nil, :assert_in_delta,
            s(:lvar, :exp_a),
            s(:lvar, :a)),
          s(:send, nil, :assert_in_delta,
            s(:lvar, :exp_b),
            s(:lvar, :b)))))))
