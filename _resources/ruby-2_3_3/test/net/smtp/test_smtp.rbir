s(:begin,
  s(:send, nil, :require,
    s(:str, "net/smtp")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:module,
    s(:const, nil, :Net),
    s(:class,
      s(:const, nil, :TestSMTP),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:class,
          s(:const, nil, :FakeSocket), nil,
          s(:begin,
            s(:def, :initialize,
              s(:args,
                s(:optarg, :out,
                  s(:str, "250 OK\n"))),
              s(:begin,
                s(:ivasgn, :@write_io,
                  s(:send,
                    s(:const, nil, :StringIO), :new)),
                s(:ivasgn, :@read_io,
                  s(:send,
                    s(:const, nil, :StringIO), :new,
                    s(:lvar, :out))))),
            s(:def, :writeline,
              s(:args,
                s(:arg, :line)),
              s(:send,
                s(:ivar, :@write_io), :write,
                s(:dstr,
                  s(:begin,
                    s(:lvar, :line)),
                  s(:str, "\r\n")))),
            s(:def, :readline,
              s(:args),
              s(:begin,
                s(:lvasgn, :line,
                  s(:send,
                    s(:ivar, :@read_io), :gets)),
                s(:if,
                  s(:lvar, :line), nil,
                  s(:send, nil, :raise,
                    s(:str, "ran out of input"))),
                s(:send,
                  s(:lvar, :line), :chop))))),
        s(:def, :test_critical,
          s(:args),
          s(:begin,
            s(:lvasgn, :smtp,
              s(:send,
                s(:const,
                  s(:const, nil, :Net), :SMTP), :new,
                s(:str, "localhost"),
                s(:int, 25))),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const, nil, :RuntimeError)),
              s(:args),
              s(:block,
                s(:send,
                  s(:lvar, :smtp), :send,
                  s(:sym, :critical)),
                s(:args),
                s(:send, nil, :raise,
                  s(:str, "fail on purpose")))),
            s(:send, nil, :assert_kind_of,
              s(:const,
                s(:const,
                  s(:const, nil, :Net), :SMTP), :Response),
              s(:send,
                s(:lvar, :smtp), :send,
                s(:sym, :critical)),
              s(:str, "[Bug #9125]")))),
        s(:def, :test_esmtp,
          s(:args),
          s(:begin,
            s(:lvasgn, :smtp,
              s(:send,
                s(:const,
                  s(:const, nil, :Net), :SMTP), :new,
                s(:str, "localhost"),
                s(:int, 25))),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :smtp), :esmtp)),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :smtp), :esmtp?)),
            s(:send,
              s(:lvar, :smtp), :esmtp=,
              s(:str, "omg")),
            s(:send, nil, :assert_equal,
              s(:str, "omg"),
              s(:send,
                s(:lvar, :smtp), :esmtp)),
            s(:send, nil, :assert_equal,
              s(:str, "omg"),
              s(:send,
                s(:lvar, :smtp), :esmtp?)))),
        s(:def, :test_rset,
          s(:args),
          s(:begin,
            s(:lvasgn, :smtp,
              s(:send,
                s(:const,
                  s(:const, nil, :Net), :SMTP), :new,
                s(:str, "localhost"),
                s(:int, 25))),
            s(:send,
              s(:lvar, :smtp), :instance_variable_set,
              s(:sym, :@socket),
              s(:send,
                s(:const, nil, :FakeSocket), :new)),
            s(:send, nil, :assert,
              s(:send,
                s(:lvar, :smtp), :rset))))))))
