s(:begin,
  s(:send, nil, :require,
    s(:str, "net/ftp")),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "ostruct")),
  s(:send, nil, :require,
    s(:str, "stringio")),
  s(:class,
    s(:const, nil, :MLSxEntryTest),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_file?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "file"))),
                s(:str, "foo")), :file?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "dir"))),
                s(:str, "foo")), :file?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "cdir"))),
                s(:str, "foo")), :file?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "pdir"))),
                s(:str, "foo")), :file?)))),
      s(:def, :test_directory?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "file"))),
                s(:str, "foo")), :directory?)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "dir"))),
                s(:str, "foo")), :directory?)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "cdir"))),
                s(:str, "foo")), :directory?)),
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "type"),
                    s(:str, "pdir"))),
                s(:str, "foo")), :directory?)))),
      s(:def, :test_appendable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "a"))),
                s(:str, "foo")), :appendable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :appendable?)))),
      s(:def, :test_creatable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "c"))),
                s(:str, "foo")), :creatable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :creatable?)))),
      s(:def, :test_deletable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "d"))),
                s(:str, "foo")), :deletable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :deletable?)))),
      s(:def, :test_enterable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "e"))),
                s(:str, "foo")), :enterable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :enterable?)))),
      s(:def, :test_renamable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "f"))),
                s(:str, "foo")), :renamable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :renamable?)))),
      s(:def, :test_listable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "l"))),
                s(:str, "foo")), :listable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :listable?)))),
      s(:def, :test_directory_makable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "m"))),
                s(:str, "foo")), :directory_makable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :directory_makable?)))),
      s(:def, :test_purgeable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "p"))),
                s(:str, "foo")), :purgeable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :purgeable?)))),
      s(:def, :test_readable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "r"))),
                s(:str, "foo")), :readable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :readable?)))),
      s(:def, :test_writable?,
        s(:args),
        s(:begin,
          s(:send, nil, :assert_equal,
            s(:true),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, "w"))),
                s(:str, "foo")), :writable?)),
          s(:send, nil, :assert_equal,
            s(:false),
            s(:send,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :Net), :FTP), :MLSxEntry), :new,
                s(:hash,
                  s(:pair,
                    s(:str, "perm"),
                    s(:str, ""))),
                s(:str, "foo")), :writable?)))))))
