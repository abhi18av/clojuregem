s(:begin,
  s(:send, nil, :require,
    s(:str, "webrick")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "webrick/https")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:str, "webrick/httpservlet/abstract")),
  s(:module,
    s(:const, nil, :TestNetHTTPUtils),
    s(:begin,
      s(:def, :start,
        s(:args,
          s(:blockarg, :block)),
        s(:send,
          s(:send, nil, :new), :start,
          s(:block_pass,
            s(:lvar, :block)))),
      s(:def, :new,
        s(:args),
        s(:begin,
          s(:lvasgn, :klass,
            s(:send,
              s(:const,
                s(:const, nil, :Net), :HTTP), :Proxy,
              s(:send, nil, :config,
                s(:str, "proxy_host")),
              s(:send, nil, :config,
                s(:str, "proxy_port")))),
          s(:lvasgn, :http,
            s(:send,
              s(:lvar, :klass), :new,
              s(:send, nil, :config,
                s(:str, "host")),
              s(:send, nil, :config,
                s(:str, "port")))),
          s(:send,
            s(:lvar, :http), :set_debug_output,
            s(:send, nil, :logfile)),
          s(:lvar, :http))),
      s(:def, :config,
        s(:args,
          s(:arg, :key)),
        s(:begin,
          s(:or_asgn,
            s(:ivasgn, :@config),
            s(:const,
              s(:send,
                s(:self), :class), :CONFIG)),
          s(:send,
            s(:ivar, :@config), :[],
            s(:lvar, :key)))),
      s(:def, :logfile,
        s(:args),
        s(:if,
          s(:gvar, :$DEBUG),
          s(:gvar, :$stderr),
          s(:send,
            s(:const, nil, :NullWriter), :new))),
      s(:def, :setup,
        s(:args),
        s(:send, nil, :spawn_server)),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:if,
            s(:ivar, :@server),
            s(:begin,
              s(:send,
                s(:ivar, :@server), :shutdown),
              s(:send,
                s(:ivar, :@server_thread), :join)), nil),
          s(:if,
            s(:ivar, :@log_tester),
            s(:send,
              s(:ivar, :@log_tester), :call,
              s(:ivar, :@log)), nil),
          s(:send,
            s(:const,
              s(:const, nil, :Net), :HTTP), :version_1_2))),
      s(:def, :spawn_server,
        s(:args),
        s(:begin,
          s(:ivasgn, :@log,
            s(:array)),
          s(:ivasgn, :@log_tester,
            s(:block,
              s(:send, nil, :lambda),
              s(:args,
                s(:arg, :log)),
              s(:send, nil, :assert_equal,
                s(:array),
                s(:lvar, :log)))),
          s(:ivasgn, :@config,
            s(:const,
              s(:send,
                s(:self), :class), :CONFIG)),
          s(:lvasgn, :server_config,
            s(:hash,
              s(:pair,
                s(:sym, :BindAddress),
                s(:send, nil, :config,
                  s(:str, "host"))),
              s(:pair,
                s(:sym, :Port),
                s(:int, 0)),
              s(:pair,
                s(:sym, :Logger),
                s(:send,
                  s(:const,
                    s(:const, nil, :WEBrick), :Log), :new,
                  s(:ivar, :@log),
                  s(:const,
                    s(:const,
                      s(:const, nil, :WEBrick), :BasicLog), :WARN))),
              s(:pair,
                s(:sym, :AccessLog),
                s(:array)),
              s(:pair,
                s(:sym, :ServerType),
                s(:const, nil, :Thread)))),
          s(:if,
            s(:send, nil, :config,
              s(:str, "chunked")),
            s(:send,
              s(:lvar, :server_config), :[]=,
              s(:sym, :OutputBufferSize),
              s(:int, 4)), nil),
          s(:if,
            s(:send, nil, :config,
              s(:str, "RequestTimeout")),
            s(:send,
              s(:lvar, :server_config), :[]=,
              s(:sym, :RequestTimeout),
              s(:send, nil, :config,
                s(:str, "RequestTimeout"))), nil),
          s(:if,
            s(:and,
              s(:defined?,
                s(:const, nil, :OpenSSL)),
              s(:send, nil, :config,
                s(:str, "ssl_enable"))),
            s(:send,
              s(:lvar, :server_config), :update,
              s(:hash,
                s(:pair,
                  s(:sym, :SSLEnable),
                  s(:true)),
                s(:pair,
                  s(:sym, :SSLCertificate),
                  s(:send, nil, :config,
                    s(:str, "ssl_certificate"))),
                s(:pair,
                  s(:sym, :SSLPrivateKey),
                  s(:send, nil, :config,
                    s(:str, "ssl_private_key"))),
                s(:pair,
                  s(:sym, :SSLTmpDhCallback),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args),
                    s(:const,
                      s(:const,
                        s(:const, nil, :OpenSSL), :TestUtils), :TEST_KEY_DH1024))))), nil),
          s(:ivasgn, :@server,
            s(:send,
              s(:const,
                s(:const, nil, :WEBrick), :HTTPServer), :new,
              s(:lvar, :server_config))),
          s(:send,
            s(:ivar, :@server), :mount,
            s(:str, "/"),
            s(:const, nil, :Servlet),
            s(:send, nil, :config,
              s(:str, "chunked"))),
          s(:ivasgn, :@server_thread,
            s(:send,
              s(:ivar, :@server), :start)),
          s(:send,
            s(:ivar, :@config), :[]=,
            s(:str, "port"),
            s(:send,
              s(:ivar, :@server), :[],
              s(:sym, :Port))))),
      s(:gvasgn, :$test_net_http,
        s(:nil)),
      s(:gvasgn, :$test_net_http_data,
        s(:send,
          s(:send,
            s(:block,
              s(:send,
                s(:send,
                  s(:begin,
                    s(:erange,
                      s(:int, 0),
                      s(:int, 256))), :to_a), :map),
              s(:args,
                s(:arg, :i)),
              s(:send,
                s(:lvar, :i), :chr)), :join,
            s(:str, "")), :*,
          s(:int, 64))),
      s(:send,
        s(:gvar, :$test_net_http_data), :force_encoding,
        s(:str, "ASCII-8BIT")),
      s(:gvasgn, :$test_net_http_data_type,
        s(:str, "application/octet-stream")),
      s(:class,
        s(:const, nil, :Servlet),
        s(:const,
          s(:const,
            s(:const, nil, :WEBrick), :HTTPServlet), :AbstractServlet),
        s(:begin,
          s(:def, :initialize,
            s(:args,
              s(:arg, :this),
              s(:optarg, :chunked,
                s(:false))),
            s(:ivasgn, :@chunked,
              s(:lvar, :chunked))),
          s(:def, :do_GET,
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "Content-Type"),
                s(:gvar, :$test_net_http_data_type)),
              s(:send,
                s(:lvar, :res), :body=,
                s(:gvar, :$test_net_http_data)),
              s(:send,
                s(:lvar, :res), :chunked=,
                s(:ivar, :@chunked)))),
          s(:def, :do_POST,
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "Content-Type"),
                s(:send,
                  s(:lvar, :req), :[],
                  s(:str, "Content-Type"))),
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "X-request-uri"),
                s(:send,
                  s(:send,
                    s(:lvar, :req), :request_uri), :to_s)),
              s(:send,
                s(:lvar, :res), :body=,
                s(:send,
                  s(:lvar, :req), :body)),
              s(:send,
                s(:lvar, :res), :chunked=,
                s(:ivar, :@chunked)))),
          s(:def, :do_PATCH,
            s(:args,
              s(:arg, :req),
              s(:arg, :res)),
            s(:begin,
              s(:send,
                s(:lvar, :res), :[]=,
                s(:str, "Content-Type"),
                s(:send,
                  s(:lvar, :req), :[],
                  s(:str, "Content-Type"))),
              s(:send,
                s(:lvar, :res), :body=,
                s(:send,
                  s(:lvar, :req), :body)),
              s(:send,
                s(:lvar, :res), :chunked=,
                s(:ivar, :@chunked)))))),
      s(:class,
        s(:const, nil, :NullWriter), nil,
        s(:begin,
          s(:def, :<<,
            s(:args,
              s(:arg, :s)), nil),
          s(:def, :puts,
            s(:args,
              s(:restarg, :args)), nil),
          s(:def, :print,
            s(:args,
              s(:restarg, :args)), nil),
          s(:def, :printf,
            s(:args,
              s(:restarg, :args)), nil))))))
