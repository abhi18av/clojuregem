s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rexml_test_utils")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :TestIssuezillaParsing),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :REXMLTestUtils)),
        s(:def, :test_rexml,
          s(:args),
          s(:begin,
            s(:lvasgn, :doc,
              s(:block,
                s(:send,
                  s(:const, nil, :File), :open,
                  s(:send, nil, :fixture_path,
                    s(:str, "ofbiz-issues-full-177.xml"))),
                s(:args,
                  s(:arg, :f)),
                s(:send,
                  s(:const,
                    s(:const, nil, :REXML), :Document), :new,
                  s(:lvar, :f)))),
            s(:lvasgn, :ctr,
              s(:int, 1)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :doc), :root), :each_element,
                s(:str, "//issue")),
              s(:args,
                s(:arg, :issue)),
              s(:begin,
                s(:send, nil, :assert_equal,
                  s(:lvar, :ctr),
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:lvar, :issue), :elements), :[],
                        s(:str, "issue_id")), :text), :to_i)),
                s(:op_asgn,
                  s(:lvasgn, :ctr), :+,
                  s(:int, 1))))))))))
