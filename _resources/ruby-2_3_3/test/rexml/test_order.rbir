s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rexml_test_utils")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "zlib")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :OrderTester),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :REXMLTestUtils)),
        s(:casgn, nil, :TESTDOC,
          s(:dstr,
            s(:str, "<a>\n"),
            s(:str, "  <b/>\n"),
            s(:str, "  <x id='1'/>\n"),
            s(:str, "  <c/>\n"),
            s(:str, "  <d>\n"),
            s(:str, "    <x id='2'/>\n"),
            s(:str, "  </d>\n"),
            s(:str, "  <x id='3'/>\n"),
            s(:str, "</a>\n"))),
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@doc,
              s(:send,
                s(:const,
                  s(:const, nil, :REXML), :Document), :new,
                s(:const, nil, :TESTDOC))),
            s(:ivasgn, :@items,
              s(:send,
                s(:const,
                  s(:const, nil, :REXML), :XPath), :match,
                s(:ivar, :@doc),
                s(:str, "//x"))))),
        s(:def, :test_first_element,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "1"),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@items), :[],
                  s(:int, 0)), :attributes), :[],
              s(:str, "id")))),
        s(:def, :test_second_element,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "2"),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@items), :[],
                  s(:int, 1)), :attributes), :[],
              s(:str, "id")))),
        s(:def, :test_third_element,
          s(:args),
          s(:send, nil, :assert_equal,
            s(:str, "3"),
            s(:send,
              s(:send,
                s(:send,
                  s(:ivar, :@items), :[],
                  s(:int, 2)), :attributes), :[],
              s(:str, "id")))),
        s(:def, :test_order,
          s(:args),
          s(:begin,
            s(:lvasgn, :d,
              s(:send,
                s(:const,
                  s(:const, nil, :REXML), :Document), :new,
                s(:dstr,
                  s(:str, "<a><x id='1'/><x id='2'/><x id='3'/>\n"),
                  s(:str, "       <x id='4'/><x id='5'/></a>")))),
            s(:lvasgn, :items,
              s(:send,
                s(:const,
                  s(:const, nil, :REXML), :XPath), :match,
                s(:lvar, :d),
                s(:str, "//x"))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3"),
                s(:str, "4"),
                s(:str, "5")),
              s(:block,
                s(:send,
                  s(:lvar, :items), :collect),
                s(:args,
                  s(:arg, :e)),
                s(:send,
                  s(:send,
                    s(:lvar, :e), :attributes), :[],
                  s(:str, "id")))),
            s(:lvasgn, :d,
              s(:send,
                s(:const,
                  s(:const, nil, :REXML), :Document), :new,
                s(:dstr,
                  s(:str, "<a>\n"),
                  s(:str, "        <x><z><y id='1'/><y id='2'/></z><y id='3'/></x>\n"),
                  s(:str, "        <x><y id='4'/></x></a>")))),
            s(:lvasgn, :items,
              s(:send,
                s(:const,
                  s(:const, nil, :REXML), :XPath), :match,
                s(:lvar, :d),
                s(:str, "//y"))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "1"),
                s(:str, "2"),
                s(:str, "3"),
                s(:str, "4")),
              s(:block,
                s(:send,
                  s(:lvar, :items), :collect),
                s(:args,
                  s(:arg, :e)),
                s(:send,
                  s(:send,
                    s(:lvar, :e), :attributes), :[],
                  s(:str, "id")))))),
        s(:if,
          s(:defined?,
            s(:const,
              s(:const, nil, :Zlib), :GzipReader)),
          s(:def, :test_more_ordering,
            s(:args),
            s(:begin,
              s(:lvasgn, :doc,
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const, nil, :Zlib), :GzipReader), :open,
                    s(:send, nil, :fixture_path,
                      s(:str, "LostineRiver.kml.gz")),
                    s(:hash,
                      s(:pair,
                        s(:sym, :encoding),
                        s(:str, "utf-8")))),
                  s(:args,
                    s(:arg, :f)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :REXML), :Document), :new,
                    s(:lvar, :f)))),
              s(:lvasgn, :actual,
                s(:array,
                  s(:str, "Head south from Phinney Ave N"),
                  s(:str, "Turn left at N 36th St"),
                  s(:str, "Turn right at Fremont Ave N"),
                  s(:str, "Continue on 4th Ave N"),
                  s(:str, "Turn left at Westlake Ave N"),
                  s(:str, "Bear right at 9th Ave N"),
                  s(:str, "Turn left at Mercer St"),
                  s(:str, "Take the I-5 ramp"),
                  s(:str, "Take the I-5 S ramp"),
                  s(:str, "Take the I-90 E exit #164 to Bellevue/Spokane/4th Ave S."),
                  s(:str, "Take the I-90 E ramp to Bellevue/Spokane"),
                  s(:str, "Take exit #137 to Wanapum Dam/Richland"),
                  s(:str, "Bear right at WA-26"),
                  s(:str, "Bear right and head toward WA-243"),
                  s(:str, "Continue on WA-243"),
                  s(:str, "Bear right at WA-24"),
                  s(:str, "Continue on WA-240"),
                  s(:str, "Turn right at WA-240 E"),
                  s(:str, "Take the I-182 W ramp to Yakima (I-82)/Pendleton"),
                  s(:str, "Take the I-82 E ramp to Umatilla/Pendleton"),
                  s(:str, "Take the I-84 E ramp to Pendleton"),
                  s(:str, "Take the OR-82 exit #261 to La Grande/Elgin"),
                  s(:str, "Turn right at Island Ave"),
                  s(:str, "Continue on W 1st St"),
                  s(:str, "Turn left at N McAlister Rd"),
                  s(:str, "Bear right at OR-82"),
                  s(:str, "Continue on Wallowa Lake Hwy"),
                  s(:str, "Continue on OR-82"),
                  s(:str, "Continue on Ruckman Ave"),
                  s(:str, "Continue on OR-82"),
                  s(:str, "Continue on S 8th Ave"),
                  s(:str, "Turn right at Albany St"),
                  s(:str, "Continue on OR-82"),
                  s(:str, "Continue on Wallowa Lake Hwy"),
                  s(:str, "Continue on N Madison St"),
                  s(:str, "Bear left at W 1st St"),
                  s(:str, "Continue on Wallowa Lake Hwy"),
                  s(:str, "Continue on Water St"),
                  s(:str, "Bear right at Lostine River Rd"),
                  s(:str, "Bear right and head toward Lostine River Rd"),
                  s(:str, "Turn right at Lostine River Rd"),
                  s(:str, "Continue on NF-8210"),
                  s(:str, "Turn right and head toward NF-8210"),
                  s(:str, "Turn right at NF-8210"),
                  s(:str, ""),
                  s(:str, "Route"))),
              s(:lvasgn, :count,
                s(:int, 0)),
              s(:block,
                s(:send,
                  s(:const,
                    s(:const, nil, :REXML), :XPath), :each,
                  s(:lvar, :doc),
                  s(:str, "//Placemark")),
                s(:args,
                  s(:arg, :element)),
                s(:begin,
                  s(:lvasgn, :n,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:send,
                            s(:lvar, :element), :elements), :[],
                          s(:str, "name")), :text), :squeeze,
                      s(:str, " "))),
                  s(:if,
                    s(:send,
                      s(:lvar, :n), :=~,
                      s(:regexp,
                        s(:str, "Arrive at"),
                        s(:regopt))), nil,
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :actual), :[],
                        s(:lvar, :count)),
                      s(:lvar, :n))),
                  s(:op_asgn,
                    s(:lvasgn, :count), :+,
                    s(:int, 1)))))), nil)))))
