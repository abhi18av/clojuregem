s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit/testcase")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:send, nil, :require,
    s(:str, "rexml/validation/relaxng")),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :RNGValidation),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :REXML)),
        s(:def, :test_validate,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <element name=\"C\">\n"),
                s(:str, "      <attribute name=\"X\"/>\n"),
                s(:str, "      <zeroOrMore>\n"),
                s(:str, "        <element name=\"E\">\n"),
                s(:str, "          <empty/>\n"),
                s(:str, "        </element>\n"),
                s(:str, "      </zeroOrMore>\n"),
                s(:str, "    </element>\n"),
                s(:str, "    <element name=\"D\">\n"),
                s(:str, "      <empty/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C X=\"x\"><E/><E/></C><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/><C X=\"x\"/></B></A>")))),
        s(:def, :test_sequence,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <element name=\"C\">\n"),
                s(:str, "      <empty/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "    <element name=\"D\">\n"),
                s(:str, "      <empty/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><C/><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/><C/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/><D/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><D/></B></A>")))),
        s(:def, :test_choice,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <choice>\n"),
                s(:str, "      <element name=\"C\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "      <element name=\"D\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </choice>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><D/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/></B></A>")))),
        s(:def, :test_optional,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <optional>\n"),
                s(:str, "      <element name=\"C\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </optional>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><C/></B></A>")))),
        s(:def, :test_zero_or_more,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <zeroOrMore>\n"),
                s(:str, "      <element name=\"C\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </zeroOrMore>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><C/><C/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <zeroOrMore>\n"),
                s(:str, "      <element name=\"C\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "      <element name=\"D\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </zeroOrMore>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><D/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><D/><C/><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/></B></A>")))),
        s(:def, :test_one_or_more,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <oneOrMore>\n"),
                s(:str, "      <element name=\"C\">\n"),
                s(:str, "        <empty/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </oneOrMore>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><C/><C/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A></A>")))),
        s(:def, :test_attribute,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <attribute name=\"X\"/>\n"),
                s(:str, "  <attribute name=\"Y\"/>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A X=\"\"/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A X=\"1\" Y=\"1\"/>")))),
        s(:def, :test_choice_attributes,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <choice>\n"),
                s(:str, "    <attribute name=\"X\"/>\n"),
                s(:str, "    <attribute name=\"Y\"/>\n"),
                s(:str, "  </choice>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A X=\"1\" Y=\"1\"/>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A X=\"1\"/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A Y=\"1\"/>")))),
        s(:def, :test_choice_attribute_element,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <choice>\n"),
                s(:str, "    <attribute name=\"X\"/>\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "  </choice>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A X=\"1\"><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A X=\"1\"/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")))),
        s(:def, :test_empty,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <empty/>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A>Text</A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A/>")))),
        s(:def, :test_text_val,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <text/>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A>Text</A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")))),
        s(:def, :test_choice_text,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <choice>\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "    <text/>\n"),
                s(:str, "  </choice>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/>Text</A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A>Text<B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A>Text</A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")))),
        s(:def, :test_group,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <choice>\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "    <group>\n"),
                s(:str, "      <element name=\"C\"/>\n"),
                s(:str, "      <element name=\"D\"/>\n"),
                s(:str, "    </group>\n"),
                s(:str, "  </choice>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/><D/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\"/>\n"),
                s(:str, "  <group>\n"),
                s(:str, "    <element name=\"C\"/>\n"),
                s(:str, "    <element name=\"D\"/>\n"),
                s(:str, "  </group>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><D/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/><D/></A>")))),
        s(:def, :test_value,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <value>VaLuE</value>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B>X</B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B>VaLuE</B></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <choice>\n"),
                s(:str, "      <value>Option 1</value>\n"),
                s(:str, "      <value>Option 2</value>\n"),
                s(:str, "    </choice>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B>XYZ</B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B>Option 1</B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B>Option 2</B></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <attribute name=\"B\">\n"),
                s(:str, "    <value>VaLuE</value>\n"),
                s(:str, "  </attribute>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A B=\"\"/>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A B=\"Lala\"/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A B=\"VaLuE\"/>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <attribute name=\"B\">\n"),
                s(:str, "    <choice>\n"),
                s(:str, "      <value>Option 1</value>\n"),
                s(:str, "      <value>Option 2</value>\n"),
                s(:str, "    </choice>\n"),
                s(:str, "  </attribute>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A B=\"\"/>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A B=\"Value\"/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A B=\"Option 1\"></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A B=\"Option 2\"/>")))),
        s(:def, :test_interleave,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <interleave>\n"),
                s(:str, "      <element name=\"C\"/>\n"),
                s(:str, "      <element name=\"D\"/>\n"),
                s(:str, "      <element name=\"E\"/>\n"),
                s(:str, "    </interleave>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><D/><C/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><C/><D/><E/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><E/><D/><C/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/><C/><E/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><E/><C/><D/></B></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B><E/><C/><D/><C/></B></A>")))),
        s(:def, :test_mixed,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<element name=\"A\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <element name=\"B\">\n"),
                s(:str, "    <mixed>\n"),
                s(:str, "      <element name=\"D\"/>\n"),
                s(:str, "    </mixed>\n"),
                s(:str, "  </element>\n"),
                s(:str, "</element>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B>Text<D/></B></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><D/>Text</B></A>")))),
        s(:def, :test_ref_sequence,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\">\n"),
                s(:str, "      <attribute name=\"X\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/><B X=''/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/></A>")))),
        s(:def, :test_ref_choice,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <choice>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "      </choice>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "    <element name=\"C\"/>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><D/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <choice>\n"),
                s(:str, "      <element name=\"B\"/>\n"),
                s(:str, "      <element name=\"C\"/>\n"),
                s(:str, "    </choice>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><D/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <choice>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "        <element name=\"D\"/>\n"),
                s(:str, "      </choice>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "    <element name=\"C\"/>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><D/></A>")))),
        s(:def, :test_ref_zero_plus,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <zeroOrMore>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "      </zeroOrMore>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\">\n"),
                s(:str, "      <attribute name=\"X\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/><B X=''/><B X=''/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <zeroOrMore>\n"),
                s(:str, "      <element name=\"B\">\n"),
                s(:str, "        <attribute name=\"X\"/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </zeroOrMore>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/><B X=''/><B X=''/></A>")))),
        s(:def, :test_ref_one_plus,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <oneOrMore>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "      </oneOrMore>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\">\n"),
                s(:str, "      <attribute name=\"X\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/><B X=''/><B X=''/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <oneOrMore>\n"),
                s(:str, "      <element name=\"B\">\n"),
                s(:str, "        <attribute name=\"X\"/>\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </oneOrMore>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A/>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B X=''/><B X=''/><B X=''/></A>")))),
        s(:def, :test_ref_interleave,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <interleave>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "      </interleave>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "    <element name=\"C\"/>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/><B/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <interleave>\n"),
                s(:str, "      <element name=\"B\"/>\n"),
                s(:str, "      <element name=\"C\"/>\n"),
                s(:str, "    </interleave>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/><B/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <interleave>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "        <ref name=\"C\"/>\n"),
                s(:str, "      </interleave>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\"/>\n"),
                s(:str, "  </define>\n"),
                s(:str, "  <define name=\"C\">\n"),
                s(:str, "    <element name=\"C\"/>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/><C/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><C/><B/></A>")))),
        s(:def, :test_ref_recurse,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\">\n"),
                s(:str, "      <optional>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "      </optional>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B><B/></B></A>")))),
        s(:def, :test_ref_optional,
          s(:args),
          s(:begin,
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <optional>\n"),
                s(:str, "        <ref name=\"B\"/>\n"),
                s(:str, "      </optional>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <element name=\"B\">\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")),
            s(:lvasgn, :rng,
              s(:dstr,
                s(:str, "\n"),
                s(:str, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"),
                s(:str, "<grammar xmlns=\"http://relaxng.org/ns/structure/1.0\">\n"),
                s(:str, "  <start>\n"),
                s(:str, "    <element name=\"A\">\n"),
                s(:str, "      <ref name=\"B\"/>\n"),
                s(:str, "    </element>\n"),
                s(:str, "  </start>\n"),
                s(:str, "\n"),
                s(:str, "  <define name=\"B\">\n"),
                s(:str, "    <optional>\n"),
                s(:str, "      <element name=\"B\">\n"),
                s(:str, "      </element>\n"),
                s(:str, "    </optional>\n"),
                s(:str, "  </define>\n"),
                s(:str, "</grammar>\n"),
                s(:str, "      "))),
            s(:lvasgn, :validator,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :RelaxNG), :new,
                s(:lvar, :rng))),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A></A>")),
            s(:send, nil, :no_error,
              s(:lvar, :validator),
              s(:str, "<A><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><B/><B/></A>")),
            s(:send, nil, :error,
              s(:lvar, :validator),
              s(:str, "<A><C/></A>")))),
        s(:def, :error,
          s(:args,
            s(:arg, :validator),
            s(:arg, :source)),
          s(:begin,
            s(:lvasgn, :parser,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Parsers), :TreeParser), :new,
                s(:lvar, :source))),
            s(:send,
              s(:lvar, :parser), :add_listener,
              s(:send,
                s(:lvar, :validator), :reset)),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Validation), :ValidationException),
                s(:str, "Expected a validation error")),
              s(:args),
              s(:send,
                s(:lvar, :parser), :parse)))),
        s(:def, :no_error,
          s(:args,
            s(:arg, :validator),
            s(:arg, :source)),
          s(:begin,
            s(:lvasgn, :parser,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Parsers), :TreeParser), :new,
                s(:lvar, :source))),
            s(:send,
              s(:lvar, :parser), :add_listener,
              s(:send,
                s(:lvar, :validator), :reset)),
            s(:block,
              s(:send, nil, :assert_nothing_raised),
              s(:args),
              s(:send,
                s(:lvar, :parser), :parse))))))))
