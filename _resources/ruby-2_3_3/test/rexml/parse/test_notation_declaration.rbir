s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :TestParseNotationDeclaration),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :private),
        s(:def, :xml,
          s(:args,
            s(:arg, :internal_subset)),
          s(:dstr,
            s(:str, "<!DOCTYPE r SYSTEM \"urn:x-henrikmartensson:test\" [\n"),
            s(:begin,
              s(:lvar, :internal_subset)),
            s(:str, "\n"),
            s(:str, "]>\n"),
            s(:str, "<r/>\n"))),
        s(:def, :parse,
          s(:args,
            s(:arg, :internal_subset)),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :REXML), :Document), :new,
              s(:send, nil, :xml,
                s(:lvar, :internal_subset))), :doctype)),
        s(:class,
          s(:const, nil, :TestCommon),
          s(:self),
          s(:def, :test_name,
            s(:args),
            s(:begin,
              s(:lvasgn, :doctype,
                s(:send, nil, :parse,
                  s(:str, "<!NOTATION name PUBLIC 'urn:public-id'>"))),
              s(:send, nil, :assert_equal,
                s(:str, "name"),
                s(:send,
                  s(:send,
                    s(:lvar, :doctype), :notation,
                    s(:str, "name")), :name))))),
        s(:class,
          s(:const, nil, :TestExternalID),
          s(:self),
          s(:begin,
            s(:class,
              s(:const, nil, :TestSystem),
              s(:self),
              s(:begin,
                s(:def, :test_single_quote,
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :doctype,
                      s(:send, nil, :parse,
                        s(:str, "<!NOTATION name SYSTEM 'system-literal'>\n"))),
                    s(:send, nil, :assert_equal,
                      s(:str, "system-literal"),
                      s(:send,
                        s(:send,
                          s(:lvar, :doctype), :notation,
                          s(:str, "name")), :system)))),
                s(:def, :test_double_quote,
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :doctype,
                      s(:send, nil, :parse,
                        s(:str, "<!NOTATION name SYSTEM \"system-literal\">\n"))),
                    s(:send, nil, :assert_equal,
                      s(:str, "system-literal"),
                      s(:send,
                        s(:send,
                          s(:lvar, :doctype), :notation,
                          s(:str, "name")), :system)))))),
            s(:class,
              s(:const, nil, :TestPublic),
              s(:self),
              s(:begin,
                s(:class,
                  s(:const, nil, :TestPublicIDLiteral),
                  s(:self),
                  s(:begin,
                    s(:def, :test_single_quote,
                      s(:args),
                      s(:begin,
                        s(:lvasgn, :doctype,
                          s(:send, nil, :parse,
                            s(:str, "<!NOTATION name PUBLIC 'public-id-literal' \"system-literal\">\n"))),
                        s(:send, nil, :assert_equal,
                          s(:str, "public-id-literal"),
                          s(:send,
                            s(:send,
                              s(:lvar, :doctype), :notation,
                              s(:str, "name")), :public)))),
                    s(:def, :test_double_quote,
                      s(:args),
                      s(:begin,
                        s(:lvasgn, :doctype,
                          s(:send, nil, :parse,
                            s(:str, "<!NOTATION name PUBLIC \"public-id-literal\" \"system-literal\">\n"))),
                        s(:send, nil, :assert_equal,
                          s(:str, "public-id-literal"),
                          s(:send,
                            s(:send,
                              s(:lvar, :doctype), :notation,
                              s(:str, "name")), :public)))))),
                s(:class,
                  s(:const, nil, :TestSystemLiteral),
                  s(:self),
                  s(:begin,
                    s(:def, :test_single_quote,
                      s(:args),
                      s(:begin,
                        s(:lvasgn, :doctype,
                          s(:send, nil, :parse,
                            s(:str, "<!NOTATION name PUBLIC \"public-id-literal\" 'system-literal'>\n"))),
                        s(:send, nil, :assert_equal,
                          s(:str, "system-literal"),
                          s(:send,
                            s(:send,
                              s(:lvar, :doctype), :notation,
                              s(:str, "name")), :system)))),
                    s(:def, :test_double_quote,
                      s(:args),
                      s(:begin,
                        s(:lvasgn, :doctype,
                          s(:send, nil, :parse,
                            s(:str, "<!NOTATION name PUBLIC \"public-id-literal\" \"system-literal\">\n"))),
                        s(:send, nil, :assert_equal,
                          s(:str, "system-literal"),
                          s(:send,
                            s(:send,
                              s(:lvar, :doctype), :notation,
                              s(:str, "name")), :system)))))))),
            s(:class,
              s(:const, nil, :TestMixed),
              s(:self),
              s(:begin,
                s(:def, :test_system_public,
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :doctype,
                      s(:send, nil, :parse,
                        s(:dstr,
                          s(:str, "<!NOTATION system-name SYSTEM \"system-literal\">\n"),
                          s(:str, "<!NOTATION public-name PUBLIC \"public-id-literal\" 'system-literal'>\n")))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:str, "system-name"),
                        s(:str, "public-name")),
                      s(:send,
                        s(:send,
                          s(:lvar, :doctype), :notations), :collect,
                        s(:block_pass,
                          s(:sym, :name)))))),
                s(:def, :test_public_system,
                  s(:args),
                  s(:begin,
                    s(:lvasgn, :doctype,
                      s(:send, nil, :parse,
                        s(:dstr,
                          s(:str, "<!NOTATION public-name PUBLIC \"public-id-literal\" 'system-literal'>\n"),
                          s(:str, "<!NOTATION system-name SYSTEM \"system-literal\">\n")))),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:str, "public-name"),
                        s(:str, "system-name")),
                      s(:send,
                        s(:send,
                          s(:lvar, :doctype), :notations), :collect,
                        s(:block_pass,
                          s(:sym, :name))))))))))))))
