s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :TestParseDocumentTypeDeclaration),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :private),
        s(:def, :xml,
          s(:args,
            s(:arg, :internal_subset)),
          s(:dstr,
            s(:str, "<!DOCTYPE r SYSTEM \"urn:x-rexml:test\" [\n"),
            s(:begin,
              s(:lvar, :internal_subset)),
            s(:str, "\n"),
            s(:str, "]>\n"),
            s(:str, "<r/>\n"))),
        s(:def, :parse,
          s(:args,
            s(:arg, :internal_subset)),
          s(:send,
            s(:send,
              s(:const,
                s(:const, nil, :REXML), :Document), :new,
              s(:send, nil, :xml,
                s(:lvar, :internal_subset))), :doctype)),
        s(:class,
          s(:const, nil, :TestMixed),
          s(:self),
          s(:begin,
            s(:def, :test_entity_element,
              s(:args),
              s(:begin,
                s(:lvasgn, :doctype,
                  s(:send, nil, :parse,
                    s(:dstr,
                      s(:str, "<!ENTITY entity-name \"entity content\">\n"),
                      s(:str, "<!ELEMENT element-name EMPTY>\n")))),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:const,
                      s(:const, nil, :REXML), :Entity),
                    s(:const,
                      s(:const, nil, :REXML), :ElementDecl)),
                  s(:send,
                    s(:send,
                      s(:lvar, :doctype), :children), :collect,
                    s(:block_pass,
                      s(:sym, :class)))))),
            s(:def, :test_attlist_entity,
              s(:args),
              s(:begin,
                s(:lvasgn, :doctype,
                  s(:send, nil, :parse,
                    s(:dstr,
                      s(:str, "<!ATTLIST attribute-list-name attribute-name CDATA #REQUIRED>\n"),
                      s(:str, "<!ENTITY entity-name \"entity content\">\n")))),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:const,
                      s(:const, nil, :REXML), :AttlistDecl),
                    s(:const,
                      s(:const, nil, :REXML), :Entity)),
                  s(:send,
                    s(:send,
                      s(:lvar, :doctype), :children), :collect,
                    s(:block_pass,
                      s(:sym, :class)))))),
            s(:def, :test_notation_attlist,
              s(:args),
              s(:begin,
                s(:lvasgn, :doctype,
                  s(:send, nil, :parse,
                    s(:dstr,
                      s(:str, "<!NOTATION notation-name SYSTEM \"system-literal\">\n"),
                      s(:str, "<!ATTLIST attribute-list-name attribute-name CDATA #REQUIRED>\n")))),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:const,
                      s(:const, nil, :REXML), :NotationDecl),
                    s(:const,
                      s(:const, nil, :REXML), :AttlistDecl)),
                  s(:send,
                    s(:send,
                      s(:lvar, :doctype), :children), :collect,
                    s(:block_pass,
                      s(:sym, :class))))))))))))
