s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/encoding")),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :ChangingEncodings),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:def, :initialize,
          s(:args,
            s(:arg, :a)),
          s(:begin,
            s(:ivasgn, :@u,
              s(:str, "テスト ほげ ふが 美しい")),
            s(:ivasgn, :@e,
              s(:send,
                s(:ivar, :@u), :encode,
                s(:str, "EUC-JP"))),
            s(:ivasgn, :@f,
              s(:send,
                s(:const, nil, :Foo), :new)),
            s(:zsuper))),
        s(:class,
          s(:const, nil, :Foo), nil,
          s(:send, nil, :include,
            s(:const,
              s(:const, nil, :REXML), :Encoding))),
        s(:def, :test_0_euc,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@f), :encoding=,
              s(:str, "EUC-JP")),
            s(:send, nil, :assert_equal,
              s(:ivar, :@u),
              s(:send,
                s(:ivar, :@f), :decode,
                s(:ivar, :@e))))),
        s(:def, :test_1_utf,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@f), :encoding=,
              s(:str, "UTF-8")),
            s(:send, nil, :assert_not_equal,
              s(:ivar, :@u),
              s(:send,
                s(:ivar, :@f), :decode,
                s(:ivar, :@e))),
            s(:send, nil, :assert_equal,
              s(:ivar, :@u),
              s(:send,
                s(:ivar, :@f), :decode,
                s(:ivar, :@u))))),
        s(:def, :test_2_euc,
          s(:args),
          s(:begin,
            s(:send,
              s(:ivar, :@f), :encoding=,
              s(:str, "EUC-JP")),
            s(:send, nil, :assert_equal,
              s(:ivar, :@u),
              s(:send,
                s(:ivar, :@f), :decode,
                s(:ivar, :@e)))))))))
