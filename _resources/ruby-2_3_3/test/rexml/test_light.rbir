s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rexml_test_utils")),
  s(:send, nil, :require,
    s(:str, "rexml/light/node")),
  s(:send, nil, :require,
    s(:str, "rexml/parsers/lightparser")),
  s(:module,
    s(:const, nil, :REXMLTests),
    s(:class,
      s(:const, nil, :LightTester),
      s(:const,
        s(:const,
          s(:const, nil, :Test), :Unit), :TestCase),
      s(:begin,
        s(:send, nil, :include,
          s(:const, nil, :REXMLTestUtils)),
        s(:send, nil, :include,
          s(:const,
            s(:const, nil, :REXML), :Light)),
        s(:def, :test_parse_large,
          s(:args),
          s(:begin,
            s(:lvasgn, :xml_string,
              s(:send, nil, :fixture_path,
                s(:str, "documentation.xml"))),
            s(:lvasgn, :parser,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :REXML), :Parsers), :LightParser), :new,
                s(:lvar, :xml_string))),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :tag),
                s(:lvasgn, :content)),
              s(:send,
                s(:lvar, :parser), :parse)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:sym, :document),
                s(:sym, :text)),
              s(:array,
                s(:lvar, :tag),
                s(:send,
                  s(:lvar, :content), :first)))))))))
