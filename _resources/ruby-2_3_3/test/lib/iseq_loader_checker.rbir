s(:begin,
  s(:kwbegin,
    s(:rescue,
      s(:send, nil, :require,
        s(:str, "-test-/iseq_load/iseq_load")),
      s(:resbody,
        s(:array,
          s(:const, nil, :LoadError)), nil, nil), nil)),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:class,
    s(:const,
      s(:const, nil, :RubyVM), :InstructionSequence), nil,
    s(:begin,
      s(:def, :disasm_if_possible,
        s(:args),
        s(:kwbegin,
          s(:rescue,
            s(:send,
              s(:self), :disasm),
            s(:resbody,
              s(:array,
                s(:const,
                  s(:const, nil, :Encoding), :CompatibilityError),
                s(:const, nil, :EncodingError),
                s(:const, nil, :SecurityError)), nil,
              s(:nil)), nil))),
      s(:defs,
        s(:self), :compare_dump_and_load,
        s(:args,
          s(:arg, :i1),
          s(:arg, :dumper),
          s(:arg, :loader)),
        s(:begin,
          s(:lvasgn, :dump,
            s(:send,
              s(:lvar, :dumper), :call,
              s(:lvar, :i1))),
          s(:if,
            s(:lvar, :dump), nil,
            s(:return,
              s(:lvar, :i1))),
          s(:lvasgn, :i2,
            s(:send,
              s(:lvar, :loader), :call,
              s(:lvar, :dump))),
          s(:lvasgn, :d1,
            s(:send,
              s(:lvar, :i1), :disasm_if_possible)),
          s(:lvasgn, :d2,
            s(:send,
              s(:lvar, :i2), :disasm_if_possible)),
          s(:if,
            s(:send,
              s(:lvar, :d1), :!=,
              s(:lvar, :d2)),
            s(:begin,
              s(:send,
                s(:const, nil, :STDERR), :puts,
                s(:str, "expected:")),
              s(:send,
                s(:const, nil, :STDERR), :puts,
                s(:lvar, :d1)),
              s(:send,
                s(:const, nil, :STDERR), :puts,
                s(:str, "actual:")),
              s(:send,
                s(:const, nil, :STDERR), :puts,
                s(:lvar, :d2)),
              s(:lvasgn, :t1,
                s(:send,
                  s(:const, nil, :Tempfile), :new,
                  s(:str, "expected"))),
              s(:send,
                s(:lvar, :t1), :puts,
                s(:lvar, :d1)),
              s(:send,
                s(:lvar, :t1), :close),
              s(:lvasgn, :t2,
                s(:send,
                  s(:const, nil, :Tempfile), :new,
                  s(:str, "actual"))),
              s(:send,
                s(:lvar, :t2), :puts,
                s(:lvar, :d2)),
              s(:send,
                s(:lvar, :t2), :close),
              s(:send, nil, :system,
                s(:dstr,
                  s(:str, "diff -u "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :t1), :path)),
                  s(:str, " "),
                  s(:begin,
                    s(:send,
                      s(:lvar, :t2), :path)))),
              s(:send, nil, :exit,
                s(:int, 1))), nil),
          s(:lvar, :i2))),
      s(:casgn, nil, :CHECK_TO_A,
        s(:send,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "RUBY_ISEQ_DUMP_DEBUG")), :==,
          s(:str, "to_a"))),
      s(:casgn, nil, :CHECK_TO_BINARY,
        s(:send,
          s(:send,
            s(:const, nil, :ENV), :[],
            s(:str, "RUBY_ISEQ_DUMP_DEBUG")), :==,
          s(:str, "to_binary"))),
      s(:if,
        s(:or,
          s(:const, nil, :CHECK_TO_A),
          s(:const, nil, :CHECK_TO_BINARY)),
        s(:defs,
          s(:self), :translate,
          s(:args,
            s(:arg, :i1)),
          s(:begin,
            s(:if,
              s(:and,
                s(:const, nil, :CHECK_TO_A),
                s(:defined?,
                  s(:send,
                    s(:const,
                      s(:const, nil, :RubyVM), :InstructionSequence), :iseq_load))),
              s(:lvasgn, :i2_ary,
                s(:send, nil, :compare_dump_and_load,
                  s(:lvar, :i1),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :iseq)),
                    s(:begin,
                      s(:lvasgn, :ary,
                        s(:send,
                          s(:lvar, :iseq), :to_a)),
                      s(:if,
                        s(:send,
                          s(:send,
                            s(:lvar, :ary), :[],
                            s(:int, 9)), :==,
                          s(:sym, :top)),
                        s(:lvar, :ary),
                        s(:nil)))),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :ary)),
                    s(:send,
                      s(:const,
                        s(:const, nil, :RubyVM), :InstructionSequence), :iseq_load,
                      s(:lvar, :ary))))), nil),
            s(:if,
              s(:const, nil, :CHECK_TO_BINARY),
              s(:lvasgn, :i2_bin,
                s(:send, nil, :compare_dump_and_load,
                  s(:lvar, :i1),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :iseq)),
                    s(:kwbegin,
                      s(:rescue,
                        s(:send,
                          s(:lvar, :iseq), :to_binary),
                        s(:resbody,
                          s(:array,
                            s(:const, nil, :RuntimeError)),
                          s(:lvasgn, :e),
                          s(:nil)), nil))),
                  s(:block,
                    s(:send, nil, :proc),
                    s(:args,
                      s(:arg, :bin)),
                    s(:begin,
                      s(:lvasgn, :iseq,
                        s(:send,
                          s(:const,
                            s(:const, nil, :RubyVM), :InstructionSequence), :load_from_binary,
                          s(:lvar, :bin))),
                      s(:lvar, :iseq))))), nil),
            s(:if,
              s(:const, nil, :CHECK_TO_BINARY),
              s(:lvar, :i2_bin), nil))), nil))))
