s(:begin,
  s(:send, nil, :require,
    s(:str, "objspace")),
  s(:class,
    s(:const,
      s(:const,
        s(:const, nil, :MiniTest), :Unit), :TestCase), nil,
    s(:begin,
      s(:alias,
        s(:sym, :orig_run),
        s(:sym, :run)),
      s(:lvasgn, :file,
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "RUBY_TEST_ALL_PROFILE"))),
      s(:if,
        s(:send,
          s(:lvar, :file), :==,
          s(:str, "true")),
        s(:lvasgn, :file,
          s(:str, "test-all-profile-result")), nil),
      s(:casgn, nil, :TEST_ALL_PROFILE_OUT,
        s(:send, nil, :open,
          s(:lvar, :file),
          s(:str, "w"))),
      s(:casgn, nil, :TEST_ALL_PROFILE_GC_STAT_HASH,
        s(:hash)),
      s(:casgn, nil, :TEST_ALL_PROFILE_BANNER,
        s(:array,
          s(:str, "name"))),
      s(:casgn, nil, :TEST_ALL_PROFILE_PROCS,
        s(:array)),
      s(:defs,
        s(:self), :add,
        s(:args,
          s(:restarg, :name),
          s(:blockarg, :b)),
        s(:begin,
          s(:send,
            s(:const, nil, :TEST_ALL_PROFILE_BANNER), :concat,
            s(:lvar, :name)),
          s(:send,
            s(:const, nil, :TEST_ALL_PROFILE_PROCS), :<<,
            s(:lvar, :b)))),
      s(:block,
        s(:send, nil, :add,
          s(:str, "failed?")),
        s(:args,
          s(:arg, :result),
          s(:arg, :tc)),
        s(:send,
          s(:lvar, :result), :<<,
          s(:begin,
            s(:if,
              s(:send,
                s(:lvar, :tc), :passed?),
              s(:int, 0),
              s(:int, 1))))),
      s(:block,
        s(:send, nil, :add,
          s(:str, "memsize_of_all")),
        s(:args,
          s(:arg, :result),
          s(:restarg)),
        s(:send,
          s(:lvar, :result), :<<,
          s(:send,
            s(:const, nil, :ObjectSpace), :memsize_of_all))),
      s(:block,
        s(:send, nil, :add,
          s(:splat,
            s(:send,
              s(:send,
                s(:const, nil, :GC), :stat), :keys))),
        s(:args,
          s(:arg, :result),
          s(:restarg)),
        s(:begin,
          s(:send,
            s(:const, nil, :GC), :stat,
            s(:const, nil, :TEST_ALL_PROFILE_GC_STAT_HASH)),
          s(:send,
            s(:lvar, :result), :concat,
            s(:send,
              s(:const, nil, :TEST_ALL_PROFILE_GC_STAT_HASH), :values)))),
      s(:defs,
        s(:self), :add_proc_meminfo,
        s(:args,
          s(:arg, :file),
          s(:arg, :fields)),
        s(:begin,
          s(:if,
            s(:send,
              s(:const, nil, :FileTest), :exist?,
              s(:lvar, :file)), nil,
            s(:return)),
          s(:lvasgn, :regexp,
            s(:regexp,
              s(:str, "("),
              s(:begin,
                s(:send,
                  s(:lvar, :fields), :join,
                  s(:str, "|"))),
              s(:str, "):\\s*(\\d+) kB"),
              s(:regopt))),
          s(:block,
            s(:send, nil, :add,
              s(:splat,
                s(:lvar, :fields))),
            s(:args,
              s(:arg, :result),
              s(:restarg)),
            s(:begin,
              s(:lvasgn, :text,
                s(:send,
                  s(:const, nil, :File), :read,
                  s(:lvar, :file))),
              s(:block,
                s(:send,
                  s(:lvar, :text), :scan,
                  s(:lvar, :regexp)),
                s(:args),
                s(:begin,
                  s(:send,
                    s(:lvar, :result), :<<,
                    s(:nth_ref, 2)),
                  s(:str, ""))))))),
      s(:send, nil, :add_proc_meminfo,
        s(:str, "/proc/meminfo"),
        s(:array,
          s(:str, "MemTotal"),
          s(:str, "MemFree"))),
      s(:send, nil, :add_proc_meminfo,
        s(:str, "/proc/self/status"),
        s(:array,
          s(:str, "VmPeak"),
          s(:str, "VmSize"),
          s(:str, "VmHWM"),
          s(:str, "VmRSS"))),
      s(:if,
        s(:send,
          s(:const, nil, :FileTest), :exist?,
          s(:str, "/proc/self/statm")),
        s(:block,
          s(:send, nil, :add,
            s(:splat,
              s(:array,
                s(:str, "size"),
                s(:str, "resident"),
                s(:str, "share"),
                s(:str, "text"),
                s(:str, "lib"),
                s(:str, "data"),
                s(:str, "dt")))),
          s(:args,
            s(:arg, :result),
            s(:restarg)),
          s(:send,
            s(:lvar, :result), :concat,
            s(:send,
              s(:send,
                s(:const, nil, :File), :read,
                s(:str, "/proc/self/statm")), :split,
              s(:regexp,
                s(:str, "\\s+"),
                s(:regopt))))), nil),
      s(:def, :memprofile_test_all_result_result,
        s(:args),
        s(:begin,
          s(:lvasgn, :result,
            s(:array,
              s(:dstr,
                s(:begin,
                  s(:send,
                    s(:self), :class)),
                s(:str, "#"),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:self), :__name__), :to_s), :gsub,
                    s(:regexp,
                      s(:str, "\\s+"),
                      s(:regopt)),
                    s(:str, "")))))),
          s(:block,
            s(:send,
              s(:const, nil, :TEST_ALL_PROFILE_PROCS), :each),
            s(:args,
              s(:arg, :proc)),
            s(:send,
              s(:lvar, :proc), :call,
              s(:lvar, :result),
              s(:self))),
          s(:send,
            s(:lvar, :result), :join,
            s(:str, "\t")))),
      s(:def, :run,
        s(:args,
          s(:arg, :runner)),
        s(:begin,
          s(:lvasgn, :result,
            s(:send, nil, :orig_run,
              s(:lvar, :runner))),
          s(:send,
            s(:const, nil, :TEST_ALL_PROFILE_OUT), :puts,
            s(:send, nil, :memprofile_test_all_result_result)),
          s(:send,
            s(:const, nil, :TEST_ALL_PROFILE_OUT), :flush),
          s(:lvar, :result))),
      s(:send,
        s(:const, nil, :TEST_ALL_PROFILE_OUT), :puts,
        s(:send,
          s(:const, nil, :TEST_ALL_PROFILE_BANNER), :join,
          s(:str, "\t"))))))
