s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit/assertions")),
  s(:module,
    s(:const, nil, :Test),
    s(:module,
      s(:const, nil, :Unit),
      s(:begin,
        s(:if,
          s(:defined?,
            s(:const,
              s(:self), :TestCase)),
          s(:send, nil, :remove_const,
            s(:sym, :TestCase)), nil),
        s(:class,
          s(:const, nil, :TestCase),
          s(:const,
            s(:const,
              s(:const, nil, :MiniTest), :Unit), :TestCase),
          s(:begin,
            s(:send, nil, :include,
              s(:const, nil, :Assertions)),
            s(:def, :on_parallel_worker?,
              s(:args),
              s(:false)),
            s(:def, :run,
              s(:args,
                s(:arg, :runner)),
              s(:begin,
                s(:ivasgn, :@options,
                  s(:send,
                    s(:lvar, :runner), :options)),
                s(:super,
                  s(:lvar, :runner)))),
            s(:defs,
              s(:self), :test_order,
              s(:args),
              s(:sym, :sorted)),
            s(:defs,
              s(:self), :method_added,
              s(:args,
                s(:arg, :name)),
              s(:begin,
                s(:zsuper),
                s(:if,
                  s(:send,
                    s(:send,
                      s(:lvar, :name), :to_s), :start_with?,
                    s(:str, "test_")), nil,
                  s(:return)),
                s(:or_asgn,
                  s(:ivasgn, :@test_methods),
                  s(:hash)),
                s(:if,
                  s(:send,
                    s(:ivar, :@test_methods), :[],
                    s(:lvar, :name)),
                  s(:send, nil, :warn,
                    s(:dstr,
                      s(:str, "test/unit warning: method "),
                      s(:begin,
                        s(:self)),
                      s(:str, "#"),
                      s(:begin,
                        s(:lvar, :name)),
                      s(:str, " is redefined"))), nil),
                s(:send,
                  s(:ivar, :@test_methods), :[]=,
                  s(:lvar, :name),
                  s(:true))))))))))
