s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "drbtest")),
  s(:module,
    s(:const, nil, :DRbTests),
    s(:begin,
      s(:class,
        s(:const, nil, :TestDRbCore),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbCore)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:send, nil, :setup_service,
                s(:str, "ut_drb.rb")),
              s(:zsuper))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))))),
      s(:class,
        s(:const, nil, :TestDRbYield),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbBase)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:send, nil, :setup_service,
                s(:str, "ut_drb.rb")),
              s(:zsuper))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))),
          s(:def, :test_01_one,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_1,
                  s(:array)),
                s(:args,
                  s(:arg, :one)),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :one))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_1,
                  s(:int, 1)),
                s(:args,
                  s(:arg, :one)),
                s(:send, nil, :assert_equal,
                  s(:int, 1),
                  s(:lvar, :one))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_1,
                  s(:nil)),
                s(:args,
                  s(:arg, :one)),
                s(:send, nil, :assert_equal,
                  s(:nil),
                  s(:lvar, :one))))),
          s(:def, :test_02_two,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_2,
                  s(:array),
                  s(:array)),
                s(:args,
                  s(:arg, :one),
                  s(:arg, :two)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:array),
                    s(:lvar, :one)),
                  s(:send, nil, :assert_equal,
                    s(:array),
                    s(:lvar, :two)))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_2,
                  s(:int, 1),
                  s(:int, 2)),
                s(:args,
                  s(:arg, :one),
                  s(:arg, :two)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:int, 1),
                    s(:lvar, :one)),
                  s(:send, nil, :assert_equal,
                    s(:int, 2),
                    s(:lvar, :two)))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_2,
                  s(:int, 3),
                  s(:nil)),
                s(:args,
                  s(:arg, :one),
                  s(:arg, :two)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:int, 3),
                    s(:lvar, :one)),
                  s(:send, nil, :assert_equal,
                    s(:nil),
                    s(:lvar, :two)))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_1,
                  s(:array,
                    s(:sym, :key),
                    s(:sym, :value))),
                s(:args,
                  s(:arg, :one),
                  s(:arg, :two)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:sym, :key),
                    s(:lvar, :one)),
                  s(:send, nil, :assert_equal,
                    s(:sym, :value),
                    s(:lvar, :two)))))),
          s(:def, :test_03_many,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_0),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:nil)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:nil)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:int, 1)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:int, 1)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:int, 1),
                  s(:int, 2)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:int, 1),
                    s(:int, 2)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 3)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:int, 1),
                    s(:int, 2),
                    s(:int, 3)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:array),
                  s(:array)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array),
                    s(:array)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:array)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array)),
                  s(:lvar, :s))))),
          s(:def, :test_04_many_to_one,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield_0),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:nil)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:nil)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:int, 1)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:int, 1)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:int, 1),
                  s(:int, 2)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:int, 1),
                    s(:int, 2)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:int, 1),
                  s(:int, 2),
                  s(:int, 3)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:int, 1),
                    s(:int, 2),
                    s(:int, 3)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:array),
                  s(:array)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array),
                    s(:array)),
                  s(:lvar, :s))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:array)),
                s(:args,
                  s(:restarg, :s)),
                s(:send, nil, :assert_equal,
                  s(:array,
                    s(:array)),
                  s(:lvar, :s))))),
          s(:def, :test_05_array_subclass,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@there), :xarray_each),
                s(:args,
                  s(:arg, :x)),
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :XArray),
                  s(:lvar, :x))),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :xarray_each),
                s(:args,
                  s(:restarg, :x)),
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :XArray),
                  s(:send,
                    s(:lvar, :x), :[],
                    s(:int, 0)))))),
          s(:def, :test_06_taint,
            s(:args),
            s(:begin,
              s(:lvasgn, :x,
                s(:block,
                  s(:send, nil, :proc),
                  s(:args), nil)),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :x), :tainted?), :!)),
              s(:block,
                s(:send,
                  s(:ivar, :@there), :echo_yield,
                  s(:lvar, :x)),
                s(:args,
                  s(:arg, :o)),
                s(:begin,
                  s(:send, nil, :assert_equal,
                    s(:lvar, :x),
                    s(:lvar, :o)),
                  s(:send, nil, :assert,
                    s(:send,
                      s(:send,
                        s(:lvar, :x), :tainted?), :!)))))))),
      s(:class,
        s(:const, nil, :TestDRbRubyYield),
        s(:const, nil, :TestDRbYield),
        s(:begin,
          s(:def, :echo_yield,
            s(:args,
              s(:restarg, :arg)),
            s(:yield,
              s(:splat,
                s(:lvar, :arg)))),
          s(:def, :echo_yield_0,
            s(:args),
            s(:yield)),
          s(:def, :echo_yield_1,
            s(:args,
              s(:arg, :a)),
            s(:yield,
              s(:lvar, :a))),
          s(:def, :echo_yield_2,
            s(:args,
              s(:arg, :a),
              s(:arg, :b)),
            s(:yield,
              s(:lvar, :a),
              s(:lvar, :b))),
          s(:def, :xarray_each,
            s(:args),
            s(:begin,
              s(:lvasgn, :xary,
                s(:array,
                  s(:send,
                    s(:const, nil, :XArray), :new,
                    s(:array,
                      s(:int, 0))))),
              s(:block,
                s(:send,
                  s(:lvar, :xary), :each),
                s(:args,
                  s(:arg, :x)),
                s(:yield,
                  s(:lvar, :x))))),
          s(:def, :setup,
            s(:args),
            s(:ivasgn, :@there,
              s(:self))),
          s(:def, :teardown,
            s(:args), nil))),
      s(:class,
        s(:const, nil, :TestDRbRuby18Yield),
        s(:const, nil, :TestDRbRubyYield),
        s(:begin,
          s(:class,
            s(:const, nil, :YieldTest18), nil,
            s(:begin,
              s(:def, :echo_yield,
                s(:args,
                  s(:restarg, :arg),
                  s(:blockarg, :proc)),
                s(:send,
                  s(:lvar, :proc), :call,
                  s(:splat,
                    s(:lvar, :arg)))),
              s(:def, :echo_yield_0,
                s(:args,
                  s(:blockarg, :proc)),
                s(:send,
                  s(:lvar, :proc), :call)),
              s(:def, :echo_yield_1,
                s(:args,
                  s(:arg, :a),
                  s(:blockarg, :proc)),
                s(:send,
                  s(:lvar, :proc), :call,
                  s(:lvar, :a))),
              s(:def, :echo_yield_2,
                s(:args,
                  s(:arg, :a),
                  s(:arg, :b),
                  s(:blockarg, :proc)),
                s(:send,
                  s(:lvar, :proc), :call,
                  s(:lvar, :a),
                  s(:lvar, :b))),
              s(:def, :xarray_each,
                s(:args,
                  s(:blockarg, :proc)),
                s(:begin,
                  s(:lvasgn, :xary,
                    s(:array,
                      s(:send,
                        s(:const, nil, :XArray), :new,
                        s(:array,
                          s(:int, 0))))),
                  s(:send,
                    s(:lvar, :xary), :each,
                    s(:block_pass,
                      s(:lvar, :proc))))))),
          s(:def, :setup,
            s(:args),
            s(:ivasgn, :@there,
              s(:send,
                s(:const, nil, :YieldTest18), :new))))),
      s(:class,
        s(:const, nil, :TestDRbAry),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbAry)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:send, nil, :setup_service,
                s(:str, "ut_array.rb")),
              s(:zsuper))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))))),
      s(:class,
        s(:const, nil, :TestDRbMServer),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbBase)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:send, nil, :setup_service,
                s(:str, "ut_drb.rb")),
              s(:zsuper),
              s(:ivasgn, :@server,
                s(:block,
                  s(:send,
                    s(:begin,
                      s(:irange,
                        s(:int, 1),
                        s(:int, 3))), :collect),
                  s(:args,
                    s(:arg, :n)),
                  s(:send,
                    s(:const,
                      s(:const, nil, :DRb), :DRbServer), :new,
                    s(:str, "druby://localhost:0"),
                    s(:send,
                      s(:const, nil, :Onecky), :new,
                      s(:send,
                        s(:lvar, :n), :to_s))))))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:block,
                s(:send,
                  s(:ivar, :@server), :each),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :s), :stop_service)),
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))),
          s(:def, :test_01,
            s(:args),
            s(:send, nil, :assert_equal,
              s(:int, 6),
              s(:send,
                s(:ivar, :@there), :sample,
                s(:send,
                  s(:send,
                    s(:ivar, :@server), :[],
                    s(:int, 0)), :front),
                s(:send,
                  s(:send,
                    s(:ivar, :@server), :[],
                    s(:int, 1)), :front),
                s(:send,
                  s(:send,
                    s(:ivar, :@server), :[],
                    s(:int, 2)), :front)))))),
      s(:class,
        s(:const, nil, :TestDRbSafe1),
        s(:const, nil, :TestDRbAry),
        s(:begin,
          s(:def, :setup,
            s(:args),
            s(:send, nil, :setup_service,
              s(:str, "ut_safe1.rb"))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))))),
      s(:class,
        s(:const, nil, :TestDRbEval), nil,
        s(:begin,
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:ivasgn, :@ext,
                s(:send,
                  s(:const, nil, :DRbService), :ext_service,
                  s(:str, "ut_eval.rb"))),
              s(:ivasgn, :@there,
                s(:send,
                  s(:ivar, :@ext), :front)))),
          s(:def, :teardown,
            s(:args),
            s(:if,
              s(:ivar, :@ext),
              s(:send,
                s(:ivar, :@ext), :stop_service), nil)),
          s(:def, :test_01_safe1_safe4_eval,
            s(:args),
            s(:begin,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :SecurityError)),
                s(:args),
                s(:send,
                  s(:ivar, :@there), :method_missing,
                  s(:sym, :instance_eval),
                  s(:str, "ENV.inspect"))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :SecurityError)),
                s(:args),
                s(:send,
                  s(:ivar, :@there), :method_missing,
                  s(:sym, :send),
                  s(:sym, :eval),
                  s(:str, "ENV.inspect"))),
              s(:lvasgn, :remote_class,
                s(:send,
                  s(:ivar, :@there), :remote_class)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :SecurityError)),
                s(:args),
                s(:send,
                  s(:lvar, :remote_class), :class_eval,
                  s(:str, "ENV.inspect"))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :SecurityError)),
                s(:args),
                s(:send,
                  s(:lvar, :remote_class), :module_eval,
                  s(:str, "ENV.inspect"))),
              s(:lvasgn, :four,
                s(:send,
                  s(:ivar, :@there), :four)),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:lvar, :four), :method_missing,
                  s(:sym, :send),
                  s(:sym, :eval),
                  s(:str, "1"))),
              s(:lvasgn, :remote_class,
                s(:send,
                  s(:lvar, :four), :remote_class)),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:lvar, :remote_class), :class_eval,
                  s(:str, "1"))),
              s(:send, nil, :assert_equal,
                s(:int, 1),
                s(:send,
                  s(:lvar, :remote_class), :module_eval,
                  s(:str, "1"))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :SecurityError)),
                s(:args),
                s(:send,
                  s(:lvar, :remote_class), :class_eval,
                  s(:str, "ENV = {}"))),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :SecurityError)),
                s(:args),
                s(:send,
                  s(:lvar, :remote_class), :module_eval,
                  s(:str, "ENV = {}"))))))),
      s(:class,
        s(:const, nil, :TestDRbLarge),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbBase)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:send, nil, :setup_service,
                s(:str, "ut_large.rb")),
              s(:zsuper))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))),
          s(:def, :test_01_large_ary,
            s(:args),
            s(:begin,
              s(:lvasgn, :ary,
                s(:send,
                  s(:array,
                    s(:int, 2)), :*,
                  s(:int, 10240))),
              s(:send, nil, :assert_equal,
                s(:int, 10240),
                s(:send,
                  s(:ivar, :@there), :size,
                  s(:lvar, :ary))),
              s(:send, nil, :assert_equal,
                s(:int, 20480),
                s(:send,
                  s(:ivar, :@there), :sum,
                  s(:lvar, :ary))))),
          s(:def, :test_02_large_ary,
            s(:args),
            s(:begin,
              s(:lvasgn, :ary,
                s(:send,
                  s(:array,
                    s(:str, "Hello, World")), :*,
                  s(:int, 10240))),
              s(:send, nil, :assert_equal,
                s(:int, 10240),
                s(:send,
                  s(:ivar, :@there), :size,
                  s(:lvar, :ary))))),
          s(:def, :test_03_large_ary,
            s(:args),
            s(:begin,
              s(:lvasgn, :ary,
                s(:send,
                  s(:array,
                    s(:send,
                      s(:const, nil, :Thread), :current)), :*,
                  s(:int, 10240))),
              s(:send, nil, :assert_equal,
                s(:int, 10240),
                s(:send,
                  s(:ivar, :@there), :size,
                  s(:lvar, :ary))))),
          s(:def, :test_04_many_arg,
            s(:args),
            s(:block,
              s(:send, nil, :assert_raise,
                s(:const,
                  s(:const, nil, :DRb), :DRbConnError)),
              s(:args),
              s(:send,
                s(:ivar, :@there), :arg_test,
                s(:int, 1),
                s(:int, 2),
                s(:int, 3),
                s(:int, 4),
                s(:int, 5),
                s(:int, 6),
                s(:int, 7),
                s(:int, 8),
                s(:int, 9),
                s(:int, 0)))),
          s(:def, :test_05_too_large_ary,
            s(:args),
            s(:begin,
              s(:lvasgn, :ary,
                s(:send,
                  s(:array,
                    s(:str, "Hello, World")), :*,
                  s(:int, 102400))),
              s(:lvasgn, :exception,
                s(:nil)),
              s(:kwbegin,
                s(:rescue,
                  s(:send,
                    s(:ivar, :@there), :size,
                    s(:lvar, :ary)),
                  s(:resbody,
                    s(:array,
                      s(:const, nil, :StandardError)), nil,
                    s(:lvasgn, :exception,
                      s(:gvar, :$!))), nil)),
              s(:send, nil, :assert_kind_of,
                s(:const, nil, :StandardError),
                s(:lvar, :exception)))))),
      s(:class,
        s(:const, nil, :TestBug4409),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:send, nil, :include,
            s(:const, nil, :DRbBase)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:send, nil, :setup_service,
                s(:str, "ut_eq.rb")),
              s(:zsuper))),
          s(:def, :teardown,
            s(:args),
            s(:begin,
              s(:zsuper),
              s(:send,
                s(:const, nil, :DRbService), :finish))),
          s(:def, :test_bug4409,
            s(:args),
            s(:begin,
              s(:lvasgn, :foo,
                s(:send,
                  s(:ivar, :@there), :foo)),
              s(:send, nil, :assert,
                s(:send,
                  s(:ivar, :@there), :foo?,
                  s(:lvar, :foo))))))))))
