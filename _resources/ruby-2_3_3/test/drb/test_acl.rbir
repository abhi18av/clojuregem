s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "drb/acl")),
  s(:module,
    s(:const, nil, :DRbTests),
    s(:begin,
      s(:class,
        s(:const, nil, :SampleHosts), nil,
        s(:begin,
          s(:def, :initialize,
            s(:args),
            s(:begin,
              s(:lvasgn, :list,
                s(:array,
                  s(:str, "127.0.0.1"),
                  s(:str, "localhost"),
                  s(:str, "192.168.1.1"),
                  s(:str, "x68k.linux.or.jp"),
                  s(:str, "192.168.1.2"),
                  s(:str, "lc630.macos.or.jp"),
                  s(:str, "192.168.1.3"),
                  s(:str, "lib30.win32.or.jp"),
                  s(:str, "192.168.1.4"),
                  s(:str, "ns00.linux.or.jp"),
                  s(:str, "192.168.1.5"),
                  s(:str, "yum.macos.or.jp"),
                  s(:str, "::ffff:192.168.1.5"),
                  s(:str, "ipv6.macos.or.jp"),
                  s(:str, "::192.168.1.5"),
                  s(:str, "too.yumipv6.macos.or.jp"),
                  s(:str, "192.168.1.254"),
                  s(:str, "comstarz.foo.or.jp"))),
              s(:ivasgn, :@hostlist,
                s(:send,
                  s(:const, nil, :Array), :new,
                  s(:send,
                    s(:send,
                      s(:lvar, :list), :size), :/,
                    s(:int, 2)))),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each_index),
                s(:args,
                  s(:arg, :idx)),
                s(:send,
                  s(:ivar, :@hostlist), :[]=,
                  s(:lvar, :idx),
                  s(:array,
                    s(:str, "AF_INET"),
                    s(:int, 10000),
                    s(:send,
                      s(:lvar, :list), :[],
                      s(:send,
                        s(:send,
                          s(:lvar, :idx), :*,
                          s(:int, 2)), :+,
                        s(:int, 1))),
                    s(:send,
                      s(:lvar, :list), :[],
                      s(:send,
                        s(:lvar, :idx), :*,
                        s(:int, 2)))))),
              s(:ivasgn, :@hosts,
                s(:send,
                  s(:const, nil, :Hash), :new)),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each),
                s(:args,
                  s(:arg, :h)),
                s(:send,
                  s(:ivar, :@hosts), :[]=,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :h), :[],
                        s(:int, 2)), :split,
                      s(:str, ".")), :[],
                    s(:int, 0)),
                  s(:lvar, :h))))),
          s(:send, nil, :attr_reader,
            s(:sym, :hostlist),
            s(:sym, :hosts)))),
      s(:class,
        s(:const, nil, :ACLEntryTest),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:casgn, nil, :HOSTS,
            s(:send,
              s(:const, nil, :SampleHosts), :new)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:ivasgn, :@hostlist,
                s(:send,
                  s(:const, nil, :HOSTS), :hostlist)),
              s(:ivasgn, :@hosts,
                s(:send,
                  s(:const, nil, :HOSTS), :hosts)))),
          s(:def, :test_all,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "*"))),
              s(:lvasgn, :b,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "all"))),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each),
                s(:args,
                  s(:arg, :h)),
                s(:begin,
                  s(:send, nil, :assert,
                    s(:send,
                      s(:lvar, :a), :match,
                      s(:lvar, :h))),
                  s(:send, nil, :assert,
                    s(:send,
                      s(:lvar, :b), :match,
                      s(:lvar, :h))))))),
          s(:def, :test_ip_v6,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "::ffff:192.0.0.0/104"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "localhost"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "ipv6")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "too"))), :!)))),
          s(:def, :test_ip,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "192.0.0.0/8"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "localhost"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "192.168.0.1/255.255.0.255"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "localhost"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "yum"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "x68k")))),
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "192.168.1.0/24"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "localhost"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "x68k")))),
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "92.0.0.0/8"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "localhost"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "yum"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "x68k"))), :!)),
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "127.0.0.1/255.0.0.255"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "localhost")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "yum"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "x68k"))), :!)))),
          s(:def, :test_name,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "*.jp"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "localhost"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "yum.*.jp"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "lc630"))), :!)),
              s(:lvasgn, :a,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLEntry), :new,
                  s(:str, "*.macos.or.jp"))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "lc630")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "lib30"))), :!)))))),
      s(:class,
        s(:const, nil, :ACLListTest),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:casgn, nil, :HOSTS,
            s(:send,
              s(:const, nil, :SampleHosts), :new)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:ivasgn, :@hostlist,
                s(:send,
                  s(:const, nil, :HOSTS), :hostlist)),
              s(:ivasgn, :@hosts,
                s(:send,
                  s(:const, nil, :HOSTS), :hosts)))),
          s(:send, nil, :private),
          s(:def, :build,
            s(:args,
              s(:arg, :list)),
            s(:begin,
              s(:lvasgn, :acl,
                s(:send,
                  s(:const,
                    s(:const, nil, :ACL), :ACLList), :new)),
              s(:block,
                s(:send,
                  s(:lvar, :list), :each),
                s(:args,
                  s(:arg, :s)),
                s(:send,
                  s(:lvar, :acl), :add,
                  s(:lvar, :s))),
              s(:lvar, :acl))),
          s(:send, nil, :public),
          s(:def, :test_all_1,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send, nil, :build,
                  s(:array,
                    s(:str, "all")))),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each),
                s(:args,
                  s(:arg, :h)),
                s(:send, nil, :assert,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:lvar, :h)))))),
          s(:def, :test_all_2,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send, nil, :build,
                  s(:array,
                    s(:str, "localhost"),
                    s(:str, "127.0.0.0/8"),
                    s(:str, "yum.*"),
                    s(:str, "*")))),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each),
                s(:args,
                  s(:arg, :h)),
                s(:send, nil, :assert,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:lvar, :h)))))),
          s(:def, :test_1,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send, nil, :build,
                  s(:array,
                    s(:str, "192.0.0.1/255.0.0.255"),
                    s(:str, "yum.*.jp")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "yum")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "x68k")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "lc630"))), :!)))),
          s(:def, :test_2,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send, nil, :build,
                  s(:array,
                    s(:str, "*.linux.or.jp")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "yum"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :match,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "x68k")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :match,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "lc630"))), :!)))))),
      s(:class,
        s(:const, nil, :ACLTest),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:casgn, nil, :HOSTS,
            s(:send,
              s(:const, nil, :SampleHosts), :new)),
          s(:def, :setup,
            s(:args),
            s(:begin,
              s(:ivasgn, :@hostlist,
                s(:send,
                  s(:const, nil, :HOSTS), :hostlist)),
              s(:ivasgn, :@hosts,
                s(:send,
                  s(:const, nil, :HOSTS), :hosts)))),
          s(:def, :test_0,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:const, nil, :ACL), :new)),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each),
                s(:args,
                  s(:arg, :h)),
                s(:send, nil, :assert,
                  s(:send,
                    s(:lvar, :a), :allow_addr?,
                    s(:lvar, :h)))))),
          s(:def, :test_not_0,
            s(:args),
            s(:begin,
              s(:lvasgn, :a,
                s(:send,
                  s(:const, nil, :ACL), :new,
                  s(:array),
                  s(:const,
                    s(:const, nil, :ACL), :ALLOW_DENY))),
              s(:block,
                s(:send,
                  s(:ivar, :@hostlist), :each),
                s(:args,
                  s(:arg, :h)),
                s(:send, nil, :assert,
                  s(:send,
                    s(:send,
                      s(:lvar, :a), :allow_addr?,
                      s(:lvar, :h)), :!))))),
          s(:def, :test_1,
            s(:args),
            s(:begin,
              s(:lvasgn, :data,
                s(:array,
                  s(:str, "deny"),
                  s(:str, "all"),
                  s(:str, "allow"),
                  s(:str, "localhost"),
                  s(:str, "allow"),
                  s(:str, "x68k.*"))),
              s(:lvasgn, :a,
                s(:send,
                  s(:const, nil, :ACL), :new,
                  s(:lvar, :data))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :allow_addr?,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "x68k")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :allow_addr?,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "localhost")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :allow_addr?,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "lc630"))), :!)))),
          s(:def, :test_not_1,
            s(:args),
            s(:begin,
              s(:lvasgn, :data,
                s(:array,
                  s(:str, "deny"),
                  s(:str, "192.0.0.0/8"),
                  s(:str, "allow"),
                  s(:str, "localhost"),
                  s(:str, "allow"),
                  s(:str, "x68k.*"))),
              s(:lvasgn, :a,
                s(:send,
                  s(:const, nil, :ACL), :new,
                  s(:lvar, :data),
                  s(:const,
                    s(:const, nil, :ACL), :ALLOW_DENY))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :allow_addr?,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "x68k"))), :!)),
              s(:send, nil, :assert,
                s(:send,
                  s(:lvar, :a), :allow_addr?,
                  s(:send,
                    s(:ivar, :@hosts), :[],
                    s(:str, "localhost")))),
              s(:send, nil, :assert,
                s(:send,
                  s(:send,
                    s(:lvar, :a), :allow_addr?,
                    s(:send,
                      s(:ivar, :@hosts), :[],
                      s(:str, "lc630"))), :!)))))))))
