s(:begin,
  s(:send, nil, :require,
    s(:str, "fileutils")),
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "tmpdir")),
  s(:send, nil, :require_relative,
    s(:str, "fileasserts")),
  s(:class,
    s(:const, nil, :TestFileUtils),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase), nil),
  s(:module,
    s(:const,
      s(:const, nil, :TestFileUtils), :Clobber),
    s(:begin,
      s(:send, nil, :include,
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :FileAssertions)),
      s(:def, :my_rm_rf,
        s(:args,
          s(:arg, :path)),
        s(:if,
          s(:send,
            s(:const, nil, :File), :exist?,
            s(:str, "/bin/rm")),
          s(:send, nil, :system,
            s(:dstr,
              s(:str, "/bin/rm -rf \""),
              s(:begin,
                s(:lvar, :path)),
              s(:str, "\""))),
          s(:send,
            s(:const, nil, :FileUtils), :rm_rf,
            s(:lvar, :path)))),
      s(:casgn, nil, :SRC,
        s(:str, "data/src")),
      s(:casgn, nil, :COPY,
        s(:str, "data/copy")),
      s(:def, :setup,
        s(:args),
        s(:begin,
          s(:ivasgn, :@prevdir,
            s(:send,
              s(:const, nil, :Dir), :pwd)),
          s(:sclass,
            s(:begin,
              s(:ivasgn, :@fileutils_output,
                s(:str, ""))),
            s(:alias,
              s(:sym, :puts),
              s(:sym, :<<))),
          s(:lvasgn, :tmproot,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:const, nil, :Dir), :tmpdir)),
              s(:str, "/fileutils.rb."),
              s(:begin,
                s(:gvar, :$$)))),
          s(:if,
            s(:send,
              s(:const, nil, :File), :directory?,
              s(:lvar, :tmproot)), nil,
            s(:send,
              s(:const, nil, :Dir), :mkdir,
              s(:lvar, :tmproot))),
          s(:send,
            s(:const, nil, :Dir), :chdir,
            s(:lvar, :tmproot)),
          s(:send, nil, :my_rm_rf,
            s(:str, "data")),
          s(:send,
            s(:const, nil, :Dir), :mkdir,
            s(:str, "data")),
          s(:send, nil, :my_rm_rf,
            s(:str, "tmp")),
          s(:send,
            s(:const, nil, :Dir), :mkdir,
            s(:str, "tmp")),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:const, nil, :SRC),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :puts,
              s(:str, "dummy"))),
          s(:block,
            s(:send,
              s(:const, nil, :File), :open,
              s(:const, nil, :COPY),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :puts,
              s(:str, "dummy"))))),
      s(:def, :teardown,
        s(:args),
        s(:begin,
          s(:lvasgn, :tmproot,
            s(:send,
              s(:const, nil, :Dir), :pwd)),
          s(:send,
            s(:const, nil, :Dir), :chdir,
            s(:ivar, :@prevdir)),
          s(:send, nil, :my_rm_rf,
            s(:lvar, :tmproot)))),
      s(:def, :test_cp,
        s(:args),
        s(:begin,
          s(:send, nil, :cp,
            s(:const, nil, :SRC),
            s(:str, "tmp/cp")),
          s(:send, nil, :check,
            s(:str, "tmp/cp")))),
      s(:def, :test_mv,
        s(:args),
        s(:begin,
          s(:send, nil, :mv,
            s(:const, nil, :SRC),
            s(:str, "tmp/mv")),
          s(:send, nil, :check,
            s(:str, "tmp/mv")))),
      s(:def, :check,
        s(:args,
          s(:arg, :dest),
          s(:optarg, :message,
            s(:nil))),
        s(:begin,
          s(:send, nil, :assert_file_not_exist,
            s(:lvar, :dest),
            s(:lvar, :message)),
          s(:send, nil, :assert_file_exist,
            s(:const, nil, :SRC),
            s(:lvar, :message)),
          s(:send, nil, :assert_same_file,
            s(:const, nil, :SRC),
            s(:const, nil, :COPY),
            s(:lvar, :message)))),
      s(:def, :test_rm,
        s(:args),
        s(:begin,
          s(:send, nil, :rm,
            s(:const, nil, :SRC)),
          s(:send, nil, :assert_file_exist,
            s(:const, nil, :SRC)),
          s(:send, nil, :assert_same_file,
            s(:const, nil, :SRC),
            s(:const, nil, :COPY)))),
      s(:def, :test_rm_f,
        s(:args),
        s(:begin,
          s(:send, nil, :rm_f,
            s(:const, nil, :SRC)),
          s(:send, nil, :assert_file_exist,
            s(:const, nil, :SRC)),
          s(:send, nil, :assert_same_file,
            s(:const, nil, :SRC),
            s(:const, nil, :COPY)))),
      s(:def, :test_rm_rf,
        s(:args),
        s(:begin,
          s(:send, nil, :rm_rf,
            s(:const, nil, :SRC)),
          s(:send, nil, :assert_file_exist,
            s(:const, nil, :SRC)),
          s(:send, nil, :assert_same_file,
            s(:const, nil, :SRC),
            s(:const, nil, :COPY)))),
      s(:def, :test_mkdir,
        s(:args),
        s(:begin,
          s(:send, nil, :mkdir,
            s(:str, "dir")),
          s(:send, nil, :assert_file_not_exist,
            s(:str, "dir")))),
      s(:def, :test_mkdir_p,
        s(:args),
        s(:begin,
          s(:send, nil, :mkdir,
            s(:str, "dir/dir/dir")),
          s(:send, nil, :assert_file_not_exist,
            s(:str, "dir")))),
      s(:def, :test_copy_entry,
        s(:args),
        s(:begin,
          s(:send, nil, :copy_entry,
            s(:const, nil, :SRC),
            s(:str, "tmp/copy_entry")),
          s(:send, nil, :check,
            s(:str, "tmp/copy_entry"),
            s(:lvasgn, :bug4331,
              s(:str, "[ruby-dev:43129]"))))))))
