s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "etc")),
  s(:class,
    s(:const, nil, :TestEtc),
    s(:const,
      s(:const,
        s(:const, nil, :Test), :Unit), :TestCase),
    s(:begin,
      s(:def, :test_getlogin,
        s(:args),
        s(:begin,
          s(:lvasgn, :s,
            s(:send,
              s(:const, nil, :Etc), :getlogin)),
          s(:if,
            s(:send,
              s(:lvar, :s), :==,
              s(:nil)),
            s(:return), nil),
          s(:send, nil, :assert,
            s(:send,
              s(:lvar, :s), :is_a?,
              s(:const, nil, :String)),
            s(:str, "getlogin must return a String or nil")),
          s(:send, nil, :assert_predicate,
            s(:lvar, :s),
            s(:sym, :valid_encoding?),
            s(:str, "login name should be a valid string")))),
      s(:def, :test_passwd,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :passwd),
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:send, nil, :assert_instance_of,
                s(:const, nil, :String),
                s(:send,
                  s(:lvar, :s), :name)),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :passwd)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :String),
                  s(:send,
                    s(:lvar, :s), :passwd)), nil),
              s(:send, nil, :assert_kind_of,
                s(:const, nil, :Integer),
                s(:send,
                  s(:lvar, :s), :uid)),
              s(:send, nil, :assert_kind_of,
                s(:const, nil, :Integer),
                s(:send,
                  s(:lvar, :s), :gid)),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :gecos)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :String),
                  s(:send,
                    s(:lvar, :s), :gecos)), nil),
              s(:send, nil, :assert_instance_of,
                s(:const, nil, :String),
                s(:send,
                  s(:lvar, :s), :dir)),
              s(:send, nil, :assert_instance_of,
                s(:const, nil, :String),
                s(:send,
                  s(:lvar, :s), :shell)),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :change)),
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :Integer),
                  s(:send,
                    s(:lvar, :s), :change)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :quota)),
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :Integer),
                  s(:send,
                    s(:lvar, :s), :quota)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :age)),
                s(:send, nil, :assert,
                  s(:or,
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :age), :is_a?,
                      s(:const, nil, :Integer)),
                    s(:send,
                      s(:send,
                        s(:lvar, :s), :age), :is_a?,
                      s(:const, nil, :String)))), nil),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :uclass)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :String),
                  s(:send,
                    s(:lvar, :s), :uclass)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :comment)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :String),
                  s(:send,
                    s(:lvar, :s), :comment)), nil),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :expire)),
                s(:send, nil, :assert_kind_of,
                  s(:const, nil, :Integer),
                  s(:send,
                    s(:lvar, :s), :expire)), nil))),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :passwd),
            s(:args),
            s(:begin,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :RuntimeError)),
                s(:args),
                s(:block,
                  s(:send,
                    s(:const, nil, :Etc), :passwd),
                  s(:args), nil)),
              s(:break))))),
      s(:def, :test_getpwuid,
        s(:args),
        s(:begin,
          s(:lvasgn, :passwd,
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args),
              s(:array))),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :passwd),
            s(:args,
              s(:arg, :s)),
            s(:op_asgn,
              s(:send,
                s(:lvar, :passwd), :[],
                s(:send,
                  s(:lvar, :s), :uid)), :|,
              s(:array,
                s(:lvar, :s)))),
          s(:block,
            s(:send,
              s(:lvar, :passwd), :each_pair),
            s(:args,
              s(:arg, :uid),
              s(:arg, :s)),
            s(:send, nil, :assert_include,
              s(:lvar, :s),
              s(:send,
                s(:const, nil, :Etc), :getpwuid,
                s(:lvar, :uid)))),
          s(:lvasgn, :s,
            s(:send,
              s(:lvar, :passwd), :[],
              s(:send,
                s(:const, nil, :Process), :euid))),
          s(:if,
            s(:send,
              s(:lvar, :s), :empty?), nil,
            s(:send, nil, :assert_include,
              s(:lvar, :s),
              s(:send,
                s(:const, nil, :Etc), :getpwuid))))),
      s(:def, :test_getpwnam,
        s(:args),
        s(:begin,
          s(:lvasgn, :passwd,
            s(:hash)),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :passwd),
            s(:args,
              s(:arg, :s)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\A\\+"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :s), :name)), nil,
              s(:or_asgn,
                s(:send,
                  s(:lvar, :passwd), :[],
                  s(:send,
                    s(:lvar, :s), :name)),
                s(:lvar, :s)))),
          s(:block,
            s(:send,
              s(:lvar, :passwd), :each_value),
            s(:args,
              s(:arg, :s)),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:const, nil, :Etc), :getpwnam,
                s(:send,
                  s(:lvar, :s), :name)))))),
      s(:def, :test_passwd_with_low_level_api,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :passwd),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :s))),
          s(:lvasgn, :b,
            s(:array)),
          s(:send,
            s(:const, nil, :Etc), :setpwent),
          s(:while,
            s(:lvasgn, :s,
              s(:send,
                s(:const, nil, :Etc), :getpwent)),
            s(:send,
              s(:lvar, :b), :<<,
              s(:lvar, :s))),
          s(:send,
            s(:const, nil, :Etc), :endpwent),
          s(:send, nil, :assert_equal,
            s(:lvar, :a),
            s(:lvar, :b)))),
      s(:def, :test_group,
        s(:args),
        s(:begin,
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :group),
            s(:args,
              s(:arg, :s)),
            s(:begin,
              s(:send, nil, :assert_instance_of,
                s(:const, nil, :String),
                s(:send,
                  s(:lvar, :s), :name)),
              s(:if,
                s(:send,
                  s(:lvar, :s), :respond_to?,
                  s(:sym, :passwd)),
                s(:send, nil, :assert_instance_of,
                  s(:const, nil, :String),
                  s(:send,
                    s(:lvar, :s), :passwd)), nil),
              s(:send, nil, :assert_kind_of,
                s(:const, nil, :Integer),
                s(:send,
                  s(:lvar, :s), :gid)))),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :group),
            s(:args),
            s(:begin,
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :RuntimeError)),
                s(:args),
                s(:block,
                  s(:send,
                    s(:const, nil, :Etc), :group),
                  s(:args), nil)),
              s(:break))))),
      s(:def, :test_getgrgid,
        s(:args),
        s(:begin,
          s(:lvasgn, :groups,
            s(:block,
              s(:send,
                s(:const, nil, :Hash), :new),
              s(:args),
              s(:array))),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :group),
            s(:args,
              s(:arg, :s)),
            s(:op_asgn,
              s(:send,
                s(:lvar, :groups), :[],
                s(:send,
                  s(:lvar, :s), :gid)), :|,
              s(:array,
                s(:array,
                  s(:send,
                    s(:lvar, :s), :name),
                  s(:send,
                    s(:lvar, :s), :gid))))),
          s(:block,
            s(:send,
              s(:lvar, :groups), :each_pair),
            s(:args,
              s(:arg, :gid),
              s(:arg, :s)),
            s(:begin,
              s(:lvasgn, :g,
                s(:send,
                  s(:const, nil, :Etc), :getgrgid,
                  s(:lvar, :gid))),
              s(:send, nil, :assert_include,
                s(:lvar, :s),
                s(:array,
                  s(:send,
                    s(:lvar, :g), :name),
                  s(:send,
                    s(:lvar, :g), :gid))))),
          s(:lvasgn, :s,
            s(:send,
              s(:lvar, :groups), :[],
              s(:send,
                s(:const, nil, :Process), :egid))),
          s(:if,
            s(:send,
              s(:lvar, :s), :empty?), nil,
            s(:begin,
              s(:lvasgn, :g,
                s(:send,
                  s(:const, nil, :Etc), :getgrgid)),
              s(:send, nil, :assert_include,
                s(:lvar, :s),
                s(:array,
                  s(:send,
                    s(:lvar, :g), :name),
                  s(:send,
                    s(:lvar, :g), :gid))))))),
      s(:def, :test_getgrnam,
        s(:args),
        s(:begin,
          s(:lvasgn, :groups,
            s(:hash)),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :group),
            s(:args,
              s(:arg, :s)),
            s(:if,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "\\A\\+"),
                  s(:regopt)),
                s(:send,
                  s(:lvar, :s), :name)), nil,
              s(:or_asgn,
                s(:send,
                  s(:lvar, :groups), :[],
                  s(:send,
                    s(:lvar, :s), :name)),
                s(:send,
                  s(:lvar, :s), :gid)))),
          s(:block,
            s(:send,
              s(:lvar, :groups), :each_pair),
            s(:args,
              s(:arg, :n),
              s(:arg, :s)),
            s(:send, nil, :assert_equal,
              s(:lvar, :s),
              s(:send,
                s(:send,
                  s(:const, nil, :Etc), :getgrnam,
                  s(:lvar, :n)), :gid))))),
      s(:def, :test_group_with_low_level_api,
        s(:args),
        s(:begin,
          s(:lvasgn, :a,
            s(:array)),
          s(:block,
            s(:send,
              s(:const, nil, :Etc), :group),
            s(:args,
              s(:arg, :s)),
            s(:send,
              s(:lvar, :a), :<<,
              s(:lvar, :s))),
          s(:lvasgn, :b,
            s(:array)),
          s(:send,
            s(:const, nil, :Etc), :setgrent),
          s(:while,
            s(:lvasgn, :s,
              s(:send,
                s(:const, nil, :Etc), :getgrent)),
            s(:send,
              s(:lvar, :b), :<<,
              s(:lvar, :s))),
          s(:send,
            s(:const, nil, :Etc), :endgrent),
          s(:send, nil, :assert_equal,
            s(:lvar, :a),
            s(:lvar, :b)))),
      s(:def, :test_uname,
        s(:args),
        s(:begin,
          s(:kwbegin,
            s(:rescue,
              s(:lvasgn, :uname,
                s(:send,
                  s(:const, nil, :Etc), :uname)),
              s(:resbody,
                s(:array,
                  s(:const, nil, :NotImplementedError)), nil,
                s(:return)), nil)),
          s(:send, nil, :assert_kind_of,
            s(:const, nil, :Hash),
            s(:lvar, :uname)),
          s(:block,
            s(:send,
              s(:array,
                s(:sym, :sysname),
                s(:sym, :nodename),
                s(:sym, :release),
                s(:sym, :version),
                s(:sym, :machine)), :each),
            s(:args,
              s(:arg, :sym)),
            s(:begin,
              s(:send, nil, :assert_operator,
                s(:lvar, :uname),
                s(:sym, :has_key?),
                s(:lvar, :sym)),
              s(:send, nil, :assert_kind_of,
                s(:const, nil, :String),
                s(:send,
                  s(:lvar, :uname), :[],
                  s(:lvar, :sym))))))),
      s(:if,
        s(:defined?,
          s(:const,
            s(:const, nil, :Etc), :SC_CLK_TCK)),
        s(:def, :test_sysconf,
          s(:args),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const, nil, :Etc), :sysconf),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NotImplementedError)), nil,
                  s(:return)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :ArgumentError)), nil, nil), nil)),
            s(:send, nil, :assert_kind_of,
              s(:const, nil, :Integer),
              s(:send,
                s(:const, nil, :Etc), :sysconf,
                s(:const,
                  s(:const, nil, :Etc), :SC_CLK_TCK))))), nil),
      s(:if,
        s(:defined?,
          s(:const,
            s(:const, nil, :Etc), :CS_PATH)),
        s(:def, :test_confstr,
          s(:args),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const, nil, :Etc), :confstr),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NotImplementedError)), nil,
                  s(:return)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :ArgumentError)), nil, nil), nil)),
            s(:send, nil, :assert_kind_of,
              s(:const, nil, :String),
              s(:send,
                s(:const, nil, :Etc), :confstr,
                s(:const,
                  s(:const, nil, :Etc), :CS_PATH))))), nil),
      s(:if,
        s(:defined?,
          s(:const,
            s(:const, nil, :Etc), :PC_PIPE_BUF)),
        s(:def, :test_pathconf,
          s(:args),
          s(:begin,
            s(:kwbegin,
              s(:rescue,
                s(:send,
                  s(:const, nil, :Etc), :confstr),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :NotImplementedError)), nil,
                  s(:return)),
                s(:resbody,
                  s(:array,
                    s(:const, nil, :ArgumentError)), nil, nil), nil)),
            s(:block,
              s(:send,
                s(:const, nil, :IO), :pipe),
              s(:args,
                s(:arg, :r),
                s(:arg, :w)),
              s(:begin,
                s(:lvasgn, :val,
                  s(:send,
                    s(:lvar, :w), :pathconf,
                    s(:const,
                      s(:const, nil, :Etc), :PC_PIPE_BUF))),
                s(:send, nil, :assert,
                  s(:or,
                    s(:send,
                      s(:lvar, :val), :nil?),
                    s(:send,
                      s(:lvar, :val), :kind_of?,
                      s(:const, nil, :Integer)))))))), nil),
      s(:def, :test_nprocessors,
        s(:args),
        s(:begin,
          s(:lvasgn, :n,
            s(:send,
              s(:const, nil, :Etc), :nprocessors)),
          s(:send, nil, :assert_operator,
            s(:int, 1),
            s(:sym, :<=),
            s(:lvar, :n)))))))
