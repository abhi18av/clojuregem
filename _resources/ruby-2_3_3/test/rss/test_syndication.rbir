s(:begin,
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:send, nil, :require,
    s(:str, "rss/syndication")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestSyndication),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@prefix,
              s(:str, "sy")),
            s(:ivasgn, :@uri,
              s(:str, "http://purl.org/rss/1.0/modules/syndication/")),
            s(:ivasgn, :@parents,
              s(:array,
                s(:str, "channel"))),
            s(:lvasgn, :t,
              s(:send,
                s(:const, nil, :Time), :iso8601,
                s(:str, "2000-01-01T12:00:05+00:00"))),
            s(:sclass,
              s(:lvar, :t),
              s(:send, nil, :alias_method,
                s(:sym, :to_s),
                s(:sym, :iso8601))),
            s(:ivasgn, :@elems,
              s(:hash,
                s(:pair,
                  s(:sym, :updatePeriod),
                  s(:str, "hourly")),
                s(:pair,
                  s(:sym, :updateFrequency),
                  s(:str, "2")),
                s(:pair,
                  s(:sym, :updateBase),
                  s(:lvar, :t)))),
            s(:ivasgn, :@sy_nodes,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@elems), :collect),
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :value)),
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ">"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :CGI), :escapeHTML,
                        s(:send,
                          s(:lvar, :value), :to_s))),
                    s(:str, "</"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ">"))), :join,
                s(:str, "\n"))),
            s(:ivasgn, :@rss_source,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel,
                      s(:ivar, :@sy_nodes))),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n")),
                s(:hash,
                  s(:pair,
                    s(:ivar, :@prefix),
                    s(:ivar, :@uri))))),
            s(:ivasgn, :@rss,
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss_source))))),
        s(:def, :test_parser,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_nothing_raised),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss_source))),
            s(:block,
              s(:send,
                s(:ivar, :@elems), :each),
              s(:args,
                s(:arg, :tag),
                s(:arg, :value)),
              s(:block,
                s(:send, nil, :assert_too_much_tag,
                  s(:send,
                    s(:lvar, :tag), :to_s),
                  s(:str, "channel")),
                s(:args),
                s(:send,
                  s(:const, nil, :Parser), :parse,
                  s(:send, nil, :make_RDF,
                    s(:dstr,
                      s(:begin,
                        s(:send, nil, :make_channel,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:send,
                                        s(:send,
                                          s(:send,
                                            s(:send,
                                              s(:send,
                                                s(:send,
                                                  s(:str, "<"), :+,
                                                  s(:ivar, :@prefix)), :+,
                                                s(:str, ":")), :+,
                                              s(:send,
                                                s(:lvar, :tag), :to_s)), :+,
                                            s(:str, ">")), :+,
                                          s(:send,
                                            s(:const, nil, :CGI), :escapeHTML,
                                            s(:send,
                                              s(:lvar, :value), :to_s))), :+,
                                        s(:str, "</")), :+,
                                      s(:ivar, :@prefix)), :+,
                                    s(:str, ":")), :+,
                                  s(:send,
                                    s(:lvar, :tag), :to_s)), :+,
                                s(:str, ">"))), :*,
                            s(:int, 2)))),
                      s(:str, "\n"),
                      s(:begin,
                        s(:send, nil, :make_item)),
                      s(:str, "\n")),
                    s(:hash,
                      s(:pair,
                        s(:ivar, :@prefix),
                        s(:ivar, :@uri))))))))),
        s(:def, :test_accessor,
          s(:args),
          s(:begin,
            s(:lvasgn, :t,
              s(:send,
                s(:const, nil, :Time), :iso8601,
                s(:str, "2003-01-01T12:00:23+09:00"))),
            s(:sclass,
              s(:lvar, :t),
              s(:send, nil, :alias_method,
                s(:sym, :to_s),
                s(:sym, :iso8601))),
            s(:lvasgn, :new_value,
              s(:hash,
                s(:pair,
                  s(:sym, :updatePeriod),
                  s(:str, "daily")),
                s(:pair,
                  s(:sym, :updateFrequency),
                  s(:str, "11")),
                s(:pair,
                  s(:sym, :updateBase),
                  s(:lvar, :t)))),
            s(:block,
              s(:send,
                s(:ivar, :@elems), :each),
              s(:args,
                s(:arg, :name),
                s(:arg, :value)),
              s(:begin,
                s(:if,
                  s(:send,
                    s(:lvar, :name), :==,
                    s(:sym, :updateFrequency)),
                  s(:lvasgn, :value,
                    s(:send,
                      s(:lvar, :value), :to_i)), nil),
                s(:block,
                  s(:send,
                    s(:ivar, :@parents), :each),
                  s(:args,
                    s(:arg, :parent)),
                  s(:begin,
                    s(:send, nil, :assert_equal,
                      s(:lvar, :value),
                      s(:send,
                        s(:send,
                          s(:ivar, :@rss), :__send__,
                          s(:lvar, :parent)), :__send__,
                        s(:dstr,
                          s(:str, "sy_"),
                          s(:begin,
                            s(:lvar, :name))))),
                    s(:send,
                      s(:send,
                        s(:ivar, :@rss), :__send__,
                        s(:lvar, :parent)), :__send__,
                      s(:dstr,
                        s(:str, "sy_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "=")),
                      s(:send,
                        s(:lvar, :new_value), :[],
                        s(:lvar, :name))),
                    s(:lvasgn, :new_val,
                      s(:send,
                        s(:lvar, :new_value), :[],
                        s(:lvar, :name))),
                    s(:if,
                      s(:send,
                        s(:lvar, :name), :==,
                        s(:sym, :updateFrequency)),
                      s(:lvasgn, :new_val,
                        s(:send,
                          s(:lvar, :new_val), :to_i)), nil),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :new_val),
                      s(:send,
                        s(:send,
                          s(:ivar, :@rss), :__send__,
                          s(:lvar, :parent)), :__send__,
                        s(:dstr,
                          s(:str, "sy_"),
                          s(:begin,
                            s(:lvar, :name))))))))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "hourly"),
                  s(:str, "daily"),
                  s(:str, "weekly"),
                  s(:str, "monthly"),
                  s(:str, "yearly")), :each),
              s(:args,
                s(:arg, :x)),
              s(:block,
                s(:send,
                  s(:ivar, :@parents), :each),
                s(:args,
                  s(:arg, :parent)),
                s(:block,
                  s(:send, nil, :assert_nothing_raised),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rss), :__send__,
                      s(:lvar, :parent)), :sy_updatePeriod=,
                    s(:lvar, :x))))),
            s(:block,
              s(:send,
                s(:array,
                  s(:str, "-2"),
                  s(:str, "0.3"),
                  s(:str, "-0.4")), :each),
              s(:args,
                s(:arg, :x)),
              s(:block,
                s(:send,
                  s(:ivar, :@parents), :each),
                s(:args,
                  s(:arg, :parent)),
                s(:block,
                  s(:send, nil, :assert_not_available_value,
                    s(:str, "sy:updateBase"),
                    s(:lvar, :x)),
                  s(:args),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rss), :__send__,
                      s(:lvar, :parent)), :sy_updateBase=,
                    s(:lvar, :x))))))),
        s(:def, :test_to_s,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:ivar, :@elems), :each),
              s(:args,
                s(:arg, :name),
                s(:arg, :value)),
              s(:begin,
                s(:lvasgn, :excepted,
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ">"),
                    s(:begin,
                      s(:lvar, :value)),
                    s(:str, "</"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ">"))),
                s(:block,
                  s(:send,
                    s(:ivar, :@parents), :each),
                  s(:args,
                    s(:arg, :parent)),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :excepted),
                    s(:send,
                      s(:send,
                        s(:ivar, :@rss), :__send__,
                        s(:lvar, :parent)), :__send__,
                      s(:dstr,
                        s(:str, "sy_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "_element"))))))),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :REXML), :Document), :new,
                    s(:ivar, :@rss_source)), :root), :each_element),
              s(:args,
                s(:arg, :parent)),
              s(:if,
                s(:send,
                  s(:ivar, :@parents), :include?,
                  s(:send,
                    s(:lvar, :parent), :name)),
                s(:block,
                  s(:send,
                    s(:lvar, :parent), :each_element),
                  s(:args,
                    s(:arg, :elem)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :elem), :namespace), :==,
                      s(:ivar, :@uri)),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:lvar, :elem), :text),
                      s(:send,
                        s(:send,
                          s(:ivar, :@elems), :[],
                          s(:send,
                            s(:send,
                              s(:lvar, :elem), :name), :intern)), :to_s)), nil)), nil))))))))
