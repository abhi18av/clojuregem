s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/maker")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestMakerAtomEntry),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_supported?,
          s(:args),
          s(:begin,
            s(:send, nil, :assert,
              s(:send,
                s(:const,
                  s(:const, nil, :RSS), :Maker), :supported?,
                s(:str, "atom:entry"))),
            s(:send, nil, :assert,
              s(:send,
                s(:const,
                  s(:const, nil, :RSS), :Maker), :supported?,
                s(:str, "atom1.0:entry"))),
            s(:send, nil, :assert,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :RSS), :Maker), :supported?,
                  s(:str, "atom2.0:entry")), :!)))),
        s(:def, :test_find_class,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :RSS), :Maker), :Atom), :Entry),
              s(:send,
                s(:const,
                  s(:const, nil, :RSS), :Maker), :[],
                s(:str, "atom:entry"))),
            s(:send, nil, :assert_equal,
              s(:const,
                s(:const,
                  s(:const,
                    s(:const, nil, :RSS), :Maker), :Atom), :Entry),
              s(:send,
                s(:const,
                  s(:const, nil, :RSS), :Maker), :[],
                s(:str, "atom1.0:entry"))))),
        s(:def, :test_root_element,
          s(:args),
          s(:begin,
            s(:lvasgn, :entry,
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel_atom,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item_atom,
                    s(:lvar, :maker))))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "atom"),
                s(:str, "1.0"),
                s(:str, "entry")),
              s(:send,
                s(:lvar, :entry), :feed_info)),
            s(:lvasgn, :entry,
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel_atom,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item_atom,
                    s(:lvar, :maker)),
                  s(:send,
                    s(:lvar, :maker), :encoding=,
                    s(:str, "EUC-JP"))))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "atom"),
                s(:str, "1.0"),
                s(:str, "entry")),
              s(:send,
                s(:lvar, :entry), :feed_info)),
            s(:send, nil, :assert_equal,
              s(:str, "EUC-JP"),
              s(:send,
                s(:lvar, :entry), :encoding)),
            s(:lvasgn, :entry,
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel_atom,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item_atom,
                    s(:lvar, :maker)),
                  s(:send,
                    s(:lvar, :maker), :standalone=,
                    s(:str, "yes"))))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "atom"),
                s(:str, "1.0"),
                s(:str, "entry")),
              s(:send,
                s(:lvar, :entry), :feed_info)),
            s(:send, nil, :assert_equal,
              s(:str, "yes"),
              s(:send,
                s(:lvar, :entry), :standalone)),
            s(:lvasgn, :entry,
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel_atom,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item_atom,
                    s(:lvar, :maker)),
                  s(:send,
                    s(:lvar, :maker), :encoding=,
                    s(:str, "EUC-JP")),
                  s(:send,
                    s(:lvar, :maker), :standalone=,
                    s(:str, "yes"))))),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:str, "atom"),
                s(:str, "1.0"),
                s(:str, "entry")),
              s(:send,
                s(:lvar, :entry), :feed_info)),
            s(:send, nil, :assert_equal,
              s(:str, "EUC-JP"),
              s(:send,
                s(:lvar, :entry), :encoding)),
            s(:send, nil, :assert_equal,
              s(:str, "yes"),
              s(:send,
                s(:lvar, :entry), :standalone)))),
        s(:def, :test_invalid_feed,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_not_set_error,
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "id"),
                  s(:str, "title"),
                  s(:str, "author"),
                  s(:str, "updated"))),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)), nil)),
            s(:block,
              s(:send, nil, :assert_not_set_error,
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "id"),
                  s(:str, "title"),
                  s(:str, "updated"))),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:send,
                  s(:send,
                    s(:lvar, :maker), :channel), :author=,
                  s(:str, "foo")))),
            s(:block,
              s(:send, nil, :assert_not_set_error,
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "title"),
                  s(:str, "updated"))),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :author=,
                    s(:str, "foo")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :id=,
                    s(:str, "http://example.com"))))),
            s(:block,
              s(:send, nil, :assert_not_set_error,
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "updated"))),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :author=,
                    s(:str, "foo")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :id=,
                    s(:str, "http://example.com")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :title=,
                    s(:str, "Atom Feed"))))),
            s(:block,
              s(:send, nil, :assert_not_set_error,
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "author"))),
              s(:args),
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :id=,
                    s(:str, "http://example.com")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :title=,
                    s(:str, "Atom Feed")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :updated=,
                    s(:send,
                      s(:const, nil, :Time), :now))))),
            s(:lvasgn, :entry,
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :author=,
                    s(:str, "Foo")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :id=,
                    s(:str, "http://example.com")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :title=,
                    s(:str, "Atom Feed")),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :updated=,
                    s(:send,
                      s(:const, nil, :Time), :now))))),
            s(:send, nil, :assert_not_nil,
              s(:lvar, :entry)))),
        s(:def, :test_author,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_persons,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "authors")),
                s(:array,
                  s(:str, "authors")),
                s(:str, "maker.channel.author")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_persons,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "authors")),
                s(:array,
                  s(:str, "authors")),
                s(:str, "maker.item.author"),
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "author"))),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :authors), :clear),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :maker), :items), :first), :authors), :clear))),
            s(:block,
              s(:send, nil, :assert_maker_atom_persons,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "authors")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "authors")),
                s(:str, "maker.item.source.author")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_category,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_categories,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "categories")),
                s(:array,
                  s(:str, "categories")),
                s(:str, "maker.channel.category")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_categories,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "categories")),
                s(:array,
                  s(:str, "categories")),
                s(:str, "maker.item.category")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_categories,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "categories")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "categories")),
                s(:str, "maker.item.source.category")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_content,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_content,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "content")),
              s(:array,
                s(:str, "content")),
              s(:str, "maker.item.content")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_contributor,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_persons,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "contributors")),
                s(:array,
                  s(:str, "contributors")),
                s(:str, "maker.channel.contributor")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_persons,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "contributors")),
                s(:array,
                  s(:str, "contributors")),
                s(:str, "maker.item.contributor")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_persons,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "contributors")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "contributors")),
                s(:str, "maker.item.source.contributor")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_link,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_links,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "links")),
                s(:array,
                  s(:str, "links")),
                s(:str, "maker.channel.link")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :links), :clear),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :maker), :items), :first), :links), :clear))),
            s(:block,
              s(:send, nil, :assert_maker_atom_links,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "links")),
                s(:array,
                  s(:str, "links")),
                s(:str, "maker.item.link")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :links), :clear),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :maker), :items), :first), :links), :clear))),
            s(:block,
              s(:send, nil, :assert_maker_atom_links,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "links")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "links")),
                s(:str, "maker.item.source.link"),
                s(:true)),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_published,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_date_construct,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "published")),
              s(:array,
                s(:str, "published"))),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_rights,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_text_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "copyright")),
                s(:array,
                  s(:str, "rights"))),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_text_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "rights")),
                s(:array,
                  s(:str, "rights")),
                s(:nil),
                s(:nil),
                s(:str, "maker.item.rights")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_text_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "rights")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "rights")),
                s(:nil),
                s(:nil),
                s(:str, "maker.item.source.rights")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_source_generator,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_generator,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "source"),
                s(:str, "generator")),
              s(:array,
                s(:str, "source"),
                s(:str, "generator")),
              s(:str, "maker.item.source.generator")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_source_icon,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_icon,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "source"),
                s(:str, "icon")),
              s(:array,
                s(:str, "source"),
                s(:str, "icon")),
              s(:nil),
              s(:str, "maker.item.source.icon")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_source_id,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_id,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "source")),
              s(:array,
                s(:str, "source")),
              s(:str, "maker.item.source")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_source_logo,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_logo,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "source"),
                s(:str, "logo")),
              s(:array,
                s(:str, "source"),
                s(:str, "logo")),
              s(:nil),
              s(:str, "maker.item.source.logo")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_source_subtitle,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_text_construct,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "source"),
                s(:str, "subtitle")),
              s(:array,
                s(:str, "source"),
                s(:str, "subtitle")),
              s(:nil),
              s(:nil),
              s(:str, "maker.item.source.subtitle")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_summary,
          s(:args),
          s(:block,
            s(:send, nil, :assert_maker_atom_text_construct,
              s(:str, "entry"),
              s(:array,
                s(:str, "items"),
                s(:str, "first"),
                s(:str, "description")),
              s(:array,
                s(:str, "summary")),
              s(:nil),
              s(:nil),
              s(:str, "maker.item.description")),
            s(:args,
              s(:arg, :maker)),
            s(:begin,
              s(:send, nil, :setup_dummy_channel_atom,
                s(:lvar, :maker)),
              s(:send, nil, :setup_dummy_item_atom,
                s(:lvar, :maker))))),
        s(:def, :test_title,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_text_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "title")),
                s(:array,
                  s(:str, "title")),
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "title")),
                s(:str, "maker.channel.title")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:lvar, :maker), :channel), :title=,
                  s(:nil)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :items), :first), :title=,
                  s(:nil)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_text_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "title")),
                s(:array,
                  s(:str, "title")),
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "title")),
                s(:str, "maker.item.title")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:lvar, :maker), :channel), :title=,
                  s(:nil)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :items), :first), :title=,
                  s(:nil)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_text_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "title")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "title")),
                s(:nil),
                s(:nil),
                s(:str, "maker.item.source.title")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_updated,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_maker_atom_date_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "channel"),
                  s(:str, "updated")),
                s(:array,
                  s(:str, "updated")),
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "updated"))),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:lvar, :maker), :channel), :updated=,
                  s(:nil)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :items), :first), :updated=,
                  s(:nil)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_date_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "updated")),
                s(:array,
                  s(:str, "updated")),
                s(:str, "maker.item"),
                s(:array,
                  s(:str, "updated"))),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)),
                s(:send,
                  s(:send,
                    s(:lvar, :maker), :channel), :updated=,
                  s(:nil)),
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :items), :first), :updated=,
                  s(:nil)))),
            s(:block,
              s(:send, nil, :assert_maker_atom_date_construct,
                s(:str, "entry"),
                s(:array,
                  s(:str, "items"),
                  s(:str, "first"),
                  s(:str, "source"),
                  s(:str, "updated")),
                s(:array,
                  s(:str, "source"),
                  s(:str, "updated"))),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel_atom,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item_atom,
                  s(:lvar, :maker)))))),
        s(:def, :test_date,
          s(:args),
          s(:begin,
            s(:lvasgn, :date,
              s(:send,
                s(:const, nil, :Time), :parse,
                s(:str, "2004/11/1 10:10"))),
            s(:lvasgn, :feed,
              s(:block,
                s(:send,
                  s(:const, nil, :Maker), :make,
                  s(:str, "atom:entry")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel_atom,
                    s(:lvar, :maker)),
                  s(:send,
                    s(:send,
                      s(:lvar, :maker), :channel), :date=,
                    s(:nil)),
                  s(:block,
                    s(:send,
                      s(:send,
                        s(:lvar, :maker), :items), :new_item),
                    s(:args,
                      s(:arg, :item)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :item), :link=,
                        s(:str, "http://example.com/article.html")),
                      s(:send,
                        s(:lvar, :item), :title=,
                        s(:str, "Sample Article")),
                      s(:send,
                        s(:lvar, :item), :date=,
                        s(:lvar, :date))))))),
            s(:send, nil, :assert_equal,
              s(:lvar, :date),
              s(:send,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:lvar, :feed), :items), :[],
                    s(:int, 0)), :updated), :content)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:lvar, :date)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :feed), :items), :[],
                      s(:int, 0)), :dc_dates), :collect),
                s(:args,
                  s(:arg, :_date)),
                s(:send,
                  s(:lvar, :_date), :value)))))))))
