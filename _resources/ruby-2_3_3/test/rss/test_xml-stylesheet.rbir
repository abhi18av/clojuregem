s(:begin,
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:send, nil, :require,
    s(:str, "rss/xml-stylesheet")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestXMLStyleSheet),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_accessor,
          s(:args),
          s(:block,
            s(:send,
              s(:array,
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.xsl")),
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/xsl"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :media),
                    s(:str, "print")),
                  s(:pair,
                    s(:sym, :title),
                    s(:str, "FOO"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :charset),
                    s(:str, "UTF-8")),
                  s(:pair,
                    s(:sym, :alternate),
                    s(:str, "yes")))), :each),
            s(:args,
              s(:arg, :attrs)),
            s(:send, nil, :assert_xml_stylesheet_attrs,
              s(:lvar, :attrs),
              s(:send,
                s(:const, nil, :XMLStyleSheet), :new,
                s(:lvar, :attrs))))),
        s(:def, :test_to_s,
          s(:args),
          s(:block,
            s(:send,
              s(:array,
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.xsl")),
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/xsl"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/xsl"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.xsl")),
                  s(:pair,
                    s(:sym, :guess_type),
                    s(:str, "text/xsl"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.css")),
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/css"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.css")),
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/xsl")),
                  s(:pair,
                    s(:sym, :guess_type),
                    s(:str, "text/css"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.xsl")),
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/xsl")),
                  s(:pair,
                    s(:sym, :title),
                    s(:str, "sample")),
                  s(:pair,
                    s(:sym, :media),
                    s(:str, "printer")),
                  s(:pair,
                    s(:sym, :charset),
                    s(:str, "UTF-8")),
                  s(:pair,
                    s(:sym, :alternate),
                    s(:str, "yes"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :href),
                    s(:str, "a.css")),
                  s(:pair,
                    s(:sym, :guess_type),
                    s(:str, "text/css")),
                  s(:pair,
                    s(:sym, :alternate),
                    s(:str, "no"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :type),
                    s(:str, "text/xsl")),
                  s(:pair,
                    s(:sym, :title),
                    s(:str, "sample")),
                  s(:pair,
                    s(:sym, :media),
                    s(:str, "printer")),
                  s(:pair,
                    s(:sym, :charset),
                    s(:str, "UTF-8")),
                  s(:pair,
                    s(:sym, :alternate),
                    s(:str, "yes")))), :each),
            s(:args,
              s(:arg, :attrs)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :target),
                  s(:lvasgn, :contents)),
                s(:send, nil, :parse_pi,
                  s(:send,
                    s(:send,
                      s(:const, nil, :XMLStyleSheet), :new,
                      s(:lvar, :attrs)), :to_s))),
              s(:send, nil, :assert_xml_stylesheet,
                s(:lvar, :target),
                s(:lvar, :attrs),
                s(:send,
                  s(:const, nil, :XMLStyleSheet), :new,
                  s(:lvar, :contents)))))),
        s(:def, :test_bad_alternate,
          s(:args),
          s(:block,
            s(:send,
              s(:array,
                s(:str, "a"),
                s(:str, "___"),
                s(:str, "???"),
                s(:str, "BAD_ALTERNATE")), :each),
            s(:args,
              s(:arg, :value)),
            s(:begin,
              s(:lvasgn, :xss,
                s(:send,
                  s(:const, nil, :XMLStyleSheet), :new)),
              s(:block,
                s(:send, nil, :assert_raise,
                  s(:const, nil, :NotAvailableValueError)),
                s(:args),
                s(:send,
                  s(:lvar, :xss), :alternate=,
                  s(:lvar, :value))),
              s(:send,
                s(:lvar, :xss), :do_validate=,
                s(:false)),
              s(:block,
                s(:send, nil, :assert_nothing_raised),
                s(:args),
                s(:send,
                  s(:lvar, :xss), :alternate=,
                  s(:lvar, :value))),
              s(:send, nil, :assert_nil,
                s(:send,
                  s(:lvar, :xss), :alternate))))),
        s(:def, :test_parse,
          s(:args),
          s(:block,
            s(:send,
              s(:array,
                s(:array,
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.xsl")),
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/xsl")))),
                s(:array,
                  s(:hash,
                    s(:pair,
                      s(:sym, :media),
                      s(:str, "print")),
                    s(:pair,
                      s(:sym, :title),
                      s(:str, "FOO")))),
                s(:array,
                  s(:hash,
                    s(:pair,
                      s(:sym, :charset),
                      s(:str, "UTF-8")),
                    s(:pair,
                      s(:sym, :alternate),
                      s(:str, "yes")))),
                s(:array,
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.xsl")),
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/xsl"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/xsl"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.xsl")),
                    s(:pair,
                      s(:sym, :guess_type),
                      s(:str, "text/xsl"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.css")),
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/css"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.css")),
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/xsl")),
                    s(:pair,
                      s(:sym, :guess_type),
                      s(:str, "text/css"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.xsl")),
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/xsl")),
                    s(:pair,
                      s(:sym, :title),
                      s(:str, "sample")),
                    s(:pair,
                      s(:sym, :media),
                      s(:str, "printer")),
                    s(:pair,
                      s(:sym, :charset),
                      s(:str, "UTF-8")),
                    s(:pair,
                      s(:sym, :alternate),
                      s(:str, "yes"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :href),
                      s(:str, "a.css")),
                    s(:pair,
                      s(:sym, :guess_type),
                      s(:str, "text/css")),
                    s(:pair,
                      s(:sym, :alternate),
                      s(:str, "no"))),
                  s(:hash,
                    s(:pair,
                      s(:sym, :type),
                      s(:str, "text/xsl")),
                    s(:pair,
                      s(:sym, :title),
                      s(:str, "sample")),
                    s(:pair,
                      s(:sym, :media),
                      s(:str, "printer")),
                    s(:pair,
                      s(:sym, :charset),
                      s(:str, "UTF-8")),
                    s(:pair,
                      s(:sym, :alternate),
                      s(:str, "yes"))))), :each),
            s(:args,
              s(:arg, :xsss)),
            s(:begin,
              s(:lvasgn, :doc,
                s(:send,
                  s(:const,
                    s(:const, nil, :REXML), :Document), :new,
                  s(:send, nil, :make_sample_RDF))),
              s(:lvasgn, :root,
                s(:send,
                  s(:lvar, :doc), :root)),
              s(:block,
                s(:send,
                  s(:lvar, :xsss), :each),
                s(:args,
                  s(:arg, :xss)),
                s(:begin,
                  s(:lvasgn, :content,
                    s(:send,
                      s(:block,
                        s(:send,
                          s(:lvar, :xss), :collect),
                        s(:args,
                          s(:arg, :key),
                          s(:arg, :name)),
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :key)),
                          s(:str, "=\""),
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "\""))), :join,
                      s(:str, " "))),
                  s(:lvasgn, :pi,
                    s(:send,
                      s(:const,
                        s(:const, nil, :REXML), :Instruction), :new,
                      s(:str, "xml-stylesheet"),
                      s(:lvar, :content))),
                  s(:send,
                    s(:lvar, :root), :previous_sibling=,
                    s(:lvar, :pi)))),
              s(:lvasgn, :rss,
                s(:send,
                  s(:const, nil, :Parser), :parse,
                  s(:send,
                    s(:lvar, :doc), :to_s))),
              s(:lvasgn, :have_href_xsss,
                s(:block,
                  s(:send,
                    s(:lvar, :xsss), :find_all),
                  s(:args,
                    s(:arg, :xss)),
                  s(:send,
                    s(:lvar, :xss), :has_key?,
                    s(:sym, :href)))),
              s(:send, nil, :assert_equal,
                s(:send,
                  s(:lvar, :have_href_xsss), :size),
                s(:send,
                  s(:send,
                    s(:lvar, :rss), :xml_stylesheets), :size)),
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :rss), :xml_stylesheets), :each_with_index),
                s(:args,
                  s(:arg, :stylesheet),
                  s(:arg, :i)),
                s(:begin,
                  s(:masgn,
                    s(:mlhs,
                      s(:lvasgn, :target)),
                    s(:send, nil, :parse_pi,
                      s(:send,
                        s(:lvar, :stylesheet), :to_s))),
                  s(:send, nil, :assert_xml_stylesheet,
                    s(:lvar, :target),
                    s(:send,
                      s(:lvar, :have_href_xsss), :[],
                      s(:lvar, :i)),
                    s(:lvar, :stylesheet))))))),
        s(:def, :parse_pi,
          s(:args,
            s(:arg, :pi)),
          s(:begin,
            s(:match_with_lvasgn,
              s(:regexp,
                s(:str, "\\A\\s*<\\?(\\S+)([^?]*\\?+(?:[^?>][^?]*\\?+)*)>\\s*\\z"),
                s(:regopt)),
              s(:lvar, :pi)),
            s(:lvasgn, :target,
              s(:nth_ref, 1)),
            s(:lvasgn, :dummy,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :REXML), :Document), :new,
                  s(:dstr,
                    s(:str, "<dummy "),
                    s(:begin,
                      s(:send,
                        s(:send,
                          s(:nth_ref, 2), :to_s), :chop)),
                    s(:str, "/>"))), :root)),
            s(:lvasgn, :contents,
              s(:hash)),
            s(:block,
              s(:send,
                s(:send,
                  s(:lvar, :dummy), :attributes), :each),
              s(:args,
                s(:arg, :name),
                s(:arg, :value)),
              s(:send,
                s(:lvar, :contents), :[]=,
                s(:lvar, :name),
                s(:lvar, :value))),
            s(:array,
              s(:lvar, :target),
              s(:lvar, :contents))))))))
