s(:begin,
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:send, nil, :require,
    s(:str, "rss/2.0")),
  s(:send, nil, :require,
    s(:str, "rss/trackback")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestTrackBack),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@prefix,
              s(:str, "trackback")),
            s(:ivasgn, :@uri,
              s(:str, "http://madskills.com/public/xml/rss/module/trackback/")),
            s(:ivasgn, :@parents,
              s(:array,
                s(:str, "item"))),
            s(:ivasgn, :@elems,
              s(:hash,
                s(:pair,
                  s(:sym, :ping),
                  s(:str, "http://bar.com/tb.cgi?tb_id=rssplustrackback")),
                s(:pair,
                  s(:sym, :about),
                  s(:str, "http://foo.com/trackback/tb.cgi?tb_id=20020923")))),
            s(:ivasgn, :@content_nodes,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@elems), :collect),
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :value)),
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, " rdf:resource=\""),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :CGI), :escapeHTML,
                        s(:send,
                          s(:lvar, :value), :to_s))),
                    s(:str, "\"/>"))), :join,
                s(:str, "\n"))),
            s(:ivasgn, :@content_nodes2,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@elems), :collect),
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :value)),
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ">"),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :CGI), :escapeHTML,
                        s(:send,
                          s(:lvar, :value), :to_s))),
                    s(:str, "</"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, ">"))), :join,
                s(:str, "\n"))),
            s(:ivasgn, :@rss_source,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item,
                      s(:ivar, :@content_nodes))),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n")),
                s(:hash,
                  s(:pair,
                    s(:ivar, :@prefix),
                    s(:ivar, :@uri))))),
            s(:ivasgn, :@rss,
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss_source))),
            s(:ivasgn, :@rss20_source,
              s(:block,
                s(:send, nil, :make_rss20,
                  s(:nil),
                  s(:hash,
                    s(:pair,
                      s(:ivar, :@prefix),
                      s(:ivar, :@uri)))),
                s(:args),
                s(:block,
                  s(:send, nil, :make_channel20,
                    s(:nil)),
                  s(:args),
                  s(:send, nil, :make_item20,
                    s(:ivar, :@content_nodes2))))),
            s(:ivasgn, :@rss20,
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss20_source),
                s(:false))))),
        s(:def, :test_parser,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_nothing_raised),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss_source))),
            s(:block,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@elems), :find_all),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:send,
                    s(:lvar, :k), :==,
                    s(:sym, :ping))), :each),
              s(:args,
                s(:arg, :tag),
                s(:arg, :value)),
              s(:block,
                s(:send, nil, :assert_too_much_tag,
                  s(:send,
                    s(:lvar, :tag), :to_s),
                  s(:str, "item")),
                s(:args),
                s(:send,
                  s(:const, nil, :Parser), :parse,
                  s(:send, nil, :make_RDF,
                    s(:dstr,
                      s(:begin,
                        s(:send, nil, :make_channel)),
                      s(:str, "\n"),
                      s(:begin,
                        s(:send, nil, :make_item,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:send,
                                        s(:send,
                                          s(:str, "<"), :+,
                                          s(:ivar, :@prefix)), :+,
                                        s(:str, ":")), :+,
                                      s(:send,
                                        s(:lvar, :tag), :to_s)), :+,
                                    s(:str, " rdf:resource=\"")), :+,
                                  s(:send,
                                    s(:const, nil, :CGI), :escapeHTML,
                                    s(:send,
                                      s(:lvar, :value), :to_s))), :+,
                                s(:str, "\"/>"))), :*,
                            s(:int, 2)))),
                      s(:str, "\n")),
                    s(:hash,
                      s(:pair,
                        s(:ivar, :@prefix),
                        s(:ivar, :@uri))))))),
            s(:block,
              s(:send,
                s(:block,
                  s(:send,
                    s(:ivar, :@elems), :find_all),
                  s(:args,
                    s(:arg, :k),
                    s(:arg, :v)),
                  s(:send,
                    s(:lvar, :k), :==,
                    s(:sym, :about))), :each),
              s(:args,
                s(:arg, :tag),
                s(:arg, :value)),
              s(:block,
                s(:send, nil, :assert_missing_tag,
                  s(:str, "trackback:ping"),
                  s(:str, "item")),
                s(:args),
                s(:send,
                  s(:const, nil, :Parser), :parse,
                  s(:send, nil, :make_RDF,
                    s(:dstr,
                      s(:begin,
                        s(:send, nil, :make_channel)),
                      s(:str, "\n"),
                      s(:begin,
                        s(:send, nil, :make_item,
                          s(:send,
                            s(:begin,
                              s(:send,
                                s(:send,
                                  s(:send,
                                    s(:send,
                                      s(:send,
                                        s(:send,
                                          s(:str, "<"), :+,
                                          s(:ivar, :@prefix)), :+,
                                        s(:str, ":")), :+,
                                      s(:send,
                                        s(:lvar, :tag), :to_s)), :+,
                                    s(:str, " rdf:resource=\"")), :+,
                                  s(:send,
                                    s(:const, nil, :CGI), :escapeHTML,
                                    s(:send,
                                      s(:lvar, :value), :to_s))), :+,
                                s(:str, "\"/>"))), :*,
                            s(:int, 2)))),
                      s(:str, "\n")),
                    s(:hash,
                      s(:pair,
                        s(:ivar, :@prefix),
                        s(:ivar, :@uri))))))))),
        s(:def, :test_accessor,
          s(:args),
          s(:begin,
            s(:lvasgn, :new_value,
              s(:hash,
                s(:pair,
                  s(:sym, :ping),
                  s(:str, "http://baz.com/trackback/tb.cgi?tb_id=20030808")),
                s(:pair,
                  s(:sym, :about),
                  s(:str, "http://hoge.com/trackback/tb.cgi?tb_id=90030808")))),
            s(:block,
              s(:send,
                s(:ivar, :@elems), :each),
              s(:args,
                s(:arg, :name),
                s(:arg, :value)),
              s(:block,
                s(:send,
                  s(:ivar, :@parents), :each),
                s(:args,
                  s(:arg, :parent)),
                s(:begin,
                  s(:lvasgn, :accessor,
                    s(:dstr,
                      s(:begin,
                        s(:const,
                          s(:const, nil, :RSS), :TRACKBACK_PREFIX)),
                      s(:str, "_"),
                      s(:begin,
                        s(:lvar, :name)))),
                  s(:lvasgn, :target,
                    s(:send,
                      s(:ivar, :@rss), :__send__,
                      s(:lvar, :parent))),
                  s(:lvasgn, :target20,
                    s(:send,
                      s(:send,
                        s(:ivar, :@rss20), :channel), :__send__,
                      s(:lvar, :parent),
                      s(:int, -1))),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :value),
                    s(:send,
                      s(:lvar, :target), :__send__,
                      s(:lvar, :accessor))),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :value),
                    s(:send,
                      s(:lvar, :target20), :__send__,
                      s(:lvar, :accessor))),
                  s(:if,
                    s(:send,
                      s(:lvar, :name), :==,
                      s(:sym, :about)),
                    s(:begin,
                      s(:send,
                        s(:lvar, :target), :__send__,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :accessor)),
                          s(:str, "=")),
                        s(:int, 0),
                        s(:send,
                          s(:send,
                            s(:lvar, :new_value), :[],
                            s(:lvar, :name)), :to_s)),
                      s(:send,
                        s(:lvar, :target20), :__send__,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :accessor)),
                          s(:str, "=")),
                        s(:int, 0),
                        s(:send,
                          s(:send,
                            s(:lvar, :new_value), :[],
                            s(:lvar, :name)), :to_s))),
                    s(:begin,
                      s(:send,
                        s(:lvar, :target), :__send__,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :accessor)),
                          s(:str, "=")),
                        s(:send,
                          s(:send,
                            s(:lvar, :new_value), :[],
                            s(:lvar, :name)), :to_s)),
                      s(:send,
                        s(:lvar, :target20), :__send__,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :accessor)),
                          s(:str, "=")),
                        s(:send,
                          s(:send,
                            s(:lvar, :new_value), :[],
                            s(:lvar, :name)), :to_s)))),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :new_value), :[],
                      s(:lvar, :name)),
                    s(:send,
                      s(:lvar, :target), :__send__,
                      s(:lvar, :accessor))),
                  s(:send, nil, :assert_equal,
                    s(:send,
                      s(:lvar, :new_value), :[],
                      s(:lvar, :name)),
                    s(:send,
                      s(:lvar, :target20), :__send__,
                      s(:lvar, :accessor)))))))),
        s(:def, :test_to_s,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:ivar, :@elems), :each),
              s(:args,
                s(:arg, :name),
                s(:arg, :value)),
              s(:begin,
                s(:lvasgn, :excepted,
                  s(:dstr,
                    s(:str, "<"),
                    s(:begin,
                      s(:ivar, :@prefix)),
                    s(:str, ":"),
                    s(:begin,
                      s(:lvar, :name)),
                    s(:str, " rdf:resource=\""),
                    s(:begin,
                      s(:send,
                        s(:const, nil, :CGI), :escapeHTML,
                        s(:lvar, :value))),
                    s(:str, "\"/>"))),
                s(:block,
                  s(:send,
                    s(:ivar, :@parents), :each),
                  s(:args,
                    s(:arg, :parent)),
                  s(:begin,
                    s(:lvasgn, :meth,
                      s(:dstr,
                        s(:begin,
                          s(:const,
                            s(:const, nil, :RSS), :TRACKBACK_PREFIX)),
                        s(:str, "_"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "_element"))),
                    s(:if,
                      s(:send,
                        s(:lvar, :name), :==,
                        s(:sym, :about)),
                      s(:send,
                        s(:lvar, :meth), :<<,
                        s(:str, "s")), nil),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :excepted),
                      s(:send,
                        s(:send,
                          s(:ivar, :@rss), :__send__,
                          s(:lvar, :parent)), :__send__,
                        s(:lvar, :meth))))))),
            s(:block,
              s(:send,
                s(:send,
                  s(:send,
                    s(:const,
                      s(:const, nil, :REXML), :Document), :new,
                    s(:ivar, :@rss_source)), :root), :each_element),
              s(:args,
                s(:arg, :parent)),
              s(:if,
                s(:send,
                  s(:ivar, :@parents), :include?,
                  s(:send,
                    s(:lvar, :parent), :name)),
                s(:block,
                  s(:send,
                    s(:lvar, :parent), :each_element),
                  s(:args,
                    s(:arg, :elem)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :elem), :namespace), :==,
                      s(:ivar, :@uri)),
                    s(:send, nil, :assert_equal,
                      s(:send,
                        s(:send,
                          s(:lvar, :elem), :attributes), :[],
                        s(:str, "resource")),
                      s(:send,
                        s(:ivar, :@elems), :[],
                        s(:send,
                          s(:send,
                            s(:lvar, :elem), :name), :intern))), nil)), nil))))))))
