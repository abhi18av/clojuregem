s(:begin,
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require,
    s(:str, "rexml/document")),
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/2.0")),
  s(:send, nil, :require,
    s(:str, "rss/itunes")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestITunes),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_author,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_itunes_author,
                s(:array,
                  s(:str, "channel"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:lvar, :content)),
                s(:lvar, :xmlns))),
            s(:block,
              s(:send, nil, :assert_itunes_author,
                s(:array,
                  s(:str, "items"),
                  s(:str, "last"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:send, nil, :make_item20,
                    s(:lvar, :content))),
                s(:lvar, :xmlns))))),
        s(:def, :test_block,
          s(:args),
          s(:block,
            s(:send, nil, :assert_itunes_block,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))),
            s(:args,
              s(:arg, :content),
              s(:arg, :xmlns)),
            s(:send, nil, :make_rss20,
              s(:send, nil, :make_channel20,
                s(:send, nil, :make_item20,
                  s(:lvar, :content))),
              s(:lvar, :xmlns)))),
        s(:def, :test_category,
          s(:args),
          s(:block,
            s(:send, nil, :assert_itunes_category,
              s(:array,
                s(:str, "channel"))),
            s(:args,
              s(:arg, :content),
              s(:arg, :xmlns)),
            s(:send, nil, :make_rss20,
              s(:send, nil, :make_channel20,
                s(:lvar, :content)),
              s(:lvar, :xmlns)))),
        s(:def, :test_image,
          s(:args),
          s(:block,
            s(:send, nil, :assert_itunes_image,
              s(:array,
                s(:str, "channel"))),
            s(:args,
              s(:arg, :content),
              s(:arg, :xmlns)),
            s(:send, nil, :make_rss20,
              s(:send, nil, :make_channel20,
                s(:lvar, :content)),
              s(:lvar, :xmlns)))),
        s(:def, :test_duration,
          s(:args),
          s(:block,
            s(:send, nil, :assert_itunes_duration,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))),
            s(:args,
              s(:arg, :content),
              s(:arg, :xmlns)),
            s(:send, nil, :make_rss20,
              s(:send, nil, :make_channel20,
                s(:send, nil, :make_item20,
                  s(:lvar, :content))),
              s(:lvar, :xmlns)))),
        s(:def, :test_explicit,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_itunes_explicit,
                s(:array,
                  s(:str, "channel"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:lvar, :content)),
                s(:lvar, :xmlns))),
            s(:block,
              s(:send, nil, :assert_itunes_explicit,
                s(:array,
                  s(:str, "items"),
                  s(:str, "last"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:send, nil, :make_item20,
                    s(:lvar, :content))),
                s(:lvar, :xmlns))))),
        s(:def, :test_keywords,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_itunes_keywords,
                s(:array,
                  s(:str, "channel"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:lvar, :content)),
                s(:lvar, :xmlns))),
            s(:block,
              s(:send, nil, :assert_itunes_keywords,
                s(:array,
                  s(:str, "items"),
                  s(:str, "last"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:send, nil, :make_item20,
                    s(:lvar, :content))),
                s(:lvar, :xmlns))))),
        s(:def, :test_new_feed_url,
          s(:args),
          s(:block,
            s(:send, nil, :assert_itunes_new_feed_url,
              s(:array,
                s(:str, "channel"))),
            s(:args,
              s(:arg, :content),
              s(:arg, :xmlns)),
            s(:send, nil, :make_rss20,
              s(:send, nil, :make_channel20,
                s(:lvar, :content)),
              s(:lvar, :xmlns)))),
        s(:def, :test_owner,
          s(:args),
          s(:block,
            s(:send, nil, :assert_itunes_owner,
              s(:array,
                s(:str, "channel"))),
            s(:args,
              s(:arg, :content),
              s(:arg, :xmlns)),
            s(:send, nil, :make_rss20,
              s(:send, nil, :make_channel20,
                s(:lvar, :content)),
              s(:lvar, :xmlns)))),
        s(:def, :test_subtitle,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_itunes_subtitle,
                s(:array,
                  s(:str, "channel"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:lvar, :content)),
                s(:lvar, :xmlns))),
            s(:block,
              s(:send, nil, :assert_itunes_subtitle,
                s(:array,
                  s(:str, "items"),
                  s(:str, "last"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:send, nil, :make_item20,
                    s(:lvar, :content))),
                s(:lvar, :xmlns))))),
        s(:def, :test_summary,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_itunes_summary,
                s(:array,
                  s(:str, "channel"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:lvar, :content)),
                s(:lvar, :xmlns))),
            s(:block,
              s(:send, nil, :assert_itunes_summary,
                s(:array,
                  s(:str, "items"),
                  s(:str, "last"))),
              s(:args,
                s(:arg, :content),
                s(:arg, :xmlns)),
              s(:send, nil, :make_rss20,
                s(:send, nil, :make_channel20,
                  s(:send, nil, :make_item20,
                    s(:lvar, :content))),
                s(:lvar, :xmlns))))),
        s(:send, nil, :private),
        s(:def, :itunes_rss20_parse,
          s(:args,
            s(:arg, :content),
            s(:blockarg, :maker)),
          s(:begin,
            s(:lvasgn, :xmlns,
              s(:hash,
                s(:pair,
                  s(:str, "itunes"),
                  s(:str, "http://www.itunes.com/dtds/podcast-1.0.dtd")))),
            s(:lvasgn, :rss20_xml,
              s(:send,
                s(:lvar, :maker), :call,
                s(:lvar, :content),
                s(:lvar, :xmlns))),
            s(:send,
              s(:const,
                s(:const,
                  s(:cbase), :RSS), :Parser), :parse,
              s(:lvar, :rss20_xml)))),
        s(:def, :assert_itunes_author,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:lvasgn, :author,
                s(:str, "John Lennon")),
              s(:lvasgn, :rss20,
                s(:send, nil, :itunes_rss20_parse,
                  s(:send, nil, :tag,
                    s(:str, "itunes:author"),
                    s(:lvar, :author)),
                  s(:block_pass,
                    s(:lvar, :rss20_maker)))),
              s(:lvasgn, :target,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :readers))),
              s(:send, nil, :assert_equal,
                s(:lvar, :author),
                s(:send,
                  s(:lvar, :target), :itunes_author))))),
        s(:def, :_assert_itunes_block,
          s(:args,
            s(:arg, :value),
            s(:arg, :boolean_value),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:send, nil, :tag,
                  s(:str, "itunes:block"),
                  s(:lvar, :value)),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :target), :itunes_block)),
            s(:send, nil, :assert_equal,
              s(:lvar, :boolean_value),
              s(:send,
                s(:lvar, :target), :itunes_block?)))),
        s(:def, :assert_itunes_block,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_block,
                s(:str, "yes"),
                s(:true),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_block,
                s(:str, "Yes"),
                s(:true),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_block,
                s(:str, "no"),
                s(:false),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_block,
                s(:str, ""),
                s(:false),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :_assert_itunes_category,
          s(:args,
            s(:arg, :categories),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :cats,
              s(:send,
                s(:block,
                  s(:send,
                    s(:lvar, :categories), :collect),
                  s(:args,
                    s(:arg, :category)),
                  s(:if,
                    s(:send,
                      s(:lvar, :category), :is_a?,
                      s(:const, nil, :Array)),
                    s(:begin,
                      s(:masgn,
                        s(:mlhs,
                          s(:lvasgn, :category),
                          s(:lvasgn, :sub_category)),
                        s(:lvar, :category)),
                      s(:send, nil, :tag,
                        s(:str, "itunes:category"),
                        s(:send, nil, :tag,
                          s(:str, "itunes:category"),
                          s(:nil),
                          s(:hash,
                            s(:pair,
                              s(:str, "text"),
                              s(:lvar, :sub_category)))),
                        s(:hash,
                          s(:pair,
                            s(:str, "text"),
                            s(:lvar, :category))))),
                    s(:send, nil, :tag,
                      s(:str, "itunes:category"),
                      s(:nil),
                      s(:hash,
                        s(:pair,
                          s(:str, "text"),
                          s(:lvar, :category)))))), :join)),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :cats),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :readers))),
            s(:lvasgn, :actual_categories,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :target), :itunes_categories), :collect),
                s(:args,
                  s(:arg, :category)),
                s(:begin,
                  s(:lvasgn, :cat,
                    s(:send,
                      s(:lvar, :category), :text)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :category), :itunes_categories), :empty?),
                    s(:lvar, :cat),
                    s(:array,
                      s(:lvar, :cat),
                      s(:splat,
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:lvar, :category), :itunes_categories), :collect),
                          s(:args,
                            s(:arg, :c)),
                          s(:send,
                            s(:lvar, :c), :text)))))))),
            s(:send, nil, :assert_equal,
              s(:lvar, :categories),
              s(:lvar, :actual_categories)))),
        s(:def, :assert_itunes_category,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_category,
                s(:array,
                  s(:str, "Audio Blogs")),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_category,
                s(:array,
                  s(:array,
                    s(:str, "Arts & Entertainment"),
                    s(:str, "Games"))),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_category,
                s(:array,
                  s(:array,
                    s(:str, "Arts & Entertainment"),
                    s(:str, "Games")),
                  s(:array,
                    s(:str, "Technology"),
                    s(:str, "Computers")),
                  s(:str, "Audio Blogs")),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :assert_itunes_image,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:lvasgn, :url,
                s(:str, "http://example.com/podcasts/everything/AllAboutEverything.jpg")),
              s(:lvasgn, :content,
                s(:send, nil, :tag,
                  s(:str, "itunes:image"),
                  s(:nil),
                  s(:hash,
                    s(:pair,
                      s(:str, "href"),
                      s(:lvar, :url))))),
              s(:lvasgn, :rss20,
                s(:send, nil, :itunes_rss20_parse,
                  s(:lvar, :content),
                  s(:block_pass,
                    s(:lvar, :rss20_maker)))),
              s(:lvasgn, :target,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :readers))),
              s(:send, nil, :assert_not_nil,
                s(:send,
                  s(:lvar, :target), :itunes_image)),
              s(:send, nil, :assert_equal,
                s(:lvar, :url),
                s(:send,
                  s(:send,
                    s(:lvar, :target), :itunes_image), :href)),
              s(:block,
                s(:send, nil, :assert_missing_attribute,
                  s(:str, "image"),
                  s(:str, "href")),
                s(:args),
                s(:begin,
                  s(:lvasgn, :content,
                    s(:send, nil, :tag,
                      s(:str, "itunes:image"))),
                  s(:send, nil, :itunes_rss20_parse,
                    s(:lvar, :content),
                    s(:block_pass,
                      s(:lvar, :rss20_maker)))))))),
        s(:def, :_assert_itunes_duration,
          s(:args,
            s(:arg, :hour),
            s(:arg, :minute),
            s(:arg, :second),
            s(:arg, :value),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :tag,
                s(:str, "itunes:duration"),
                s(:lvar, :value))),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :duration,
              s(:send,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :readers)), :itunes_duration)),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :duration), :content)),
            s(:send, nil, :assert_equal,
              s(:lvar, :hour),
              s(:send,
                s(:lvar, :duration), :hour)),
            s(:send, nil, :assert_equal,
              s(:lvar, :minute),
              s(:send,
                s(:lvar, :duration), :minute)),
            s(:send, nil, :assert_equal,
              s(:lvar, :second),
              s(:send,
                s(:lvar, :duration), :second)))),
        s(:def, :_assert_itunes_duration_not_available_value,
          s(:args,
            s(:arg, :value),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :assert_not_available_value,
              s(:str, "duration"),
              s(:lvar, :value)),
            s(:args),
            s(:begin,
              s(:lvasgn, :content,
                s(:send, nil, :tag,
                  s(:str, "itunes:duration"),
                  s(:lvar, :value))),
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :assert_itunes_duration,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_duration,
                s(:int, 7),
                s(:int, 14),
                s(:int, 5),
                s(:str, "07:14:05"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration,
                s(:int, 7),
                s(:int, 14),
                s(:int, 5),
                s(:str, "7:14:05"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration,
                s(:int, 0),
                s(:int, 4),
                s(:int, 55),
                s(:str, "04:55"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration,
                s(:int, 0),
                s(:int, 4),
                s(:int, 5),
                s(:str, "4:05"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration_not_available_value,
                s(:str, "5"),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration_not_available_value,
                s(:str, "09:07:14:05"),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration_not_available_value,
                s(:str, "10:5"),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration_not_available_value,
                s(:str, "10:03:5"),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration_not_available_value,
                s(:str, "10:3:05"),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_duration_not_available_value,
                s(:str, "xx:xx:xx"),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :_assert_itunes_explicit,
          s(:args,
            s(:arg, :explicit),
            s(:arg, :value),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :tag,
                s(:str, "itunes:explicit"),
                s(:lvar, :value))),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :target), :itunes_explicit)),
            s(:send, nil, :assert_equal,
              s(:lvar, :explicit),
              s(:send,
                s(:lvar, :target), :itunes_explicit?)))),
        s(:def, :assert_itunes_explicit,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_explicit,
                s(:true),
                s(:str, "yes"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_explicit,
                s(:false),
                s(:str, "clean"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_explicit,
                s(:nil),
                s(:str, "no"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :_assert_itunes_keywords,
          s(:args,
            s(:arg, :keywords),
            s(:arg, :value),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :tag,
                s(:str, "itunes:keywords"),
                s(:lvar, :value))),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :keywords),
              s(:send,
                s(:lvar, :target), :itunes_keywords)))),
        s(:def, :assert_itunes_keywords,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_keywords,
                s(:array,
                  s(:str, "salt")),
                s(:str, "salt"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_keywords,
                s(:array,
                  s(:str, "salt")),
                s(:str, " salt "),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_keywords,
                s(:array,
                  s(:str, "salt"),
                  s(:str, "pepper"),
                  s(:str, "shaker"),
                  s(:str, "exciting")),
                s(:str, "salt, pepper, shaker, exciting"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_keywords,
                s(:array,
                  s(:str, "metric"),
                  s(:str, "socket"),
                  s(:str, "wrenches"),
                  s(:str, "toolsalt")),
                s(:str, "metric, socket, wrenches, toolsalt"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_keywords,
                s(:array,
                  s(:str, "olitics"),
                  s(:str, "red"),
                  s(:str, "blue"),
                  s(:str, "state")),
                s(:str, "olitics, red, blue, state"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :assert_itunes_new_feed_url,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:lvasgn, :url,
                s(:str, "http://newlocation.com/example.rss")),
              s(:lvasgn, :content,
                s(:send, nil, :tag,
                  s(:str, "itunes:new-feed-url"),
                  s(:lvar, :url))),
              s(:lvasgn, :rss20,
                s(:send, nil, :itunes_rss20_parse,
                  s(:lvar, :content),
                  s(:block_pass,
                    s(:lvar, :rss20_maker)))),
              s(:lvasgn, :target,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :readers))),
              s(:send, nil, :assert_equal,
                s(:lvar, :url),
                s(:send,
                  s(:lvar, :target), :itunes_new_feed_url))))),
        s(:def, :_assert_itunes_owner,
          s(:args,
            s(:arg, :name),
            s(:arg, :email),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :tag,
                s(:str, "itunes:owner"),
                s(:send,
                  s(:send, nil, :tag,
                    s(:str, "itunes:name"),
                    s(:lvar, :name)), :+,
                  s(:send, nil, :tag,
                    s(:str, "itunes:email"),
                    s(:lvar, :email))))),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :owner,
              s(:send,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :readers)), :itunes_owner)),
            s(:send, nil, :assert_equal,
              s(:lvar, :name),
              s(:send,
                s(:lvar, :owner), :itunes_name)),
            s(:send, nil, :assert_equal,
              s(:lvar, :email),
              s(:send,
                s(:lvar, :owner), :itunes_email)))),
        s(:def, :assert_itunes_owner,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_owner,
                s(:str, "John Doe"),
                s(:str, "john.doe@example.com"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:block,
                s(:send, nil, :assert_missing_tag,
                  s(:str, "name"),
                  s(:str, "owner")),
                s(:args),
                s(:begin,
                  s(:lvasgn, :content,
                    s(:send, nil, :tag,
                      s(:str, "itunes:owner"))),
                  s(:send, nil, :itunes_rss20_parse,
                    s(:lvar, :content),
                    s(:block_pass,
                      s(:lvar, :rss20_maker))))),
              s(:block,
                s(:send, nil, :assert_missing_tag,
                  s(:str, "name"),
                  s(:str, "owner")),
                s(:args),
                s(:begin,
                  s(:lvasgn, :content,
                    s(:send, nil, :tag,
                      s(:str, "itunes:owner"),
                      s(:send, nil, :tag,
                        s(:str, "itunes:email"),
                        s(:str, "john.doe@example.com")))),
                  s(:send, nil, :itunes_rss20_parse,
                    s(:lvar, :content),
                    s(:block_pass,
                      s(:lvar, :rss20_maker))))),
              s(:block,
                s(:send, nil, :assert_missing_tag,
                  s(:str, "email"),
                  s(:str, "owner")),
                s(:args),
                s(:begin,
                  s(:lvasgn, :content,
                    s(:send, nil, :tag,
                      s(:str, "itunes:owner"),
                      s(:send, nil, :tag,
                        s(:str, "itunes:name"),
                        s(:str, "John Doe")))),
                  s(:send, nil, :itunes_rss20_parse,
                    s(:lvar, :content),
                    s(:block_pass,
                      s(:lvar, :rss20_maker)))))))),
        s(:def, :_assert_itunes_subtitle,
          s(:args,
            s(:arg, :value),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :tag,
                s(:str, "itunes:subtitle"),
                s(:lvar, :value))),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :target), :itunes_subtitle)))),
        s(:def, :assert_itunes_subtitle,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_subtitle,
                s(:str, "A show about everything"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_subtitle,
                s(:str, "A short primer on table spices"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_subtitle,
                s(:str, "Comparing socket wrenches is fun!"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_subtitle,
                s(:str, "Red + Blue != Purple"),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))))),
        s(:def, :_assert_itunes_summary,
          s(:args,
            s(:arg, :value),
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:begin,
            s(:lvasgn, :content,
              s(:send, nil, :tag,
                s(:str, "itunes:summary"),
                s(:lvar, :value))),
            s(:lvasgn, :rss20,
              s(:send, nil, :itunes_rss20_parse,
                s(:lvar, :content),
                s(:block_pass,
                  s(:lvar, :rss20_maker)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :target), :itunes_summary)))),
        s(:def, :assert_itunes_summary,
          s(:args,
            s(:arg, :readers),
            s(:blockarg, :rss20_maker)),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:send, nil, :_assert_itunes_summary,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:str, "All About Everything is a show about "), :+,
                        s(:str, "everything. Each week we dive into any ")), :+,
                      s(:str, "subject known to man and talk about it as ")), :+,
                    s(:str, "much as we can. Look for our Podcast in ")), :+,
                  s(:str, "the iTunes Music Store")),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_summary,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:str, "This week we talk about salt and pepper "), :+,
                      s(:str, "shakers, comparing and contrasting pour ")), :+,
                    s(:str, "rates, construction materials, and overall ")), :+,
                  s(:str, "aesthetics. Come and join the party!")),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_summary,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:str, "This week we talk about metric vs. old "), :+,
                      s(:str, "english socket wrenches. Which one is ")), :+,
                    s(:str, "better? Do you really need both? Get all ")), :+,
                  s(:str, "of your answers here.")),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))),
              s(:send, nil, :_assert_itunes_summary,
                s(:send,
                  s(:send,
                    s(:str, "This week we talk about surviving in a "), :+,
                    s(:str, "Red state if you're a Blue person. Or ")), :+,
                  s(:str, "vice versa.")),
                s(:lvar, :readers),
                s(:block_pass,
                  s(:lvar, :rss20_maker))))))))))
