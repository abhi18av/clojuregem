s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:send, nil, :require,
    s(:str, "rss/2.0")),
  s(:send, nil, :require,
    s(:str, "rss/syndication")),
  s(:send, nil, :require,
    s(:str, "rss/image")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestAccessor),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_date,
          s(:args),
          s(:begin,
            s(:lvasgn, :channel,
              s(:send,
                s(:const,
                  s(:const, nil, :Rss), :Channel), :new)),
            s(:send,
              s(:lvar, :channel), :pubDate=,
              s(:nil)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :channel), :pubDate)),
            s(:lvasgn, :time,
              s(:send,
                s(:const, nil, :Time), :now)),
            s(:send,
              s(:lvar, :channel), :pubDate=,
              s(:lvar, :time)),
            s(:send, nil, :assert_equal,
              s(:lvar, :time),
              s(:send,
                s(:lvar, :channel), :pubDate)),
            s(:lvasgn, :time,
              s(:send,
                s(:const, nil, :Time), :parse,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :rfc822))),
            s(:send,
              s(:lvar, :channel), :pubDate=,
              s(:send,
                s(:lvar, :time), :rfc822)),
            s(:send, nil, :assert_equal,
              s(:lvar, :time),
              s(:send,
                s(:lvar, :channel), :pubDate)),
            s(:lvasgn, :time,
              s(:send,
                s(:const, nil, :Time), :parse,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :iso8601))),
            s(:lvasgn, :value,
              s(:send,
                s(:lvar, :time), :iso8601)),
            s(:block,
              s(:send, nil, :assert_not_available_value,
                s(:str, "pubDate"),
                s(:lvar, :value)),
              s(:args),
              s(:send,
                s(:lvar, :channel), :pubDate=,
                s(:lvar, :value))),
            s(:send,
              s(:lvar, :channel), :do_validate=,
              s(:false)),
            s(:lvasgn, :time,
              s(:send,
                s(:const, nil, :Time), :parse,
                s(:send,
                  s(:send,
                    s(:const, nil, :Time), :now), :iso8601))),
            s(:lvasgn, :value,
              s(:send,
                s(:lvar, :time), :iso8601)),
            s(:send,
              s(:lvar, :channel), :pubDate=,
              s(:lvar, :value)),
            s(:send, nil, :assert_equal,
              s(:lvar, :time),
              s(:send,
                s(:lvar, :channel), :pubDate)),
            s(:send,
              s(:lvar, :channel), :pubDate=,
              s(:nil)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :channel), :pubDate)))),
        s(:def, :test_integer,
          s(:args),
          s(:begin,
            s(:lvasgn, :image_item,
              s(:send,
                s(:const,
                  s(:const,
                    s(:const, nil, :RDF), :Item), :ImageItem), :new)),
            s(:send,
              s(:lvar, :image_item), :width=,
              s(:nil)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :image_item), :width)),
            s(:lvasgn, :width,
              s(:int, 10)),
            s(:send,
              s(:lvar, :image_item), :width=,
              s(:lvar, :width)),
            s(:send, nil, :assert_equal,
              s(:lvar, :width),
              s(:send,
                s(:lvar, :image_item), :width)),
            s(:lvasgn, :width,
              s(:float, 10.0)),
            s(:send,
              s(:lvar, :image_item), :width=,
              s(:lvar, :width)),
            s(:send, nil, :assert_equal,
              s(:lvar, :width),
              s(:send,
                s(:lvar, :image_item), :width)),
            s(:lvasgn, :width,
              s(:str, "10")),
            s(:send,
              s(:lvar, :image_item), :width=,
              s(:lvar, :width)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :width), :to_i),
              s(:send,
                s(:lvar, :image_item), :width)),
            s(:lvasgn, :width,
              s(:str, "10.0")),
            s(:block,
              s(:send, nil, :assert_not_available_value,
                s(:str, "image:width"),
                s(:lvar, :width)),
              s(:args),
              s(:send,
                s(:lvar, :image_item), :width=,
                s(:lvar, :width))),
            s(:send,
              s(:lvar, :image_item), :do_validate=,
              s(:false)),
            s(:lvasgn, :width,
              s(:str, "10.0")),
            s(:send,
              s(:lvar, :image_item), :width=,
              s(:lvar, :width)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :width), :to_i),
              s(:send,
                s(:lvar, :image_item), :width)),
            s(:send,
              s(:lvar, :image_item), :width=,
              s(:nil)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :image_item), :width)))),
        s(:def, :test_positive_integer,
          s(:args),
          s(:begin,
            s(:lvasgn, :channel,
              s(:send,
                s(:const,
                  s(:const, nil, :RDF), :Channel), :new)),
            s(:send,
              s(:lvar, :channel), :sy_updateFrequency=,
              s(:nil)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency)),
            s(:lvasgn, :freq,
              s(:int, 10)),
            s(:send,
              s(:lvar, :channel), :sy_updateFrequency=,
              s(:lvar, :freq)),
            s(:send, nil, :assert_equal,
              s(:lvar, :freq),
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency)),
            s(:lvasgn, :freq,
              s(:float, 10.0)),
            s(:send,
              s(:lvar, :channel), :sy_updateFrequency=,
              s(:lvar, :freq)),
            s(:send, nil, :assert_equal,
              s(:lvar, :freq),
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency)),
            s(:lvasgn, :freq,
              s(:str, "10")),
            s(:send,
              s(:lvar, :channel), :sy_updateFrequency=,
              s(:lvar, :freq)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :freq), :to_i),
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency)),
            s(:lvasgn, :freq,
              s(:str, "10.0")),
            s(:block,
              s(:send, nil, :assert_not_available_value,
                s(:str, "sy:updateFrequency"),
                s(:lvar, :freq)),
              s(:args),
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency=,
                s(:lvar, :freq))),
            s(:send,
              s(:lvar, :channel), :do_validate=,
              s(:false)),
            s(:lvasgn, :freq,
              s(:str, "10.0")),
            s(:send,
              s(:lvar, :channel), :sy_updateFrequency=,
              s(:lvar, :freq)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:lvar, :freq), :to_i),
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency)),
            s(:send,
              s(:lvar, :channel), :sy_updateFrequency=,
              s(:nil)),
            s(:send, nil, :assert_nil,
              s(:send,
                s(:lvar, :channel), :sy_updateFrequency))))))))
