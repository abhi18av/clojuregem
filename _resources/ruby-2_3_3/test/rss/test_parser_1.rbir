s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:send, nil, :require,
    s(:str, "rss/dublincore")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestParser10),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_RDF,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_ns,
                s(:str, ""),
                s(:const,
                  s(:const, nil, :RDF), :URI)),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_xmldecl)),
                  s(:str, "\n"),
                  s(:str, "<RDF/>\n")))),
            s(:block,
              s(:send, nil, :assert_ns,
                s(:str, ""),
                s(:const,
                  s(:const, nil, :RDF), :URI)),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_xmldecl)),
                  s(:str, "\n"),
                  s(:str, "<RDF xmlns=\"hoge\"/>\n")))),
            s(:block,
              s(:send, nil, :assert_ns,
                s(:str, "rdf"),
                s(:const,
                  s(:const, nil, :RDF), :URI)),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_xmldecl)),
                  s(:str, "\n"),
                  s(:str, "<rdf:RDF xmlns:rdf=\"hoge\"/>\n")))),
            s(:send, nil, :assert_parse,
              s(:dstr,
                s(:begin,
                  s(:send, nil, :make_xmldecl)),
                s(:str, "\n"),
                s(:str, "<rdf:RDF xmlns:rdf=\""),
                s(:begin,
                  s(:const,
                    s(:const,
                      s(:const, nil, :RSS), :RDF), :URI)),
                s(:str, "\"/>\n")),
              s(:sym, :missing_tag),
              s(:str, "channel"),
              s(:str, "RDF")),
            s(:send, nil, :assert_parse,
              s(:dstr,
                s(:begin,
                  s(:send, nil, :make_xmldecl)),
                s(:str, "\n"),
                s(:str, "<RDF xmlns=\""),
                s(:begin,
                  s(:const,
                    s(:const,
                      s(:const, nil, :RSS), :RDF), :URI)),
                s(:str, "\"/>\n")),
              s(:sym, :missing_tag),
              s(:str, "channel"),
              s(:str, "RDF")),
            s(:send, nil, :assert_parse,
              s(:dstr,
                s(:begin,
                  s(:send, nil, :make_xmldecl)),
                s(:str, "\n"),
                s(:str, "<RDF xmlns=\""),
                s(:begin,
                  s(:const,
                    s(:const,
                      s(:const, nil, :RSS), :RDF), :URI)),
                s(:str, "\"/>\n")),
              s(:sym, :missing_tag),
              s(:str, "channel"),
              s(:str, "RDF")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"))),
              s(:sym, :missing_tag),
              s(:str, "item"),
              s(:str, "RDF")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"))),
              s(:sym, :missing_tag),
              s(:str, "item"),
              s(:str, "RDF")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n"))),
              s(:sym, :missing_tag),
              s(:str, "item"),
              s(:str, "RDF")),
            s(:block,
              s(:send, nil, :assert_too_much_tag,
                s(:str, "image"),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:send, nil, :make_RDF,
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :make_channel)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_image)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_image)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_item)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_textinput)),
                    s(:str, "\n"))))),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n"))),
              s(:sym, :nothing_raised)),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"))),
              s(:sym, :nothing_raised)),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"))),
              s(:sym, :nothing_raised)),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n"))),
              s(:sym, :nothing_raised)),
            s(:block,
              s(:send,
                s(:int, 1), :step,
                s(:int, 15),
                s(:int, 3)),
              s(:args,
                s(:arg, :i)),
              s(:begin,
                s(:lvasgn, :rss,
                  s(:block,
                    s(:send, nil, :make_RDF),
                    s(:args),
                    s(:begin,
                      s(:lvasgn, :res,
                        s(:send, nil, :make_channel)),
                      s(:block,
                        s(:send,
                          s(:lvar, :i), :times),
                        s(:args),
                        s(:send,
                          s(:lvar, :res), :<<,
                          s(:send, nil, :make_item))),
                      s(:lvar, :res)))),
                s(:send, nil, :assert_parse,
                  s(:lvar, :rss),
                  s(:sym, :nothing_raised)))))),
        s(:def, :test_undefined_entity,
          s(:args),
          s(:begin,
            s(:if,
              s(:send,
                s(:send,
                  s(:const,
                    s(:const, nil, :RSS), :Parser), :default_parser), :raise_for_undefined_entity?), nil,
              s(:return)),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "<item rdf:about=\""),
                  s(:begin,
                    s(:const, nil, :RDF_ABOUT)),
                  s(:str, "\">\n"),
                  s(:str, "  <title>"),
                  s(:begin,
                    s(:const, nil, :TITLE_VALUE)),
                  s(:str, " &UNKNOWN_ENTITY;</title>\n"),
                  s(:str, "  <link>"),
                  s(:begin,
                    s(:const, nil, :LINK_VALUE)),
                  s(:str, "</link>\n"),
                  s(:str, "  <description>"),
                  s(:begin,
                    s(:const, nil, :DESCRIPTION_VALUE)),
                  s(:str, "</description>\n"),
                  s(:str, "</item>\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n"))),
              s(:sym, :raises),
              s(:const,
                s(:const, nil, :RSS), :NotWellFormedError)))),
        s(:def, :test_channel,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:str, "<channel />\n")),
              s(:sym, :missing_attribute),
              s(:str, "channel"),
              s(:str, "rdf:about")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:str, "<channel rdf:about=\"http://example.com/\"/>\n")),
              s(:sym, :missing_tag),
              s(:str, "title"),
              s(:str, "channel")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_tag),
              s(:str, "link"),
              s(:str, "channel")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_tag),
              s(:str, "description"),
              s(:str, "channel")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_tag),
              s(:str, "items"),
              s(:str, "channel")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image/>\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_attribute),
              s(:str, "image"),
              s(:str, "rdf:resource")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image rdf:resource=\"http://example.com/hoge.png\" />\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_tag),
              s(:str, "items"),
              s(:str, "channel")),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image rdf:resource=\"http://example.com/hoge.png\" />\n"),
                  s(:str, "  <items/>\n"),
                  s(:str, "</channel>\n")))),
            s(:block,
              s(:send, nil, :assert_missing_tag,
                s(:str, "Seq"),
                s(:str, "items")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss))),
            s(:block,
              s(:send, nil, :assert_missing_tag,
                s(:str, "item"),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:send,
                  s(:const, nil, :Parser), :parse,
                  s(:lvar, :rss),
                  s(:false)), :validate)),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image rdf:resource=\"http://example.com/hoge.png\" />\n"),
                  s(:str, "  <items>\n"),
                  s(:str, "    <rdf:Seq>\n"),
                  s(:str, "    </rdf:Seq>\n"),
                  s(:str, "  </items>\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_tag),
              s(:str, "item"),
              s(:str, "RDF")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image rdf:resource=\"http://example.com/hoge.png\" />\n"),
                  s(:str, "  <items>\n"),
                  s(:str, "    <rdf:Seq>\n"),
                  s(:str, "    </rdf:Seq>\n"),
                  s(:str, "  </items>\n"),
                  s(:str, "  <textinput/>\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_attribute),
              s(:str, "textinput"),
              s(:str, "rdf:resource")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image rdf:resource=\"http://example.com/hoge.png\" />\n"),
                  s(:str, "  <items>\n"),
                  s(:str, "    <rdf:Seq>\n"),
                  s(:str, "    </rdf:Seq>\n"),
                  s(:str, "  </items>\n"),
                  s(:str, "  <textinput rdf:resource=\"http://example.com/search\" />\n"),
                  s(:str, "</channel>\n"))),
              s(:sym, :missing_tag),
              s(:str, "item"),
              s(:str, "RDF")))),
        s(:def, :test_rdf_li,
          s(:args),
          s(:begin,
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "<channel rdf:about=\"http://example.com/\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <image rdf:resource=\"http://example.com/hoge.png\" />\n"),
                  s(:str, "  <items>\n"),
                  s(:str, "    <rdf:Seq>\n"),
                  s(:str, "      <rdf:li \#{rdf_li_attr}/>\n"),
                  s(:str, "    </rdf:Seq>\n"),
                  s(:str, "  </items>\n"),
                  s(:str, "  <textinput rdf:resource=\"http://example.com/search\" />\n"),
                  s(:str, "</channel>\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n")))),
            s(:lvasgn, :source,
              s(:block,
                s(:send,
                  s(:const, nil, :Proc), :new),
                s(:args,
                  s(:arg, :rdf_li_attr)),
                s(:send, nil, :eval,
                  s(:dstr,
                    s(:str, "%Q["),
                    s(:begin,
                      s(:lvar, :rss)),
                    s(:str, "]")),
                  s(:send, nil, :binding)))),
            s(:lvasgn, :attr,
              s(:str, "resource=\"http://example.com/hoge\"")),
            s(:send, nil, :assert_parse,
              s(:send,
                s(:lvar, :source), :call,
                s(:lvar, :attr)),
              s(:sym, :nothing_raised)),
            s(:lvasgn, :attr,
              s(:str, "rdf:resource=\"http://example.com/hoge\"")),
            s(:send, nil, :assert_parse,
              s(:send,
                s(:lvar, :source), :call,
                s(:lvar, :attr)),
              s(:sym, :nothing_raised)),
            s(:send, nil, :assert_parse,
              s(:send,
                s(:lvar, :source), :call,
                s(:str, "")),
              s(:sym, :missing_attribute),
              s(:str, "li"),
              s(:str, "resource")))),
        s(:def, :test_image,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "<image>\n"),
                  s(:str, "</image>\n"))),
              s(:sym, :missing_attribute),
              s(:str, "image"),
              s(:str, "rdf:about")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "<image rdf:about=\"http://example.com/hoge.png\">\n"),
                  s(:str, "</image>\n"))),
              s(:sym, :missing_tag),
              s(:str, "title"),
              s(:str, "image")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "<image rdf:about=\"http://example.com/hoge.png\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "</image>\n"))),
              s(:sym, :missing_tag),
              s(:str, "url"),
              s(:str, "image")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "<image rdf:about=\"http://example.com/hoge.png\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <url>http://example.com/hoge.png</url>\n"),
                  s(:str, "</image>\n"))),
              s(:sym, :missing_tag),
              s(:str, "link"),
              s(:str, "image")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "<image rdf:about=\"http://example.com/hoge.png\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <url>http://example.com/hoge.png</url>\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "</image>\n"))),
              s(:sym, :missing_tag),
              s(:str, "item"),
              s(:str, "RDF")),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "<image rdf:about=\"http://example.com/hoge.png\">\n"),
                  s(:str, "  <link>http://example.com/</link>\n"),
                  s(:str, "  <url>http://example.com/hoge.png</url>\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "</image>\n")))),
            s(:block,
              s(:send, nil, :assert_missing_tag,
                s(:str, "item"),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss))),
            s(:block,
              s(:send, nil, :assert_missing_tag,
                s(:str, "item"),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:send,
                  s(:const, nil, :Parser), :parse,
                  s(:lvar, :rss),
                  s(:false)), :validate)))),
        s(:def, :test_item,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "<item>\n"),
                  s(:str, "</item>\n"))),
              s(:sym, :missing_attribute),
              s(:str, "item"),
              s(:str, "rdf:about")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "<item rdf:about=\"http://example.com/hoge.html\">\n"),
                  s(:str, "</item>\n"))),
              s(:sym, :missing_tag),
              s(:str, "title"),
              s(:str, "item")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "<item rdf:about=\"http://example.com/hoge.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "</item>\n"))),
              s(:sym, :missing_tag),
              s(:str, "link"),
              s(:str, "item")),
            s(:block,
              s(:send, nil, :assert_too_much_tag,
                s(:str, "title"),
                s(:str, "item")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:send, nil, :make_RDF,
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :make_channel)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_image)),
                    s(:str, "\n"),
                    s(:str, "<item rdf:about=\"http://example.com/hoge.html\">\n"),
                    s(:str, "  <title>hoge</title>\n"),
                    s(:str, "  <title>hoge</title>\n"),
                    s(:str, "  <link>http://example.com/hoge.html</link>\n"),
                    s(:str, "</item>\n"))))),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "<item rdf:about=\"http://example.com/hoge.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/hoge.html</link>\n"),
                  s(:str, "</item>\n"))),
              s(:sym, :nothing_raised)),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "<item rdf:about=\"http://example.com/hoge.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <link>http://example.com/hoge.html</link>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "</item>\n"))),
              s(:sym, :nothing_raised)))),
        s(:def, :test_textinput,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<textinput>\n"),
                  s(:str, "</textinput>\n"))),
              s(:sym, :missing_attribute),
              s(:str, "textinput"),
              s(:str, "rdf:about")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<textinput rdf:about=\"http://example.com/search.html\">\n"),
                  s(:str, "</textinput>\n"))),
              s(:sym, :missing_tag),
              s(:str, "title"),
              s(:str, "textinput")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<textinput rdf:about=\"http://example.com/search.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "</textinput>\n"))),
              s(:sym, :missing_tag),
              s(:str, "description"),
              s(:str, "textinput")),
            s(:block,
              s(:send, nil, :assert_too_much_tag,
                s(:str, "title"),
                s(:str, "textinput")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:send, nil, :make_RDF,
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :make_channel)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_image)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_item)),
                    s(:str, "\n"),
                    s(:str, "<textinput rdf:about=\"http://example.com/search.html\">\n"),
                    s(:str, "  <title>hoge</title>\n"),
                    s(:str, "  <title>hoge</title>\n"),
                    s(:str, "  <description>hogehoge</description>\n"),
                    s(:str, "</textinput>\n"))))),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<textinput rdf:about=\"http://example.com/search.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "</textinput>\n"))),
              s(:sym, :missing_tag),
              s(:str, "name"),
              s(:str, "textinput")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<textinput rdf:about=\"http://example.com/search.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <name>key</name>\n"),
                  s(:str, "</textinput>\n"))),
              s(:sym, :missing_tag),
              s(:str, "link"),
              s(:str, "textinput")),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<textinput rdf:about=\"http://example.com/search.html\">\n"),
                  s(:str, "  <title>hoge</title>\n"),
                  s(:str, "  <description>hogehoge</description>\n"),
                  s(:str, "  <name>key</name>\n"),
                  s(:str, "  <link>http://example.com/search.html</link>\n"),
                  s(:str, "</textinput>\n"))),
              s(:sym, :nothing_raised)))),
        s(:def, :test_ignore,
          s(:args),
          s(:begin,
            s(:lvasgn, :name,
              s(:str, "a")),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<"),
                  s(:begin,
                    s(:lvar, :name)),
                  s(:str, "/>\n")))),
            s(:block,
              s(:send, nil, :assert_not_expected_tag,
                s(:lvar, :name),
                s(:const,
                  s(:const,
                    s(:cbase), :RSS), :URI),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss),
                s(:true),
                s(:false))),
            s(:lvasgn, :uri,
              s(:str, "")),
            s(:lvasgn, :name,
              s(:str, "a")),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<"),
                  s(:begin,
                    s(:lvar, :name)),
                  s(:str, " xmlns=\"\"/>\n")))),
            s(:send, nil, :assert_parse,
              s(:lvar, :rss),
              s(:sym, :nothing_raised)),
            s(:block,
              s(:send, nil, :assert_not_expected_tag,
                s(:lvar, :name),
                s(:lvar, :uri),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss),
                s(:true),
                s(:false))),
            s(:lvasgn, :uri,
              s(:str, "http://example.com/")),
            s(:lvasgn, :name,
              s(:str, "a")),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "<x:"),
                  s(:begin,
                    s(:lvar, :name)),
                  s(:str, " xmlns:x=\""),
                  s(:begin,
                    s(:lvar, :uri)),
                  s(:str, "\"/>\n")))),
            s(:send, nil, :assert_parse,
              s(:lvar, :rss),
              s(:sym, :nothing_raised)),
            s(:block,
              s(:send, nil, :assert_not_expected_tag,
                s(:lvar, :name),
                s(:lvar, :uri),
                s(:str, "RDF")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss),
                s(:true),
                s(:false))),
            s(:lvasgn, :uri,
              s(:const,
                s(:const,
                  s(:cbase), :RSS), :URI)),
            s(:lvasgn, :name,
              s(:str, "a")),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image,
                      s(:dstr,
                        s(:str, "<"),
                        s(:begin,
                          s(:lvar, :name)),
                        s(:str, "/>")))),
                  s(:str, "\n")))),
            s(:send, nil, :assert_parse,
              s(:lvar, :rss),
              s(:sym, :nothing_raised)),
            s(:block,
              s(:send, nil, :assert_not_expected_tag,
                s(:lvar, :name),
                s(:lvar, :uri),
                s(:str, "image")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss),
                s(:true),
                s(:false))),
            s(:lvasgn, :uri,
              s(:const, nil, :CONTENT_URI)),
            s(:lvasgn, :name,
              s(:str, "encoded")),
            s(:lvasgn, :elem,
              s(:dstr,
                s(:str, "<"),
                s(:begin,
                  s(:lvar, :name)),
                s(:str, " xmlns='"),
                s(:begin,
                  s(:lvar, :uri)),
                s(:str, "'/>"))),
            s(:lvasgn, :rss,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image,
                      s(:lvar, :elem))),
                  s(:str, "\n")))),
            s(:send, nil, :assert_parse,
              s(:lvar, :rss),
              s(:sym, :nothing_raised)),
            s(:block,
              s(:send, nil, :assert_not_expected_tag,
                s(:lvar, :name),
                s(:lvar, :uri),
                s(:str, "image")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:lvar, :rss),
                s(:true),
                s(:false))))),
        s(:def, :test_unknown_duplicated_element,
          s(:args),
          s(:begin,
            s(:lvasgn, :xmlns,
              s(:hash,
                s(:pair,
                  s(:str, "test"),
                  s(:str, "http://localhost/test")))),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "        "),
                  s(:begin,
                    s(:send, nil, :make_channel,
                      s(:str, "<test:string/>"))),
                  s(:str, "\n"),
                  s(:str, "        "),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "        "),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n")),
                s(:lvar, :xmlns)),
              s(:sym, :nothing_raised)))),
        s(:def, :test_unknown_case_insensitive_duplicated_element,
          s(:args),
          s(:begin,
            s(:lvasgn, :xmlns,
              s(:hash,
                s(:pair,
                  s(:str, "foaf"),
                  s(:str, "http://xmlns.com/foaf/0.1/")),
                s(:pair,
                  s(:str, "dc"),
                  s(:str, "http://purl.org/dc/elements/1.1/")))),
            s(:send, nil, :assert_parse,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:str, "        "),
                  s(:begin,
                    s(:send, nil, :make_channel)),
                  s(:str, "\n"),
                  s(:str, "        "),
                  s(:begin,
                    s(:send, nil, :make_item)),
                  s(:str, "\n"),
                  s(:str, "        "),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:str, "        <foaf:Image rdf:about=\"http://example.com/myself.png\">\n"),
                  s(:str, "          <dc:title>Myself</dc:title>\n"),
                  s(:str, "          <dc:link>http://example.com/</dc:link>\n"),
                  s(:str, "        </foaf:Image>\n")),
                s(:lvar, :xmlns)),
              s(:sym, :nothing_raised))))))))
