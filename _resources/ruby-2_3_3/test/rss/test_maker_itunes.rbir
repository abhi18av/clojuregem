s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/maker")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestMakerITunes),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :test_author,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_maker_itunes_author,
              s(:array,
                s(:str, "channel"))),
            s(:send, nil, :assert_maker_itunes_author,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))))),
        s(:def, :test_block,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_maker_itunes_block,
              s(:array,
                s(:str, "channel"))),
            s(:send, nil, :assert_maker_itunes_block,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))))),
        s(:def, :test_category,
          s(:args),
          s(:send, nil, :assert_maker_itunes_category,
            s(:array,
              s(:str, "channel")))),
        s(:def, :test_image,
          s(:args),
          s(:send, nil, :assert_maker_itunes_image,
            s(:array,
              s(:str, "channel")))),
        s(:def, :test_duration,
          s(:args),
          s(:send, nil, :assert_maker_itunes_duration,
            s(:array,
              s(:str, "items"),
              s(:str, "last")))),
        s(:def, :test_explicit,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_maker_itunes_explicit,
              s(:array,
                s(:str, "channel"))),
            s(:send, nil, :assert_maker_itunes_explicit,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))))),
        s(:def, :test_keywords,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_maker_itunes_keywords,
              s(:array,
                s(:str, "channel"))),
            s(:send, nil, :assert_maker_itunes_keywords,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))))),
        s(:def, :test_new_feed_url,
          s(:args),
          s(:send, nil, :assert_maker_itunes_new_feed_url,
            s(:array,
              s(:str, "channel")))),
        s(:def, :test_owner,
          s(:args),
          s(:send, nil, :assert_maker_itunes_owner,
            s(:array,
              s(:str, "channel")))),
        s(:def, :test_subtitle,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_maker_itunes_subtitle,
              s(:array,
                s(:str, "channel"))),
            s(:send, nil, :assert_maker_itunes_subtitle,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))))),
        s(:def, :test_summary,
          s(:args),
          s(:begin,
            s(:send, nil, :assert_maker_itunes_summary,
              s(:array,
                s(:str, "channel"))),
            s(:send, nil, :assert_maker_itunes_summary,
              s(:array,
                s(:str, "items"),
                s(:str, "last"))))),
        s(:send, nil, :private),
        s(:def, :assert_maker_itunes_author,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:lvasgn, :author,
                s(:str, "John Doe")),
              s(:lvasgn, :rss20,
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:cbase), :RSS), :Maker), :make,
                    s(:str, "rss2.0")),
                  s(:args,
                    s(:arg, :maker)),
                  s(:begin,
                    s(:send, nil, :setup_dummy_channel,
                      s(:lvar, :maker)),
                    s(:send, nil, :setup_dummy_item,
                      s(:lvar, :maker)),
                    s(:lvasgn, :target,
                      s(:send, nil, :chain_reader,
                        s(:lvar, :maker),
                        s(:lvar, :maker_readers))),
                    s(:send,
                      s(:lvar, :target), :itunes_author=,
                      s(:lvar, :author))))),
              s(:lvasgn, :target,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :feed_readers))),
              s(:send, nil, :assert_equal,
                s(:lvar, :author),
                s(:send,
                  s(:lvar, :target), :itunes_author))))),
        s(:def, :_assert_maker_itunes_block,
          s(:args,
            s(:arg, :value),
            s(:arg, :boolean_value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:send,
                    s(:lvar, :target), :itunes_block=,
                    s(:lvar, :value)),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :value),
                    s(:send,
                      s(:lvar, :target), :itunes_block)),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :boolean_value),
                    s(:send,
                      s(:lvar, :target), :itunes_block?))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:if,
              s(:send,
                s(:array,
                  s(:true),
                  s(:false)), :include?,
                s(:lvar, :value)),
              s(:lvasgn, :value,
                s(:if,
                  s(:lvar, :value),
                  s(:str, "yes"),
                  s(:str, "no"))), nil),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :target), :itunes_block)),
            s(:send, nil, :assert_equal,
              s(:lvar, :boolean_value),
              s(:send,
                s(:lvar, :target), :itunes_block?)))),
        s(:def, :assert_maker_itunes_block,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:str, "yes"),
                s(:true),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:str, "Yes"),
                s(:true),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:str, "no"),
                s(:false),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:str, ""),
                s(:false),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:true),
                s(:true),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:false),
                s(:false),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_block,
                s(:nil),
                s(:false),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers))))),
        s(:def, :_assert_maker_itunes_category,
          s(:args,
            s(:arg, :categories),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:block,
                    s(:send,
                      s(:lvar, :categories), :each),
                    s(:args,
                      s(:arg, :category)),
                    s(:begin,
                      s(:lvasgn, :sub_target,
                        s(:send,
                          s(:lvar, :target), :itunes_categories)),
                      s(:if,
                        s(:send,
                          s(:lvar, :category), :is_a?,
                          s(:const, nil, :Array)),
                        s(:block,
                          s(:send,
                            s(:lvar, :category), :each),
                          s(:args,
                            s(:arg, :sub_category)),
                          s(:begin,
                            s(:lvasgn, :sub_target,
                              s(:send,
                                s(:lvar, :sub_target), :new_category)),
                            s(:send,
                              s(:lvar, :sub_target), :text=,
                              s(:lvar, :sub_category)))),
                        s(:send,
                          s(:send,
                            s(:lvar, :sub_target), :new_category), :text=,
                          s(:lvar, :category)))))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:lvasgn, :actual_categories,
              s(:block,
                s(:send,
                  s(:send,
                    s(:lvar, :target), :itunes_categories), :collect),
                s(:args,
                  s(:arg, :category)),
                s(:begin,
                  s(:lvasgn, :cat,
                    s(:send,
                      s(:lvar, :category), :text)),
                  s(:if,
                    s(:send,
                      s(:send,
                        s(:lvar, :category), :itunes_categories), :empty?),
                    s(:lvar, :cat),
                    s(:array,
                      s(:lvar, :cat),
                      s(:splat,
                        s(:block,
                          s(:send,
                            s(:send,
                              s(:lvar, :category), :itunes_categories), :collect),
                          s(:args,
                            s(:arg, :c)),
                          s(:send,
                            s(:lvar, :c), :text)))))))),
            s(:send, nil, :assert_equal,
              s(:lvar, :categories),
              s(:lvar, :actual_categories)))),
        s(:def, :assert_maker_itunes_category,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_category,
                s(:array,
                  s(:str, "Audio Blogs")),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_category,
                s(:array,
                  s(:array,
                    s(:str, "Arts & Entertainment"),
                    s(:str, "Games"))),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_category,
                s(:array,
                  s(:array,
                    s(:str, "Arts & Entertainment"),
                    s(:str, "Games")),
                  s(:array,
                    s(:str, "Technology"),
                    s(:str, "Computers")),
                  s(:str, "Audio Blogs")),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers))))),
        s(:def, :assert_maker_itunes_image,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:lvasgn, :url,
                s(:str, "http://example.com/podcasts/everything/AllAboutEverything.jpg")),
              s(:lvasgn, :rss20,
                s(:block,
                  s(:send,
                    s(:const,
                      s(:const,
                        s(:cbase), :RSS), :Maker), :make,
                    s(:str, "rss2.0")),
                  s(:args,
                    s(:arg, :maker)),
                  s(:begin,
                    s(:send, nil, :setup_dummy_channel,
                      s(:lvar, :maker)),
                    s(:send, nil, :setup_dummy_item,
                      s(:lvar, :maker)),
                    s(:lvasgn, :target,
                      s(:send, nil, :chain_reader,
                        s(:lvar, :maker),
                        s(:lvar, :maker_readers))),
                    s(:send,
                      s(:lvar, :target), :itunes_image=,
                      s(:lvar, :url))))),
              s(:lvasgn, :target,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :feed_readers))),
              s(:send, nil, :assert_not_nil,
                s(:send,
                  s(:lvar, :target), :itunes_image)),
              s(:send, nil, :assert_equal,
                s(:lvar, :url),
                s(:send,
                  s(:send,
                    s(:lvar, :target), :itunes_image), :href))))),
        s(:def, :_assert_maker_itunes_duration,
          s(:args,
            s(:arg, :hour),
            s(:arg, :minute),
            s(:arg, :second),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:send, nil, :_assert_maker_itunes_duration_by_value,
              s(:lvar, :hour),
              s(:lvar, :minute),
              s(:lvar, :second),
              s(:lvar, :value),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)),
            s(:send, nil, :_assert_maker_itunes_duration_by_hour_minute_second,
              s(:lvar, :hour),
              s(:lvar, :minute),
              s(:lvar, :second),
              s(:lvar, :value),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)))),
        s(:def, :_assert_maker_itunes_duration_by,
          s(:args,
            s(:arg, :hour),
            s(:arg, :minute),
            s(:arg, :second),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :expected_value,
              s(:nil)),
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:lvasgn, :expected_value,
                    s(:yield,
                      s(:lvar, :target))),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :expected_value),
                    s(:send,
                      s(:lvar, :target), :itunes_duration)),
                  s(:block,
                    s(:send,
                      s(:lvar, :target), :itunes_duration),
                    s(:args,
                      s(:arg, :duration)),
                    s(:send, nil, :assert_equal,
                      s(:array,
                        s(:lvar, :hour),
                        s(:lvar, :minute),
                        s(:lvar, :second),
                        s(:lvar, :expected_value)),
                      s(:array,
                        s(:send,
                          s(:lvar, :duration), :hour),
                        s(:send,
                          s(:lvar, :duration), :minute),
                        s(:send,
                          s(:lvar, :duration), :second),
                        s(:send,
                          s(:lvar, :duration), :content))))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:lvasgn, :duration,
              s(:send,
                s(:lvar, :target), :itunes_duration)),
            s(:send, nil, :assert_not_nil,
              s(:lvar, :duration)),
            s(:send, nil, :assert_equal,
              s(:array,
                s(:lvar, :hour),
                s(:lvar, :minute),
                s(:lvar, :second),
                s(:lvar, :expected_value)),
              s(:array,
                s(:send,
                  s(:lvar, :duration), :hour),
                s(:send,
                  s(:lvar, :duration), :minute),
                s(:send,
                  s(:lvar, :duration), :second),
                s(:send,
                  s(:lvar, :duration), :content))))),
        s(:def, :_assert_maker_itunes_duration_by_value,
          s(:args,
            s(:arg, :hour),
            s(:arg, :minute),
            s(:arg, :second),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:block,
            s(:send, nil, :_assert_maker_itunes_duration_by,
              s(:lvar, :hour),
              s(:lvar, :minute),
              s(:lvar, :second),
              s(:lvar, :value),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)),
            s(:args,
              s(:arg, :target)),
            s(:begin,
              s(:send,
                s(:lvar, :target), :itunes_duration=,
                s(:lvar, :value)),
              s(:lvar, :value)))),
        s(:def, :_assert_maker_itunes_duration_by_hour_minute_second,
          s(:args,
            s(:arg, :hour),
            s(:arg, :minute),
            s(:arg, :second),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:block,
            s(:send, nil, :_assert_maker_itunes_duration_by,
              s(:lvar, :hour),
              s(:lvar, :minute),
              s(:lvar, :second),
              s(:lvar, :value),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)),
            s(:args,
              s(:arg, :target)),
            s(:begin,
              s(:block,
                s(:send,
                  s(:lvar, :target), :itunes_duration),
                s(:args,
                  s(:arg, :duration)),
                s(:begin,
                  s(:send,
                    s(:lvar, :duration), :hour=,
                    s(:lvar, :hour)),
                  s(:send,
                    s(:lvar, :duration), :minute=,
                    s(:lvar, :minute)),
                  s(:send,
                    s(:lvar, :duration), :second=,
                    s(:lvar, :second)))),
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:lvar, :value), :split,
                      s(:str, ":")), :collect),
                  s(:args,
                    s(:arg, :v)),
                  s(:send,
                    s(:str, "%02d"), :%,
                    s(:send,
                      s(:lvar, :v), :to_i))), :join,
                s(:str, ":"))))),
        s(:def, :_assert_maker_itunes_duration_invalid_value,
          s(:args,
            s(:arg, :value),
            s(:arg, :maker_readers)),
          s(:block,
            s(:send, nil, :assert_raise,
              s(:const, nil, :ArgumentError)),
            s(:args),
            s(:block,
              s(:send,
                s(:const,
                  s(:const,
                    s(:cbase), :RSS), :Maker), :make,
                s(:str, "rss2.0")),
              s(:args,
                s(:arg, :maker)),
              s(:begin,
                s(:send, nil, :setup_dummy_channel,
                  s(:lvar, :maker)),
                s(:send, nil, :setup_dummy_item,
                  s(:lvar, :maker)),
                s(:lvasgn, :target,
                  s(:send, nil, :chain_reader,
                    s(:lvar, :maker),
                    s(:lvar, :maker_readers))),
                s(:send,
                  s(:lvar, :target), :itunes_duration=,
                  s(:lvar, :value)))))),
        s(:def, :assert_maker_itunes_duration,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_duration,
                s(:int, 7),
                s(:int, 14),
                s(:int, 5),
                s(:str, "07:14:05"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_duration,
                s(:int, 7),
                s(:int, 14),
                s(:int, 5),
                s(:str, "7:14:05"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_duration,
                s(:int, 0),
                s(:int, 4),
                s(:int, 55),
                s(:str, "04:55"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_duration,
                s(:int, 0),
                s(:int, 4),
                s(:int, 5),
                s(:str, "4:05"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_duration_invalid_value,
                s(:str, "5"),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_duration_invalid_value,
                s(:str, "09:07:14:05"),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_duration_invalid_value,
                s(:str, "10:5"),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_duration_invalid_value,
                s(:str, "10:03:5"),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_duration_invalid_value,
                s(:str, "10:3:05"),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_duration_invalid_value,
                s(:str, "xx:xx:xx"),
                s(:lvar, :maker_readers))))),
        s(:def, :_assert_maker_itunes_explicit,
          s(:args,
            s(:arg, :explicit),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:send,
                    s(:lvar, :target), :itunes_explicit=,
                    s(:lvar, :value)),
                  s(:send, nil, :assert_equal,
                    s(:lvar, :explicit),
                    s(:send,
                      s(:lvar, :target), :itunes_explicit?))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :target), :itunes_explicit)),
            s(:send, nil, :assert_equal,
              s(:lvar, :explicit),
              s(:send,
                s(:lvar, :target), :itunes_explicit?)))),
        s(:def, :assert_maker_itunes_explicit,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_explicit,
                s(:true),
                s(:str, "yes"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_explicit,
                s(:false),
                s(:str, "clean"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_explicit,
                s(:nil),
                s(:str, "no"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers))))),
        s(:def, :_assert_maker_itunes_keywords,
          s(:args,
            s(:arg, :keywords),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:send, nil, :_assert_maker_itunes_keywords_by_value,
              s(:lvar, :keywords),
              s(:lvar, :value),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)),
            s(:send, nil, :_assert_maker_itunes_keywords_by_keywords,
              s(:lvar, :keywords),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)))),
        s(:def, :_assert_maker_itunes_keywords_by,
          s(:args,
            s(:arg, :keywords),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:yield,
                    s(:lvar, :target))))),
            s(:block,
              s(:send, nil, :assert_nothing_raised),
              s(:args),
              s(:lvasgn, :rss20,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Parser), :parse,
                  s(:send,
                    s(:lvar, :rss20), :to_s)))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :keywords),
              s(:send,
                s(:lvar, :target), :itunes_keywords)))),
        s(:def, :_assert_maker_itunes_keywords_by_value,
          s(:args,
            s(:arg, :keywords),
            s(:arg, :value),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:block,
            s(:send, nil, :_assert_maker_itunes_keywords_by,
              s(:lvar, :keywords),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)),
            s(:args,
              s(:arg, :target)),
            s(:send,
              s(:lvar, :target), :itunes_keywords=,
              s(:lvar, :value)))),
        s(:def, :_assert_maker_itunes_keywords_by_keywords,
          s(:args,
            s(:arg, :keywords),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:block,
            s(:send, nil, :_assert_maker_itunes_keywords_by,
              s(:lvar, :keywords),
              s(:lvar, :maker_readers),
              s(:lvar, :feed_readers)),
            s(:args,
              s(:arg, :target)),
            s(:send,
              s(:lvar, :target), :itunes_keywords=,
              s(:lvar, :keywords)))),
        s(:def, :assert_maker_itunes_keywords,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_keywords,
                s(:array,
                  s(:str, "salt")),
                s(:str, "salt"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_keywords,
                s(:array,
                  s(:str, "salt")),
                s(:str, " salt "),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_keywords,
                s(:array,
                  s(:str, "salt"),
                  s(:str, "pepper"),
                  s(:str, "shaker"),
                  s(:str, "exciting")),
                s(:str, "salt, pepper, shaker, exciting"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_keywords,
                s(:array,
                  s(:str, "metric"),
                  s(:str, "socket"),
                  s(:str, "wrenches"),
                  s(:str, "toolsalt")),
                s(:str, "metric, socket, wrenches, toolsalt"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_keywords,
                s(:array,
                  s(:str, "olitics"),
                  s(:str, "red"),
                  s(:str, "blue"),
                  s(:str, "state")),
                s(:str, "olitics, red, blue, state"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers))))),
        s(:def, :assert_maker_itunes_new_feed_url,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:begin,
            s(:or_asgn,
              s(:lvasgn, :feed_readers),
              s(:lvar, :maker_readers)),
            s(:lvasgn, :url,
              s(:str, "http://newlocation.com/example.rss")),
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:send,
                    s(:lvar, :target), :itunes_new_feed_url=,
                    s(:lvar, :url))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :url),
              s(:send,
                s(:lvar, :target), :itunes_new_feed_url)))),
        s(:def, :_assert_maker_itunes_owner,
          s(:args,
            s(:arg, :name),
            s(:arg, :email),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:lvasgn, :owner,
                    s(:send,
                      s(:lvar, :target), :itunes_owner)),
                  s(:send,
                    s(:lvar, :owner), :itunes_name=,
                    s(:lvar, :name)),
                  s(:send,
                    s(:lvar, :owner), :itunes_email=,
                    s(:lvar, :email))))),
            s(:lvasgn, :owner,
              s(:send,
                s(:send, nil, :chain_reader,
                  s(:lvar, :rss20),
                  s(:lvar, :feed_readers)), :itunes_owner)),
            s(:if,
              s(:and,
                s(:send,
                  s(:lvar, :name), :nil?),
                s(:send,
                  s(:lvar, :email), :nil?)),
              s(:send, nil, :assert_nil,
                s(:lvar, :owner)),
              s(:begin,
                s(:send, nil, :assert_not_nil,
                  s(:lvar, :owner)),
                s(:send, nil, :assert_equal,
                  s(:lvar, :name),
                  s(:send,
                    s(:lvar, :owner), :itunes_name)),
                s(:send, nil, :assert_equal,
                  s(:lvar, :email),
                  s(:send,
                    s(:lvar, :owner), :itunes_email)))))),
        s(:def, :assert_maker_itunes_owner,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_owner,
                s(:str, "John Doe"),
                s(:str, "john.doe@example.com"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:lvasgn, :not_set_name,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:array,
                          s(:str, "maker")), :+,
                        s(:lvar, :maker_readers)), :+,
                      s(:array,
                        s(:str, "itunes_owner")))), :join,
                  s(:str, "."))),
              s(:block,
                s(:send, nil, :assert_not_set_error,
                  s(:lvar, :not_set_name),
                  s(:array,
                    s(:str, "itunes_name"))),
                s(:args),
                s(:send, nil, :_assert_maker_itunes_owner,
                  s(:nil),
                  s(:str, "john.doe@example.com"),
                  s(:lvar, :maker_readers),
                  s(:lvar, :feed_readers))),
              s(:block,
                s(:send, nil, :assert_not_set_error,
                  s(:lvar, :not_set_name),
                  s(:array,
                    s(:str, "itunes_email"))),
                s(:args),
                s(:send, nil, :_assert_maker_itunes_owner,
                  s(:str, "John Doe"),
                  s(:nil),
                  s(:lvar, :maker_readers),
                  s(:lvar, :feed_readers))),
              s(:send, nil, :_assert_maker_itunes_owner,
                s(:nil),
                s(:nil),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers))))),
        s(:def, :_assert_maker_itunes_subtitle,
          s(:args,
            s(:arg, :subtitle),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:send,
                    s(:lvar, :target), :itunes_subtitle=,
                    s(:lvar, :subtitle))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :subtitle),
              s(:send,
                s(:lvar, :target), :itunes_subtitle)))),
        s(:def, :assert_maker_itunes_subtitle,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_subtitle,
                s(:str, "A show about everything"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_subtitle,
                s(:str, "A short primer on table spices"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_subtitle,
                s(:str, "Comparing socket wrenches is fun!"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_subtitle,
                s(:str, "Red + Blue != Purple"),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers))))),
        s(:def, :_assert_maker_itunes_summary,
          s(:args,
            s(:arg, :summary),
            s(:arg, :maker_readers),
            s(:arg, :feed_readers)),
          s(:begin,
            s(:lvasgn, :rss20,
              s(:block,
                s(:send,
                  s(:const,
                    s(:const,
                      s(:cbase), :RSS), :Maker), :make,
                  s(:str, "rss2.0")),
                s(:args,
                  s(:arg, :maker)),
                s(:begin,
                  s(:send, nil, :setup_dummy_channel,
                    s(:lvar, :maker)),
                  s(:send, nil, :setup_dummy_item,
                    s(:lvar, :maker)),
                  s(:lvasgn, :target,
                    s(:send, nil, :chain_reader,
                      s(:lvar, :maker),
                      s(:lvar, :maker_readers))),
                  s(:send,
                    s(:lvar, :target), :itunes_summary=,
                    s(:lvar, :summary))))),
            s(:lvasgn, :target,
              s(:send, nil, :chain_reader,
                s(:lvar, :rss20),
                s(:lvar, :feed_readers))),
            s(:send, nil, :assert_equal,
              s(:lvar, :summary),
              s(:send,
                s(:lvar, :target), :itunes_summary)))),
        s(:def, :assert_maker_itunes_summary,
          s(:args,
            s(:arg, :maker_readers),
            s(:optarg, :feed_readers,
              s(:nil))),
          s(:block,
            s(:send, nil, :_wrap_assertion),
            s(:args),
            s(:begin,
              s(:or_asgn,
                s(:lvasgn, :feed_readers),
                s(:lvar, :maker_readers)),
              s(:send, nil, :_assert_maker_itunes_summary,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:str, "All About Everything is a show about "), :+,
                        s(:str, "everything. Each week we dive into any ")), :+,
                      s(:str, "subject known to man and talk about it ")), :+,
                    s(:str, "as much as we can. Look for our Podcast ")), :+,
                  s(:str, "in the iTunes Music Store")),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_summary,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:str, "This week we talk about salt and pepper "), :+,
                        s(:str, "shakers, comparing and contrasting pour ")), :+,
                      s(:str, "rates, construction materials, and ")), :+,
                    s(:str, "overall aesthetics. Come and join the ")), :+,
                  s(:str, "party!")),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_summary,
                s(:send,
                  s(:send,
                    s(:send,
                      s(:str, "This week we talk about metric vs. old "), :+,
                      s(:str, "english socket wrenches. Which one is ")), :+,
                    s(:str, "better? Do you really need both? Get ")), :+,
                  s(:str, "all of your answers here.")),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)),
              s(:send, nil, :_assert_maker_itunes_summary,
                s(:send,
                  s(:send,
                    s(:str, "This week we talk about surviving in a "), :+,
                    s(:str, "Red state if you're a Blue person. Or ")), :+,
                  s(:str, "vice versa.")),
                s(:lvar, :maker_readers),
                s(:lvar, :feed_readers)))))))))
