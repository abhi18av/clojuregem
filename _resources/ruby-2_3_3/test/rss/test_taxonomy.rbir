s(:begin,
  s(:send, nil, :require,
    s(:str, "cgi")),
  s(:send, nil, :require_relative,
    s(:str, "rss-testcase")),
  s(:send, nil, :require,
    s(:str, "rss/1.0")),
  s(:send, nil, :require,
    s(:str, "rss/2.0")),
  s(:send, nil, :require,
    s(:str, "rss/taxonomy")),
  s(:module,
    s(:const, nil, :RSS),
    s(:class,
      s(:const, nil, :TestTaxonomy),
      s(:const, nil, :TestCase),
      s(:begin,
        s(:def, :setup,
          s(:args),
          s(:begin,
            s(:ivasgn, :@prefix,
              s(:str, "taxo")),
            s(:ivasgn, :@uri,
              s(:str, "http://purl.org/rss/1.0/modules/taxonomy/")),
            s(:ivasgn, :@dc_prefix,
              s(:str, "dc")),
            s(:ivasgn, :@dc_uri,
              s(:str, "http://purl.org/dc/elements/1.1/")),
            s(:ivasgn, :@ns,
              s(:hash,
                s(:pair,
                  s(:ivar, :@prefix),
                  s(:ivar, :@uri)),
                s(:pair,
                  s(:ivar, :@dc_prefix),
                  s(:ivar, :@dc_uri)))),
            s(:ivasgn, :@topics_parents,
              s(:array,
                s(:str, "channel"),
                s(:str, "item"))),
            s(:ivasgn, :@topics_lis,
              s(:array,
                s(:str, "http://meerkat.oreillynet.com/?c=cat23"),
                s(:str, "http://meerkat.oreillynet.com/?c=47"),
                s(:str, "http://dmoz.org/Computers/Data_Formats/Markup_Languages/XML/"))),
            s(:ivasgn, :@topics_node,
              s(:dstr,
                s(:str, "<"),
                s(:begin,
                  s(:ivar, :@prefix)),
                s(:str, ":topics>\n"))),
            s(:send,
              s(:ivar, :@topics_node), :<<,
              s(:str, "  <rdf:Bag>\n")),
            s(:block,
              s(:send,
                s(:ivar, :@topics_lis), :each),
              s(:args,
                s(:arg, :value)),
              s(:begin,
                s(:lvasgn, :resource,
                  s(:send,
                    s(:const, nil, :CGI), :escapeHTML,
                    s(:lvar, :value))),
                s(:send,
                  s(:ivar, :@topics_node), :<<,
                  s(:dstr,
                    s(:str, "    <rdf:li resource=\""),
                    s(:begin,
                      s(:lvar, :resource)),
                    s(:str, "\"/>\n"))))),
            s(:send,
              s(:ivar, :@topics_node), :<<,
              s(:str, "  </rdf:Bag>\n")),
            s(:send,
              s(:ivar, :@topics_node), :<<,
              s(:dstr,
                s(:str, "</"),
                s(:begin,
                  s(:ivar, :@prefix)),
                s(:str, ":topics>"))),
            s(:ivasgn, :@topic_topics_lis,
              s(:array,
                s(:str, "http://meerkat.oreillynet.com/?c=cat23"),
                s(:str, "http://dmoz.org/Computers/Data_Formats/Markup_Languages/SGML/"),
                s(:str, "http://dmoz.org/Computers/Programming/Internet/"))),
            s(:ivasgn, :@topic_contents,
              s(:array,
                s(:hash,
                  s(:pair,
                    s(:sym, :link),
                    s(:str, "http://meerkat.oreillynet.com/?c=cat23")),
                  s(:pair,
                    s(:sym, :title),
                    s(:str, "Data: XML")),
                  s(:pair,
                    s(:sym, :description),
                    s(:str, "A Meerkat channel"))),
                s(:hash,
                  s(:pair,
                    s(:sym, :link),
                    s(:str, "http://dmoz.org/Computers/Data_Formats/Markup_Languages/XML/")),
                  s(:pair,
                    s(:sym, :title),
                    s(:str, "XML")),
                  s(:pair,
                    s(:sym, :subject),
                    s(:str, "XML")),
                  s(:pair,
                    s(:sym, :description),
                    s(:str, "DMOZ category")),
                  s(:pair,
                    s(:sym, :topics),
                    s(:ivar, :@topic_topics_lis))))),
            s(:ivasgn, :@topic_nodes,
              s(:block,
                s(:send,
                  s(:ivar, :@topic_contents), :collect),
                s(:args,
                  s(:arg, :info)),
                s(:begin,
                  s(:lvasgn, :link,
                    s(:send,
                      s(:lvar, :info), :[],
                      s(:sym, :link))),
                  s(:lvasgn, :rv,
                    s(:dstr,
                      s(:str, "<"),
                      s(:begin,
                        s(:ivar, :@prefix)),
                      s(:str, ":topic rdf:about=\""),
                      s(:begin,
                        s(:lvar, :link)),
                      s(:str, "\">\n"))),
                  s(:block,
                    s(:send,
                      s(:lvar, :info), :each),
                    s(:args,
                      s(:arg, :name),
                      s(:arg, :value)),
                    s(:case,
                      s(:lvar, :name),
                      s(:when,
                        s(:sym, :topics),
                        s(:begin,
                          s(:send,
                            s(:lvar, :rv), :<<,
                            s(:dstr,
                              s(:str, "  <"),
                              s(:begin,
                                s(:ivar, :@prefix)),
                              s(:str, ":topics>\n"))),
                          s(:send,
                            s(:lvar, :rv), :<<,
                            s(:str, "    <rdf:Bag>\n")),
                          s(:block,
                            s(:send,
                              s(:lvar, :value), :each),
                            s(:args,
                              s(:arg, :li)),
                            s(:begin,
                              s(:lvasgn, :resource,
                                s(:send,
                                  s(:const, nil, :CGI), :escapeHTML,
                                  s(:lvar, :li))),
                              s(:send,
                                s(:lvar, :rv), :<<,
                                s(:dstr,
                                  s(:str, "      <rdf:li resource=\""),
                                  s(:begin,
                                    s(:lvar, :resource)),
                                  s(:str, "\"/>\n"))))),
                          s(:send,
                            s(:lvar, :rv), :<<,
                            s(:str, "    </rdf:Bag>\n")),
                          s(:send,
                            s(:lvar, :rv), :<<,
                            s(:dstr,
                              s(:str, "  </"),
                              s(:begin,
                                s(:ivar, :@prefix)),
                              s(:str, ":topics>\n"))))),
                      s(:begin,
                        s(:lvasgn, :prefix,
                          s(:begin,
                            s(:if,
                              s(:send,
                                s(:lvar, :name), :==,
                                s(:sym, :link)),
                              s(:ivar, :@prefix),
                              s(:ivar, :@dc_prefix)))),
                        s(:send,
                          s(:lvar, :rv), :<<,
                          s(:dstr,
                            s(:str, "  <"),
                            s(:begin,
                              s(:lvar, :prefix)),
                            s(:str, ":"),
                            s(:begin,
                              s(:lvar, :name)),
                            s(:str, ">"),
                            s(:begin,
                              s(:lvar, :value)),
                            s(:str, "</"),
                            s(:begin,
                              s(:lvar, :prefix)),
                            s(:str, ":"),
                            s(:begin,
                              s(:lvar, :name)),
                            s(:str, ">\n")))))),
                  s(:send,
                    s(:lvar, :rv), :<<,
                    s(:dstr,
                      s(:str, "</"),
                      s(:begin,
                        s(:ivar, :@prefix)),
                      s(:str, ":topic>")))))),
            s(:ivasgn, :@rss_source,
              s(:send, nil, :make_RDF,
                s(:dstr,
                  s(:begin,
                    s(:send, nil, :make_channel,
                      s(:ivar, :@topics_node))),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_image)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_item,
                      s(:ivar, :@topics_node))),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send, nil, :make_textinput)),
                  s(:str, "\n"),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@topic_nodes), :join,
                      s(:str, "\n"))),
                  s(:str, "\n")),
                s(:ivar, :@ns))),
            s(:ivasgn, :@rss,
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss_source))))),
        s(:def, :test_parser,
          s(:args),
          s(:begin,
            s(:block,
              s(:send, nil, :assert_nothing_raised),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:ivar, :@rss_source))),
            s(:block,
              s(:send, nil, :assert_too_much_tag,
                s(:str, "topics"),
                s(:str, "channel")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:send, nil, :make_RDF,
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :make_channel,
                        s(:send,
                          s(:ivar, :@topics_node), :*,
                          s(:int, 2)))),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_item)),
                    s(:str, "\n")),
                  s(:ivar, :@ns)))),
            s(:block,
              s(:send, nil, :assert_too_much_tag,
                s(:str, "topics"),
                s(:str, "item")),
              s(:args),
              s(:send,
                s(:const, nil, :Parser), :parse,
                s(:send, nil, :make_RDF,
                  s(:dstr,
                    s(:begin,
                      s(:send, nil, :make_channel)),
                    s(:str, "\n"),
                    s(:begin,
                      s(:send, nil, :make_item,
                        s(:send,
                          s(:ivar, :@topics_node), :*,
                          s(:int, 2)))),
                    s(:str, "\n")),
                  s(:ivar, :@ns)))))),
        s(:def, :test_accessor,
          s(:args),
          s(:begin,
            s(:lvasgn, :topics,
              s(:send,
                s(:send,
                  s(:ivar, :@rss), :channel), :taxo_topics)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@topics_lis), :sort),
              s(:send,
                s(:block,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:lvar, :topics), :Bag), :lis), :collect),
                  s(:args,
                    s(:arg, :li)),
                  s(:send,
                    s(:lvar, :li), :resource)), :sort)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:ivar, :@topics_lis), :sort),
              s(:send,
                s(:send,
                  s(:lvar, :topics), :resources), :sort)),
            s(:send, nil, :assert_equal,
              s(:send,
                s(:send,
                  s(:ivar, :@rss), :taxo_topics), :first),
              s(:send,
                s(:ivar, :@rss), :taxo_topic)),
            s(:block,
              s(:send,
                s(:ivar, :@topic_contents), :each_with_index),
              s(:args,
                s(:arg, :info),
                s(:arg, :i)),
              s(:begin,
                s(:lvasgn, :topic,
                  s(:send,
                    s(:send,
                      s(:ivar, :@rss), :taxo_topics), :[],
                    s(:lvar, :i))),
                s(:block,
                  s(:send,
                    s(:lvar, :info), :each),
                  s(:args,
                    s(:arg, :name),
                    s(:arg, :value)),
                  s(:case,
                    s(:lvar, :name),
                    s(:when,
                      s(:sym, :link),
                      s(:begin,
                        s(:send, nil, :assert_equal,
                          s(:lvar, :value),
                          s(:send,
                            s(:lvar, :topic), :about)),
                        s(:send, nil, :assert_equal,
                          s(:lvar, :value),
                          s(:send,
                            s(:lvar, :topic), :taxo_link)))),
                    s(:when,
                      s(:sym, :topics),
                      s(:send, nil, :assert_equal,
                        s(:send,
                          s(:lvar, :value), :sort),
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :topic), :taxo_topics), :resources), :sort))),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :value),
                      s(:send,
                        s(:lvar, :topic), :__send__,
                        s(:dstr,
                          s(:str, "dc_"),
                          s(:begin,
                            s(:lvar, :name))))))))))),
        s(:def, :test_to_s,
          s(:args),
          s(:begin,
            s(:block,
              s(:send,
                s(:ivar, :@topics_parents), :each),
              s(:args,
                s(:arg, :parent)),
              s(:begin,
                s(:lvasgn, :meth,
                  s(:str, "taxo_topics_element")),
                s(:send, nil, :assert_equal,
                  s(:ivar, :@topics_node),
                  s(:send,
                    s(:send,
                      s(:ivar, :@rss), :__send__,
                      s(:lvar, :parent)), :__send__,
                    s(:lvar, :meth))))),
            s(:block,
              s(:send,
                s(:ivar, :@topic_nodes), :each_with_index),
              s(:args,
                s(:arg, :node),
                s(:arg, :i)),
              s(:begin,
                s(:lvasgn, :expected_xml,
                  s(:send, nil, :taxo_xmlns_container,
                    s(:lvar, :node))),
                s(:lvasgn, :expected,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:const,
                            s(:const, nil, :REXML), :Document), :new,
                          s(:lvar, :expected_xml)), :root), :elements), :[],
                    s(:int, 1))),
                s(:lvasgn, :actual_xml,
                  s(:send, nil, :taxo_xmlns_container,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:ivar, :@rss), :taxo_topics), :[],
                        s(:lvar, :i)), :to_s,
                      s(:true),
                      s(:str, "")))),
                s(:lvasgn, :actual,
                  s(:send,
                    s(:send,
                      s(:send,
                        s(:send,
                          s(:const,
                            s(:const, nil, :REXML), :Document), :new,
                          s(:lvar, :actual_xml)), :root), :elements), :[],
                    s(:int, 1))),
                s(:lvasgn, :expected_elems,
                  s(:block,
                    s(:send,
                      s(:lvar, :expected), :reject),
                    s(:args,
                      s(:arg, :x)),
                    s(:send,
                      s(:lvar, :x), :is_a?,
                      s(:const,
                        s(:const, nil, :REXML), :Text)))),
                s(:lvasgn, :actual_elems,
                  s(:block,
                    s(:send,
                      s(:lvar, :actual), :reject),
                    s(:args,
                      s(:arg, :x)),
                    s(:send,
                      s(:lvar, :x), :is_a?,
                      s(:const,
                        s(:const, nil, :REXML), :Text)))),
                s(:block,
                  s(:send,
                    s(:lvar, :expected_elems), :sort!),
                  s(:args,
                    s(:arg, :x),
                    s(:arg, :y)),
                  s(:send,
                    s(:send,
                      s(:lvar, :x), :name), :<=>,
                    s(:send,
                      s(:lvar, :y), :name))),
                s(:block,
                  s(:send,
                    s(:lvar, :actual_elems), :sort!),
                  s(:args,
                    s(:arg, :x),
                    s(:arg, :y)),
                  s(:send,
                    s(:send,
                      s(:lvar, :x), :name), :<=>,
                    s(:send,
                      s(:lvar, :y), :name))),
                s(:send, nil, :assert_equal,
                  s(:block,
                    s(:send,
                      s(:lvar, :expected_elems), :collect),
                    s(:args,
                      s(:arg, :x)),
                    s(:send,
                      s(:lvar, :x), :to_s)),
                  s(:block,
                    s(:send,
                      s(:lvar, :actual_elems), :collect),
                    s(:args,
                      s(:arg, :x)),
                    s(:send,
                      s(:lvar, :x), :to_s))),
                s(:send, nil, :assert_equal,
                  s(:send,
                    s(:send,
                      s(:lvar, :expected), :attributes), :sort),
                  s(:send,
                    s(:send,
                      s(:lvar, :actual), :attributes), :sort)))))),
        s(:send, nil, :private),
        s(:def, :taxo_xmlns_container,
          s(:args,
            s(:arg, :content)),
          s(:send, nil, :xmlns_container,
            s(:hash,
              s(:pair,
                s(:ivar, :@prefix),
                s(:ivar, :@uri)),
              s(:pair,
                s(:str, "dc"),
                s(:str, "http://purl.org/dc/elements/1.1/")),
              s(:pair,
                s(:str, "rdf"),
                s(:str, "http://www.w3.org/1999/02/22-rdf-syntax-ns#"))),
            s(:lvar, :content)))))))
