s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :DTrace), :TestCase)),
    s(:module,
      s(:const, nil, :DTrace),
      s(:class,
        s(:const, nil, :TestSingletonFunctionEntry),
        s(:const, nil, :TestCase),
        s(:begin,
          s(:def, :test_entry,
            s(:args),
            s(:begin,
              s(:lvasgn, :probe,
                s(:dstr,
                  s(:str, "ruby$target:::method-entry\n"),
                  s(:str, "/strstr(copyinstr(arg0), \"Foo\") != NULL/\n"),
                  s(:str, "{\n"),
                  s(:str, "  printf(\"%s %s %s %d\\n\", copyinstr(arg0), copyinstr(arg1), copyinstr(arg2), arg3);\n"),
                  s(:str, "}\n"))),
              s(:block,
                s(:send, nil, :trap_probe,
                  s(:lvar, :probe),
                  s(:send, nil, :ruby_program)),
                s(:args,
                  s(:arg, :d_file),
                  s(:arg, :rb_file),
                  s(:arg, :probes)),
                s(:begin,
                  s(:lvasgn, :foo_calls,
                    s(:block,
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:lvar, :probes), :map),
                          s(:args,
                            s(:arg, :line)),
                          s(:send,
                            s(:lvar, :line), :split)), :find_all),
                      s(:args,
                        s(:arg, :row)),
                      s(:and,
                        s(:send,
                          s(:send,
                            s(:lvar, :row), :first), :==,
                          s(:str, "Foo")),
                        s(:send,
                          s(:send,
                            s(:lvar, :row), :[],
                            s(:int, 1)), :==,
                          s(:str, "foo"))))),
                  s(:send, nil, :assert_equal,
                    s(:int, 10),
                    s(:send,
                      s(:lvar, :foo_calls), :length)),
                  s(:lvasgn, :line,
                    s(:str, "2")),
                  s(:block,
                    s(:send,
                      s(:lvar, :foo_calls), :each),
                    s(:args,
                      s(:arg, :f)),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :line),
                      s(:send,
                        s(:lvar, :f), :[],
                        s(:int, 3)))),
                  s(:block,
                    s(:send,
                      s(:lvar, :foo_calls), :each),
                    s(:args,
                      s(:arg, :f)),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :rb_file),
                      s(:send,
                        s(:lvar, :f), :[],
                        s(:int, 2)))))))),
          s(:def, :test_exit,
            s(:args),
            s(:begin,
              s(:lvasgn, :probe,
                s(:dstr,
                  s(:str, "ruby$target:::method-return\n"),
                  s(:str, "{\n"),
                  s(:str, "  printf(\"%s %s %s %d\\n\", copyinstr(arg0), copyinstr(arg1), copyinstr(arg2), arg3);\n"),
                  s(:str, "}\n"))),
              s(:block,
                s(:send, nil, :trap_probe,
                  s(:lvar, :probe),
                  s(:send, nil, :ruby_program)),
                s(:args,
                  s(:arg, :d_file),
                  s(:arg, :rb_file),
                  s(:arg, :probes)),
                s(:begin,
                  s(:lvasgn, :foo_calls,
                    s(:block,
                      s(:send,
                        s(:block,
                          s(:send,
                            s(:lvar, :probes), :map),
                          s(:args,
                            s(:arg, :line)),
                          s(:send,
                            s(:lvar, :line), :split)), :find_all),
                      s(:args,
                        s(:arg, :row)),
                      s(:and,
                        s(:send,
                          s(:send,
                            s(:lvar, :row), :first), :==,
                          s(:str, "Foo")),
                        s(:send,
                          s(:send,
                            s(:lvar, :row), :[],
                            s(:int, 1)), :==,
                          s(:str, "foo"))))),
                  s(:send, nil, :assert_equal,
                    s(:int, 10),
                    s(:send,
                      s(:lvar, :foo_calls), :length)),
                  s(:lvasgn, :line,
                    s(:str, "2")),
                  s(:block,
                    s(:send,
                      s(:lvar, :foo_calls), :each),
                    s(:args,
                      s(:arg, :f)),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :line),
                      s(:send,
                        s(:lvar, :f), :[],
                        s(:int, 3)))),
                  s(:block,
                    s(:send,
                      s(:lvar, :foo_calls), :each),
                    s(:args,
                      s(:arg, :f)),
                    s(:send, nil, :assert_equal,
                      s(:lvar, :rb_file),
                      s(:send,
                        s(:lvar, :f), :[],
                        s(:int, 2)))))))),
          s(:def, :ruby_program,
            s(:args),
            s(:dstr,
              s(:str, "      class Foo\n"),
              s(:str, "\tdef self.foo; end\n"),
              s(:str, "      end\n"),
              s(:str, "      10.times { Foo.foo }\n")))))), nil))
