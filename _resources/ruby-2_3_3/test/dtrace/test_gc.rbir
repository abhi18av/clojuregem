s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :DTrace), :TestCase)),
    s(:module,
      s(:const, nil, :DTrace),
      s(:class,
        s(:const, nil, :TestGC),
        s(:const, nil, :TestCase),
        s(:begin,
          s(:block,
            s(:send,
              s(:array,
                s(:str, "gc-mark-begin"),
                s(:str, "gc-mark-end"),
                s(:str, "gc-sweep-begin"),
                s(:str, "gc-sweep-end")), :each),
            s(:args,
              s(:arg, :probe_name)),
            s(:block,
              s(:send, nil, :define_method,
                s(:dsym,
                  s(:str, "test_"),
                  s(:begin,
                    s(:send,
                      s(:lvar, :probe_name), :gsub,
                      s(:regexp,
                        s(:str, "-"),
                        s(:regopt)),
                      s(:str, "_"))))),
              s(:args),
              s(:begin,
                s(:lvasgn, :probe,
                  s(:dstr,
                    s(:str, "ruby$target:::"),
                    s(:begin,
                      s(:lvar, :probe_name)),
                    s(:str, " { printf(\""),
                    s(:begin,
                      s(:lvar, :probe_name)),
                    s(:str, "\\n\"); }"))),
                s(:block,
                  s(:send, nil, :trap_probe,
                    s(:lvar, :probe),
                    s(:send, nil, :ruby_program)),
                  s(:args,
                    s(:arg, :_),
                    s(:arg, :_),
                    s(:arg, :saw)),
                  s(:send, nil, :assert_operator,
                    s(:send,
                      s(:lvar, :saw), :length),
                    s(:sym, :>),
                    s(:int, 0)))))),
          s(:send, nil, :private),
          s(:def, :ruby_program,
            s(:args),
            s(:str, "100000.times { Object.new }"))))), nil))
