s(:begin,
  s(:send, nil, :require,
    s(:str, "test/unit")),
  s(:send, nil, :require,
    s(:str, "tempfile")),
  s(:if,
    s(:send,
      s(:send,
        s(:const, nil, :Process), :euid), :==,
      s(:int, 0)),
    s(:lvasgn, :ok,
      s(:true)),
    s(:if,
      s(:and,
        s(:and,
          s(:begin,
            s(:lvasgn, :sudo,
              s(:send,
                s(:const, nil, :ENV), :[],
                s(:str, "SUDO")))),
          s(:send,
            s(:send,
              s(:lvar, :sudo), :empty?), :!)),
        s(:begin,
          s(:rescue,
            s(:xstr,
              s(:begin,
                s(:lvar, :sudo)),
              s(:str, " echo ok")),
            s(:resbody, nil, nil,
              s(:false)), nil))),
      s(:lvasgn, :ok,
        s(:true)),
      s(:lvasgn, :ok,
        s(:false)))),
  s(:op_asgn,
    s(:lvasgn, :ok), :&,
    s(:begin,
      s(:rescue,
        s(:xstr,
          s(:str, "dtrace -V")),
        s(:resbody, nil, nil,
          s(:false)), nil))),
  s(:if,
    s(:lvar, :ok),
    s(:module,
      s(:const, nil, :DTrace),
      s(:class,
        s(:const, nil, :TestCase),
        s(:const,
          s(:const,
            s(:const, nil, :Test), :Unit), :TestCase),
        s(:begin,
          s(:casgn, nil, :INCLUDE,
            s(:send,
              s(:const, nil, :File), :expand_path,
              s(:str, ".."),
              s(:send,
                s(:const, nil, :File), :dirname,
                s(:str, "(string)")))),
          s(:def, :trap_probe,
            s(:args,
              s(:arg, :d_program),
              s(:arg, :ruby_program)),
            s(:begin,
              s(:lvasgn, :d,
                s(:send,
                  s(:const, nil, :Tempfile), :new,
                  s(:array,
                    s(:str, "probe"),
                    s(:str, ".d")))),
              s(:send,
                s(:lvar, :d), :write,
                s(:lvar, :d_program)),
              s(:send,
                s(:lvar, :d), :flush),
              s(:lvasgn, :rb,
                s(:send,
                  s(:const, nil, :Tempfile), :new,
                  s(:array,
                    s(:str, "probed"),
                    s(:str, ".rb")))),
              s(:send,
                s(:lvar, :rb), :write,
                s(:lvar, :ruby_program)),
              s(:send,
                s(:lvar, :rb), :flush),
              s(:lvasgn, :d_path,
                s(:send,
                  s(:lvar, :d), :path)),
              s(:lvasgn, :rb_path,
                s(:send,
                  s(:lvar, :rb), :path)),
              s(:case,
                s(:const, nil, :RUBY_PLATFORM),
                s(:when,
                  s(:regexp,
                    s(:str, "solaris"),
                    s(:regopt, :i)),
                  s(:lvasgn, :cmd,
                    s(:array,
                      s(:str, "dtrace"),
                      s(:str, "-b"),
                      s(:str, "8m")))),
                s(:lvasgn, :cmd,
                  s(:array,
                    s(:str, "dtrace")))),
              s(:send,
                s(:lvar, :cmd), :concat,
                s(:array,
                  s(:str, "-q"),
                  s(:str, "-s"),
                  s(:lvar, :d_path),
                  s(:str, "-c"),
                  s(:dstr,
                    s(:begin,
                      s(:send,
                        s(:const, nil, :EnvUtil), :rubybin)),
                    s(:str, " -I"),
                    s(:begin,
                      s(:const, nil, :INCLUDE)),
                    s(:str, " "),
                    s(:begin,
                      s(:lvar, :rb_path))))),
              s(:if,
                s(:lvasgn, :sudo,
                  s(:cvar, :@@sudo)),
                s(:begin,
                  s(:block,
                    s(:send,
                      s(:array,
                        s(:send,
                          s(:const,
                            s(:const, nil, :RbConfig), :CONFIG), :[],
                          s(:str, "LIBPATHENV")),
                        s(:str, "RUBY"),
                        s(:str, "RUBYOPT")), :each),
                    s(:args,
                      s(:arg, :name)),
                    s(:if,
                      s(:and,
                        s(:lvar, :name),
                        s(:lvasgn, :val,
                          s(:send,
                            s(:const, nil, :ENV), :[],
                            s(:lvar, :name)))),
                      s(:send,
                        s(:lvar, :cmd), :unshift,
                        s(:dstr,
                          s(:begin,
                            s(:lvar, :name)),
                          s(:str, "="),
                          s(:begin,
                            s(:lvar, :val)))), nil)),
                  s(:send,
                    s(:lvar, :cmd), :unshift,
                    s(:lvar, :sudo))), nil),
              s(:lvasgn, :probes,
                s(:block,
                  s(:send,
                    s(:const, nil, :IO), :popen,
                    s(:lvar, :cmd),
                    s(:hash,
                      s(:pair,
                        s(:sym, :err),
                        s(:array,
                          s(:sym, :child),
                          s(:sym, :out))))),
                  s(:args,
                    s(:arg, :io)),
                  s(:send,
                    s(:lvar, :io), :readlines))),
              s(:send,
                s(:lvar, :d), :close,
                s(:true)),
              s(:send,
                s(:lvar, :rb), :close,
                s(:true)),
              s(:yield,
                s(:lvar, :d_path),
                s(:lvar, :rb_path),
                s(:lvar, :probes))))))), nil),
  s(:if,
    s(:lvar, :ok),
    s(:send,
      s(:const,
        s(:const, nil, :DTrace), :TestCase), :class_variable_set,
      s(:sym, :@@sudo),
      s(:lvar, :sudo)), nil))
