s(:begin,
  s(:send, nil, :require_relative,
    s(:str, "helper")),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :DTrace), :TestCase)),
    s(:module,
      s(:const, nil, :DTrace),
      s(:class,
        s(:const, nil, :TestMethodCacheClear),
        s(:const, nil, :TestCase),
        s(:begin,
          s(:def, :test_method_cache_clear,
            s(:args),
            s(:block,
              s(:send, nil, :trap_probe,
                s(:send, nil, :probe),
                s(:dstr,
                  s(:str, "        class String; end\n"),
                  s(:str, "        class String; def abc() end end\n"),
                  s(:str, "        class Object; def abc() end end\n"))),
              s(:args,
                s(:arg, :_),
                s(:arg, :rbfile),
                s(:arg, :lines)),
              s(:begin,
                s(:send, nil, :assert_not_includes,
                  s(:lvar, :lines),
                  s(:dstr,
                    s(:str, "String "),
                    s(:begin,
                      s(:lvar, :rbfile)),
                    s(:str, " 1\n"))),
                s(:send, nil, :assert_includes,
                  s(:lvar, :lines),
                  s(:dstr,
                    s(:str, "String "),
                    s(:begin,
                      s(:lvar, :rbfile)),
                    s(:str, " 2\n"))),
                s(:send, nil, :assert_includes,
                  s(:lvar, :lines),
                  s(:dstr,
                    s(:str, "global "),
                    s(:begin,
                      s(:lvar, :rbfile)),
                    s(:str, " 3\n")))))),
          s(:send, nil, :private),
          s(:def, :probe,
            s(:args),
            s(:dstr,
              s(:str, "ruby$target:::method-cache-clear\n"),
              s(:str, "/arg1/\n"),
              s(:str, "{\n"),
              s(:str, "  printf(\"%s %s %d\\n\", copyinstr(arg0), copyinstr(arg1), arg2);\n"),
              s(:str, "}\n")))))), nil))
