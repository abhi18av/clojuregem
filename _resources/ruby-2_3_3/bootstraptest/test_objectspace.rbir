s(:begin,
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  eval(\"\", TOPLEVEL_BINDING)\n"),
      s(:str, "  minobj = ObjectSpace.to_enum(:each_object).min_by {|a| a.object_id }\n"),
      s(:str, "  maxobj = ObjectSpace.to_enum(:each_object).max_by {|a| a.object_id }\n"),
      s(:str, "  (((minobj.object_id-100)..(minobj.object_id+100))+\n"),
      s(:str, "   ((maxobj.object_id-100)..(maxobj.object_id+100))).each {|id|\n"),
      s(:str, "    begin\n"),
      s(:str, "      o = ObjectSpace._id2ref(id)\n"),
      s(:str, "    rescue RangeError\n"),
      s(:str, "      next\n"),
      s(:str, "    end\n"),
      s(:str, "    o.inspect if defined?(o.inspect)\n"),
      s(:str, "  }\n")),
    s(:str, "[ruby-dev:31911]")),
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  ary = (1..10).to_a\n"),
      s(:str, "  ary.permutation(2) {|x|\n"),
      s(:str, "    if x == [1,2]\n"),
      s(:str, "      ObjectSpace.each_object(String) {|s|\n"),
      s(:str, "        s.clear if !s.frozen? && (s.length == 40 || s.length == 80)\n"),
      s(:str, "      }\n"),
      s(:str, "    end\n"),
      s(:str, "  }\n")),
    s(:str, "[ruby-dev:31982]")),
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  ary = (1..100).to_a\n"),
      s(:str, "  ary.permutation(2) {|x|\n"),
      s(:str, "    if x == [1,2]\n"),
      s(:str, "      ObjectSpace.each_object(Array) {|o| o.clear if o == ary && o.object_id != ary.object_id }\n"),
      s(:str, "    end\n"),
      s(:str, "  }\n")),
    s(:str, "[ruby-dev:31985]")),
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  ObjectSpace.define_finalizer(\"\") do\n"),
      s(:str, "    Mutex.new.lock\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-dev:44049]")),
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  ObjectSpace.define_finalizer(\"\") do\n"),
      s(:str, "    Thread.new {}\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-core:37858]")))
