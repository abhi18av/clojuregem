s(:begin,
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "a = []\n"),
      s(:str, "ms = \"a\"..\"k\"\n"),
      s(:str, "(\"A\"..\"Z\").each do |mod|\n"),
      s(:str, "  mod = eval(\"module \#{mod}; self; end\")\n"),
      s(:str, "  ms.each do |meth|\n"),
      s(:str, "    iseq = RubyVM::InstructionSequence.compile(\"module \#{mod}; def \#{meth}; end; end\")\n"),
      s(:str, "    GC.stress = true\n"),
      s(:str, "    iseq.eval\n"),
      s(:str, "    GC.stress = false\n"),
      s(:str, "  end\n"),
      s(:str, "  o = Object.new.extend(mod)\n"),
      s(:str, "  ms.each do |meth|\n"),
      s(:str, "    o.send(meth)\n"),
      s(:str, "  end\n"),
      s(:str, "end\n")),
    s(:str, "[ruby-dev:39453]")),
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "a = []\n"),
      s(:str, "ms = \"a\"..\"k\"\n"),
      s(:str, "(\"A\"..\"Z\").each do |mod|\n"),
      s(:str, "  mod = eval(\"module \#{mod}; self; end\")\n"),
      s(:str, "  ms.each do |meth|\n"),
      s(:str, "    GC.stress = true\n"),
      s(:str, "    mod.module_eval {define_method(meth) {}}\n"),
      s(:str, "    GC.stress = false\n"),
      s(:str, "  end\n"),
      s(:str, "  o = Object.new.extend(mod)\n"),
      s(:str, "  ms.each do |meth|\n"),
      s(:str, "    o.send(meth)\n"),
      s(:str, "  end\n"),
      s(:str, "end\n")),
    s(:str, "[ruby-dev:39453]")))
