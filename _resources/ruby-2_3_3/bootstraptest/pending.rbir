s(:begin,
  s(:send, nil, :assert_equal,
    s(:str, "A"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  class A\n"),
      s(:str, "    @@a = 'A'\n"),
      s(:str, "    def a=(x)\n"),
      s(:str, "      @@a = x\n"),
      s(:str, "    end\n"),
      s(:str, "    def a\n"),
      s(:str, "      @@a\n"),
      s(:str, "    end\n"),
      s(:str, "  end\n"),
      s(:str, "\n"),
      s(:str, "  B = A.dup\n"),
      s(:str, "  B.new.a = 'B'\n"),
      s(:str, "  A.new.a\n")),
    s(:str, "[ruby-core:17019]")),
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  def m\n"),
      s(:str, "    lambda{\n"),
      s(:str, "      proc{\n"),
      s(:str, "        return :ng1\n"),
      s(:str, "      }\n"),
      s(:str, "    }.call.call\n"),
      s(:str, "    :ng2\n"),
      s(:str, "  end\n"),
      s(:str, "\n"),
      s(:str, "  begin\n"),
      s(:str, "    m()\n"),
      s(:str, "  rescue LocalJumpError\n"),
      s(:str, "    :ok\n"),
      s(:str, "  end\n"))),
  s(:send, nil, :assert_normal_exit,
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  r = Range.allocate\n"),
      s(:str, "  def r.<=>(o) true end\n"),
      s(:str, "  r.instance_eval { initialize r, r }\n"),
      s(:str, "  r.inspect\n"))))
