s(:begin,
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  File.unlink('zzz.rb') if File.file?('zzz.rb')\n"),
      s(:str, "  instance_eval do\n"),
      s(:str, "    autoload :ZZZ, './zzz.rb'\n"),
      s(:str, "    begin\n"),
      s(:str, "      ZZZ\n"),
      s(:str, "    rescue LoadError\n"),
      s(:str, "      :ok\n"),
      s(:str, "    end\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-dev:43816]")),
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  open('zzz.rb', 'w') {|f| f.puts '' }\n"),
      s(:str, "  instance_eval do\n"),
      s(:str, "    autoload :ZZZ, './zzz.rb'\n"),
      s(:str, "    begin\n"),
      s(:str, "      ZZZ\n"),
      s(:str, "    rescue NameError\n"),
      s(:str, "      :ok\n"),
      s(:str, "    end\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-dev:43816]")),
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  open('zzz.rb', 'w') {|f| f.puts 'class ZZZ; def self.ok;:ok;end;end'}\n"),
      s(:str, "  instance_eval do\n"),
      s(:str, "    autoload :ZZZ, './zzz.rb'\n"),
      s(:str, "    ZZZ.ok\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-dev:43816]")),
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  open(\"zzz.rb\", \"w\") {|f| f.puts \"class ZZZ; def self.ok;:ok;end;end\"}\n"),
      s(:str, "  autoload :ZZZ, \"./zzz.rb\"\n"),
      s(:str, "  ZZZ.ok\n"))),
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  open(\"zzz.rb\", \"w\") {|f| f.puts \"class ZZZ; def self.ok;:ok;end;end\"}\n"),
      s(:str, "  autoload :ZZZ, \"./zzz.rb\"\n"),
      s(:str, "  require \"./zzz.rb\"\n"),
      s(:str, "  ZZZ.ok\n"))),
  s(:send, nil, :assert_equal,
    s(:str, "okok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  open(\"zzz.rb\", \"w\") {|f| f.puts \"class ZZZ; def self.ok;:ok;end;end\"}\n"),
      s(:str, "  autoload :ZZZ, \"./zzz.rb\"\n"),
      s(:str, "  t1 = Thread.new {ZZZ.ok}\n"),
      s(:str, "  t2 = Thread.new {ZZZ.ok}\n"),
      s(:str, "  [t1.value, t2.value].join\n"))),
  s(:send, nil, :assert_finish,
    s(:int, 5),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  autoload :ZZZ, File.expand_path(__FILE__)\n"),
      s(:str, "  begin\n"),
      s(:str, "    ZZZ\n"),
      s(:str, "  rescue NameError\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-core:21696]")),
  s(:send, nil, :assert_equal,
    s(:str, "A::C"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  open(\"zzz.rb\", \"w\") {}\n"),
      s(:str, "  class A\n"),
      s(:str, "    autoload :C, \"./zzz\"\n"),
      s(:str, "    class C\n"),
      s(:str, "    end\n"),
      s(:str, "    C\n"),
      s(:str, "  end\n"))))
