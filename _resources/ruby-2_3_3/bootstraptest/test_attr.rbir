s(:begin,
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  module M\n"),
      s(:str, "    class A\n"),
      s(:str, "      class << self\n"),
      s(:str, "        attr_accessor :at\n"),
      s(:str, "        def workflow_rule\n"),
      s(:str, "          yield self\n"),
      s(:str, "        end\n"),
      s(:str, "\n"),
      s(:str, "        def eval_str(str)\n"),
      s(:str, "          eval(str)\n"),
      s(:str, "        end\n"),
      s(:str, "      end\n"),
      s(:str, "    end\n"),
      s(:str, "  end\n"),
      s(:str, "  begin\n"),
      s(:str, "    M::A.eval_str(<<-END)\n"),
      s(:str, "    workflow_rule do |r|\n"),
      s(:str, "      r.at 1\n"),
      s(:str, "    end\n"),
      s(:str, "    END\n"),
      s(:str, "  rescue ArgumentError => e\n"),
      s(:str, "    print \"ok\"\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-core:14641]")),
  s(:send, nil, :assert_equal,
    s(:str, "ok"),
    s(:dstr,
      s(:str, "\n"),
      s(:str, "  class A\n"),
      s(:str, "    attr :m\n"),
      s(:str, "  end\n"),
      s(:str, "  begin\n"),
      s(:str, "    A.new.m(3)\n"),
      s(:str, "  rescue ArgumentError => e\n"),
      s(:str, "    print \"ok\"\n"),
      s(:str, "  end\n")),
    s(:str, "[ruby-core:15120]")))
