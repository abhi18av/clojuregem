s(:begin,
  s(:gvasgn, :$last,
    s(:float, 42.0)),
  s(:def, :gen_random,
    s(:args,
      s(:arg, :max),
      s(:optarg, :im,
        s(:int, 139968)),
      s(:optarg, :ia,
        s(:int, 3877)),
      s(:optarg, :ic,
        s(:int, 29573))),
    s(:send,
      s(:begin,
        s(:send,
          s(:lvar, :max), :*,
          s(:begin,
            s(:gvasgn, :$last,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:gvar, :$last), :*,
                      s(:lvar, :ia)), :+,
                    s(:lvar, :ic))), :%,
                s(:lvar, :im)))))), :/,
      s(:lvar, :im))),
  s(:lvasgn, :alu,
    s(:send,
      s(:send,
        s(:send,
          s(:send,
            s(:send,
              s(:send,
                s(:str, "GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG"), :+,
                s(:str, "GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA")), :+,
              s(:str, "CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT")), :+,
            s(:str, "ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA")), :+,
          s(:str, "GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG")), :+,
        s(:str, "AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC")), :+,
      s(:str, "AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA"))),
  s(:lvasgn, :iub,
    s(:array,
      s(:array,
        s(:str, "a"),
        s(:float, 0.27)),
      s(:array,
        s(:str, "c"),
        s(:float, 0.12)),
      s(:array,
        s(:str, "g"),
        s(:float, 0.12)),
      s(:array,
        s(:str, "t"),
        s(:float, 0.27)),
      s(:array,
        s(:str, "B"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "D"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "H"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "K"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "M"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "N"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "R"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "S"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "V"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "W"),
        s(:float, 0.02)),
      s(:array,
        s(:str, "Y"),
        s(:float, 0.02)))),
  s(:lvasgn, :homosapiens,
    s(:array,
      s(:array,
        s(:str, "a"),
        s(:float, 0.302954942668)),
      s(:array,
        s(:str, "c"),
        s(:float, 0.1979883004921)),
      s(:array,
        s(:str, "g"),
        s(:float, 0.1975473066391)),
      s(:array,
        s(:str, "t"),
        s(:float, 0.3015094502008)))),
  s(:def, :make_repeat_fasta,
    s(:args,
      s(:arg, :id),
      s(:arg, :desc),
      s(:arg, :src),
      s(:arg, :n)),
    s(:begin,
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, ">"),
          s(:begin,
            s(:lvar, :id)),
          s(:str, " "),
          s(:begin,
            s(:lvar, :desc)))),
      s(:lvasgn, :v,
        s(:nil)),
      s(:lvasgn, :width,
        s(:int, 60)),
      s(:lvasgn, :l,
        s(:send,
          s(:lvar, :src), :length)),
      s(:lvasgn, :s,
        s(:send,
          s(:lvar, :src), :*,
          s(:begin,
            s(:send,
              s(:begin,
                s(:send,
                  s(:lvar, :n), :/,
                  s(:lvar, :l))), :+,
              s(:int, 1))))),
      s(:send,
        s(:lvar, :s), :slice!,
        s(:lvar, :n),
        s(:lvar, :l)),
      s(:send, nil, :puts,
        s(:send,
          s(:send,
            s(:lvar, :s), :scan,
            s(:regexp,
              s(:str, ".{1,"),
              s(:begin,
                s(:lvar, :width)),
              s(:str, "}"),
              s(:regopt))), :join,
          s(:str, "\n"))))),
  s(:def, :make_random_fasta,
    s(:args,
      s(:arg, :id),
      s(:arg, :desc),
      s(:arg, :table),
      s(:arg, :n)),
    s(:begin,
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, ">"),
          s(:begin,
            s(:lvar, :id)),
          s(:str, " "),
          s(:begin,
            s(:lvar, :desc)))),
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :rand),
          s(:lvasgn, :v)),
        s(:array,
          s(:nil),
          s(:nil))),
      s(:lvasgn, :width,
        s(:int, 60)),
      s(:lvasgn, :chunk,
        s(:send,
          s(:int, 1), :*,
          s(:lvar, :width))),
      s(:lvasgn, :prob,
        s(:float, 0.0)),
      s(:block,
        s(:send,
          s(:lvar, :table), :each),
        s(:args,
          s(:arg, :v)),
        s(:send,
          s(:lvar, :v), :[]=,
          s(:int, 1),
          s(:begin,
            s(:op_asgn,
              s(:lvasgn, :prob), :+,
              s(:send,
                s(:lvar, :v), :[],
                s(:int, 1)))))),
      s(:for,
        s(:lvasgn, :i),
        s(:irange,
          s(:int, 1),
          s(:begin,
            s(:send,
              s(:lvar, :n), :/,
              s(:lvar, :width)))),
        s(:send, nil, :puts,
          s(:send,
            s(:block,
              s(:send,
                s(:begin,
                  s(:irange,
                    s(:int, 1),
                    s(:lvar, :width))), :collect),
              s(:args),
              s(:begin,
                s(:lvasgn, :rand,
                  s(:send, nil, :gen_random,
                    s(:float, 1.0))),
                s(:send,
                  s(:block,
                    s(:send,
                      s(:lvar, :table), :find),
                    s(:args,
                      s(:arg, :v)),
                    s(:send,
                      s(:send,
                        s(:lvar, :v), :[],
                        s(:int, 1)), :>,
                      s(:lvar, :rand))), :[],
                  s(:int, 0)))), :join))),
      s(:if,
        s(:send,
          s(:send,
            s(:lvar, :n), :%,
            s(:lvar, :width)), :!=,
          s(:int, 0)),
        s(:send, nil, :puts,
          s(:send,
            s(:block,
              s(:send,
                s(:begin,
                  s(:irange,
                    s(:int, 1),
                    s(:begin,
                      s(:send,
                        s(:lvar, :n), :%,
                        s(:lvar, :width))))), :collect),
              s(:args),
              s(:begin,
                s(:lvasgn, :rand,
                  s(:send, nil, :gen_random,
                    s(:float, 1.0))),
                s(:send,
                  s(:block,
                    s(:send,
                      s(:lvar, :table), :find),
                    s(:args,
                      s(:arg, :v)),
                    s(:send,
                      s(:send,
                        s(:lvar, :v), :[],
                        s(:int, 1)), :>,
                      s(:lvar, :rand))), :[],
                  s(:int, 0)))), :join)), nil))),
  s(:lvasgn, :n,
    s(:send,
      s(:begin,
        s(:or,
          s(:send,
            s(:const, nil, :ARGV), :[],
            s(:int, 0)),
          s(:int, 250000))), :to_i)),
  s(:send, nil, :make_repeat_fasta,
    s(:str, "ONE"),
    s(:str, "Homo sapiens alu"),
    s(:lvar, :alu),
    s(:send,
      s(:lvar, :n), :*,
      s(:int, 2))),
  s(:send, nil, :make_random_fasta,
    s(:str, "TWO"),
    s(:str, "IUB ambiguity codes"),
    s(:lvar, :iub),
    s(:send,
      s(:lvar, :n), :*,
      s(:int, 3))),
  s(:send, nil, :make_random_fasta,
    s(:str, "THREE"),
    s(:str, "Homo sapiens frequency"),
    s(:lvar, :homosapiens),
    s(:send,
      s(:lvar, :n), :*,
      s(:int, 5))))
