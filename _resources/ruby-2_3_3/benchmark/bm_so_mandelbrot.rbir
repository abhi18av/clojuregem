s(:begin,
  s(:lvasgn, :size,
    s(:int, 600)),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "P4\n"),
      s(:begin,
        s(:lvar, :size)),
      s(:str, " "),
      s(:begin,
        s(:lvar, :size)))),
  s(:casgn, nil, :ITER,
    s(:int, 49)),
  s(:casgn, nil, :LIMIT_SQUARED,
    s(:float, 4.0)),
  s(:lvasgn, :byte_acc,
    s(:int, 0)),
  s(:lvasgn, :bit_num,
    s(:int, 0)),
  s(:lvasgn, :count_size,
    s(:send,
      s(:lvar, :size), :-,
      s(:int, 1))),
  s(:for,
    s(:lvasgn, :y),
    s(:irange,
      s(:int, 0),
      s(:lvar, :count_size)),
    s(:for,
      s(:lvasgn, :x),
      s(:irange,
        s(:int, 0),
        s(:lvar, :count_size)),
      s(:begin,
        s(:lvasgn, :zr,
          s(:float, 0.0)),
        s(:lvasgn, :zi,
          s(:float, 0.0)),
        s(:lvasgn, :cr,
          s(:send,
            s(:begin,
              s(:send,
                s(:send,
                  s(:float, 2.0), :*,
                  s(:lvar, :x)), :/,
                s(:lvar, :size))), :-,
            s(:float, 1.5))),
        s(:lvasgn, :ci,
          s(:send,
            s(:begin,
              s(:send,
                s(:send,
                  s(:float, 2.0), :*,
                  s(:lvar, :y)), :/,
                s(:lvar, :size))), :-,
            s(:float, 1.0))),
        s(:lvasgn, :escape,
          s(:false)),
        s(:for,
          s(:lvasgn, :dummy),
          s(:irange,
            s(:int, 0),
            s(:const, nil, :ITER)),
          s(:begin,
            s(:lvasgn, :tr,
              s(:send,
                s(:send,
                  s(:send,
                    s(:lvar, :zr), :*,
                    s(:lvar, :zr)), :-,
                  s(:send,
                    s(:lvar, :zi), :*,
                    s(:lvar, :zi))), :+,
                s(:lvar, :cr))),
            s(:lvasgn, :ti,
              s(:send,
                s(:send,
                  s(:send,
                    s(:int, 2), :*,
                    s(:lvar, :zr)), :*,
                  s(:lvar, :zi)), :+,
                s(:lvar, :ci))),
            s(:masgn,
              s(:mlhs,
                s(:lvasgn, :zr),
                s(:lvasgn, :zi)),
              s(:array,
                s(:lvar, :tr),
                s(:lvar, :ti))),
            s(:if,
              s(:send,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :zr), :*,
                      s(:lvar, :zr)), :+,
                    s(:send,
                      s(:lvar, :zi), :*,
                      s(:lvar, :zi)))), :>,
                s(:const, nil, :LIMIT_SQUARED)),
              s(:begin,
                s(:lvasgn, :escape,
                  s(:true)),
                s(:break)), nil))),
        s(:lvasgn, :byte_acc,
          s(:send,
            s(:begin,
              s(:send,
                s(:lvar, :byte_acc), :<<,
                s(:int, 1))), :|,
            s(:begin,
              s(:if,
                s(:lvar, :escape),
                s(:int, 0),
                s(:int, 1))))),
        s(:op_asgn,
          s(:lvasgn, :bit_num), :+,
          s(:int, 1)),
        s(:if,
          s(:begin,
            s(:send,
              s(:lvar, :bit_num), :==,
              s(:int, 8))),
          s(:begin,
            s(:send, nil, :print,
              s(:send,
                s(:lvar, :byte_acc), :chr)),
            s(:lvasgn, :byte_acc,
              s(:int, 0)),
            s(:lvasgn, :bit_num,
              s(:int, 0))),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :x), :==,
                s(:lvar, :count_size))),
            s(:begin,
              s(:op_asgn,
                s(:lvasgn, :byte_acc), :<<,
                s(:begin,
                  s(:send,
                    s(:int, 8), :-,
                    s(:lvar, :bit_num)))),
              s(:send, nil, :print,
                s(:send,
                  s(:lvar, :byte_acc), :chr)),
              s(:lvasgn, :byte_acc,
                s(:int, 0)),
              s(:lvasgn, :bit_num,
                s(:int, 0))), nil))))))
