s(:begin,
  s(:send, nil, :require,
    s(:str, "benchmark")),
  s(:send, nil, :require,
    s(:str, "rbconfig")),
  s(:gvasgn, :$matzrubyonly,
    s(:false)),
  s(:gvasgn, :$rubyonly,
    s(:false)),
  s(:gvasgn, :$results,
    s(:array)),
  s(:def, :prepare_wc_input,
    s(:args),
    s(:begin,
      s(:lvasgn, :wcinput,
        s(:send,
          s(:const, nil, :File), :join,
          s(:send,
            s(:const, nil, :File), :dirname,
            s(:gvar, :$0)),
          s(:str, "wc.input"))),
      s(:lvasgn, :wcbase,
        s(:send,
          s(:const, nil, :File), :join,
          s(:send,
            s(:const, nil, :File), :dirname,
            s(:gvar, :$0)),
          s(:str, "wc.input.base"))),
      s(:if,
        s(:send,
          s(:const, nil, :FileTest), :exist?,
          s(:lvar, :wcinput)), nil,
        s(:begin,
          s(:lvasgn, :data,
            s(:send,
              s(:const, nil, :File), :read,
              s(:lvar, :wcbase))),
          s(:block,
            s(:send,
              s(:int, 13), :times),
            s(:args),
            s(:send,
              s(:lvar, :data), :<<,
              s(:lvar, :data))),
          s(:block,
            s(:send, nil, :open,
              s(:lvar, :wcinput),
              s(:str, "w")),
            s(:args,
              s(:arg, :f)),
            s(:send,
              s(:lvar, :f), :write,
              s(:lvar, :data))))))),
  s(:send, nil, :prepare_wc_input),
  s(:def, :bm,
    s(:args,
      s(:arg, :file)),
    s(:begin,
      s(:lvasgn, :prog,
        s(:send,
          s(:block,
            s(:send,
              s(:send,
                s(:const, nil, :File), :readlines,
                s(:lvar, :file)), :map),
            s(:args,
              s(:arg, :e)),
            s(:send,
              s(:lvar, :e), :rstrip)), :join,
          s(:str, "\n"))),
      s(:if,
        s(:send,
          s(:lvar, :prog), :empty?),
        s(:return), nil),
      s(:match_with_lvasgn,
        s(:regexp,
          s(:str, "[a-z]+_(.+)\\.rb"),
          s(:regopt)),
        s(:lvar, :file)),
      s(:lvasgn, :bm_name,
        s(:nth_ref, 1)),
      s(:if,
        s(:or,
          s(:gvar, :$rubyonly),
          s(:gvar, :$matzrubyonly)), nil,
        s(:send, nil, :puts,
          s(:str, "-----------------------------------------------------------"))),
      s(:send, nil, :puts,
        s(:dstr,
          s(:begin,
            s(:lvar, :bm_name)),
          s(:str, ": "))),
      s(:if,
        s(:or,
          s(:gvar, :$matzrubyonly),
          s(:gvar, :$rubyonly)), nil,
        s(:send, nil, :puts,
          s(:dstr,
            s(:begin,
              s(:lvar, :prog)),
            s(:str, "\n"),
            s(:str, "--\n")))),
      s(:kwbegin,
        s(:rescue,
          s(:begin,
            s(:lvasgn, :result,
              s(:array,
                s(:lvar, :bm_name))),
            s(:if,
              s(:gvar, :$rubyonly), nil,
              s(:send,
                s(:lvar, :result), :<<,
                s(:send, nil, :matzruby_exec,
                  s(:lvar, :file)))),
            s(:if,
              s(:gvar, :$matzrubyonly), nil,
              s(:send,
                s(:lvar, :result), :<<,
                s(:send, nil, :ruby_exec,
                  s(:lvar, :file)))),
            s(:send,
              s(:gvar, :$results), :<<,
              s(:lvar, :result))),
          s(:resbody,
            s(:array,
              s(:const, nil, :Exception)),
            s(:lvasgn, :e),
            s(:begin,
              s(:send, nil, :puts),
              s(:send, nil, :puts,
                s(:dstr,
                  s(:str, "** benchmark failure: "),
                  s(:begin,
                    s(:lvar, :e)))),
              s(:send, nil, :puts,
                s(:send,
                  s(:lvar, :e), :backtrace)))), nil)))),
  s(:def, :benchmark,
    s(:args,
      s(:arg, :file),
      s(:arg, :bin)),
    s(:begin,
      s(:lvasgn, :m,
        s(:block,
          s(:send,
            s(:const, nil, :Benchmark), :measure),
          s(:args),
          s(:xstr,
            s(:begin,
              s(:lvar, :bin)),
            s(:str, " "),
            s(:begin,
              s(:gvar, :$opts)),
            s(:str, " "),
            s(:begin,
              s(:lvar, :file))))),
      s(:lvasgn, :sec,
        s(:send,
          s(:str, "%.3f"), :%,
          s(:send,
            s(:lvar, :m), :real))),
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, " "),
          s(:begin,
            s(:lvar, :sec)))),
      s(:lvar, :sec))),
  s(:def, :ruby_exec,
    s(:args,
      s(:arg, :file)),
    s(:begin,
      s(:send, nil, :print,
        s(:str, "ruby")),
      s(:send, nil, :benchmark,
        s(:lvar, :file),
        s(:gvar, :$ruby_program)))),
  s(:def, :matzruby_exec,
    s(:args,
      s(:arg, :file)),
    s(:begin,
      s(:send, nil, :print,
        s(:str, "matz")),
      s(:lvasgn, :rubylib,
        s(:send,
          s(:const, nil, :ENV), :[],
          s(:str, "RUBYLIB"))),
      s(:send,
        s(:const, nil, :ENV), :[]=,
        s(:str, "RUBYLIB"),
        s(:str, "")),
      s(:lvasgn, :r,
        s(:send, nil, :benchmark,
          s(:lvar, :file),
          s(:gvar, :$matzruby_program))),
      s(:send,
        s(:const, nil, :ENV), :[]=,
        s(:str, "RUBYLIB"),
        s(:lvar, :rubylib)),
      s(:lvar, :r))),
  s(:if,
    s(:send,
      s(:gvar, :$0), :==,
      s(:str, "(string)")),
    s(:begin,
      s(:block,
        s(:send,
          s(:const, nil, :ARGV), :each),
        s(:args,
          s(:arg, :arg)),
        s(:case,
          s(:lvar, :arg),
          s(:when,
            s(:regexp,
              s(:str, "\\A--ruby=(.+)"),
              s(:regopt)),
            s(:gvasgn, :$ruby_program,
              s(:nth_ref, 1))),
          s(:when,
            s(:regexp,
              s(:str, "\\A--matzruby=(.+)"),
              s(:regopt)),
            s(:gvasgn, :$matzruby_program,
              s(:nth_ref, 1))),
          s(:when,
            s(:regexp,
              s(:str, "\\A--opts=(.+)"),
              s(:regopt)),
            s(:gvasgn, :$opts,
              s(:nth_ref, 1))),
          s(:when,
            s(:regexp,
              s(:str, "\\A(-r|--only-ruby)\\z"),
              s(:regopt)),
            s(:gvasgn, :$rubyonly,
              s(:true))),
          s(:when,
            s(:regexp,
              s(:str, "\\A(-m|--only-matzruby)\\z"),
              s(:regopt)),
            s(:gvasgn, :$matzrubyonly,
              s(:true))), nil)),
      s(:block,
        s(:send,
          s(:const, nil, :ARGV), :delete_if),
        s(:args,
          s(:arg, :arg)),
        s(:match_with_lvasgn,
          s(:regexp,
            s(:str, "\\A-"),
            s(:regopt)),
          s(:lvar, :arg))),
      s(:send, nil, :puts,
        s(:str, "MatzRuby:")),
      s(:send, nil, :system,
        s(:dstr,
          s(:begin,
            s(:gvar, :$matzruby_program)),
          s(:str, " -v"))),
      s(:send, nil, :puts,
        s(:str, "Ruby:")),
      s(:send, nil, :system,
        s(:dstr,
          s(:begin,
            s(:gvar, :$ruby_program)),
          s(:str, " -v"))),
      s(:send, nil, :puts),
      s(:if,
        s(:send,
          s(:const, nil, :ARGV), :empty?),
        s(:block,
          s(:send,
            s(:send,
              s(:send,
                s(:const, nil, :Dir), :glob,
                s(:send,
                  s(:send,
                    s(:const, nil, :File), :dirname,
                    s(:str, "(string)")), :+,
                  s(:str, "/bm_*.rb"))), :sort), :each),
          s(:args,
            s(:arg, :file)),
          s(:send, nil, :bm,
            s(:lvar, :file))),
        s(:block,
          s(:send,
            s(:const, nil, :ARGV), :each),
          s(:args,
            s(:arg, :file)),
          s(:block,
            s(:send,
              s(:const, nil, :Dir), :glob,
              s(:send,
                s(:const, nil, :File), :join,
                s(:send,
                  s(:const, nil, :File), :dirname,
                  s(:str, "(string)")),
                s(:send,
                  s(:lvar, :file), :+,
                  s(:str, "*")))),
            s(:args,
              s(:arg, :ef)),
            s(:send, nil, :bm,
              s(:lvar, :ef))))),
      s(:send, nil, :puts),
      s(:send, nil, :puts,
        s(:str, "-- benchmark summary ---------------------------")),
      s(:block,
        s(:send,
          s(:gvar, :$results), :each),
        s(:args,
          s(:arg, :res)),
        s(:begin,
          s(:send, nil, :print,
            s(:send,
              s(:lvar, :res), :shift),
            s(:str, "\t")),
          s(:block,
            s(:send,
              s(:begin,
                s(:or,
                  s(:lvar, :res),
                  s(:array))), :each),
            s(:args,
              s(:arg, :result)),
            s(:begin,
              s(:match_with_lvasgn,
                s(:regexp,
                  s(:str, "([\\d\\.]+)"),
                  s(:regopt)),
                s(:lvar, :result)),
              s(:if,
                s(:nth_ref, 1),
                s(:send, nil, :print,
                  s(:send,
                    s(:nth_ref, 1), :+,
                    s(:str, "\t"))), nil))),
          s(:send, nil, :puts)))), nil))
