s(:begin,
  s(:def, :eval_A,
    s(:args,
      s(:arg, :i),
      s(:arg, :j)),
    s(:return,
      s(:send,
        s(:float, 1.0), :/,
        s(:begin,
          s(:send,
            s(:send,
              s(:send,
                s(:send,
                  s(:begin,
                    s(:send,
                      s(:lvar, :i), :+,
                      s(:lvar, :j))), :*,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :i), :+,
                        s(:lvar, :j)), :+,
                      s(:int, 1)))), :/,
                s(:int, 2)), :+,
              s(:lvar, :i)), :+,
            s(:int, 1)))))),
  s(:def, :eval_A_times_u,
    s(:args,
      s(:arg, :u)),
    s(:begin,
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :v),
          s(:lvasgn, :i)),
        s(:array,
          s(:nil),
          s(:nil))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:lvar, :u), :length), :-,
                s(:int, 1)))), :collect),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :v,
            s(:int, 0)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:lvar, :u), :length), :-,
                s(:int, 1))),
            s(:op_asgn,
              s(:lvasgn, :v), :+,
              s(:send,
                s(:send, nil, :eval_A,
                  s(:lvar, :i),
                  s(:lvar, :j)), :*,
                s(:send,
                  s(:lvar, :u), :[],
                  s(:lvar, :j))))),
          s(:lvar, :v))))),
  s(:def, :eval_At_times_u,
    s(:args,
      s(:arg, :u)),
    s(:begin,
      s(:masgn,
        s(:mlhs,
          s(:lvasgn, :v),
          s(:lvasgn, :i)),
        s(:array,
          s(:nil),
          s(:nil))),
      s(:block,
        s(:send,
          s(:begin,
            s(:irange,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:lvar, :u), :length), :-,
                s(:int, 1)))), :collect),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :v,
            s(:int, 0)),
          s(:for,
            s(:lvasgn, :j),
            s(:irange,
              s(:int, 0),
              s(:send,
                s(:send,
                  s(:lvar, :u), :length), :-,
                s(:int, 1))),
            s(:op_asgn,
              s(:lvasgn, :v), :+,
              s(:send,
                s(:send, nil, :eval_A,
                  s(:lvar, :j),
                  s(:lvar, :i)), :*,
                s(:send,
                  s(:lvar, :u), :[],
                  s(:lvar, :j))))),
          s(:lvar, :v))))),
  s(:def, :eval_AtA_times_u,
    s(:args,
      s(:arg, :u)),
    s(:return,
      s(:send, nil, :eval_At_times_u,
        s(:send, nil, :eval_A_times_u,
          s(:lvar, :u))))),
  s(:lvasgn, :n,
    s(:int, 500)),
  s(:lvasgn, :u,
    s(:send,
      s(:array,
        s(:int, 1)), :*,
      s(:lvar, :n))),
  s(:for,
    s(:lvasgn, :i),
    s(:irange,
      s(:int, 1),
      s(:int, 10)),
    s(:begin,
      s(:lvasgn, :v,
        s(:send, nil, :eval_AtA_times_u,
          s(:lvar, :u))),
      s(:lvasgn, :u,
        s(:send, nil, :eval_AtA_times_u,
          s(:lvar, :v))))),
  s(:lvasgn, :vBv,
    s(:int, 0)),
  s(:lvasgn, :vv,
    s(:int, 0)),
  s(:for,
    s(:lvasgn, :i),
    s(:irange,
      s(:int, 0),
      s(:send,
        s(:lvar, :n), :-,
        s(:int, 1))),
    s(:begin,
      s(:op_asgn,
        s(:lvasgn, :vBv), :+,
        s(:send,
          s(:send,
            s(:lvar, :u), :[],
            s(:lvar, :i)), :*,
          s(:send,
            s(:lvar, :v), :[],
            s(:lvar, :i)))),
      s(:op_asgn,
        s(:lvasgn, :vv), :+,
        s(:send,
          s(:send,
            s(:lvar, :v), :[],
            s(:lvar, :i)), :*,
          s(:send,
            s(:lvar, :v), :[],
            s(:lvar, :i)))))),
  s(:lvasgn, :str,
    s(:array,
      s(:send,
        s(:str, "%0.9f"), :%,
        s(:begin,
          s(:send,
            s(:const, nil, :Math), :sqrt,
            s(:send,
              s(:lvar, :vBv), :/,
              s(:lvar, :vv))))),
      s(:str, "\n"))))
