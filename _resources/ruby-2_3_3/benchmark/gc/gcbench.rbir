s(:begin,
  s(:send, nil, :require,
    s(:str, "benchmark")),
  s(:send, nil, :require,
    s(:str, "pp")),
  s(:send, nil, :require,
    s(:str, "optparse")),
  s(:gvasgn, :$list,
    s(:true)),
  s(:gvasgn, :$gcprof,
    s(:true)),
  s(:lvasgn, :opt,
    s(:send,
      s(:const, nil, :OptionParser), :new)),
  s(:block,
    s(:send,
      s(:lvar, :opt), :on,
      s(:str, "-q")),
    s(:args),
    s(:gvasgn, :$list,
      s(:false))),
  s(:block,
    s(:send,
      s(:lvar, :opt), :on,
      s(:str, "-d")),
    s(:args),
    s(:gvasgn, :$gcprof,
      s(:false))),
  s(:send,
    s(:lvar, :opt), :parse!,
    s(:const, nil, :ARGV)),
  s(:lvasgn, :script,
    s(:send,
      s(:const, nil, :File), :join,
      s(:send,
        s(:const, nil, :File), :dirname,
        s(:str, "(string)")),
      s(:send,
        s(:const, nil, :ARGV), :shift))),
  s(:if,
    s(:send,
      s(:const, nil, :FileTest), :exist?,
      s(:lvar, :script)), nil,
    s(:op_asgn,
      s(:lvasgn, :script), :+,
      s(:str, ".rb"))),
  s(:if,
    s(:send,
      s(:const, nil, :FileTest), :exist?,
      s(:lvar, :script)), nil,
    s(:send, nil, :raise,
      s(:dstr,
        s(:begin,
          s(:lvar, :script)),
        s(:str, " not found")))),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Script: "),
      s(:begin,
        s(:lvar, :script)))),
  s(:if,
    s(:gvar, :$gcprof),
    s(:send,
      s(:const,
        s(:const, nil, :GC), :Profiler), :enable), nil),
  s(:lvasgn, :tms,
    s(:block,
      s(:send,
        s(:const, nil, :Benchmark), :measure),
      s(:args,
        s(:arg, :x)),
      s(:send, nil, :load,
        s(:lvar, :script)))),
  s(:lvasgn, :gc_time,
    s(:int, 0)),
  s(:if,
    s(:gvar, :$gcprof),
    s(:begin,
      s(:lvasgn, :gc_time,
        s(:send,
          s(:const,
            s(:const, nil, :GC), :Profiler), :total_time)),
      s(:if,
        s(:and,
          s(:gvar, :$list),
          s(:send,
            s(:const, nil, :RUBY_VERSION), :>=,
            s(:str, "2.0.0"))),
        s(:send,
          s(:const,
            s(:const, nil, :GC), :Profiler), :report), nil),
      s(:send,
        s(:const,
          s(:const, nil, :GC), :Profiler), :disable)), nil),
  s(:send, nil, :pp,
    s(:send,
      s(:const, nil, :GC), :stat)),
  s(:if,
    s(:defined?,
      s(:const,
        s(:const, nil, :GC), :OPTS)),
    s(:send, nil, :puts,
      s(:dstr,
        s(:begin,
          s(:const, nil, :RUBY_DESCRIPTION)),
        s(:str, " "),
        s(:begin,
          s(:send,
            s(:const,
              s(:const, nil, :GC), :OPTS), :inspect)))), nil),
  s(:lvasgn, :desc,
    s(:dstr,
      s(:begin,
        s(:const, nil, :RUBY_VERSION)),
      s(:begin,
        s(:if,
          s(:send,
            s(:const, nil, :RUBY_PATCHLEVEL), :>=,
            s(:int, 0)),
          s(:dstr,
            s(:str, "p"),
            s(:begin,
              s(:const, nil, :RUBY_PATCHLEVEL))),
          s(:str, "dev"))))),
  s(:lvasgn, :name,
    s(:send,
      s(:const, nil, :File), :basename,
      s(:lvar, :script),
      s(:str, ".rb"))),
  s(:send, nil, :puts),
  s(:send, nil, :puts,
    s(:lvar, :script)),
  s(:send, nil, :puts,
    s(:const,
      s(:const, nil, :Benchmark), :CAPTION)),
  s(:send, nil, :puts,
    s(:lvar, :tms)),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "GC total time (sec): "),
      s(:begin,
        s(:lvar, :gc_time)))),
  s(:if,
    s(:and,
      s(:send,
        s(:const, nil, :File), :exist?,
        s(:str, "/proc/self/status")),
      s(:match_with_lvasgn,
        s(:regexp,
          s(:str, "VmHWM:\\s*(\\d+.+)"),
          s(:regopt)),
        s(:send,
          s(:const, nil, :File), :read,
          s(:str, "/proc/self/status")))),
    s(:begin,
      s(:send, nil, :puts),
      s(:send, nil, :puts,
        s(:dstr,
          s(:str, "VmHWM: "),
          s(:begin,
            s(:send,
              s(:nth_ref, 1), :chomp))))), nil),
  s(:send, nil, :puts),
  s(:send, nil, :puts,
    s(:dstr,
      s(:str, "Summary of "),
      s(:begin,
        s(:lvar, :name)),
      s(:str, " on "),
      s(:begin,
        s(:lvar, :desc)),
      s(:str, "\t"),
      s(:begin,
        s(:send,
          s(:lvar, :tms), :real)),
      s(:str, "\t"),
      s(:begin,
        s(:lvar, :gc_time)),
      s(:str, "\t"),
      s(:begin,
        s(:send,
          s(:const, nil, :GC), :count)))),
  s(:send, nil, :puts,
    s(:str, "         (real time in sec, GC time in sec, GC count)")))
