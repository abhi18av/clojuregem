s(:begin,
  s(:def, :print,
    s(:args,
      s(:restarg, :args)), nil),
  s(:class,
    s(:const, nil, :Rotation), nil,
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :start_masks)),
      s(:cvasgn, :@@rotation_even_adder,
        s(:hash,
          s(:pair,
            s(:sym, :west),
            s(:int, -1)),
          s(:pair,
            s(:sym, :east),
            s(:int, 1)),
          s(:pair,
            s(:sym, :nw),
            s(:int, -7)),
          s(:pair,
            s(:sym, :ne),
            s(:int, -6)),
          s(:pair,
            s(:sym, :sw),
            s(:int, 5)),
          s(:pair,
            s(:sym, :se),
            s(:int, 6)))),
      s(:cvasgn, :@@rotation_odd_adder,
        s(:hash,
          s(:pair,
            s(:sym, :west),
            s(:int, -1)),
          s(:pair,
            s(:sym, :east),
            s(:int, 1)),
          s(:pair,
            s(:sym, :nw),
            s(:int, -6)),
          s(:pair,
            s(:sym, :ne),
            s(:int, -5)),
          s(:pair,
            s(:sym, :sw),
            s(:int, 6)),
          s(:pair,
            s(:sym, :se),
            s(:int, 7)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :directions)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:ivasgn, :@even_offsets),
              s(:ivasgn, :@odd_offsets)),
            s(:send, nil, :normalize_offsets,
              s(:send, nil, :get_values,
                s(:lvar, :directions)))),
          s(:ivasgn, :@even_mask,
            s(:send, nil, :mask_for_offsets,
              s(:ivar, :@even_offsets))),
          s(:ivasgn, :@odd_mask,
            s(:send, nil, :mask_for_offsets,
              s(:ivar, :@odd_offsets))),
          s(:ivasgn, :@start_masks,
            s(:send,
              s(:const, nil, :Array), :new,
              s(:int, 60))),
          s(:block,
            s(:send,
              s(:int, 0), :upto,
              s(:int, 59)),
            s(:args,
              s(:arg, :offset)),
            s(:begin,
              s(:lvasgn, :mask,
                s(:if,
                  s(:send, nil, :is_even,
                    s(:lvar, :offset)),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@even_mask), :<<,
                      s(:lvar, :offset))),
                  s(:begin,
                    s(:send,
                      s(:ivar, :@odd_mask), :<<,
                      s(:lvar, :offset))))),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:send,
                        s(:send, nil, :blank_board), :&,
                        s(:lvar, :mask)), :==,
                      s(:int, 0)),
                    s(:send,
                      s(:send, nil, :prunable,
                        s(:send,
                          s(:send, nil, :blank_board), :|,
                          s(:lvar, :mask)),
                        s(:int, 0),
                        s(:true)), :!))),
                s(:begin,
                  s(:lvasgn, :imask,
                    s(:send, nil, :compute_required,
                      s(:lvar, :mask),
                      s(:lvar, :offset))),
                  s(:send,
                    s(:ivar, :@start_masks), :[]=,
                    s(:lvar, :offset),
                    s(:array,
                      s(:lvar, :mask),
                      s(:lvar, :imask),
                      s(:send,
                        s(:lvar, :imask), :|,
                        s(:lvar, :mask))))),
                s(:send,
                  s(:ivar, :@start_masks), :[]=,
                  s(:lvar, :offset),
                  s(:false))))))),
      s(:def, :compute_required,
        s(:args,
          s(:arg, :mask),
          s(:arg, :offset)),
        s(:begin,
          s(:lvasgn, :board,
            s(:send, nil, :blank_board)),
          s(:block,
            s(:send,
              s(:int, 0), :upto,
              s(:lvar, :offset)),
            s(:args,
              s(:arg, :i)),
            s(:op_asgn,
              s(:lvasgn, :board), :|,
              s(:send,
                s(:int, 1), :<<,
                s(:lvar, :i)))),
          s(:op_asgn,
            s(:lvasgn, :board), :|,
            s(:lvar, :mask)),
          s(:if,
            s(:begin,
              s(:send,
                s(:send, nil, :prunable,
                  s(:send,
                    s(:lvar, :board), :|,
                    s(:lvar, :mask)),
                  s(:lvar, :offset)), :!)),
            s(:return,
              s(:int, 0)), nil),
          s(:lvasgn, :board,
            s(:send, nil, :flood_fill,
              s(:lvar, :board),
              s(:int, 58))),
          s(:lvasgn, :count,
            s(:int, 0)),
          s(:lvasgn, :imask,
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:int, 0), :upto,
              s(:int, 59)),
            s(:args,
              s(:arg, :i)),
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :board), :[],
                    s(:lvar, :i)), :==,
                  s(:int, 0))),
              s(:begin,
                s(:op_asgn,
                  s(:lvasgn, :imask), :|,
                  s(:begin,
                    s(:send,
                      s(:int, 1), :<<,
                      s(:lvar, :i)))),
                s(:op_asgn,
                  s(:lvasgn, :count), :+,
                  s(:int, 1))), nil)),
          s(:if,
            s(:begin,
              s(:and,
                s(:send,
                  s(:lvar, :count), :>,
                  s(:int, 0)),
                s(:send,
                  s(:lvar, :count), :<,
                  s(:int, 5)))),
            s(:lvar, :imask),
            s(:int, 0)))),
      s(:def, :flood_fill,
        s(:args,
          s(:arg, :board),
          s(:arg, :location)),
        s(:begin,
          s(:if,
            s(:begin,
              s(:send,
                s(:send,
                  s(:lvar, :board), :[],
                  s(:lvar, :location)), :==,
                s(:int, 1))),
            s(:return,
              s(:lvar, :board)), nil),
          s(:op_asgn,
            s(:lvasgn, :board), :|,
            s(:send,
              s(:int, 1), :<<,
              s(:lvar, :location))),
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :row),
              s(:lvasgn, :col)),
            s(:send,
              s(:lvar, :location), :divmod,
              s(:int, 6))),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :col), :>,
                s(:int, 0))),
            s(:lvasgn, :board,
              s(:send, nil, :flood_fill,
                s(:lvar, :board),
                s(:send,
                  s(:lvar, :location), :-,
                  s(:int, 1)))), nil),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :col), :<,
                s(:int, 4))),
            s(:lvasgn, :board,
              s(:send, nil, :flood_fill,
                s(:lvar, :board),
                s(:send,
                  s(:lvar, :location), :+,
                  s(:int, 1)))), nil),
          s(:if,
            s(:begin,
              s(:send,
                s(:send,
                  s(:lvar, :row), :%,
                  s(:int, 2)), :==,
                s(:int, 0))),
            s(:begin,
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :col), :>,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :row), :>,
                      s(:int, 0)))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :-,
                      s(:int, 7)))), nil),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :row), :>,
                    s(:int, 0))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :-,
                      s(:int, 6)))), nil),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :row), :<,
                    s(:int, 9))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :+,
                      s(:int, 6)))), nil),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :col), :>,
                      s(:int, 0)),
                    s(:send,
                      s(:lvar, :row), :<,
                      s(:int, 9)))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :+,
                      s(:int, 5)))), nil)),
            s(:begin,
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :col), :<,
                      s(:int, 4)),
                    s(:send,
                      s(:lvar, :row), :>,
                      s(:int, 0)))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :-,
                      s(:int, 5)))), nil),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :row), :>,
                    s(:int, 0))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :-,
                      s(:int, 6)))), nil),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :row), :<,
                    s(:int, 9))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :+,
                      s(:int, 6)))), nil),
              s(:if,
                s(:begin,
                  s(:and,
                    s(:send,
                      s(:lvar, :col), :<,
                      s(:int, 4)),
                    s(:send,
                      s(:lvar, :row), :<,
                      s(:int, 9)))),
                s(:lvasgn, :board,
                  s(:send, nil, :flood_fill,
                    s(:lvar, :board),
                    s(:send,
                      s(:lvar, :location), :+,
                      s(:int, 7)))), nil))),
          s(:lvar, :board))),
      s(:def, :offsets,
        s(:args,
          s(:arg, :location)),
        s(:if,
          s(:send, nil, :is_even,
            s(:lvar, :location)),
          s(:block,
            s(:send,
              s(:ivar, :@even_offsets), :collect),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :value), :+,
              s(:lvar, :location))),
          s(:block,
            s(:send,
              s(:ivar, :@odd_offsets), :collect),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :value), :+,
              s(:lvar, :location))))),
      s(:def, :normalize_offsets,
        s(:args,
          s(:arg, :values)),
        s(:begin,
          s(:lvasgn, :min,
            s(:send,
              s(:lvar, :values), :min)),
          s(:lvasgn, :even_min,
            s(:send, nil, :is_even,
              s(:lvar, :min))),
          s(:lvasgn, :other_min,
            s(:if,
              s(:lvar, :even_min),
              s(:send,
                s(:lvar, :min), :+,
                s(:int, 6)),
              s(:send,
                s(:lvar, :min), :+,
                s(:int, 7)))),
          s(:lvasgn, :other_values,
            s(:block,
              s(:send,
                s(:lvar, :values), :collect),
              s(:args,
                s(:arg, :value)),
              s(:if,
                s(:send, nil, :is_even,
                  s(:lvar, :value)),
                s(:send,
                  s(:send,
                    s(:lvar, :value), :+,
                    s(:int, 6)), :-,
                  s(:lvar, :other_min)),
                s(:send,
                  s(:send,
                    s(:lvar, :value), :+,
                    s(:int, 7)), :-,
                  s(:lvar, :other_min))))),
          s(:block,
            s(:send,
              s(:lvar, :values), :collect!),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:lvar, :value), :-,
              s(:lvar, :min))),
          s(:if,
            s(:lvar, :even_min),
            s(:array,
              s(:lvar, :values),
              s(:lvar, :other_values)),
            s(:array,
              s(:lvar, :other_values),
              s(:lvar, :values))))),
      s(:def, :mask_for_offsets,
        s(:args,
          s(:arg, :offsets)),
        s(:begin,
          s(:lvasgn, :mask,
            s(:int, 0)),
          s(:block,
            s(:send,
              s(:lvar, :offsets), :each),
            s(:args,
              s(:arg, :value)),
            s(:lvasgn, :mask,
              s(:send,
                s(:lvar, :mask), :+,
                s(:begin,
                  s(:send,
                    s(:int, 1), :<<,
                    s(:lvar, :value)))))),
          s(:lvar, :mask))),
      s(:def, :start_adjust,
        s(:args,
          s(:arg, :directions)),
        s(:begin,
          s(:lvasgn, :south,
            s(:lvasgn, :east,
              s(:int, 0))),
          s(:block,
            s(:send,
              s(:lvar, :directions), :each),
            s(:args,
              s(:arg, :direction)),
            s(:begin,
              s(:if,
                s(:begin,
                  s(:or,
                    s(:or,
                      s(:send,
                        s(:lvar, :direction), :==,
                        s(:sym, :sw)),
                      s(:send,
                        s(:lvar, :direction), :==,
                        s(:sym, :nw))),
                    s(:send,
                      s(:lvar, :direction), :==,
                      s(:sym, :west)))),
                s(:op_asgn,
                  s(:lvasgn, :east), :+,
                  s(:int, 1)), nil),
              s(:if,
                s(:begin,
                  s(:or,
                    s(:send,
                      s(:lvar, :direction), :==,
                      s(:sym, :nw)),
                    s(:send,
                      s(:lvar, :direction), :==,
                      s(:sym, :ne)))),
                s(:op_asgn,
                  s(:lvasgn, :south), :+,
                  s(:int, 1)), nil))),
          s(:send,
            s(:send,
              s(:lvar, :south), :*,
              s(:int, 6)), :+,
            s(:lvar, :east)))),
      s(:def, :get_values,
        s(:args,
          s(:arg, :directions)),
        s(:begin,
          s(:lvasgn, :start,
            s(:send, nil, :start_adjust,
              s(:lvar, :directions))),
          s(:lvasgn, :values,
            s(:array,
              s(:lvar, :start))),
          s(:block,
            s(:send,
              s(:lvar, :directions), :each),
            s(:args,
              s(:arg, :direction)),
            s(:begin,
              s(:if,
                s(:begin,
                  s(:send,
                    s(:send,
                      s(:lvar, :start), :%,
                      s(:int, 12)), :>=,
                    s(:int, 6))),
                s(:op_asgn,
                  s(:lvasgn, :start), :+,
                  s(:send,
                    s(:cvar, :@@rotation_odd_adder), :[],
                    s(:lvar, :direction))),
                s(:op_asgn,
                  s(:lvasgn, :start), :+,
                  s(:send,
                    s(:cvar, :@@rotation_even_adder), :[],
                    s(:lvar, :direction)))),
              s(:op_asgn,
                s(:lvasgn, :values), :+,
                s(:array,
                  s(:lvar, :start))))),
          s(:send,
            s(:lvar, :values), :uniq))))),
  s(:class,
    s(:const, nil, :Piece), nil,
    s(:begin,
      s(:send, nil, :attr_reader,
        s(:sym, :rotations),
        s(:sym, :type),
        s(:sym, :masks)),
      s(:send, nil, :attr_accessor,
        s(:sym, :placed)),
      s(:cvasgn, :@@flip_converter,
        s(:hash,
          s(:pair,
            s(:sym, :west),
            s(:sym, :west)),
          s(:pair,
            s(:sym, :east),
            s(:sym, :east)),
          s(:pair,
            s(:sym, :nw),
            s(:sym, :sw)),
          s(:pair,
            s(:sym, :ne),
            s(:sym, :se)),
          s(:pair,
            s(:sym, :sw),
            s(:sym, :nw)),
          s(:pair,
            s(:sym, :se),
            s(:sym, :ne)))),
      s(:cvasgn, :@@rotate_converter,
        s(:hash,
          s(:pair,
            s(:sym, :west),
            s(:sym, :nw)),
          s(:pair,
            s(:sym, :east),
            s(:sym, :se)),
          s(:pair,
            s(:sym, :nw),
            s(:sym, :ne)),
          s(:pair,
            s(:sym, :ne),
            s(:sym, :east)),
          s(:pair,
            s(:sym, :sw),
            s(:sym, :west)),
          s(:pair,
            s(:sym, :se),
            s(:sym, :sw)))),
      s(:def, :initialize,
        s(:args,
          s(:arg, :directions),
          s(:arg, :type)),
        s(:begin,
          s(:ivasgn, :@type,
            s(:lvar, :type)),
          s(:ivasgn, :@rotations,
            s(:send,
              s(:const, nil, :Array), :new)),
          s(:ivasgn, :@map,
            s(:hash)),
          s(:send, nil, :generate_rotations,
            s(:lvar, :directions)),
          s(:block,
            s(:send,
              s(:lvar, :directions), :collect!),
            s(:args,
              s(:arg, :value)),
            s(:send,
              s(:cvar, :@@flip_converter), :[],
              s(:lvar, :value))),
          s(:send, nil, :generate_rotations,
            s(:lvar, :directions)),
          s(:ivasgn, :@masks,
            s(:send,
              s(:const, nil, :Array), :new)),
          s(:block,
            s(:send,
              s(:int, 0), :upto,
              s(:int, 59)),
            s(:args,
              s(:arg, :i)),
            s(:begin,
              s(:lvasgn, :even,
                s(:true)),
              s(:send,
                s(:ivar, :@masks), :[]=,
                s(:lvar, :i),
                s(:block,
                  s(:send,
                    s(:ivar, :@rotations), :collect),
                  s(:args,
                    s(:arg, :rotation)),
                  s(:begin,
                    s(:lvasgn, :mask,
                      s(:send,
                        s(:send,
                          s(:lvar, :rotation), :start_masks), :[],
                        s(:lvar, :i))),
                    s(:if,
                      s(:begin,
                        s(:lvar, :mask)),
                      s(:send,
                        s(:ivar, :@map), :[]=,
                        s(:send,
                          s(:lvar, :mask), :[],
                          s(:int, 0)),
                        s(:array,
                          s(:lvar, :i),
                          s(:lvar, :rotation))), nil),
                    s(:or,
                      s(:lvar, :mask),
                      s(:nil))))),
              s(:send,
                s(:send,
                  s(:ivar, :@masks), :[],
                  s(:lvar, :i)), :compact!))))),
      s(:def, :generate_rotations,
        s(:args,
          s(:arg, :directions)),
        s(:block,
          s(:send,
            s(:int, 6), :times),
          s(:args),
          s(:begin,
            s(:send,
              s(:send, nil, :rotations), :push,
              s(:send,
                s(:const, nil, :Rotation), :new,
                s(:lvar, :directions))),
            s(:block,
              s(:send,
                s(:lvar, :directions), :collect!),
              s(:args,
                s(:arg, :value)),
              s(:send,
                s(:cvar, :@@rotate_converter), :[],
                s(:lvar, :value)))))),
      s(:def, :fill_string,
        s(:args,
          s(:arg, :board_string)),
        s(:begin,
          s(:masgn,
            s(:mlhs,
              s(:lvasgn, :location),
              s(:lvasgn, :rotation)),
            s(:send,
              s(:ivar, :@map), :[],
              s(:ivar, :@placed))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :rotation), :offsets,
                s(:lvar, :location)), :each),
            s(:args,
              s(:arg, :offset)),
            s(:begin,
              s(:masgn,
                s(:mlhs,
                  s(:lvasgn, :row),
                  s(:lvasgn, :col)),
                s(:send,
                  s(:lvar, :offset), :divmod,
                  s(:int, 6))),
              s(:send,
                s(:lvar, :board_string), :[]=,
                s(:send,
                  s(:send,
                    s(:lvar, :row), :*,
                    s(:int, 5)), :+,
                  s(:lvar, :col)),
                s(:int, 1),
                s(:send,
                  s(:ivar, :@type), :to_s)))))))),
  s(:def, :blank_board,
    s(:args),
    s(:int, 73219665713206265888)),
  s(:def, :full_board,
    s(:args),
    s(:int, 73786976294838206463)),
  s(:def, :is_even,
    s(:args,
      s(:arg, :location)),
    s(:send,
      s(:begin,
        s(:send,
          s(:lvar, :location), :%,
          s(:int, 12))), :<,
      s(:int, 6))),
  s(:def, :create_collector_support,
    s(:args),
    s(:begin,
      s(:lvasgn, :odd_map,
        s(:array,
          s(:int, 3),
          s(:int, 6),
          s(:int, 12),
          s(:int, 24),
          s(:int, 16))),
      s(:lvasgn, :even_map,
        s(:array,
          s(:int, 1),
          s(:int, 3),
          s(:int, 6),
          s(:int, 12),
          s(:int, 24))),
      s(:lvasgn, :all_odds,
        s(:send,
          s(:const, nil, :Array), :new,
          s(:int, 32))),
      s(:lvasgn, :all_evens,
        s(:send,
          s(:const, nil, :Array), :new,
          s(:int, 32))),
      s(:lvasgn, :bit_counts,
        s(:send,
          s(:const, nil, :Array), :new,
          s(:int, 32))),
      s(:lvasgn, :new_regions,
        s(:send,
          s(:const, nil, :Array), :new,
          s(:int, 32))),
      s(:block,
        s(:send,
          s(:int, 0), :upto,
          s(:int, 31)),
        s(:args,
          s(:arg, :i)),
        s(:begin,
          s(:lvasgn, :bit_count,
            s(:lvasgn, :odd,
              s(:lvasgn, :even,
                s(:int, 0)))),
          s(:block,
            s(:send,
              s(:int, 0), :upto,
              s(:int, 4)),
            s(:args,
              s(:arg, :bit)),
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :i), :[],
                    s(:lvar, :bit)), :==,
                  s(:int, 1))),
              s(:begin,
                s(:op_asgn,
                  s(:lvasgn, :bit_count), :+,
                  s(:int, 1)),
                s(:op_asgn,
                  s(:lvasgn, :odd), :|,
                  s(:send,
                    s(:lvar, :odd_map), :[],
                    s(:lvar, :bit))),
                s(:op_asgn,
                  s(:lvasgn, :even), :|,
                  s(:send,
                    s(:lvar, :even_map), :[],
                    s(:lvar, :bit)))), nil)),
          s(:send,
            s(:lvar, :all_odds), :[]=,
            s(:lvar, :i),
            s(:lvar, :odd)),
          s(:send,
            s(:lvar, :all_evens), :[]=,
            s(:lvar, :i),
            s(:lvar, :even)),
          s(:send,
            s(:lvar, :bit_counts), :[]=,
            s(:lvar, :i),
            s(:lvar, :bit_count)),
          s(:send,
            s(:lvar, :new_regions), :[]=,
            s(:lvar, :i),
            s(:send, nil, :create_regions,
              s(:lvar, :i))))),
      s(:gvasgn, :$converter,
        s(:array)),
      s(:block,
        s(:send,
          s(:int, 10), :times),
        s(:args,
          s(:arg, :row)),
        s(:send,
          s(:gvar, :$converter), :push,
          s(:if,
            s(:begin,
              s(:send,
                s(:send,
                  s(:lvar, :row), :%,
                  s(:int, 2)), :==,
                s(:int, 0))),
            s(:lvar, :all_evens),
            s(:lvar, :all_odds)))),
      s(:gvasgn, :$bit_counts,
        s(:lvar, :bit_counts)),
      s(:gvasgn, :$regions,
        s(:block,
          s(:send,
            s(:lvar, :new_regions), :collect),
          s(:args,
            s(:arg, :set)),
          s(:block,
            s(:send,
              s(:lvar, :set), :collect),
            s(:args,
              s(:arg, :value)),
            s(:array,
              s(:lvar, :value),
              s(:send,
                s(:lvar, :bit_counts), :[],
                s(:lvar, :value)),
              s(:lvar, :value))))))),
  s(:def, :prunable,
    s(:args,
      s(:arg, :board),
      s(:arg, :location),
      s(:optarg, :slotting,
        s(:false))),
    s(:begin,
      s(:lvasgn, :collectors,
        s(:array)),
      s(:block,
        s(:send,
          s(:send,
            s(:begin,
              s(:send,
                s(:lvar, :location), :/,
                s(:int, 6))), :to_i), :upto,
          s(:int, 9)),
        s(:args,
          s(:arg, :row_on)),
        s(:begin,
          s(:lvasgn, :regions,
            s(:send,
              s(:gvar, :$regions), :[],
              s(:send,
                s(:begin,
                  s(:send,
                    s(:lvar, :board), :>>,
                    s(:begin,
                      s(:send,
                        s(:lvar, :row_on), :*,
                        s(:int, 6))))), :&,
                s(:int, 31)))),
          s(:lvasgn, :converter,
            s(:send,
              s(:gvar, :$converter), :[],
              s(:lvar, :row_on))),
          s(:lvasgn, :initial_collector_count,
            s(:send,
              s(:lvar, :collectors), :length)),
          s(:block,
            s(:send,
              s(:lvar, :regions), :each),
            s(:args,
              s(:arg, :region)),
            s(:begin,
              s(:lvasgn, :collector_found,
                s(:nil)),
              s(:lvasgn, :region_mask,
                s(:send,
                  s(:lvar, :region), :[],
                  s(:int, 2))),
              s(:block,
                s(:send,
                  s(:lvar, :initial_collector_count), :times),
                s(:args,
                  s(:arg, :collector_num)),
                s(:begin,
                  s(:lvasgn, :collector,
                    s(:send,
                      s(:lvar, :collectors), :[],
                      s(:lvar, :collector_num))),
                  s(:if,
                    s(:begin,
                      s(:lvar, :collector)),
                    s(:begin,
                      s(:lvasgn, :collector_mask,
                        s(:send,
                          s(:lvar, :collector), :[],
                          s(:int, 0))),
                      s(:if,
                        s(:begin,
                          s(:send,
                            s(:send,
                              s(:lvar, :collector_mask), :&,
                              s(:lvar, :region_mask)), :!=,
                            s(:int, 0))),
                        s(:if,
                          s(:begin,
                            s(:lvar, :collector_found)),
                          s(:begin,
                            s(:op_asgn,
                              s(:send,
                                s(:lvar, :collector_found), :[],
                                s(:int, 0)), :|,
                              s(:lvar, :collector_mask)),
                            s(:op_asgn,
                              s(:send,
                                s(:lvar, :collector_found), :[],
                                s(:int, 1)), :+,
                              s(:send,
                                s(:lvar, :collector), :[],
                                s(:int, 1))),
                            s(:op_asgn,
                              s(:send,
                                s(:lvar, :collector_found), :[],
                                s(:int, 2)), :|,
                              s(:send,
                                s(:lvar, :collector), :[],
                                s(:int, 2))),
                            s(:send,
                              s(:lvar, :collectors), :[]=,
                              s(:lvar, :collector_num),
                              s(:nil))),
                          s(:begin,
                            s(:lvasgn, :collector_found,
                              s(:lvar, :collector)),
                            s(:op_asgn,
                              s(:send,
                                s(:lvar, :collector), :[],
                                s(:int, 1)), :+,
                              s(:send,
                                s(:lvar, :region), :[],
                                s(:int, 1))),
                            s(:op_asgn,
                              s(:send,
                                s(:lvar, :collector), :[],
                                s(:int, 2)), :|,
                              s(:lvar, :region_mask)))), nil)), nil))),
              s(:if,
                s(:begin,
                  s(:send,
                    s(:lvar, :collector_found), :==,
                    s(:nil))),
                s(:send,
                  s(:lvar, :collectors), :push,
                  s(:send,
                    s(:const, nil, :Array), :new,
                    s(:lvar, :region))), nil))),
          s(:block,
            s(:send,
              s(:send,
                s(:lvar, :collectors), :length), :times),
            s(:args,
              s(:arg, :collector_num)),
            s(:begin,
              s(:lvasgn, :collector,
                s(:send,
                  s(:lvar, :collectors), :[],
                  s(:lvar, :collector_num))),
              s(:if,
                s(:begin,
                  s(:lvar, :collector)),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:send,
                        s(:lvar, :collector), :[],
                        s(:int, 2)), :==,
                      s(:int, 0))),
                  s(:begin,
                    s(:if,
                      s(:begin,
                        s(:send,
                          s(:send,
                            s(:send,
                              s(:lvar, :collector), :[],
                              s(:int, 1)), :%,
                            s(:int, 5)), :!=,
                          s(:int, 0))),
                      s(:return,
                        s(:true)), nil),
                    s(:send,
                      s(:lvar, :collectors), :[]=,
                      s(:lvar, :collector_num),
                      s(:nil))),
                  s(:begin,
                    s(:if,
                      s(:begin,
                        s(:and,
                          s(:send,
                            s(:send,
                              s(:lvar, :collector), :[],
                              s(:int, 2)), :==,
                            s(:int, 31)),
                          s(:send,
                            s(:lvar, :slotting), :!))),
                      s(:return,
                        s(:false)), nil),
                    s(:send,
                      s(:lvar, :collector), :[]=,
                      s(:int, 0),
                      s(:send,
                        s(:lvar, :converter), :[],
                        s(:send,
                          s(:lvar, :collector), :[],
                          s(:int, 2)))),
                    s(:send,
                      s(:lvar, :collector), :[]=,
                      s(:int, 2),
                      s(:int, 0)))), nil))),
          s(:send,
            s(:lvar, :collectors), :compact!))),
      s(:if,
        s(:begin,
          s(:send,
            s(:send,
              s(:lvar, :collectors), :length), :<=,
            s(:int, 1))),
        s(:return,
          s(:false)), nil),
      s(:block,
        s(:send,
          s(:lvar, :collectors), :any?),
        s(:args,
          s(:arg, :collector)),
        s(:send,
          s(:begin,
            s(:send,
              s(:send,
                s(:lvar, :collector), :[],
                s(:int, 1)), :%,
              s(:int, 5))), :!=,
          s(:int, 0))))),
  s(:def, :create_regions,
    s(:args,
      s(:arg, :value)),
    s(:begin,
      s(:lvasgn, :regions,
        s(:array)),
      s(:lvasgn, :cur_region,
        s(:int, 0)),
      s(:block,
        s(:send,
          s(:int, 5), :times),
        s(:args,
          s(:arg, :bit)),
        s(:if,
          s(:begin,
            s(:send,
              s(:send,
                s(:lvar, :value), :[],
                s(:lvar, :bit)), :==,
              s(:int, 0))),
          s(:op_asgn,
            s(:lvasgn, :cur_region), :|,
            s(:send,
              s(:int, 1), :<<,
              s(:lvar, :bit))),
          s(:if,
            s(:begin,
              s(:send,
                s(:lvar, :cur_region), :!=,
                s(:int, 0))),
            s(:begin,
              s(:send,
                s(:lvar, :regions), :push,
                s(:lvar, :cur_region)),
              s(:lvasgn, :cur_region,
                s(:int, 0))), nil))),
      s(:if,
        s(:begin,
          s(:send,
            s(:lvar, :cur_region), :!=,
            s(:int, 0))),
        s(:send,
          s(:lvar, :regions), :push,
          s(:lvar, :cur_region)), nil),
      s(:lvar, :regions))),
  s(:def, :find_all,
    s(:args),
    s(:begin,
      s(:send, nil, :find_top,
        s(:int, 1)),
      s(:send, nil, :find_top,
        s(:int, 0)),
      s(:send, nil, :print_results))),
  s(:def, :print_results,
    s(:args),
    s(:begin,
      s(:send, nil, :print,
        s(:dstr,
          s(:begin,
            s(:ivar, :@boards_found)),
          s(:str, " solutions found\n\n"))),
      s(:send, nil, :print_full_board,
        s(:ivar, :@min_board)),
      s(:send, nil, :print,
        s(:str, "\n")),
      s(:send, nil, :print_full_board,
        s(:ivar, :@max_board)),
      s(:send, nil, :print,
        s(:str, "\n")))),
  s(:def, :find_top,
    s(:args,
      s(:arg, :rotation_skip)),
    s(:begin,
      s(:lvasgn, :board,
        s(:send, nil, :blank_board)),
      s(:block,
        s(:send,
          s(:begin,
            s(:send,
              s(:send,
                s(:ivar, :@pieces), :length), :-,
              s(:int, 1))), :times),
        s(:args),
        s(:begin,
          s(:lvasgn, :piece,
            s(:send,
              s(:ivar, :@pieces), :shift)),
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :piece), :masks), :[],
                s(:int, 0)), :each),
            s(:args,
              s(:arg, :mask),
              s(:arg, :imask),
              s(:arg, :cmask)),
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:begin,
                      s(:op_asgn,
                        s(:lvasgn, :rotation_skip), :+,
                        s(:int, 1))), :%,
                    s(:int, 2)), :==,
                  s(:int, 0))),
              s(:begin,
                s(:send,
                  s(:lvar, :piece), :placed=,
                  s(:lvar, :mask)),
                s(:send, nil, :find,
                  s(:int, 1),
                  s(:int, 1),
                  s(:send,
                    s(:lvar, :board), :|,
                    s(:lvar, :mask)))), nil)),
          s(:send,
            s(:ivar, :@pieces), :push,
            s(:lvar, :piece)))),
      s(:lvasgn, :piece,
        s(:send,
          s(:ivar, :@pieces), :shift)),
      s(:send,
        s(:ivar, :@pieces), :push,
        s(:lvar, :piece)))),
  s(:def, :find,
    s(:args,
      s(:arg, :start_location),
      s(:arg, :placed),
      s(:arg, :board)),
    s(:begin,
      s(:while,
        s(:send,
          s(:send,
            s(:lvar, :board), :[],
            s(:lvar, :start_location)), :==,
          s(:int, 1)),
        s(:op_asgn,
          s(:lvasgn, :start_location), :+,
          s(:int, 1))),
      s(:block,
        s(:send,
          s(:send,
            s(:ivar, :@pieces), :length), :times),
        s(:args),
        s(:begin,
          s(:lvasgn, :piece,
            s(:send,
              s(:ivar, :@pieces), :shift)),
          s(:block,
            s(:send,
              s(:send,
                s(:send,
                  s(:lvar, :piece), :masks), :[],
                s(:lvar, :start_location)), :each),
            s(:args,
              s(:arg, :mask),
              s(:arg, :imask),
              s(:arg, :cmask)),
            s(:if,
              s(:begin,
                s(:send,
                  s(:send,
                    s(:lvar, :board), :&,
                    s(:lvar, :cmask)), :==,
                  s(:lvar, :imask))),
              s(:begin,
                s(:send,
                  s(:lvar, :piece), :placed=,
                  s(:lvar, :mask)),
                s(:if,
                  s(:begin,
                    s(:send,
                      s(:lvar, :placed), :==,
                      s(:int, 9))),
                  s(:send, nil, :add_board),
                  s(:send, nil, :find,
                    s(:send,
                      s(:lvar, :start_location), :+,
                      s(:int, 1)),
                    s(:send,
                      s(:lvar, :placed), :+,
                      s(:int, 1)),
                    s(:send,
                      s(:lvar, :board), :|,
                      s(:lvar, :mask))))), nil)),
          s(:send,
            s(:ivar, :@pieces), :push,
            s(:lvar, :piece)))))),
  s(:def, :print_full_board,
    s(:args,
      s(:arg, :board_string)),
    s(:block,
      s(:send,
        s(:int, 10), :times),
      s(:args,
        s(:arg, :row)),
      s(:begin,
        s(:if,
          s(:begin,
            s(:send,
              s(:send,
                s(:lvar, :row), :%,
                s(:int, 2)), :==,
              s(:int, 1))),
          s(:send, nil, :print,
            s(:str, " ")), nil),
        s(:block,
          s(:send,
            s(:int, 5), :times),
          s(:args,
            s(:arg, :col)),
          s(:send, nil, :print,
            s(:dstr,
              s(:begin,
                s(:send,
                  s(:lvar, :board_string), :[],
                  s(:send,
                    s(:send,
                      s(:lvar, :row), :*,
                      s(:int, 5)), :+,
                    s(:lvar, :col)),
                  s(:int, 1))),
              s(:str, " ")))),
        s(:send, nil, :print,
          s(:str, "\n"))))),
  s(:def, :add_board,
    s(:args),
    s(:begin,
      s(:lvasgn, :board_string,
        s(:str, "99999999999999999999999999999999999999999999999999")),
      s(:block,
        s(:send,
          s(:ivar, :@all_pieces), :each),
        s(:args,
          s(:arg, :piece)),
        s(:send,
          s(:lvar, :piece), :fill_string,
          s(:lvar, :board_string))),
      s(:send, nil, :save,
        s(:lvar, :board_string)),
      s(:send, nil, :save,
        s(:send,
          s(:lvar, :board_string), :reverse)))),
  s(:def, :save,
    s(:args,
      s(:arg, :board_string)),
    s(:if,
      s(:begin,
        s(:send,
          s(:send,
            s(:ivar, :@all_boards), :[],
            s(:lvar, :board_string)), :==,
          s(:nil))),
      s(:begin,
        s(:if,
          s(:begin,
            s(:send,
              s(:lvar, :board_string), :<,
              s(:ivar, :@min_board))),
          s(:ivasgn, :@min_board,
            s(:lvar, :board_string)), nil),
        s(:if,
          s(:begin,
            s(:send,
              s(:lvar, :board_string), :>,
              s(:ivar, :@max_board))),
          s(:ivasgn, :@max_board,
            s(:lvar, :board_string)), nil),
        s(:send,
          s(:ivar, :@all_boards), :store,
          s(:lvar, :board_string),
          s(:true)),
        s(:op_asgn,
          s(:ivasgn, :@boards_found), :+,
          s(:int, 1)),
        s(:if,
          s(:begin,
            s(:send,
              s(:ivar, :@boards_found), :==,
              s(:ivar, :@stop_count))),
          s(:begin,
            s(:send, nil, :print_results),
            s(:send, nil, :exit,
              s(:int, 0))), nil)), nil)),
  s(:send, nil, :create_collector_support),
  s(:ivasgn, :@pieces,
    s(:array,
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :nw),
          s(:sym, :ne),
          s(:sym, :east),
          s(:sym, :east)),
        s(:int, 2)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :ne),
          s(:sym, :se),
          s(:sym, :east),
          s(:sym, :ne)),
        s(:int, 7)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :ne),
          s(:sym, :east),
          s(:sym, :ne),
          s(:sym, :nw)),
        s(:int, 1)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :east),
          s(:sym, :sw),
          s(:sym, :sw),
          s(:sym, :se)),
        s(:int, 6)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :east),
          s(:sym, :ne),
          s(:sym, :se),
          s(:sym, :ne)),
        s(:int, 5)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :east),
          s(:sym, :east),
          s(:sym, :east),
          s(:sym, :se)),
        s(:int, 0)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :ne),
          s(:sym, :nw),
          s(:sym, :se),
          s(:sym, :east),
          s(:sym, :se)),
        s(:int, 4)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :se),
          s(:sym, :se),
          s(:sym, :se),
          s(:sym, :west)),
        s(:int, 9)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :se),
          s(:sym, :se),
          s(:sym, :east),
          s(:sym, :se)),
        s(:int, 8)),
      s(:send,
        s(:const, nil, :Piece), :new,
        s(:array,
          s(:sym, :east),
          s(:sym, :east),
          s(:sym, :sw),
          s(:sym, :se)),
        s(:int, 3)))),
  s(:ivasgn, :@all_pieces,
    s(:send,
      s(:const, nil, :Array), :new,
      s(:ivar, :@pieces))),
  s(:ivasgn, :@min_board,
    s(:str, "99999999999999999999999999999999999999999999999999")),
  s(:ivasgn, :@max_board,
    s(:str, "00000000000000000000000000000000000000000000000000")),
  s(:ivasgn, :@stop_count,
    s(:or,
      s(:send,
        s(:send,
          s(:const, nil, :ARGV), :[],
          s(:int, 0)), :to_i),
      s(:int, 2089))),
  s(:ivasgn, :@all_boards,
    s(:hash)),
  s(:ivasgn, :@boards_found,
    s(:int, 0)),
  s(:send, nil, :find_all))
