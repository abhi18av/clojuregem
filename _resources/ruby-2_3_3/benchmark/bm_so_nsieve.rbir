s(:begin,
  s(:def, :sieve,
    s(:args,
      s(:arg, :m)),
    s(:begin,
      s(:lvasgn, :flags,
        s(:send,
          s(:send,
            s(:const, nil, :Flags), :dup), :[],
          s(:int, 0),
          s(:lvar, :m))),
      s(:lvasgn, :count,
        s(:int, 0)),
      s(:lvasgn, :pmax,
        s(:send,
          s(:lvar, :m), :-,
          s(:int, 1))),
      s(:lvasgn, :p,
        s(:int, 2)),
      s(:while,
        s(:send,
          s(:lvar, :p), :<=,
          s(:lvar, :pmax)),
        s(:begin,
          s(:if,
            s(:send,
              s(:send,
                s(:lvar, :flags), :[],
                s(:lvar, :p)), :zero?), nil,
            s(:begin,
              s(:op_asgn,
                s(:lvasgn, :count), :+,
                s(:int, 1)),
              s(:lvasgn, :mult,
                s(:lvar, :p)),
              s(:while,
                s(:send,
                  s(:lvar, :mult), :<=,
                  s(:lvar, :pmax)),
                s(:begin,
                  s(:send,
                    s(:lvar, :flags), :[]=,
                    s(:lvar, :mult),
                    s(:int, 0)),
                  s(:op_asgn,
                    s(:lvasgn, :mult), :+,
                    s(:lvar, :p)))))),
          s(:op_asgn,
            s(:lvasgn, :p), :+,
            s(:int, 1)))),
      s(:lvar, :count))),
  s(:lvasgn, :n,
    s(:int, 9)),
  s(:casgn, nil, :Flags,
    s(:send,
      s(:begin,
        s(:send,
          s(:str, "\u0001"), :*,
          s(:begin,
            s(:send,
              s(:send,
                s(:int, 2), :**,
                s(:lvar, :n)), :*,
              s(:int, 10000))))), :unpack,
      s(:str, "c*"))),
  s(:block,
    s(:send,
      s(:lvar, :n), :downto,
      s(:send,
        s(:lvar, :n), :-,
        s(:int, 2))),
    s(:args,
      s(:arg, :exponent)),
    s(:begin,
      s(:if,
        s(:send,
          s(:lvar, :exponent), :<,
          s(:int, 0)),
        s(:break), nil),
      s(:lvasgn, :m,
        s(:send,
          s(:begin,
            s(:send,
              s(:int, 1), :<<,
              s(:lvar, :exponent))), :*,
          s(:int, 10000))),
      s(:lvasgn, :count,
        s(:send, nil, :sieve,
          s(:lvar, :m))),
      s(:send, nil, :printf,
        s(:str, "Primes up to %8d %8d\n"),
        s(:lvar, :m),
        s(:lvar, :count)))))
